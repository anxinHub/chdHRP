<?xml version="1.0" encoding="UTF-8" ?>
<root>

	<sql id="PKG_ASS_REPORT" type="proc"><![CDATA[
	CREATE OR REPLACE PACKAGE pkg_ass_report AS

  /*-------------------------------------------------------------------------*/
  /* 变量声明区                                                               */
  /* V_FLAG     1：原值/累计折旧 增加                                         */
  /*            2 原值/累计折旧 减少                                          */
  /*            3 原值变动/累计直接变动累计 增加                               */
  /*            4 原值变动/累计折旧变动累计 减少                               */
  /*            5 本期原值变动/累计直接变动 增加                               */
  /*            6 本期原值变动/累计折旧变动 减少                               */
  /*                                                                         */
  /*-------------------------------------------------------------------------*/

  --定义卡片初始化结构
  TYPE t_card IS RECORD(
     V_ASS_TYPE_ID ASS_TYPE_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_R_INIT      ASS_CARD_SPECIAL.Price%TYPE --原值 增加
    ,V_L_INIT      ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 增加
    ,V_R_ADD       ASS_CARD_SPECIAL.Price%TYPE --原值 增加
    ,V_L_ADD       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 增加
    ,V_R_DEC       ASS_CARD_SPECIAL.Price%TYPE --原值 减少
    ,V_L_DEC       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 减少
    );

  --定义卡片初始化结构
  TYPE t_card_by_source IS RECORD(
     V_ASS_TYPE_ID ASS_TYPE_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_SOURCE_ID   ASS_RESOURCE_SPECIAL.SOURCE_ID%TYPE --资金来源ID
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_R_INIT      ASS_CARD_SPECIAL.Price%TYPE --原值 增加
    ,V_L_INIT      ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 增加
    ,V_R_ADD       ASS_CARD_SPECIAL.Price%TYPE --原值 增加
    ,V_L_ADD       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 增加
    ,V_R_DEC       ASS_CARD_SPECIAL.Price%TYPE --原值 减少
    ,V_L_DEC       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 减少
    );
  --定义卡片初始化结构
  TYPE t_card_by_dept IS RECORD(
     V_DEPT_ID     HOS_DEPT_DICT.DEPT_ID%TYPE --科室ID
    ,V_DEPT_NO     HOS_DEPT_DICT.DEPT_NO%TYPE --科室NO
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_R_INIT      ASS_CARD_SPECIAL.Price%TYPE --原值 增加
    ,V_L_INIT      ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 增加
    ,V_R_ADD       ASS_CARD_SPECIAL.Price%TYPE --原值 增加
    ,V_L_ADD       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 增加
    ,V_R_DEC       ASS_CARD_SPECIAL.Price%TYPE --原值 减少
    ,V_L_DEC       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧 减少
    );
  --定义卡片初始化结构
  TYPE t_card_main IS RECORD(
     V_ASS_TYPE_ID ASS_TYPE_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_R           ASS_CARD_SPECIAL.Price%TYPE --原值
    ,V_L           ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    ,V_FLAG        INTEGER -- 类型标识  1：原值/累计折旧 增加  2 原值/累计折旧 减少 3 原值变动/累计直接变动累计 增加 4 原值变动/累计折旧变动累计 减少 5 本期原值变动/累计直接变动 增加 6 本期原值变动/累计折旧变动 减少
    ,V_CARD_R      ASS_CARD_SPECIAL.Price%TYPE --卡片原值 V_FLAG=  3 4 用
    ,V_CARD_L      ASS_CARD_SPECIAL.depre_money%TYPE --卡片累计折旧 V_FLAG=  3 4 用
    );
  --定义卡片初始化结构
  TYPE t_card_source_main IS RECORD(
     V_ASS_TYPE_ID ASS_TYPE_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_SOURCE_ID   ASS_RESOURCE_SPECIAL.SOURCE_ID%TYPE --资金来源
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_R           ASS_CARD_SPECIAL.Price%TYPE --原值
    ,V_L           ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    ,V_FLAG        INTEGER -- 类型标识  1：原值/累计折旧 增加  2 原值/累计折旧 减少 3 原值变动/累计直接变动累计 增加 4 原值变动/累计折旧变动累计 减少 5 本期原值变动/累计直接变动 增加 6 本期原值变动/累计折旧变动 减少
    ,V_CARD_R      ASS_CARD_SPECIAL.Price%TYPE --卡片原值 V_FLAG=  3 4 用
    ,V_CARD_L      ASS_CARD_SPECIAL.depre_money%TYPE --卡片累计折旧 V_FLAG=  3 4 用
    );
  --定义卡片初始化结构
  TYPE t_card_detail IS RECORD(
     V_ASS_TYPE_ID ASS_TYPE_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_R           ASS_CARD_SPECIAL.Price%TYPE --原值
    ,V_L           ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧

    );
  --定义卡片初始化结构
  TYPE t_card_dept IS RECORD(
     V_DEPT_ID     HOS_DEPT_DICT.DEPT_ID%TYPE --科室ID
    ,V_DEPT_NO     HOS_DEPT_DICT.DEPT_NO%TYPE --科室NO
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_R           ASS_CARD_SPECIAL.Price%TYPE --原值
    ,V_L           ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    ,V_M           ASS_CARD_SPECIAL.Price%TYPE --分摊比例
    ,V_D           ASS_CARD_SPECIAL.Price%TYPE --分摊总额
    ,V_FLAG        INTEGER -- 类型标识  1：原值/累计折旧 增加  2 原值/累计折旧 减少 3 原值变动/累计直接变动累计 增加 4 原值变动/累计折旧变动累计 减少 5 本期原值变动/累计直接变动 增加 6 本期原值变动/累计折旧变动 减少
    ,V_CARD_R      ASS_CARD_SPECIAL.Price%TYPE --卡片原值 V_FLAG=  3 4 用
    ,V_CARD_L      ASS_CARD_SPECIAL.depre_money%TYPE --卡片累计折旧 V_FLAG=  3 4 用
    );

  --按分类统计报表
  TYPE t_card_type IS RECORD(
     V_ASS_TYPE_ID ASS_NO_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_R_BEGIN     ASS_CARD_SPECIAL.depre_money%TYPE --原值
    ,V_R_ADD       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    ,V_R_DEC       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    ,V_L_BEGIN     ASS_CARD_SPECIAL.depre_money%TYPE --原值
    ,V_L_ADD       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    ,V_L_DEC       ASS_CARD_SPECIAL.depre_money%TYPE --累计折旧
    );

  --原值变动
  TYPE type_change_rl IS RECORD(
     V_ASS_TYPE_ID ASS_NO_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_YEAR_MONTH  ASS_BUS_TYPE_DICT.BUS_TYPE_CODE%TYPE --统计年月
    ,V_FLAG        ASS_CARD_SPECIAL.IS_INIT%TYPE --原值 增加 1 减少 2
    ,V_IS_INIT     ASS_CARD_SPECIAL.IS_INIT%TYPE --是否是期初卡片
    ,V_R           ASS_CARD_SPECIAL.Price%TYPE --变动原值
    ,V_L           ASS_CARD_SPECIAL.depre_money%TYPE --变动累计折旧
    ,V_CARD_R      ASS_CARD_SPECIAL.Price%TYPE --卡片原值
    ,V_CARD_L      ASS_CARD_SPECIAL.depre_money%TYPE --卡片累计折旧
    );
  --原值变动
  TYPE type_change_rl_source IS RECORD(
     V_ASS_TYPE_ID ASS_NO_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_SOURCE_ID   ASS_RESOURCE_SPECIAL.SOURCE_ID%TYPE --资金来源
    ,V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型编码
    ,V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE --业务类型名称
    ,V_IN_OUT      INTEGER --业务类型 借贷  1 借  0 袋
    ,V_YEAR_MONTH  ASS_BUS_TYPE_DICT.BUS_TYPE_CODE%TYPE --统计年月
    ,V_FLAG        ASS_CARD_SPECIAL.IS_INIT%TYPE --原值 增加 1 减少 2
    ,V_IS_INIT     ASS_CARD_SPECIAL.IS_INIT%TYPE --是否是期初卡片
    ,V_R           ASS_CARD_SPECIAL.Price%TYPE --变动原值
    ,V_L           ASS_CARD_SPECIAL.depre_money%TYPE --变动累计折旧
    ,V_CARD_R      ASS_CARD_SPECIAL.Price%TYPE --卡片原值
    ,V_CARD_L      ASS_CARD_SPECIAL.depre_money%TYPE --卡片累计折旧
    );
  --本期折旧值
  TYPE type_depre_amount IS RECORD(
     V_ASS_TYPE_ID      ASS_NO_DICT.ASS_TYPE_ID%TYPE --资产分类ID
    ,V_ASS_CARD_NO      ASS_CARD_SPECIAL.ASS_CARD_NO%TYPE --卡片
    ,V_DEPT_ID          HOS_DEPT_DICT.DEPT_ID%TYPE --科室ID
    ,V_DEPT_NO          HOS_DEPT_DICT.DEPT_NO%TYPE --科室NO
    ,V_NOW_DEPRE_AMOUNT ass_depre_acc_house.Now_Depre_Amount%TYPE --本期折旧值
    ,V_ADD_DEPRE_AMOUNT ass_depre_acc_house.Add_Depre_Amount%TYPE --本期折旧值
    );
    
    
    
  TYPE t_cards IS TABLE OF t_card INDEX BY BINARY_INTEGER;
  TYPE t_cards_dept IS TABLE OF t_card_by_dept INDEX BY BINARY_INTEGER;
  TYPE t_cards_source IS TABLE OF t_card_by_source INDEX BY BINARY_INTEGER;

  TYPE t_card_mains IS TABLE OF t_card_main INDEX BY BINARY_INTEGER;
  TYPE t_card_source_mains IS TABLE OF t_card_source_main INDEX BY BINARY_INTEGER;
  TYPE t_card_details IS TABLE OF t_card_detail INDEX BY BINARY_INTEGER;
  TYPE t_card_dept_main IS TABLE OF t_card_dept INDEX BY BINARY_INTEGER;

  TYPE t_card_type_main IS TABLE OF t_card_type INDEX BY BINARY_INTEGER;
  TYPE t_card_type_change_main IS TABLE OF type_change_rl INDEX BY BINARY_INTEGER;
  TYPE t_card_type_change_source IS TABLE OF type_change_rl_source INDEX BY BINARY_INTEGER;
  TYPE type_depre_amount_main IS TABLE OF type_depre_amount INDEX BY BINARY_INTEGER;
  
  --资产分类原值变动
  TYPE type_change_price IS RECORD(
     V_ASS_TYPE_ID      ASS_NO_DICT.ASS_TYPE_ID%TYPE --资产分类ID
     ,V_CHANGE_PRICE     ASS_CARD_SPECIAL.Price%TYPE--卡片原值变动
    );
    
  TYPE t_change_price is table of type_change_price INDEX BY BINARY_INTEGER;
  
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_generate
  || 功能描述 ：资产报表生成 （资产月报表 原值变动表 资产变动表）
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_generate(prm_group_id  IN NUMBER --集团
                                    ,prm_hos_id    IN NUMBER --医院
                                    ,prm_copy_code IN VARCHAR2 --账套
                                    ,prm_acc_year  IN VARCHAR2 --年度
                                    ,prm_acc_month IN VARCHAR2 --月份
                                     );

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_init;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_house(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_special(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         );

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_general(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         );

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_other(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_inassets(prm_group_id  IN NUMBER --集团
                                         ,prm_hos_id    IN NUMBER --医院
                                         ,prm_copy_code IN VARCHAR2 --账套
                                         ,prm_acc_year  IN VARCHAR2 --年度
                                         ,prm_acc_month IN VARCHAR2 --月份
                                          );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_land(prm_group_id  IN NUMBER --集团
                                     ,prm_hos_id    IN NUMBER --医院
                                     ,prm_copy_code IN VARCHAR2 --账套
                                     ,prm_acc_year  IN VARCHAR2 --年度
                                     ,prm_acc_month IN VARCHAR2 --月份
                                      );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card(prm_group_id  IN NUMBER --集团
                                ,prm_hos_id    IN NUMBER --医院
                                ,prm_copy_code IN VARCHAR2 --账套
                                ,prm_acc_year  IN VARCHAR2 --年度
                                ,prm_acc_month IN VARCHAR2 --月份
                                 );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_change_init
  || 功能描述 ：截至到当前月资金变动总和以及当前月变动资金变动记录结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_change_init(prm_group_id  IN NUMBER --集团
                                       ,prm_hos_id    IN NUMBER --医院
                                       ,prm_copy_code IN VARCHAR2 --账套
                                       ,prm_acc_year  IN VARCHAR2 --年度
                                       ,prm_acc_month IN VARCHAR2 --月份
                                        );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_change
  || 功能描述 ：截至到当前月资金变动总和以及当前月变动资金变动记录结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_change(prm_group_id  IN NUMBER --集团
                                  ,prm_hos_id    IN NUMBER --医院
                                  ,prm_copy_code IN VARCHAR2 --账套
                                  ,prm_acc_year  IN VARCHAR2 --年度
                                  ,prm_acc_month IN VARCHAR2 --月份
                                   );

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type
  || 功能描述 ：截至到当前月资金变动总和以及当前月变动资金变动记录结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_type(prm_group_id  IN NUMBER --集团
                                ,prm_hos_id    IN NUMBER --医院
                                ,prm_copy_code IN VARCHAR2 --账套
                                ,prm_acc_year  IN VARCHAR2 --年度
                                ,prm_acc_month IN VARCHAR2 --月份
                                 );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_bustype
  || 功能描述 ：资产变动表  不包含期初和期末 期初期末结合资产月报表进行产出
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_type_bustype(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_dept
  || 功能描述 ：资产变动表  不包含期初和期末 期初期末结合资产月报表进行产出
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_dept(prm_group_id  IN NUMBER --集团
                                ,prm_hos_id    IN NUMBER --医院
                                ,prm_copy_code IN VARCHAR2 --账套
                                ,prm_acc_year  IN VARCHAR2 --年度
                                ,prm_acc_month IN VARCHAR2 --月份
                                 );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_source
  || 功能描述 ：资产变动表  不包含期初和期末 期初期末结合资产月报表进行产出
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_source(prm_group_id  IN NUMBER --集团
                                  ,prm_hos_id    IN NUMBER --医院
                                  ,prm_copy_code IN VARCHAR2 --账套
                                  ,prm_acc_year  IN VARCHAR2 --年度
                                  ,prm_acc_month IN VARCHAR2 --月份
                                   );
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_next_month
  || 功能描述 ：生成下个月的期初
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_next_month(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       );
END pkg_ass_report;
	
	]]></sql>
	<sql id="PKG_ASS_REPORT_BODY" type="proc"><![CDATA[
CREATE OR REPLACE PACKAGE BODY pkg_ass_report AS

  /*-------------------------------------------------------------------------*/
  /* 变量声明区                                                              */
  /*-------------------------------------------------------------------------*/
  g_init_date_house    VARCHAR2(20); --建账日期
  g_init_date_special  VARCHAR2(20); --建账日期
  g_init_date_general  VARCHAR2(20); --建账日期
  g_init_date_other    VARCHAR2(20); --建账日期
  g_init_date_inassets VARCHAR2(20); --建账日期
  g_init_date_land     VARCHAR2(20); --建账日期
  g_init_flag_house    INTEGER; --是否是建账年月
  g_init_flag_special  INTEGER; --是否是建账年月
  g_init_flag_general  INTEGER; --是否是建账年月
  g_init_flag_other    INTEGER; --是否是建账年月
  g_init_flag_inassets INTEGER; --是否是建账年月
  g_init_flag_land     INTEGER; --是否是建账年月

  g_begin_date VARCHAR2(20); --当月的开始时间
  g_end_date   VARCHAR2(20); --当月的结束日期

  --资产分类
  g_t_cards        t_cards; --存储卡片
  g_t_cards_type   t_cards; --存储卡片
  g_t_cards_dept   t_cards_dept; --存储卡片
  g_t_cards_source t_cards_source; --存储卡片

  g_t_card_main        t_card_mains; --存储卡片
  g_t_card_dept_main   t_card_dept_main; --存储资产分类统计
  g_t_card_type_main   t_card_type_main; --存储科室统计
  g_t_card_source_main t_card_source_mains; --存储卡片

  g_t_card_type_change_main   t_card_type_change_main; --统计当前月份以后的原值变动卡片
  g_t_card_type_change_source t_card_type_change_source; --统计当前月份以后的原值变动卡片

  g_t_change_price t_change_price; --统计当月入库当月原值变动的资产

  --卡片 分化 六类

  g_t_card_main_house_add    t_card_details; --存储卡片 房屋及建筑
  g_t_card_main_special_add  t_card_details; --存储卡片 专用设备
  g_t_card_main_general_add  t_card_details; --存储卡片 一般设备
  g_t_card_main_other_add    t_card_details; --存储卡片 其他固定资产
  g_t_card_main_inassets_add t_card_details; --存储卡片 其他无形资产
  g_t_card_main_land_add     t_card_details; --存储卡片 土地使用权

  g_t_card_main_house_dec    t_card_details; --存储卡片 房屋及建筑
  g_t_card_main_special_dec  t_card_details; --存储卡片 专用设备
  g_t_card_main_general_dec  t_card_details; --存储卡片 一般设备
  g_t_card_main_other_dec    t_card_details; --存储卡片 其他固定资产
  g_t_card_main_inassets_dec t_card_details; --存储卡片 其他无形资产
  g_t_card_main_land_dec     t_card_details; --存储卡片 土地使用权

  g_type_depre_amount_special  type_depre_amount_main; --专用设备
  g_type_depre_amount_general  type_depre_amount_main; --一般设备
  g_type_depre_amount_house    type_depre_amount_main; --房屋及建筑
  g_type_depre_amount_other    type_depre_amount_main; --其他固定资产
  g_type_depre_amount_inassets type_depre_amount_main; --其他无形资产
  g_type_depre_amount_land     type_depre_amount_main; --土地使用权

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_generate
  || 功能描述 ：资产报表生成 （资产月报表 原值变动表 资产变动表）
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_generate(prm_group_id  IN NUMBER --集团
                                    ,prm_hos_id    IN NUMBER --医院
                                    ,prm_copy_code IN VARCHAR2 --账套
                                    ,prm_acc_year  IN VARCHAR2 --年度
                                    ,prm_acc_month IN VARCHAR2 --月份
                                     ) IS
  BEGIN

    --获取当月的起始时间

    g_begin_date := prm_acc_year || '-' || prm_acc_month || '-01';

    SELECT to_char(last_day(to_date(prm_acc_year || '-' || prm_acc_month ||
                                    '-01'
                                   ,'yyyy-mm-dd'))
                  ,'yyyy-mm-dd')
      INTO g_end_date
      FROM dual;

    --初始化
    prc_ass_collect_init();

    prc_ass_collect_card(prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_acc_month);

    prc_ass_collect_change(prm_group_id
                          ,prm_hos_id
                          ,prm_copy_code
                          ,prm_acc_year
                          ,prm_acc_month);
    prc_ass_collect_type(prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_acc_month);
    prc_ass_collect_type_bustype(prm_group_id
                                ,prm_hos_id
                                ,prm_copy_code
                                ,prm_acc_year
                                ,prm_acc_month);
    /* prc_ass_collect_dept(prm_group_id
    ,prm_hos_id
    ,prm_copy_code
    ,prm_acc_year
    ,prm_acc_month);*/

    prc_ass_collect_source(prm_group_id
                          ,prm_hos_id
                          ,prm_copy_code
                          ,prm_acc_year
                          ,prm_acc_month);
    prc_ass_collect_next_month(prm_group_id
                              ,prm_hos_id
                              ,prm_copy_code
                              ,prm_acc_year
                              ,prm_acc_month);

  END prc_ass_collect_generate;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_init IS
  BEGIN

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main.count > 0
    THEN
      g_t_card_main.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_source_main.count > 0
    THEN
      g_t_card_source_main.delete;
    END IF;
    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_dept_main.count > 0
    THEN
      g_t_card_dept_main.delete;
    END IF;
    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_type_main.count > 0
    THEN
      g_t_card_type_main.delete;
    END IF;
    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_type_change_main.count > 0
    THEN
      g_t_card_type_change_main.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_cards.count > 0
    THEN
      g_t_cards.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_cards_type.count > 0
    THEN
      g_t_cards_type.delete;
    END IF;
    --初始化结构体  期初 本期增加 本期减少
    IF g_t_cards_dept.count > 0
    THEN
      g_t_cards_dept.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_house_add.count > 0
    THEN
      g_t_card_main_house_add.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_special_add.count > 0
    THEN
      g_t_card_main_special_add.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_general_add.count > 0
    THEN
      g_t_card_main_general_add.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_other_add.count > 0
    THEN
      g_t_card_main_other_add.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_inassets_add.count > 0
    THEN
      g_t_card_main_inassets_add.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_land_add.count > 0
    THEN
      g_t_card_main_land_add.delete;
    END IF;
    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_house_dec.count > 0
    THEN
      g_t_card_main_house_dec.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_special_dec.count > 0
    THEN
      g_t_card_main_special_dec.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_general_dec.count > 0
    THEN
      g_t_card_main_general_dec.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_other_dec.count > 0
    THEN
      g_t_card_main_other_dec.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_inassets_dec.count > 0
    THEN
      g_t_card_main_inassets_dec.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_t_card_main_land_dec.count > 0
    THEN
      g_t_card_main_land_dec.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_type_depre_amount_house.count > 0
    THEN
      g_type_depre_amount_house.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_type_depre_amount_special.count > 0
    THEN
      g_type_depre_amount_special.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_type_depre_amount_general.count > 0
    THEN
      g_type_depre_amount_general.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_type_depre_amount_other.count > 0
    THEN
      g_type_depre_amount_other.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_type_depre_amount_inassets.count > 0
    THEN
      g_type_depre_amount_inassets.delete;
    END IF;

    --初始化结构体  期初 本期增加 本期减少
    IF g_type_depre_amount_land.count > 0
    THEN
      g_type_depre_amount_land.delete;
    END IF;

    --初始化结构体  当月入库当月原值变动资产
    IF g_t_change_price.count > 0
    THEN
      g_t_change_price.delete;
    END IF;

  END prc_ass_collect_init;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_house_init(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_house_add
      FROM ass_card_house t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyy-MM-dd') BETWEEN g_init_date_house AND
           g_end_date
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_house_dec
      FROM ass_card_house t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyy-MM-dd') BETWEEN g_init_date_house AND
           g_end_date
       AND t1.use_state = 7;

    --本期折旧值 增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_house
      FROM ass_card_house t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_house t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;

  END prc_ass_collect_house_init;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_special_init(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_special_add
      FROM ass_card_special t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyy-MM-dd') BETWEEN g_init_date_special AND
           g_end_date
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_special_dec
      FROM ass_card_special t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyy-MM-dd') BETWEEN
           g_init_date_special AND g_end_date
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_special
      FROM ass_card_special t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_special t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;

  END prc_ass_collect_special_init;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_general_init(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_general_add
      FROM ass_card_general t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyy-MM-dd') BETWEEN g_init_date_general AND
           g_end_date
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_general_dec
      FROM ass_card_general t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyy-MM-dd') BETWEEN
           g_init_date_general AND g_end_date
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
         ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_general
      FROM ass_card_general t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_general t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_general_init;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_other_init(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_other_add
      FROM ass_card_other t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyy-MM-dd') BETWEEN g_init_date_other AND
           g_end_date
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_other_dec
      FROM ass_card_other t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyy-MM-dd') BETWEEN g_init_date_other AND
           g_end_date
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_other
      FROM ass_card_other t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_other t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_other_init;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_inassets_init(prm_group_id  IN NUMBER --集团
                                         ,prm_hos_id    IN NUMBER --医院
                                         ,prm_copy_code IN VARCHAR2 --账套
                                         ,prm_acc_year  IN VARCHAR2 --年度
                                         ,prm_acc_month IN VARCHAR2 --月份
                                          ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_inassets_add
      FROM ass_card_inassets t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyy-MM-dd') BETWEEN g_init_date_inassets AND
           g_end_date
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_inassets_dec
      FROM ass_card_inassets t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyy-MM-dd') BETWEEN
           g_init_date_inassets AND g_end_date
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_inassets
      FROM ass_card_inassets t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_inassets t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_inassets_init;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_land_init(prm_group_id  IN NUMBER --集团
                                     ,prm_hos_id    IN NUMBER --医院
                                     ,prm_copy_code IN VARCHAR2 --账套
                                     ,prm_acc_year  IN VARCHAR2 --年度
                                     ,prm_acc_month IN VARCHAR2 --月份
                                      ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_land_add
      FROM ass_card_land t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyy-MM-dd') BETWEEN g_init_date_land AND
           g_end_date
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_land_dec
      FROM ass_card_land t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyy-MM-dd') BETWEEN g_init_date_land AND
           g_end_date
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_land
      FROM ass_card_land t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_land t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_land_init;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_house(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_house_add
      FROM ass_card_house t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyyMM') = prm_acc_year || prm_acc_month
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_house_dec
      FROM ass_card_house t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyyMM') =
           prm_acc_year || prm_acc_month
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_house
      FROM ass_card_house t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_house t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND nvl(T4.NOTE,'0')!='冲减'
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;

  END prc_ass_collect_card_house;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_special(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_special_add
      FROM ass_card_special t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyyMM') = prm_acc_year || prm_acc_month
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_special_dec
      FROM ass_card_special t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyyMM') =
           prm_acc_year || prm_acc_month
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_special
      FROM ass_card_special t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_special t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND nvl(T4.NOTE,'0')!='冲减'
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;

  END prc_ass_collect_card_special;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_general(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_general_add
      FROM ass_card_general t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyyMM') = prm_acc_year || prm_acc_month
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_general_dec
      FROM ass_card_general t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyyMM') =
           prm_acc_year || prm_acc_month
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_general
      FROM ass_card_general t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_general t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND nvl(T4.NOTE,'0')!='冲减'
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_card_general;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_other(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_other_add
      FROM ass_card_other t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyyMM') = prm_acc_year || prm_acc_month
       AND t1.use_state > 0
       and t1.ass_card_no not like 'ZCKPDZ%' --低值资产不再帐表体现
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_other_dec
      FROM ass_card_other t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyyMM') =
           prm_acc_year || prm_acc_month
       and t1.ass_card_no not like 'ZCKPDZ%' --低值资产不再帐表体现
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_other
      FROM ass_card_other t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_other t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND nvl(T4.NOTE,'0')!='冲减'
       and t1.ass_card_no not like 'ZCKPDZ%' --低值资产不再帐表体现
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_card_other;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_inassets(prm_group_id  IN NUMBER --集团
                                         ,prm_hos_id    IN NUMBER --医院
                                         ,prm_copy_code IN VARCHAR2 --账套
                                         ,prm_acc_year  IN VARCHAR2 --年度
                                         ,prm_acc_month IN VARCHAR2 --月份
                                          ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_inassets_add
      FROM ass_card_inassets t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyyMM') = prm_acc_year || prm_acc_month
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_inassets_dec
      FROM ass_card_inassets t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyyMM') =
           prm_acc_year || prm_acc_month
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
         ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_inassets
      FROM ass_card_inassets t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_inassets t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND nvl(T4.NOTE,'0')!='冲减'
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_card_inassets;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card_land(prm_group_id  IN NUMBER --集团
                                     ,prm_hos_id    IN NUMBER --医院
                                     ,prm_copy_code IN VARCHAR2 --账套
                                     ,prm_acc_year  IN VARCHAR2 --年度
                                     ,prm_acc_month IN VARCHAR2 --月份
                                      ) IS
  BEGIN

    --本期增加
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.buy_type
          ,t3.bus_type_name
          ,1                in_out
          ,t1.price
          ,t1.depre_money   BULK COLLECT
      INTO g_t_card_main_land_add
      FROM ass_card_land t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_bus_type_dict t3
        ON t3.group_id = t1.group_id
       AND t3.hos_id = t1.hos_id
       AND t3.copy_code = t1.copy_code
       AND t3.bus_type_code = t1.buy_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.in_date, 'yyyyMM') = prm_acc_year || prm_acc_month
       AND t1.use_state > 0
       AND t1.is_init = 0;

    --本期减少
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t1.dispose_type
          ,t3.dispose_type_name
          ,0                    in_out
          ,t1.price
          ,t1.depre_money       BULK COLLECT
      INTO g_t_card_main_land_dec
      FROM ass_card_land t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
      LEFT JOIN ass_dispose_type t3
        ON t3.dispose_type_code = t1.dispose_type
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND to_char(t1.dispose_date, 'yyyyMM') =
           prm_acc_year || prm_acc_month
       AND t1.use_state = 7;

    --本期折旧值
    SELECT t2.ass_type_id
          ,t1.ass_card_no
          ,t4.use_dept_id
          ,t4.use_dept_no
          ,CASE  WHEN to_char(t1.in_date, 'yyyyMM' ) = prm_acc_year || prm_acc_month THEN t4.add_depre_amount
           ELSE
          t4.now_depre_amount
           END now_depre_amount
          ,t4.add_depre_amount BULK COLLECT
      INTO g_type_depre_amount_land
      FROM ass_card_land t1
      LEFT JOIN ass_no_dict t2
        ON t1.group_id = t2.group_id
       AND t1.hos_id = t2.hos_id
       AND t1.copy_code = t2.copy_code
       AND t1.ass_id = t2.ass_id
       AND t1.ass_no = t2.ass_no
     INNER JOIN ass_depre_acc_land t4
        ON t4.group_id = t1.group_id
       AND t4.hos_id = t1.hos_id
       AND t4.copy_code = t1.copy_code
       AND t1.ass_card_no = t4.ass_card_no
     WHERE t1.group_id = prm_group_id
       AND t1.hos_id = prm_hos_id
       AND t1.copy_code = prm_copy_code
       AND t1.use_state > 0
       AND nvl(T4.NOTE,'0')!='冲减'
       AND t4.depre_year = prm_acc_year
       AND t4.depre_month = prm_acc_month;
  END prc_ass_collect_card_land;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_main
  || 功能描述 ：结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_card(prm_group_id  IN NUMBER --集团
                                ,prm_hos_id    IN NUMBER --医院
                                ,prm_copy_code IN VARCHAR2 --账套
                                ,prm_acc_year  IN VARCHAR2 --年度
                                ,prm_acc_month IN VARCHAR2 --月份
                                 ) IS
    v_count              INTEGER;
    --v_count_dept         INTEGER;
    --v_dept_id            INTEGER;
    --v_dept_no            INTEGER;
    --v_dept_area          ass_share_dept_init_special.area%TYPE;
    --v_area_sum           ass_share_dept_init_special.area%TYPE;
    v_source_id          INTEGER;
    v_source_price       ass_resource_special.price%TYPE;
    v_source_depre_money ass_resource_special.depre_money%TYPE;
    v_source_count       INTEGER;

  BEGIN

    v_count := g_t_card_main.count;
    --v_count_dept         := g_t_card_dept_main.count;
    --v_dept_id            := 0;
    --v_dept_no            := 0;
    --v_dept_area          := 0;
    --v_area_sum           := 0;
    v_source_id          := 0;
    v_source_price       := 0;
    v_source_depre_money := 0;
    v_source_count       := 0;

    SELECT COUNT(*)
      INTO g_init_flag_house
      FROM ass_card_init_flag
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND ass_naturs = '01'
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    IF g_init_flag_house > 0
    THEN
      --提取初始化变量，当前年月是否是建账年月
      SELECT to_char(t.init_date, 'yyyy-MM-dd')
        INTO g_init_date_house
        FROM ass_card_init_flag t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.acc_year = prm_acc_year
         AND t.acc_month = prm_acc_month
         AND ass_naturs = '01'
         AND rownum = 1;

      prc_ass_collect_house_init(prm_group_id
                                ,prm_hos_id
                                ,prm_copy_code
                                ,prm_acc_year
                                ,prm_acc_month);
    ELSE
      prc_ass_collect_card_house(prm_group_id
                                ,prm_hos_id
                                ,prm_copy_code
                                ,prm_acc_year
                                ,prm_acc_month);
    END IF;

    SELECT COUNT(*)
      INTO g_init_flag_special
      FROM ass_card_init_flag
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND ass_naturs = '02'
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    IF g_init_flag_special > 0
    THEN
      --提取初始化变量，当前年月是否是建账年月
      SELECT to_char(t.init_date, 'yyyy-MM-dd')
        INTO g_init_date_special
        FROM ass_card_init_flag t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.acc_year = prm_acc_year
         AND t.acc_month = prm_acc_month
         AND ass_naturs = '02'
         AND rownum = 1;

      prc_ass_collect_special_init(prm_group_id
                                  ,prm_hos_id
                                  ,prm_copy_code
                                  ,prm_acc_year
                                  ,prm_acc_month);
    ELSE
      prc_ass_collect_card_special(prm_group_id
                                  ,prm_hos_id
                                  ,prm_copy_code
                                  ,prm_acc_year
                                  ,prm_acc_month);
    END IF;

    SELECT COUNT(*)
      INTO g_init_flag_general
      FROM ass_card_init_flag
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND ass_naturs = '03'
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    IF g_init_flag_general > 0
    THEN
      --提取初始化变量，当前年月是否是建账年月
      SELECT to_char(t.init_date, 'yyyy-MM-dd')
        INTO g_init_date_general
        FROM ass_card_init_flag t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.acc_year = prm_acc_year
         AND t.acc_month = prm_acc_month
         AND ass_naturs = '03'
         AND rownum = 1;

      prc_ass_collect_general_init(prm_group_id
                                  ,prm_hos_id
                                  ,prm_copy_code
                                  ,prm_acc_year
                                  ,prm_acc_month);
    ELSE
      prc_ass_collect_card_general(prm_group_id
                                  ,prm_hos_id
                                  ,prm_copy_code
                                  ,prm_acc_year
                                  ,prm_acc_month);
    END IF;

    SELECT COUNT(*)
      INTO g_init_flag_other
      FROM ass_card_init_flag
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND ass_naturs = '04'
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;
    IF g_init_flag_other > 0
    THEN
      --提取初始化变量，当前年月是否是建账年月
      SELECT to_char(t.init_date, 'yyyy-MM-dd')
        INTO g_init_date_other
        FROM ass_card_init_flag t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.acc_year = prm_acc_year
         AND t.acc_month = prm_acc_month
         AND ass_naturs = '04'
         AND rownum = 1;

      prc_ass_collect_other_init(prm_group_id
                                ,prm_hos_id
                                ,prm_copy_code
                                ,prm_acc_year
                                ,prm_acc_month);
    ELSE
      prc_ass_collect_card_other(prm_group_id
                                ,prm_hos_id
                                ,prm_copy_code
                                ,prm_acc_year
                                ,prm_acc_month);
    END IF;

    SELECT COUNT(*)
      INTO g_init_flag_inassets
      FROM ass_card_init_flag
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND ass_naturs = '05'
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    IF g_init_flag_inassets > 0
    THEN
      --提取初始化变量，当前年月是否是建账年月
      SELECT to_char(t.init_date, 'yyyy-MM-dd')
        INTO g_init_date_inassets
        FROM ass_card_init_flag t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.acc_year = prm_acc_year
         AND t.acc_month = prm_acc_month
         AND ass_naturs = '05'
         AND rownum = 1;

      prc_ass_collect_inassets_init(prm_group_id
                                   ,prm_hos_id
                                   ,prm_copy_code
                                   ,prm_acc_year
                                   ,prm_acc_month);
    ELSE
      prc_ass_collect_card_inassets(prm_group_id
                                   ,prm_hos_id
                                   ,prm_copy_code
                                   ,prm_acc_year
                                   ,prm_acc_month);
    END IF;

    SELECT COUNT(*)
      INTO g_init_flag_land
      FROM ass_card_init_flag
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND ass_naturs = '06'
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    IF g_init_flag_land > 0
    THEN
      --提取初始化变量，当前年月是否是建账年月
      SELECT to_char(t.init_date, 'yyyy-MM-dd')
        INTO g_init_date_land
        FROM ass_card_init_flag t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.acc_year = prm_acc_year
         AND t.acc_month = prm_acc_month
         AND ass_naturs = '06'
         AND rownum = 1;

      prc_ass_collect_land_init(prm_group_id
                               ,prm_hos_id
                               ,prm_copy_code
                               ,prm_acc_year
                               ,prm_acc_month);
    ELSE
      prc_ass_collect_card_land(prm_group_id
                               ,prm_hos_id
                               ,prm_copy_code
                               ,prm_acc_year
                               ,prm_acc_month);
    END IF;

    --房屋及建筑 原值/累计折旧 增加
    FOR i IN 1 .. g_t_card_main_house_add.count
    LOOP
      v_count := v_count + 1;
      --月报表统计
      -->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_house_add(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_house_add(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_house_add(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_house_add(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_house_add(i).V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_house_add(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_house_add(i).V_L;
      g_t_card_main(v_count).V_FLAG := 1; --原值/累计折旧 增加

      -->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

      --卡片使用科室比例合计
      -->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      /* SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_house_add(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_house_add(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_house_add(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_house_add(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_house_add(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;*/
      -->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

      --资金来源报表

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_house
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_house_add(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_house_add(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_house_add(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_house_add(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_house_add(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_house_add(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;

    END LOOP;
    --房屋及建筑 原值/累计折旧 减少
    FOR i IN 1 .. g_t_card_main_house_dec.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_house_dec(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_house_dec(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_house_dec(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_house_dec(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_house_dec(i).V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_house_dec(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_house_dec(i).V_L;
      g_t_card_main(v_count).V_FLAG := 2; --原值/累计折旧 减少

      /*--卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_house_dec(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_house_dec(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_house_dec(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_house_dec(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_house_dec(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_house
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_house_dec(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_house_dec(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_house_dec(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_house_dec(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_house_dec(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_house_dec(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;

    END LOOP;

    --房屋及建筑 原值/累计折旧 增加
    FOR i IN 1 .. g_t_card_main_special_add.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_special_add(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_special_add(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_special_add(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_special_add(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_special_add(i)
                                         .V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_special_add(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_special_add(i).V_L;
      g_t_card_main(v_count).V_FLAG := 1; --原值/累计折旧 增加

      /* --卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_special_add(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_special_add(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_special_add(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_special_add(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_special_add(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_special
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_special_add(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_special_add(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_special_add(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_special_add(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_special_add(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_special_add(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;

    END LOOP;
    --房屋及建筑 原值/累计折旧 减少
    FOR i IN 1 .. g_t_card_main_special_dec.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_special_dec(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_special_dec(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_special_dec(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_special_dec(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_special_dec(i)
                                         .V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_special_dec(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_special_dec(i).V_L;
      g_t_card_main(v_count).V_FLAG := 2; --原值/累计折旧 减少

      /* --卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_special_dec(i).V_ASS_CARD_NO;
      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_special_dec(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_special_dec(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_special_dec(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_special_dec(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_special
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_special_dec(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_special_dec(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_special_dec(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_special_dec(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_special_dec(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_special_dec(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;

    END LOOP;

    --房屋及建筑 原值/累计折旧 增加
    FOR i IN 1 .. g_t_card_main_general_add.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_general_add(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_general_add(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_general_add(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_general_add(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_general_add(i)
                                         .V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_general_add(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_general_add(i).V_L;
      g_t_card_main(v_count).V_FLAG := 1; --原值/累计折旧 增加

      --卡片使用科室比例合计
      /*SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_general_add(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_general_add(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_general_add(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_general_add(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_general_add(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_general
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_general_add(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_general_add(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_general_add(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_general_add(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_general_add(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_general_add(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;

    END LOOP;
    --房屋及建筑 原值/累计折旧 减少
    FOR i IN 1 .. g_t_card_main_general_dec.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_general_dec(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_general_dec(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_general_dec(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_general_dec(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_general_dec(i)
                                         .V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_general_dec(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_general_dec(i).V_L;
      g_t_card_main(v_count).V_FLAG := 2; --原值/累计折旧 减少

      /*--卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_general_dec(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_general_dec(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_general_dec(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_general_dec(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_general_dec(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_general
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_general_dec(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_general_dec(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_general_dec(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_general_dec(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_general_dec(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_general_dec(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;

    END LOOP;

    --房屋及建筑 原值/累计折旧 增加
    FOR i IN 1 .. g_t_card_main_other_add.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_other_add(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_other_add(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_other_add(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_other_add(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_other_add(i).V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_other_add(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_other_add(i).V_L;
      g_t_card_main(v_count).V_FLAG := 1; --原值/累计折旧 增加

      /*--卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_other_add(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_other_add(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_other_add(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_other_add(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_other_add(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_other
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_other_add(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_other_add(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_other_add(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_other_add(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_other_add(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_other_add(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;
    END LOOP;
    --房屋及建筑 原值/累计折旧 减少
    FOR i IN 1 .. g_t_card_main_other_dec.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_other_dec(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_other_dec(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_other_dec(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_other_dec(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_other_dec(i).V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_other_dec(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_other_dec(i).V_L;
      g_t_card_main(v_count).V_FLAG := 2; --原值/累计折旧 减少

      --卡片使用科室比例合计
      /*SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_other_dec(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_other_dec(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_other_dec(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_other_dec(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_other_dec(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_other
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_other_dec(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_other_dec(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_other_dec(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_other_dec(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_other_dec(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_other_dec(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;

    END LOOP;

    --房屋及建筑 原值/累计折旧 增加
    FOR i IN 1 .. g_t_card_main_inassets_add.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_inassets_add(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_inassets_add(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_inassets_add(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_inassets_add(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_inassets_add(i)
                                         .V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_inassets_add(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_inassets_add(i).V_L;
      g_t_card_main(v_count).V_FLAG := 1; --原值/累计折旧 增加

      --卡片使用科室比例合计
      /*SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_inassets_add(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_inassets_add(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_inassets_add(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_inassets_add(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_inassets_add(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_inassets
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_inassets_add(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_inassets_add(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_inassets_add(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_inassets_add(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_inassets_add(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_inassets_add(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;

    END LOOP;
    --房屋及建筑 原值/累计折旧 减少
    FOR i IN 1 .. g_t_card_main_inassets_dec.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_inassets_dec(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_inassets_dec(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_inassets_dec(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_inassets_dec(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_inassets_dec(i)
                                         .V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_inassets_dec(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_inassets_dec(i).V_L;
      g_t_card_main(v_count).V_FLAG := 2; --原值/累计折旧 减少

      /*--卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_inassets_dec(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_inassets_dec(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_inassets_dec(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_inassets_dec(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_inassets_dec(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_inassets
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_inassets_dec(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_inassets_dec(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_inassets_dec(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_inassets_dec(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_inassets_dec(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_inassets_dec(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;

    END LOOP;

    --房屋及建筑 原值/累计折旧 增加
    FOR i IN 1 .. g_t_card_main_land_add.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_land_add(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_land_add(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_land_add(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_land_add(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_land_add(i).V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_land_add(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_land_add(i).V_L;
      g_t_card_main(v_count).V_FLAG := 1; --原值/累计折旧 增加

      /*--卡片使用科室比例合计
      SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_land_add(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_land_add(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_land_add(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_land_add(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_land_add(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_land
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_land_add(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_land_add(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_land_add(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_land_add(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_land_add(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_land_add(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 1; --原值/累计折旧 增加

      END LOOP;

    END LOOP;
    --房屋及建筑 原值/累计折旧 减少
    FOR i IN 1 .. g_t_card_main_land_dec.count
    LOOP
      v_count := v_count + 1;
      g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_main_land_dec(i)
                                              .V_ASS_TYPE_ID;
      g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_main_land_dec(i)
                                              .V_ASS_CARD_NO;
      g_t_card_main(v_count).V_TYPE_CODE := g_t_card_main_land_dec(i)
                                            .V_TYPE_CODE;
      g_t_card_main(v_count).V_TYPE_NAME := g_t_card_main_land_dec(i)
                                            .V_TYPE_NAME;
      g_t_card_main(v_count).V_IN_OUT := g_t_card_main_land_dec(i).V_IN_OUT;
      g_t_card_main(v_count).V_R := g_t_card_main_land_dec(i).V_R;
      g_t_card_main(v_count).V_L := g_t_card_main_land_dec(i).V_L;
      g_t_card_main(v_count).V_FLAG := 2; --原值/累计折旧 减少

      --卡片使用科室比例合计
      /*SELECT SUM(area)
        INTO v_area_sum
        FROM ass_share_dept_r_house t
       WHERE t.group_id = prm_group_id
         AND t.hos_id = prm_hos_id
         AND t.copy_code = prm_copy_code
         AND t.ass_year = prm_acc_year
         AND t.ass_month = prm_acc_month
         AND t.ass_card_no = g_t_card_main_land_dec(i).V_ASS_CARD_NO;

      --统计使用科室
      FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                    FROM ASS_SHARE_DEPT_R_SPECIAL t
                   WHERE t.group_id = prm_group_id
                     AND t.hos_id = prm_hos_id
                     AND t.copy_code = prm_copy_code
                     AND t.ass_year = prm_acc_year
                     AND t.ass_month = prm_acc_month
                     AND t.ass_card_no = g_t_card_main_land_dec(i)
                        .V_ASS_CARD_NO)
      LOOP
        v_dept_id    := rec.dept_id;
        v_dept_no    := rec.dept_no;
        v_dept_area  := rec.area;
        v_count_dept := v_count_dept + 1;
        --科室报表统计
        g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
        g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
        g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_main_land_dec(i)
                                                          .V_ASS_CARD_NO;
        g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
        g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

        g_t_card_dept_main(v_count_dept).V_R := g_t_card_main_land_dec(i).V_R;
        g_t_card_dept_main(v_count_dept).V_L := g_t_card_main_land_dec(i).V_L;
        g_t_card_dept_main(v_count_dept).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;*/

      --卡片资金来源统计
      FOR rec_source IN (SELECT source_id, price, depre_money
                           FROM ass_resource_land
                          WHERE group_id = prm_group_id
                            AND hos_id = prm_hos_id
                            AND copy_code = prm_copy_code
                            AND ass_card_no = g_t_card_main_land_dec(i)
                               .V_ASS_CARD_NO
                          ORDER BY source_id)
      LOOP
        v_source_id := rec_source.source_id;
        v_source_price := rec_source.price;
        v_source_depre_money := rec_source.depre_money;
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_main_land_dec(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_main_land_dec(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_main_land_dec(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_main_land_dec(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_main_land_dec(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := v_source_price;
        g_t_card_source_main(v_source_count).V_L := v_source_depre_money;
        g_t_card_source_main(v_source_count).V_FLAG := 2; --原值/累计折旧 增加

      END LOOP;

    END LOOP;

  END prc_ass_collect_card;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_change_init
  || 功能描述 ：截至到当前月资金变动总和以及当前月变动资金变动记录结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_change_init(prm_group_id  IN NUMBER --集团
                                       ,prm_hos_id    IN NUMBER --医院
                                       ,prm_copy_code IN VARCHAR2 --账套
                                       ,prm_acc_year  IN VARCHAR2 --年度
                                       ,prm_acc_month IN VARCHAR2 --月份
                                        ) IS
  BEGIN
    SELECT t2.ass_type_id
          ,t3.ass_card_no
          ,buy_type
          , CASE
              WHEN buy_type = 22 THEN
               '原值增加'
              ELSE
               '原值减少'

            END bus_type_name

          , CASE
              WHEN buy_type = 22 THEN
               1
              ELSE
               0

            END in_out
          ,year_month
          ,flag
          ,is_init
          ,SUM(t3.change_price) change_price
          ,SUM(t3.change_depre) change_depre
          ,SUM(t3.price) price
          ,SUM(t3.depre_money) depre_money BULK COLLECT
      INTO g_t_card_type_change_main
      FROM ass_no_dict t2
      LEFT JOIN (SELECT t1.change_price
                       ,0 change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_special t1
                  INNER JOIN ass_change_special t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_special t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t1.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_special t1
                  INNER JOIN ASS_DEPRE_SPECIAL t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_special t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t1.change_price
                       ,0 change__money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_general t1
                  INNER JOIN ass_change_general t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_general t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t1.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_general t1
                  INNER JOIN ASS_DEPRE_general t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_general t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t1.change_price
                       ,0 change__money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_inassets t1
                  INNER JOIN ass_change_inassets t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_inassets t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t1.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_inassets t1
                  INNER JOIN ASS_DEPRE_inassets t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_inassets t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t1.change_price
                       ,0 change_money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_other t1
                  INNER JOIN ass_change_other t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_other t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                    and t3.ass_card_no not like 'ZCKPDZ%' --低值资产不再帐表体现
                 UNION ALL
                 SELECT 0 change_price
                       ,t1.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_other t1
                  INNER JOIN ASS_DEPRE_other t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_other t3
                     ON t3.group_id = t1.group_id
                    AND t3.hos_id = t1.hos_id
                    AND t3.copy_code = t1.copy_code
                    AND t3.ass_card_no = t1.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                    and t3.ass_card_no not like 'ZCKPDZ%' --低值资产不再帐表体现
                 UNION ALL
                 SELECT t1.change_price
                       ,0 change_money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_house t1
                  INNER JOIN ass_change_house t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_house t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t1.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_house t1
                  INNER JOIN ASS_DEPRE_house t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_house t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t1.change_price
                       ,0 change_money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_land t1
                  INNER JOIN ass_change_land t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_land t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t1.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t1.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_land t1
                  INNER JOIN ASS_DEPRE_land t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_land t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 ) t3
        ON t2.ass_id = t3.ass_id
       AND t2.ass_no = t3.ass_no

     WHERE t2.group_id = prm_group_id
       AND t2.hos_id = prm_hos_id
       AND t2.copy_code = prm_copy_code
       AND nvl(t3.price, 9999999) != 9999999
       AND nvl(t3.depre_money, 9999999) != 9999999
     GROUP BY ass_type_id
             ,t2.ass_id
             ,ass_card_no
             ,buy_type
             ,year_month
             ,flag
             ,is_init
     ORDER BY flag
             ,year_month
             ,ass_type_id
             ,t2.ass_id
             ,is_init
             ,ass_card_no;

    --资金来源变动情况
    SELECT t2.ass_type_id
          ,t3.ass_card_no
          ,t3.source_id
          ,buy_type
          , CASE
              WHEN buy_type = 22 THEN
               '原值增加'
              ELSE
               '原值减少'
            END bus_type_name

          , CASE
              WHEN buy_type = 22 THEN
               1
              ELSE
               0
            END in_out
          ,year_month
          ,flag
          ,is_init
          ,SUM(t3.change_price) change_price
          ,SUM(t3.change_depre) change_depre
          ,SUM(t3.price) price
          ,SUM(t3.depre_money) depre_money BULK COLLECT
      INTO g_t_card_type_change_source
      FROM ass_no_dict t2
      LEFT JOIN (SELECT t4.change_price
                       ,0 change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_special t1
                  INNER JOIN ass_change_special t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_special t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_change_source_special t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t4.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_special t1
                  INNER JOIN ASS_DEPRE_SPECIAL t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_special t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_depre_source_special t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t4.change_price
                       ,0 change__money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_general t1
                  INNER JOIN ass_change_general t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_general t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_change_source_general t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT 0 change_price
                       ,t4.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_general t1
                  INNER JOIN ASS_DEPRE_general t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_general t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_depre_source_general t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT t4.change_price
                       ,0 change__money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_inassets t1
                  INNER JOIN ass_change_inassets t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_inassets t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_change_source_inassets t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t4.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_inassets t1
                  INNER JOIN ASS_DEPRE_inassets t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_inassets t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_depre_source_inassets t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT t4.change_price
                       ,0 change_money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_other t1
                  INNER JOIN ass_change_other t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_other t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_change_source_other t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t4.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_other t1
                  INNER JOIN ASS_DEPRE_other t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_other t3
                     ON t3.group_id = t1.group_id
                    AND t3.hos_id = t1.hos_id
                    AND t3.copy_code = t1.copy_code
                    AND t3.ass_card_no = t1.ass_card_no
                  INNER JOIN ass_depre_source_other t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT t4.change_price
                       ,0 change_money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_house t1
                  INNER JOIN ass_change_house t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_house t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_change_source_house t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t4.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_house t1
                  INNER JOIN ASS_DEPRE_house t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_house t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_depre_source_house t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT t4.change_price
                       ,0 change_money
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_price >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.change_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_change_detail_land t1
                  INNER JOIN ass_change_land t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_land t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_change_source_land t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.change_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT 0 change_price
                       ,t4.change_depre
                       ,t3.price
                       ,t3.depre_money
                       ,t3.ass_id
                       ,t3.ass_no
                       ,t3.ass_card_no
                       ,t4.source_id
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            22
                           ELSE
                            23
                         END buy_type
                       , CASE
                           WHEN t4.change_depre >= 0 THEN
                            1
                           ELSE
                            2
                         END flag
                       ,to_char(t2.audit_date, 'YYYYMM') year_month
                       ,is_init
                   FROM ass_depre_detail_land t1
                  INNER JOIN ASS_DEPRE_land t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_land t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  INNER JOIN ass_depre_source_land t4
                     ON t4.group_id = t1.group_id
                    AND t4.hos_id = t1.hos_id
                    AND t4.copy_code = t1.copy_code
                    AND t4.ass_card_no = t1.ass_card_no
                    AND t4.change_no = t1.change_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t2.audit_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 ) t3
        ON t2.ass_id = t3.ass_id
       AND t2.ass_no = t3.ass_no

     WHERE t2.group_id = prm_group_id
       AND t2.hos_id = prm_hos_id
       AND t2.copy_code = prm_copy_code
       AND nvl(t3.price, 9999999) != 9999999
       AND nvl(t3.depre_money, 9999999) != 9999999
     GROUP BY ass_type_id
             ,t2.ass_id
             ,ass_card_no
             ,source_id
             ,buy_type
             ,year_month
             ,flag
             ,is_init
     ORDER BY flag
             ,year_month
             ,ass_type_id
             ,t2.ass_id
             ,is_init
             ,ass_card_no
             ,source_id;

  END prc_ass_collect_change_init;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_change_dec_init
  || 功能描述 ：用于减少采购增加多出的原值变动增加初始化结构体
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_change_dec_it(prm_group_id  IN NUMBER --集团
                                         ,prm_hos_id    IN NUMBER --医院
                                         ,prm_copy_code IN VARCHAR2 --账套
                                         ,prm_acc_year  IN VARCHAR2 --年度
                                         ,prm_acc_month IN VARCHAR2 --月份
                                          ) IS
  BEGIN
    SELECT t2.ass_type_id, SUM(t3.change_price) change_price BULK COLLECT
      INTO g_t_change_price
      FROM ass_no_dict t2
      LEFT JOIN (SELECT t1.change_price, t3.ass_id, t3.ass_no
                   FROM ass_change_detail_special t1
                  INNER JOIN ass_change_special t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_special t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t3.in_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT t1.change_price, t3.ass_id, t3.ass_no
                   FROM ass_change_detail_general t1
                  INNER JOIN ass_change_general t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_general t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t3.in_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t1.change_price, t3.ass_id, t3.ass_no
                   FROM ass_change_detail_inassets t1
                  INNER JOIN ass_change_inassets t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_inassets t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t3.in_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                 UNION ALL
                 SELECT t1.change_price, t3.ass_id, t3.ass_no
                   FROM ass_change_detail_other t1
                  INNER JOIN ass_change_other t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_other t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t3.in_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month
                    and t3.ass_card_no not like 'ZCKPDZ%' --低值资产不再帐表体现
                 UNION ALL
                 SELECT t1.change_price, t3.ass_id, t3.ass_no
                   FROM ass_change_detail_house t1
                  INNER JOIN ass_change_house t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_house t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t3.in_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 UNION ALL
                 SELECT t1.change_price, t3.ass_id, t3.ass_no
                   FROM ass_change_detail_land t1
                  INNER JOIN ass_change_land t2
                     ON t1.group_id = t2.group_id
                    AND t1.hos_id = t2.hos_id
                    AND t1.copy_code = t2.copy_code
                    AND t1.change_no = t2.change_no
                  INNER JOIN ass_card_land t3
                     ON t1.group_id = t3.group_id
                    AND t1.hos_id = t3.hos_id
                    AND t1.copy_code = t3.copy_code
                    AND t1.ass_card_no = t3.ass_card_no
                  WHERE t1.group_id = prm_group_id
                    AND t1.hos_id = prm_hos_id
                    AND t1.copy_code = prm_copy_code
                    AND t2.state = 2
                    AND to_char(t3.in_date, 'YYYYMM') >=
                        prm_acc_year || prm_acc_month

                 ) t3
        ON t2.ass_id = t3.ass_id
       AND t2.ass_no = t3.ass_no

     WHERE t2.group_id = prm_group_id
       AND t2.hos_id = prm_hos_id
       AND t2.copy_code = prm_copy_code
       AND nvl(t3.change_price, 9999999) != 9999999
     GROUP BY ass_type_id
     ORDER BY ass_type_id;

  END prc_ass_collect_change_dec_it;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_change
  || 功能描述 ：截至到当前月资金变动总和以及当前月变动资金变动记录结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_change(prm_group_id  IN NUMBER --集团
                                  ,prm_hos_id    IN NUMBER --医院
                                  ,prm_copy_code IN VARCHAR2 --账套
                                  ,prm_acc_year  IN VARCHAR2 --年度
                                  ,prm_acc_month IN VARCHAR2 --月份
                                   ) IS
    v_count        INTEGER;
    v_i            INTEGER;
    --v_count_dept   INTEGER;
    v_source_count INTEGER;
    V_ASS_CARD_NO  ass_card_general.ass_card_no%TYPE;
    V_ASS_TYPE_ID  ass_type_dict.ass_type_id%TYPE;
    V_TYPE_CODE    ASS_CARD_SPECIAL.BUY_TYPE%TYPE; --业务类型编码
    V_TYPE_NAME    ASS_CARD_SPECIAL.BUY_TYPE%TYPE; --业务类型名称
    V_IN_OUT       INTEGER;
    V_R            ass_card_general.price%TYPE;
    V_L            ass_card_general.depre_money%TYPE;

    V_FLAG      INTEGER;
    V_TURE      INTEGER;
    --v_dept_id   INTEGER;
    --v_dept_no   INTEGER;
    --v_dept_area ass_share_dept_init_special.area%TYPE;
    v_area_sum  ass_share_dept_init_special.area%TYPE;
  BEGIN
    v_count := g_t_card_main.count;
    v_i     := g_t_cards.count;
    --v_count_dept   := g_t_card_dept_main.count;
    v_source_count := g_t_card_source_main.count;
    V_ASS_CARD_NO  := '';
    V_TYPE_CODE    := '';
    V_TYPE_NAME    := '';
    V_IN_OUT       := 1;
    V_ASS_TYPE_ID  := 0;
    V_R            := 0;
    V_L            := 0;

    V_FLAG := 0;
    V_TURE := 0;
    --v_dept_id   := 0;
    --v_dept_no   := 0;
    --v_dept_area := 0;
    v_area_sum := 0;

    --初始化变更数据
    prc_ass_collect_change_init(prm_group_id
                               ,prm_hos_id
                               ,prm_copy_code
                               ,prm_acc_year
                               ,prm_acc_month);

    FOR i IN 1 .. g_t_card_type_change_main.count
    LOOP
      --统计总的变更值  用于还原
      IF nvl(g_t_card_type_change_main(i).V_FLAG, 0) = 1
      THEN
        v_count := v_count + 1;
        g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_type_change_main(i)
                                                .V_ASS_TYPE_ID;
        g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                .V_ASS_CARD_NO;

        g_t_card_main(v_count).V_TYPE_CODE := g_t_card_type_change_main(i)
                                              .V_TYPE_CODE;
        g_t_card_main(v_count).V_TYPE_NAME := g_t_card_type_change_main(i)
                                              .V_TYPE_NAME;
        g_t_card_main(v_count).V_IN_OUT := g_t_card_type_change_main(i)
                                           .V_IN_OUT;

        g_t_card_main(v_count).V_R := g_t_card_type_change_main(i).V_R;
        g_t_card_main(v_count).V_L := g_t_card_type_change_main(i).V_L;
        g_t_card_main(v_count).V_CARD_R := g_t_card_type_change_main(i)
                                           .V_CARD_R;
        g_t_card_main(v_count).V_CARD_L := g_t_card_type_change_main(i)
                                           .V_CARD_L;
        g_t_card_main(v_count).V_FLAG := 3; --原值/累计折旧 增加

        --卡片使用科室比例合计
        SELECT SUM(area)
          INTO v_area_sum
          FROM v_ass_share_dept_r t
         WHERE t.group_id = prm_group_id
           AND t.hos_id = prm_hos_id
           AND t.copy_code = prm_copy_code
           AND t.ass_year = prm_acc_year
           AND t.ass_month = prm_acc_month
           AND t.ass_card_no = g_t_card_type_change_main(i).V_ASS_CARD_NO;

        /*--统计使用科室
        FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                      FROM ASS_SHARE_DEPT_R_SPECIAL t
                     WHERE t.group_id = prm_group_id
                       AND t.hos_id = prm_hos_id
                       AND t.copy_code = prm_copy_code
                       AND t.ass_year = prm_acc_year
                       AND t.ass_month = prm_acc_month
                       AND t.ass_card_no = g_t_card_type_change_main(i)
                          .V_ASS_CARD_NO)
        LOOP
          v_dept_id    := rec.dept_id;
          v_dept_no    := rec.dept_no;
          v_dept_area  := rec.area;
          v_count_dept := v_count_dept + 1;
          --科室报表统计
          g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
          g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
          g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                            .V_ASS_CARD_NO;
          g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
          g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

          g_t_card_dept_main(v_count_dept).V_R := g_t_card_type_change_main(i).V_R;
          g_t_card_dept_main(v_count_dept).V_L := g_t_card_type_change_main(i).V_L;
          g_t_card_dept_main(v_count_dept).V_CARD_R := g_t_card_type_change_main(i)
                                                       .V_CARD_R;
          g_t_card_dept_main(v_count_dept).V_CARD_L := g_t_card_type_change_main(i)
                                                       .V_CARD_L;
          g_t_card_dept_main(v_count_dept).V_FLAG := 3; --原值/累计折旧 增加

        END LOOP;*/

      ELSE
        v_count := v_count + 1;
        g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_type_change_main(i)
                                                .V_ASS_TYPE_ID;
        g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                .V_ASS_CARD_NO;
        g_t_card_main(v_count).V_TYPE_CODE := g_t_card_type_change_main(i)
                                              .V_TYPE_CODE;
        g_t_card_main(v_count).V_TYPE_NAME := g_t_card_type_change_main(i)
                                              .V_TYPE_NAME;
        g_t_card_main(v_count).V_IN_OUT := g_t_card_type_change_main(i)
                                           .V_IN_OUT;
        g_t_card_main(v_count).V_R := g_t_card_type_change_main(i).V_R;
        g_t_card_main(v_count).V_L := g_t_card_type_change_main(i).V_L;
        g_t_card_main(v_count).V_CARD_R := g_t_card_type_change_main(i)
                                           .V_CARD_R;
        g_t_card_main(v_count).V_CARD_L := g_t_card_type_change_main(i)
                                           .V_CARD_L;
        g_t_card_main(v_count).V_FLAG := 4; --原值/累计折旧 增加

        /* --卡片使用科室比例合计
        SELECT SUM(area)
          INTO v_area_sum
          FROM v_ass_share_dept_r t
         WHERE t.group_id = prm_group_id
           AND t.hos_id = prm_hos_id
           AND t.copy_code = prm_copy_code
           AND t.ass_year = prm_acc_year
           AND t.ass_month = prm_acc_month
           AND t.ass_card_no = g_t_card_type_change_main(i).V_ASS_CARD_NO;

        --统计使用科室
        FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                      FROM ASS_SHARE_DEPT_R_SPECIAL t
                     WHERE t.group_id = prm_group_id
                       AND t.hos_id = prm_hos_id
                       AND t.copy_code = prm_copy_code
                       AND t.ass_year = prm_acc_year
                       AND t.ass_month = prm_acc_month
                       AND t.ass_card_no = g_t_card_type_change_main(i)
                          .V_ASS_CARD_NO)
        LOOP
          v_dept_id    := rec.dept_id;
          v_dept_no    := rec.dept_no;
          v_dept_area  := rec.area;
          v_count_dept := v_count_dept + 1;
          --科室报表统计
          g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
          g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
          g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                            .V_ASS_CARD_NO;
          g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
          g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

          g_t_card_dept_main(v_count_dept).V_R := g_t_card_type_change_main(i).V_R;
          g_t_card_dept_main(v_count_dept).V_L := g_t_card_type_change_main(i).V_L;
          g_t_card_dept_main(v_count_dept).V_CARD_R := g_t_card_type_change_main(i)
                                                       .V_CARD_R;
          g_t_card_dept_main(v_count_dept).V_CARD_L := g_t_card_type_change_main(i)
                                                       .V_CARD_L;
          g_t_card_dept_main(v_count_dept).V_FLAG := 4; --原值/累计折旧 增加

        END LOOP;*/
      END IF;
    END LOOP;

    FOR i IN 1 .. g_t_card_type_change_main.count
    LOOP
      IF nvl(g_t_card_type_change_main(i).V_YEAR_MONTH, '') =
         (prm_acc_year || prm_acc_month)
      THEN

        --统计总的变更值  用于还原
        IF nvl(g_t_card_type_change_main(i).V_FLAG, 0) = 1
        THEN
          v_count := v_count + 1;
          g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_type_change_main(i)
                                                  .V_ASS_TYPE_ID;
          g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                  .V_ASS_CARD_NO;
          g_t_card_main(v_count).V_TYPE_CODE := g_t_card_type_change_main(i)
                                                .V_TYPE_CODE;
          g_t_card_main(v_count).V_TYPE_NAME := g_t_card_type_change_main(i)
                                                .V_TYPE_NAME;
          g_t_card_main(v_count).V_IN_OUT := g_t_card_type_change_main(i)
                                             .V_IN_OUT;
          g_t_card_main(v_count).V_R := g_t_card_type_change_main(i).V_R;
          g_t_card_main(v_count).V_L := g_t_card_type_change_main(i).V_L;
          g_t_card_main(v_count).V_FLAG := 5; --原值/累计折旧 增加

          /* --卡片使用科室比例合计
          SELECT SUM(area)
            INTO v_area_sum
            FROM v_ass_share_dept_r t
           WHERE t.group_id = prm_group_id
             AND t.hos_id = prm_hos_id
             AND t.copy_code = prm_copy_code
             AND t.ass_year = prm_acc_year
             AND t.ass_month = prm_acc_month
             AND t.ass_card_no = g_t_card_type_change_main(i).V_ASS_CARD_NO;

          --统计使用科室
          FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                        FROM ASS_SHARE_DEPT_R_SPECIAL t
                       WHERE t.group_id = prm_group_id
                         AND t.hos_id = prm_hos_id
                         AND t.copy_code = prm_copy_code
                         AND t.ass_year = prm_acc_year
                         AND t.ass_month = prm_acc_month
                         AND t.ass_card_no = g_t_card_type_change_main(i)
                            .V_ASS_CARD_NO)
          LOOP
            v_dept_id    := rec.dept_id;
            v_dept_no    := rec.dept_no;
            v_dept_area  := rec.area;
            v_count_dept := v_count_dept + 1;
            --科室报表统计
            g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
            g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
            g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                              .V_ASS_CARD_NO;
            g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
            g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

            g_t_card_dept_main(v_count_dept).V_R := g_t_card_type_change_main(i).V_R;
            g_t_card_dept_main(v_count_dept).V_L := g_t_card_type_change_main(i).V_L;
            g_t_card_dept_main(v_count_dept).V_FLAG := 5; --原值/累计折旧 增加

          END LOOP;*/

        ELSE
          v_count := v_count + 1;
          g_t_card_main(v_count).V_ASS_TYPE_ID := g_t_card_type_change_main(i)
                                                  .V_ASS_TYPE_ID;
          g_t_card_main(v_count).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                  .V_ASS_CARD_NO;
          g_t_card_main(v_count).V_TYPE_CODE := g_t_card_type_change_main(i)
                                                .V_TYPE_CODE;
          g_t_card_main(v_count).V_TYPE_NAME := g_t_card_type_change_main(i)
                                                .V_TYPE_NAME;
          g_t_card_main(v_count).V_IN_OUT := g_t_card_type_change_main(i)
                                             .V_IN_OUT;
          g_t_card_main(v_count).V_R := g_t_card_type_change_main(i).V_R;
          g_t_card_main(v_count).V_L := g_t_card_type_change_main(i).V_L;
          g_t_card_main(v_count).V_FLAG := 6; --原值/累计折旧 增加

          /* --卡片使用科室比例合计
          SELECT SUM(area)
            INTO v_area_sum
            FROM v_ass_share_dept_r t
           WHERE t.group_id = prm_group_id
             AND t.hos_id = prm_hos_id
             AND t.copy_code = prm_copy_code
             AND t.ass_year = prm_acc_year
             AND t.ass_month = prm_acc_month
             AND t.ass_card_no = g_t_card_type_change_main(i).V_ASS_CARD_NO;

          --统计使用科室
          FOR rec IN (SELECT t.DEPT_ID, t.DEPT_NO, t.AREA
                        FROM ASS_SHARE_DEPT_R_SPECIAL t
                       WHERE t.group_id = prm_group_id
                         AND t.hos_id = prm_hos_id
                         AND t.copy_code = prm_copy_code
                         AND t.ass_year = prm_acc_year
                         AND t.ass_month = prm_acc_month
                         AND t.ass_card_no = g_t_card_type_change_main(i)
                            .V_ASS_CARD_NO)
          LOOP
            v_dept_id    := rec.dept_id;
            v_dept_no    := rec.dept_no;
            v_dept_area  := rec.area;
            v_count_dept := v_count_dept + 1;
            --科室报表统计
            g_t_card_dept_main(v_count_dept).v_dept_id := v_dept_id;
            g_t_card_dept_main(v_count_dept).v_dept_no := v_dept_no;
            g_t_card_dept_main(v_count_dept).V_ASS_CARD_NO := g_t_card_type_change_main(i)
                                                              .V_ASS_CARD_NO;
            g_t_card_dept_main(v_count_dept).v_m := v_dept_area;
            g_t_card_dept_main(v_count_dept).v_d := v_area_sum;

            g_t_card_dept_main(v_count_dept).V_R := g_t_card_type_change_main(i).V_R;
            g_t_card_dept_main(v_count_dept).V_L := g_t_card_type_change_main(i).V_L;
            g_t_card_dept_main(v_count_dept).V_FLAG := 6; --原值/累计折旧 增加

          END LOOP;*/
        END IF;

      END IF;
    END LOOP;
    --资金来源变动
    FOR i IN 1 .. g_t_card_type_change_source.count
    LOOP

      /*dbms_output.put_line('-------------' || v_source_count);*/
      --统计总的变更值  用于还原
      IF nvl(g_t_card_type_change_source(i).V_FLAG, 0) = 1
      THEN
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_type_change_source(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_type_change_source(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := g_t_card_type_change_source(i)
                                                            .v_source_id;

        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_type_change_source(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_type_change_source(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_type_change_source(i)
                                                         .V_IN_OUT;

        g_t_card_source_main(v_source_count).V_R := g_t_card_type_change_source(i).V_R;
        g_t_card_source_main(v_source_count).V_L := g_t_card_type_change_source(i).V_L;
        g_t_card_source_main(v_source_count).V_CARD_R := g_t_card_type_change_source(i)
                                                         .V_CARD_R;
        g_t_card_source_main(v_source_count).V_CARD_L := g_t_card_type_change_source(i)
                                                         .V_CARD_L;
        g_t_card_source_main(v_source_count).V_FLAG := 3; --原值/累计折旧 增加

      ELSE
        v_source_count := v_source_count + 1;
        g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_type_change_source(i)
                                                              .V_ASS_TYPE_ID;
        g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_type_change_source(i)
                                                              .V_ASS_CARD_NO;
        g_t_card_source_main(v_source_count).v_source_id := g_t_card_type_change_source(i)
                                                            .v_source_id;
        g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_type_change_source(i)
                                                            .V_TYPE_CODE;
        g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_type_change_source(i)
                                                            .V_TYPE_NAME;
        g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_type_change_source(i)
                                                         .V_IN_OUT;
        g_t_card_source_main(v_source_count).V_R := g_t_card_type_change_source(i).V_R;
        g_t_card_source_main(v_source_count).V_L := g_t_card_type_change_source(i).V_L;
        g_t_card_source_main(v_source_count).V_CARD_R := g_t_card_type_change_source(i)
                                                         .V_CARD_R;
        g_t_card_source_main(v_source_count).V_CARD_L := g_t_card_type_change_source(i)
                                                         .V_CARD_L;
        g_t_card_source_main(v_source_count).V_FLAG := 4; --原值/累计折旧 增加

      END IF;
    END LOOP;

    FOR i IN 1 .. g_t_card_type_change_source.count
    LOOP
      IF nvl(g_t_card_type_change_source(i).V_YEAR_MONTH, '') =
         (prm_acc_year || prm_acc_month)
      THEN
        /*dbms_output.put_line('--%%%%-----' || v_source_count);*/
        --统计总的变更值  用于还原
        IF nvl(g_t_card_type_change_source(i).V_FLAG, 0) = 1
        THEN
          v_source_count := v_source_count + 1;
          g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_type_change_source(i)
                                                                .V_ASS_TYPE_ID;
          g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_type_change_source(i)
                                                                .V_ASS_CARD_NO;
          g_t_card_source_main(v_source_count).v_source_id := g_t_card_type_change_source(i)
                                                              .v_source_id;
          g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_type_change_source(i)
                                                              .V_TYPE_CODE;
          g_t_card_source_main(v_source_count).v_source_id := g_t_card_type_change_source(i)
                                                              .v_source_id;
          g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_type_change_source(i)
                                                              .V_TYPE_NAME;
          g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_type_change_source(i)
                                                           .V_IN_OUT;
          g_t_card_source_main(v_source_count).V_R := g_t_card_type_change_source(i).V_R;
          g_t_card_source_main(v_source_count).V_L := g_t_card_type_change_source(i).V_L;
          g_t_card_source_main(v_source_count).V_FLAG := 5; --原值/累计折旧 增加

        ELSE
          v_source_count := v_source_count + 1;
          g_t_card_source_main(v_source_count).V_ASS_TYPE_ID := g_t_card_type_change_source(i)
                                                                .V_ASS_TYPE_ID;
          g_t_card_source_main(v_source_count).V_ASS_CARD_NO := g_t_card_type_change_source(i)
                                                                .V_ASS_CARD_NO;
          g_t_card_source_main(v_source_count).v_source_id := g_t_card_type_change_source(i)
                                                              .v_source_id;
          g_t_card_source_main(v_source_count).V_TYPE_CODE := g_t_card_type_change_source(i)
                                                              .V_TYPE_CODE;
          g_t_card_source_main(v_source_count).V_TYPE_NAME := g_t_card_type_change_source(i)
                                                              .V_TYPE_NAME;
          g_t_card_source_main(v_source_count).V_IN_OUT := g_t_card_type_change_source(i)
                                                           .V_IN_OUT;
          g_t_card_source_main(v_source_count).V_R := g_t_card_type_change_source(i).V_R;
          g_t_card_source_main(v_source_count).V_L := g_t_card_type_change_source(i).V_L;
          g_t_card_source_main(v_source_count).V_FLAG := 6; --原值/累计折旧 增加

        END IF;

      END IF;
    END LOOP;

    FOR i IN 1 .. g_t_card_main.count
    LOOP
      V_ASS_CARD_NO := g_t_card_main(i).V_ASS_CARD_NO;
      V_ASS_TYPE_ID := g_t_card_main(i).V_ASS_TYPE_ID;
      V_TYPE_CODE   := g_t_card_main(i).V_TYPE_CODE;
      V_TYPE_NAME   := g_t_card_main(i).V_TYPE_NAME;
      V_R           := g_t_card_main(i).V_R;
      V_L           := g_t_card_main(i).V_L;

      V_FLAG := g_t_card_main(i).V_FLAG;
      V_TURE := 0;

      FOR j IN 1 .. g_t_cards.count
      LOOP

        IF g_t_cards(j).V_ASS_CARD_NO = V_ASS_CARD_NO
        THEN
          IF V_FLAG = 1
          THEN
            g_t_cards(j).V_R_ADD := g_t_cards(j).V_R_ADD + V_R;
            -- g_t_cards(j).V_L_ADD := g_t_cards(j).V_L_ADD + V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 2
          THEN
            g_t_cards(j).V_R_DEC := g_t_cards(j).V_R_DEC + V_R;
            --  g_t_cards(j).V_L_DEC := g_t_cards(j).V_L_DEC + V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 3
          THEN
            g_t_cards(j).V_R_ADD := g_t_cards(j).V_R_ADD - V_R;
            g_t_cards(j).V_L_ADD := g_t_cards(j).V_L_ADD - V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 4
          THEN
            g_t_cards(j).V_R_DEC := g_t_cards(j).V_R_DEC - V_R;
            g_t_cards(j).V_L_DEC := g_t_cards(j).V_L_DEC - V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 5
          THEN
            g_t_cards(j).V_R_ADD := g_t_cards(j).V_R_ADD + V_R;
            g_t_cards(j).V_L_ADD := g_t_cards(j).V_L_ADD + V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 6
          THEN

            g_t_cards(j).V_R_DEC := g_t_cards(j).V_R_DEC - V_R;
            g_t_cards(j).V_L_DEC := g_t_cards(j).V_L_DEC - V_L;
            V_TURE := 1;

            EXIT; --跳出内循环
          END IF;

        END IF;

      END LOOP;

      IF V_TURE = 0
      THEN
        v_i := g_t_cards.count + 1;

        IF V_FLAG = 1
        THEN
          g_t_cards(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards(v_i).V_R_ADD := V_R;
          -- g_t_cards(v_i).V_L_ADD := V_L;
          g_t_cards(v_i).V_R_DEC := 0;
          g_t_cards(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 2
        THEN
          g_t_cards(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards(v_i).V_R_ADD := 0;
          g_t_cards(v_i).V_L_ADD := 0;
          g_t_cards(v_i).V_R_DEC := V_R;
          --    g_t_cards(v_i).V_L_DEC := V_L;

        ELSIF V_FLAG = 5
        THEN
          g_t_cards(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards(v_i).V_R_ADD := V_R;
          g_t_cards(v_i).V_L_ADD := V_L;
          g_t_cards(v_i).V_R_DEC := 0;
          g_t_cards(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 6
        THEN
          g_t_cards(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards(v_i).V_R_ADD := 0;
          g_t_cards(v_i).V_L_ADD := 0;
          g_t_cards(v_i).V_R_DEC := -V_R;
          g_t_cards(v_i).V_L_DEC := -V_L;

          --不会存在 flag = 4 5 的情况 当循环为空时

        END IF;
      END IF;

    END LOOP;

    /* FOR i IN 1 .. g_t_card_main.count
    LOOP
      dbms_output.put_line(g_t_card_main(i).v_ass_card_no  || '*' || '*' || i ||
                            ' *v_ass_type_id* ' || g_t_card_main(i)
                           .v_ass_type_id  || ' *TYPE* ' || g_t_card_main(i)
                           .V_TYPE_CODE || ' *IN_OUT* ' || g_t_card_main(i)
                           .V_L);
    END LOOP;*/

    /*FOR i IN 1 .. g_t_cards.count
    LOOP
      dbms_output.put_line('v_l_dec' ||g_t_cards(i).v_l_dec || 'v_l_add' || g_t_cards(i)
                           .v_l_add || '*' || '*' || i ||
                            ' *v_ass_type_id* ' || g_t_cards(i)
                           .v_ass_type_id );
    END LOOP;*/

    /* FOR i IN 1 .. g_t_cards_type.count
    LOOP
      dbms_output.put_line(g_t_cards_type(i).v_ass_card_no || '*' || g_t_cards_type(i)
                           .v_r_init || '*' || '*' || i ||
                            ' *v_ass_type_id* ' || g_t_cards_type(i)
                           .v_ass_type_id || ' *V_R_ADD* ' || g_t_cards_type(i)
                           .V_R_ADD || ' *V_r_dec* ' || g_t_cards_type(i)
                           .V_R_DEC || ' *TYPE* ' || g_t_cards_type(i)
                           .V_TYPE_CODE || ' *IN_OUT* ' || g_t_cards_type(i)
                           .V_IN_OUT);
    END LOOP;*/

    /* FOR i IN 1 .. g_t_card_type_change_source.count
    LOOP
      dbms_output.put_line(g_t_card_type_change_source(i)
                           .v_ass_card_no || '*' ||
                            g_t_card_type_change_source.count || '*' || '*' || i ||
                            ' *v_ass_type_id* ' || g_t_card_type_change_source(i)
                           .v_ass_type_id || ' *V_R_ADD* ' || g_t_card_type_change_source(i).V_R ||
                            ' *V_SOURCE* ' || g_t_card_type_change_source(i)
                           .V_SOURCE_ID || '***' || g_t_card_type_change_source(i)
                           .V_flag || '***' || g_t_card_type_change_source(i)
                           .V_YEAR_MONTH);
    END LOOP;

    FOR i IN 1 .. g_t_card_source_main.count
    LOOP
      dbms_output.put_line(g_t_card_source_main(i)
                           .v_ass_card_no || '*' ||
                            g_t_card_source_main.count || '*' || '*' || i ||
                            ' *v_ass_type_id* ' || g_t_card_source_main(i)
                           .v_ass_type_id || ' *V_R_ADD* ' || g_t_card_source_main(i).V_R ||
                            ' *V_SOURCE* ' || g_t_card_source_main(i)
                           .V_SOURCE_ID || '***' || g_t_card_source_main(i)
                           .V_flag);
    END LOOP;*/

  END prc_ass_collect_change;

  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type
  || 功能描述 ：截至到当前月资金变动总和以及当前月变动资金变动记录结构体初始化
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_type(prm_group_id  IN NUMBER --集团
                                ,prm_hos_id    IN NUMBER --医院
                                ,prm_copy_code IN VARCHAR2 --账套
                                ,prm_acc_year  IN VARCHAR2 --年度
                                ,prm_acc_month IN VARCHAR2 --月份
                                 ) IS
    up_year_month VARCHAR2(6); --上个月
    IS_FLAG       INTEGER;
    V_TRUE        INTEGER;
  BEGIN
    --判断期初建账是在那个月 是否是建账年月 如是则生成期初建账数据
    --如果不是建账年月 则生成上个月期末数据作为本月期初数据
    --生成按照资产分类生成

    --初始化
    up_year_month := prm_acc_year || prm_acc_month;
    IS_FLAG       := 0;
    v_TRUE        := 0;
    --取上一个年月
    SELECT get_year_or_month(prm_acc_year, prm_acc_month, -1, 'yyyyMM')
      INTO up_year_month
      FROM DUAL;

    --删除本月数据
    DELETE FROM ass_collect_type_main
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    --判断上一个月是否有数据 有数据则取上个月的期末数据，没有则取期初数据

    SELECT COUNT(*)
      INTO IS_FLAG
      FROM ass_collect_type_main
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = substr(up_year_month, 0, 4)
       AND acc_month = substr(up_year_month, 5, 6);

    IF IS_FLAG > 0
    THEN
      --插入本月期初数据
      INSERT INTO ass_collect_type_main
        (group_id
        ,hos_id
        ,copy_code
        ,acc_year
        ,acc_month
        ,year_month
        ,ass_type_id
        ,r_begin
        ,r_add
        ,r_dec
        ,r_end
        ,l_begin
        ,l_add
        ,l_dec
        ,l_end)
        SELECT t1.group_id
              ,t1.hos_id
              ,t1.copy_code
              ,prm_acc_year
              ,prm_acc_month
              ,prm_acc_year || prm_acc_month
              ,t1.ass_type_id
              ,nvl(t2.r_end, 0)
              ,0
              ,0
              ,0
              ,nvl(t2.l_end, 0)
              ,0
              ,0
              ,0
          FROM ass_type_dict t1
          LEFT JOIN ass_collect_type_main t2
            ON t1.group_id = t2.group_id
           AND t1.hos_id = t2.hos_id
           AND t1.copy_code = t2.copy_code
           AND t1.ass_type_id = t2.ass_type_id
         WHERE t1.group_id = prm_group_id
           AND t1.hos_id = prm_hos_id
           AND t1.copy_code = prm_copy_code
           AND t1.is_last = 1
           AND t2.acc_year = substr(up_year_month, 0, 4)
           AND t2.acc_month = substr(up_year_month, 5, 6);
    ELSE

      INSERT INTO ass_collect_type_main
        (group_id
        ,hos_id
        ,copy_code
        ,acc_year
        ,acc_month
        ,year_month
        ,ass_type_id
        ,r_begin
        ,r_add
        ,r_dec
        ,r_end
        ,l_begin
        ,l_add
        ,l_dec
        ,l_end)
        SELECT t1.group_id
              ,t1.hos_id
              ,t1.copy_code
              ,prm_acc_year
              ,prm_acc_month
              ,prm_acc_year || prm_acc_month
              ,t1.ass_type_id
              ,SUM(t2.PRICE) PRICE
              ,0
              ,0
              ,0
              ,SUM(t2.DEPRE_MONEY) DEPRE_MONEY
              ,0
              ,0
              ,0
          FROM ass_no_dict t1
          LEFT JOIN v_ass_card_init t2
            ON t1.group_id = t2.GROUP_ID
           AND t1.hos_id = t2.HOS_ID
           AND t1.copy_code = t2.COPY_CODE
           AND t1.ass_id = t2.ASS_ID
           AND t1.ass_no = t2.ASS_NO
         WHERE t1.group_id = prm_group_id
           AND t1.hos_id = prm_hos_id
           AND t1.copy_code = prm_copy_code
           AND t2.USE_STATE NOT IN (6, 7, 8)
         GROUP BY t1.group_id, t1.hos_id, t1.copy_code, t1.ass_type_id;
    END IF;

    FOR i IN 1 .. g_t_cards.count
    LOOP

      SELECT COUNT(*)
        INTO V_TRUE
        FROM ass_collect_type_main
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month
         AND ass_type_id = g_t_cards(i).v_ass_type_id;

      IF V_TRUE > 0
      THEN
        UPDATE ass_collect_type_main
           SET r_add = nvl(r_add, 0) + nvl(g_t_cards(i).v_r_add, 0)
              ,r_dec = nvl(r_dec, 0) + nvl(g_t_cards(i).v_r_dec, 0)
              ,l_add = nvl(l_add, 0) + nvl(g_t_cards(i).v_l_add, 0)
              ,l_dec = nvl(l_dec, 0) + nvl(g_t_cards(i).v_l_dec, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_t_cards(i).v_ass_type_id;
      ELSE

        INSERT INTO ass_collect_type_main
          (group_id
          ,hos_id
          ,copy_code
          ,acc_year
          ,acc_month
          ,year_month
          ,ass_type_id
          ,r_begin
          ,r_add
          ,r_dec
          ,r_end
          ,l_begin
          ,l_add
          ,l_dec
          ,l_end)
          SELECT prm_group_id
                ,prm_hos_id
                ,prm_copy_code
                ,prm_acc_year
                ,prm_acc_month
                ,prm_acc_year || prm_acc_month
                ,g_t_cards(i).v_ass_type_id
                ,0
                ,nvl(g_t_cards(i).v_r_add, 0)
                ,nvl(g_t_cards(i).v_r_dec, 0)
                ,0
                ,0
                ,0
                ,0
                ,0
            FROM dual;

      END IF;

    END LOOP;

    --房屋及建筑物本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_house.count
    LOOP
      IF nvl(g_type_depre_amount_house(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_type_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_house(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_house(i).v_ass_type_id;
      ELSE
        UPDATE ass_collect_type_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_house(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_house(i).v_ass_type_id;
      END IF;

    END LOOP;

    --专用设备本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_special.count
    LOOP

      IF nvl(g_type_depre_amount_special(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_type_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_special(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_special(i).v_ass_type_id;
      ELSE
        UPDATE ass_collect_type_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_special(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_special(i).v_ass_type_id;
      END IF;

    END LOOP;

    --一般设备本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_general.count
    LOOP

      IF nvl(g_type_depre_amount_general(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_type_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_general(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_general(i).v_ass_type_id;
      ELSE
        UPDATE ass_collect_type_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_general(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_general(i).v_ass_type_id;
      END IF;

    END LOOP;

    --其他固定资产本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_other.count
    LOOP

      IF nvl(g_type_depre_amount_other(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_type_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_other(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_other(i).v_ass_type_id;
      ELSE
        UPDATE ass_collect_type_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_other(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_other(i).v_ass_type_id;
      END IF;

    END LOOP;

    --无形资产本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_inassets.count
    LOOP

      IF nvl(g_type_depre_amount_inassets(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_type_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_inassets(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_inassets(i).v_ass_type_id;
      ELSE
        UPDATE ass_collect_type_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_inassets(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_inassets(i).v_ass_type_id;
      END IF;

    END LOOP;

    --土地本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_land.count
    LOOP

      IF nvl(g_type_depre_amount_land(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_type_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_land(i).V_NOW_DEPRE_AMOUNT, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_land(i).v_ass_type_id;
      ELSE
        UPDATE ass_collect_type_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_land(i).V_ADD_DEPRE_AMOUNT, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_type_depre_amount_land(i).v_ass_type_id;
      END IF;

    END LOOP;

    --更新期末
    UPDATE ass_collect_type_main
       SET r_end = nvl(r_begin, 0) + nvl(r_add, 0) - nvl(r_dec, 0)
          ,l_end = nvl(l_begin, 0) + nvl(l_add, 0) - nvl(l_dec, 0)
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

  END prc_ass_collect_type;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_type_bustype
  || 功能描述 ：资产变动表  不包含期初和期末 期初期末结合资产月报表进行产出
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_type_bustype(prm_group_id  IN NUMBER --集团
                                        ,prm_hos_id    IN NUMBER --医院
                                        ,prm_copy_code IN VARCHAR2 --账套
                                        ,prm_acc_year  IN VARCHAR2 --年度
                                        ,prm_acc_month IN VARCHAR2 --月份
                                         ) IS
    v_true        INTEGER;
    v_i_type      INTEGER;
    V_ASS_CARD_NO ass_card_general.ass_card_no%TYPE;
    V_ASS_TYPE_ID ass_type_dict.ass_type_id%TYPE;
    V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE; --业务类型编码
    V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE; --业务类型名称
    V_IN_OUT      INTEGER;
    V_R           ass_card_general.price%TYPE;
    V_L           ass_card_general.depre_money%TYPE;

    V_FLAG INTEGER;
    V_TURE INTEGER;
  BEGIN
    v_true        := 0;
    v_i_type      := g_t_cards_type.count;
    V_ASS_CARD_NO := '';
    V_TYPE_CODE   := '';
    V_TYPE_NAME   := '';
    V_IN_OUT      := 1;
    V_ASS_TYPE_ID := 0;
    V_R           := 0;
    V_L           := 0;

    V_FLAG := 0;

    --初始化当月数据 期初
    DELETE FROM ass_collect_type_bustype
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    --按业务类型统计

    FOR i IN 1 .. g_t_card_main.count
    LOOP
      V_ASS_CARD_NO := g_t_card_main(i).V_ASS_CARD_NO;
      V_ASS_TYPE_ID := g_t_card_main(i).V_ASS_TYPE_ID;
      V_TYPE_CODE   := g_t_card_main(i).V_TYPE_CODE;
      V_TYPE_NAME   := g_t_card_main(i).V_TYPE_NAME;
      V_IN_OUT      := g_t_card_main(i).V_IN_OUT;
      V_R           := g_t_card_main(i).V_R;
      V_L           := g_t_card_main(i).V_L;

      V_FLAG := g_t_card_main(i).V_FLAG;
      V_TURE := 0;

      FOR j IN 1 .. g_t_cards_type.count
      LOOP

        IF g_t_cards_type(j).V_ASS_CARD_NO = V_ASS_CARD_NO AND g_t_cards_type(j)
           .V_TYPE_CODE = V_TYPE_CODE
        THEN
          IF V_FLAG = 1
          THEN
            g_t_cards_type(j).V_R_DEC := g_t_cards_type(j).V_R_DEC + V_R;
            g_t_cards_type(j).V_L_DEC := g_t_cards_type(j).V_L_DEC + V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 2
          THEN
            g_t_cards_type(j).V_R_DEC := g_t_cards_type(j).V_R_DEC + V_R;
            g_t_cards_type(j).V_L_DEC := g_t_cards_type(j).V_L_DEC + V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 3
          THEN
            g_t_cards_type(j).V_R_ADD := g_t_cards_type(j).V_R_ADD - V_R;
            g_t_cards_type(j).V_L_ADD := g_t_cards_type(j).V_L_ADD - V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 4
          THEN
            g_t_cards_type(j).V_R_DEC := g_t_cards_type(j).V_R_DEC - V_R;
            g_t_cards_type(j).V_L_DEC := g_t_cards_type(j).V_L_DEC - V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 5
          THEN
            g_t_cards_type(j).V_R_ADD := g_t_cards_type(j).V_R_ADD + V_R;
            g_t_cards_type(j).V_L_ADD := g_t_cards_type(j).V_L_ADD + V_L;
            V_TURE := 1;
          ELSIF V_FLAG = 6
          THEN

            g_t_cards_type(j).V_R_DEC := g_t_cards_type(j).V_R_DEC - V_R;
            g_t_cards_type(j).V_L_DEC := g_t_cards_type(j).V_L_DEC - V_L;
            V_TURE := 1;

          END IF;
          EXIT; --跳出内循环
        END IF;

      END LOOP;

      IF V_TURE = 0
      THEN
        v_i_type := g_t_cards_type.count + 1;

        IF V_FLAG = 1
        THEN
          g_t_cards_type(v_i_type).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_type(v_i_type).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_type(v_i_type).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_type(v_i_type).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_type(v_i_type).V_IN_OUT := V_IN_OUT;
          g_t_cards_type(v_i_type).V_R_ADD := V_R;
          g_t_cards_type(v_i_type).V_L_ADD := V_L;
          g_t_cards_type(v_i_type).V_R_DEC := 0;
          g_t_cards_type(v_i_type).V_L_DEC := 0;

        ELSIF V_FLAG = 2
        THEN
          g_t_cards_type(v_i_type).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_type(v_i_type).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_type(v_i_type).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_type(v_i_type).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_type(v_i_type).V_IN_OUT := V_IN_OUT;
          g_t_cards_type(v_i_type).V_R_ADD := 0;
          g_t_cards_type(v_i_type).V_L_ADD := 0;
          g_t_cards_type(v_i_type).V_R_DEC := V_R;
          g_t_cards_type(v_i_type).V_L_DEC := V_L;

        ELSIF V_FLAG = 5
        THEN
          g_t_cards_type(v_i_type).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_type(v_i_type).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_type(v_i_type).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_type(v_i_type).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_type(v_i_type).V_IN_OUT := V_IN_OUT;
          g_t_cards_type(v_i_type).V_R_ADD := V_R;
          g_t_cards_type(v_i_type).V_L_ADD := V_L;
          g_t_cards_type(v_i_type).V_R_DEC := 0;
          g_t_cards_type(v_i_type).V_L_DEC := 0;

        ELSIF V_FLAG = 6
        THEN
          g_t_cards_type(v_i_type).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_type(v_i_type).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_type(v_i_type).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_type(v_i_type).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_type(v_i_type).V_IN_OUT := V_IN_OUT;
          g_t_cards_type(v_i_type).V_R_ADD := 0;
          g_t_cards_type(v_i_type).V_L_ADD := 0;
          g_t_cards_type(v_i_type).V_R_DEC := -V_R;
          g_t_cards_type(v_i_type).V_L_DEC := -V_L;

          --不会存在 flag = 4 5 的情况 当循环为空时

        END IF;
      END IF;

    END LOOP;

    FOR i IN 1 .. g_t_cards_type.count
    LOOP

      SELECT COUNT(*)
        INTO V_TRUE

        FROM ass_collect_type_bustype
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month
         AND ass_type_id = g_t_cards_type(i).v_ass_type_id
         AND bus_type = g_t_cards_type(i).v_type_code;

      IF (V_TRUE > 0)
      THEN

        UPDATE ass_collect_type_bustype
           SET r_add = r_add + g_t_cards_type(i).v_r_add
              ,l_add = l_add + g_t_cards_type(i).v_l_add
              ,r_dec = r_dec + g_t_cards_type(i).v_r_dec
              ,l_dec = l_dec + g_t_cards_type(i).v_l_dec
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND ass_type_id = g_t_cards_type(i).v_ass_type_id
           AND bus_type = g_t_cards_type(i).v_type_code;

      ELSE
        --插入资产分类数据
        INSERT INTO ass_collect_type_bustype
          (group_id
          ,hos_id
          ,copy_code
          ,acc_year
          ,acc_month
          ,year_month
          ,ass_type_id
          ,bus_type
          ,bus_name
          ,in_out
          ,r_add
          ,r_dec
          ,l_add
          ,l_dec)
          SELECT prm_group_id
                ,prm_hos_id
                ,prm_copy_code
                ,prm_acc_year
                ,prm_acc_month
                ,prm_acc_year || prm_acc_month
                ,g_t_cards_type(i).V_ASS_TYPE_ID
                ,g_t_cards_type(i).V_TYPE_CODE
                ,g_t_cards_type(i).V_TYPE_NAME
                ,g_t_cards_type(i).V_IN_OUT
                ,g_t_cards_type(i).V_R_ADD
                ,g_t_cards_type(i).V_R_DEC
                ,g_t_cards_type(i).V_L_ADD
                ,g_t_cards_type(i).V_L_DEC
            FROM dual;
      END IF;

    END LOOP;
    --当月入库当月原值变动数据 采购增加数据需减去原值变动值
    prc_ass_collect_change_dec_it(prm_group_id
                                 ,prm_hos_id
                                 ,prm_copy_code
                                 ,prm_acc_year
                                 ,prm_acc_month);

    FOR i IN 1 .. g_t_change_price.count
    LOOP

      UPDATE ass_collect_type_bustype
         SET r_add = r_add - nvl(g_t_change_price(i).V_CHANGE_PRICE, 0)
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month
         AND ass_type_id = g_t_change_price(i).v_ass_type_id
         AND bus_type = '01';

    END LOOP;

    --折旧本期增加
    INSERT INTO ass_collect_type_bustype
      (group_id
      ,hos_id
      ,copy_code
      ,acc_year
      ,acc_month
      ,year_month
      ,ass_type_id
      ,bus_type
      ,bus_name
      ,in_out
      ,r_add
      ,r_dec
      ,l_add
      ,l_dec)
      SELECT prm_group_id
            ,prm_hos_id
            ,prm_copy_code
            ,prm_acc_year
            ,prm_acc_month
            ,prm_acc_year || prm_acc_month
            ,ass_type_id
            ,24
            ,'折旧增加'
            ,1
            ,SUM(now_depre_amount) now_depre_amount
            ,0
            ,SUM(depre_money) depre_money
            ,0
        FROM (SELECT t2.ass_type_id
                    ,SUM(t4.now_depre_amount) now_depre_amount
                    ,SUM(t1.depre_money) depre_money
                FROM ass_card_house t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_house t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state > 0

                 AND t4.now_depre_amount >= 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.now_depre_amount) now_depre_amount
                    ,SUM(t1.depre_money) depre_money
                FROM ass_card_special t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_special t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state > 0

                 AND t4.now_depre_amount >= 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.now_depre_amount) now_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_general t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_general t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state > 0

                 AND t4.now_depre_amount >= 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.now_depre_amount) now_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_inassets t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_inassets t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state > 0

                 AND t4.now_depre_amount >= 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.now_depre_amount) now_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_other t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_other t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state > 0

                 AND t4.now_depre_amount >= 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.now_depre_amount) now_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_land t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_land t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state > 0

                 AND t4.now_depre_amount >= 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id

              )
       GROUP BY ass_type_id;
    --折旧本期减少
    INSERT INTO ass_collect_type_bustype
      (group_id
      ,hos_id
      ,copy_code
      ,acc_year
      ,acc_month
      ,year_month
      ,ass_type_id
      ,bus_type
      ,bus_name
      ,in_out
      ,r_add
      ,r_dec
      ,l_add
      ,l_dec)
      SELECT prm_group_id
            ,prm_hos_id
            ,prm_copy_code
            ,prm_acc_year
            ,prm_acc_month
            ,prm_acc_year || prm_acc_month
            ,ass_type_id
            ,25
            ,'折旧减少'
            ,0
            ,0
            ,SUM(add_depre_amount) add_depre_amount
            ,0
            ,SUM(depre_money) depre_money

        FROM (SELECT t2.ass_type_id
                    ,SUM(t4.add_depre_amount) add_depre_amount
                    ,SUM(t1.depre_money) depre_money
                FROM ass_card_house t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_house t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state = 7
                 AND t4.add_depre_amount < 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.add_depre_amount) add_depre_amount
                    ,SUM(t1.depre_money) depre_money
                FROM ass_card_special t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_special t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state = 7
                 AND t4.add_depre_amount < 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.add_depre_amount) add_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_general t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_general t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state = 7
                 AND t4.add_depre_amount < 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.add_depre_amount) add_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_inassets t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_inassets t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state = 7
                 AND t4.add_depre_amount < 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.add_depre_amount) add_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_other t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_other t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state = 7
                 AND t4.add_depre_amount < 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id
              UNION ALL
              SELECT t2.ass_type_id
                    ,SUM(t4.add_depre_amount) add_depre_amount
                    ,SUM(t1.depre_money) depre_money

                FROM ass_card_land t1
                LEFT JOIN ass_no_dict t2
                  ON t1.group_id = t2.group_id
                 AND t1.hos_id = t2.hos_id
                 AND t1.copy_code = t2.copy_code
                 AND t1.ass_id = t2.ass_id
                 AND t1.ass_no = t2.ass_no
               INNER JOIN ass_depre_acc_land t4
                  ON t4.group_id = t1.group_id
                 AND t4.hos_id = t1.hos_id
                 AND t4.copy_code = t1.copy_code
                 AND t1.ass_card_no = t4.ass_card_no
               WHERE t1.group_id = prm_group_id
                 AND t1.hos_id = prm_hos_id
                 AND t1.copy_code = prm_copy_code
                 AND t1.use_state = 7
                 AND t4.add_depre_amount < 0
                 AND t4.depre_year = prm_acc_year
                 AND t4.depre_month = prm_acc_month
               GROUP BY t2.ass_type_id

              )
       GROUP BY ass_type_id;
  END prc_ass_collect_type_bustype;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_dept
  || 功能描述 ：资产变动表  不包含期初和期末 期初期末结合资产月报表进行产出
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_dept(prm_group_id  IN NUMBER --集团
                                ,prm_hos_id    IN NUMBER --医院
                                ,prm_copy_code IN VARCHAR2 --账套
                                ,prm_acc_year  IN VARCHAR2 --年度
                                ,prm_acc_month IN VARCHAR2 --月份
                                 ) IS
    up_year_month VARCHAR2(6); --上个月
    IS_FLAG       INTEGER;
    V_ASS_CARD_NO ass_card_general.ass_card_no%TYPE;
    V_R           ass_card_general.price%TYPE;
    V_L           ass_card_general.depre_money%TYPE;

    V_FLAG      INTEGER;
    V_TURE      INTEGER;
    v_i         INTEGER;
    v_dept_id   INTEGER;
    v_dept_no   INTEGER;
    v_dept_area ass_share_dept_init_special.area%TYPE;
    v_area_sum  ass_share_dept_init_special.area%TYPE;
  BEGIN
    V_ASS_CARD_NO := '';

    V_R := 0;
    V_L := 0;

    V_FLAG      := 0;
    V_TURE      := 0;
    v_i         := 0;
    v_dept_id   := 0;
    v_dept_no   := 0;
    v_dept_area := 0;
    v_area_sum  := 0;
    --判断期初建账是在那个月 是否是建账年月 如是则生成期初建账数据
    --如果不是建账年月 则生成上个月期末数据作为本月期初数据
    --生成按照资产分类生成

    --初始化
    up_year_month := prm_acc_year || prm_acc_month;
    IS_FLAG       := 0;
    --取上一个年月
    SELECT get_year_or_month(prm_acc_year, prm_acc_month, -1, 'yyyyMM')
      INTO up_year_month
      FROM DUAL;

    --删除本月数据
    DELETE FROM ass_collect_dept_main
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    --判断上一个月是否有数据 有数据则取上个月的期末数据，没有则取期初数据

    SELECT COUNT(*)
      INTO IS_FLAG
      FROM ass_collect_dept_main
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = substr(up_year_month, 0, 4)
       AND acc_month = substr(up_year_month, 5, 6);

    IF IS_FLAG > 0
    THEN
      --插入本月期初数据
      INSERT INTO ass_collect_dept_main
        (group_id
        ,hos_id
        ,copy_code
        ,acc_year
        ,acc_month
        ,year_month
        ,dept_id
        ,dept_no
        ,r_begin
        ,r_add
        ,r_dec
        ,r_end
        ,l_begin
        ,l_add
        ,l_dec
        ,l_end)
        SELECT t1.group_id
              ,t1.hos_id
              ,prm_copy_code
              ,prm_acc_year
              ,prm_acc_month
              ,prm_acc_year || prm_acc_month
              ,t1.dept_id
              ,t1.dept_no
              ,nvl(t2.r_end, 0)
              ,0
              ,0
              ,0
              ,nvl(t2.l_end, 0)
              ,0
              ,0
              ,0
          FROM hos_dept_dict t1
          LEFT JOIN ass_collect_dept_main t2
            ON t1.group_id = t2.group_id
           AND t1.hos_id = t2.hos_id
           AND t1.dept_id = t2.dept_id
           AND t1.dept_no = t2.dept_no
           AND t2.copy_code = prm_copy_code
           AND t2.acc_year = substr(up_year_month, 0, 4)
           AND t2.acc_month = substr(up_year_month, 5, 6)
         WHERE t1.group_id = prm_group_id
           AND t1.hos_id = prm_hos_id
           AND t1.is_last = 1;
    ELSE

      INSERT INTO ass_collect_dept_main
        (group_id
        ,hos_id
        ,copy_code
        ,acc_year
        ,acc_month
        ,year_month
        ,dept_id
        ,dept_no
        ,r_begin
        ,r_add
        ,r_dec
        ,r_end
        ,l_begin
        ,l_add
        ,l_dec
        ,l_end)
        SELECT t5.group_id
              ,t5.hos_id
              ,prm_copy_code
              ,prm_acc_year
              ,prm_acc_month
              ,prm_acc_year || prm_acc_month
              ,t5.dept_id
              ,t5.dept_no
              ,nvl(SUM(divide(t3.price * t3.area, t4.sum_area)), 0)
              ,0
              ,0
              ,0
              ,nvl(SUM(divide(t3.depre_money * t3.area, t4.sum_area)), 0)
              ,0
              ,0
              ,0
          FROM hos_dept_dict t5
          LEFT JOIN (SELECT t1.ass_card_no
                           ,t1.dept_id
                           ,t1.dept_no
                           ,area
                           ,t2.PRICE
                           ,t2.DEPRE_MONEY
                       FROM v_ass_share_dept_init t1
                       LEFT JOIN v_ass_card_init t2
                         ON t1.GROUP_ID = t2.GROUP_ID
                        AND t1.HOS_ID = t2.HOS_ID
                        AND t1.COPY_CODE = t2.COPY_CODE
                        AND t1.ass_naturs = t2.ass_naturs
                        AND t1.ASS_CARD_NO = t2.ASS_CARD_NO
                        AND t1.group_id = prm_group_id
                        AND t1.hos_id = prm_hos_id
                        AND t1.COPY_CODE = prm_copy_code
                        AND t2.USE_STATE NOT IN (6, 7, 8)) t3
            ON t3.dept_id = t5.dept_id
           AND t3.dept_no = t5.dept_no
          LEFT JOIN (SELECT ass_card_no, SUM(area) sum_area
                       FROM v_ass_share_dept_init t1
                      GROUP BY ass_card_no) t4
            ON t3.ass_card_no = t4.ass_card_no
         WHERE t5.group_id = prm_group_id
           AND t5.hos_id = prm_hos_id
           AND t5.is_last = 1
         GROUP BY t5.group_id, t5.hos_id, t5.dept_id, t5.dept_no;

    END IF;

    FOR i IN 1 .. g_t_card_dept_main.count
    LOOP
      V_DEPT_ID     := g_t_card_dept_main(i).V_DEPT_ID;
      V_DEPT_NO     := g_t_card_dept_main(i).V_DEPT_NO;
      V_ASS_CARD_NO := g_t_card_dept_main(i).V_ASS_CARD_NO;
      v_dept_area   := g_t_card_dept_main(i).V_M;
      v_area_sum    := g_t_card_dept_main(i).V_D;
      V_R           := g_t_card_dept_main(i).V_R;
      V_L           := g_t_card_dept_main(i).V_L;

      V_FLAG := g_t_card_dept_main(i).V_FLAG;
      V_TURE := 0;

      FOR j IN 1 .. g_t_cards_dept.count
      LOOP

        IF g_t_cards_dept(j).V_ASS_CARD_NO = V_ASS_CARD_NO AND g_t_cards_dept(j)
           .V_DEPT_ID = V_DEPT_ID
        THEN
          IF V_FLAG = 1
          THEN
            g_t_cards_dept(j).V_R_ADD := g_t_cards_dept(j)
                                         .V_R_ADD +
                                          divide(V_R * v_dept_area
                                                ,v_area_sum);
            g_t_cards_dept(j).V_L_ADD := g_t_cards_dept(j)
                                         .V_L_ADD +
                                          divide(V_L * v_dept_area
                                                ,v_area_sum);
            V_TURE := 1;
          ELSIF V_FLAG = 2
          THEN
            g_t_cards_dept(j).V_R_DEC := g_t_cards_dept(j)
                                         .V_R_DEC +
                                          divide(V_R * v_dept_area
                                                ,v_area_sum);

            g_t_cards_dept(j).V_L_DEC := g_t_cards_dept(j)
                                         .V_L_DEC +
                                          divide(V_L * v_dept_area
                                                ,v_area_sum);

            V_TURE := 1;
          ELSIF V_FLAG = 3
          THEN
            g_t_cards_dept(j).V_R_ADD := g_t_cards_dept(j)
                                         .V_R_ADD -
                                          divide(V_R * v_dept_area
                                                ,v_area_sum);

            g_t_cards_dept(j).V_L_ADD := g_t_cards_dept(j)
                                         .V_L_ADD -
                                          divide(V_L * v_dept_area
                                                ,v_area_sum);

            V_TURE := 1;
          ELSIF V_FLAG = 4
          THEN
            g_t_cards_dept(j).V_R_DEC := g_t_cards_dept(j)
                                         .V_R_DEC -
                                          divide(V_R * v_dept_area
                                                ,v_area_sum);

            g_t_cards_dept(j).V_L_DEC := g_t_cards_dept(j)
                                         .V_L_DEC -
                                          divide(V_L * v_dept_area
                                                ,v_area_sum);

            V_TURE := 1;
          ELSIF V_FLAG = 5
          THEN
            g_t_cards_dept(j).V_R_ADD := g_t_cards_dept(j)
                                         .V_R_ADD +
                                          divide(V_R * v_dept_area
                                                ,v_area_sum);

            g_t_cards_dept(j).V_L_ADD := g_t_cards_dept(j)
                                         .V_L_ADD +
                                          divide(V_L * v_dept_area
                                                ,v_area_sum);

            V_TURE := 1;
          ELSIF V_FLAG = 6
          THEN

            g_t_cards_dept(j).V_R_DEC := g_t_cards_dept(j)
                                         .V_R_DEC -
                                          divide(V_R * v_dept_area
                                                ,v_area_sum);

            g_t_cards_dept(j).V_L_DEC := g_t_cards_dept(j)
                                         .V_L_DEC -
                                          divide(V_L * v_dept_area
                                                ,v_area_sum);

            V_TURE := 1;

          END IF;
          EXIT; --跳出内循环
        END IF;
      END LOOP;

      IF V_TURE = 0
      THEN
        v_i := g_t_cards_dept.count + 1;

        IF V_FLAG = 1
        THEN
          g_t_cards_dept(v_i).V_DEPT_ID := V_DEPT_ID;
          g_t_cards_dept(v_i).V_DEPT_NO := V_DEPT_NO;
          g_t_cards_dept(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;

          g_t_cards_dept(v_i).V_R_ADD := divide(V_R * v_dept_area
                                               ,v_area_sum);
          g_t_cards_dept(v_i).V_L_ADD := divide(V_L * v_dept_area
                                               ,v_area_sum);
          g_t_cards_dept(v_i).V_R_DEC := 0;
          g_t_cards_dept(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 2
        THEN
          g_t_cards_dept(v_i).V_DEPT_ID := V_DEPT_ID;
          g_t_cards_dept(v_i).V_DEPT_NO := V_DEPT_NO;
          g_t_cards_dept(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;

          g_t_cards_dept(v_i).V_R_ADD := 0;
          g_t_cards_dept(v_i).V_L_ADD := 0;
          g_t_cards_dept(v_i).V_R_DEC := divide(V_R * v_dept_area
                                               ,v_area_sum);
          g_t_cards_dept(v_i).V_L_DEC := divide(V_L * v_dept_area
                                               ,v_area_sum);

        ELSIF V_FLAG = 5
        THEN
          g_t_cards_dept(v_i).V_DEPT_ID := V_DEPT_ID;
          g_t_cards_dept(v_i).V_DEPT_NO := V_DEPT_NO;
          g_t_cards_dept(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;

          g_t_cards_dept(v_i).V_R_ADD := V_R;
          g_t_cards_dept(v_i).V_L_ADD := V_L;
          g_t_cards_dept(v_i).V_R_DEC := 0;
          g_t_cards_dept(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 6
        THEN
          g_t_cards_dept(v_i).V_DEPT_ID := V_DEPT_ID;
          g_t_cards_dept(v_i).V_DEPT_NO := V_DEPT_NO;
          g_t_cards_dept(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;

          g_t_cards_dept(v_i).V_R_ADD := 0;
          g_t_cards_dept(v_i).V_L_ADD := 0;
          g_t_cards_dept(v_i).V_R_DEC := -V_R;
          g_t_cards_dept(v_i).V_L_DEC := -V_L;

          --不会存在 flag = 4 5 的情况 当循环为空时

        END IF;
      END IF;

    END LOOP;

    --更新科室统计报表
    --更新原值期初和累计折旧期初
    FOR i IN 1 .. g_t_cards_dept.count
    LOOP
      --更新数据
      --插入数据  当前处理
      UPDATE ass_collect_dept_main
         SET r_add = nvl(r_add, 0) + nvl(g_t_cards_dept(i).v_r_add, 0)
             --   ,l_add = nvl(l_add, 0) + nvl(g_t_cards_dept(i).v_l_add, 0)
            ,r_dec = nvl(r_dec, 0) + nvl(g_t_cards_dept(i).v_r_dec, 0)
      -- ,l_dec = nvl(l_dec, 0) + nvl(g_t_cards_dept(i).v_l_dec, 0)
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND dept_id = g_t_cards_dept(i).v_dept_id
         AND dept_no = g_t_cards_dept(i).v_dept_no
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month;

    END LOOP;

    --房屋及建筑物本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_house.count
    LOOP
      IF nvl(g_type_depre_amount_house(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_dept_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_house(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month

           AND dept_id = g_type_depre_amount_house(i).v_dept_id
           AND dept_no = g_type_depre_amount_house(i).v_dept_no;
      ELSE
        UPDATE ass_collect_dept_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_house(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month

           AND dept_id = g_type_depre_amount_house(i).v_dept_id
           AND dept_no = g_type_depre_amount_house(i).v_dept_no;
      END IF;

    END LOOP;

    --专用设备本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_special.count
    LOOP

      IF nvl(g_type_depre_amount_special(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_dept_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_special(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_special(i).v_dept_id
           AND dept_no = g_type_depre_amount_special(i).v_dept_no;
      ELSE
        UPDATE ass_collect_dept_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_special(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_special(i).v_dept_id
           AND dept_no = g_type_depre_amount_special(i).v_dept_no;
      END IF;

    END LOOP;

    --一般设备本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_general.count
    LOOP

      IF nvl(g_type_depre_amount_general(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_dept_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_general(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_general(i).v_dept_id
           AND dept_no = g_type_depre_amount_general(i).v_dept_no;
      ELSE
        UPDATE ass_collect_dept_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_general(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_general(i).v_dept_id
           AND dept_no = g_type_depre_amount_general(i).v_dept_no;
      END IF;

    END LOOP;

    --其他固定资产本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_other.count
    LOOP

      IF nvl(g_type_depre_amount_other(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_dept_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_other(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_other(i).v_dept_id
           AND dept_no = g_type_depre_amount_other(i).v_dept_no;
      ELSE
        UPDATE ass_collect_dept_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_other(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_other(i).v_dept_id
           AND dept_no = g_type_depre_amount_other(i).v_dept_no;
      END IF;

    END LOOP;

    --无形资产本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_inassets.count
    LOOP

      IF nvl(g_type_depre_amount_inassets(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_dept_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_inassets(i).V_NOW_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_inassets(i).v_dept_id
           AND dept_no = g_type_depre_amount_inassets(i).v_dept_no;
      ELSE
        UPDATE ass_collect_dept_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_inassets(i).V_ADD_DEPRE_AMOUNT
                          ,0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_inassets(i).v_dept_id
           AND dept_no = g_type_depre_amount_inassets(i).v_dept_no;
      END IF;

    END LOOP;

    --土地本期折旧更新 折旧增加 放贷方
    FOR i IN 1 .. g_type_depre_amount_land.count
    LOOP

      IF nvl(g_type_depre_amount_land(i).V_ADD_DEPRE_AMOUNT, 0) >= 0
      THEN
        UPDATE ass_collect_dept_main
           SET l_add = nvl(l_add, 0) +
                       nvl(g_type_depre_amount_land(i).V_NOW_DEPRE_AMOUNT, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_land(i).v_dept_id
           AND dept_no = g_type_depre_amount_land(i).v_dept_no;
      ELSE
        UPDATE ass_collect_dept_main
           SET l_dec = nvl(l_dec, 0) -
                       nvl(g_type_depre_amount_land(i).V_ADD_DEPRE_AMOUNT, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month
           AND dept_id = g_type_depre_amount_land(i).v_dept_id
           AND dept_no = g_type_depre_amount_land(i).v_dept_no;
      END IF;

    END LOOP;

    --更新期末
    UPDATE ass_collect_dept_main
       SET r_end = nvl(r_begin, 0) + nvl(r_add, 0) - nvl(r_dec, 0)
          ,l_end = nvl(l_begin, 0) + nvl(l_add, 0) - nvl(l_dec, 0)
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

  END prc_ass_collect_dept;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_source
  || 功能描述 ：资产变动表  不包含期初和期末 期初期末结合资产月报表进行产出
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_source(prm_group_id  IN NUMBER --集团
                                  ,prm_hos_id    IN NUMBER --医院
                                  ,prm_copy_code IN VARCHAR2 --账套
                                  ,prm_acc_year  IN VARCHAR2 --年度
                                  ,prm_acc_month IN VARCHAR2 --月份
                                   ) IS
    up_year_month VARCHAR2(6); --上个月
    IS_FLAG       INTEGER;
    V_ASS_CARD_NO ass_card_general.ass_card_no%TYPE;
    V_ASS_TYPE_ID ass_type_dict.ass_type_id%TYPE;
    V_SOURCE_ID   HOS_SOURCE.SOURCE_ID%TYPE;
    V_SOURCE_CODE HOS_SOURCE.SOURCE_CODE%TYPE;
    V_SOURCE_NAME HOS_SOURCE.SOURCE_NAME%TYPE;
    V_TYPE_CODE   ASS_CARD_SPECIAL.BUY_TYPE%TYPE; --业务类型编码
    V_TYPE_NAME   ASS_CARD_SPECIAL.BUY_TYPE%TYPE; --业务类型名称
    V_IN_OUT      INTEGER;
    V_R           ass_card_general.price%TYPE;
    V_L           ass_card_general.depre_money%TYPE;
    V_TRUE        INTEGER;
    V_FLAG        INTEGER;
    v_i           INTEGER;
  BEGIN
    --判断期初建账是在那个月 是否是建账年月 如是则生成期初建账数据
    --如果不是建账年月 则生成上个月期末数据作为本月期初数据
    --生成按照资产分类生成

    --初始化
    up_year_month := prm_acc_year || prm_acc_month;
    IS_FLAG       := 0;
    V_ASS_CARD_NO := '';
    V_TYPE_CODE   := '';
    V_TYPE_NAME   := '';
    V_IN_OUT      := 1;
    V_ASS_TYPE_ID := 0;
    V_SOURCE_ID   := 0;
    V_R           := 0;
    V_L           := 0;
    v_i           := 0;
    V_TRUE        := 0;
    V_FLAG        := 0;
    V_SOURCE_CODE := '';
    V_SOURCE_NAME := '';
    --取上一个年月
    SELECT get_year_or_month(prm_acc_year, prm_acc_month, -1, 'yyyyMM')
      INTO up_year_month
      FROM DUAL;

    --删除本月数据
    DELETE FROM ass_collect_type_source
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;

    --判断上一个月是否有数据 有数据则取上个月的期末数据，没有则取期初数据

    SELECT COUNT(*)
      INTO IS_FLAG
      FROM ass_collect_type_source
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = substr(up_year_month, 0, 4)
       AND acc_month = substr(up_year_month, 5, 6);

    IF IS_FLAG > 0
    THEN
      --插入本月期初数据
      INSERT INTO ass_collect_type_source
        (group_id
        ,hos_id
        ,copy_code
        ,acc_year
        ,acc_month
        ,year_month
        ,ass_type_id
        ,source_id
        ,source_code
        ,source_name
        ,r_begin
        ,r_add
        ,r_dec
        ,r_end
        ,l_begin
        ,l_add
        ,l_dec
        ,l_end)
        SELECT t1.group_id
              ,t1.hos_id
              ,t1.copy_code
              ,prm_acc_year
              ,prm_acc_month
              ,prm_acc_year || prm_acc_month
              ,t1.ass_type_id
              ,t2.source_id
              ,t2.source_code
              ,t2.source_name
              ,nvl(t2.r_end, 0)
              ,0
              ,0
              ,0
              ,nvl(t2.l_end, 0)
              ,0
              ,0
              ,0
          FROM ass_type_dict t1
          LEFT JOIN ass_collect_type_source t2
            ON t1.group_id = t2.group_id
           AND t1.hos_id = t2.hos_id
           AND t1.copy_code = t2.copy_code
           AND t1.ass_type_id = t2.ass_type_id
         WHERE t1.group_id = prm_group_id
           AND t1.hos_id = prm_hos_id
           AND t1.copy_code = prm_copy_code
           AND t1.is_last = 1
           AND t2.acc_year = substr(up_year_month, 0, 4)
           AND t2.acc_month = substr(up_year_month, 5, 6);

    ELSE

      --插入资产分类数据
      INSERT INTO ass_collect_type_source
        (group_id
        ,hos_id
        ,copy_code
        ,acc_year
        ,acc_month
        ,year_month
        ,ass_type_id
        ,source_id
        ,source_code
        ,source_name
        ,r_begin
        ,r_add
        ,r_dec
        ,r_end
        ,l_begin
        ,l_add
        ,l_dec
        ,l_end)
        SELECT t1.group_id
              ,t1.hos_id
              ,t1.copy_code
              ,prm_acc_year
              ,prm_acc_month
              ,prm_acc_year || prm_acc_month
              ,t1.ass_type_id
              ,t2.source_id
              ,t2.source_code
              ,t2.source_name
              ,PRICE
              ,0
              ,0
              ,0
              ,DEPRE_MONEY
              ,0
              ,0
              ,0
          FROM (SELECT t1.group_id
                      ,t1.hos_id
                      ,t1.copy_code

                      ,t1.ass_type_id

                      ,t3.SOURCE_ID
                      ,SUM(t3.PRICE) PRICE

                      ,SUM(t3.DEPRE_MONEY) DEPRE_MONEY

                  FROM ass_no_dict t1
                  LEFT JOIN v_ass_card_init t2
                    ON t1.group_id = t2.GROUP_ID
                   AND t1.hos_id = t2.HOS_ID
                   AND t1.copy_code = t2.COPY_CODE
                   AND t1.ass_id = t2.ASS_ID
                   AND t1.ass_no = t2.ASS_NO
                  LEFT JOIN v_ass_resource_init t3
                    ON t2.GROUP_ID = t3.GROUP_ID
                   AND t2.HOS_ID = t3.HOS_ID
                   AND t2.COPY_CODE = t3.COPY_CODE
                   AND t2.ASS_CARD_NO = t3.ASS_CARD_NO
                   AND t2.ass_naturs = t3.ass_naturs

                 WHERE t1.group_id = prm_group_id
                   AND t1.hos_id = prm_hos_id
                   AND t1.copy_code = prm_copy_code
                   AND nvl(t3.source_id, 0) != 0
                   AND t2.USE_STATE NOT IN (6, 7, 8)
                 GROUP BY t1.group_id
                         ,t1.hos_id
                         ,t1.copy_code
                         ,t1.ass_type_id
                         ,t3.SOURCE_ID) t1
          LEFT JOIN hos_source t2
            ON t2.group_id = t1.group_id
           AND t2.hos_id = t1.hos_id
           AND t2.source_id = t1.SOURCE_ID;

    END IF;

    FOR i IN 1 .. g_t_card_source_main.count
    LOOP
      V_ASS_CARD_NO := g_t_card_source_main(i).V_ASS_CARD_NO;
      V_ASS_TYPE_ID := g_t_card_source_main(i).V_ASS_TYPE_ID;
      V_SOURCE_ID   := g_t_card_source_main(i).V_SOURCE_ID;
      V_TYPE_CODE   := g_t_card_source_main(i).V_TYPE_CODE;
      V_TYPE_NAME   := g_t_card_source_main(i).V_TYPE_NAME;
      V_R           := g_t_card_source_main(i).V_R;
      V_L           := g_t_card_source_main(i).V_L;

      V_FLAG := g_t_card_source_main(i).V_FLAG;
      V_TRUE := 0;

      FOR j IN 1 .. g_t_cards_source.count
      LOOP

        IF g_t_cards_source(j).V_ASS_CARD_NO = V_ASS_CARD_NO AND g_t_cards_source(j)
           .v_source_id = V_SOURCE_ID
        THEN
          IF V_FLAG = 1
          THEN
            g_t_cards_source(j).V_R_ADD := g_t_cards_source(j).V_R_ADD + V_R;
            g_t_cards_source(j).V_L_ADD := g_t_cards_source(j).V_L_ADD + 0;
            V_TRUE := 1;
          ELSIF V_FLAG = 2
          THEN
            g_t_cards_source(j).V_R_DEC := g_t_cards_source(j).V_R_DEC + V_R;
            g_t_cards_source(j).V_L_DEC := g_t_cards_source(j).V_L_DEC + 0;
            V_TRUE := 1;
          ELSIF V_FLAG = 3
          THEN
            g_t_cards_source(j).V_R_ADD := g_t_cards_source(j).V_R_ADD - V_R;
            g_t_cards_source(j).V_L_ADD := g_t_cards_source(j).V_L_ADD - V_L;
            V_TRUE := 1;
          ELSIF V_FLAG = 4
          THEN
            g_t_cards_source(j).V_R_DEC := g_t_cards_source(j).V_R_DEC - V_R;
            g_t_cards_source(j).V_L_DEC := g_t_cards_source(j).V_L_DEC - V_L;
            V_TRUE := 1;
          ELSIF V_FLAG = 5
          THEN
            g_t_cards_source(j).V_R_ADD := g_t_cards_source(j).V_R_ADD + V_R;
            g_t_cards_source(j).V_L_ADD := g_t_cards_source(j).V_L_ADD + V_L;
            V_TRUE := 1;
          ELSIF V_FLAG = 6
          THEN

            g_t_cards_source(j).V_R_DEC := g_t_cards_source(j).V_R_DEC - V_R;
            g_t_cards_source(j).V_L_DEC := g_t_cards_source(j).V_L_DEC - V_L;
            V_TRUE := 1;

          END IF;
          EXIT; --跳出内循环
        END IF;
      END LOOP;

      IF V_TRUE = 0
      THEN
        v_i := g_t_cards_source.count + 1;

        IF V_FLAG = 1
        THEN
          g_t_cards_source(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_source(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_source(v_i).V_SOURCE_ID := V_SOURCE_ID;
          g_t_cards_source(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_source(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_source(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards_source(v_i).V_R_ADD := V_R;
          g_t_cards_source(v_i).V_L_ADD := 0;
          g_t_cards_source(v_i).V_R_DEC := 0;
          g_t_cards_source(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 2
        THEN
          g_t_cards_source(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_source(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_source(v_i).V_SOURCE_ID := V_SOURCE_ID;
          g_t_cards_source(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_source(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_source(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards_source(v_i).V_R_ADD := 0;
          g_t_cards_source(v_i).V_L_ADD := 0;
          g_t_cards_source(v_i).V_R_DEC := V_R;
          g_t_cards_source(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 5
        THEN
          g_t_cards_source(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_source(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_source(v_i).V_SOURCE_ID := V_SOURCE_ID;
          g_t_cards_source(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_source(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_source(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards_source(v_i).V_R_ADD := V_R;
          g_t_cards_source(v_i).V_L_ADD := V_L;
          g_t_cards_source(v_i).V_R_DEC := 0;
          g_t_cards_source(v_i).V_L_DEC := 0;

        ELSIF V_FLAG = 6
        THEN
          g_t_cards_source(v_i).V_ASS_TYPE_ID := V_ASS_TYPE_ID;
          g_t_cards_source(v_i).V_ASS_CARD_NO := V_ASS_CARD_NO;
          g_t_cards_source(v_i).V_SOURCE_ID := V_SOURCE_ID;
          g_t_cards_source(v_i).V_TYPE_CODE := V_TYPE_CODE;
          g_t_cards_source(v_i).V_TYPE_NAME := V_TYPE_NAME;
          g_t_cards_source(v_i).V_IN_OUT := V_IN_OUT;
          g_t_cards_source(v_i).V_R_ADD := 0;
          g_t_cards_source(v_i).V_L_ADD := 0;
          g_t_cards_source(v_i).V_R_DEC := -V_R;
          g_t_cards_source(v_i).V_L_DEC := -V_L;

          --不会存在 flag = 4 5 的情况 当循环为空时

        END IF;
      END IF;

    END LOOP;
    --更新 本期增加 和本期减少
    FOR i IN 1 .. g_t_cards_source.count
    LOOP

      SELECT COUNT(*)
        INTO V_TRUE
        FROM ass_collect_type_source
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND ass_type_id = g_t_cards_source(i).v_ass_type_id
         AND source_id = g_t_cards_source(i).v_source_id
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month;

      IF V_TRUE > 0
      THEN
        UPDATE ass_collect_type_source
           SET r_add = nvl(r_add, 0) + nvl(g_t_cards_source(i).v_r_add, 0)
              ,r_dec = nvl(r_dec, 0) + nvl(g_t_cards_source(i).v_r_dec, 0)
              
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND ass_type_id = g_t_cards_source(i).v_ass_type_id
           AND source_id = g_t_cards_source(i).v_source_id
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month;
      ELSE

        SELECT SOURCE_CODE, source_name
          INTO V_SOURCE_CODE, V_SOURCE_NAME
          FROM hos_source
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND source_id = g_t_cards_source(i).v_source_id;

        INSERT INTO ass_collect_type_source
          (group_id
          ,hos_id
          ,copy_code
          ,acc_year
          ,acc_month
          ,year_month
          ,ass_type_id
          ,source_id
          ,source_code
          ,source_name
          ,r_begin
          ,r_add
          ,r_dec
          ,r_end
          ,l_begin
          ,l_add
          ,l_dec
          ,l_end)
          SELECT prm_group_id
                ,prm_hos_id
                ,prm_copy_code
                ,prm_acc_year
                ,prm_acc_month
                ,prm_acc_year || prm_acc_month
                ,g_t_cards_source(i).v_ass_type_id
                ,g_t_cards_source(i).v_source_id
                ,V_SOURCE_CODE
                ,V_SOURCE_name
                ,0
                ,nvl(g_t_cards_source(i).v_r_add, 0)
                ,nvl(g_t_cards_source(i).v_r_dec, 0)
                ,0
                ,0
                ,0
                ,0
                ,0
            FROM DUAL;
      END IF;

    END LOOP;


    --本期增加
    FOR re IN (
               
               SELECT t3.ass_type_id
                      ,t1.source_id
                      ,SUM(t1.NOW_DEPRE_AMOUNT) NOW_DEPRE_AMOUNT
                 FROM v_ass_depre_acc t1
                 LEFT JOIN v_ass_card t2
                   ON t1.GROUP_ID = t2.GROUP_ID
                  AND t1.HOS_ID = t2.HOS_ID
                  AND t1.COPY_CODE = t2.COPY_CODE
                  AND t1.ASS_CARD_NO = t2.ASS_CARD_NO
                 LEFT JOIN ass_dict t3
                   ON t2.GROUP_ID = t3.GROUP_ID
                  AND t2.HOS_ID = t3.HOS_ID
                  AND t2.COPY_CODE = t3.COPY_CODE
                  AND t2.ASS_ID = t3.ass_id
                WHERE t1.GROUP_ID = prm_group_id
                  AND t1.HOS_ID = prm_hos_id
                  AND t1.COPY_CODE = prm_copy_code
                  AND t1.DEPRE_YEAR = prm_acc_year
                  AND t1.DEPRE_MONTH = prm_acc_month
                  AND t1.NOW_DEPRE_AMOUNT >= 0
                  AND nvl(t1.NOTE, '0') != '冲减'
                GROUP BY t3.ass_type_id, t1.source_id
                ORDER BY t3.ass_type_id, t1.source_id)
    LOOP
    
      SELECT COUNT(*)
        INTO V_TRUE
        FROM ass_collect_type_source
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND ass_type_id = re.ass_type_id
         AND source_id = re.source_id
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month;
    
      IF V_TRUE > 0
      THEN
        UPDATE ass_collect_type_source
           SET l_add = nvl(l_add, 0) + nvl(re.NOW_DEPRE_AMOUNT, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND ass_type_id = re.ass_type_id
           AND source_id = re.source_id
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month;
      ELSE
      
        SELECT SOURCE_CODE, source_name
          INTO V_SOURCE_CODE, V_SOURCE_NAME
          FROM hos_source
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND source_id = re.source_id;
      
        INSERT INTO ass_collect_type_source
          (group_id
          ,hos_id
          ,copy_code
          ,acc_year
          ,acc_month
          ,year_month
          ,ass_type_id
          ,source_id
          ,source_code
          ,source_name
          ,r_begin
          ,r_add
          ,r_dec
          ,r_end
          ,l_begin
          ,l_add
          ,l_dec
          ,l_end)
          SELECT prm_group_id
                ,prm_hos_id
                ,prm_copy_code
                ,prm_acc_year
                ,prm_acc_month
                ,prm_acc_year || prm_acc_month
                ,re.ass_type_id
                ,re.source_id
                ,V_SOURCE_CODE
                ,V_SOURCE_name
                ,0
                ,0
                ,0
                ,0
                ,0
                ,re.now_depre_amount
                ,0
                ,0
            FROM DUAL;
      END IF;
    END LOOP;
    --本期减少
    FOR re IN (
               
               SELECT t3.ass_type_id
                      ,t1.source_id
                      ,SUM(t1.NOW_DEPRE_AMOUNT) NOW_DEPRE_AMOUNT
                 FROM v_ass_depre_acc t1
                 LEFT JOIN v_ass_card t2
                   ON t1.GROUP_ID = t2.GROUP_ID
                  AND t1.HOS_ID = t2.HOS_ID
                  AND t1.COPY_CODE = t2.COPY_CODE
                  AND t1.ASS_CARD_NO = t2.ASS_CARD_NO
                 LEFT JOIN ass_dict t3
                   ON t2.GROUP_ID = t3.GROUP_ID
                  AND t2.HOS_ID = t3.HOS_ID
                  AND t2.COPY_CODE = t3.COPY_CODE
                  AND t2.ASS_ID = t3.ass_id
                WHERE t1.GROUP_ID = prm_group_id
                  AND t1.HOS_ID = prm_hos_id
                  AND t1.COPY_CODE = prm_copy_code
                  AND t1.DEPRE_YEAR = prm_acc_year
                  AND t1.DEPRE_MONTH = prm_acc_month
                  AND t1.NOW_DEPRE_AMOUNT < 0
                  AND nvl(t1.NOTE, '0') != '冲减'
                GROUP BY t3.ass_type_id, t1.source_id
                ORDER BY t3.ass_type_id, t1.source_id)
    LOOP
    
      SELECT COUNT(*)
        INTO V_TRUE
        FROM ass_collect_type_source
       WHERE group_id = prm_group_id
         AND hos_id = prm_hos_id
         AND copy_code = prm_copy_code
         AND ass_type_id = re.ass_type_id
         AND source_id = re.source_id
         AND acc_year = prm_acc_year
         AND acc_month = prm_acc_month;
    
      IF V_TRUE > 0
      THEN
        UPDATE ass_collect_type_source
           SET l_dec = nvl(l_dec, 0) + nvl(re.NOW_DEPRE_AMOUNT, 0)
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND copy_code = prm_copy_code
           AND ass_type_id = re.ass_type_id
           AND source_id = re.source_id
           AND acc_year = prm_acc_year
           AND acc_month = prm_acc_month;
      ELSE
      
        SELECT SOURCE_CODE, source_name
          INTO V_SOURCE_CODE, V_SOURCE_NAME
          FROM hos_source
         WHERE group_id = prm_group_id
           AND hos_id = prm_hos_id
           AND source_id = re.source_id;
      
        INSERT INTO ass_collect_type_source
          (group_id
          ,hos_id
          ,copy_code
          ,acc_year
          ,acc_month
          ,year_month
          ,ass_type_id
          ,source_id
          ,source_code
          ,source_name
          ,r_begin
          ,r_add
          ,r_dec
          ,r_end
          ,l_begin
          ,l_add
          ,l_dec
          ,l_end)
          SELECT prm_group_id
                ,prm_hos_id
                ,prm_copy_code
                ,prm_acc_year
                ,prm_acc_month
                ,prm_acc_year || prm_acc_month
                ,re.ass_type_id
                ,re.source_id
                ,V_SOURCE_CODE
                ,V_SOURCE_name
                ,0
                ,0
                ,0
                ,0
                ,0
                ,0
                ,re.now_depre_amount
                ,0
            FROM DUAL;
      END IF;
    END LOOP;
    --更新期末

    --更新期末
    UPDATE ass_collect_type_source
       SET r_end = nvl(r_begin, 0) + nvl(r_add, 0) - nvl(r_dec, 0)
          ,l_end = nvl(l_begin, 0) + nvl(l_add, 0) - nvl(l_dec, 0)
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND acc_year = prm_acc_year
       AND acc_month = prm_acc_month;
  END prc_ass_collect_source;
  /*-------------------------------------------------------------------------
  || 过程名称 ：prc_ass_collect_next_month
  || 功能描述 ：生成下个月的期初
  || 参数描述 ：参数标识          名称             输入/输出    类型
  ||            -------------------------------------------------------------
  ||            prm_group_id        集团             IN           NUMBER
  ||            prm_hos_id          医院             IN           NUMBER
  ||            prm_copy_code       账套             IN           VARCHAR2
  ||            prm_acc_year        年度             IN           VARCHAR2
  ||            prm_acc_month       月份             IN           VARCHAR2
  ||
  || 作    者 ：           完成日期 ：
  ||-------------------------------------------------------------------------
  || 修改记录 ：           修改日期：
  ||-------------------------------------------------------------------------*/
  PROCEDURE prc_ass_collect_next_month(prm_group_id  IN NUMBER --集团
                                      ,prm_hos_id    IN NUMBER --医院
                                      ,prm_copy_code IN VARCHAR2 --账套
                                      ,prm_acc_year  IN VARCHAR2 --年度
                                      ,prm_acc_month IN VARCHAR2 --月份
                                       ) IS
    next_year_month VARCHAR2(6); --下一个月
  BEGIN

    --初始化
    next_year_month := prm_acc_year || prm_acc_month;

    --取下一个年月
    SELECT get_year_or_month(prm_acc_year, prm_acc_month, 1, 'yyyyMM')
      INTO next_year_month
      FROM DUAL;

    --删除下个月数据
    DELETE FROM ass_collect_type_main
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND year_month = next_year_month;

    --插入本月期初数据
    INSERT INTO ass_collect_type_main
      (group_id
      ,hos_id
      ,copy_code
      ,acc_year
      ,acc_month
      ,year_month
      ,ass_type_id
      ,r_begin
      ,r_add
      ,r_dec
      ,r_end
      ,l_begin
      ,l_add
      ,l_dec
      ,l_end)
      SELECT t1.group_id
            ,t1.hos_id
            ,t1.copy_code
            ,substr(next_year_month, 0, 4)
            ,substr(next_year_month, 5, 6)
            ,next_year_month
            ,t1.ass_type_id
            ,nvl(t2.r_end, 0)
            ,0
            ,0
            ,0
            ,nvl(t2.l_end, 0)
            ,0
            ,0
            ,0
        FROM ass_type_dict t1
        LEFT JOIN ass_collect_type_main t2
          ON t1.group_id = t2.group_id
         AND t1.hos_id = t2.hos_id
         AND t1.copy_code = t2.copy_code
         AND t1.ass_type_id = t2.ass_type_id
       WHERE t1.group_id = prm_group_id
         AND t1.hos_id = prm_hos_id
         AND t1.copy_code = prm_copy_code
         AND t1.is_last = 1
         AND t2.acc_year = prm_acc_year
         AND t2.acc_month = prm_acc_month;

    --删除下个月数据
    DELETE FROM ass_collect_type_source
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND year_month = next_year_month;

    --插入本月期初数据
    INSERT INTO ass_collect_type_source
      (group_id
      ,hos_id
      ,copy_code
      ,acc_year
      ,acc_month
      ,year_month
      ,ass_type_id
      ,source_code
      ,source_name
      ,r_begin
      ,r_add
      ,r_dec
      ,r_end
      ,l_begin
      ,l_add
      ,l_dec
      ,l_end)
      SELECT t1.group_id
            ,t1.hos_id
            ,t1.copy_code
            ,substr(next_year_month, 0, 4)
            ,substr(next_year_month, 5, 6)
            ,next_year_month
            ,t1.ass_type_id
            ,t2.source_code
            ,t2.source_name
            ,nvl(t2.r_end, 0)
            ,0
            ,0
            ,0
			,nvl(t2.l_end, 0)
            ,0
            ,0
            ,0
        FROM ass_type_dict t1
        LEFT JOIN ass_collect_type_source t2
          ON t1.group_id = t2.group_id
         AND t1.hos_id = t2.hos_id
         AND t1.copy_code = t2.copy_code
         AND t1.ass_type_id = t2.ass_type_id
       WHERE t1.group_id = prm_group_id
         AND t1.hos_id = prm_hos_id
         AND t1.copy_code = prm_copy_code
         AND t1.is_last = 1
         AND t2.acc_year = prm_acc_year
         AND t2.acc_month = prm_acc_month;

    --删除下个月数据
    DELETE FROM ass_collect_dept_main
     WHERE group_id = prm_group_id
       AND hos_id = prm_hos_id
       AND copy_code = prm_copy_code
       AND year_month = next_year_month;
    --插入本月期初数据
    INSERT INTO ass_collect_dept_main
      (group_id
      ,hos_id
      ,copy_code
      ,acc_year
      ,acc_month
      ,year_month
      ,dept_id
      ,dept_no
      ,r_begin
      ,r_add
      ,r_dec
      ,r_end
      ,l_begin
      ,l_add
      ,l_dec
      ,l_end)
      SELECT t1.group_id
            ,t1.hos_id
            ,prm_copy_code
            ,substr(next_year_month, 0, 4)
            ,substr(next_year_month, 5, 6)
            ,next_year_month
            ,t1.dept_id
            ,t1.dept_no
            ,nvl(t2.r_end, 0)
            ,0
            ,0
            ,0
            ,nvl(t2.l_end, 0)
            ,0
            ,0
            ,0
        FROM hos_dept_dict t1
        LEFT JOIN ass_collect_dept_main t2
          ON t1.group_id = t2.group_id
         AND t1.hos_id = t2.hos_id
         AND t1.dept_id = t2.dept_id
         AND t1.dept_no = t2.dept_no
       WHERE t1.group_id = prm_group_id
         AND t1.hos_id = prm_hos_id
         AND t2.copy_code = prm_copy_code
         AND t1.is_last = 1
         AND t2.acc_year = prm_acc_year
         AND t2.acc_month = prm_acc_month;

  END prc_ass_collect_next_month;

END pkg_ass_report;
	]]></sql>
	
</root>

