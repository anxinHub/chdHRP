<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.wagedata.AccWageItemPayMapper">
  
	<resultMap id="AccWagePay" type="com.chd.hrp.acc.entity.AccWagePay">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="wage_code" column="wage_code"/>
        <result property="wage_name" column="wage_name"/>
        <result property="acc_year" column="acc_year"/>
        <result property="acc_month" column="acc_month"/>
        <result property="emp_id" column="emp_id"/>
        <result property="emp_no" column="emp_no"/>
        <result property="pay_id" column="pay_id"/>
        <result property="dept_id" column="dept_id"/>
        <result property="dept_no" column="dept_no"/>
        <result property="kind_code" column="kind_code"/>
        <result property="kind_name" column="kind_name"/>
        <result property="pay_type_code" column="pay_type_code"/>
        <result property="pay_type_name" column="pay_type_name"/>
        <result property="station_code" column="station_code"/>
        <result property="station_name" column="station_name"/>
        <result property="duty_name" column="duty_name"/>
        <result property="duty_code" column="duty_code"/>
        <result property="sex" column="sex"/>
        <result property="id_number" column="id_number"/>
        <result property="user_id" column="user_id"/>
        <result property="create_date" column="create_date"/>
        <result property="state" column="state"/>
        <result property="note" column="note"/>
	</resultMap>
	
	<resultMap id="netMap" type="java.util.Map">
		<result property="wage_date" column="wage_date" />
		<result property="wage_code" column="wage_code" />
		<result property="yf_item" column="yf_item" />
		<result property="kk_item" column="kk_item" />
		<result property="sf_item" column="sf_item" />
		<result property="pay_type" column="pay_type" />
		<result property="note" column="note" />
	</resultMap>
	
    <insert id="addAccWageItemPay" useGeneratedKeys="true" >
    
        INSERT INTO ACC_WAGE_PAY (
                   
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
			 
        ) VALUES (

					#{group_id}
			 ,
                    #{hos_id}
			 ,
                    #{copy_code}
			 ,
                    #{wage_code}
			 ,
					#{acc_year}
			 ,
			 		#{acc_month}
			 ,
                 	#{emp_id}
			 ,
			 		#{pay_id}
			 ,
			 		#{emp_no}
			 ,
			 		#{dept_id}
			 ,
			 		#{dept_no}
			 ,
			 		#{kind_code}
			 ,
			 		#{kind_name}
			 ,
			 		#{pay_type_code}
			 ,
			 		#{pay_type_name}
			 ,
			 		#{station_code}
			 ,
			 		#{station_name}
			 ,
			 		#{duty_code}
			 ,
			 		#{duty_name}
			 ,
			 		#{sex}
			 ,
			 		#{id_number}
			 ,
			 		#{user_id}
			 ,
			 		#{create_date}
			 ,
			 		#{state}
			 ,
                    #{note}		
 
        )
    
    </insert>
	<insert id="addBatchAccWageItemPay" parameterType="java.util.List" >
    
        INSERT INTO ACC_WAGE_PAY_EMP (
        
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select
         		
					#{item.group_id}
			 ,
                    #{item.hos_id}
			 ,
                    #{item.copy_code}
			 ,
                    #{item.wage_code}
			 ,
					#{item.acc_year}
			 ,
			 		#{item.acc_month}
			 ,
                 	#{item.emp_id}
			 ,
			 		#{item.pay_id}
			 ,
			 		#{item.emp_no}
			 ,
			 		#{item.dept_id}
			 ,
			 		#{item.dept_no}
			 ,
			 		#{item.kind_code}
			 ,
			 		#{item.kind_name}
			 ,
			 		#{item.pay_type_code}
			 ,
			 		#{item.pay_type_name}
			 ,
			 		#{item.station_code}
			 ,
			 		#{item.station_name}
			 ,
			 		#{item.duty_code}
			 ,
			 		#{item.duty_name}
			 ,
			 		#{item.sex}
			 ,
			 		#{item.id_number}
			 ,
			 		#{item.user_id}
			 ,
			 		#{item.create_date}
			 ,
			 		#{item.state}
			 ,
                    #{item.note}	
		
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateAccWageItemPay" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_PAY SET
        
        ${sql}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 acc_year = #{acc_year}
		 	  and 
		 acc_month = #{acc_month}
		 	  and 
		 wage_code = #{wage_code}
		     
   
	</update>
	<update id="updateBatchAccWageItemPay" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE ACC_WAGE_PAY SET
			 
			wage_name = #{item.wage_name}
        	
			and note = #{item.note}
			 
			 
        WHERE 
		 wage_code = #{item.wage_code}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			 
    </foreach>
	</update>

    <delete id="deleteAccWageItemPay" parameterType="java.util.Map">
   
        DELETE FROM ACC_WAGE_PAY WHERE
	        wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        acc_month = #{acc_month}   and 
	        emp_id =#{emp_id}     and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code} 
   
    </delete>
    <delete id="deleteBatchAccWageItemPay" parameterType="java.util.List">
        DELETE FROM ACC_WAGE_PAY WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			wage_code = #{item.wage_code}   and
	        acc_year = #{item.acc_year}     and 
	        acc_month = #{item.acc_month}   and 
	        emp_id =#{item.emp_id}     and 
	        group_id = #{item.group_id}   and 
	        hos_id = #{item.hos_id}   and 
	        copy_code = #{item.copy_code} 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccWageItemPayByCode" resultType="com.chd.hrp.acc.entity.AccWagePay" parameterType="string" >
	  
        SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
		FROM ACC_WAGE_PAY 
	        WHERE 
		    wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        acc_month = #{acc_month}   and 
	        emp_id =#{emp_id}     and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code}  
        
	</select>
	<select id="queryAccWageItemPay" parameterType="java.util.Map" resultType="java.util.Map" >
      
       select awp.pid,awp.acc_year,awp.emp_code,awp.emp_name,awp.kind_code,awp.kind_name,awp.dept_code,
		awp.dept_name,awp.out_code,awp.out_name,awp.note ${item_code} from (
       select '1' pid,awp.acc_year||'.'||awp.acc_month  acc_year,hed.emp_code,hed.emp_name,hek.kind_code,hek.kind_name,hdd.dept_code,
		hdd.dept_name,ado.out_code,ado.out_name,awp.note ${item_code}
		from acc_wage_pay awp 
		left join hos_emp_dict hed on awp.group_id = hed.group_id
		and awp.hos_id = hed.hos_id and awp.emp_id = hed.emp_id and awp.emp_no = hed.emp_no
		left join hos_emp_kind hek on hed.group_id = hek.group_id and hed.hos_id = hek.hos_id
		and hed.kind_code = hek.kind_code 
		left join hos_dept_dict hdd on hed.group_id = hdd.group_id
		and hed.hos_id = hdd.hos_id and hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no
		left join acc_dept_attr apt on awp.group_id = apt.group_id and awp.hos_id = apt.hos_id
		and awp.dept_id = apt.dept_id 
		left join acc_dept_out ado on ado.out_code = apt.out_code 
            <where>
            	<if test="scheme_id != null and scheme_id != ''">
				 exists(
			     select awsk.kind_code from acc_wage_s_kind awsk where 
				     awp.kind_code = awsk.kind_code and awsk.scheme_id =#{scheme_id}
			     )    
				</if>                      
			    <if test="group_id != null and group_id != ''">
                    AND awp.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awp.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awp.copy_code = #{copy_code}
               </if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awp.wage_code = #{wage_code}
               </if>
               <if test="kind_code != null and kind_code != ''">
                    AND awp.kind_code = #{kind_code} 
               </if>
               <if test="dept_code != null and dept_code != ''">
                    AND awp.dept_code = #{dept_code}
               </if>
               <if test="emp_code != null and emp_code != ''">
                   AND (hed.emp_code like '%${emp_code}%' 
                        or hed.emp_name like '%${emp_code}%'
                        or  hed.spell_code like '%${emp_code}%'
                        or  hed.wbx_code like '%${emp_code}%'
                    )
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND awp.acc_year = #{acc_year}
               </if>
               <if test="acc_month != null and acc_month != ''">
                    AND awp.acc_month = #{acc_month}
               </if>
               <if test="dept_nature != null and dept_nature != ''">
                    AND ado.out_code = #{dept_nature}
          	   </if>
        </where>
          union all
       select '3'pid,awp.acc_year||'.'||awp.acc_month  acc_year,'合计' emp_code, '' emp_name,'' kind_code,'' kind_name,'' dept_code,
		'' dept_name,'' out_code,'' out_name,'' note ${sum_item}
		from acc_wage_pay  awp
		left join hos_emp_dict hed on awp.group_id = hed.group_id
		and awp.hos_id = hed.hos_id and awp.emp_id = hed.emp_id and awp.emp_no = hed.emp_no
		left join hos_emp_kind hek on hed.group_id = hek.group_id and hed.hos_id = hek.hos_id
		and hed.kind_code = hek.kind_code 
		left join hos_dept_dict hdd on hed.group_id = hdd.group_id
		and hed.hos_id = hdd.hos_id and hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no
		left join acc_dept_attr apt on awp.group_id = apt.group_id and awp.hos_id = apt.hos_id
		and awp.dept_id = apt.dept_id
		left join acc_dept_out ado on ado.out_code = apt.out_code 
		<where>  
		<if test="scheme_id != null and scheme_id != ''">
				 exists(
			     select awsk.kind_code from acc_wage_s_kind awsk where 
				     awp.kind_code = awsk.kind_code and awsk.scheme_id =#{scheme_id}
			     )    
		</if>                    
          <if test="group_id != null and group_id != ''">
                    AND awp.group_id = #{group_id}
          </if>
          <if test="hos_id != null and hos_id != ''">
                    AND awp.hos_id = #{hos_id}
          </if>
          <if test="copy_code != null and copy_code != ''">
                    AND awp.copy_code = #{copy_code}
          </if>
          <if test="wage_code != null and wage_code != ''">
                    AND awp.wage_code = #{wage_code}
          </if>
          <if test="emp_code != null and emp_code != ''">
                   AND (hed.emp_code like '%${emp_code}%' 
                        or hed.emp_name like '%${emp_code}%'
                        or  hed.spell_code like '%${emp_code}%'
                        or  hed.wbx_code like '%${emp_code}%'
                    )
          </if>
          <if test="acc_year != null and acc_year != ''">
                    AND awp.acc_year = #{acc_year}
          </if>
          <if test="acc_month != null and acc_month != ''">
                    AND awp.acc_month = #{acc_month}
          </if>
          <if test="dept_nature != null and dept_nature != ''">
                    AND ado.out_code = #{dept_nature}
          </if>
        </where>
        group by  awp.acc_year,awp.acc_month 
				) awp 
		group by awp.acc_year,awp.pid,awp.emp_code,awp.emp_name,awp.kind_code,awp.kind_name,awp.dept_code,
		awp.dept_name,awp.out_code,awp.out_name ${group_item},awp.note 
		order by awp.acc_year,awp.pid,awp.emp_code
    </select>
    
    <select id="queryAccWageItemPaySum" parameterType="java.util.Map" resultType="java.util.Map" >
      
       select '合计' emp_count, count(*) emp_sum,ado.out_name ${sum_item}
		from acc_wage_pay  awp
		left join hos_emp_dict hed on awp.group_id = hed.group_id
		and awp.hos_id = hed.hos_id and awp.emp_id = hed.emp_id and awp.emp_no = hed.emp_no
		left join hos_dept_dict hdd on hed.group_id = hdd.group_id
		and hed.hos_id = hdd.hos_id and hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no
		left join acc_dept_attr apt on awp.group_id = apt.group_id and awp.hos_id = apt.hos_id
		and awp.dept_id = apt.dept_id
		left join acc_dept_out ado on ado.out_code = apt.out_code 
		<where>  
		<if test="scheme_id != null and scheme_id != ''">
				 exists(
			     select awsk.kind_code from acc_wage_s_kind awsk where 
				     awp.kind_code = awsk.kind_code and awsk.scheme_id =#{scheme_id}
			     )    
		</if>                    
          <if test="group_id != null and group_id != ''">
                    AND awp.group_id = #{group_id}
          </if>
          <if test="hos_id != null and hos_id != ''">
                    AND awp.hos_id = #{hos_id}
          </if>
          <if test="copy_code != null and copy_code != ''">
                    AND awp.copy_code = #{copy_code}
          </if>
          <if test="wage_code != null and wage_code != ''">
                    AND awp.wage_code = #{wage_code}
          </if>
          <if test="emp_code != null and emp_code != ''">
                   AND (hed.emp_code like '%${emp_code}%' 
                        or hed.emp_name like '%${emp_code}%'
                        or  hed.spell_code like '%${emp_code}%'
                        or  hed.wbx_code like '%${emp_code}%'
                    )
          </if>
          <if test="acc_year != null and acc_year != ''">
                    AND awp.acc_year = #{acc_year}
          </if>
          <if test="acc_month != null and acc_month != ''">
                    AND awp.acc_month = #{acc_month}
          </if>
          <if test="dept_nature != null and dept_nature != ''">
                    AND ado.out_code = #{dept_nature}
          </if>
        </where>
        group by  awp.acc_year,awp.acc_month,ado.out_name
		union all
		select '总合计' emp_count, count(*) emp_sum,'' out_name ${sum_item}
		from acc_wage_pay  awp
		left join hos_emp_dict hed on awp.group_id = hed.group_id
		and awp.hos_id = hed.hos_id and awp.emp_id = hed.emp_id and awp.emp_no = hed.emp_no
		left join hos_dept_dict hdd on hed.group_id = hdd.group_id
		and hed.hos_id = hdd.hos_id and hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no
		left join acc_dept_attr apt on awp.group_id = apt.group_id and awp.hos_id = apt.hos_id
		and awp.dept_id = apt.dept_id
		left join acc_dept_out ado on ado.out_code = apt.out_code 
		<where>  
		<if test="scheme_id != null and scheme_id != ''">
				 exists(
			     select awsk.kind_code from acc_wage_s_kind awsk where 
				     awp.kind_code = awsk.kind_code and awsk.scheme_id =#{scheme_id}
			     )    
		</if>                    
          <if test="group_id != null and group_id != ''">
                    AND awp.group_id = #{group_id}
          </if>
          <if test="hos_id != null and hos_id != ''">
                    AND awp.hos_id = #{hos_id}
          </if>
          <if test="copy_code != null and copy_code != ''">
                    AND awp.copy_code = #{copy_code}
          </if>
          <if test="wage_code != null and wage_code != ''">
                    AND awp.wage_code = #{wage_code}
          </if>
          <if test="emp_code != null and emp_code != ''">
                   AND (hed.emp_code like '%${emp_code}%' 
                        or hed.emp_name like '%${emp_code}%'
                        or  hed.spell_code like '%${emp_code}%'
                        or  hed.wbx_code like '%${emp_code}%'
                    )
          </if>
          <if test="acc_year != null and acc_year != ''">
                    AND awp.acc_year = #{acc_year}
          </if>
          <if test="acc_month != null and acc_month != ''">
                    AND awp.acc_month = #{acc_month}
          </if>
          <if test="dept_nature != null and dept_nature != ''">
                    AND ado.out_code = #{dept_nature}
          </if>
        </where>
        
    </select>
    
    <select id="queryAccBankNetWage" statementType="CALLABLE" parameterType="java.util.Map" resultMap="netMap">
		<![CDATA[ {call acc_wage_banknetwage(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{acc_year,jdbcType=VARCHAR, mode=IN},
	        #{emp_code,jdbcType=INTEGER, mode=IN},
	        #{objdata,jdbcType=CURSOR,mode=OUT,javaType=java.sql.ResultSet,resultMap=com.chd.hrp.acc.dao.wagedata.AccWageItemPayMapper.netMap}
        )} 
		 ]]>
	</select>
    
</mapper>

