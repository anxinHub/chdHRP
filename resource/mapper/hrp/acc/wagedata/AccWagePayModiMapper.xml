<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.wagedata.AccWagePayModiMapper">

	<resultMap id="accWagePayModi" type="com.chd.hrp.acc.entity.AccWagePayModi">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="wage_code" column="wage_code"/>
        <result property="wage_name" column="wage_name"/>
        <result property="acc_year" column="acc_year"/>
        <result property="acc_month" column="acc_month"/>
        <result property="modi_id" column="modi_id"/>
        <result property="emp_id" column="emp_id"/>
        <result property="emp_no" column="emp_no"/>
        <result property="emp_code" column="emp_code"/>
        <result property="emp_name" column="emp_name"/>
        <result property="dept_id" column="dept_id"/>
        <result property="dept_no" column="dept_no"/>
        <result property="dept_name" column="dept_name"/>
        <result property="kind_code" column="kind_code"/>
        <result property="kind_name" column="kind_name"/>
        <result property="item_code" column="item_code"/>
        <result property="flag" column="flag"/>
        <result property="old_money" column="old_money"/>
        <result property="new_money" column="new_money"/>
        <result property="rate" column="rate"/>
        <result property="note" column="note"/>
        <result property="user_id" column="user_id"/>
        <result property="create_date" column="create_date"/>
	</resultMap>
	
    <insert id="addAccWagePayModi" useGeneratedKeys="false" >
    
        INSERT INTO ACC_WAGE_PAY_MODI (
                   
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		modi_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		item_code
			 ,
			 		flag
			 ,
			 		old_money
			 ,
			 		new_money
			 ,
			 		rate
			 ,
			 		note
			 ,
			 		user_id
			 ,
			 		create_date
			 
        ) select 
        group_id,
        hos_id,
        copy_code,
        wage_code,
        acc_year,
        acc_month,
        emp_id,
        ACC_WAGE_PAY_MODI_SEQ.nextval,
        emp_no,
        dept_id,
        dept_no,
        kind_code,
        kind_name,
		#{item_code},
		#{flag},
		nvl(${item},0),
		<if test="money != null and money != ''">
              nvl(${item},0)+#{money},
             case nvl(to_number(${item}),0) when 0 then 0 else 
              (nvl(to_number(${item}),0)+#{money})/nvl(to_number(${item}),0)
              end ,
        </if>
        <if test="rate != null and rate != ''">
              nvl(${item},0)+nvl(${item},0)*#{rate},
              #{rate},
        </if>
		#{note},
		#{user_id},
		to_date(#{create_date},'yyyy-MM-dd')
	 	from acc_wage_pay
	 	where group_id = #{group_id} and hos_id = #{hos_id} 
	 	and copy_code = #{copy_code} and wage_code= #{wage_code}
		and acc_year = #{acc_year} and acc_month = #{acc_month} 
    
    </insert>
	<insert id="addBatchAccWagePayModi" parameterType="java.util.List" >
    
        INSERT INTO ACC_WAGE_PAY_MODI (
        
        			modi_id
			 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		item_code
			 ,
			 		flag
			 ,
			 		old_money
			 ,
			 		new_money
			 ,
			 		rate
			 ,
			 		note
			 ,
			 		user_id
			 ,
			 		create_date
			 
        ) 
        select ACC_WAGE_PAY_MODI_SEQ.nextval,a.* from (
		 <foreach collection="list" item="item" index="index" separator=" union all " >
         select 
        group_id,
        hos_id,
        copy_code,
        wage_code,
        acc_year,
        acc_month,
        emp_id,
        emp_no,
        dept_id,
        dept_no,
        kind_code,
        kind_name,
		#{wage_item_code},
		#{flag},
		${item},
		${item}+#{money},
		#{rate},
		#{note},
		#{user_id},
		#{create_date}
	 	from acc_wage_pay
	 	where group_id = #{group_id} and hos_id = #{hos_id} 
	 	and copy_code = #{copy_code} and wage_code= #{wage_code}
		and acc_year = #{acc_year} and acc_month = #{acc_month} 
		</foreach>
    		) a
    </insert>

	<update id="updateAccWagePayModi" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_PAY_MODI_MODI SET
        
        	old_money = #{old_money}
        	
			and new_money = #{old_money}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 emp_id = #{emp_id}
		 and wage_code = #{wage_code}
		 and acc_year=#{acc_year}
		 and acc_month = #{acc_month}
		     
   
	</update>
	<update id="updateBatchAccWagePayModi" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE ACC_WAGE_PAY_MODI SET
			 
			wage_name = #{item.wage_name}
        	
			and note = #{item.note}
			 
			 
        WHERE 
		 wage_code = #{item.wage_code}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
		 	  and 
		 emp_id = #{item.emp_id}
		      and 
		 acc_year = #{item.acc_year}
		      and 
		 acc_month = #{item.acc_month}
			 
    </foreach>
	</update>

    <delete id="deleteAccWagePayModi" parameterType="java.util.Map">
   
        DELETE FROM ACC_WAGE_PAY_MODI WHERE
	        wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        acc_month = #{acc_month}   and 
	        emp_id =#{emp_id}     and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code} 
   
    </delete>
    <delete id="deleteBatchAccWagePayModi" parameterType="java.util.List">
        DELETE FROM ACC_WAGE_PAY_MODI WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			wage_code = #{item.wage_code}   and
	        acc_year = #{item.acc_year}     and 
	        acc_month = #{item.acc_month}   and 
	        emp_id =#{item.emp_id}     and 
	        group_id = #{item.group_id}   and 
	        hos_id = #{item.hos_id}   and 
	        copy_code = #{item.copy_code} 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccWagePayModiByCode" resultType="com.chd.hrp.acc.entity.AccWagePayModi" parameterType="string" >
	  
        SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		modi_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		item_code
			 ,
			 		flag
			 ,
			 		old_money
			 ,
			 		new_money
			 ,
			 		rate
			 ,
			 		note
			 ,
			 		user_id
			 ,
			 		create_date
		FROM ACC_WAGE_PAY_MODI 
	        WHERE 
		    wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        acc_month = #{acc_month}   and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code}  
        
	</select>
	<select id="queryAccWagePayModi" parameterType="java.util.Map" resultMap="accWagePayModi" >
      
       select 
					awp.group_id
			 ,
                    awp.hos_id
			 ,
                    awp.copy_code
			 ,
                    awp.wage_code
			 ,
					awp.acc_year
			 ,
			 		awp.acc_month
			 ,
                 	awp.emp_id
			 ,
			 		awp.modi_id
			 ,
			 		awp.emp_no
			 ,
			 		hed.emp_code
			 ,
			 		hed.emp_name
			 ,
			 		awp.dept_id
			 ,
			 		awp.dept_no
			 ,
			 		hdd.dept_code
			 ,
			 		hdd.dept_name	
			 ,
			 		awp.kind_code
			 ,
			 		awp.kind_name
			 ,
			 		awp.item_code
			 ,
			 		awp.flag
			 ,
			 		awp.old_money
			 ,
			 		awp.new_money
			 ,
			 		awp.rate
			 ,
			 		awp.note
			 ,
			 		awp.user_id
			 ,
			 		awp.create_date 
		from ACC_WAGE_PAY_MODI awp left join hos_emp_dict hed on awp.group_id = hed.group_id
		and awp.hos_id = hed.hos_id and awp.emp_id = hed.emp_id and awp.emp_no = hed.emp_no
		left join hos_emp_kind hek on hed.group_id = hek.group_id and hed.hos_id = hek.hos_id
		and hed.kind_code = hek.kind_code left join hos_dept_dict hdd on hed.group_id = hdd.group_id
		and hed.hos_id = hdd.hos_id and hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND awp.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awp.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awp.copy_code = #{copy_code}
               </if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awp.wage_code = #{wage_code}
               </if>
               			    <if test="acc_year != null and acc_year != ''">
                    AND awp.acc_year = #{acc_year}
               </if>
               			    <if test="acc_month != null and acc_month != ''">
                    AND awp.acc_month = #{acc_month}
               </if>
               			    <if test="wage_item_code != null and wage_item_code != ''">
                    AND awp.item_code = #{wage_item_code}
               </if>
               			    <if test="emp_kind != null and emp_kind != ''">
                    AND hed.kind_code = #{emp_kind}
               </if>
               			    <if test="dept_code != null and dept_code != ''">
                    AND awp.dept_id||'.'||awp.dept_no = #{dept_code}
               </if>
               			    <if test="emp_code != null and emp_code != ''">
                    AND awp.emp_id = #{emp_code}
               </if>
			    
        </where>   
				order by awp.wage_code asc
    </select>
    
</mapper>

