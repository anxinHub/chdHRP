<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.payable.reimbursemt.BudgPaymentApplyDetMapper">
	
	<resultMap id="budgPaymentApplyDet" type="com.chd.hrp.acc.entity.payable.BudgPaymentApplyDet">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/> 
	<result property="apply_code" column="apply_code"/>
	<result property="source_id" column="source_id"/>
	<result property="source_id_no" column="source_id_no"/>
	<result property="source_name" column="source_name"/>
	<result property="payment_item_id_no" column="payment_item_id_no"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="payment_amount" column="payment_amount"/>
	<result property="offset_amount" column="offset_amount"/>
	<result property="pay_amount" column="pay_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	<result property="remark" column="remark" />
	<result property="amount" column="amount" />
	</resultMap>
	
	
	<resultMap id="budgPaymentApplyDetToMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/> 
	<result property="apply_code" column="apply_code"/>
	<result property="source_id" column="source_id"/>
	<result property="source_id_no" column="source_id_no"/>
	<result property="source_name" column="source_name"/>
	<result property="payment_item_id_no" column="payment_item_id_no"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="payment_amount" column="payment_amount"/>
	<result property="offset_amount" column="offset_amount"/>
	<result property="pay_amount" column="pay_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	<result property="remark" column="remark" />
	<result property="amount" column="amount" />
	<result property="use_payment" column="use_payment" />
	<result property="budg_money" column="budg_money" />
	<result property="already_execute" column="already_execute" />
	</resultMap>
		
	<resultMap id="budgPaymentApplyDetMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="apply_code" column="apply_code"/>
	<result property="apply_date" column="apply_date"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="remark" column="remark"/>
	<result property="d_remark" column="d_remark"/>
	<result property="payment_amount_sum" column="payment_amount_sum"/>
	<result property="payment_amount_sum_upper" column="payment_amount_sum_upper"/>
	<result property="emp_id" column="emp_id"/>
	<result property="emp_no" column="emp_no"/>
	<result property="emp_code" column="emp_code"/>
	<result property="emp_name" column="emp_name"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="check_date" column="check_date"/>
	<result property="payer" column="payer"/>
	<result property="payer_name" column="payer_name"/>
	<result property="pay_date" column="pay_date"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="pay_way" column="pay_way"/>
	<result property="pay_way_name" column="pay_way_name"/>
	<result property="phone" column="phone"/>
	<result property="card_no" column="card_no"/>
	<result property="offset_amount_sum" column="offset_amount_sum"/>
	<result property="pay_amount_sum" column="pay_amount_sum"/>
	<result property="source_id" column="source_id"/>
	<result property="source_id_no" column="source_id_no"/>
	<result property="source_code" column="source_code"/>
	<result property="source_name" column="source_name"/>
	<result property="payment_item_id_no" column="payment_item_id_no"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_code" column="payment_item_code"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="payment_amount" column="payment_amount"/>
	<result property="m_remark" column="m_remark" />
	<result property="offset_amount" column="offset_amount"/>
	<result property="pay_amount" column="pay_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	<result property="amount" column="amount" />
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_PAYMENT_APPLY_DET (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="apply_code != null and apply_code != ''">
		apply_code
		,
		</if>
		<if test="source_id != null and source_id != ''">
		source_id
		,
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		payment_item_id
		,
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		payment_item_no
		,
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		payment_amount
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		offset_amount
		,
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		pay_amount
		,
		</if>
		<if test="remark != null and remark != ''">
		remark
		,
		</if>
		<if test="amount != null and amount != ''">
		amount
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="apply_code != null and apply_code != ''">
		#{apply_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="source_id != null and source_id != ''">
		#{source_id,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		#{payment_item_id,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		#{payment_item_no,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		#{payment_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		#{offset_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		#{pay_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="remark != null and remark != ''">
		#{remark,jdbcType=VARCHAR}
		,
		</if>
		<if test="amount != null and amount != ''">
		#{amount,jdbcType=INTEGER}
		
		</if>
		</trim>		
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		INSERT INTO BUDG_PAYMENT_APPLY_DET (
			group_id,
			hos_id,
			copy_code,
			apply_code,
			source_id,
			payment_item_id,
			payment_item_no,
			payment_amount,
			offset_amount,
			pay_amount,
			remark,
			amount
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select #{item.group_id, jdbcType=INTEGER} group_id,
				   #{item.hos_id, jdbcType=INTEGER} hos_id,
				   #{item.copy_code, jdbcType=VARCHAR} copy_code,
				   #{item.apply_code, jdbcType=VARCHAR} apply_code,
				   #{item.source_id, jdbcType=INTEGER} source_id,
				   #{item.payment_item_id, jdbcType=INTEGER} payment_item_id,
				   #{item.payment_item_no, jdbcType=INTEGER} payment_item_no,
				   #{item.payment_amount, jdbcType=NUMERIC} payment_amount,
				   <choose>
				       <when test="item.offset_amount != null and item.offset_amount != ''">
				           #{item.offset_amount, jdbcType=NUMERIC} offset_amount,
				       </when>
				       <otherwise> null offset_amount, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.pay_amount != null and item.pay_amount != ''">
				           #{item.pay_amount, jdbcType=NUMERIC} pay_amount,
				       </when>
				       <otherwise> null pay_amount, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.remark != null and item.remark != ''">
				           #{item.remark, jdbcType=VARCHAR} remark,
				       </when>
				       <otherwise> null remark, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.amount != null and item.amount != ''">
				           #{item.amount, jdbcType=INTEGER} amount
				       </when>
				       <otherwise> null amount </otherwise>
				   </choose>
		    from dual
		</foreach>
		) t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE BUDG_PAYMENT_APPLY_DET 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="payment_amount != null and payment_amount != ''">
		payment_amount = #{payment_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		offset_amount = #{offset_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		pay_amount = #{pay_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="remark != null and remark != ''">
		remark = #{remark,jdbcType=VARCHAR}
		,
		</if>
		<if test="amount != null and amount != ''">
		amount = #{amount,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_PAYMENT_APPLY_DET 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.borrow_amount != null and item.borrow_amount != ''">
			borrow_amount = #{item.borrow_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.offset_amount != null and item.offset_amount != ''">
			offset_amount = #{item.offset_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.pay_amount != null and item.pay_amount != ''">
			pay_amount = #{item.pay_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.remark != null and item.remark != ''">
			remark = #{item.remark,jdbcType=VARCHAR},
			,
			</if>
			<if test="item.amount != null and item.amount != ''">
			amount = #{item.amount,jdbcType=VARCHAR},
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.apply_code != null and item.apply_code != ''">
			AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.source_id != null and item.source_id != ''">
			AND source_id = #{item.source_id,jdbcType=INTEGER}
			</if>  
			<if test="item.payment_item_id != null and item.payment_item_id != ''">
			AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_PAYMENT_APPLY_DET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_PAYMENT_APPLY_DET where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				    group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.apply_code != null and item.apply_code != ''">
				AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
				</if>
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>
				<if test="item.payment_item_id != null and item.payment_item_id != ''">
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
				</if>
				<if test="item.payment_item_no != null and item.payment_item_no != ''">
				AND payment_item_no = #{item.payment_item_no,jdbcType=INTEGER}
				</if>
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgPaymentApplyDet" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.apply_code,
		a.source_id,
		b.source_code||'.'||a.source_id source_id_no,
		b.source_code||' '||b.source_name source_name,
		a.payment_item_id,
		a.payment_item_no,
		a.payment_item_id||'@'||a.payment_item_no payment_item_id_no,
		c.payment_item_code||' '||c.payment_item_name payment_item_name,
		a.payment_amount,
		CASE
			when bpa.proj_id is not null then 
            bbdp.remain_amount
		    else
		    	  bbdd.remain_amount
		    end	remain_amount,
		a.pay_amount,
		a.remark,
		a.amount 
		FROM BUDG_PAYMENT_APPLY_DET a 
		left join HOS_SOURCE b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		left join BUDG_PAYMENT_ITEM_DICT c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.payment_item_id = c.payment_item_id
		and c.IS_FRESH = 1
		left join BUDG_PAYMENT_APPLY bpa on
		a.group_id = bpa.group_id
		and a.hos_id = bpa.hos_id
		and a.copy_code = bpa.copy_code
		and a.apply_code = bpa.apply_code
		
		
		left join budg_borr_det_proj bbdp on
		a.group_id = bbdp.group_id
		and a.hos_id = bbdp.hos_id
		and a.copy_code = bbdp.copy_code
		and bpa.emp_id = bbdp.emp_id
		and bpa.proj_id = bbdp.proj_id
		and a.source_id = bbdp.source_id
		and a.PAYMENT_ITEM_ID = bbdp.PAYMENT_ITEM_ID
		
		
		left join budg_borr_det_dept bbdd on
		a.group_id = bbdd.group_id
		and a.hos_id = bbdd.hos_id
		and a.copy_code = bbdd.copy_code
		and bpa.emp_id = bbdd.emp_id
		and a.source_id = bbdd.source_id
		and a.PAYMENT_ITEM_ID = bbdd.PAYMENT_ITEM_ID
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND a.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND a.payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND a.offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND a.pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	
	
	<update id="updateAmount" parameterType="java.util.Map">
		UPDATE BUDG_PAYMENT_APPLY_DET SET
			<if test="payment_amount != null and payment_amount != ''">
			payment_amount = #{payment_amount}
			,
			</if>	
			offset_amount = #{offset_amount}
			,
			pay_amount = #{pay_amount}
		WHERE 
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		AND source_id = #{source_id,jdbcType=INTEGER}
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
	</update>
	
	
	<select id="queryForUpdate" parameterType="java.util.Map" resultMap="budgPaymentApplyDet" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.apply_code,
		a.source_id,
		b.source_code||'.'||a.source_id source_id_no,
		b.source_code||' '||b.source_name source_name,
		a.payment_item_id,
		a.payment_item_no,
		a.payment_item_id||'@'||a.payment_item_no payment_item_id_no,
		c.payment_item_code||' '||c.payment_item_name payment_item_name,
		a.payment_amount,
		a.offset_amount,
		a.pay_amount,
		a.remark,
		a.amount 
		FROM BUDG_PAYMENT_APPLY_DET a 
		left join HOS_SOURCE b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		left join BUDG_PAYMENT_ITEM_DICT c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.payment_item_id = c.payment_item_id
		and c.IS_FRESH = 1
		left join BUDG_PAYMENT_APPLY bpa on
		a.group_id = bpa.group_id
		and a.hos_id = bpa.hos_id
		and a.copy_code = bpa.copy_code
		and a.apply_code = bpa.apply_code
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND a.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND a.payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND a.offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND a.pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	<!-- 返回map的版本 -->
	<select id="queryForUpdateToMap" parameterType="java.util.Map" resultMap="budgPaymentApplyDetToMap" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.apply_code,
		a.source_id,
		b.source_code||'.'||a.source_id source_id_no,
		b.source_code||' '||b.source_name source_name,
		a.payment_item_id,
		a.payment_item_no,
		a.payment_item_id||'@'||a.payment_item_no payment_item_id_no,
		c.payment_item_code||' '||c.payment_item_name payment_item_name,
		
		buad.apply_amount use_payment,
		
		a.payment_amount,
		a.offset_amount,
		a.pay_amount,
		a.remark,
		 a.amount 
		<if test=" flag == 'B'.toString() ">
			,
			(select nvl(sum(bpar.budg_amount),0) from BUDG_PROJ_APPLY_RESOLVE bpar 
			left join BUDG_USE_APPLY_DET budg1 on
				bpar.group_id = budg1.group_id 
				and bpar.hos_id = budg1.hos_id 
				 and bpar.copy_code = budg1.copy_code 
				 and bpar.source_id = budg1.source_id 
		        and bpar.payment_item_id = budg1.payment_item_id 
		        and bpar.payment_item_no = budg1.payment_item_no
		        where  
		         bpar.budg_year = #{year} and bpar.proj_id = #{proj_id} 
		        ) budg_money,
			(
		         (select nvl(sum(tmp2.pay_amount),0) from budg_payment_apply tmp 
		         left join budg_payment_apply_det tmp2
		         on tmp2.group_id = tmp.group_id 
		         and tmp2.hos_id = tmp.hos_id
		         and tmp2.copy_code = tmp.copy_code
		         and tmp2.apply_code = tmp.apply_code
		         where buad.group_id = tmp.group_id
		         and buad.hos_id = tmp.hos_id
		         and buad.copy_code = tmp.copy_code
		         and to_char(tmp.apply_date,'yyyy') = #{year}
		         and tmp.proj_id = #{proj_id}
		         and tmp.proj_no = #{proj_no}
		         and buad.source_id = tmp2.source_id
		         and buad.payment_item_id = tmp2.payment_item_id
		         and buad.payment_item_no = tmp2.payment_item_no
		         and tmp.state in ( '03','04')
		         )
		         +
		         (select nvl(sum(tmp.payment_amount),0) from Budg_Charge_Apply tmp 
                 left join BUDG_USE_APPLY_DET budg2 on
                 budg2.group_id = tmp.group_id
		         and budg2.hos_id = tmp.hos_id
		         and budg2.copy_code = tmp.copy_code
		          and budg2.source_id = tmp.source_id
		         and budg2.payment_item_id = tmp.payment_item_id
		         and budg2.payment_item_no = tmp.payment_item_no
		         where 
		          to_char(tmp.apply_date,'yyyy') = #{year}
		         and tmp.proj_id = #{proj_id}
		         and tmp.proj_no = #{proj_no}
		        
		         and tmp.state in ( '03','04')
		         )
		        ) already_execute
		</if>
		<if test=" flag == 'A'.toString() ">
    ,
 		(select nvl(sum(be.cost_budg),0) from BUDG_EXPENSE be
 		 left join BUDG_USE_APPLY_DET budg on
  be.group_id = budg.group_id
    and be.hos_id = budg.hos_id
    and be.copy_code = budg.copy_code
    and be.payment_item_id = budg.payment_item_id
          where <!-- be.group_id = buad.group_id 
           and be.hos_id = buad.hos_id
           and be.copy_code = buad.copy_code
           and be.payment_item_id = buad.payment_item_id
           and --> be.budg_year = #{year} 
           <if test=" month != '' and month != null ">
             and be.month = #{month} 
           </if>
           <if test=" dept_id != '' and dept_id != null ">
             and be.dept_id = (select bds.duty_dept_id
                                  from budg_duty_set bds
                                  left join BUDG_CHARGE_APPLY bca on 
						         bds.group_id = bca.group_id
						          and bds.hos_id = bca.hos_id
						          and bds.copy_code = bca.copy_code
						          and bds.payment_item_id = bca.PAYMENT_ITEM_ID
                                 where bds.dept_id = #{dept_id}  )
             
           </if>
           
            ) budg_money,
	        (
		       ( select nvl(sum(tmp2.pay_amount),0) from budg_payment_apply tmp 
						 left join budg_payment_apply_Det tmp2
						 on tmp2.group_id = tmp.group_id 
						 and tmp2.hos_id = tmp.hos_id
						 and tmp2.copy_code = tmp.copy_code
						 and tmp2.apply_code = tmp.apply_code
						 where buad.group_id = tmp.group_id
						 and buad.hos_id = tmp.hos_id
						 and buad.copy_code = tmp.copy_code
						 <if test=" yearMonth != '' and yearMonth != null">
						 	and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
						 </if>
						 <if test=" yearMonth == '' or yearMonth == null ">
						 	and to_char(tmp.apply_date,'yyyy') = #{year}
						 </if>
						 and buad.payment_item_id = tmp2.payment_item_id
						 and buad.payment_item_no = tmp2.payment_item_no
						 and tmp.state = '03'
						 <if test=" dept_id != '' and dept_id != null">
							 and tmp.dept_id = (select bds.duty_dept_id
							                        from budg_duty_set bds
							                        left join BUDG_CHARGE_APPLY bca on 
         bds.group_id = bca.group_id
          and bds.hos_id = bca.hos_id
          and bds.copy_code = bca.copy_code
          and bds.payment_item_id = bca.PAYMENT_ITEM_ID
							                       where<!--  bds.group_id = tmp.group_id
							                         and bds.hos_id = tmp.hos_id
							                         and bds.copy_code = tmp.copy_code
							                         and bds.payment_item_id = tmp.payment_item_id
							                         and --> bds.dept_id = #{dept_id})
						 </if>
		         )
		         +
		         (
		         select nvl(sum(tmp3.payment_amount),0) from BUDG_CHARGE_APPLY tmp 
                      left join budg_payment_apply_Det tmp3 on tmp3.group_id = tmp.group_id
					    and tmp3.hos_id = tmp.hos_id
					    and tmp3.copy_code = tmp.copy_code
					    and tmp3.apply_code = tmp.apply_code 
						 where
							 buad.group_id = tmp.group_id
						      and buad.hos_id = tmp.hos_id
						      and buad.copy_code = tmp.copy_code
						
						 <if test=" yearMonth != '' and yearMonth != null">
						 	and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
						 </if>
						 <if test=" yearMonth == '' or yearMonth == null ">
						 	and to_char(tmp.apply_date,'yyyy') = #{year}
						 </if>
						and buad.payment_item_id = tmp.payment_item_id
                       and buad.payment_item_no = tmp.payment_item_no
						 and  tmp.state = '03'
						 <if test=" dept_id != '' and dept_id != null">
							 and tmp.dept_id = (select bds.duty_dept_id
							                        from budg_duty_set bds 
							                       
							                       where 
							                       bds.group_id = tmp.group_id
										          and bds.hos_id = tmp.hos_id
										          and bds.copy_code = tmp.copy_code
										          and bds.payment_item_id = tmp.payment_item_id
							                      and    bds.dept_id = #{dept_id})
						 </if>
		         )
	        ) already_execute
		
		</if>
		FROM BUDG_PAYMENT_APPLY_DET a 
		left join HOS_SOURCE b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		left join BUDG_PAYMENT_ITEM_DICT c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.payment_item_id = c.payment_item_id
		and c.IS_FRESH = 1
		left join BUDG_PAYMENT_APPLY bpa on
		a.group_id = bpa.group_id
		and a.hos_id = bpa.hos_id
		and a.copy_code = bpa.copy_code
		and a.apply_code = bpa.apply_code

	  left join BUDG_USE_APPLY_DET buad 
	   on buad.group_id = a.group_id
	   and buad.hos_id = a.hos_id
	   and buad.copy_code = a.copy_code
	   and buad.apply_code = bpa.use_apply_code
	   and buad.source_id = a.source_id
	   and buad.payment_item_id =a.payment_item_id

		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND a.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND a.payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND a.offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND a.pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	
	
	<!-- 查询报销单明细 -->
	<select id="queryPaymentApplyDetail" parameterType="java.util.Map" resultMap="budgPaymentApplyDetMap" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.apply_code,
		a.source_id,
		b.source_code||'.'||a.source_id source_id_no,
		b.source_code||' '||b.source_name source_name,
		a.payment_item_id,
		a.payment_item_no,
		a.payment_item_id||'@'||a.payment_item_no payment_item_id_no,
		c.payment_item_code||' '||c.payment_item_name payment_item_name,
		a.payment_amount,
		a.offset_amount,
		a.pay_amount,
		a.remark,
		a.amount 
		FROM BUDG_PAYMENT_APPLY_DET a 
		left join HOS_SOURCE b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		left join BUDG_PAYMENT_ITEM_DICT c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.payment_item_id = c.payment_item_id
		and c.IS_FRESH = 1
		left join BUDG_PAYMENT_APPLY bpa on
		a.group_id = bpa.group_id
		and a.hos_id = bpa.hos_id
		and a.copy_code = bpa.copy_code
		and a.apply_code = bpa.apply_code
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND a.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND a.payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND a.offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND a.pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	
	
	<select id="queryByCode" resultMap="budgPaymentApplyDet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		apply_code,
		source_id,
		payment_item_id,
		payment_item_no,
		payment_amount,
		offset_amount,
		pay_amount,
		remark,
		amount
		FROM BUDG_PAYMENT_APPLY_DET 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		apply_code = #{apply_code,jdbcType=VARCHAR}   and 
		source_id = #{source_id,jdbcType=INTEGER}   and 
		payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgPaymentApplyDet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		apply_code,
		source_id,
		payment_item_id,
		payment_item_no,
		payment_amount,
		offset_amount,
		pay_amount,
		remark ,
		amount
		FROM BUDG_PAYMENT_APPLY_DET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgPaymentApplyDet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		apply_code,
		source_id,
		payment_item_id,
		payment_item_no,
		payment_amount,
		offset_amount,
		pay_amount,
		remark 
		FROM BUDG_PAYMENT_APPLY_DET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryPaymentApplyDetByPrintTemlate" resultMap="budgPaymentApplyDetMap"  parameterType="java.util.Map" >
	
			SELECT 
			<!-- a.apply_code, -->
		b.source_code,
		b.source_name,
		c.payment_item_code,
		c.payment_item_name,
		a.payment_amount,
		a.offset_amount,
		a.pay_amount,
		a.remark m_remark ,
		a.amount
		FROM BUDG_PAYMENT_APPLY_DET a 
		left join HOS_SOURCE b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		left join BUDG_PAYMENT_ITEM_DICT c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.payment_item_id = c.payment_item_id
		and c.IS_FRESH = 1
		 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		</where>
	</select>
	<select id="queryPaymentApplyDetByPrintTemlateMain" resultMap="budgPaymentApplyDetMap"  parameterType="java.util.Map" >
	
			select  
			   bpa.apply_code,
		       to_char(bpa.apply_date,'yyyy-MM-dd') as apply_date,
		       hdd.dept_code,
		       hdd.dept_name, 
		       hpd.proj_code,
		       hpd.proj_name,
		       bpa.remark as d_remark,
		       bpa.payment_amount as payment_amount_sum,
		       bpa.payment_amount as payment_amount_sum_upper,
		       hed.emp_code,
		       hed.emp_name,
		       u1.user_name as maker,
		       bpa.make_date,
		       u2.user_name as checker,
		       bpa.check_date,
		       u3.user_name as payer,
		       bpa.pay_date,
		       bsd.value_name as state,
		       apy.pay_name as pay_way,
		       bpa.phone,
		       bpa.card_no,
		       bpa.offset_amount as offset_amount_sum,
		       bpa.pay_amount as pay_amount_sum ,
		       to_char(bpa.start_date,'yyyy/MM/dd') ||'-' ||to_char(bpa.end_date,'yyyy/MM/dd') start_end_date ,
			   bpa.address
		       
		from  BUDG_PAYMENT_APPLY bpa 
		left join hos_dept_dict hdd on bpa.group_id = hdd.group_id
		and bpa.hos_id = hdd.hos_id
		and bpa.dept_id = hdd.dept_id
		and hdd.is_stop = 0 
		left join hos_proj_dict hpd on bpa.group_id = hpd.group_id
		and bpa.hos_id = hpd.hos_id
		and bpa.proj_id = hpd.proj_id
		and hpd.is_stop = 0 
		left join hos_emp_dict hed on bpa.group_id = hed.group_id
		and bpa.hos_id = hed.hos_id
		and bpa.emp_id = hed.emp_id
		and hed.is_stop = 0 
		left join sys_user u1 on bpa.group_id = u1.group_id
		and bpa.hos_id = u1.hos_id
		and bpa.maker = u1.user_id 
		left join sys_user u2 on bpa.group_id = u2.group_id
		and bpa.hos_id = u2.hos_id
		and bpa.checker = u2.user_id 
		left join sys_user u3 on bpa.group_id = u3.group_id
		and bpa.hos_id = u3.hos_id
		and bpa.payer = u3.user_id 
		 left join BUDG_SYS_DICT bsd on bpa.state = bsd.value_code
		and bsd.f_code = 'BORROW_STATE' 
		left join acc_pay_type apy on bpa.group_id = apy.group_id
		and bpa.hos_id = apy.hos_id
		and bpa.copy_code = apy.copy_code
		and bpa.pay_way = apy.pay_code 
		and apy.source_code='HRP'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND bpa.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND bpa.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND bpa.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND bpa.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		</where>   
	</select>
</mapper>

