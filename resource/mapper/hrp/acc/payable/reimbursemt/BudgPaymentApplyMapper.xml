<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.payable.reimbursemt.BudgPaymentApplyMapper">
	<resultMap id="budgPaymentApply" type="com.chd.hrp.acc.entity.payable.BudgPaymentApply">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="apply_code" column="apply_code" />
		<result property="use_apply_code" column="use_apply_code" />
		<result property="apply_date" column="apply_date" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="proj_id" column="proj_id" />
		<result property="proj_no" column="proj_no" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_no" column="emp_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="proj_code" column="proj_code" />
		<result property="proj_name" column="proj_name" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="payment_amount" column="payment_amount" />
		<result property="remark" column="remark" />
		<result property="maker_name" column="maker_name" />
		<result property="maker" column="maker" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="checker_name" column="checker_name" />
		<result property="check_date" column="check_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="payer" column="payer" />
		<result property="payer_name" column="payer_name" />
		<result property="pay_date" column="pay_date" />
		<result property="pay_way" column="pay_way" />
		<result property="phone" column="phone" />
		<result property="card_no" column="card_no" />
		<result property="pay_way_name" column="pay_way_name" />
		<result property="offset_amount" column="offset_amount"/>
		<result property="pay_amount" column="pay_amount"/>
		<result property="start_date" column="start_date"/>
		<result property="end_date" column="end_date"/>
		<result property="address" column="address"/>
	</resultMap>
	
	<resultMap type="java.util.Map" id="queryUseApplyCodeMap">
		<result property="id" column="id" />
		<result property="text" column="text" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="queryBudgProMap">
		<result property="pro_budg_money" column="pro_budg_money" />
		<result property="balance" column="balance" />
		<result property="Account_balance" column="Account_balance" />
	</resultMap>
	
	<resultMap id="queryMoneyApplyDetMap" type="java.util.Map">
		<result property="source_id_no" column="source_id_no"/>
		<result property="source_name" column="source_name"/>
		<result property="payment_item_id_no" column="payment_item_id_no"/>
		<result property="payment_item_name" column="payment_item_name"/>
		<result property="use_payment" column="use_payment"/>
		<result property="payment_amount" column="payment_amount"/>
		<result property="remark_det" column="remark_det"/>
		<result property="real_money" column="real_money"/>
		<result property="budg_money" column="budg_money"/>
		<result property="already_apply" column="already_apply"/>
		<result property="already_execute" column="already_execute"/>
	</resultMap> 
	
	<resultMap id="queryAddPageDataMap" type="java.util.Map">
		<result property="emp_id" column="emp_id"/>
		<result property="emp_text" column="emp_text"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_text" column="dept_text"/>
	</resultMap>
	
	<insert id="addBudgPaymentApply" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_PAYMENT_APPLY (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="apply_code != null and apply_code != ''">
		apply_code
		,
		</if>
		<if test="apply_date != null and apply_date != ''">
		apply_date
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		proj_id
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		proj_no
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		emp_id
		,
		</if>
		<if test="emp_no != null and emp_no != ''">
		emp_no
		,
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		payment_amount
		,
		</if>
		<if test="remark != null and remark != ''">
		remark
		,
		</if>
		<if test="maker != null and maker != ''">
		maker
		,
		</if>
		<if test="make_date != null and make_date != ''">
		make_date
		,
		</if>
		<if test="checker != null and checker != ''">
		checker
		,
		</if>
		<if test="check_date != null and check_date != ''">
		check_date
		,
		</if>
		<if test="payer != null and payer != ''">
		payer
		,
		</if>
		<if test="pay_date != null and pay_date != ''">
		pay_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="pay_way != null and pay_way != ''">
		pay_way
		,
		</if>
		<if test="phone != null and phone != ''">
		phone
		,
		</if>
		<if test="card_no != null and card_no != ''">
		card_no
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		offset_amount
		,
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		pay_amount
		,
		</if>
		<if test="start_date != null and start_date != ''">
		start_date
		,
		</if>
		<if test="end_date != null and end_date != ''">
		end_date
		,
		</if>
		<if test="address != null and address != ''">
		address
		,
		</if>
		<if test="use_apply_code != null and use_apply_code != ''">
		use_apply_code
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="apply_code != null and apply_code != ''">
		#{apply_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="apply_date != null and apply_date != ''">
		to_date(#{apply_date},'yyyy/MM/dd')
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		#{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		#{dept_no,jdbcType=INTEGER}
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		#{proj_id,jdbcType=INTEGER}
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		#{proj_no,jdbcType=INTEGER}
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		#{emp_id,jdbcType=INTEGER}
		,
		</if>
		<if test="emp_no != null and emp_no != ''">
		#{emp_no,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		#{payment_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="remark != null and remark != ''">
		#{remark,jdbcType=VARCHAR}
		,
		</if>
		<if test="maker != null and maker != ''">
		#{maker,jdbcType=INTEGER}
		,
		</if>
		<if test="make_date != null and make_date != ''">
		#{make_date,jdbcType=DATE}
		,
		</if>
		<if test="checker != null and checker != ''">
		#{checker,jdbcType=INTEGER}
		,
		</if>
		<if test="check_date != null and check_date != ''">
		#{check_date,jdbcType=DATE}
		,
		</if>
		<if test="payer != null and payer != ''">
		#{payer,jdbcType=INTEGER}
		,
		</if>
		<if test="pay_date != null and pay_date != ''">
		#{pay_date,jdbcType=DATE}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=VARCHAR}
		,
		</if>
		<if test="pay_way != null and pay_way != ''">
		#{pay_way,jdbcType=VARCHAR}
		,
		</if>
		<if test="phone != null and phone != ''">
		#{phone,jdbcType=VARCHAR}
		,
		</if>
		<if test="card_no != null and card_no != ''">
		#{card_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		#{offset_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		#{pay_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="start_date != null and start_date != ''">
		to_date(#{start_date},'yyyy_MM-dd')
		,
		</if>
		<if test="end_date != null and end_date != ''">
		to_date(#{end_date},'yyyy_MM-dd')
		,
		</if>
		<if test="address != null and address != ''">
		#{address,jdbcType=VARCHAR}
		,
		</if>
		<if test="use_apply_code != null and use_apply_code != ''">
		#{use_apply_code,jdbcType=VARCHAR}
		</if>
		</trim>		
		) 
	</insert>
	
	<insert id="addBatchBudgPaymentApply" parameterType="java.util.List" >
		INSERT INTO BUDG_PAYMENT_APPLY (
			group_id,
			hos_id,
			copy_code,
			apply_code,
			apply_date,
			dept_id,
			dept_no,
			proj_id,
			proj_no,
			emp_id,
			emp_no,
			remark,
			payment_amount,
			maker,
			make_date,
			checker,
			check_date,
			payer,
			pay_date,
			state,
			pay_way,
			offset_amount,
			pay_amount,
			phone,
			card_no,
			start_date,
			end_date,
			address,
			use_apply_code
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select #{item.group_id, jdbcType=INTEGER} group_id,
				   #{item.hos_id, jdbcType=INTEGER} hos_id,
				   #{item.copy_code, jdbcType=VARCHAR} copy_code,
				   #{item.apply_code, jdbcType=VARCHAR} apply_code,
				   #{item.apply_date, jdbcType=DATE} apply_date,
				   #{item.dept_id, jdbcType=INTEGER} dept_id,
				   #{item.dept_no, jdbcType=INTEGER} dept_no,
				   <choose>
				       <when test="item.proj_id != null and item.proj_id != ''">
				           #{item.proj_id, jdbcType=INTEGER} proj_id,
				       </when>
				       <otherwise> null proj_id, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.proj_no != null and item.proj_no != ''">
				           #{item.proj_no, jdbcType=INTEGER} proj_no,
				       </when>
				       <otherwise> null proj_no, </otherwise>
				   </choose>
				   #{item.emp_id, jdbcType=INTEGER} emp_id,
				   #{item.emp_no, jdbcType=INTEGER} emp_no,
				   #{item.remark, jdbcType=VARCHAR} remark,
				   #{item.payment_amount, jdbcType=NUMERIC} payment_amount,
				   <choose>
				       <when test="item.maker != null and item.maker != ''">
				           #{item.maker, jdbcType=INTEGER} maker,
				       </when>
				       <otherwise> null maker, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.make_date != null">
				           #{item.make_date, jdbcType=DATE} make_date,
				       </when>
				       <otherwise> null make_date, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.checker != null and item.checker != ''">
				           #{item.checker, jdbcType=INTEGER} checker,
				       </when>
				       <otherwise> null checker, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.check_date != null">
				           #{item.check_date, jdbcType=DATE} check_date,
				       </when>
				       <otherwise> null check_date, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.payer != null and item.payer != ''">
				           #{item.payer, jdbcType=INTEGER} payer,
				       </when>
				       <otherwise> null payer, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.pay_date != null">
				           #{item.pay_date, jdbcType=DATE} pay_date,
				       </when>
				       <otherwise> null pay_date, </otherwise>
				   </choose>
				   #{item.state, jdbcType=VARCHAR} state,
				   <choose>
				       <when test="item.pay_way != null and item.pay_way != ''">
				           #{item.pay_way, jdbcType=VARCHAR} pay_way,
				       </when>
				       <otherwise> null pay_way, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.offset_amount != null and item.offset_amount != ''">
				           #{item.offset_amount, jdbcType=NUMERIC} offset_amount,
				       </when>
				       <otherwise> null offset_amount, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.pay_amount != null and item.pay_amount != ''">
				           #{item.pay_amount, jdbcType=NUMERIC} pay_amount,
				       </when>
				       <otherwise> null pay_amount, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.phone != null and item.phone != ''">
				           #{item.phone, jdbcType=VARCHAR} phone,
				       </when>
				       <otherwise> null phone, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.card_no != null and item.card_no != ''">
				           #{item.card_no, jdbcType=VARCHAR} card_no,
				       </when>
				       <otherwise> null card_no, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.start_date != null">
				           #{item.start_date, jdbcType=DATE} start_date,
				       </when>
				       <otherwise> null start_date, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.end_date != null">
				           #{item.end_date, jdbcType=DATE} end_date,
				       </when>
				       <otherwise> null end_date, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.address != null and item.address != ''">
				           #{item.address, jdbcType=VARCHAR} address,
				       </when>
				       <otherwise> null address, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.use_apply_code != null and item.use_apply_code != ''">
				           #{item.use_apply_code, jdbcType=VARCHAR} use_apply_code
				       </when>
				       <otherwise> null use_apply_code </otherwise>
				   </choose>
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateBudgPaymentApply" parameterType="java.util.Map">
		UPDATE BUDG_PAYMENT_APPLY 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="dept_id != null and dept_id != ''">
			dept_id = #{dept_id},
		</if>
		<if test="dept_no != null and dept_no != ''">
			dept_no = #{dept_no},
		</if>
		<if test="proj_id != null and proj_id != ''">
			proj_id = #{proj_id},
			proj_no = #{proj_no},
		</if>
		<if test="proj_id == null or proj_id == ''">
			proj_id = null,
			proj_no = null,
		</if>
		<if test="emp_id != null and emp_id != ''">
			emp_id = #{emp_id},
		</if>	
		<if test="emp_no != null and emp_no != ''">
			emp_no = #{emp_no},
		</if>	
		<if test="remark != null and remark != ''">
			remark = #{remark},
		</if>	
		<if test="apply_date != null and apply_date != ''">
			apply_date = to_date(#{apply_date},'yyyy/MM/dd'),
		</if>		
		<if test="phone != null and phone != ''">
			phone = #{phone},
		</if>		
		<if test="card_no != null and card_no != ''">
			card_no = #{card_no},
		</if>	
		<if test="start_date != null and start_date != ''">
			start_date = to_date(#{start_date},'yyyy-MM-dd') ,
		</if>
		<if test="start_date == null or start_date == ''">
			start_date = null,
		</if>	
		<if test="end_date != null and end_date != ''">
			end_date = to_date(#{end_date},'yyyy-MM-dd'),
		</if>
		<if test="end_date == null or end_date == ''">
			end_date = null,
		</if>
		<if test="address != null and address != ''">
			address = #{address,jdbcType=VARCHAR},
		</if>
		<if test="address == null or address == ''">
			address = null,
		</if>
		<if test="use_apply_code != null and use_apply_code != ''">
			use_apply_code = #{use_apply_code}
		</if>
		</trim>
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
				 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
				 and 
		apply_code =#{apply_code,jdbcType=VARCHAR}
	</update>
	
	<update id="updateBatchBudgPaymentApply" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE BUDG_PAYMENT_APPLY SET
			dept_id = #{item.dept_id},
			dept_no = #{item.dept_no},
			proj_id = #{item.proj_id},
			proj_no = #{item.proj_no},
			emp_id = #{item.emp_id},
			emp_no = #{item.emp_no},
			payment_amount = #{item.payment_amount},
			remark = #{item.remark},
			apply_date = #{item.apply_date},
			phone = #{item.phone,jdbcType=VARCHAR},
			card_no = #{item.card_no,jdbcType=VARCHAR} ,
			start_date = to_date(#{item.start_date},'yyyy-MM-dd'),
			end_date = to_date(#{item.end_date},'yyyy-MM-dd'),
			address = #{item.address,jdbcType=VARCHAR}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			apply_code = #{item.apply_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	
	<update id="updateAmount" parameterType="java.util.Map">
		UPDATE BUDG_PAYMENT_APPLY SET
		<if test="payment_amount != null and payment_amount != ''">
			payment_amount = #{payment_amount}
			,
		</if>
			offset_amount = #{offset_amount}
			,
			pay_amount = #{pay_amount}
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
				 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
				 and 
		apply_code =#{apply_code,jdbcType=VARCHAR}
	</update>
	
	<update id="updateSubmitAndWithdraw" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_PAYMENT_APPLY SET
			state = #{item.state}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			apply_code = #{item.apply_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	
	
	<update id="updateToExamine" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_PAYMENT_APPLY SET
			checker = #{item.checker,jdbcType=INTEGER},
			check_date = to_date(#{item.check_date},'yyyy/MM/dd'),
			state = #{item.state}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			apply_code = #{item.apply_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	
	<update id="updateNotToExamine" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_PAYMENT_APPLY SET
			checker = #{item.checker,jdbcType=INTEGER},
			check_date = #{item.check_date},
			state = #{item.state}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			apply_code = #{item.apply_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	
	<update id="updateConfirmPay" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_PAYMENT_APPLY SET
			payer = #{item.payer,jdbcType=INTEGER},
			pay_date = to_date(#{item.pay_date},'yyyy/MM/dd'),
			state = #{item.state},
			pay_way = #{item.pay_way}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			apply_code = #{item.apply_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="deleteBudgPaymentApply" parameterType="java.util.Map">
	
		DELETE FROM BUDG_PAYMENT_APPLY WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		apply_code = #{apply_code,jdbcType=VARCHAR} 
	
	</delete>
	<delete id="deleteBatchBudgPaymentApply" parameterType="java.util.List">
		DELETE FROM BUDG_PAYMENT_APPLY WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				apply_code = #{item.apply_code,jdbcType=VARCHAR}
				
			</foreach>
	
	</delete>
	<select id="queryBudgPaymentApply" parameterType="java.util.Map" resultMap="budgPaymentApply" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.apply_code,
			a.apply_date,
			a.use_apply_code,
			a.dept_id,
			a.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			a.proj_id,
			a.proj_no,
			hpd.proj_code,
			hpd.proj_name,
			a.emp_id,
			a.emp_no,
			hed.emp_code,
			hed.emp_name,
			a.payment_amount,
			a.remark,
			a.maker,
			u1.user_name maker_name,
			a.make_date,
			a.checker,
			u2.user_name checker_name,
			a.check_date,
			a.payer,
			u3.user_name payer_name,
			a.pay_date,
			a.state,
			bsd.value_name state_name,
			a.pay_way,
			apy.pay_name pay_way_name,
			a.phone,
			a.card_no,
			a.offset_amount,
			a.pay_amount ,
			a.start_date ,
			a.end_date ,
			a.address
		FROM BUDG_PAYMENT_APPLY a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.checker = u2.user_id
		left join sys_user u3 on
		a.group_id = u3.group_id
		and a.hos_id = u3.hos_id
		and a.payer = u3.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'BORROW_STATE'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_codes != null and apply_codes != ''">
		AND a.apply_code in (${apply_codes}) 
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="emp_no != null and emp_no != ''">
		AND a.emp_no = #{emp_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND a.payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND a.offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND a.pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND a.remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND a.maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND a.make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND a.checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND a.check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="payer != null and payer != ''">
		AND a.payer = #{payer,jdbcType=INTEGER}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND a.pay_date = #{pay_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="pay_way != null and pay_way != ''">
		AND a.pay_way = #{pay_way,jdbcType=VARCHAR}
		</if>
		<if test="phone != null and phone != ''">
		AND a.phone = #{phone,jdbcType=VARCHAR}
		</if>
		<if test="card_no != null and card_no != ''">
		AND a.card_no = #{card_no,jdbcType=VARCHAR}
		</if>
		<if test="apply_date_b != null and apply_date_b != '' and apply_date_e != null and apply_date_e != ''">
		AND a.apply_date between to_date(#{apply_date_b},'yyyy/MM/dd') and to_date(#{apply_date_e},'yyyy/MM/dd')
		</if>
		<if test="use_apply_code != null and use_apply_code != ''">
		AND a.use_apply_code = #{use_apply_code}
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	<select id="queryBudgPaymentApplyByCode" resultType="com.chd.hrp.acc.entity.payable.BudgPaymentApply" parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.apply_code,
			a.apply_date,
			a.dept_id,
			a.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			a.proj_id,
			a.proj_no,
			hpd.proj_code,
			hpd.proj_name,
			a.emp_id,
			a.emp_no,
			hed.emp_code,
			hed.emp_name,
			a.payment_amount,
			a.remark,
			a.maker,
			u1.user_name maker_name,
			a.make_date,
			a.checker,
			u2.user_name checker_name,
			a.check_date,
			a.payer,
			u3.user_name payer_name,
			a.pay_date,
			a.state,
			bsd.value_name state_name,
			a.pay_way,
			apy.pay_name pay_way_name,
			a.phone,
			a.card_no,
			a.offset_amount,
			a.pay_amount ,
			a.start_date ,
			a.end_date ,
			a.address,
			a.use_apply_code
		FROM BUDG_PAYMENT_APPLY a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.checker = u2.user_id
		left join sys_user u3 on
		a.group_id = u3.group_id
		and a.hos_id = u3.hos_id
		and a.payer = u3.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'BORROW_STATE'
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.apply_code = #{apply_code,jdbcType=VARCHAR}
	
	</select>
	<select id="queryBudgPaymentApplyByUniqueness" resultType="com.chd.hrp.acc.entity.payable.BudgPaymentApply" parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			apply_code,
			apply_date,
			dept_id,
			dept_no,
			proj_id,
			proj_no,
			emp_id,
			emp_no,
			payment_amount,
			remark,
			maker,
			make_date,
			checker,
			check_date,
			payer,
			pay_date,
			state,
			pay_way,
			phone,
			card_no,
			offset_amount,
			pay_amount,
			star_date ,
			end_date ,
			address
		FROM BUDG_PAYMENT_APPLY 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="emp_no != null and emp_no != ''">
		AND emp_no = #{emp_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="payer != null and payer != ''">
		AND payer = #{payer,jdbcType=INTEGER}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND pay_date = #{pay_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="pay_way != null and pay_way != ''">
		AND pay_way = #{pay_way,jdbcType=VARCHAR}
		</if>
		<if test="phone != null and phone != ''">
		AND phone = #{phone,jdbcType=VARCHAR}
		</if>
		<if test="card_no != null and card_no != ''">
		AND card_no = #{card_no,jdbcType=VARCHAR}
		</if>
		<if test="apply_date != null and apply_date != ''">
		AND apply_date = #{apply_date,jdbcType=DATE}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryPaymentApplyByPrintTemlate" resultType="java.util.Map" parameterType="java.util.Map" >
	
		SELECT 
			a.apply_code,
			a.apply_date,
			hdd.dept_code,
			hdd.dept_name,
			hpd.proj_code,
			hpd.proj_name,
			hed.emp_code,
			hed.emp_name,
			a.payment_amount payment_amount_sum,
			a.remark d_remark,
			u1.user_name maker,
			a.make_date,
			u2.user_name checker,
			a.check_date,
			u3.user_name payer,
			a.pay_date,
			bsd.value_name state,
			apy.pay_name pay_way,
			a.phone,
			a.card_no,
			a.offset_amount offset_amount_sum,
			a.pay_amount pay_amount_sum ,
			to_char(a.start_date,'yyyy/MM/dd') ||'-' ||to_char(a.end_date,'yyyy/MM/dd') start_end_date ,
			a.address
			
		FROM BUDG_PAYMENT_APPLY a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.checker = u2.user_id
		left join sys_user u3 on
		a.group_id = u3.group_id
		and a.hos_id = u3.hos_id
		and a.payer = u3.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'BORROW_STATE'
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.apply_code = #{apply_code,jdbcType=VARCHAR}
	
	</select>
	
	<select id="queryBudgPaymentApplyPrint" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.apply_code,
			a.apply_date,
			a.dept_id,
			a.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			a.proj_id,
			a.proj_no,
			hpd.proj_code,
			hpd.proj_name,
			a.emp_id,
			a.emp_no,
			hed.emp_code,
			hed.emp_name,
			a.payment_amount,
			a.remark,
			a.maker,
			u1.user_name maker_name,
			a.make_date,
			a.checker,
			u2.user_name checker_name,
			a.check_date,
			a.payer,
			u3.user_name payer_name,
			a.pay_date,
			a.state,
			bsd.value_name state_name,
			a.pay_way,
			apy.pay_name pay_way_name,
			a.phone,
			a.card_no,
			a.offset_amount,
			a.pay_amount ,
			to_char(a.start_date,'yyyy/MM/dd') ||'-' ||to_char(a.end_date,'yyyy/MM/dd') start_end_date ,
			a.address
		FROM BUDG_PAYMENT_APPLY a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.checker = u2.user_id
		left join sys_user u3 on
		a.group_id = u3.group_id
		and a.hos_id = u3.hos_id
		and a.payer = u3.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'BORROW_STATE'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="apply_codes != null and apply_codes != ''">
		AND a.apply_code in (${apply_codes}) 
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="emp_no != null and emp_no != ''">
		AND a.emp_no = #{emp_no,jdbcType=INTEGER}
		</if>
		<if test="payment_amount != null and payment_amount != ''">
		AND a.payment_amount = #{payment_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND a.offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="pay_amount != null and pay_amount != ''">
		AND a.pay_amount = #{pay_amount,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND a.remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND a.maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND a.make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND a.checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND a.check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="payer != null and payer != ''">
		AND a.payer = #{payer,jdbcType=INTEGER}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND a.pay_date = #{pay_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="pay_way != null and pay_way != ''">
		AND a.pay_way = #{pay_way,jdbcType=VARCHAR}
		</if>
		<if test="phone != null and phone != ''">
		AND a.phone = #{phone,jdbcType=VARCHAR}
		</if>
		<if test="card_no != null and card_no != ''">
		AND a.card_no = #{card_no,jdbcType=VARCHAR}
		</if>
		<if test="apply_date_b != null and apply_date_b != '' and apply_date_e != null and apply_date_e != ''">
		AND a.apply_date between to_date(#{apply_date_b},'yyyy/MM/dd') and to_date(#{apply_date_e},'yyyy/MM/dd')
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	
	<select id="queryBudgPaymentApplyByBusiType" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT vouch_id FROM ${log_table} WHERE BUSI_TYPE_CODE=#{busi_type_code} and business_no=#{apply_code}
		and group_id=#{group_id} and hos_id=#{hos_id} and copy_code =#{copy_code}
	</select>
	
	<delete id="deleteBudgPaymentApplyByBusiType" parameterType="java.util.Map">
	
		DELETE FROM ${log_table} WHERE BUSI_TYPE_CODE=#{busi_type_code} and business_no=#{apply_code}
		and group_id=#{group_id} and hos_id=#{hos_id} and copy_code =#{copy_code}
	
	</delete>
	
	<select id="queryBudgPaymentApplyState" resultType="com.chd.hrp.acc.entity.payable.BudgPaymentApply" parameterType="java.util.Map" >
	
		SELECT 
			 nvl(ddp.remain_amount,0)+nvl(bbd.remain_amount,0) offset_amount
			 
		FROM BUDG_PAYMENT_APPLY a
		left join budg_borr_proj ddp
	    on a.group_id = ddp.group_id
	    and a.hos_id = ddp.hos_id and a.copy_code = ddp.copy_code
	    and a.proj_id = ddp.proj_id and  a.emp_id = ddp.emp_id
	    left join budg_borr_dept bbd
	    on a.group_id = bbd.group_id
	    and a.hos_id = bbd.hos_id and a.copy_code = bbd.copy_code
	    and a.emp_id = bbd.emp_id
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'BORROW_STATE'
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.apply_code = #{apply_code,jdbcType=VARCHAR}
	
	</select>
	
		<select id="queryUseApplyCode"  parameterType="java.util.Map" resultMap="queryUseApplyCodeMap" >
		select apply_code id ,apply_code text from  BUDG_USE_APPLY 
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and copy_code = #{copy_code, jdbcType=VARCHAR}
		  and state_t = '03'
	</select>
	
	<select id="queryMoneyApplyDet" parameterType="java.util.Map" resultMap="queryMoneyApplyDetMap"  >
	    select hs.source_code || '.' || buad.source_ID source_id_no,
	           hs.source_code|| ' ' ||hs.source_name source_name,
	           buad.payment_item_id || '@' || payment_item_no payment_item_id_no,
	           bpi.payment_item_code|| ' '||bpi.payment_item_name payment_item_name,
	           buad.apply_amount use_payment,
	           buad.apply_amount payment_amount,
	           buad.remark remark_det
		from BUDG_USE_APPLY_DET buad
		left join HOS_SOURCE hs on hs.group_id = buad.group_id and hs.hos_id = buad.hos_id and hs.source_id = buad.source_id
		left join budg_payment_item bpi on buad.group_id = bpi.group_id and buad.hos_id = bpi.hos_id and buad.copy_code = bpi.copy_code and bpi.payment_item_id = 
		buad.payment_item_id 
		where buad.group_id = #{group_id}
		and buad.hos_id = #{hos_id}
		and buad.apply_code = #{apply_code}
	</select>
	
	<select id="queryAddPageData" parameterType="java.util.Map" resultMap="queryAddPageDataMap" >
		select a.emp_id || '.' || a.emp_no emp_id,
		       a.emp_code || ' ' || a.emp_name as emp_text,
		       b.dept_id || '.' || b.dept_no as dept_id,
		       b.dept_code || ' ' || b.dept_name as dept_text
		  from HOS_EMP_DICT a 
		  join HOS_DEPT_DICT b 
		  	on a.group_id =b.group_id 
		  	and a.hos_id = b.hos_id 
		  	and a.dept_id = b.dept_id
		  	and b.is_stop = 0  
		 where a.group_id = #{group_id}
		   and a.hos_id = #{hos_id}
		   and a.is_stop = 0
		   and b.is_last = '1'
		   and a.emp_id = #{emp_id}
	
	</select>
	
	
	<select id="queryGetEmpCardNoSelect" parameterType="java.util.Map" resultMap="queryUseApplyCodeMap"  >
		select <!-- emp_id || ',' || emp_no -->  account_code id, account_code text
		  from acc_emp_account accea
		 WHERE accea.group_id = #{group_id}
		   and accea.hos_id = #{hos_id}
		   and accea.copy_code = #{copy_code}
		   and accea.emp_id = #{emp_id}
		   and accea.emp_no = #{emp_no}
	</select>
	
	<resultMap type="java.util.Map" id="accountMap">
		<result column="emp_id" property="emp_id"/>
		<result column="account_code" property="account_code"/>
	</resultMap>
	<select id="queryAccountListByEmpIdList" parameterType="java.util.List" resultMap="accountMap">
		select emp_id,
			   account_code
		from acc_emp_account
		<where>
			<foreach collection="list" item="item" separator=" or ">
				(
						group_id = #{item.group_id, jdbcType=INTEGER}
					and hos_id = #{item.hos_id, jdbcType=INTEGER}
					and copy_code = #{item.copy_code, jdbcType=VARCHAR}
					and emp_id = #{item.emp_id, jdbcType=INTEGER}
				)
			</foreach>
		</where>
	</select>
	
	<select id="queryBudgPro" parameterType="java.util.Map"  resultMap="queryBudgProMap" >
	     select 
           <if test=" flag == 'B'.toString() ">
            (select nvl(sum(bpar.budg_amount),0) from BUDG_PROJ_APPLY_RESOLVE bpar 
              where bpar.group_id = #{group_id}
	              and bpar.hos_id = #{hos_id}
	              and bpar.copy_code = #{copy_code}
	              and bpar.budg_year = #{year} 
	              and bpar.proj_id = #{proj_id} 
           ) pro_budg_money, '' balance, '' Account_balance
           
           </if>
           <if test=" flag == 'A'.toString() ">
            (select nvl(sum(be.cost_budg),0) from BUDG_EXPENSE be
           where be.group_id = #{group_id}
           and be.hos_id = #{hos_id}
           and be.copy_code = #{copy_code}
           and be.budg_year = #{year}
           <if test=" month != '' and month != null ">
             and be.month = #{month}
           </if>
           <if test=" dept_id != '' and dept_id != null ">
             and be.dept_id = (select bds.duty_dept_id
                                  from budg_duty_set bds
                                 where bds.group_id = be.group_id
                                   and bds.hos_id = be.hos_id
                                   and bds.copy_code = be.copy_code
                                   and bds.payment_item_id = be.payment_item_id
                                   and bds.dept_id = #{dept_id} )
             
           </if>
           
            ) budg_money, '' balance, '' Account_balance
            
            
           </if>
		from dual 
		
		
	</select>
	
	
</mapper>

