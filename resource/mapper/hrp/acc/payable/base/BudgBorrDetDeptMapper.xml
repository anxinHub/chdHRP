<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.payable.base.BudgBorrDetDeptMapper">
	
	<resultMap id="budgBorrDetDept" type="com.chd.hrp.acc.entity.payable.BudgBorrDetDept">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="emp_id" column="emp_id"/>
	<result property="source_id" column="source_id"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="borrow_amount" column="borrow_amount"/>
	<result property="offset_amount" column="offset_amount"/>
	<result property="return_amount" column="return_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	</resultMap>
		
	<resultMap id="budgBorrDetDeptMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="emp_id" column="emp_id"/>
	<result property="source_id" column="source_id"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="borrow_amount" column="borrow_amount"/>
	<result property="offset_amount" column="offset_amount"/>
	<result property="return_amount" column="return_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_BORR_DET_DEPT (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		emp_id
		,
		</if>
		<if test="source_id != null and source_id != ''">
		source_id
		,
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		payment_item_id
		,
		</if>
		<if test="borrow_amount != null and borrow_amount != ''">
		borrow_amount
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		offset_amount
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		return_amount
		,
		</if>
		<if test="remain_amount != null and remain_amount != ''">
		remain_amount
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		#{emp_id,jdbcType=INTEGER}
		,
		</if>
		<if test="source_id != null and source_id != ''">
		#{source_id,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		#{payment_item_id,jdbcType=INTEGER}
		,
		</if>
		<if test="borrow_amount != null and borrow_amount != ''">
		#{borrow_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		#{offset_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		#{return_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="remain_amount != null and remain_amount != ''">
		#{remain_amount,jdbcType=INTEGER}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_BORR_DET_DEPT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		emp_id
		,
		source_id
		,
		payment_item_id
		,
		borrow_amount
		,
		offset_amount
		,
		return_amount
		,
		remain_amount
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.emp_id,jdbcType=INTEGER}
			,
			#{item.source_id,jdbcType=INTEGER}
			,
			#{item.payment_item_id,jdbcType=INTEGER}
			,
			#{item.borrow_amount,jdbcType=INTEGER}
			,
			#{item.offset_amount,jdbcType=INTEGER}
			,
			#{item.return_amount,jdbcType=INTEGER}
			,
			#{item.remain_amount,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_borr_det_dept 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="borrow_amount != null ">
		borrow_amount = #{borrow_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="offset_amount != null ">
		offset_amount = #{offset_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="return_amount != null ">
		return_amount = #{return_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="remain_amount != null ">
		remain_amount = #{remain_amount,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		</where>  
	</update>
	
	
	<update id="updateF" parameterType="java.util.Map">
	
		UPDATE budg_borr_det_dept 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="borrow_amount != null and borrow_amount != ''">
		borrow_amount = #{borrow_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		offset_amount = nvl(offset_amount,0) + #{offset_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		return_amount = nvl(return_amount,0) + #{return_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="remain_amount != null and remain_amount != ''">
		remain_amount = nvl(remain_amount,0) + #{remain_amount,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		</where>  
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_borr_det_dept 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.borrow_amount != null and item.borrow_amount != ''">
			borrow_amount = #{item.borrow_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.offset_amount != null and item.offset_amount != ''">
			offset_amount = #{item.offset_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.return_amount != null and item.return_amount != ''">
			return_amount = #{item.return_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.remain_amount != null and item.remain_amount != ''">
			remain_amount = #{item.remain_amount,jdbcType=INTEGER}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.emp_id != null and item.emp_id != ''">
			AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			</if>  
			<if test="item.source_id != null and item.source_id != ''">
			AND source_id = #{item.source_id,jdbcType=INTEGER}
			</if>  
			<if test="item.payment_item_id != null and item.payment_item_id != ''">
			AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_borr_det_dept 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_borr_det_dept 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.emp_id != null and item.emp_id != ''">
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>
				<if test="item.payment_item_id != null and item.payment_item_id != ''">
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgBorrDetDept" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		emp_id,
		source_id,
		payment_item_id,
		borrow_amount,
		offset_amount,
		return_amount,
		remain_amount
		FROM BUDG_BORR_DET_DEPT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="borrow_amount != null and borrow_amount != ''">
		AND borrow_amount = #{borrow_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		<if test="remain_amount != null and remain_amount != ''">
		AND remain_amount = #{remain_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryByCode" resultMap="budgBorrDetDept"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		emp_id,
		source_id,
		payment_item_id,
		borrow_amount,
		offset_amount,
		return_amount,
		remain_amount
		FROM budg_borr_det_dept 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		emp_id = #{emp_id,jdbcType=INTEGER}   and 
		source_id = #{source_id,jdbcType=INTEGER}   and 
		payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgBorrDetDept"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		emp_id,
		source_id,
		payment_item_id,
		borrow_amount,
		offset_amount,
		return_amount,
		remain_amount
		FROM BUDG_BORR_DET_DEPT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="borrow_amount != null and borrow_amount != ''">
		AND borrow_amount = #{borrow_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		<if test="remain_amount != null and remain_amount != ''">
		AND remain_amount = #{remain_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgBorrDetDept"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		emp_id,
		source_id,
		payment_item_id,
		borrow_amount,
		offset_amount,
		return_amount,
		remain_amount
		FROM BUDG_BORR_DET_DEPT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="borrow_amount != null and borrow_amount != ''">
		AND borrow_amount = #{borrow_amount,jdbcType=INTEGER}
		</if>
		<if test="offset_amount != null and offset_amount != ''">
		AND offset_amount = #{offset_amount,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		<if test="remain_amount != null and remain_amount != ''">
		AND remain_amount = #{remain_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
</mapper>

