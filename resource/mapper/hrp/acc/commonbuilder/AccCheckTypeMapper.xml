<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.commonbuilder.AccCheckTypeMapper">

	<resultMap id="accCheckType" type="com.chd.hrp.acc.entity.AccCheckType">
		<result property="check_type_id" column="check_type_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="check_table" column="check_table" />
		<result property="check_type_name" column="check_type_name" />
		<result property="check_type_code" column="check_type_code" />
		<result property="sort_code" column="sort_code" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="is_stop" column="is_stop" />
		<result property="is_sys" column="is_sys" />
		<result property="column_id" column="column_id" />
		<result property="column_no" column="column_no" />
		<result property="column_code" column="column_code" />
		<result property="column_name" column="column_name" />
		<result property="column_check" column="column_check" />
		<result property="is_change" column="is_change" />
		<result property="z_code" column="z_code" />
	</resultMap>

	<insert id="addAccCheckType" useGeneratedKeys="true" >
		<selectKey resultType="java.lang.Integer" order="BEFORE"  keyProperty="check_type_id">
			SELECT ACC_CHECK_TYPE_SEQ.NEXTVAL  as check_type_id FROM DUAL
		</selectKey> 
		INSERT INTO ACC_CHECK_TYPE (
		check_type_id,
		group_id
		,
		hos_id
		,
		copy_code
		,
		check_table
		,
		check_type_name
		,
		check_type_code
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		is_sys
		,
		column_id      
		,
  		column_no       
		,
 		 column_code    
		,
 		 column_name    
		,
  		is_change,z_code  
		

		) VALUES (
		#{check_type_id},		
		#{group_id} ,
		#{hos_id} ,
		#{copy_code} ,
		#{check_table},
		#{check_type_name} ,
		#{check_type_code} ,
		#{sort_code} ,
		#{spell_code ,jdbcType=VARCHAR} ,
		#{wbx_code ,jdbcType=VARCHAR} ,
		#{is_stop} ,
		#{is_sys},
		#{column_id ,jdbcType=VARCHAR }   ,
		#{column_no  ,jdbcType=VARCHAR}   ,
		#{column_code  ,jdbcType=VARCHAR} ,
		#{column_name  ,jdbcType=VARCHAR} ,
		#{is_change },#{z_code,jdbcType=VARCHAR}
		)
		  
	</insert>
	<insert id="addBatchAccCheckType" parameterType="java.util.List">

		INSERT INTO ACC_CHECK_TYPE (
		check_type_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		check_table
		,
		check_type_name
		,
		check_type_code
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		is_sys
		,
		column_id      
		,
  		column_no       
		,
 		 column_code    
		,
 		 column_name    
		,
  		is_change  
		

		) select ACC_CHECK_TYPE_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index"
			separator=" union">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.copy_code} ,
			#{item.check_table},
			#{item.check_type_name} ,
			#{item.check_type_code} ,
			#{item.sort_code} ,
			#{item.spell_code ,jdbcType=VARCHAR} ,
			#{item.wbx_code ,jdbcType=VARCHAR} ,
			#{item.is_stop} ,
			#{item.is_sys},
			#{item.column_id ,jdbcType=VARCHAR }   ,
  			#{item.column_no  ,jdbcType=VARCHAR}   ,
  			#{item.column_code  ,jdbcType=VARCHAR} ,
  			#{item.column_name  ,jdbcType=VARCHAR} ,
  			#{item.is_change }
			from dual
		</foreach>
			)t
	</insert>

	<update id="updateAccCheckType" parameterType="java.util.Map">

		UPDATE acc_check_type SET		
		check_type_name = #{check_type_name}
		,
		check_type_code = #{check_type_code}
		,
		sort_code = #{sort_code}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		,
		is_stop = #{is_stop}
		,
		is_sys = #{is_sys},
		z_code=#{z_code}
		WHERE
		check_type_id = #{check_type_id}
		and
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		copy_code = #{copy_code}


	</update>
	<update id="updateBatchAccCheckType" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE acc_check_type SET
			check_type_name = #{check_type_name}
			,
			check_type_code = #{check_type_code}
			,
			sort_code = #{sort_code}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
			,
			is_stop = #{is_stop}
			,
			is_sys = #{is_sys}

			WHERE
			check_type_id = #{item.check_type_id}
			and
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			copy_code = #{item.copy_code}

		</foreach>
	</update>

	<delete id="deleteAccCheckType" parameterType="java.util.Map">

		DELETE FROM acc_check_type WHERE
		check_type_id = #{check_type_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code}

	</delete>
	<delete id="deleteBatchAccCheckType" parameterType="java.util.List">
		DELETE FROM acc_check_type WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			check_type_id = #{item.check_type_id}
			and
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			copy_code = #{item.copy_code}

		</foreach>


	</delete>
	
	<select id="queryCheckTypeBySubjId" parameterType="java.util.Map" resultMap="accCheckType">
		select check_table||' '||check_type_id as check_table,check_type_name from acc_check_type 
		where check_type_id in (
			select check1 from acc_subj where subj_code = #{subj_code} and acc_year=#{acc_year} 
		)
		UNION ALL
		select check_table||' '||check_type_id as  check_table,check_type_name from acc_check_type 
		where check_type_id in (
			select check2 from acc_subj where subj_code = #{subj_code}  and acc_year=#{acc_year} 
		)
		UNION ALL
		select check_table||' '||check_type_id as  check_table,check_type_name from acc_check_type 
		where check_type_id in ( 
		select check3 from acc_subj where subj_code = #{subj_code} and acc_year=#{acc_year} 
		)
		UNION ALL
		select check_table||' '||check_type_id as  check_table,check_type_name from acc_check_type 
		where check_type_id in (
			select check4 from acc_subj where subj_code = #{subj_code} and acc_year=#{acc_year} 
		)
	</select>
	<select id="queryAccCheckTypeBySelect" parameterType="java.util.Map"
		resultMap="accCheckType">
		select check_table as  check_table,check_type_name from acc_check_type 
		where check_type_id in (
			select check1 from acc_subj where subj_code = #{subj_code}  
		)
		UNION ALL
		select check_table as  check_table,check_type_name from acc_check_type 
		where check_type_id in (
			select check2 from acc_subj where subj_code = #{subj_code}  
		)
		UNION ALL
		select check_table as  check_table,check_type_name from acc_check_type 
		where check_type_id in ( select check3 from acc_subj where subj_code = #{subj_code}  
		)
		UNION ALL
		select check_table as  check_table,check_type_name from acc_check_type 
		where check_type_id in (
			select check4 from acc_subj where subj_code = #{subj_code}  
		)
	</select>
	<select id="queryCheckTable" parameterType="java.util.Map"
		resultMap="accCheckType">
		select check_table||' '||check_type_id as check_table,check_type_name 
		from acc_check_type
		where  copy_code = #{copy_code}  
			and group_id = #{group_id}  
			and hos_id = #{hos_id}
		order by check_type_id
	</select>
	<select id="queryAccCheckTypeById" resultType="com.chd.hrp.acc.entity.AccCheckType"
		parameterType="string">

		SELECT
		check_type_id,
		group_id,
		hos_id,
		copy_code,
		check_type_name,
		check_type_code,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		is_sys,
		column_id ,
  		column_no,
  		check_table,
 		column_code,
 		column_name,
 		column_check,
  		is_change,z_code  
		FROM acc_check_type
		WHERE
			check_type_id = #{check_type_id}
			and
			group_id = #{group_id}
			and
			hos_id = #{hos_id}
			and
			copy_code = #{copy_code}

	</select>
	
	<!-- 添加、修改验证核算类名称重复 -->
	<select id="queryAccCheckTypeByName" resultType="com.chd.hrp.acc.entity.AccCheckType"
		parameterType="string">

		SELECT
		check_type_id,
		group_id,
		hos_id,
		copy_code,
		check_type_name,
		check_type_code,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		is_sys,
		column_id ,
  		column_no,
 		column_code,
 		column_name,
  		is_change  
		FROM acc_check_type
		WHERE
			check_type_name = #{check_type_name}
			and
			group_id = #{group_id}
			and
			hos_id = #{hos_id}
			and
			copy_code = #{copy_code}
			<if test="check_type_id != null and check_type_id != ''">
				AND check_type_id != #{check_type_id}
			</if>
	</select>
	
	<select id="queryAccCheckType" parameterType="java.util.Map"
		resultMap="accCheckType">

		SELECT
		check_type_id,
		group_id,
		hos_id,
		copy_code,
		check_type_name,
		check_type_code,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		is_sys,
		column_id ,
  		column_no,
 		column_code,
 		column_name,
 		column_check,
  		is_change  
		FROM ACC_CHECK_TYPE
		<where>
			<if test="check_type_id != null and check_type_id != ''">
				AND check_type_id = #{check_type_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="check_type_name != null and check_type_name != ''">
				AND check_type_name = #{check_type_name}
			</if>
			<if test="check_type_code != null and check_type_code != ''">
				AND check_type_code = #{check_type_code}
			</if>
			<if test="sort_code != null and sort_code != ''">
				AND sort_code = #{sort_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
			<if test="is_sys != null and is_sys != ''">
				AND is_sys = #{is_sys}
			</if>
		</where>
		order by sort_code,check_type_id asc
	</select>


	<select id="queryAccCheckTypeByExtend" parameterType="java.util.Map"
		resultMap="accCheckType">

		SELECT
		check_type_id,
		group_id,
		hos_id,
		copy_code,
		check_type_name,
		check_type_code,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		is_sys,
		column_id ,
  		column_no,
 		column_code,
 		column_name,
  		is_change  
		FROM ACC_CHECK_TYPE act
		<where>
			not exists(
			select b.check_type_id from ACC_CHECK_TYPE b
			<where>
				<if test="group_id != null and group_id != ''">
					AND b.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND b.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND b.copy_code = #{copy_code}
				</if>
				and act.check_type_id=b.check_type_id
			</where>
			)
			<if test="group_id != null and group_id != ''">
					AND act.group_id = #{group_id}
			</if>
			<if test="hos_code != null and hos_code != ''">
				AND act.hos_id = #{hos_code}
			</if>
			<if test="copy_id != null and copy_id != ''">
				AND act.copy_code = #{copy_id}
			</if>
				and check_table ='ACC_CHECK_ITEM'	
		</where>
		order by act.check_type_id asc
	</select>
	
	<select id="queryAccCheckTypeExtend" parameterType="java.util.Map"
		resultMap="accCheckType">

		SELECT
		check_type_id,
		group_id,
		hos_id,
		copy_code,
		check_type_name,
		check_type_code,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		is_sys,
		column_id ,
  		column_no,
 		column_code,
 		column_name,
  		is_change  
		FROM ACC_CHECK_TYPE
		<where>
			<if test="check_type_id != null and check_type_id != ''">
				AND check_type_id = #{check_type_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id  != ''">
				AND hos_id = #{hos_id }
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="check_type_name != null and check_type_name != ''">
				AND check_type_name = #{check_type_name}
			</if>
			<if test="check_type_code != null and check_type_code != ''">
				AND check_type_code = #{check_type_code}
			</if>
			<if test="sort_code != null and sort_code != ''">
				AND sort_code = #{sort_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
			<if test="is_sys != null and is_sys != ''">
				AND is_sys = #{is_sys}
			</if>
			and check_table ='ACC_CHECK_ITEM'
		</where>
		order by check_type_id asc
	</select>
	
		<select id="queryAccCheckTypeByItem" parameterType="java.util.Map"
			resultMap="accCheckType">

		SELECT
		act.check_type_id,
		act.group_id,
		act.hos_id,
		act.copy_code,
		act.check_type_name,
		act.check_type_code,
		act.sort_code,
		act.spell_code,
		act.wbx_code,
		act.is_stop,
		act.is_sys,
		act.column_id ,
  		act.column_no,
 		act.column_code,
 		act.column_name,
  		act.is_change  
		FROM ACC_CHECK_TYPE act , ACC_CHECK_ITEM aci 
		<where>
			<if test="check_type_id != null and check_type_id != ''">
				AND aci.check_type_id = #{check_type_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND aci.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND aci.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND aci.copy_code = #{copy_code}
			</if>
			<if test="check_item_id != null and check_item_id != ''">
				AND aci.check_item_id = #{check_item_id}
			</if>
			
		</where>
		and act.check_type_id = aci.check_type_id
		and act.group_id = aci.group_id
		and act.copy_code = aci.copy_code
		order by check_type_id asc
	</select>
	
	<select id="queryMaxId"  resultMap="accCheckType">

		SELECT  Max(check_type_id)  as check_type_id
		FROM ACC_CHECK_TYPE 
		
	</select>
	
	<insert id="insertBatchAccCheckType" parameterType="java.util.List">

		INSERT INTO ACC_CHECK_TYPE (
		check_type_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		check_table
		,
		check_type_name
		,
		check_type_code
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		is_sys
		,
		column_id      
		,
  		column_no       
		,
 		 column_code    
		,
 		 column_name    
		,
  		is_change  

		) 
		<foreach collection="list" item="item" index="index"
			separator=" union">
			select
			#{item.check_type_id},
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.copy_code} ,
			#{item.check_table},
			#{item.check_type_name} ,
			#{item.check_type_code} ,
			#{item.sort_code} ,
			#{item.spell_code ,jdbcType=VARCHAR} ,
			#{item.wbx_code ,jdbcType=VARCHAR} ,
			#{item.is_stop} ,
			#{item.is_sys},
			#{item.column_id ,jdbcType=VARCHAR }   ,
  			#{item.column_no  ,jdbcType=VARCHAR}   ,
  			#{item.column_code  ,jdbcType=VARCHAR} ,
  			#{item.column_name  ,jdbcType=VARCHAR} ,
  			#{item.is_change }
			from dual
		</foreach>
	</insert>
	
	<!-- 添加辅助核算类时，动态增加业务表核算类型字段 -->
	<select id="queryAccCheckTypeByAlter" statementType="CALLABLE" parameterType="java.util.Map" >
		<![CDATA[
		{call act_check_alter(
	        #{check_type_id}
		)}
		]]>
	</select>
	<select id="queryCheckType" parameterType="java.util.Map"
		resultType="com.chd.hrp.acc.entity.AccCheckType">
		select column_id,column_no,column_code,column_name,check_table
		from acc_check_type
		where  copy_code = #{copy_code}  
			and group_id = #{group_id}  
			and hos_id = #{hos_id}
			and check_type_id = #{check_type_id}
	</select>
	
	<select id="queryCheckColumn" parameterType="java.util.Map"
		resultType="com.chd.hrp.acc.entity.AccCheckType">
		select to_char(wm_concat(${column_name})) as column_name
		from ${check_table}
		where 
			<if test=" check_table != 'ACC_DEPT_TYPE' and check_table != 'HOS_SOURCE_NATURE'">
				group_id = #{group_id}  and 
				hos_id = #{hos_id}  and 
			</if>
			${column_id} in (${check_type_code})
	</select>
	
	<!-- 添加、修改验证核算类编码重复 -->
	<select id="existCode" resultType="java.lang.Integer" parameterType="string">

		SELECT count(check_type_code)
		FROM acc_check_type
		WHERE
			check_type_code = #{check_type_code}
			and
			group_id = #{group_id}
			and
			hos_id = #{hos_id}
			and
			copy_code = #{copy_code}
			<if test="check_type_id != null and check_type_id != ''">
				AND check_type_id != #{check_type_id}
			</if>
	</select>
</mapper>

