<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccStoreAttrMapper">

	<resultMap id="accStoreAttr" type="com.chd.hrp.acc.entity.AccStoreAttr">
		<result property="Store_id" column="Store_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="is_proc" column="is_proc" />
		<result property="mobile" column="mobile" />
		<result property="safe_emp_id" column="safe_emp_id" />
		<result property="proc_emp_id" column="proc_emp_id" />
		<result property="acc_emp_id" column="acc_emp_id" />
		<result property="head_emp_id" column="head_emp_id" />
		<result property="safe_emp_name" column="safe_emp_name" />
		<result property="proc_emp_name" column="proc_emp_name" />
		<result property="acc_emp_name" column="acc_emp_name" />
		<result property="head_emp_name" column="head_emp_name" />
		<result property="address" column="address" />
		<result property="note" column="note" />
		<result property="store_code" column="store_code" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="store_name" column="store_name" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="is_stop" column="is_stop" />

	</resultMap>

	<insert id="addAccStoreAttr" useGeneratedKeys="true">

		INSERT INTO
		ACC_Store_ATTR (
		STORE_ID,
		GROUP_ID,
		HOS_ID,
		DEPT_ID,
		IS_PROC,
		HEAD_EMP_ID,
		MOBILE,
		ACC_EMP_ID,
		SAFE_EMP_ID,
		PROC_EMP_ID,
		ADDRESS,
		NOTE
		) VALUES (
		#{store_id} ,
		#{group_id} ,
		#{hos_id} ,
		#{dept_id,jdbcType=INTEGER} ,
		#{is_proc} ,
		#{head_emp_id,jdbcType=INTEGER} ,
		#{mobile,jdbcType=VARCHAR} ,
		#{acc_emp_id,jdbcType=INTEGER} ,
		#{safe_emp_id,jdbcType=INTEGER} ,
		#{proc_emp_id,jdbcType=INTEGER} ,
		#{address,jdbcType=VARCHAR} ,
		#{note,jdbcType=VARCHAR} 
		)

	</insert>
	<insert id="addBatchAccStoreAttr" parameterType="java.util.List">

		INSERT INTO ACC_Store_ATTR (
		STORE_ID,
		GROUP_ID,
		HOS_ID,
		DEPT_ID,
		IS_PROC,
		HEAD_EMP_ID,
		MOBILE,
		ACC_EMP_ID,
		SAFE_EMP_ID,
		PROC_EMP_ID,
		ADDRESS,
		NOTE
		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.store_id} ,
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.dept_id,jdbcType=INTEGER} ,
			#{item.is_proc} ,
			#{item.head_emp_id,jdbcType=INTEGER} ,
			#{item.mobile,jdbcType=VARCHAR} ,
			#{item.acc_emp_id,jdbcType=INTEGER} ,
			#{item.safe_emp_id,jdbcType=INTEGER} ,
			#{item.proc_emp_id,jdbcType=INTEGER} ,
			#{item.address,jdbcType=VARCHAR} ,
			#{item.note,jdbcType=VARCHAR}
			from dual
		</foreach>

	</insert>

	<update id="updateAccStoreAttr" parameterType="java.util.Map">

		UPDATE
		
		acc_Store_attr SET
		
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		is_proc = #{is_proc}
		,
		head_emp_id = #{head_emp_id,jdbcType=INTEGER}
		,
		mobile = #{mobile,jdbcType=VARCHAR}
		,
		acc_emp_id =	#{acc_emp_id,jdbcType=INTEGER}
		,
		safe_emp_id =	#{safe_emp_id,jdbcType=INTEGER}
		,
		proc_emp_id =	#{proc_emp_id,jdbcType=INTEGER}
		,
		address =	#{address,jdbcType=VARCHAR}
		,
		note =	#{note,jdbcType=VARCHAR}

		WHERE
		
		Store_id = #{store_id}
		
		and
		
		group_id = #{group_id}
		
		and
		
		hos_id = #{hos_id}

	</update>
	<update id="updateBatchAccStoreAttr" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE acc_Store_attr SET
			
			dept_id = #{item.dept_id,jdbcType=INTEGER}
			,
			is_proc = #{item.is_proc}
			,
			head_emp_id = #{item.head_emp_id,jdbcType=INTEGER}
			,
			mobile = #{item.mobile,jdbcType=VARCHAR}
			,
			acc_emp_id =	#{item.acc_emp_id,jdbcType=INTEGER}
			,
			safe_emp_id =	#{item.safe_emp_id,jdbcType=INTEGER}
			,
			proc_emp_id =	#{item.proc_emp_id,jdbcType=INTEGER}
			,
			address =	#{item.address,jdbcType=VARCHAR}
			,
			note =	#{item.note,jdbcType=VARCHAR}
		
			WHERE
			
			Store_id = #{item.store_id}
		
			and
			
			group_id = #{item.group_id}
			
			and
			
			hos_id = #{item.hos_id}

		</foreach>
	</update>

	<delete id="deleteAccStoreAttr" parameterType="java.util.Map">

		DELETE FROM
		acc_Store_attr WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id} and
		Store_id = #{Store_id} and

	</delete>
	<delete id="deleteBatchAccStoreAttr" parameterType="java.util.List">
		DELETE FROM acc_Store_attr WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id =
			#{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			Store_id =
			#{item.store_id}

		</foreach>


	</delete>

	<select id="queryAccStoreAttrByCode" resultType="com.chd.hrp.acc.entity.AccStoreAttr"
		parameterType="string">
		
		select
		
		asa.dept_id 
		,
		asa.is_proc 
		,
		asa.head_emp_id
		,
		asa.mobile
		,
		asa.acc_emp_id 
		,
		asa.safe_emp_id 
		,
		asa.proc_emp_id 
		,
		asa.address
		,
		asa.note
		
		from  acc_store_attr  asa
    
    	where
    
			asa.Store_id = #{store_id}
		
			and
			
			asa.group_id = #{group_id}
			
			and
			
			asa.hos_id = #{hos_id}
		
	</select>
	
	<select id="queryHosStoreByCode" resultType="com.chd.hrp.acc.entity.AccStoreAttr" parameterType="string" >
      SELECT 
            hed.group_id,
            hed.hos_id,
            hed.store_id,
            hed.store_code,
            hed.store_name,
            hed.type_code,
            hst.type_name,
            hed.spell_code,
            hed.wbx_code,
            hed.is_stop,
            hed.is_disable
		FROM hos_store_dict hed
		left join HOS_store_type hst on hed.type_code = hst.type_code and hed.group_id = hst.group_id and hed.hos_id = hst.hos_id
		WHERE hed.is_stop = 0 and 
        	hed.group_id = #{group_id}   and 
	        hed.hos_id = #{hos_id}   and 
	        hed.store_id = #{store_id}
	</select>

	<select id="queryStoreByCode" resultType="com.chd.hrp.acc.entity.AccStoreAttr"
		parameterType="string">

		SELECT hs.store_id, hs.store_code, hs.store_name, hs.is_disable, hst.type_code
		, hst.type_name, asa.dept_id,hdd.dept_no,hdd.dept_code,hdd.dept_name, asa.is_proc, asa.head_emp_id, he.emp_name AS head_emp_name
		, asa.mobile, asa.acc_emp_id, hed.emp_name AS acc_emp_name, asa.safe_emp_id, hedict.emp_name AS safe_emp_name
		, asa.proc_emp_id, hdict.emp_name AS proc_emp_name, asa.address, asa.note
		FROM acc_store_attr asa
		LEFT JOIN Hos_Store_Dict hs ON asa.group_id = hs.group_id
		AND asa.hos_id = hs.hos_id
		AND asa.store_id = hs.store_id  and hs.is_stop=0
		LEFT JOIN hos_store_type hst ON hst.group_id = hs.group_id
		AND hst.hos_id = hs.hos_id
		AND hst.type_code = hs.type_code 
		LEFT JOIN HOS_DEPT_DICT HDD ON asa.group_id = hdd.group_id
		and asa.hos_id = hdd.hos_id and asa.dept_id = hdd.dept_id and hdd.is_stop=0
		LEFT JOIN Hos_Emp_Dict he ON he.group_id = asa.group_id
		AND he.hos_id = asa.hos_id
		AND he.emp_id = asa.head_emp_id and he.is_stop = 0
		LEFT JOIN HOS_EMP_DICT hed ON hed.group_id = asa.group_id
		AND hed.hos_id = asa.hos_id
		AND hed.emp_id = asa.acc_emp_id and hed.is_stop =0
		LEFT JOIN HOS_EMP_DICT hedict ON hedict.group_id = asa.group_id
		AND hedict.hos_id = asa.hos_id
		AND hedict.emp_id = asa.safe_emp_id and hedict.is_stop=0
			LEFT JOIN HOS_EMP_dict hdict ON hdict.group_id = asa.group_id
		AND hdict.hos_id = asa.hos_id
		AND hdict.emp_id = asa.proc_emp_id and hdict.is_stop =0
		WHERE  hs.Store_id = #{store_id}
		
			and
			
			hs.group_id = #{group_id}
			
			and
			
			hs.hos_id = #{hos_id}

	</select>
	<select id="queryAccStoreAttr" parameterType="java.util.Map"
		resultMap="accStoreAttr">

		SELECT
		Store_no,
		group_id,
		hos_id,
		Store_id,
		type_code,
		natur_code,
		out_code,
		emp_code,
		is_manager,
		is_stock
		FROM ACC_Store_ATTR
		<where>
			<if test="Store_no != null and Store_no != ''">
				AND Store_no = #{Store_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="Store_id != null and Store_id != ''">
				AND Store_id = #{Store_id}
			</if>
			<if test="type_code != null and type_code != ''">
				AND type_code = #{type_code}
			</if>
			<if test="natur_code != null and natur_code != ''">
				AND natur_code = #{natur_code}
			</if>
			<if test="out_code != null and out_code != ''">
				AND out_code = #{out_code}
			</if>
			<if test="emp_code != null and emp_code != ''">
				AND emp_code = #{emp_code}
			</if>
			<if test="is_manager != null and is_manager != ''">
				AND is_manager = #{is_manager}
			</if>
			<if test="is_stock != null and is_stock != ''">
				AND is_stock = #{is_stock}
			</if>
		</where>
		order by Store_no asc
	</select>

	 <!-- 把当前数据修改为历史数据 -->
	 <update id="updateStoreDictHistory">
	 	UPDATE
	 		HOS_STORE_DICT
	 	SET
	 		IS_STOP = 1,
	 		IS_DISABLE = 1
	 	WHERE
	 		GROUP_ID = #{group_id,jdbcType=INTEGER}
	 		AND HOS_ID = #{hos_id,jdbcType=INTEGER}
	 		AND store_id = #{store_id,jdbcType=INTEGER}
	 </update>

</mapper>

