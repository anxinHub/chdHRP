<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.autovouch.accamortize.AccAmortizeInfoMapper">
	<resultMap id="result" type="java.util.Map">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="apply_code" column="apply_code"/>
        <result property="type_code" column="type_code"/>
        <result property="original_apply_code" column="original_apply_code"/>
        <result property="apply_name" column="apply_name"/>
        <result property="pact_code" column="pact_code"/>
        <result property="amortize_year" column="amortize_year"/>
        <result property="amortized" column="amortized"/>
        <result property="origin_value" column="origin_value"/>
        <result property="amortized_value" column="amortized_value"/>
        <result property="net_value" column="net_value"/>
        <result property="sup_id" column="sup_id"/>
        <result property="note" column="note"/>
        <result property="type_name" column="type_name"/>
        <result property="sup_name" column="sup_name"/>
        <result property="amortize_state" column="amortize_state"/>
        <result property="state" column="state"/>
        <result property="amortize_state" column="amortize_state"/>
	</resultMap>
	<resultMap id="historyMap" type="java.util.Map">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="year" column="year"/>
        <result property="month" column="month"/>
        <result property="dept_id" column="dept_id"/>
        <result property="source_id" column="source_id"/>
        <result property="dept_name" column="dept_name"/>
        <result property="source_name" column="source_name"/>
        <result property="this_amortized" column="this_amortized"/>
        <result property="all_amortized" column="all_amortized"/>
        <result property="amortized" column="amortized"/>
        <result property="sum_amortized" column="sum_amortized"/>
        <result property="dept_code" column="dept_code"/>
        <result property="apply_code" column="apply_code"/>
        <result property="origin_value" column="origin_value"/>
        <result property="history_code" column="history_code"/>
	</resultMap>
	
	<select id="query" parameterType="java.util.Map" resultMap="result">
		select a.group_id,a.hos_id,a.copy_code,a.apply_code,a.type_code,a.original_apply_code,a.apply_name,a.pact_code,a.amortize_year,a.amortized,a.origin_value,
		a.amortized_value,a.net_value,a.sup_id,a.note,b.type_name,c.sup_name,a.amortize_state,a.state
		from ACC_AMORTIZE_INFO a 
		left join ACC_AMORTIZE_TYPE b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code = b.copy_code and a.type_code = b.type_code
		left join hos_sup_dict c on a.group_id = c.group_id and a.hos_id = c.hos_id and a.sup_id = c.sup_id
		<where>
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			<if test="apply_code != null and apply_code != ''">
				and a.apply_code = #{apply_code}
			</if>
			<if test="type_code != null and type_code != ''">
				and a.type_code = #{type_code}
			</if>
			<if test="sup_id != null and sup_id != ''">
				and a.sup_id = #{sup_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
				and a.pact_code = #{pact_code}
			</if>
			<if test="amortize_state != null and amortize_state != ''">
				and a.amortize_state = #{amortize_state}
			</if>
			<if test="apply_name != null and apply_name != ''">
				and a.apply_name like '%'||#{apply_name}||'%'
			</if>
		</where>
		order by a.apply_code
	</select>
	
	<select id="queryPrint" parameterType="java.util.Map" resultMap="result">
		select a.group_id,a.hos_id,a.copy_code,a.apply_code,a.type_code,a.original_apply_code,a.apply_name,a.pact_code,a.amortize_year,a.amortized,a.origin_value,
		a.amortized_value,a.net_value,a.sup_id,a.note,b.type_name,c.sup_name,
		decode(a.amortize_state,0,'未摊销',1,'正在摊销',2,'摊销完成') as amortize_state,
		decode(a.state,0,'新建',1,'审核') as state
		from ACC_AMORTIZE_INFO a 
		left join ACC_AMORTIZE_TYPE b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code = b.copy_code and a.type_code = b.type_code
		left join hos_sup_dict c on a.group_id = c.group_id and a.hos_id = c.hos_id and a.sup_id = c.sup_id
		<where>
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			<if test="apply_code != null and apply_code != ''">
				and a.apply_code = #{apply_code}
			</if>
			<if test="type_code != null and type_code != ''">
				and a.type_code = #{type_code}
			</if>
			<if test="sup_id != null and sup_id != ''">
				and a.sup_id = #{sup_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
				and a.pact_code = #{pact_code}
			</if>
			<if test="amortize_state != null and amortize_state != ''">
				and a.amortize_state = #{amortize_state}
			</if>
			<if test="apply_name != null and apply_name != ''">
				and a.apply_name like '%'||#{apply_name}||'%'
			</if>
		</where>
		order by a.apply_code
	</select>
	
	<select id="queryForAmortize" parameterType="java.util.Map" resultMap="result">
		select a.group_id,a.hos_id,a.copy_code,a.apply_code,a.type_code,a.original_apply_code,a.apply_name,a.pact_code,a.amortize_year,a.amortized,a.origin_value,
		a.amortized_value,a.net_value,a.sup_id,a.note,b.type_name,c.sup_name,a.amortize_state,a.state
		from ACC_AMORTIZE_INFO a 
		left join ACC_AMORTIZE_TYPE b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code = b.copy_code and a.type_code = b.type_code
		left join hos_sup_dict c on a.group_id = c.group_id and a.hos_id = c.hos_id and a.sup_id = c.sup_id
		<where>
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.state = 1
			and a.amortize_state != 2
		</where>
		order by a.apply_code
	</select>
	
	<select id="queryByCode" parameterType="java.util.Map" resultMap="result">
		select a.apply_code,a.type_code,a.original_apply_code,a.apply_name,a.pact_code,a.amortize_year,a.amortized,a.origin_value,
		a.amortized_value,a.net_value,a.sup_id||'.'||c.sup_no||'.'||c.sup_code as sup_id,a.note,b.type_name,c.sup_name,a.amortize_state,a.state
		from ACC_AMORTIZE_INFO a 
		left join ACC_AMORTIZE_TYPE b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code = b.copy_code and a.type_code = b.type_code
		left join hos_sup_dict c on a.group_id = c.group_id and a.hos_id = c.hos_id and a.sup_id = c.sup_id
		<where>
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and	a.apply_code = #{apply_code}
			<if test="type_code != null and type_code != ''">
				and a.type_code = #{type_code}
			</if>
			<if test="sup_id != null and sup_id != ''">
				and a.sup_id = #{sup_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
				and a.pact_code = #{pact_code}
			</if>
			<if test="apply_name != null and apply_name != ''">
				and a.apply_name like '%'||#{apply_name}||'%'
			</if>
		</where>
		order by a.apply_code
	</select>

	<select id="queryMaxNoByTypeCode" parameterType="java.util.Map" resultType="java.lang.String">
		select max(apply_code) from ACC_AMORTIZE_INFO
		where group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and apply_code like ${apply_code} || '%'
	</select>

	<insert id="saveAmortizeInfo" parameterType="java.util.Map">
		insert into ACC_AMORTIZE_INFO(
			GROUP_ID,HOS_ID,COPY_CODE,apply_code,TYPE_CODE,ORIGINAL_apply_code,apply_name,PACT_CODE,AMORTIZE_YEAR,
			AMORTIZED,ORIGIN_VALUE,AMORTIZED_VALUE,NET_VALUE,SUP_ID,NOTE,amortize_state,state,USER_ID,APPLY_DATE
		)VALUES(
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{apply_code,jdbcType=VARCHAR},
			#{type_code,jdbcType=VARCHAR},
			#{original_apply_code,jdbcType=VARCHAR},
			#{apply_name,jdbcType=VARCHAR},
			#{pact_code,jdbcType=VARCHAR},
			#{amortize_year,jdbcType=VARCHAR},
			#{amortized,jdbcType=NUMERIC},
			#{origin_value,jdbcType=NUMERIC},
			#{amortized_value,jdbcType=NUMERIC},
			#{net_value,jdbcType=NUMERIC},
			#{sup_id,jdbcType=VARCHAR},
			#{note,jdbcType=VARCHAR},
			#{amortize_state,jdbcType=INTEGER},
			#{state,jdbcType=INTEGER},
			#{user_id,jdbcType=NUMERIC},
			#{apply_date,jdbcType=DATE}
		)
	</insert>
	
	<update id="updateAmortizeInfo" parameterType="java.util.Map">
		update ACC_AMORTIZE_INFO 
		<set>
			<if test="original_apply_code != null and original_apply_code != ''">
				original_apply_code = #{original_apply_code},
			</if>
			<if test="apply_name != null and apply_name != ''">
				apply_name = #{apply_name},
			</if>
			<if test="pact_code != null and pact_code != ''">
				pact_code = #{pact_code},
			</if>
			<if test="amortize_year != null and amortize_year != ''">
				amortize_year = #{amortize_year},
			</if>
			<if test="amortized != null and amortized != ''">
				amortized = #{amortized},
			</if>
			<if test="origin_value != null and origin_value != ''">
				origin_value = #{origin_value},
			</if>
			<if test="amortized_value != null and amortized_value != ''">
				amortized_value = #{amortized_value},
			</if>
			<if test="net_value != null and net_value != ''">
				net_value = #{net_value},
			</if>
			<if test="sup_id != null and sup_id != ''">
				sup_id = #{sup_id},
			</if>
			<if test="note != null and note != ''">
				note = #{note},
			</if>
			<if test="note == null or note == ''">
				note = '',
			</if>
		</set>
		<where>
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and apply_code = #{apply_code}
		</where>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update ACC_AMORTIZE_INFO set
				amortize_year = #{item.amortize_year},
				amortized = #{item.amortized},
				origin_value = #{item.origin_value},
				amortized_value = #{item.amortized_value},
				amortize_state = #{item.amortize_state},
				net_value = #{item.net_value}
			where group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and apply_code = #{item.apply_code}
		</foreach>
	</update>
	<update id="updateStateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update ACC_AMORTIZE_INFO 
			<set>
				state = #{item.state},
				<if test="item.amortized != null and item.amortized != '' or item.amortized == 0">
					amortized = #{item.amortized},
				</if>
				<if test="item.amortized_value != null and item.amortized_value != ''  or item.amortized_value == 0">
					amortized_value = #{item.amortized_value},
				</if> 
				<if test="item.net_value != null and item.net_value != '' or item.net_value == 0">
					net_value = (select origin_value from ACC_AMORTIZE_INFO where group_id = #{item.group_id}
						and hos_id = #{item.hos_id}
						and copy_code = #{item.copy_code}
						and apply_code = #{item.apply_code}),
				</if>
				<if test="item.amortize_state != null and item.amortize_state != '' or item.amortize_state == 0">
					amortize_state = #{item.amortize_state}
				</if>
			</set>
			where group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and apply_code = #{item.apply_code}
		</foreach>
	</update>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			DELETE FROM ACC_AMORTIZE_INFO WHERE
			apply_code = #{item.apply_code}
			and group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
		</foreach>
	</delete>
	
	<delete id="deleteAmortizeDeptList" parameterType="java.util.List">
		DELETE FROM ACC_AMORTIZE_INFO WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			apply_code = #{item.apply_code}
			and group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
		</foreach>
	</delete>
	
	<delete id="deleteAmortizeHistoryList" parameterType="java.util.List">
		DELETE FROM ACC_AMORTIZED_HISTORY WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			apply_code = #{item.apply_code}
			and group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
		</foreach>
	</delete>
	
	<select id="queryAmortizeHistoryList" parameterType="java.util.Map" resultMap="historyMap">
		select a.year,a.month,a.dept_id,a.source_id,a.THIS_AMORTIZED,a.All_AMORTIZED,b.dept_name,c.source_name,b.dept_code,a.history_code
		from ACC_AMORTIZED_HISTORY a
		left join HOS_DEPT_DICT b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.dept_id = b.dept_id and b.is_stop = 0
		left join HOS_SOURCE c on a.group_id = c.group_id and a.hos_id = c.hos_id and a.source_id = c.source_id and c.is_stop = 0
		where a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.apply_code in 
			<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		order by a.AMORTIZED,b.dept_code
	</select>
	
	
	<insert id="addHistoryBatch" parameterType="java.util.Map">
		insert into ACC_AMORTIZED_HISTORY (
			group_id, hos_id, copy_code, apply_code,history_code, year ,month,AMORTIZED,DEPT_ID, source_id,THIS_AMORTIZED, ALL_AMORTIZED,user_id,AMORTIZED_DATE
		) select t.* from(
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.apply_code,jdbcType=VARCHAR},
			#{item.history_code,jdbcType=VARCHAR},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.amortized,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=VARCHAR},
			#{item.source_id,jdbcType=VARCHAR},
			#{item.this_amortized,jdbcType=NUMERIC},
			#{item.all_amortized,jdbcType=NUMERIC},
			#{item.user_id,jdbcType=VARCHAR},
			#{item.amortized_date,jdbcType=DATE}
			from dual
		</foreach>
		)t
	</insert>
	
</mapper>