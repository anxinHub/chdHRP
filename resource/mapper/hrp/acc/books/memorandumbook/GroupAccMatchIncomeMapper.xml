<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.books.memorandumbook.GroupAccMatchIncomeMapper">

	<resultMap id="accMatchIncome" type="com.chd.hrp.acc.entity.AccMatchIncome">
		<result property="income_id" column="income_id"/>
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="acc_year" column="acc_year"/>
        <result property="proj_id" column="proj_id"/>
        <result property="proj_no" column="proj_no"/>
        <result property="proj_code" column="proj_code"/>
        <result property="proj_name" column="proj_name"/>
        <result property="business_no" column="business_no"/>
        <result property="reply_date" column="reply_date"/>
        <result property="reply_no" column="reply_no"/>
        <result property="reply_money" column="reply_money"/>
        <result property="note" column="note"/>
        <result property="emp_name" column="emp_name"/>
	</resultMap>
	
    <insert id="addGroupAccMatchIncome" useGeneratedKeys="true" >
    
        INSERT INTO ACC_MATCH_INCOME (
        	 		income_id
        	 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
                    proj_id
			 ,
                    proj_no
             ,       
                    business_no
             ,
             		reply_no
             ,		
             		reply_date     
			 ,
			 		reply_money
			 ,		
			 		note
        ) VALUES (
        ACC_MATCH_INCOME_SEQ.nextval,
#{group_id}			 ,
#{hos_id}			 ,
#{copy_code}			 ,
#{acc_year}			 ,
#{proj_id}			 ,
#{proj_no}			 ,
#{business_no}            ,
#{reply_no}			 ,
to_date(#{reply_date}, 'yyyy-MM-dd')		 ,
#{reply_money}			 ,
#{note}            
        )
    
    </insert>
	<insert id="addBatchGroupAccMatchIncome" parameterType="java.util.List" >
    
       INSERT INTO ACC_MATCH_INCOME (
                   income_id
        	 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
                    proj_id
			 ,
                    proj_no
             ,       
                    business_no
             ,
             		reply_date      
			 ,
			 		reply_money
			 ,		
			 		note
        )
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
					#{item.income_id}
        	 ,
                    #{item.group_id}
			 ,
                    #{item.hos_id}
			 ,
                    #{item.copy_code}
			 ,
                    #{item.acc_year}
			 ,
                    #{item.proj_id}
			 ,
                    #{item.proj_no}
             ,       
                    #{item.business_no}
             ,
             		#{item.reply_date}     
			 ,
			 		#{item.reply_money}
			 ,		
			 		#{item.note}		 
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateGroupAccMatchIncome" parameterType="java.util.Map">
    
        UPDATE ACC_MATCH_INCOME SET
			proj_id =  #{proj_id},
            proj_no =  #{proj_no},
            reply_no = #{reply_no},
            reply_date = #{reply_date},
            reply_money = #{reply_money},
            note=#{note}  
        WHERE 
		     group_id = #{group_id}
			 and hos_id = #{hos_id}
			 and copy_code = #{copy_code}
			 and acc_year = #{acc_year}
			 and business_no = #{business_no}
   
	</update>
	<update id="updateBatchGroupAccMatchIncome" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        
        UPDATE ACC_MATCH_INCOME SET
			 
        WHERE 
		     group_id = #{group_id}
			 and hos_id = #{hos_id}
			 and copy_code = #{copy_code}
			 and acc_year = #{acc_year}
			 and income_id = #{income_id}
			 
    </foreach>
	</update>

    <delete id="deleteGroupAccMatchIncome" parameterType="java.util.Map">
   
        DELETE FROM ACC_MATCH_INCOME
        WHERE 
		     group_id = #{group_id}
			 and hos_id = #{hos_id}
			 and copy_code = #{copy_code}
			 and acc_year = #{acc_year}
			 and income_id = #{income_id}
   
    </delete>
    <delete id="deleteBatchGroupAccMatchIncome" parameterType="java.util.List">
        DELETE FROM ACC_MATCH_INCOME WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			 and hos_id = #{item.hos_id}
			 and copy_code = #{item.copy_code}
			 and acc_year = #{item.acc_year}
			 and income_id = #{item.income_id}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryGroupAccMatchIncomeByCode" resultType="com.chd.hrp.acc.entity.AccMatchIncome" parameterType="string" >
	  
       SELECT ami.income_id,
       ami.group_id,
       ami.hos_id,
       ami.copy_code,
       ami.acc_year,
       ami.reply_no,
       ami.proj_id,
       ami.proj_no,
       ami.business_no,
       ami.reply_date,
       ami.reply_money,
       ami.note,
       hpd.proj_code,
       hpd.proj_name
  FROM ACC_MATCH_INCOME ami
  left join HOS_PROJ_DICT hpd
    on ami.group_id = hpd.group_id
   and ami.hos_id = hpd.hos_id
   and ami.proj_id = hpd.proj_id
   and hpd.is_stop = 0
        WHERE 
	         ami.group_id = #{group_id}
		 and ami.hos_id = #{hos_id}
		 and ami.copy_code = #{copy_code}
		 and ami.acc_year = #{acc_year}
		 and ami.income_id = #{income_id}
       
	</select>
	<select id="queryGroupAccMatchIncome" parameterType="java.util.Map" resultMap="accMatchIncome" >
      
        SELECT 
                   ami.income_id
        	 ,
                    ami.group_id
			 ,
                    ami.hos_id
			 ,
                    ami.copy_code
			 ,
                    ami.acc_year
			 ,
                    ami.proj_id
			 ,
                    ami.proj_no
             ,
             		hpd.proj_code      
             ,
             		hpd.proj_name
             ,		
             		he.emp_name 
             ,       
                    ami.business_no
             ,
             	    ami.reply_date
			 ,
			 		ami.reply_money
			 ,		
			 		ami.note
			 ,
			 		ami.reply_no		
        FROM ACC_MATCH_INCOME ami
        left join HOS_PROJ_DICT hpd on
        ami.group_id = hpd.group_id 
        and ami.hos_id = hpd.hos_id
        and ami.proj_id = hpd.proj_id
        and hpd.is_stop = 0
        left join ACC_PROJ_ATTR apa on
        ami.group_id = apa.group_id 
        and ami.hos_id = apa.hos_id
        and ami.proj_id = apa.proj_id
        left join HOS_EMP he on 
     	apa.group_id = he.group_id 
        and apa.hos_id = he.hos_id   
        and apa.con_emp_id = he.emp_id
     	
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND ami.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND ami.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND ami.copy_code = #{copy_code}
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND ami.acc_year = #{acc_year}
               </if>
			    <if test="proj_id != null and proj_id != ''">
                    AND ami.proj_id = #{proj_id}
               </if>
			    <if test="proj_no != null and proj_no != ''">
                    AND ami.proj_no = #{proj_no}
               </if>
                <if test="type_code != null and type_code != ''">
                    AND hpd.type_code = #{type_code}
               </if>
               <if test="con_emp_id != null and con_emp_id != ''">
                    AND apa.con_emp_id = #{con_emp_id}
               </if>
                <if test="reply_date1 != null and reply_date1 != '' and reply_date2 != null and reply_date2 != ''">
                    AND ami.reply_date between to_date('${reply_date1}','yyyy-mm-dd') and to_date('${reply_date2}','yyyy-mm-dd')
               </if>
               
        </where>   
				order by ami.proj_id asc
    </select>
    
    
	<select id="queryGroupAccMatchIncomePrint" parameterType="java.util.Map" resultType="java.util.Map" >
      
        SELECT 
                   ami.income_id
        	 ,
                    ami.group_id
			 ,
                    ami.hos_id
			 ,
                    ami.copy_code
			 ,
                    ami.acc_year
			 ,
                    ami.proj_id
			 ,
                    ami.proj_no
             ,
             		hpd.proj_code      
             ,
             		hpd.proj_name
             ,		
             		he.emp_name 
             ,       
                    ami.business_no
             ,
             	    ami.reply_date
			 ,
			 		ami.reply_money
			 ,		
			 		ami.note
			 ,
			 		ami.reply_no		
        FROM ACC_MATCH_INCOME ami
        left join HOS_PROJ_DICT hpd on
        ami.group_id = hpd.group_id 
        and ami.hos_id = hpd.hos_id
        and ami.proj_id = hpd.proj_id
        and hpd.is_stop = 0
        left join ACC_PROJ_ATTR apa on
        ami.group_id = apa.group_id 
        and ami.hos_id = apa.hos_id
        and ami.proj_id = apa.proj_id
        left join HOS_EMP he on 
     	apa.group_id = he.group_id 
        and apa.hos_id = he.hos_id   
        and apa.con_emp_id = he.emp_id
     	
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND ami.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND ami.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND ami.copy_code = #{copy_code}
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND ami.acc_year = #{acc_year}
               </if>
			    <if test="proj_id != null and proj_id != ''">
                    AND ami.proj_id = #{proj_id}
               </if>
			    <if test="proj_no != null and proj_no != ''">
                    AND ami.proj_no = #{proj_no}
               </if>
                <if test="type_code != null and type_code != ''">
                    AND hpd.type_code = #{type_code}
               </if>
               <if test="con_emp_id != null and con_emp_id != ''">
                    AND apa.con_emp_id = #{con_emp_id}
               </if>
                <if test="reply_date1 != null and reply_date1 != '' and reply_date2 != null and reply_date2 != ''">
                    AND ami.reply_date between to_date('${reply_date1}','yyyy-mm-dd') and to_date('${reply_date2}','yyyy-mm-dd')
               </if>
               
        </where>   
				order by ami.proj_id asc
    </select>
	
</mapper>

