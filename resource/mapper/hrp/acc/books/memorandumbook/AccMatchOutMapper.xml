<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.books.memorandumbook.AccMatchOutMapper">

	<resultMap id="accMatchOut" type="com.chd.hrp.acc.entity.AccMatchOut">
		<result property="out_id" column="out_id"/>
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="acc_year" column="acc_year"/>
        <result property="proj_id" column="proj_id"/>
        <result property="proj_no" column="proj_no"/>
        <result property="proj_code" column="proj_code"/>
        <result property="proj_name" column="proj_name"/>
		<result property="occur_date" column="occur_date"/>
		<result property="summary" column="summary"/>
		<result property="subj_code" column="subj_code"/>
		<result property="subj_name" column="subj_name"/>
		<result property="debit" column="debit"/>
		<result property="business_no" column="business_no"/>
		<result property="vouch_id" column="vouch_id"/>
		<result property="vouch_check_id" column="vouch_check_id"/>
		<result property="note" column="note"/>
		<result property="create_user" column="create_user"/>
		<result property="create_date" column="create_date"/>
		<result property="vouch_no" column="vouch_no"/>
		<result property="is_import" column="is_import"/>
	</resultMap>
	
    <insert id="addAccMatchOut" useGeneratedKeys="true" >
    
        INSERT INTO ACC_MATCH_OUT (
        	 		out_id
        	 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
                    proj_id
			 ,
                    proj_no
             ,       
                    occur_date
             ,
             		summary      
			 ,
			 		subj_code
			 ,		
			 		debit
			 ,
			 		business_no
			 ,
			 		vouch_id
			 ,
			 		vouch_check_id
			 ,
			 		note
			 ,
			 		create_user
			 ,
			 		create_date
			 ,
			 		vouch_no
			 ,
			 		is_import																
        ) VALUES (
        ACC_MATCH_OUT_SEQ.nextval          ,
#{group_id}			 ,
#{hos_id}			 ,
#{copy_code}			 ,
#{acc_year}			 ,
#{proj_id}			 ,
#{proj_no}			 ,
#{occur_date}            ,
#{summary}			 ,
#{subj_code}			 ,
#{debit}             ,
#{business_no}			 ,
#{vouch_id}             ,
#{vouch_check_id}			 ,
#{note}             ,
#{create_user}			 ,
#{create_date}             ,
#{vouch_no}			 ,
#{is_import}             
        )
    
    </insert>
	<insert id="addBatchAccMatchOut" parameterType="java.util.List" >
    
       INSERT INTO ACC_MATCH_OUT (
             		out_id
        	 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
                    proj_id
			 ,
                    proj_no
             ,       
                    occur_date
             ,
             		summary      
			 ,
			 		subj_code
			 ,		
			 		debit
			 ,
			 		business_no
			 ,
			 		vouch_id
			 ,
			 		vouch_check_id
			 ,
			 		note
			 ,
			 		create_user
			 ,
			 		create_date
			 ,
			 		vouce_no
			 ,
			 		is_import	
        )
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
        #{item.out_id}          ,
#{item.group_id}			 ,
#{item.hos_id}			 ,
#{item.copy_code}			 ,
#{item.acc_year}			 ,
#{item.proj_id}			 ,
#{item.proj_no}			 ,
#{item.occur_date}            ,
#{item.summary}			 ,
#{item.subj_code}			 ,
#{item.debit}             ,
#{item.business_no}			 ,
#{item.vouch_id}             ,
#{item.vouch_check_id}			 ,
#{item.note}             ,
#{item.create_user}			 ,
#{item.create_date}             ,
#{item.vouce_no}			 ,
#{item.is_import} 		 
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateAccMatchOut" parameterType="java.util.Map">

        UPDATE ACC_MATCH_OUT SET
			         proj_id =  #{proj_id}	
			  ,
                    proj_no =  #{proj_no}	
             ,       
                    occur_date = #{occur_date} 
             ,
             		summary   = #{summary}	
			 ,
			 		subj_code = #{subj_code}	
			 ,		
			 		debit = #{debit}  
			 ,
			 		business_no = #{business_no} 
			 ,
			 		vouch_no = #{vouch_no,jdbcType=VARCHAR}    
        WHERE 
		     group_id = #{group_id}
			 and hos_id = #{hos_id}
			 and copy_code = #{copy_code}
			 and acc_year = #{acc_year}
			 and out_id = #{out_id}
   
	</update>
	<update id="updateBatchAccMatchOut" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        
        UPDATE ACC_MATCH_OUT SET
			 
        WHERE 
		     group_id = #{group_id}
			 and hos_id = #{hos_id}
			 and copy_code = #{copy_code}
			 and acc_year = #{acc_year}
			 and out_id = #{out_id}
			 
    </foreach>
	</update>

    <delete id="deleteAccMatchOut" parameterType="java.util.Map">
   
        DELETE FROM ACC_MATCH_OUT
        WHERE 
		     group_id = #{group_id}
			 and hos_id = #{hos_id}
			 and copy_code = #{copy_code}
			 and acc_year = #{acc_year}
			 and out_id = #{out_id}
   
    </delete>
    <delete id="deleteBatchAccMatchOut" parameterType="java.util.List">
        DELETE FROM ACC_MATCH_OUT WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			 and hos_id = #{item.hos_id}
			 and copy_code = #{item.copy_code}
			 and acc_year = #{item.acc_year}
			 and out_id = #{item.out_id}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccMatchOutByCode" resultType="com.chd.hrp.acc.entity.AccMatchOut" parameterType="string" >
	  
	 SELECT AMO.out_id,
	       AMO.group_id,
	       AMO.hos_id,
	       AMO.copy_code,
	       AMO.acc_year,
	       AMO.proj_id,
	       AMO.proj_no,
	       AMO.occur_date,
	       AMO.summary,
	       AMO.subj_code,
	       AMO.debit,
	       AMO.business_no,
	       AMO.vouch_id,
	       AMO.vouch_check_id,
	       AMO.note,
	       AMO.create_user,
	       AMO.create_date,
	       AMO.vouch_no,
	       AMO.is_import,
	       ASS.subj_code,
	       ASS.subj_name,
	       hpd.proj_code,
	       hpd.proj_name
	  FROM ACC_MATCH_OUT AMO
	  LEFT JOIN ACC_SUBJ ASS
	    ON AMO.subj_code = ASS.subj_code
	   AND AMO.GROUP_ID = ASS.GROUP_ID
	   AND AMO.HOS_ID = ASS.HOS_ID
	   AND AMO.COPY_CODE = ASS.COPY_CODE
	   AND AMO.ACC_YEAR = ASS.ACC_YEAR
	  left join HOS_PROJ_DICT hpd
	    on AMO.group_id = hpd.group_id
	   and AMO.hos_id = hpd.hos_id
	   and AMO.proj_id = hpd.proj_id
	   and hpd.is_stop = 0
	        WHERE 
		         AMO.group_id = #{group_id}
			 and AMO.hos_id = #{hos_id}
			 and AMO.copy_code = #{copy_code}
			 and AMO.acc_year = #{acc_year}
			 and AMO.out_id = #{out_id}
        
	</select>
	<select id="queryAccMatchOut" parameterType="java.util.Map" resultMap="accMatchOut" >
      
        SELECT 
            ami.out_id          ,
			ami.group_id			 ,
			ami.hos_id			 ,
			ami.copy_code			 ,
			ami.acc_year			 ,
			ami.proj_id			 ,
			ami.proj_no			 ,
			hpd.proj_code,
			hpd.proj_name,
			ami.occur_date            ,
			ami.summary			 ,
			ami.subj_code			 ,
			asj.subj_code||' '||asj.subj_name subj_name,
			ami.debit             ,
			ami.business_no			 ,
			ami.vouch_id             ,
			ami.vouch_check_id			 ,
			ami.note          ,
			ami.create_user			 ,
			ami.create_date             ,
			ami.vouch_no			 ,
			ami.is_import
        FROM ACC_MATCH_OUT ami
        left join HOS_PROJ_DICT hpd on
        ami.group_id = hpd.group_id 
        and ami.hos_id = hpd.hos_id
        and ami.proj_id = hpd.proj_id
        and hpd.is_stop = 0
        left join ACC_PROJ_ATTR apa on
        ami.group_id = apa.group_id 
        and ami.hos_id = apa.hos_id
        and ami.proj_id = apa.proj_id
        left join acc_subj asj on
        ami.group_id = asj.group_id 
        and ami.hos_id = asj.hos_id
        and ami.copy_code = asj.copy_code
        and ami.subj_code = asj.subj_code
        and ami.acc_year =  asj.acc_year
      left join hos_proj_type hp on
      hpd.group_id = hp.group_id
      and hpd.hos_id = hp.hos_id
      and hpd.type_code = hp.type_code
            <where>   
            	<if test="attr_code != null and attr_code != '' ">
            		AND hp.attr_code = #{attr_code,jdbcType=VARCHAR}
            	</if>                     
			    <if test="group_id != null and group_id != ''">
                    AND ami.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND ami.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND ami.copy_code = #{copy_code}
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND ami.acc_year = #{acc_year}
               </if>
			    <if test="proj_id != null and proj_id != ''">
                    AND (
                    hpd.proj_code like #{proj_id}||'%' or
                    hpd.proj_name like '%'||#{proj_id}||'%' or
                    hpd.wbx_code like '%'||#{proj_id}||'%' or
                    hpd.spell_code like '%'||#{proj_id}||'%'
                    )
               </if>
			    <if test="proj_no != null and proj_no != ''">
                    AND ami.proj_no = #{proj_no}
               </if>
                <if test="type_code != null and type_code != ''">
                    AND hpd.type_code = #{type_code}
               </if>
               <if test="note != null and note != ''">
                    AND ami.note = #{note}
               </if>
               <if test="summary != null and summary  != ''">
                    AND ami.summary  = #{summary }
               </if>
               <if test="subj_code != null and subj_code != ''">
                    AND ami.subj_code = #{subj_code}
               </if>
               <if test="occur_date1 != null and occur_date1 != '' and occur_date2 != null and occur_date2 != ''">
                    AND ami.occur_date between to_date('${occur_date1}','yyyy-mm-dd') and to_date('${occur_date2}','yyyy-mm-dd')
               </if>
               <if test="vouch_no1 != null and vouch_no1 != '' and vouch_no2 != null and vouch_no2 != ''">
                    AND ami.vouch_no between '${vouch_no1}' and '${vouch_no2}'
               </if>
               
        </where>   
				order by ami.proj_id asc
    </select>
	<select id="queryAccMatchOutPrint"  parameterType="java.util.Map" resultType="java.util.Map" >
      
        SELECT 
            ami.out_id          ,
			ami.group_id			 ,
			ami.hos_id			 ,
			ami.copy_code			 ,
			ami.acc_year			 ,
			ami.proj_id			 ,
			ami.proj_no			 ,
			hpd.proj_code,
			hpd.proj_name,
			ami.occur_date            ,
			ami.summary			 ,
			ami.subj_code			 ,
			asj.subj_code||' '||asj.subj_name subj_name,
			ami.debit             ,
			ami.business_no			 ,
			ami.vouch_id             ,
			ami.vouch_check_id			 ,
			ami.note          ,
			ami.create_user			 ,
			ami.create_date             ,
			ami.vouch_no			 ,
			ami.is_import
        FROM ACC_MATCH_OUT ami
        left join HOS_PROJ_DICT hpd on
        ami.group_id = hpd.group_id 
        and ami.hos_id = hpd.hos_id
        and ami.proj_id = hpd.proj_id
        and hpd.is_stop = 0
        left join ACC_PROJ_ATTR apa on
        ami.group_id = apa.group_id 
        and ami.hos_id = apa.hos_id
        and ami.proj_id = apa.proj_id
        left join acc_subj asj on
        ami.group_id = asj.group_id 
        and ami.hos_id = asj.hos_id
        and ami.copy_code = asj.copy_code
        and ami.subj_code = asj.subj_code
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND ami.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND ami.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND ami.copy_code = #{copy_code}
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND ami.acc_year = #{acc_year}
               </if>
			    <if test="proj_id != null and proj_id != ''">
                    AND ami.proj_id = #{proj_id}
               </if>
			    <if test="proj_no != null and proj_no != ''">
                    AND ami.proj_no = #{proj_no}
               </if>
                <if test="type_code != null and type_code != ''">
                    AND hpd.type_code = #{type_code}
               </if>
               <if test="note != null and note != ''">
                    AND ami.note = #{note}
               </if>
               <if test="subj_code != null and subj_code != ''">
                    AND ami.subj_code = #{subj_code}
               </if>
               <if test="occur_date1 != null and occur_date1 != '' and occur_date2 != null and occur_date2 != ''">
                    AND ami.occur_date between to_date('${occur_date1}','yyyy-mm-dd') and to_date('${occur_date2}','yyyy-mm-dd')
               </if>
               <if test="vouch_no1 != null and vouch_no1 != '' and vouch_no2 != null and vouch_no2 != ''">
                    AND ami.vouch_no between '${vouch_no1}' and '${vouch_no2}'
               </if>
               
        </where>   
				order by ami.proj_id asc
    </select>
	
</mapper>

