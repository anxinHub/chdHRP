<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccCashFlowMapper">

	<resultMap id="accCashFlow" type="com.chd.hrp.acc.entity.AccCashFlow">
		<result property="cash_id" column="cash_id" />
		<result property="vouch_detail_id" column="vouch_detail_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="cash_item_id" column="cash_item_id" />
		<result property="cash_money" column="cash_money" />
		<result property="create_user" column="create_user" />
		<result property="create_date" column="create_date" />
		<result property="subj_code" column="subj_code" />
		<result property="subj_name" column="subj_name" />
		<result property="cash_item_name" column="cash_item_name" />
		<result property="summary" column="summary" />
	</resultMap>

	<insert id="addAccCashFlow" useGeneratedKeys="true">

		INSERT INTO ACC_CASH_FLOW (
		cash_id
		,
		vouch_detail_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		cash_item_id
		,
		cash_money
		,
		create_user
		,
		create_date

		) VALUES (
		#{cash_id} ,
		#{vouch_detail_id} ,
		#{group_id} ,
		#{hos_id} ,
		#{copy_code} ,
		#{cash_item_id} ,
		#{cash_money} ,
		#{create_user} ,
		#{create_date}
		)

	</insert>
	<insert id="addBatchAccCashFlow" parameterType="java.util.List">

		INSERT INTO ACC_CASH_FLOW (
		cash_id
		,
		vouch_id,vouch_detail_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		cash_item_id
		,
		cash_money
		,
		create_user
		,
		create_date,
		summary
		)
		select a.* from (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.cash_id} ,
			#{item.vouch_id},#{item.vouch_detail_id} ,
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.copy_code} ,
			#{item.cash_item_id} ,
			#{item.cash_money} ,
			#{item.create_user} ,
			#{item.create_date},
			#{item.summary}
			from dual
		</foreach>
		) a
	</insert>

	<update id="updateAccCashFlow" parameterType="java.util.Map">

		UPDATE acc_cash_flow SET
		vouch_detail_id = #{vouch_detail_id}
		,
		cash_item_id = #{cash_item_id}
		,
		cash_money = #{cash_money}
		,
		create_user = #{create_user}
		,
		create_date = #{create_date}

		WHERE
		cash_id = #{cash_id}
		and
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		copy_code = #{copy_code}


	</update>
	<update id="updateBatchAccCashFlow" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" index="index"
			separator=";">
			UPDATE ACC_CASH_FLOW
			<set>
				<if test="item.cash_item_id !=null and item.cash_item_id!=''">
					cash_item_id =#{item.cash_item_id}
				</if>
			</set>
			where cash_id = #{item.cash_id}
			AND group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND VOUCH_DETAIL_ID = #{item.vouch_detail_id}
		</foreach>
		;end;
	</update>

	<delete id="deleteAccCashFlow" parameterType="java.util.Map">

		DELETE FROM acc_cash_flow WHERE
		cash_id = #{cash_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code}

	</delete>
	<delete id="deleteBatchAccCashFlow" parameterType="java.util.List">
		DELETE FROM acc_cash_flow WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">		
			(group_id = #{item.group_id}		
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and vouch_id = #{item.vouch_id}
			and vouch_detail_id = #{item.vouch_detail_id})
		</foreach>


	</delete>

	<select id="queryAccCashFlowByCode" resultType="com.chd.hrp.acc.entity.AccCashFlow"
		parameterType="string">

		SELECT
		cash_id,
		vouch_detail_id,
		group_id,
		hos_id,
		copy_code,
		cash_item_id,
		cash_money,
		create_user,
		create_date
		FROM acc_cash_flow
		WHERE
		cash_id = #{cash_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code}

	</select>
	<select id="queryAccCashFlow" parameterType="java.util.Map"
		resultMap="accCashFlow">

		SELECT
		cf.cash_id,
		cf.vouch_detail_id,
		cf.group_id,
		cf.hos_id,
		cf.copy_code,
		cf.summary,
		cf.cash_item_id,
		ci.cash_item_name,
		cf.cash_money,
		cf.create_user,
		cf.create_date
		FROM ACC_CASH_FLOW cf
		left join acc_cash_item ci 
		on cf.cash_item_id=ci.cash_item_id and cf.group_id=ci.group_id and cf.hos_id=ci.hos_id 
		and cf.copy_code=ci.copy_code
		where cf.vouch_id=#{vouch_id} AND cf.vouch_detail_id = #{vouch_detail_id} 
		<if test="cash_id != null and cash_id != ''">
			AND cf.cash_id = #{cash_id}
		</if>
		<if test="group_id != null and group_id != ''">
			AND cf.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND cf.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND cf.copy_code = #{copy_code}
		</if>
		<if test="cash_item_id != null and cash_item_id != ''">
			AND cf.cash_item_id = #{cash_item_id}
		</if>
		<if test="cash_money != null and cash_money != ''">
			AND cf.cash_money = #{cash_money}
		</if>
		<if test="create_user != null and create_user != ''">
			AND cf.create_user = #{create_user}
		</if>
		<if test="create_date != null and create_date != ''">
			AND cf.create_date = #{create_date}
		</if>
		
		
	</select>

	<select id="queryCashFlowSubj" parameterType="java.util.Map"
		resultMap="accCashFlow">

		select asubj.subj_code,asubj.subj_name,aci.cash_item_name from
		acc_cash_template act left join acc_subj asubj
		on act.subj_code = asubj.subj_code left join acc_cash_item aci
		on aci.cash_item_code = act.cash_item_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND act.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND act.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND act.copy_code = #{copy_code}
			</if>
			<if test="cash_item_id != null and cash_item_id != ''">
				AND act.cash_item_id = #{cash_item_id}
			</if>
		</where>
		order by asubj.subj_code asc
	</select>
	
	<!-- 查询凭证状态，判断是否可以标注 -->	
	<select id="queryVouchStateByDetailId" parameterType="java.util.Map" resultType="String">

		select f.vouch_type_short || '-' || v.vouch_no AS vouch_no from acc_vouch v 
		left join acc_vouch_type f on v.group_id=f.group_id and v.hos_id=f.hos_id and v.copy_code=f.copy_code and f.vouch_type_code=v.vouch_type_code
		where v.group_id = #{group_id} and v.hos_id = #{hos_id} and v.copy_code = #{copy_code} and v.vouch_id=#{vouch_id}
		and v.state=99
	</select>
	
	
	<!-- 根据凭证明细ID查询辅助核算的条数，现金流量集中标注需要判断 -->	
	<select id="queryVouchCheckCountByDetailId" parameterType="java.util.Map" resultType="java.lang.Integer">

		select count(1) from acc_vouch_check v 		
		where v.group_id = #{group_id} and v.hos_id = #{hos_id} and v.copy_code = #{copy_code} and v.vouch_id=#{vouch_id}
		and v.vouch_detail_id=#{vouch_detail_id}
	</select>

	<!-- 分录金额与标注金额是否相等-->	
	<select id="queryCheckByCashFlowExistsMoney" parameterType="java.util.Map" resultType="java.lang.Integer">
            select count(*) from (
		    select sum(avc.debit + avc.credit) check_money from acc_vouch_check avc
		    where avc.group_id = #{group_id}
		    and avc.hos_id = #{hos_id} 
		    and avc.copy_code = #{copy_code}
		    and avc.vouch_id = #{vouch_id}
		    and avc.vouch_detail_id = #{vouch_detail_id}
		    )where check_money != #{check_money}
	</select>
	
	<select id="queryAccCashFlowByVouchId" parameterType="java.util.Map"
		resultMap="accCashFlow">

		SELECT
		cash_id,
		vouch_detail_id,
		group_id,
		hos_id,
		copy_code,
		cash_item_id,
		cash_money,
		create_user,
		create_date
		FROM acc_cash_flow
		WHERE
		vouch_id = #{vouch_id} and
		vouch_detail_id = #{vouch_detail_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code}

	</select>
	
	<select id="queryAccCashFlowListByVouchId" parameterType="java.util.Map"
		resultMap="accCashFlow">

		SELECT
		vouch_detail_id,
		group_id,
		hos_id,
		copy_code,
		summary,
		case when debit != 0 then debit else credit end cash_money
		FROM acc_vouch_check
		WHERE
		vouch_id = #{vouch_id} and
		vouch_detail_id = #{vouch_detail_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code}

	</select>
	
	<!-- 是否含记账凭证 -->
	<select id="existsHaveAccount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(0)
		FROM acc_vouch 
		WHERE group_id = #{map.group_id,jdbcType=INTEGER}
			AND hos_id = #{map.hos_id,jdbcType=INTEGER}
			AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
			AND state = 99
			AND vouch_id in(
				<foreach collection="list" item="item" separator="union all">
				SELECT #{item.vouch_id,jdbcType=VARCHAR} vouch_id FROM DUAL
				</foreach>
			)
	</select>
	
	<!-- 批量删除现金流量 -->
	<delete id="deleteAccCashFlowByVouch" parameterType="java.util.Map">
		DELETE FROM acc_cash_flow 
		WHERE group_id = #{map.group_id,jdbcType=INTEGER}
			AND hos_id = #{map.hos_id,jdbcType=INTEGER}
			AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
			AND exists (
				SELECT * FROM (
					<foreach collection="list" item="item" separator="union all">
					SELECT 
						#{item.vouch_id,jdbcType=VARCHAR} vouch_id, 
						#{item.vouch_detail_id,jdbcType=VARCHAR} vouch_detail_id 
					FROM DUAL
					</foreach>
				) tmp 
				WHERE acc_cash_flow.vouch_id = tmp.vouch_id 
					AND acc_cash_flow.vouch_detail_id = tmp.vouch_detail_id
			)
	</delete>
	
	<!-- 批量插入现金流量 -->
	<insert id="addAccCashFlowByVouch" parameterType="java.util.Map">
		INSERT INTO acc_cash_flow(
			group_id, hos_id, copy_code, cash_id, vouch_id, vouch_detail_id, 
			summary, cash_item_id, cash_money, create_user, create_date, sort_code
		)
		SELECT b.group_id, b.hos_id, b.copy_code, 
			a.cash_id, a.vouch_id, a.vouch_detail_id, 
			b.summary, 
			#{map.cash_item_id,jdbcType=INTEGER}, 
			b.debit + b.credit, 
			#{map.create_user,jdbcType=INTEGER}, 
			#{map.create_date,jdbcType=DATE}, 
			1 
		FROM (
			<foreach collection="list" item="item" separator="union all">
				SELECT 
					#{item.cash_id,jdbcType=VARCHAR} cash_id, 
					#{item.vouch_id,jdbcType=VARCHAR} vouch_id, 
					#{item.vouch_detail_id,jdbcType=VARCHAR} vouch_detail_id 
				FROM DUAL
			</foreach>
		) a
		LEFT JOIN acc_vouch_detail b 
			ON b.group_id = #{map.group_id,jdbcType=INTEGER}
			AND b.hos_id = #{map.hos_id,jdbcType=INTEGER}
			AND b.copy_code = #{map.copy_code,jdbcType=VARCHAR}
			AND a.vouch_id = b.vouch_id 
			AND a.vouch_detail_id = b.vouch_detail_id 
	</insert>
</mapper>

