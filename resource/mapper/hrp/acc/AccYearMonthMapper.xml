<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccYearMonthMapper">

	<resultMap id="accYearMonth" type="com.chd.hrp.acc.entity.AccYearMonth">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="acc_month" column="acc_month" />
		<result property="begin_date" column="begin_date" />
		<result property="end_date" column="end_date" />
		<result property="acc_flag" column="acc_flag" />
		<result property="acc_user" column="acc_user" />
		<result property="acc_date" column="acc_date" />
		<result property="cash_flag" column="cash_flag" />
		<result property="cash_user" column="cash_user" />
		<result property="cash_date" column="cash_date" />
		<result property="id" column="id" />
		<result property="text" column="text" />
		<result property="rnum" column="rnum" />
	</resultMap>

	<insert id="addAccYearMonth" useGeneratedKeys="true">

		INSERT INTO ACC_YEAR_MONTH (
		group_id
		,
		hos_id
		,
		copy_code
		,
		acc_year
		,
		acc_month
		,
		begin_date
		,
		end_date
		

		) VALUES (
		#{group_id} ,
		#{hos_id} ,
		#{copy_code} ,
		#{acc_year} ,
		#{acc_month} ,
		#{begin_date} ,
		#{end_date} 
		)

	</insert>
	<insert id="addBatchAccYearMonth" parameterType="java.util.List">

		INSERT INTO ACC_YEAR_MONTH (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
                    acc_month
			 ,
                    begin_date
			 ,
                    end_date
			 <!-- ,
                    acc_flag
			 ,
                    acc_user
			 ,
                    acc_date
			 ,
                    cash_flag
			 ,
                    cash_user
			 ,
                    cash_date -->
			 
        ) 
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			 select 		
			#{item.group_id,jdbcType=INTEGER} ,
			#{item.hos_id,jdbcType=INTEGER} ,
			#{item.copy_code},
			#{item.acc_year},
			#{item.acc_month},
			#{item.begin_date},
			#{item.end_date} <!-- ,
			'',
			'',
			'',
			'',
			'',
			'' -->
		 from dual 
		</foreach>
	</insert>
      <update id="updateModAccYearMonth" parameterType="java.util.Map">
        update acc_year_month    
        
        set      
        
        ${flag}=1,
        
        ${user}=#{user_id},
        
        ${date}=sysdate 
        
        where 
        group_id = #{group_id}
        
        and hos_id = #{hos_id}
        
        and copy_code = #{copy_code}
        
        and acc_year||''||acc_month &lt; #{year_month}
	
	</update>



	<update id="updateAccYearMonth" parameterType="java.util.Map">

		UPDATE acc_year_month SET
		
		cash_flag =#{cash_flag}
		,
		cash_user = #{create_user}
		,
		cash_date = sysdate

		<where>
			<if test="group_id != null and group_id !='' ">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code !='' ">
				AND copy_code = #{copy_code}
			</if>
			<if test="acc_year != null and acc_year != '' ">
				AND acc_year = #{acc_year}
			</if>
			<if test="acc_month != null and acc_month != '' ">
				AND acc_month = #{acc_month}
			</if>
			

		</where>
	</update>
	<update id="updateBatchAccYearMonth" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE acc_year_month SET
			begin_date = #{item.begin_date}
			,
			end_date = #{item.end_date}

			WHERE
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			copy_code = #{item.copy_code}
			and
			acc_year = #{item.acc_year}
			and
			acc_month = #{item.acc_month}

		</foreach>
	</update>

	<delete id="deleteAccYearMonth" parameterType="java.util.Map">

		DELETE FROM acc_year_month WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code} and
		acc_year = #{acc_year} 

	</delete>
	<delete id="deleteBatchAccYearMonth" parameterType="java.util.List">
		DELETE FROM acc_year_month WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			copy_code = #{item.copy_code}
			and
			acc_year = #{item.acc_year}

		</foreach>


	</delete>

	<select id="queryYearMonthBySelect" parameterType="java.util.Map"
		resultMap="accYearMonth">
		select
		ACC_YEAR||'.'||ACC_MONTH||'.'||ACC_FLAG id,
		ACC_YEAR||'.'||ACC_MONTH text
		from ACC_YEAR_MONTH
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year}
			</if>
		</where>
		order by ACC_YEAR
	</select>

	<select id="queryMonthBySelect" parameterType="java.util.Map"
		resultMap="accYearMonth">
		select '0'||'.''null' id,'上年结转' text from dual
		union all
		select
		acc_month||'.'||ACC_FLAG,acc_month from ACC_YEAR_MONTH
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year}
			</if>
		</where>
		order by id
	</select>

	<select id="queryAccYearMonthByCode" resultType="com.chd.hrp.acc.entity.AccYearMonth"
		parameterType="string">

		SELECT
		group_id,
		hos_id,
		copy_code,
		acc_year,
		acc_month,
		to_char(begin_date,'yyyy/MM/dd') as begin_date,
		to_char(end_date,'yyyy/MM/dd') as end_date,
		acc_flag,
		acc_user,
		acc_date,
		cash_flag,
		cash_user,
		cash_date
		FROM acc_year_month aym
		<where>
			<if test="group_id != null and group_id != ''">
				AND aym.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND aym.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND aym.copy_code = #{copy_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND aym.acc_year = #{acc_year}
			</if>
			<if test="acc_month != null and acc_month != ''">
				AND aym.acc_month = #{acc_month}
			</if>
			<if test="cash_flag !=null and cash_flag !=''">
				AND aym.cash_flag = #{cash_flag}
			</if>
		</where>
	</select>
	<select id="queryAccYearMonth" parameterType="java.util.Map"
		resultMap="accYearMonth">

		SELECT
		rownum  rnum,
		aym.group_id,
		aym.hos_id,
		aym.copy_code,
		aym.acc_year,
		aym.acc_month,
		to_char(aym.begin_date,'yyyy-MM-dd') as begin_date,
		to_char(aym.end_date,'yyyy-MM-dd') as end_date,
		aym.acc_flag,
		aym.acc_user,
		aym.acc_date,
		aym.cash_flag,
		aym.cash_user,
		aym.cash_date
		FROM ACC_YEAR_MONTH aym left join acc_year ay
		on aym.group_id = ay.group_id and aym.hos_id = ay.hos_id
		and aym.copy_code = ay.copy_code and aym.acc_year = ay.acc_year
		<where>
			<if test="group_id != null and group_id != ''">
				AND aym.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND aym.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND aym.copy_code = #{copy_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND aym.acc_year = #{acc_year}
			</if>
			<if test="acc_month != null and acc_month != ''">
				AND aym.acc_month = #{acc_month}
			</if>
			<if test="cash_flag !=null and cash_flag != ''">
				AND (aym.cash_flag = #{cash_flag} or  nvl(aym.cash_flag,0) = #{cash_flag})
			</if>
			
		</where>
		order by aym.begin_date asc
		</select>
		
		
	<!-- My97DatePicker插件调用SQL，取当前系统会计期间，年月-->
	<select id="queryYearMonthByMy97" parameterType="java.util.Map" resultType="String">
		select min(acc_year||'年'||acc_month||'月') year_month from acc_year_month 
		where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code}
		<if test="acc_year != null  and acc_year != ''">
			and acc_year = #{acc_year}
		</if>
		union all
		select max(acc_year||'年'||acc_month||'月') year_month from acc_year_month 
		where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code}
		<if test="acc_year != null  and acc_year != ''">
			and acc_year = #{acc_year}
		</if>
		union all
		select year_month  from( 
		       select min(acc_year||'年'||acc_month||'月') year_month from acc_year_month 
		       where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code} 
		       and nvl(${flag},0)=0
		       <if test="acc_year != null  and acc_year != ''">
					and acc_year = #{acc_year}
			   </if>
		       order by acc_year,acc_month
		 )
	</select>
	
	<select id="queryAccYearMonthNow" parameterType="java.util.Map" resultType="String">
		select min(acc_year||'.'||acc_month) year_month from acc_year_month 
		where group_id=#{group_id} and hos_id=#{hos_id} 
			and copy_code=#{copy_code} and nvl(acc_flag, 0) = 0
	</select>
	
	<!-- 根据flag标识,取所有系统模块的会计期间 -->
	<select id="queryAccYearMonthAllNow" parameterType="java.util.Map" resultType="String">
		select min(acc_year||'.'||acc_month) year_month from acc_year_month 
		where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code} and nvl(${flag}, 0) = 0
	</select>
	
	<!-- 根据年度查找月份 -->
	<select id="queryYearMonthByAccYearSelect" parameterType="java.util.Map" resultMap="accYearMonth">
		select ACC_MONTH  id,ACC_MONTH text
		from ACC_YEAR_MONTH
		where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code} and acc_year=#{acc_year}
	</select>
	
	<select id="queryYearMonthByInit" parameterType="java.util.Map" resultType="java.util.Map">
		select a.group_id "group_id",hos_id "hos_id",a.copy_code "copy_code",
		min(a.begin_date) "min_date",max(a.end_date) "max_date",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.acc_flag,0)=0
		) "cur_acc",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.wage_flag,0)=0
		) "cur_wage",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.cash_flag,0)=0
		) "cur_cash",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.mat_flag,0)=0
		) "cur_mat",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.med_flag,0)=0
		) "cur_med",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.ass_flag,0)=0
		) "cur_ass",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.inass_flag,0)=0
		) "cur_iss",
		(
		select min(acc_year||acc_month) from  ACC_YEAR_MONTH t1 where a.group_id=t1.group_id 
		and a.hos_id=t1.hos_id and a.copy_code=t1.copy_code and nvl(t1.cost_flag,0)=0
		) "cur_cost"
		from ACC_YEAR_MONTH a
		<where>
			<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code}
			</if>
		</where>
		group by a.group_id,a.hos_id,a.copy_code
	</select>
	
</mapper>

