<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.tell.AccBankCheckMapper">

	<resultMap id="accBankCheck" type="com.chd.hrp.acc.entity.AccBankCheck">
		<result property="veri_id" column="veri_id" />
		<result property="bank_id" column="bank_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="subj_code" column="subj_code" />
		<result property="summary" column="summary" />
		<result property="debit" column="debit" />
		<result property="credit" column="credit" />
		<result property="bal" column="bal" />
		<result property="debit_w" column="debit_w" />
		<result property="credit_w" column="credit_w" />
		<result property="bal_w" column="bal_w" />
		<result property="check_no" column="check_no" />
		<result property="business_no" column="business_no" />
		<result property="occur_date" column="occur_date" />
		<result property="pay_type_code" column="pay_type_code" />
		<result property="pay_name" column="pay_name" />
		<result property="is_check" column="is_check" />
		<result property="check_user" column="check_user" />
		<result property="check_date" column="check_date" />
		<result property="is_init" column="is_init" />
		<result property="is_import" column="is_import" />
		<result property="subj_id" column="subj_id" />
		<result property="subj_name" column="subj_name" />
		<result property="pay_name" column="pay_name" />
		<result property="is_checks" column="is_checks" />
		<result property="is_auto" column="is_auto" />
	</resultMap>

	<insert id="addAccBankCheck" useGeneratedKeys="true">
 	<selectKey keyProperty="bank_id" resultType="int" order="BEFORE" >  
        select ACC_BANK_CHECK_SEQ.NEXTVAL  from DUAL   
    </selectKey>  
		INSERT INTO ACC_BANK_CHECK (
			bank_id ,
			group_id ,
			hos_id ,
			copy_code ,
			acc_year ,
			subj_code ,
            summary,
			debit ,
			credit ,
			bal ,
			debit_w ,
			credit_w ,
			bal_w ,
			check_no ,
			business_no ,
			occur_date ,
			pay_type_code ,
			is_check ,
			is_init ,
            is_import
			 
        ) VALUES (
			#{bank_id},
			#{group_id}			 ,
			#{hos_id}			 ,
			#{copy_code}			 ,
			#{acc_year}			 ,
			#{subj_code}			 ,
			#{summary}			 ,
			#{debit,jdbcType=NUMERIC}			 ,
			#{credit,jdbcType=NUMERIC}			 ,
			0		 ,
			0 ,
			0 ,
			0 ,
			#{check_no}			 ,
			'' ,
			to_date(#{occur_date},'yyyy/MM/dd')	 ,
			#{pay_type_code}			 ,
			0			 ,
			#{is_init}	,
			0				 
        )							

	</insert>
	
	<insert id="addAccBankCheckInstall" useGeneratedKeys="true">

		INSERT INTO ACC_BANK_CHECK (
                    bank_id
			 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
                    subj_code
			 ,
                    debit
			 ,
                    credit
			 ,
                    bal
			 ,
                    debit_w
			 ,
                    credit_w
			 ,
                    occur_date
			 ,
                    is_check
			 ,
                    is_init
			 ,
                    is_import
			 
        ) VALUES (
			ACC_BANK_CHECK_SEQ.NEXTVAL ,
			#{group_id}			 ,
			#{hos_id}			 ,
			#{copy_code}		 ,
			#{acc_year}			 ,
			#{subj_code}			 ,
			0			 ,
			0			 ,
			#{bal}	 ,
			0 ,
			0,
			to_date(#{occur_date},'yyyy/MM/dd')		,
			0	 ,
			1	 ,
			0				 
        )							

	</insert>
	
	<insert id="addBatchAccBankCheck" parameterType="java.util.List">

		INSERT INTO ACC_BANK_CHECK (
		bank_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		acc_year
		,
		subj_code
		,
		summary
		,
		debit
		,
		credit
		,
		bal
		,
		debit_w
		,
		credit_w
		,
		bal_w
		,
		check_no
		,
		business_no
		,
		occur_date
		,
		pay_type_code
		,
		is_check
		,
		check_user
		,
		check_date
		,
		is_init
		,
		is_import

		)
		SELECT
			ACC_BANK_CHECK_SEQ.NEXTVAL,a.* from (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.copy_code} ,
			#{item.acc_year} ,
			#{item.subj_code} ,
			#{item.summary} ,
			#{item.debit} ,
			#{item.credit} ,
			#{item.bal} ,
			#{item.debit_w} ,
			#{item.credit_w} ,
			#{item.bal_w} ,
			#{item.check_no} ,
			#{item.business_no} ,
			to_date(#{item.occur_date},'yyyy/MM/dd') ,
			#{item.pay_type_code} ,
			#{item.is_check} ,
			#{item.check_user} ,
			to_date(#{item.check_date},'yyyy/MM/dd') ,
			#{item.is_init} ,
			#{item.is_import}
			from dual
		</foreach>
		) a 
	</insert>

	<update id="updateAccBankCheck" parameterType="java.util.Map">

		UPDATE acc_bank_check 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="summary != null and summary != ''">
		summary =#{summary,jdbcType=VARCHAR}
		,
		</if>
		<if test="debit != null and debit != ''">
		debit =#{debit,jdbcType=INTEGER}
		,
		</if>
		<if test="credit != null and credit != ''">
		credit =#{credit,jdbcType=INTEGER}
		,
		</if>
		<if test="check_no != null and check_no != ''">
		check_no =#{check_no,jdbcType=INTEGER}
		,
		</if>
		<if test="occur_date != null and occur_date != ''">
		 occur_date =to_date(#{occur_date},'yyyy/MM/dd')
		,
		</if>
		<if test="pay_type_code != null and pay_type_code != ''">
		pay_type_code = #{pay_type_code}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="bank_id != null and bank_id != ''">
		AND bank_id = #{bank_id,jdbcType=INTEGER}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	
	<update id="updateBal" parameterType="java.util.Map">

		UPDATE acc_bank_check 
		SET bal =#{bal}
		WHERE
			group_id =#{group_id}
			AND hos_id = #{hos_id}
	    	AND copy_code = #{copy_code}
			AND acc_year = #{acc_year}
	    	AND bank_id =#{bank_id}
	</update>
	
	<update id="updateBatchAccBankCheck" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
			UPDATE acc_bank_check 
			SET
				acc_year = #{acc_year}
				,
				subj_code = #{subj_code}
				,
				summary = #{summary}
				,
				debit = #{debit}
				,
				credit = #{credit}
				,
				bal = #{bal}
				,
				cur_code = #{cur_code}
				,
				debit_w = #{debit_w}
				,
				credit_w = #{credit_w}
				,
				bal_w = #{bal_w}
				,
				check_no = #{check_no}
				,
				business_no = #{business_no}
				,
				occur_date = #{occur_date}
				,
				pay_type_code = #{pay_type_code}
				,
				is_check = #{is_check}
				,
				check_user = #{check_user}
				,
				check_date = #{check_date}
				,
				is_init = #{is_init}
				,
				is_import = #{is_import}
			WHERE
				bank_id = #{item.bank_id}
				AND group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
		</foreach>
	</update>

	<delete id="deleteAccBankCheck" parameterType="java.util.Map">

		DELETE FROM acc_bank_check 
	    <where>
	    <if test="group_id != null and group_id != ''">
	    AND group_id = #{group_id,jdbcType=INTEGER}
	    </if>
	    <if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="acc_year != null and acc_year != ''">
		AND acc_year = #{acc_year,jdbcType=VARCHAR}
		</if>
		<if test="bank_id != null and bank_id != ''">
		AND bank_id = #{bank_id,jdbcType=INTEGER}
		</if>
		<if test="is_init != null and is_init != ''">
		AND is_init = #{is_init,jdbcType=INTEGER}
		</if>
		<if test="bal != null and bal != ''">
		AND bal != 0
	   </if>
	  	<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
	   </if>
	    </where>

	</delete>
	<delete id="deleteBatchAccBankCheck" parameterType="java.util.List">
		DELETE FROM acc_bank_check WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			bank_id = #{item.bank_id}
			and
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			copy_code = #{item.copy_code}

		</foreach>


	</delete>

	<select id="queryAccBankCheckByCode" resultType="com.chd.hrp.acc.entity.AccBankCheck" parameterType="string">

		SELECT
    		abc.bank_id,abc.group_id,abc.hos_id,abc.copy_code,abc.acc_year,sa.subj_name,
    		abc.subj_code,abc.summary,abc.debit,abc.credit,abc.bal,sa.cur_code,abc.check_no,abc.business_no,
    		abc.occur_date,abc.pay_type_code,apt.pay_name,abc.is_check
	    FROM ACC_BANK_CHECK abc 
	    
	    LEFT JOIN ACC_SUBJ sa
	    ON 
	    	abc.group_id = sa.group_id 
		    AND abc.hos_id = sa.hos_id
		    AND abc.copy_code = sa.copy_code 
		    AND abc.acc_year = sa.acc_year
		    AND abc.subj_code = sa.subj_code
		    
	    LEFT JOIN ACC_PAY_TYPE apt
	    ON 
		    abc.group_id = apt.group_id 
		    AND abc.hos_id = apt.hos_id
		    AND abc.copy_code = apt.copy_code  
		    AND abc.pay_type_code = apt.pay_code
		<where>
			<if test="bank_id != null and bank_id != ''">
				AND abc.bank_id = #{bank_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND abc.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND abc.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND abc.copy_code = #{copy_code}
			</if>
		</where>

	</select>
	
	
	<select id="queryAccBankCheck" parameterType="java.util.Map" resultMap="accBankCheck">
		WITH a_table as(
			<!-- 业务数据 -->
			SELECT
				abv.veri_id,abc.bank_id,abc.group_id,abc.hos_id,abc.copy_code,abc.acc_year,abc.subj_code,
			    to_char(sa.subj_name) subj_name,sa.subj_code,abc.summary,abc.debit,abc.credit,abc.bal,
			    sa.cur_code,abc.check_no,abc.business_no,abc.occur_date,abc.pay_type_code,abc.is_check,
			    apt.pay_name,
			    
			    CASE (
			    	select 1 from ACC_BANK_VERI a 
			    	WHERE 
				    	abc.group_id = a.group_id
				    	AND abc.hos_id = a.hos_id
					    AND abc.copy_code = a.copy_code
					    AND abc.acc_year = a.acc_year
					    AND abc.bank_id = a.bank_id 
				) WHEN 1 THEN '已对账' ELSE '未对账' END is_checks,
				
			    abv.is_auto
			    
			FROM ACC_BANK_CHECK abc 
			LEFT JOIN ACC_SUBJ sa
			ON 
				abc.group_id = sa.group_id 
				AND abc.hos_id = sa.hos_id
			    AND abc.copy_code = sa.copy_code 
			    AND abc.acc_year = sa.acc_year
			    AND abc.subj_code = sa.subj_code
			    
			LEFT JOIN ACC_PAY_TYPE apt
			ON 
				abc.group_id = apt.group_id 
			    AND abc.hos_id = apt.hos_id
			    AND abc.copy_code = apt.copy_code 
			    AND abc.acc_year = apt.acc_year
			    AND abc.pay_type_code = apt.pay_code
			    
			LEFT JOIN ACC_BANK_VERI abv 
			ON
				abc.group_id = abv.group_id
				AND abc.hos_id = abv.hos_id
				AND abc.copy_code = abv.copy_code
				AND abc.acc_year = abv.acc_year
				AND abc.bank_id = abv.bank_id
					
			<where>
			 	AND abc.is_init=0
				<if test="bank_id != null and bank_id != ''">
					AND abc.bank_id = #{bank_id}
				</if>
				<if test="group_id != null and group_id != ''">
					AND abc.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND abc.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND abc.copy_code = #{copy_code}
				</if>
				<if
					test="acc_year != null and acc_year != ''">
					AND abc.acc_year = #{acc_year} 
				</if>
				<if
					test="subj_code != null and subj_code != '' and subj_code != 'undefined' ">
					AND abc.subj_code = #{subj_code}
				</if>
				<if
					test="price1 != '' and price1 != '' and price2 != null and price2 != null  and price1 != 'undefined' and price2 != 'undefined'">
					AND (abc.debit between #{price1} and #{price2} or abc.credit between #{price1} and #{price2})
				</if>
				
				<if test="acc_time1 != null and acc_time1 != '' and acc_time2 != null and acc_time2 != '' and acc_time1 != 'undefined' and acc_time2 != 'undefined'">
					AND abc.occur_date between to_date(#{acc_time1},'yyyy/MM/dd') and to_date(#{acc_time2},'yyyy/MM/dd')
				</if>
				<if test="check_no != null and check_no != ''">
					AND abc.check_no like '%${check_no}%'
				</if>
				<if test="pay_type_code != null and pay_type_code != ''">
					AND abc.pay_type_code = #{pay_type_code}
				</if>
				<if test="summary != null and summary != ''">
					AND abc.summary like '%${summary}%'
				</if>
				<if test="acc_date1 != null and acc_date1 != '' and acc_date2 != null and acc_date2 != ''">
					AND abc.check_date between to_date(#{acc_date1},'yyyy/MM/dd') and to_date(#{acc_date2},'yyyy/MM/dd')
				</if>
				<if test="state == 0">
				and not exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
				<if test="state == 1">
				and  exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
			</where>
			order by abc.bank_id asc
		),
		b_table as (
			<!-- 合计 -->
			SELECT 
	      		0 as veri_id,0 as bank_id,0 as group_id,0 as hos_id,'' as copy_code,'' as acc_year,0 as subj_code,to_char('') as subj_name,
		      	'' as subj_code,'合计' as summary,sum(abc.debit) as debit,sum(abc.credit) as credit,0 as bal,'' as cur_code,'' as check_no,
		      	''as business_no,null as occur_date,'' as pay_type_code,0 as is_check,'' as pay_name,''as is_checks,0 as is_auto 
	      	FROM ACC_BANK_CHECK abc
	      	<where>
			 	AND abc.is_init=0
				<if test="bank_id != null and bank_id != ''">
					AND abc.bank_id = #{bank_id}
				</if>
				<if test="group_id != null and group_id != ''">
					AND abc.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND abc.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND abc.copy_code = #{copy_code}
				</if>
				<if
					test="acc_year != null and acc_year != ''">
					AND abc.acc_year = #{acc_year} 
				</if>
				<if
					test="subj_code != null and subj_code != '' and subj_code != 'undefined' ">
					AND abc.subj_code = #{subj_code}
				</if>
				<if
					test="price1 != '' and price1 != '' and price2 != null and price2 != null  and price1 != 'undefined' and price2 != 'undefined'">
					AND (abc.debit between #{price1} and #{price2} or abc.credit between #{price1} and #{price2})
				</if>
				
				<if test="acc_time1 != null and acc_time1 != '' and acc_time2 != null and acc_time2 != '' and acc_time1 != 'undefined' and acc_time2 != 'undefined'">
					AND abc.occur_date between to_date(#{acc_time1},'yyyy/MM/dd') and to_date(#{acc_time2},'yyyy/MM/dd')
				</if>
				<if test="check_no != null and check_no != ''">
					AND abc.check_no like '%${check_no}%'
				</if>
				<if test="pay_type_code != null and pay_type_code != ''">
					AND abc.pay_type_code = #{pay_type_code}
				</if>
				<if test="summary != null and summary != ''">
					AND abc.summary like '%${summary}%'
				</if>
				<if test="acc_date1 != null and acc_date1 != '' and acc_date2 != null and acc_date2 != ''">
					AND abc.check_date between to_date(#{acc_date1},'yyyy/MM/dd') and to_date(#{acc_date2},'yyyy/MM/dd')
				</if>
				<if test="state == 0">
				and not exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
				<if test="state == 1">
				and  exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
			</where>
		)
		select * from a_table
		union all
		select * from b_table
	</select>
	
	
	<select id="queryAccBankCheckCode" resultType="com.chd.hrp.acc.entity.AccBankCheck"	parameterType="string">
		SELECT
	        bank_id,
		    bal
	    FROM acc_bank_check 
		<where>
			and is_init = 1
			and (debit = 0  and credit = 0)
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="subj_code != null and subj_code != ''">
				AND subj_code = #{subj_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND acc_year = #{acc_year}
			</if>
		</where>

	</select>
	
	<!-- 查询单位未达账 并计算借贷方总金额-->
	<select id="queryAccBankCheckAndSum" parameterType="java.util.Map" resultMap="accBankCheck">
		WITH
			a_table
			AS
			(
				SELECT abv.veri_id, abc.bank_id, abc.group_id, abc.hos_id, abc.copy_code
					, abc.acc_year, sa.subj_name, sa.subj_code, abc.summary
					, abc.debit, abc.credit, abc.bal, sa.cur_code, abc.check_no
					, abc.business_no, abc.occur_date, abc.pay_type_code, abc.is_check, apt.pay_name
					, CASE (
						SELECT 1
						FROM ACC_BANK_VERI a
						WHERE abc.group_id = a.group_id
							AND abc.hos_id = a.hos_id
							AND abc.copy_code = a.copy_code
							AND abc.acc_year = a.acc_year
							AND abc.bank_id = a.bank_id
						) WHEN 1 THEN '已对账' ELSE '未对账' END AS is_checks, abv.is_auto
				FROM ACC_BANK_CHECK abc
				
				LEFT JOIN ACC_SUBJ sa 
				ON 
					abc.group_id = sa.group_id
					AND abc.hos_id = sa.hos_id
					AND abc.copy_code = sa.copy_code
					AND abc.acc_year = sa.acc_year
					AND abc.subj_code = sa.subj_code 
					
				LEFT JOIN ACC_PAY_TYPE apt 
				ON 
					abc.group_id = apt.group_id
					AND abc.hos_id = apt.hos_id
					AND abc.copy_code = apt.copy_code
					AND abc.pay_type_code = apt.pay_code 
					
				LEFT JOIN ACC_BANK_VERI abv 
				ON 
					abc.group_id = abv.group_id
					AND abc.hos_id = abv.hos_id
					AND abc.copy_code = abv.copy_code
					AND abc.acc_year = abv.acc_year
					AND abc.bank_id = abv.bank_id 
				
				<where>
                    and (abc.bal = 0 and (abc.credit != 0 or abc.debit != 0))
				<if test="bank_id != null and bank_id != ''">
					AND abc.bank_id = #{bank_id}
				</if>
				<if test="is_init != null and bal != ''">
					AND abc.is_init = #{is_init}
				</if>
				<if test="group_id != null and group_id != ''">
					AND abc.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND abc.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND abc.copy_code = #{copy_code}
				</if>
				<if
					test="acc_year != null and acc_year != ''">
					AND abc.acc_year = #{acc_year} 
				</if>
				<if
					test="subj_code != null and subj_code != '' and subj_code != 'undefined' ">
					AND abc.subj_code = #{subj_code}
				</if>
				<if test="price1 != '' and price1 != '' and price2 != null and price2 != null  and price1 != 'undefined' and price2 != 'undefined'">
					AND (abc.debit between #{price1} and #{price2} or abc.credit between #{price1} and #{price2})
				</if>
				<if test="acc_time1 != null and acc_time1 != '' ">
					AND abc.occur_date &gt;= to_date(#{acc_time1},'yyyy/MM/dd')
				</if>
				<if test="acc_time2 != null and acc_time2 != '' ">
					AND abc.occur_date &lt;= to_date(#{acc_time2},'yyyy/MM/dd')
				</if>
				<if test="check_no != null and check_no != ''">
					AND abc.check_no like '%${check_no}%'
				</if>
				<if test="pay_type_code != null and pay_type_code != ''">
					AND abc.pay_type_code = #{pay_type_code}
				</if>
				<if test="summary != null and summary != ''">
					AND abc.summary like '%${summary}%'
				</if>
				<if test="state == 0">
				and not exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
				<if test="state == 1">
				and  exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
			</where>
        
        ORDER BY abc.bank_id ASC
      ) 
      select  veri_id,bank_id,group_id, hos_id,copy_code
					, acc_year,subj_name,subj_code,summary
					, debit,credit,bal,cur_code,check_no
					, business_no,occur_date,pay_type_code,is_check,pay_name,is_checks,is_auto from a_table
      union all
      select 0 AS veri_id, 0 AS bank_id, 0 AS group_id, 0 AS hos_id, NULL AS copy_code
          , NULL AS acc_year,NULL AS subj_name, NULL AS subj_code, '合计' AS summary
          , SUM(debit) AS debit, SUM(credit) AS credit, 0 AS bal, NULL AS cur_code, NULL AS check_no
          , NULL AS business_no, NULL AS occur_date, NULL AS pay_type_code, null AS is_check, NULL AS pay_name
          , NULL AS is_checks, 0 AS is_auto from a_table
		
		
	
	</select>
	
	<!-- 查询单位未达账 并计算借贷方总金额-->
	<select id="queryAccBankCheckAndSumPrint" parameterType="java.util.Map" resultType="java.util.Map">
		WITH a_table AS(
				SELECT abv.veri_id, abc.bank_id, abc.group_id, abc.hos_id, abc.copy_code
					, abc.acc_year, sa.subj_name, sa.subj_code, abc.summary
					, abc.debit, abc.credit, abc.bal, sa.cur_code, abc.check_no
					, abc.business_no, abc.occur_date, abc.pay_type_code, abc.is_check, apt.pay_name
					, CASE (
						SELECT 1
						FROM ACC_BANK_VERI a
						WHERE abc.group_id = a.group_id
							AND abc.hos_id = a.hos_id
							AND abc.copy_code = a.copy_code
							AND abc.acc_year = a.acc_year
							AND abc.bank_id = a.bank_id
					) WHEN 1 THEN '已对账' ELSE '未对账' END AS is_checks, abv.is_auto
				FROM ACC_BANK_CHECK abc
				LEFT JOIN ACC_SUBJ sa ON abc.group_id = sa.group_id
				AND abc.hos_id = sa.hos_id
				AND abc.copy_code = sa.copy_code
				AND abc.acc_year = sa.acc_year
				AND abc.subj_code = sa.subj_code
				LEFT JOIN ACC_PAY_TYPE apt ON abc.group_id = apt.group_id
				AND abc.hos_id = apt.hos_id
				AND abc.copy_code = apt.copy_code
				AND abc.pay_type_code = apt.pay_code 
					LEFT JOIN ACC_BANK_VERI abv ON abc.group_id = abv.group_id
				AND abc.hos_id = abv.hos_id
				AND abc.copy_code = abv.copy_code
				AND abc.acc_year = abv.acc_year
				AND abc.bank_id = abv.bank_id 
				<where>
                    and (abc.bal = 0 and (abc.credit != 0 or abc.debit != 0))
				<if test="bank_id != null and bank_id != ''">
					AND abc.bank_id = #{bank_id}
				</if>
				<if test="is_init != null and bal != ''">
					AND abc.is_init = #{is_init}
				</if>
				<if test="group_id != null and group_id != ''">
					AND abc.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND abc.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND abc.copy_code = #{copy_code}
				</if>
				<if
					test="acc_year != null and acc_year != ''">
					AND abc.acc_year = #{acc_year} 
				</if>
				<if
					test="subj_code != null and subj_code != '' and subj_code != 'undefined' ">
					AND abc.subj_code = #{subj_code}
				</if>
				<if test="price1 != '' and price1 != '' and price2 != null and price2 != null  and price1 != 'undefined' and price2 != 'undefined'">
					AND (abc.debit between #{price1} and #{price2} or abc.credit between #{price1} and #{price2})
				</if>
				<if test="acc_time1 != null and acc_time1 != '' ">
					AND abc.occur_date &gt;= to_date(#{acc_time1},'yyyy/MM/dd')
				</if>
				<if test="acc_time2 != null and acc_time2 != '' ">
					AND abc.occur_date &lt;= to_date(#{acc_time2},'yyyy/MM/dd')
				</if>
				<if test="check_no != null and check_no != ''">
					AND abc.check_no like '%${check_no}%'
				</if>
				<if test="pay_type_code != null and pay_type_code != ''">
					AND abc.pay_type_code = #{pay_type_code}
				</if>
				<if test="summary != null and summary != ''">
					AND abc.summary like '%${summary}%'
				</if>
				<if test="state == 0">
				and not exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
				<if test="state == 1">
				and  exists(select 1 from ACC_BANK_VERI b where abc.group_id = b.group_id
							    AND abc.hos_id = b.hos_id
							    AND abc.copy_code = b.copy_code
							    AND abc.acc_year = b.acc_year
							    AND abc.bank_id = b.bank_id )
	   			</if>
			</where>
        
        ORDER BY abc.bank_id ASC
      ) 
      select  veri_id,bank_id,group_id, hos_id,copy_code
					, acc_year,subj_name,subj_code,summary
					, debit,credit,bal,cur_code,check_no
					, business_no,to_char(occur_date,'yyyy-MM-dd') occur_date,pay_type_code,is_check,pay_name,is_checks,is_auto from a_table
      union all
      select 0 AS veri_id, 0 AS bank_id, 0 AS group_id, 0 AS hos_id, NULL AS copy_code
          , NULL AS acc_year,NULL AS subj_name, NULL AS subj_code, '合计' AS summary
          , SUM(debit) AS debit, SUM(credit) AS credit, 0 AS bal, NULL AS cur_code, NULL AS check_no
          , NULL AS business_no, NULL AS occur_date, NULL AS pay_type_code, null AS is_check, NULL AS pay_name
          , NULL AS is_checks, 0 AS is_auto from a_table
		
		
	
	</select>
	
	<!-- 单位未达账初始余额保存 -->
	<update id="saveAccBankBalInit" parameterType="java.util.Map">
	<![CDATA[
	declare
		 v_count number;
	begin
		select count(1) into v_count from acc_bank_check where group_id =#{group_id} AND hos_id = #{hos_id} AND copy_code = #{copy_code} 
		and subj_code=#{subj_code} and is_init=1;
		if(v_count>0) then
			UPDATE acc_bank_check SET bal =#{bal}
			WHERE group_id =#{group_id} AND hos_id = #{hos_id} AND copy_code = #{copy_code} and subj_code=#{subj_code} and is_init=1;		
		else
			INSERT INTO ACC_BANK_CHECK (bank_id,group_id,hos_id,copy_code,acc_year,subj_code,
			debit,credit,bal,debit_w,credit_w,occur_date,is_check,is_init,is_import) 
			VALUES (ACC_BANK_CHECK_SEQ.NEXTVAL,#{group_id},#{hos_id},#{copy_code},#{acc_year},#{subj_code},
			0,0,#{bal},0,0,to_date(#{occur_date},'yyyy/MM/dd'),0,1,0);
		end if;
		
	end;
	]]>	
	</update>
	
	<!-- 银行未达账查询初始余额 -->
	<select id="selectAccBankBalInit" parameterType="java.util.Map" resultType="String">
		select nvl(bal_os,0.00) from acc_leder where group_id =#{group_id} AND hos_id = #{hos_id} AND copy_code = #{copy_code} 
		and subj_code=#{subj_code} 
		and acc_year||acc_month in(
		  select start_year||start_month from sys_mod_start m
		  where m.group_id=#{group_id} and m.hos_id=#{hos_id} and m.copy_code=#{copy_code} and m.mod_code='0101'
		)
	</select>
	
	<!-- 查询会计科目用于导入 -->
	<select id="queryAccSubjForImpl" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT subj_code, subj_name
		FROM acc_subj 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND acc_year = #{acc_year,jdbcType=INTEGER}
			AND is_last = 1 
			AND is_stop = 0
	</select>
	
	<!-- 查询结算方式用于导入 -->
	<select id="queryAccPayTypeForImpl" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT pay_code, pay_name
		FROM acc_pay_type 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND source_code = 'HRP'
	</select>
</mapper>
