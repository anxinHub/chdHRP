<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.info.basic.MedTypeDictMapper">

	<resultMap id="medTypeDict" type="com.chd.hrp.med.entity.MedTypeDict">
	<result property="med_type_no" column="med_type_no"/>
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="med_type_id" column="med_type_id"/>
	<result property="med_type_code" column="med_type_code"/>
	<result property="med_type_name" column="med_type_name"/>
	<result property="super_code" column="super_code"/>
	<result property="super_name" column="super_name"/>
	<result property="type_level" column="type_level"/>
	<result property="is_last" column="is_last"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="note" column="note"/>
	<result property="is_budg" column="is_budg"/>
	<result property="is_auto_exp" column="is_auto_exp"/>
	<result property="change_user" column="change_user"/>
	<result property="change_date" column="change_date"/>
	<result property="change_note" column="change_note"/>
	<result property="is_stop" column="is_stop"/>
	</resultMap>
	
	
	<insert id="addMedTypeDict" useGeneratedKeys="true" >
		INSERT INTO MED_TYPE_DICT (
			med_type_no, group_id, hos_id, copy_code, med_type_id, med_type_code, med_type_name, 
			super_code, type_level,sort_no, is_last, spell_code, wbx_code, note, is_budg, is_auto_exp,
			change_user, change_date, change_note, is_stop
		) VALUES (
			MED_TYPE_DICT_SEQ.nextval, 
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{med_type_id,jdbcType=INTEGER},
			#{med_type_code,jdbcType=VARCHAR},
			#{med_type_name,jdbcType=VARCHAR},
			#{super_code,jdbcType=VARCHAR},
			#{type_level,jdbcType=INTEGER},
			#{sort_no,jdbcType=INTEGER},
			#{is_last,jdbcType=INTEGER},
			#{spell_code,jdbcType=VARCHAR},
			#{wbx_code,jdbcType=VARCHAR},
			#{note,jdbcType=VARCHAR},
			#{is_budg,jdbcType=INTEGER},
			#{is_auto_exp,jdbcType=INTEGER},
			#{change_user,jdbcType=VARCHAR},
			#{change_date,jdbcType=DATE},
			#{change_note,jdbcType=VARCHAR},
			#{is_stop,jdbcType=INTEGER}
		)
	</insert>
	
	<insert id="addMedTypeDictForDelete" useGeneratedKeys="false"  parameterType="java.util.Map">
		INSERT INTO MED_TYPE_DICT (
			med_type_no, group_id, hos_id, copy_code, med_type_id, med_type_code, med_type_name, 
			super_code, type_level, is_last, spell_code, wbx_code, note, is_budg, is_auto_exp,
			change_user, change_date, change_note, is_stop
		) 
		select MED_TYPE_DICT_SEQ.nextval, group_id, hos_id, copy_code, med_type_id, med_type_code, med_type_name, 
			super_code, type_level, is_last, spell_code, wbx_code, note, is_budg, is_auto_exp, 
			#{change_user,jdbcType=INTEGER}, 
			#{change_date,jdbcType=DATE}, 
			#{change_note,jdbcType=VARCHAR}, 1 
		from MED_TYPE_DICT 
		where group_id = #{group_id,jdbcType=INTEGER} 
			AND hos_id = #{hos_id,jdbcType=INTEGER} 
			AND copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND med_type_id in
			(
			 select med_type_id from MED_TYPE
			 where group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
	                  start with  med_type_id in (#{med_type_id,jdbcType=INTEGER})
	                  connect by prior med_type_code = super_code
	           
			) 
			AND is_stop = 0 
	</insert>
	
	<select id="queryMedTypeDict" parameterType="java.util.Map" resultMap="medTypeDict" >
		SELECT 
			a.med_type_no,
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.med_type_id,
			a.med_type_code,
			a.med_type_name,
			a.super_code,
			b.med_type_name super_name,
			a.type_level,
			a.is_last,
			a.spell_code,
			a.wbx_code,
			a.note,
			a.is_budg,
			a.is_auto_exp,
			c.user_name change_user,
			a.change_date,
			a.change_note,
			a.is_stop
		FROM MED_TYPE_DICT a
		left join med_type b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.super_code = b.med_type_code
		left join sys_user c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.change_user = c.user_id
		WHERE     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="med_type_no != null and med_type_no != ''">
				AND a.med_type_no = #{med_type_no,jdbcType=INTEGER}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				AND a.med_type_id = #{med_type_id,jdbcType=INTEGER}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND a.is_stop = #{is_stop,jdbcType=INTEGER}
			</if>
		order by a.med_type_no asc
	</select>
	<select id="queryMedTypeDictTwo" parameterType="java.util.Map" resultMap="medTypeDict" >
		SELECT 
			a.med_type_no,
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.med_type_id,
			a.med_type_code,
			a.med_type_name,
			a.super_code,
			b.med_type_name super_name,
			a.type_level,
			a.is_last,
			a.spell_code,
			a.wbx_code,
			a.note,
			a.is_budg,
			a.is_auto_exp,
			c.user_name change_user,
			a.change_date,
			a.change_note,
			a.is_stop
		FROM MED_TYPE_DICT a
		left join med_type b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.super_code = b.med_type_code
		left join sys_user c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.change_user = c.user_id
			 
     <!--   join v_user_data_perm dp 
      on a.group_id = dp.group_id and a.hos_id = dp.hos_id
      and dp.user_id = #{user_id,jdbcType=INTEGER}  and dp.table_code = 'MED_TYPE_DICT' 
      and dp.perm_code = a.med_type_id and dp.is_read = 1 and dp.is_write = 1 -->
		WHERE     a.is_stop = 0 and
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.med_type_id in (select dp.perm_code from v_user_data_perm dp 
						      where dp.group_id = #{group_id,jdbcType=INTEGER}  and dp.hos_id = #{hos_id,jdbcType=INTEGER}
						      and dp.user_id = #{user_id,jdbcType=INTEGER}  and dp.table_code = 'MED_TYPE_DICT' 
						      and dp.is_read = 1 and dp.is_write = 1
						      )
			<if test="med_type_no != null and med_type_no != ''">
				AND a.med_type_no = #{med_type_no,jdbcType=INTEGER}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				AND a.med_type_id = #{med_type_id,jdbcType=INTEGER}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND a.is_stop = #{is_stop,jdbcType=INTEGER}
			</if>
			
		order by a.med_type_no asc
	</select>
	<update id="updateMedTypeDictIsLast" parameterType="java.util.Map">
		UPDATE med_type_dict SET
			is_last = #{is_last,jdbcType=INTEGER}
		WHERE group_id =#{group_id,jdbcType=INTEGER}
			and hos_id =#{hos_id,jdbcType=INTEGER}
			and copy_code =#{copy_code,jdbcType=VARCHAR}
			and med_type_id =#{med_type_id,jdbcType=INTEGER}
			and is_stop = 0
			<if test="max_no != null and max_no != ''">
				AND med_type_no = #{max_no,jdbcType=INTEGER}
			</if>
	</update>
	
	 <update id="updateMedTypeDictSuperIsLastByIds" parameterType="java.util.Map" >
		update med_type_dict a set is_last = 1 
		where group_id = #{group_id,jdbcType=INTEGER}
		 	and hos_id = #{hos_id,jdbcType=INTEGER}
		 	and copy_code = #{copy_code,jdbcType=VARCHAR}
		 	and is_stop = 0
		 	and med_type_id in (
				select med_type_id from med_type
				where group_id = #{group_id,jdbcType=INTEGER}
		 			and hos_id = #{hos_id,jdbcType=INTEGER}
		 			and copy_code = #{copy_code,jdbcType=VARCHAR}
					and med_type_code in (
						select super_code from med_type_dict 
						where group_id = #{group_id,jdbcType=INTEGER}
		 					and hos_id = #{hos_id,jdbcType=INTEGER}
		 					and copy_code = #{copy_code,jdbcType=VARCHAR}
		 					and is_stop = 0
							and med_type_id in(${med_type_id})
					)
			) 
			and (
				select count(*) from med_type 
				start with  med_type_id = a.med_type_id
					and group_id = a.group_id
		 			and hos_id = a.hos_id
		 			and copy_code = a.copy_code
				connect by prior med_type_code = super_code
			) = 1
   </update>
   
   <update id="updateMedTypeDictIsStop" parameterType="java.util.Map" >
		update med_type_dict set is_stop = 1
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND med_type_id in
			(
			 select med_type_id from MED_TYPE
			 where group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
	                  start with  med_type_id in (#{med_type_id,jdbcType=INTEGER})
	                  connect by prior med_type_code = super_code
	           
			)
			<if test="max_no != null and max_no != ''">
				AND med_type_no = #{max_no,jdbcType=INTEGER}
			</if>
	</update>
	
	<update id="updateMedTypeDict" parameterType="java.util.Map" >
		update med_type_dict SET
			med_type_code = #{med_type_code,jdbcType=VARCHAR}, 
			med_type_name = #{med_type_name,jdbcType=VARCHAR},
			super_code = #{super_code,jdbcType=VARCHAR},
			is_last = #{is_last,jdbcType=INTEGER},
			is_stop = #{is_stop,jdbcType=INTEGER},
			is_auto_exp = #{is_auto_exp,jdbcType=INTEGER},
			spell_code = #{spell_code,jdbcType=VARCHAR},
			wbx_code = #{wbx_code,jdbcType=VARCHAR},
			note = #{note,jdbcType=VARCHAR},
			change_user = #{change_user,jdbcType=VARCHAR},
			change_date = #{change_date,jdbcType=VARCHAR},
			change_note = #{change_note,jdbcType=VARCHAR}
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND med_type_id = #{med_type_id,jdbcType=INTEGER}
			AND med_type_no = #{max_no,jdbcType=INTEGER}
	</update>
	
	<select id="queryMedTypeDictByUniqueness" resultMap="medTypeDict" parameterType="java.util.Map" >
	
		SELECT 
		med_type_no,
		group_id,
		hos_id,
		copy_code,
		med_type_id,
		med_type_code,
		med_type_name,
		super_code,
		type_level,
		is_last,
		spell_code,
		wbx_code,
		note,
		is_budg,
		is_auto_exp,
		change_user,
		change_date,
		change_note,
		is_stop
		FROM MED_TYPE_DICT 
		<where>                     
		<if test="med_type_no != null and med_type_no != ''">
		AND med_type_no = #{med_type_no,jdbcType=INTEGER}
		</if>
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_code != null and med_type_code != ''">
		AND med_type_code = #{med_type_code,jdbcType=VARCHAR}
		</if>
		<if test="med_type_name != null and med_type_name != ''">
		AND med_type_name = #{med_type_name,jdbcType=VARCHAR}
		</if>
		<if test="super_code != null and super_code != ''">
		AND super_code = #{super_code,jdbcType=VARCHAR}
		</if>
		<if test="type_level != null and type_level != ''">
		AND type_level = #{type_level,jdbcType=INTEGER}
		</if>
		<if test="is_last != null and is_last != ''">
		AND is_last = #{is_last,jdbcType=INTEGER}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_budg != null and is_budg != ''">
		AND is_budg = #{is_budg,jdbcType=INTEGER}
		</if>
		<if test="is_auto_exp != null and is_auto_exp != ''">
		AND is_auto_exp = #{is_auto_exp,jdbcType=INTEGER}
		</if>
		<if test="change_user != null and change_user != ''">
		AND change_user = #{change_user,jdbcType=VARCHAR}
		</if>
		<if test="change_date != null and change_date != ''">
		AND change_date = #{change_date,jdbcType=DATE}
		</if>
		<if test="change_note != null and change_note != ''">
		AND change_note = #{change_note,jdbcType=VARCHAR}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		</where>   
		order by med_type_code asc
	</select>
	
	
</mapper>