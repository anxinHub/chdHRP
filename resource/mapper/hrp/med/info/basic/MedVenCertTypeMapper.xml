<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.info.basic.MedVenCertTypeMapper">
	
	<resultMap id="medVenCertType" type="com.chd.hrp.med.entity.MedVenCertType">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="type_id" column="type_id"/>
	<result property="type_code" column="type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_alarm" column="is_alarm"/>
	<result property="war_days" column="war_days"/>
	</resultMap>
	
	<insert id="addMedVenCertType" useGeneratedKeys="true" >
	
		INSERT INTO MED_VEN_CERT_TYPE (
			type_id
			,
			group_id
			,
			hos_id
			,
			copy_code
			,
			type_code
			,
			type_name
			,
			spell_code
			,
			wbx_code
			,
			is_alarm
			,
			war_days
		
		) VALUES (
MED_VEN_CERT_TYPE_SEQ.nextval	,
#{group_id,jdbcType=INTEGER}	,
#{hos_id,jdbcType=INTEGER}	,
#{copy_code,jdbcType=VARCHAR}	,
#{type_code,jdbcType=VARCHAR}	,
#{type_name,jdbcType=VARCHAR}	,
#{spell_code,jdbcType=VARCHAR}	,
#{wbx_code,jdbcType=VARCHAR}	,
#{is_alarm,jdbcType=INTEGER}	,
#{war_days,jdbcType=INTEGER}
	)
	
	</insert>
	<insert id="addBatchMedVenCertType" parameterType="java.util.List" >
	
		INSERT INTO MED_VEN_CERT_TYPE (
			type_id
			,
			group_id
			,
			hos_id
			,
			copy_code
			,
			type_code
			,
			type_name
			,
			spell_code
			,
			wbx_code
			,
			is_alarm
			,
			war_days
		
		) select MED_VEN_CERT_TYPE_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{type_code,jdbcType=VARCHAR}
			,
			#{type_name,jdbcType=VARCHAR}
			,
			#{spell_code,jdbcType=VARCHAR}
			,
			#{wbx_code,jdbcType=VARCHAR}
			,
			#{is_alarm,jdbcType=INTEGER}
			,
			#{war_days,jdbcType=INTEGER}
				from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMedVenCertType" parameterType="java.util.Map">
	
		UPDATE med_ven_cert_type SET
		type_code = #{type_code,jdbcType=VARCHAR}
		,
		type_name = #{type_name,jdbcType=VARCHAR}
		,
		spell_code = #{spell_code,jdbcType=VARCHAR}
		,
		wbx_code = #{wbx_code,jdbcType=VARCHAR}
		,
		is_alarm = #{is_alarm,jdbcType=INTEGER}
		,
		war_days = #{war_days,jdbcType=INTEGER}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
type_id =#{type_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMedVenCertType" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE med_ven_cert_type SET
			type_code = #{type_code,jdbcType=VARCHAR}
			,
			type_name = #{type_name,jdbcType=VARCHAR}
			,
			spell_code = #{spell_code,jdbcType=VARCHAR}
			,
			wbx_code = #{wbx_code,jdbcType=VARCHAR}
			,
			is_alarm = #{is_alarm,jdbcType=INTEGER}
			,
			war_days = #{war_days,jdbcType=INTEGER}
			
			WHERE 
			group_id = #{group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{copy_code,jdbcType=VARCHAR}
			 and 
			type_id = #{type_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMedVenCertType" parameterType="java.util.Map">
	
		DELETE FROM med_ven_cert_type WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		type_id = #{type_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMedVenCertType" parameterType="java.util.List">
		DELETE FROM med_ven_cert_type WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				type_id = #{item.type_id,jdbcType=INTEGER}
				
			</foreach>
	
	</delete>
	<select id="queryMedVenCertType" parameterType="java.util.Map" resultMap="medVenCertType" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_id,
		type_code,
		type_name,
		spell_code,
		wbx_code,
		is_alarm,
		war_days
		FROM MED_VEN_CERT_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="type_id != null and type_id != ''">
		AND type_id = #{type_id}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code like  '${type_code}%'
		</if>
		<if test="type_name != null and type_name != ''">
		AND (	type_name like '%${type_name}%'	or
		 		spell_code like '%${type_name}%' or
		 		wbx_code like '%${type_name}%'	)
		</if>
		<if test="is_alarm != null and is_alarm != ''">
		AND is_alarm = #{is_alarm}
		</if>
		<if test="war_days != null and war_days != ''">
		AND war_days = #{war_days}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryMedVenCertTypeByCode" resultType="com.chd.hrp.med.entity.MedVenCertType" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_id,
		type_code,
		type_name,
		spell_code,
		wbx_code,
		is_alarm,
		war_days
		FROM med_ven_cert_type 
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="type_id != null and type_id != ''">
			AND type_id = #{type_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<select id="queryMedVenCertTypeByUniqueness" resultType="com.chd.hrp.med.entity.MedVenCertType" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_id,
		type_code,
		type_name,
		spell_code,
		wbx_code,
		is_alarm,
		war_days
		FROM MED_VEN_CERT_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="type_id != null and type_id != ''">
		AND type_id = #{type_id,jdbcType=INTEGER}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="type_name != null and type_name != ''">
		AND type_name = #{type_name,jdbcType=VARCHAR}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		<if test="is_alarm != null and is_alarm != ''">
		AND is_alarm = #{is_alarm,jdbcType=INTEGER}
		</if>
		<if test="war_days != null and war_days != ''">
		AND war_days = #{war_days,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 查询 与 输入证件类型编码、证件类型名称 相同的记录-->
	<select id="queryMedVenCertTypeByID" resultType="com.chd.hrp.med.entity.MedVenCertType" parameterType="java.util.Map" >
	
		SELECT 
		type_code,
		type_name
		FROM med_ven_cert_type 
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="type_id != null and type_id != ''">
			AND type_id != #{type_id,jdbcType=INTEGER}
			</if>
			AND  ( type_code = #{type_code} or
			 		type_name = #{type_name} )
		</where>
	</select>
</mapper>

