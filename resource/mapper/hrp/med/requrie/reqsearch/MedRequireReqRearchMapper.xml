<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.requrie.reqsearch.MedRequireReqSearchMapper">

	<resultMap id="medRequireMain" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="req_id" column="req_id" />
		<result property="req_code" column="req_code" />
		
		<result property="pur_id" column="pur_id" />
		<result property="pur_code" column="pur_code" />
		
		<result property="req_code" column="req_code" />
		<result property="brif" column="brif" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_id" column="dept_id" />
		
		<result property="dept_name" column="dept_name" />
		<result property="dept_names" column="dept_names" />
		<result property="stock_no" column="stock_no" />
		<result property="stock_id" column="stock_id" />
		
		<result property="store_name" column="store_name" />
		<result property="maker" column="maker" />
		<result property="make_date" column="make_date" />
		<result property="rdate" column="rdate" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="state" column="state" />
		<result property="req_type" column="req_type" />
		<result property="is_collect" column="is_collect" />
		<result property="is_submit" column="is_submit" />
		<result property="is_return" column="is_return" />
		<result property="return_reason" column="return_reason" />
		<result property="other_inv" column="other_inv" />
		
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="begin_amount" column="begin_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="amount" column="amount" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		
		
		<result property="differ" column="differ" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="req_amount" column="req_amount" />
		<result property="exec_amount" column="exec_amount" />
		
		<result property="last_extend" column="last_extend" />
		<result property="last_plan" column="last_plan" />
		<result property="this_plan" column="this_plan" />
		
		
	</resultMap>
	
	<!-- 获得最大的序列号 -->
	<select id="getNextReqId" parameterType="java.util.Map"  resultType="java.lang.Integer">
		select MED_REQUIRE_MAIN_SEQ.nextval from dual
	</select>
	
	<!-- 添加主表信息 -->
	<insert id="add" useGeneratedKeys="true">
		INSERT INTO MED_REQUIRE_MAIN (
			group_id		,
			hos_id		,
			copy_code		,
			req_id		,
			req_code		
			<if test="dept_no != null and dept_no != ''">, dept_no</if>
			<if test="dept_id != null and dept_id != ''">, dept_id</if>
			<if test="stock_no != null and stock_no != ''">, stock_no</if>
			<if test="stock_id != null and stock_id != ''">, stock_id</if>
			<if test="rdate != null and rdate != ''">, rdate</if>
			<if test="maker != null and maker != ''">, maker</if>
			<if test="make_date != null and make_date != ''">, make_date</if>
			<if test="checker != null and checker != ''">, checker</if>
			<if test="check_date != null and check_date != ''">, check_date</if>
			<if test="state != null and state != ''">, state</if>
			<if test="req_type != null and req_type != ''">, req_type</if>
			<if test="is_collect != null and is_collect != ''">, is_collect</if>
			<if test="is_submit != null and is_submit != ''">, is_submit</if>
			<if test="is_return != null and is_return != ''">, is_return</if>
			<if test="return_reason != null and return_reason != ''">, return_reason</if>		
			<if test="other_inv != null and other_inv != ''">,other_inv</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER}		,
			#{hos_id,jdbcType=INTEGER}		,
			#{copy_code,jdbcType=VARCHAR}		,
			#{req_id,jdbcType=INTEGER},
			#{req_code,jdbcType=VARCHAR}		
			<if test="dept_no != null and dept_no != ''">, #{dept_no,jdbcType=INTEGER}	</if>
			<if test="dept_id != null and dept_id != ''">, #{dept_id,jdbcType=INTEGER}</if>
			<if test="stock_no != null and stock_no != ''">, #{stock_no,jdbcType=INTEGER}</if>
			<if test="stock_id != null and stock_id != ''">, #{stock_id,jdbcType=INTEGER}</if>
			<if test="rdate != null and rdate != ''">, to_date(#{rdate},'yyyy/mm/dd')</if>
			<if test="maker != null and maker != ''">, #{maker,jdbcType=INTEGER}</if>
			<if test="make_date != null and make_date != ''">, to_date(#{make_date},'yyyy/mm/dd')</if>
			<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
			<if test="check_date != null and check_date != ''">, to_date(#{check_date},'yyyy/mm/dd')</if>
			<if test="state != null and state != ''">, #{state,jdbcType=INTEGER}</if>
			<if test="req_type != null and req_type != ''">, #{req_type,jdbcType=INTEGER}</if>
			<if test="is_collect != null and is_collect != ''">, #{is_collect,jdbcType=INTEGER}</if>
			<if test="is_submit != null and is_submit != ''">, #{is_submit,jdbcType=INTEGER}</if>
			<if test="is_return != null and is_return != ''">, #{is_return,jdbcType=INTEGER}</if>	
			<if test="return_reason != null and return_reason != ''">, #{return_reason,jdbcType=VARCHAR}</if>	
			<if test="other_inv != null and other_inv != ''">, #{other_inv,jdbcType=VARCHAR}</if>
		)

	</insert>
	
	
	<!-- addBatchReal 保存&提交插入med_require_real 表中插入记录-->
	<insert id="addBatchReal" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			insert into MED_REQUIRE_RELA(
				group_id,
				hos_id,
				copy_code,
				total_id,
				req_id,
				inv_id,
				req_amount,
				exec_amount
			)values(
				#{item.group_id}	,
				#{item.hos_id}	  ,
				#{item.copy_code} ,
				#{item.total_id}  ,
				#{item.req_id}	 ,
				#{item.inv_id}	 ,
				#{item.req_amount}		,
				#{item.exec_amount}
			)
		</foreach>
	</insert>
	
	
	<!-- 批量添加主表 -->
	<insert id="addBatch" parameterType="java.util.List">

		INSERT INTO MED_REQUIRE_MAIN (
			group_id		,
			hos_id		,
			copy_code		,
			req_id		,
			req_code		,
			brif		,
			dept_no		,
			dept_id		,
			stock_no		,
			stock_id		,
			rdate,
			maker		,
			make_date		,
			checker		,
			check_date		,
			state		,
			req_type		,
			is_collect		,
			is_submit		,
			is_return		,
			return_reason		,
			other_inv

		) select MED_REQUIRE_MAIN_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.group_id,jdbcType=INTEGER}			,
				#{item.hos_id,jdbcType=INTEGER}			,
				#{item.copy_code,jdbcType=VARCHAR}			,
				#{item.req_id,jdbcType=INTEGER}			,
				#{item.req_code,jdbcType=VARCHAR}			,
				#{item.brif,jdbcType=VARCHAR}			,
				#{item.dept_no,jdbcType=INTEGER}			,
				#{item.dept_id,jdbcType=INTEGER}			,
				#{item.stock_no,jdbcType=INTEGER}			,
				#{item.stock_id,jdbcType=INTEGER}			,
				#{item.rdate,jdbcType=DATE}			,
				#{item.maker,jdbcType=INTEGER}			,
				#{item.make_date,jdbcType=DATE}			,
				#{item.checker,jdbcType=INTEGER}			,
				#{item.check_date,jdbcType=DATE}			,
				#{item.state,jdbcType=INTEGER}			,
				#{item.req_type,jdbcType=INTEGER}			,
				#{item.is_collect,jdbcType=INTEGER}			,
				#{item.is_submit,jdbcType=INTEGER}			,
				#{item.is_return,jdbcType=INTEGER}			,
				#{item.return_reason,jdbcType=VARCHAR}			,
				#{item.other_inv,jdbcType=VARCHAR}
			from dual
		</foreach>
		)t
	</insert>
	
	<!-- 更新主表信息 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE med_require_main 
		SET
			dept_no = #{dept_no,jdbcType=INTEGER}		,
			dept_id = #{dept_id,jdbcType=INTEGER}		,
			maker = #{user_id,jdbcType=INTEGER}		,
			make_date = to_date(#{make_date},'yyyy/MM/dd')		,
			other_inv =	#{other_inv,jdbcType=VARCHAR}

		WHERE	group_id = #{group_id,jdbcType=INTEGER}
			and	hos_id = #{hos_id,jdbcType=INTEGER}
			and	copy_code = #{copy_code,jdbcType=VARCHAR}
			and	req_id	= #{req_id,jdbcType=INTEGER}

	</update>
	<!-- 批量更新 -->	
	<update id="updateBatch" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main SET
			req_code =	#{item.req_code,jdbcType=VARCHAR}			,
			brif = #{item.brif,jdbcType=VARCHAR}			,
			dept_no	= #{item.dept_no,jdbcType=INTEGER}			,
			dept_id = #{item.dept_id,jdbcType=INTEGER}			,
			stock_no = #{item.stock_no,jdbcType=INTEGER}			,
			stock_id =	#{item.stock_id,jdbcType=INTEGER}			,
			maker = #{item.maker,jdbcType=INTEGER}			,
			make_date = #{item.make_date,jdbcType=DATE}			,
			checker =#{item.checker,jdbcType=INTEGER}			,
			check_date = #{item.check_date,jdbcType=DATE}			,
			state = #{item.state,jdbcType=INTEGER}			,
			req_type =	#{item.req_type,jdbcType=INTEGER}			,
			is_collect =#{item.is_collect,jdbcType=INTEGER}			,
			is_submit =	#{item.is_submit,jdbcType=INTEGER}			,
			is_return =	#{item.is_return,jdbcType=INTEGER}			,
			return_reason =	#{item.return_reason,jdbcType=VARCHAR}		,
			other_inv =	#{item.other_inv,jdbcType=VARCHAR}
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and		hos_id = #{item.hos_id,jdbcType=INTEGER}
				and		copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and		req_id =#{item.req_id,jdbcType=INTEGER}

		</foreach>
	</update>
	
	<!-- 删除主表 -->
	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM
		med_require_main 
		WHERE	group_id = #{group_id,jdbcType=INTEGER}
			and	hos_id = #{hos_id,jdbcType=INTEGER} 
			and	copy_code =	#{copy_code,jdbcType=VARCHAR} 
			and	req_id = #{req_id,jdbcType=INTEGER}

	</delete>
	
	<!-- 删除主表信息 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM med_require_main 
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and	hos_id = #{item.hos_id,jdbcType=INTEGER}
			and	copy_code =	#{item.copy_code,jdbcType=VARCHAR}
			and	req_id = #{item.req_id,jdbcType=INTEGER}
			and	req_code = #{item.req_code,jdbcType=VARCHAR}
		</foreach>
	</delete>
	
	<!-- 审核 -->
	<update id="updateAudit" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main 
			SET  state = 2,
				checker = #{item.user_id},
				check_date = SYSDATE
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	<!-- 退回科室 -->
	<update id="updateReturn" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main 
			SET  state = 1,
				is_submit = 0,
				is_return = 1,
				return_reason = #{item.return_reason,jdbcType=VARCHAR}
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id = #{item.req_id,jdbcType=INTEGER}
		</foreach>		
	</update>
	
	<!-- 取消审核 -->
	<update id="updateAuditCancle" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main 
			SET  state = 1 ,
				checker = '',
				check_date = ''
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	<!-- 中止计划 -->
	<update id="updateAbortMedDeptPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main 
			SET  state = 0
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	<!-- 提交单据 -->
	<update id="updateSubmitMedDeptPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main 
			SET  is_submit = 1
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	<!-- 取消提交单据 -->
	<update id="updateUnSubmitMedDeptPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main 
			SET  is_submit = 0
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	
	
	<!-- 更新单据状态为 state = 3  -->
	<update id="updateBatchCollect" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE med_require_main SET state = 3
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and		hos_id = #{item.hos_id,jdbcType=INTEGER}
				and		copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and		req_id =#{item.req_id,jdbcType=INTEGER}

		</foreach>
	</update>
	
	
	
	<!-- 审核页面查询 -->
	<select id="queryConfirm" parameterType="java.util.Map" resultMap="medRequireMain">
		SELECT
	      a.group_id,
	      a.hos_id,
	      a.copy_code,
	      a.req_id,
	      a.req_code,
	      a.dept_no,
	      a.dept_id,
	      a.stock_no,
	      a.stock_id,
	      hsd.store_code||' '||hsd.store_name store_name,
	      b.dept_code||' '||b.dept_name dept_names,
	      b.dept_name,
	      c.user_name maker,
	      a.make_date make_date,
	      a.is_submit,
	      su.user_name checker,
	      a.check_date,
	      a.state,
	      mrpr.pur_id,
	      a.other_inv,
	      a.return_reason
	    FROM  MED_REQUIRE_MAIN a
	    left join hos_dept_dict b 
	         on a.dept_no = b.dept_no 
	         and a.dept_id = b.dept_id  
	         and a.hos_id = b.hos_id 
	         and a.group_id = b.group_id
	    left join sys_user c    
	         on c.user_id = a.maker  
	         and c.hos_id = a.hos_id
	         and c.group_id = a.group_id
	    left join sys_user su
	         on su.user_id = a.checker 
	         and su.hos_id = a.hos_id
	         and su.group_id = a.group_id
	    left join  med_req_pur_rela  mrpr 
	         on mrpr.req_id = a.req_id
	         and mrpr.hos_id = a.hos_id
	         and mrpr.group_id = a.hos_id
	         and mrpr.copy_code = a.copy_code 
	    left join hos_store_dict hsd on hsd.store_id = a.stock_id
	    	and hsd.store_no = a.stock_no
	    	and hsd.hos_id = a.hos_id
	    	and hsd.group_id = a.group_id
	    	and hsd.is_stop = 0						
		<where> a.group_id = #{group_id}	
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			and a.is_collect = 0
			<if test="begin_date != null and begin_date != ''">
				AND a.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				AND  a.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND a.dept_no = #{dept_no}
			</if>
			<if test="brif != null and brif != ''">
				AND brif  like  '%'||#{brif}||'%'
			</if>
			<if test="store_no != null and store_no != ''">
				AND a.stock_no = #{store_no}
			</if>
			<if test="store_id != null and store_id != ''">
				AND a.stock_id = #{store_id}
			</if>
			<if test="state != null and state != ''">
				AND state = #{state}
			</if>
				AND is_submit = 1
				
			<if test="is_return != null and is_return != ''">
				AND is_return = #{is_return}
			</if>
			
		</where>
		order by req_id desc
	</select>
	
	<!-- 汇总页面查询 -->
	<select id="queryCollect" parameterType="java.util.Map" resultMap="medRequireMain">
		select 
			  mid.inv_id,
			  mid.inv_no,
			  mid.inv_code,
			  mid.inv_name,
			  mid.inv_model,
			  hu.unit_name,
			  ib.begin_amount, --期初库存
			  e.cur_amount,--当前库存
			  a.amount req_amount,      --需求数量
			  abs(nvl(a.amount, 0) - nvl(e.cur_amount, 0))  differ ,   --差量
			  mid.plan_price price,   --单价
			  abs((nvl(a.amount, 0) - nvl(e.cur_amount, 0))) * mid.plan_price  money  --金额
			 from (
			    select md.inv_id,
			    	sum(nvl(md.amount,0)) amount 
			    from med_require_main ma
			    left join med_require_detail md on ma.req_id = md.req_id 
			    	and ma.hos_id = md.hos_id 
			    	and ma.group_id = md.group_id 
			    	and ma.copy_code  = md.copy_code
			    where ma.make_date between to_date(#{begin_date},'yyyy/MM/dd') and to_date(#{end_date},'yyyy/MM/dd')
			          and ma.hos_id = #{hos_id}
			          and ma.group_id = #{group_id}
			          and ma.copy_code = #{copy_code}
			          and ma.state = 2
			          and ma.stock_id = #{store_id}
			          and ma.stock_no = #{store_no}
			          and ma.is_collect = 0
			          and ma.is_submit = 1
			          group by md.inv_id
			  ) a  
			  left join med_inv_dict mid on mid.is_stop=0 
			  	and mid.inv_id = a.inv_id 
			  	and mid.hos_id = #{hos_id} 
			  	and mid.group_id = #{group_id} 
			  	and mid.copy_code = #{copy_code}
			  left join hos_unit hu on hu.group_id = mid.group_id 
			  	and hu.hos_id = mid.hos_id 
			  	and hu.is_stop = 0
			  	and hu.unit_code = mid.unit_code
			  left join (
			       select inv_id ,
			       	sum(nvl(begin_amount,0)) begin_amount 
			       from med_inv_balance
			       where year = #{acc_year} 
			       	and month = #{acc_month} 
			       	and store_id = #{store_id} 
			       	and copy_code = #{copy_code} 
			       	and hos_id = #{hos_id} 
			       	and group_id = #{group_id}
			       group by inv_id
			  ) ib on ib.inv_id = a.inv_id
			  left join med_inv_hold e on e.inv_id = a.inv_id 
			  	and  e.group_id = #{group_id} 
			  	and  e.hos_id = #{hos_id} 
			  	and e.copy_code = #{copy_code}
     		order by mid.inv_code  
	</select>
	
	<!-- 汇总明细  计划单查看 -->
	<select id="queryCollectDetail" parameterType="java.util.Map" resultMap="medRequireMain">
			SELECT mrm.req_id  req_id, 
				mrm.req_code  req_code, 
				hd.dept_name  dept_name, 
				nvl(mrd.amount, 0)  req_amount, 
				0  exec_amount, 
				nvl(mrd.price, 0)  price, 
				nvl(mrd.price, 0) * nvl(mrd.amount, 0)  money
			  FROM med_require_main mrm 
			  LEFT JOIN med_require_detail mrd ON mrd.group_id = mrm.group_id
				  AND mrd.hos_id = mrm.hos_id
				  AND mrd.copy_code = mrm.copy_code
				  AND mrd.req_id = mrm.req_id 
			  LEFT JOIN hos_dept_dict hd ON hd.dept_no = mrm.dept_no
				  AND hd.dept_id = mrm.dept_id
				  AND hd.group_id = mrm.group_id
				  AND hd.hos_id = mrm.hos_id
				  AND hd.is_stop = 0 
			  LEFT JOIN hos_store_dict hs ON hs.store_no = mrm.stock_no
				  AND hs.store_id = mrm.stock_id
				  AND hs.group_id = mrm.group_id
				  AND hs.hos_id = mrm.hos_id
				  AND hs.is_stop = 0 
			  LEFT JOIN med_inv_dict mid ON mid.inv_no = mrd.inv_no
				  AND mid.inv_id = mrd.inv_id
				  AND mid.group_id = mrd.group_id
				  AND mid.copy_code = mrd.copy_code
				  AND mid.hos_id = mrd.hos_id
				  AND mid.is_stop = 0 
		      where mrm.copy_code = #{copy_code}
		         and mrm.group_id = #{group_id}
		         and mrm.hos_id = #{hos_id} 
		         and mid.inv_no = #{inv_no}
		         and mid.inv_id = #{inv_id}
		         and mrm.stock_no = #{store_no}
		         and mrm.stock_id = #{store_id}
		         <if test="begin_date != null and begin_date != ''">
					AND mrm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
				</if>
				<if test="end_date != null and end_date != ''">
					AND  mrm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
				</if>
			
		         and mrm.state = 2 
		         and mrm.is_collect = 0
		         and mrm.is_submit = 1
		    order by mrm.req_id
	
	</select>
	
	<!-- 汇总需求计划查询 -->
	<select id="queryCollectQ" parameterType="java.util.Map" resultMap="medRequireMain">
		select mrm.req_id,
		       pum.pur_id,
		       mrm.req_code,
		       pum.pur_code,
		       hsd.store_name,
		       to_char(mrm.make_date,'yyyy-MM-dd') make_date,
		       su.user_name maker,
		       mrm.state state,
		       '查看明细' other_inv
		from med_require_main mrm 
		left join hos_store_dict hsd on mrm.hos_id = hsd.hos_id and mrm.group_id = hsd.group_id and mrm.stock_no = hsd.store_no 
		     and hsd.store_id = mrm.stock_id and hsd.is_stop = 0
		left join sys_user su on su.user_id = mrm.maker and su.copy_code = mrm.copy_code and su.group_id = mrm.group_id 
		     and su.hos_id = mrm.hos_id
		left join  med_req_pur_rela  mrpr  on mrpr.req_id = mrm.req_id  and mrpr.hos_id = mrm.hos_id and mrpr.group_id = mrm.hos_id
			 and mrpr.copy_code = mrm.copy_code
		left join med_pur_main pum on pum.pur_id = mrpr.pur_id and pum.copy_code = mrpr.copy_code and pum.hos_id = mrpr.hos_id
		     and pum.group_id = mrpr.group_id
		where mrm.hos_id = #{hos_id}
		      and mrm.group_id = #{group_id}
		      and mrm.copy_code = #{copy_code}
		      and mrm.stock_no = #{store_no}
		      and mrm.stock_id = #{store_id}
		      and mrm.is_collect = 1
		      and mrm.state = 2
		      and substr(to_char(mrm.make_date,'yyyyMMdd'),0,6) between #{accYearB}||''||#{accMonthB} and #{accYearE}||''||#{accMonthE}
	
	</select>
	<!-- 汇总查询   汇总单号查询明细  -->
	<select id="queryCollectStore" parameterType="java.util.Map" resultMap="medRequireMain">
		select mrm.req_code,
		       hsd.store_name,
		       mid.inv_code,
		       mid.inv_name,
		       mid.inv_model,
		       hu.unit_name,
		       nvl(aa.req_amount,0) amount,
		       mid.plan_price price,
		       nvl(aa.req_amount,0)*nvl(mid.plan_price,0) money
		from med_require_main mrm 
		left join hos_store_dict hsd on mrm.hos_id = hsd.hos_id and mrm.group_id = hsd.group_id and mrm.stock_no = hsd.store_no 
		     and hsd.store_id = mrm.stock_id and hsd.is_stop = 0
		left join (
		     select group_id,hos_id,copy_code,total_id,inv_id,sum(nvl(req_amount,0)) req_amount
		     from med_require_rela
		     where group_id = #{group_id} 
		     	and hos_id = #{hos_id} 
		     	and copy_code = #{copy_code}  
		     	and total_id = #{req_id}
		     group by group_id,hos_id,copy_code,total_id,inv_id
		) aa on aa.group_id = mrm.group_id and aa.hos_id = mrm.hos_id and aa.copy_code = mrm.copy_code and mrm.req_id = aa.total_id
		left join med_inv_dict mid on mid.inv_id = aa.inv_id and mid.copy_code = aa.copy_code and mid.hos_id = aa.hos_id
		     and mid.group_id = aa.group_id  and mid.is_stop = 0
		left join hos_unit hu on hu.group_id = mid.group_id and hu.hos_id = mid.hos_id and hu.unit_code = mid.unit_code
		     and hu.is_stop = 0
		where mrm.hos_id = #{hos_id}
		      and mrm.group_id = #{group_id}
		      and mrm.copy_code = #{copy_code}
		      and mrm.req_id = #{req_id}
	</select>
	
	<!--汇总查询 明细查询  -->
	<select id="queryCollectDept" parameterType="java.util.Map" resultMap="medRequireMain">
		select  ma.req_code,
		        hdd.dept_name,
		        mid.inv_code,
		        mid.inv_name,
		        mid.inv_model,
		        hu.unit_name,
		        nvl(mrd.amount,0) amount,
		        nvl(mrd.price,0) price,
		        nvl(mrd.price,0) * nvl(mrd.amount,0) money
		from med_require_main ma 
		join (
		  select mrr.req_id,
		  	mrr.copy_code ,
		  	mrr.group_id ,
		  	mrr.hos_id ,
		  	mrr.inv_id
		  from med_require_rela mrr
		  left join med_require_main mrm on mrm.req_id = mrr.total_id 
		  	   and mrr.group_id = mrm.group_id 
		  	   and mrr.hos_id = mrm.hos_id 
		       and mrm.copy_code = mrr.copy_code
		  where mrr.copy_code = #{copy_code}
		        and mrr.group_id = #{group_id}
		        and mrr.hos_id = #{hos_id}
		        and mrr.total_id = #{req_id}
		) mb on ma.req_id = mb.req_id 
			and ma.copy_code = mb.copy_code 
			and ma.group_id = mb.group_id 
			and ma.hos_id = mb.hos_id
		left join hos_dept_dict hdd on hdd.dept_no = ma.dept_no 
			and hdd.dept_id = ma.dept_id 
			and hdd.group_id  = ma.group_id
		    and hdd.hos_id = ma.hos_id 
		    and hdd.is_stop = 0
		left join med_require_detail mrd on mrd.copy_code = ma.copy_code 
			and mrd.group_id = ma.group_id 
			and mrd.hos_id = ma.hos_id
		    and mrd.req_id = ma.req_id
		    and mrd.inv_id = mb.inv_id
		left join med_inv_dict mid on mid.inv_no = mrd.inv_no 
			and mid.inv_id = mrd.inv_id 
			and mid.copy_code = mrd.copy_code 
		    and mid.hos_id = mrd.hos_id 
		    and mid.group_id = mrd.group_id 
		    and mid.is_stop = 0
		left join hos_unit hu on hu.unit_code = mid.unit_code 
			and hu.group_id = mid.group_id 
			and hu.hos_id = mid.hos_id
		    and hu.is_stop = 0
		where ma.is_collect = 0
	</select>
	
	
	
	<!-- 计划页面查询 -->
	<select id="query" parameterType="java.util.Map" resultMap="medRequireMain">

		SELECT
	      a.group_id,
	      a.hos_id,
	      a.copy_code,
	      a.req_id,
	      a.req_code,
	      b.dept_name,
	      a.dept_id,
	      a.dept_no,
	      a.stock_id,
	      a.stock_no,
	      hsd.store_code||' '||hsd.store_name store_name,
	      b.dept_code||' '||b.dept_name dept_names,
	      c.user_name maker,
	      to_char(a.make_date,'yyyy-mm-dd') make_date,
	      a.is_submit,
	      su.user_name checker,
	      a.check_date,
	      a.state,
	      mrpr.pur_id,
	      a.other_inv,
	      a.return_reason
	    FROM  MED_REQUIRE_MAIN a
	    left join hos_dept_dict b 
	         on a.dept_no = b.dept_no 
	         and a.dept_id = b.dept_id  
	         and a.hos_id = b.hos_id 
	         and a.group_id = b.group_id
	    left join sys_user c    
	         on c.user_id = a.maker  
	         and c.hos_id = a.hos_id
	         and c.group_id = a.group_id
	    left join sys_user su
	         on su.user_id = a.checker 
	         and su.hos_id = a.hos_id
	         and su.group_id = a.group_id
	    left join  med_req_pur_rela  mrpr 
	         on mrpr.req_id = a.req_id
	         and mrpr.hos_id = a.hos_id
	         and mrpr.group_id = a.hos_id
	         and mrpr.copy_code = a.copy_code 
	    left join hos_store_dict hsd on hsd.store_id = a.stock_id
	    	and hsd.store_no = a.stock_no
	    	and hsd.hos_id = a.hos_id
	    	and hsd.group_id = a.group_id
	    	and hsd.is_stop = 0	
	    							
		<where>
			<if test="group_id != null and group_id != ''">
				 a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code}
			</if>
			<if test="req_id != null and req_id != ''">
				AND a.req_id = #{req_id}
			</if>
			<if test="req_code != null and req_code != ''">
				AND a.req_code = #{req_code}
			</if>
			<if test="begin_date != null and begin_date != ''">
				AND a.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				AND  a.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND a.dept_no = #{dept_no}
			</if>
			<if test="brif != null and brif != ''">
				AND brif  like  '%'||#{brif}||'%'
			</if>
			<if test="store_no != null and store_no != ''">
				AND a.stock_no = #{store_no}
			</if>
			<if test="store_id != null and store_id != ''">
				AND a.stock_id = #{store_no}
			</if>
			<if test="is_submit != null and is_submit != ''">
				AND is_submit = #{is_submit}
			</if>
			<if test="is_return != null and is_return != ''">
				AND is_return = #{is_return}
			</if>
			<if test="state != null and state != ''">
				AND state = #{state}
			</if>
			and a.is_collect = 0
		</where>
		order by req_id desc
	</select>
	<select id="queryByCode" resultMap="medRequireMain" parameterType="java.util.Map">

		SELECT
	      a.group_id,
	      a.hos_id,
	      a.copy_code,
	      a.req_id,
	      a.req_code,
	      a.dept_no,
	      a.dept_id,
	      b.dept_code||' '||b.dept_name dept_names,
	      a.stock_no,
	      a.stock_id,
	      c.store_code||' '||c.store_name store_name,
	      to_char(a.make_date,'yyyy-mm-dd') make_date,
	      a.other_inv,
	      a.state
	    FROM med_require_main a
	    left join hos_dept_dict b on a.dept_id = b.dept_id 
	      and a.dept_no = b.dept_no 
	      and a.hos_id = b.hos_id
	      and a.group_id = b.group_id
	      and b.is_stop = 0
	    left join hos_store_dict c on a.stock_no = c.store_no 
	      and a.stock_id = c.store_id
	      and a.hos_id = c.hos_id
	      and a.group_id = c.group_id
	      and c.is_stop = 0
			
		WHERE a.group_id = 	#{group_id} 
			and a.hos_id = #{hos_id}
			and	a.copy_code = #{copy_code} 
			and	a.req_id =#{req_id}

	</select>
	<select id="queryByUniqueness" resultMap="medRequireMain" parameterType="java.util.Map">

		SELECT
			group_id,
			hos_id,
			copy_code,
			req_id,
			req_code,
			brif,
			dept_no,	
			dept_id,
			stock_no,
			stock_id,
			maker,
			make_date,
			checker,
			check_date,
			state,
			req_type,
			is_collect,
			is_submit,
			is_return,
			return_reason,
			other_inv
		FROM
		MED_REQUIRE_MAIN
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="req_id != null and req_id != ''">
				AND req_id = #{req_id,jdbcType=INTEGER}
			</if>
			<if test="req_code != null and req_code != ''">
				AND req_code = #{req_code,jdbcType=VARCHAR}
			</if>
			<if test="brif != null and brif != ''">
				AND brif = #{brif,jdbcType=VARCHAR}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="stock_no != null and stock_no != ''">
				AND stock_no = #{stock_no,jdbcType=INTEGER}
			</if>
			<if test="stock_id != null and stock_id != ''">
				AND stock_id = #{stock_id,jdbcType=INTEGER}
			</if>
			<if test="maker != null and maker != ''">
				AND maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="make_date != null and make_date != ''">
				AND make_date = #{make_date,jdbcType=DATE}
			</if>
			<if test="checker != null and checker != ''">
				AND checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date != ''">
				AND check_date = #{check_date,jdbcType=DATE}
			</if>
			<if test="state != null and state != ''">
				AND state = #{state,jdbcType=INTEGER}
			</if>
			<if test="req_type != null and req_type != ''">
				AND req_type = #{req_type,jdbcType=INTEGER}
			</if>
			<if test="is_collect != null and is_collect != ''">
				AND is_collect = #{is_collect,jdbcType=INTEGER}
			</if>
			<if test="is_submit != null and is_submit != ''">
				AND is_submit = #{is_submit,jdbcType=INTEGER}
			</if>
			<if test="is_return != null and is_return != ''">
				AND is_return = #{is_return,jdbcType=INTEGER}
			</if>
			<if test="return_reason != null and return_reason != ''">
				AND return_reason = #{return_reason,jdbcType=VARCHAR}
			</if>
			<if test="other_inv != null and other_inv != ''">
				AND other_inv = #{other_inv,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	
	
</mapper>

