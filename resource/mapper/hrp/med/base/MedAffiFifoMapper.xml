<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.base.MedAffiFifoMapper">
	<!-- 代销出入库结存表  med_affi_fifo -->
	<resultMap id="medAffiFifo" type="java.util.Map">
	
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="store_id" column="store_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="sup_id" column="sup_id"/>
		<result property="batch_sn" column="batch_sn"/>
		<result property="batch_no" column="batch_no"/>
		<result property="bar_code" column="bar_code"/>
		<result property="price" column="price"/>
		<result property="sale_price" column="sale_price"/>
		<result property="sale_money" column="sale_money"/>
		<result property="in_amount" column="in_amount"/>
		<result property="in_money" column="in_money"/>
		<result property="in_sale_money" column="in_sale_money"/>
		<result property="out_amount" column="out_amount"/>
		<result property="out_money" column="out_money"/>
		<result property="out_sale_money" column="out_sale_money"/>
		<result property="left_amount" column="left_amount"/>
		<result property="left_money" column="left_money"/>
		<result property="left_sale_money" column="left_sale_money"/>
		<result property="remove_zero_error" column="remove_zero_error"/>
		<result property="sale_zero_error" column="sale_zero_error"/>
		<result property="location_id" column="location_id"/>
		<result property="imme_amount" column="imme_amount"/>
		
	</resultMap>
	
	<!-- 插入主表数据 -->
	<insert id="add" useGeneratedKeys="true" >	
		INSERT INTO med_affi_fifo (
			group_id, 
			hos_id, 
			copy_code, 
			inv_id,
			store_id
			<if test="batch_sn != null and batch_sn != ''">, batch_sn</if>
			<if test="batch_no != null and batch_no != ''">, batch_no</if>
			<if test="bar_code != null and bar_code != ''">, bar_code</if>
			<if test="price != null ">, price</if>
			<if test="in_amount != null ">, in_amount</if>
			<if test="in_money != null ">, in_money</if>
			<if test="out_amount != null ">, out_amount</if>
			<if test="out_money != null ">, out_money</if>
			<if test="left_amount != null ">, left_amount</if>
			<if test="left_money != null ">, left_money</if>
			<if test="remove_zero_error != null ">, remove_zero_error</if>
			<if test="location_id != null">, location_id</if>
			<if test="imme_amount != null ">, imme_amount</if>
			
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{inv_id,jdbcType=INTEGER},
			#{store_id,jdbcType=INTEGER}
			<if test="batch_sn != null and batch_sn != ''">, #{batch_sn,jdbcType=INTEGER}</if>
			<if test="batch_no != null and batch_no != ''">, #{batch_no,jdbcType=VARCHAR}</if>
			<if test="bar_code != null and bar_code != ''">, #{bar_code,jdbcType=VARCHAR}</if>
			<if test="price != null ">, #{price,jdbcType=INTEGER}</if>
			<if test="in_amount != null ">, #{in_amount,jdbcType=INTEGER}</if>
			<if test="in_money != null ">, #{in_money,jdbcType=INTEGER}</if>
			<if test="out_amount != null ">, #{out_amount,jdbcType=INTEGER}</if>
			<if test="out_money != null ">, #{out_money,jdbcType=INTEGER}</if>
			<if test="left_amount != null ">, #{left_amount,jdbcType=INTEGER}</if>
			<if test="left_money != null ">, #{left_money,jdbcType=INTEGER}</if>
			<if test="remove_zero_error != null ">, #{remove_zero_error,jdbcType=INTEGER}</if>
			<if test="location_id != null ">, #{location_id,jdbcType=INTEGER}</if>
			<if test="imme_amount != null ">, #{imme_amount,jdbcType=INTEGER}</if>	
		)
	</insert>
	
	<!-- 批量插入 -->
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO med_affi_fifo (
				group_id, hos_id, copy_code, inv_id, store_id, batch_sn, batch_no, bar_code, price, sale_price, 
				in_amount, in_money, in_sale_money, out_amount, out_money, out_sale_money, 
				left_amount, left_money, left_sale_money, remove_zero_error, sale_zero_error, location_id
		   ) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.store_id,jdbcType=INTEGER}, 
				#{item.batch_sn,jdbcType=INTEGER}, 
				#{item.batch_no,jdbcType=VARCHAR}, 
				#{item.bar_code,jdbcType=VARCHAR}, 
				#{item.price,jdbcType=NUMERIC}, 
				#{item.sale_price,jdbcType=NUMERIC}, 
				#{item.in_amount,jdbcType=NUMERIC}, 
				#{item.in_money,jdbcType=NUMERIC}, 
				#{item.in_sale_money,jdbcType=NUMERIC}, 
				#{item.out_amount,jdbcType=NUMERIC}, 
				#{item.out_money,jdbcType=NUMERIC}, 
				#{item.out_sale_money,jdbcType=NUMERIC}, 
				#{item.left_amount,jdbcType=NUMERIC}, 
				#{item.left_money,jdbcType=NUMERIC}, 
				#{item.left_sale_money,jdbcType=NUMERIC}, 
				#{item.remove_zero_error,jdbcType=NUMERIC}, 
				#{item.sale_zero_error,jdbcType=NUMERIC}, 
				#{item.location_id,jdbcType=INTEGER}
			)
		</foreach>
	</insert>
	
	
	<!-- 更新代销入库主表 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE med_affi_fifo
			<trim prefix="SET"  suffixOverrides=","> 
				<if test="in_amount != null">
					in_amount = #{in_amount,jdbcType=INTEGER},
				</if>
				<if test="in_money != null ">
					in_money = #{in_money,jdbcType=INTEGER},
				</if>
				<if test="in_sale_money != null ">
					in_sale_money = #{in_sale_money,jdbcType=INTEGER},
				</if>
				<if test="out_amount != null ">
					out_amount = #{out_amount,jdbcType=INTEGER},
				</if>
				<if test="out_money != null ">
					out_money = #{out_money,jdbcType=INTEGER},
				</if>
				<if test="left_amount != null ">
					left_amount = #{left_amount,jdbcType=INTEGER},
				</if>
				<if test="left_money != null ">
					left_money = #{left_money,jdbcType=INTEGER},
				</if>
				<if test="remove_zero_error != null ">
					remove_zero_error = #{remove_zero_error,jdbcType=INTEGER},
				</if>
				<if test="location_id != null ">
					location_id = #{location_id,jdbcType=INTEGER},
				</if>
				<if test="imme_amount != null ">
					imme_amount = #{imme_amount,jdbcType=INTEGER},
				</if>
				
			</trim>
			WHERE group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 	
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and inv_id =#{inv_id,jdbcType=INTEGER}
				and store_id =#{store_id,jdbcType=INTEGER}	
				and batch_sn =#{batch_sn,jdbcType=INTEGER}
				and batch_no =#{batch_no,jdbcType=VARCHAR}	
				and bar_code =#{bar_code,jdbcType=VARCHAR}	
				and price = #{price,jdbcType=INTEGER}
	</update>
	
	<!-- 批量更新代销入库明细表 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_fifo
			<trim prefix="SET"  suffixOverrides=","> 
				<if test="item.in_amount != null ">
					in_amount = #{item.in_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.in_money != null ">
					in_money = #{item.in_money,jdbcType=NUMERIC},
				</if>
				<if test="item.in_sale_money != null ">
					in_sale_money = #{item.in_sale_money,jdbcType=NUMERIC},
				</if>
				<if test="item.out_amount != null ">
					out_amount = #{item.out_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.out_money != null ">
					out_money = #{item.out_money,jdbcType=NUMERIC},
				</if>
				<if test="item.out_sale_money != null ">
					out_sale_money = #{item.out_sale_money,jdbcType=NUMERIC},
				</if>
				<if test="item.left_amount != null ">
					left_amount = #{item.left_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.left_money != null ">
					left_money = #{item.left_money,jdbcType=NUMERIC},
				</if>
				<if test="item.left_sale_money != null ">
					left_sale_money = #{item.left_sale_money,jdbcType=NUMERIC},
				</if>
				<if test="item.remove_zero_error != null ">
					remove_zero_error = #{item.remove_zero_error,jdbcType=NUMERIC},
				</if>
				<if test="item.sale_zero_error != null ">
					sale_zero_error = #{item.sale_zero_error,jdbcType=NUMERIC},
				</if>
			</trim>
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND inv_id = #{item.inv_id,jdbcType=INTEGER}
				AND price = #{item.price,jdbcType=FLOAT}
				AND store_id = #{item.store_id,jdbcType=INTEGER}	
				AND batch_sn = #{item.batch_sn,jdbcType=INTEGER}
				AND batch_no = #{item.batch_no,jdbcType=VARCHAR}	
				AND bar_code = #{item.bar_code,jdbcType=VARCHAR}
				AND location_id = #{item.location_id,jdbcType=INTEGER} 
		</foreach>
	</update>
	
	<!-- 删除代销入库主表信息 -->
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM med_affi_fifo 
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER} 
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER} 	
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
			</if>
			<if test="inv_id != null and inv_id != ''">
				and inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				and store_id = #{store_id,jdbcType=INTEGER}	
			</if>
			<if test="location_id != null and location_id != ''">
				and location_id = #{location_id,jdbcType=INTEGER}	
			</if>
			<if test="batch_sn != null and batch_sn != ''">
				and batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != ''">
				and batch_no = #{batch_no,jdbcType=VARCHAR}	
			</if>
			<if test="bar_code != null and bar_code != ''">
				and bar_code = #{bar_code,jdbcType=VARCHAR}	
			</if>
		</where> 
	</delete>
	
	
	<!-- 批量删除 代销入库表明细表信息 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM med_affi_fifo
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			delete from med_affi_fifo
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					and group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.inv_id != null and item.inv_id != ''">
					and inv_id = #{item.inv_id,jdbcType=INTEGER}
				</if>
				<if test="item.store_id != null and item.store_id != ''">
					and store_id = #{item.store_id,jdbcType=INTEGER}	
				</if>
				<if test="item.location_id != null and item.location_id != ''">
					and location_id = #{item.location_id,jdbcType=INTEGER}	
				</if>
				<if test="item.batch_sn != null and item.batch_sn != ''">
					and batch_sn = #{item.batch_sn,jdbcType=INTEGER}
				</if>
				<if test="item.batch_no != null and item.batch_no != ''">
					and batch_no = #{item.batch_no,jdbcType=VARCHAR}	
				</if>
				<if test="item.bar_code != null and item.bar_code != ''">
					and bar_code = #{item.bar_code,jdbcType=VARCHAR}	
				</if>
			</where>
		</foreach>
	</delete>
	
	<!-- 根据主键查询 代销入库主表信息 -->
	<select id="query" resultMap="medAffiFifo" parameterType="java.util.Map" >
		SELECT 
			group_id, 
			hos_id, 
			copy_code, 
			inv_id, 
			store_id,
			batch_sn,
			batch_no,
			bar_code,
			nvl(price,0) price,
			nvl(in_amount,0) in_amount,
			nvl(in_money,0) in_money,
			nvl(out_amount,0) out_amount,
			nvl(out_money,0) out_money,
			nvl(left_amount,0) left_amount,
			nvl(left_money,0) left_money,
			nvl(remove_zero_error,0) remove_zero_error,
			location_id,
			nvl(imme_amount,0) imme_amount
		FROM med_affi_fifo
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="inv_id != null and inv_id != ''">
				and inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				and store_id = #{store_id,jdbcType=INTEGER}	
			</if>
			<if test="location_id != null and location_id != ''">
				and location_id = #{location_id,jdbcType=INTEGER}	
			</if>
			<if test="batch_sn != null and batch_sn != ''">
				and batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != ''">
				and batch_no = #{batch_no,jdbcType=VARCHAR}	
			</if>
			<if test="bar_code != null and bar_code != ''">
				and bar_code = #{bar_code,jdbcType=VARCHAR}	
			</if>
		</where> 
	</select>
	
	<!-- 根据药品查询表信息 -->
	<select id="queryByInvList" resultMap="medAffiFifo"  parameterType="java.util.List" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,  
					#{item.store_id,jdbcType=INTEGER} as store_id, 
					#{item.inv_id,jdbcType=INTEGER} as inv_id, 
					#{item.price,jdbcType=FLOAT} as price, 
					#{item.batch_no,jdbcType=INTEGER} as batch_no, 
					#{item.batch_sn,jdbcType=INTEGER} as batch_sn, 
					#{item.bar_code,jdbcType=INTEGER} as bar_code, 
					#{item.location_id,jdbcType=INTEGER} as location_id
				from dual
			</foreach>
		)
		select a.group_id, 
			a.hos_id, 
			a.copy_code, 
			a.store_id, 
			a.inv_id, 
			a.batch_no, 
			a.batch_sn, 
			a.bar_code, 
			nvl(b.price, 0) as price, 
			nvl(b.sale_price, 0) as sale_price, 
			nvl(b.in_amount, 0) as in_amount, 
			nvl(b.in_money, 0) as in_money, 
			nvl(b.in_sale_money, 0) as in_sale_money, 
			nvl(b.out_amount, 0) as out_amount, 
			nvl(b.out_money, 0) as out_money, 
			nvl(b.out_sale_money, 0) as out_sale_money, 
			nvl(b.left_amount, 0) as left_amount, 
			nvl(b.left_money, 0) as left_money, 
			nvl(b.left_sale_money, 0) as left_sale_money, 
			nvl(b.remove_zero_error, 0) as remove_zero_error, 
			nvl(b.sale_zero_error, 0) as sale_zero_error, 
			nvl(b.location_id, 0) location_id 
		from list_temp a
		inner join med_affi_fifo b on a.group_id = b.group_id 
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code 
			and a.store_id = b.store_id
			and a.inv_id = b.inv_id 
			and a.price = b.price 
			and a.batch_no = b.batch_no
			and a.batch_sn = b.batch_sn 
			and a.bar_code = b.bar_code
			and nvl(a.location_id, 0) = nvl(b.location_id, 0)
	</select>
</mapper>

