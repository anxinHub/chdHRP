<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.storage.out.MedCommonOutApplyMapper">

	<resultMap id="medApplyMain" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="apply_id" column="apply_id" />
		<result property="apply_no" column="apply_no" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="app_emp" column="app_emp" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="app_date" column="app_date" />
		<result property="maker" column="maker" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="sender" column="sender" />
		<result property="send_date" column="send_date" />
		<result property="state" column="state" />
		<result property="back_reason" column="back_reason" />
		<result property="brief" column="brief" />
		<result property="rela_state" column="rela_state" />
		<result property="response_emp" column="response_emp"/>
		<result property="response_code" column="response_code"/>
		<result property="response_name" column="response_name"/>
	</resultMap>

	<resultMap id="medApplyDetail" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="apply_id" column="apply_id" />
		<result property="detail_id" column="detail_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="fac_name" column="fac_name" />
		<result property="is_com" column="is_com" />
		<result property="is_disinfect" column="is_disinfect" />
		<result property="price" column="price" />
		<result property="app_amount" column="app_amount" />
		<result property="amount_money" column="amount_money" />
		<result property="note" column="note" />
		<result property="bid_code" column="bid_code" />
		<result property="is_sec_whg" column="is_sec_whg" />
		<result property="is_closed" column="is_closed" />
		<result property="out_amount" column="out_amount" />
		<result property="pur_amount" column="pur_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="imme_amount" column="imme_amount" />
		<result property="inv_structure" column="inv_structure" />
	</resultMap>
	<resultMap id="medStoreInv" type="java.util.Map">
		<result property="inv_id" column="inv_id" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
	</resultMap>
	
	<resultMap id="medApplyDetailMap" type="java.util.Map">
	<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="apply_id" column="apply_id" />
		<result property="apply_no" column="apply_no" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="app_emp" column="app_emp" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="app_date" column="app_date" />
		<result property="maker" column="maker" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="sender" column="sender" />
		<result property="send_date" column="send_date" />
		<result property="state" column="state" />
		<result property="back_reason" column="back_reason" />
		<result property="brief" column="brief" />
		<result property="rela_state" column="rela_state" />
		<result property="response_emp" column="response_emp"/>
		<result property="response_code" column="response_code"/>
		<result property="response_name" column="response_name"/>
		<result property="detail_id" column="detail_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="fac_name" column="fac_name" />
		<result property="is_com" column="is_com" />
		<result property="price" column="price" />
		<result property="app_amount" column="app_amount" />
		<result property="amount_money" column="amount_money" />
		<result property="note" column="note" />
		<result property="bid_code" column="bid_code" />
		<result property="is_sec_whg" column="is_sec_whg" />
		<result property="is_closed" column="is_closed" />
		<result property="out_amount" column="out_amount" />
		<result property="pur_amount" column="pur_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="inv_structure" column="inv_structure" />
	</resultMap>

	<select id="query" resultMap="medApplyMain" parameterType="java.util.Map">
		select a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no,hsd.store_name,
			to_char(a.app_date, 'yyyy-MM-dd hh24:mi:ss') app_date, a.brief, b.dept_name,su.user_name as maker , c.emp_name, a.state, a.back_reason,res.emp_name as response_emp,
			case 
				when ((nvl(e.rela_amount, 0) = 0) and (nvl(e.pur_amount, 0) = 0)) then 1 
				when e.rela_amount = e.app_amount then 3 
				when nvl(e.pur_amount, 0) != 0 then 4
				else 2
			end rela_state
		from med_apply_main a
		left join hos_store_dict hsd on a.group_id = hsd.group_id
			and a.hos_id = hsd.hos_id
			and a.store_id = hsd.store_id
			and hsd.is_stop = 0 
		left join hos_dept_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.dept_id = b.dept_id
			<if test="show_history == 1">
				and a.dept_no = b.dept_no
			</if>
			<if test="show_history == 0">
				and b.is_stop = 0
			</if>
		left join hos_emp_dict c
			on a.group_id = c.group_id and a.hos_id = c.hos_id
			and a.app_emp = c.emp_id and c.is_stop = 0
		left join sys_user su on a.group_id= su.group_id and a.hos_id=su.hos_id and a.maker=su.user_id
			and su.is_stop=0
		LEFT JOIN hos_emp_dict res 
		ON 
			a.group_id = res.group_id 
		    AND a.hos_id = res.hos_id
		    AND a.response_emp = res.emp_id
		    AND res.is_stop = 0
		inner join (
			select aa.apply_id,sum(nvl(aa.app_amount,0)) app_amount,sum(nvl(bb.rela_amount,0)) as rela_amount,
				sum(nvl(cc.rela_amount,0)) as pur_amount
	        from (
	             select mad.group_id,mad.hos_id,mad.copy_code,mad.apply_id,mad.detail_id,
	             	sum(nvl(mad.app_amount,0)) app_amount
	             from med_apply_detail mad
	             <if test="inv_code != null and inv_code != ''">
					LEFT JOIN med_inv_dict mid  ON mad.group_id = mid.group_id and mad.hos_id = mid.hos_id
						and mad.copy_code = mid.copy_code and mad.inv_id = mid.inv_id
						and mad.inv_no = mid.inv_no
				 </if>
	             <where>
	             	 	mad.group_id = #{group_id,jdbcType=INTEGER}
					and mad.hos_id = #{hos_id,jdbcType=INTEGER}
					and mad.copy_code = #{copy_code,jdbcType=VARCHAR}		
					and nvl(mad.is_closed, 0) != 1 <!-- 关闭的药品算做全部完成 -->
					<if test="inv_code != null and inv_code != ''">
						AND (
							mid.inv_code like '%${inv_code}%'
							or upper(mid.inv_name) like '%${inv_code}%'
							or upper(mid.inv_model) like '%${inv_code}%'
							or upper(mid.spell_code) like '%${inv_code}%'
							or upper(mid.wbx_code) like '%${inv_code}%'
							or upper(mid.bid_code) like '%${inv_code}%'
							or lower(mid.spell_code) like '%${inv_code}%'
							or lower(mid.bid_code) like '%${inv_code}%'
							or lower(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.inv_name) like '%${inv_code}%'
						)
					</if>
	             </where>
	             group by mad.group_id,mad.hos_id,mad.copy_code,mad.apply_id,mad.detail_id
	        ) aa left join (
	          	select group_id, hos_id, copy_code, rela_type, apply_id , app_detail_id, sum(nvl(rela_amount,0)) as rela_amount
	          	from med_apply_out_rela
	          	<where>
	          			group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
	          	</where>
	            group by group_id, hos_id, copy_code, rela_type, apply_id, app_detail_id
	        ) bb on aa.group_id=bb.group_id and aa.hos_id=bb.hos_id and aa.copy_code=bb.copy_code 
	        	and aa.apply_id=bb.apply_id and aa.detail_id=bb.app_detail_id
	        left join (
	        	select group_id,hos_id,copy_code,rela_type,apply_id,app_detail_id,sum(nvl(rela_amount,0)) as rela_amount
	        	from med_apply_pur_rela
	        	<where>
	        			group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
	        	</where>
	        	group by group_id, hos_id, copy_code, rela_type, apply_id, app_detail_id
	        ) cc on aa.group_id=cc.group_id and aa.hos_id=cc.hos_id and aa.copy_code=cc.copy_code
	        	and aa.apply_id=cc.apply_id and aa.detail_id=cc.app_detail_id
	        group by aa.apply_id
		) e
			on a.apply_id = e.apply_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_app_date != null and begin_app_date != ''">
				and a.app_date &gt;= #{begin_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="end_app_date != null and end_app_date != ''">
				and a.app_date &lt;= #{end_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="dept_id != null and dept_id != '' and dept_id != '00'">
				and a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				and a.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != ''">
				and a.brief like '%${brief}%'
			</if>
			<if test="store_id != null and store_id != '' and store_id != '00'">
				and a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="store_no != null and store_no != ''">
				and a.store_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and a.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="apply_no != null and apply_no != ''">
				AND a.apply_no like '%${apply_no}%'
			</if>
			<if test="dept_id == '00' ">
				and to_char(a.dept_id) in ( select perm_code from v_user_data_perm
				where group_id = #{group_id}
				and hos_id = #{hos_id} and user_id = #{user_id} and table_code =
				'HOS_DEPT_DICT'
				and is_read = 1 and is_write = 1)
			</if>
			<if test="store_id == '00' ">
				and ((to_char(a.store_id) in (
					select perm_code from v_user_data_perm
					where group_id = #{group_id}
						and hos_id = #{hos_id} and user_id = #{user_id} 
						and table_code = 'HOS_STORE_DICT' and is_read = 1
					)) 
				)
			</if>
		order by a.apply_id desc
	</select>

	<!-- 获取一个主表序列 -->
	<select id="queryMedApplyMainSeq" resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MED_APPLY_MAIN_SEQ.nextval FROM DUAL
	</select>

	<!-- 获取一个明细表序列 -->
	<select id="queryMedApplyDetailSeq" resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MED_APPLY_DETAIL_SEQ.nextval FROM DUAL
	</select>

	<!-- 申请单主表添加 -->
	<insert id="addMedApplyMain" parameterType="java.util.Map">
		INSERT INTO MED_APPLY_MAIN (
		group_id, hos_id, copy_code, apply_id, apply_no, dept_id, dept_no, store_id,
		store_no, app_emp, app_date, maker, state, brief,response_emp
		<if test="checker != null and checker != ''">, checker</if>
		<if test="check_date != null and check_date != ''">, check_date</if>
		<if test="sender != null and sender != ''">, sender</if>
		<if test="send_date != null and send_date != ''">, send_date</if>
		<if test="back_reason != null and back_reason != ''">, back_reason</if>
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{apply_id,jdbcType=INTEGER},
		#{apply_no,jdbcType=VARCHAR},
		#{dept_id,jdbcType=INTEGER},
		#{dept_no,jdbcType=INTEGER},
		#{store_id,jdbcType=INTEGER},
		#{store_no,jdbcType=INTEGER},
		#{app_emp,jdbcType=INTEGER},
		#{app_date,jdbcType=TIMESTAMP},
		#{maker,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		#{brief,jdbcType=VARCHAR},
		#{response_emp,jdbcType=INTEGER}
		<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
		<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
		<if test="sender != null and sender != ''">, #{sender,jdbcType=INTEGER}</if>
		<if test="send_date != null and send_date != ''">, #{send_date,jdbcType=DATE}</if>
		<if test="back_reason != null and back_reason != ''">, #{back_reason,jdbcType=VARCHAR}</if>
		)
	</insert>

	<!-- 批量插入主表数据 -->
	<insert id="addMedApplyMainBatch" parameterType="java.util.List">
		INSERT INTO MED_APPLY_MAIN (
		group_id, hos_id, copy_code, apply_id, apply_no, dept_id, dept_no, store_id,
		store_no, app_emp, app_date, 
		maker, state, brief, checker, check_date, sender, send_date, back_reason
		)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			SELECT
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{apply_id,jdbcType=INTEGER},
			#{apply_no,jdbcType=VARCHAR},
			#{dept_id,jdbcType=INTEGER},
			#{dept_no,jdbcType=INTEGER},
			#{store_id,jdbcType=INTEGER},
			#{store_no,jdbcType=INTEGER},
			#{app_emp,jdbcType=INTEGER},
			#{app_date,jdbcType=TIMESTAMP},
			#{maker,jdbcType=INTEGER},
			#{state,jdbcType=INTEGER},
			#{brief,jdbcType=VARCHAR},
			#{checker,jdbcType=INTEGER},
			#{check_date,jdbcType=DATE},
			#{sender,jdbcType=INTEGER},
			#{send_date,jdbcType=DATE},
			#{back_reason,jdbcType=VARCHAR}
			FROM DUAL
		</foreach>
	</insert>
	<!-- 申请单明细表添加（批量） -->
	<insert id="addMedApplyDetail" parameterType="java.util.List">
		INSERT INTO MED_APPLY_DETAIL (
		group_id, hos_id, copy_code, apply_id, detail_id, inv_id, inv_no, app_amount,
		note, is_closed
		)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			select
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.apply_id,jdbcType=INTEGER},
			#{item.detail_id,jdbcType=INTEGER},
			#{item.inv_id,jdbcType=INTEGER},
			#{item.inv_no,jdbcType=VARCHAR},
			#{item.app_amount,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}, 
			0
			from dual
		</foreach>
	</insert>

	<!-- 申请单主表修改 -->
	<update id="updateMedApplyMain" parameterType="java.util.Map">
		UPDATE med_apply_main
		<trim prefix="set" suffixOverrides=",">
			<if test="dept_id != null and dept_id != ''">
				dept_id = #{dept_id,jdbcType=INTEGER},
			</if>
			<if test="dept_no != null and dept_no != ''">
				dept_no = #{dept_no,jdbcType=INTEGER},
			</if>
			<if test="store_id != null and store_id != ''">
				store_id = #{store_id,jdbcType=INTEGER},
			</if>
			<if test="store_no != null and store_no != ''">
				store_no = #{store_no,jdbcType=INTEGER},
			</if>
			<if test="app_emp != null">
				app_emp = #{app_emp,jdbcType=INTEGER},
			</if>
			<if test="app_date != null and app_date != ''">
				app_date = #{app_date,jdbcType=TIMESTAMP},
			</if>
			<if test="brief != null">
				brief = #{brief,jdbcType=VARCHAR},
			</if>
			<if test="response_emp != null">
				response_emp = #{response_emp,jdbcType=VARCHAR},
			</if>
		</trim>
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and apply_id =#{apply_id,jdbcType=INTEGER}
	</update>

	<!-- 申请单明细表修改（批量） -->
	<update id="updateMedApplyDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE med_apply_detail
			<trim prefix="set" suffixOverrides=",">
				<if test="item.inv_id != null and item.inv_id != ''">
					inv_id = #{item.inv_id,jdbcType=INTEGER},
				</if>
				<if test="item.inv_no != null and item.inv_no != ''">
					inv_no = #{item.inv_no,jdbcType=INTEGER},
				</if>
				<if test="item.app_amount != null and item.app_amount != ''">
					app_amount = #{item.app_amount,jdbcType=INTEGER},
				</if>
				<if test="item.note != null">
					note = #{item.note,jdbcType=VARCHAR},
				</if>
			</trim>
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
			and detail_id = #{item.detail_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 申请单主表删除 -->
	<delete id="deleteMedApplyMain" parameterType="java.util.Map">
		DELETE FROM
		med_apply_main
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and apply_id = #{apply_id,jdbcType=INTEGER}
	</delete>

	<!-- 申请单明细表删除 -->
	<delete id="deleteMedApplyDetail" parameterType="java.util.Map">
		DELETE FROM
		med_apply_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and apply_id = #{apply_id,jdbcType=INTEGER}
	</delete>

	<!-- 修改保存时删除页面中不存在的明细数据 -->
	<delete id="deleteMedApplyDetailForUpdate" parameterType="java.util.Map">
		DELETE
		FROM med_apply_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and apply_id = #{apply_id,jdbcType=INTEGER}
		and detail_id not in (${detail_ids})
	</delete>

	<!-- 申请单主表批量删除 -->
	<delete id="deleteMedApplyMainBatch" parameterType="java.util.List">
		DELETE FROM med_apply_main
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code =
			#{item.copy_code,jdbcType=VARCHAR}
			and apply_id =
			#{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<!-- 申请单明细表批量删除 -->
	<delete id="deleteMedApplyDetailBatch" parameterType="java.util.List">
		DELETE FROM med_apply_detail
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code =
			#{item.copy_code,jdbcType=VARCHAR}
			and apply_id =
			#{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<!-- 用于申请单主表加载 -->
	<select id="queryMedApplyMainByCode" resultMap="medApplyMain"
		parameterType="java.util.Map">
		SELECT
			a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no, a.dept_id, a.dept_no,
			b.dept_code, b.dept_name,
			a.store_id, a.store_no, c.store_code, c.store_name, a.app_emp, d.emp_code,
			d.emp_name, a.app_date, a.brief, a.state,
			a.response_emp,e.emp_code as response_code,e.emp_name as response_name
		FROM med_apply_main a
		LEFT JOIN hos_dept_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id
			AND a.dept_id = b.dept_id
			<if test="show_history == 1">
				AND a.dept_no = b.dept_no
			</if>
			<if test="show_history == null or show_history != 1">
				AND b.is_stop = 0
			</if>
		LEFT JOIN hos_store_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id
			AND a.store_id = c.store_id
			<if test="show_history == 1">
				AND a.store_no = c.store_no
			</if>
			<if test="show_history == null or show_history == 0">
				AND c.is_stop = 0
			</if>
		LEFT JOIN hos_emp_dict d
			ON a.group_id = d.group_id AND a.hos_id = d.hos_id
			AND a.app_emp = d.emp_id AND d.is_stop = 0
		LEFT JOIN hos_emp_dict e 
			ON a.group_id = e.group_id
			AND a.hos_id = e.hos_id
			AND a.response_emp = e.emp_id
			AND e.is_stop = 0 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.apply_id = #{apply_id,jdbcType=INTEGER}
	</select>

	<!-- 用于申请单明细表加载 -->
	<select id="queryMedApplyDetailByCode" resultMap="medApplyDetail"
		parameterType="java.util.Map">
		SELECT
			a.group_id, a.hos_id, a.copy_code, a.apply_id, a.detail_id, a.inv_id, a.inv_no,
			b.inv_code,b.bid_code, b.inv_name, nvl(a.is_closed, 0) is_closed, 
			b.inv_model, c.unit_name, d.fac_name, b.is_com,b.is_disinfect, a.app_amount, a.note,
			nvl(b.plan_price, 0) price, a.app_amount*nvl(b.plan_price, 0) amount_money, 
			b.is_sec_whg, nvl(e.out_amount, 0) out_amount, nvl(f.pur_amount, 0) pur_amount, 
			case when b.is_com = 0 then nvl(mih.cur_amount, 0) else nvl(maih.cur_amount, 0) end as cur_amount, 
			b.inv_structure
		FROM med_apply_detail a
		    left join med_inv_hold mih on a.group_id = mih.group_id
    and a.hos_id = mih.hos_id
    and a.copy_code = mih.copy_code 
    and a.inv_id = mih.inv_id 
    and mih.store_id=#{store_id,jdbcType=INTEGER} 
    left join med_affi_inv_hold maih on a.group_id = maih.group_id
    and a.hos_id = maih.hos_id
    and a.copy_code = maih.copy_code 
    and a.inv_id = maih.inv_id 
    and maih.store_id=#{store_id,jdbcType=INTEGER} 
		left join med_inv_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no
			
		left join hos_unit c
			on b.group_id = c.group_id
			and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
		left join hos_fac_dict d
			on b.group_id = d.group_id and b.hos_id = d.hos_id
			and b.fac_id = d.fac_id
			and b.fac_no = d.fac_no
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) out_amount 
			from med_apply_out_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and apply_id = #{apply_id,jdbcType=INTEGER} 
				and <![CDATA[rela_type <> 5]]>
			group by app_detail_id
		) e
			on a.detail_id = e.app_detail_id
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) pur_amount 
			from med_apply_pur_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and apply_id = #{apply_id,jdbcType=INTEGER} 
				and rela_type = 1
			group by app_detail_id
		) f
			on a.detail_id = f.app_detail_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.apply_id = #{apply_id,jdbcType=INTEGER}
	</select>
	<!-- 申请单审核或消审有待修改传入包含list的Map -->
	<update id="auditOrUnAuditBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update med_apply_main set
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and apply_id = #{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</update>
	<!-- 修改是否发送 -->
	<update id="updateBySendBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update med_apply_main set
			state = #{item.state,jdbcType=INTEGER},
			sender = #{item.sender,jdbcType=INTEGER},
			send_date = #{item.send_date,jdbcType=DATE}
			WHERE
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</update>
	<update id="updatebackBySendBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update med_apply_main set 
			state = 1,
			sender = '',
			send_date = ''
			WHERE
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 查询所有配套表 -->
	<select id="queryMatch" parameterType="java.util.Map" resultMap="medApplyDetail">
	with out_temp as
 (select inv_id,
         batch_no,
         bar_code,
         price,
         location_id,
         sum(amount) as amount
    from (select b.inv_id,
                 b.batch_no,
                 b.bar_code,
                 b.price,
                 b.location_id,
                 sum(nvl(b.amount, 0)) as amount
            from med_out_main a
            left join med_out_detail b
              on a.group_id = b.group_id
             and a.hos_id = b.hos_id
             and a.copy_code = b.copy_code
             and a.out_id = b.out_id
           where a.group_id = #{group_id,jdbcType=INTEGER}
             and a.hos_id = #{hos_id,jdbcType=INTEGER}
             and a.copy_code =#{copy_code,jdbcType=VARCHAR}
             and a.store_id = #{store_id,jdbcType=INTEGER}
             AND <![CDATA[ a.state < 3 ]]>
		     AND <![CDATA[ a.bus_type_code <> '21' ]]>
		     AND <![CDATA[ b.amount_money > 0 ]]>
           group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
          union all
          select b.inv_id,
                 b.batch_no,
                 b.bar_code,
                 b.price,
                 b.location_id,
                 -1 * sum(nvl(b.amount, 0)) as amount
            from med_in_main a
            left join med_in_detail b
              on a.group_id = b.group_id
             and a.hos_id = b.hos_id
             and a.copy_code = b.copy_code
             and a.in_id = b.in_id
             and a.hos_id =  #{hos_id,jdbcType=INTEGER}
             and a.copy_code =  #{copy_code,jdbcType=VARCHAR}
             and a.store_id =  #{store_id,jdbcType=INTEGER}
             AND <![CDATA[ a.state < 3 ]]>
		     AND a.bus_type_code in (10,12,16,22)
		     and <![CDATA[ b.amount_money < 0 ]]>
           group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id)
   group by inv_id, batch_no, bar_code, price, location_id)
		select aa.inv_id, aa.inv_no, aa.inv_code, aa.inv_name, aa.inv_model, aa.unit_name, aa.price, aa.app_amount, aa.is_com, aa.bid_code, aa.fac_name, sum(aa.imme_amount) as imme_amount
  from (select distinct mid.inv_id,
                        mid.inv_no,
                        mid.inv_code,
                        mid.inv_name,
                        mid.inv_model,
                        hu.unit_name,
                        mid.plan_price as price,
                        mdmd.amount as app_amount,
                        mid.is_com,
                        mid.bid_code,
                        hfd.fac_name,
                        nvl(mfb.left_amount, 0) - nvl(ot.amount, 0) as imme_amount
          from MED_DEPT_MATCH mdm
          left join med_dept_match_detail mdmd
            on mdm.group_id = mdmd.group_id
           and mdm.hos_id = mdmd.hos_id
           and mdm.copy_code = mdmd.copy_code
           and mdm.dept_match_id = mdmd.dept_match_id
          left join MED_INV_DICT mid
            on mdmd.group_id = mid.group_id
           and mdmd.hos_id = mid.hos_id
           and mdmd.copy_code = mid.copy_code
           and mdmd.inv_id = mid.inv_id
           and mid.is_stop = 0
          left join med_fifo_balance mfb
            on mid.group_id = mfb.group_id
           and mid.hos_id = mfb.hos_id
           and mid.copy_code = mfb.copy_code
           and mid.inv_id = mfb.inv_id
           <if test="store_id != null and store_id != '' ">
				AND mfb.store_id = #{store_id}
		   </if>
          left join out_temp ot
            on mfb.inv_id = ot.inv_id
           and mfb.batch_no = ot.batch_no
           and mfb.bar_code = ot.bar_code
           and mfb.price = ot.price
           and mfb.location_id = ot.location_id
          left join HOS_UNIT hu
            on mid.group_id = hu.group_id
           and mid.hos_id = hu.hos_id
           and mid.unit_code = hu.unit_code
          left join HOS_STORE_DICT hsd
            on mdm.group_id = hsd.group_id
           and mdm.hos_id = hsd.hos_id
           and mdm.store_id = hsd.store_id
           and hsd.is_stop = 0
          left join HOS_FAC_DICT hfd
            on mid.group_id = hfd.group_id
           and mid.hos_id = hfd.hos_id
           and mid.fac_id = hfd.fac_id
           and mid.fac_no = hfd.fac_no
		
		WHERE mdm.group_id = #{group_id}
			AND mdm.hos_id = #{hos_id}
			AND mdm.copy_code = #{copy_code}
			<if test="dept_match_id != null and dept_match_id != '' ">
				AND mdm.dept_match_id = #{dept_match_id}
			</if>
			<if test="store_id != null and store_id != '' ">
				AND (mdm.store_id = #{store_id} or mdm.store_id is null)
			</if>
			<if test="dept_id != null and dept_id != '' ">
				AND mdm.dept_id = #{dept_id}
			</if>
			AND mid.use_state = 1
		order by mid.inv_id) aa
 group by aa.inv_id, aa.inv_no, aa.inv_code, aa.inv_name, aa.inv_model, aa.unit_name, aa.price, aa.app_amount, aa.is_com, aa.bid_code, aa.fac_name
	</select>

<!-- 仓库药品对应集合 -->
	<select id="queryMedStoreInvs" parameterType="java.util.Map" resultMap="medStoreInv">
		select
		mid.inv_id, mid.inv_code,mid.inv_name
		from MED_STORE_INV msi
		left join MED_INV_DICT mid on msi.group_id = mid.group_id and msi.hos_id =
		mid.hos_id and msi.copy_code = mid.copy_code and msi.inv_id =
		mid.inv_id
		<where>
			is_stop = 0
			<if test="group_id != null  and group_id != ''">
				and msi.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and msi.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and msi.copy_code = #{copy_code}
			</if>
			<if test="store_id != null  and store_id != ''">
				and msi.store_id = #{store_id}
			</if>
		</where>
		order by mid.inv_code
	</select>
	
	<select id="queryStoreExistInv" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(inv_id)
		from MED_STORE_INV msi
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="store_id != null  and store_id != ''">
				and store_id = #{store_id}
			</if>
			<if test="inv_id != null  and inv_id != ''">
				and inv_id = #{inv_id}
			</if>
		</where>
	</select>
	
	
	<select id="queryStoreInvData" parameterType="java.util.List" resultType="java.util.Map" >
     	with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.app_amount != null or item.app_amount != ''">
						#{item.app_amount,jdbcType=INTEGER} as app_amount,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		)
		select mid.group_id,mid.hos_id,mid.copy_code,mid.inv_id,mid.inv_no,mid.inv_code,mid.inv_name,
			mid.inv_model,mid.unit_code,hu.unit_name,hfd.fac_name,hfd.fac_id,hfd.fac_no,hfd.fac_code,
			mid.plan_price as price,a.app_amount,mid.plan_price*a.app_amount as amount_money,mid.is_com
		from list_temp  a 
		left join med_inv_dict  mid on a.group_id = mid.group_id 
			and a.hos_id = mid.hos_id  and a.copy_code = mid.copy_code  
			and a.inv_id = mid.inv_id   and a.inv_no = mid.inv_no  
		left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code and hu.is_stop = 0
		left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id
			and mid.fac_id = hfd.fac_id and mid.fac_no = hfd.fac_no
		order by mid.inv_code
     </select>
     
     <!-- 主页面明细查询 -->
	<select id="queryApplyDetails" parameterType="java.util.Map" resultMap="medApplyDetailMap">
		select null as group_id, null as hos_id, null as copy_code, null as apply_id, null as detail_id
		  , null as inv_id, null as inv_no, null as inv_code, null as bid_code, null as inv_name
		  , null as  is_closed,null as inv_model,null as unit_name, null as fac_name, null as is_com
		  , sum(a.app_amount) as app_amount,null as  price, sum(a.app_amount * nvl(b.plan_price, 0)) as amount_money
		  , null as note, null as is_sec_whg , '合计' as apply_no, null as store_name
		  , null as  app_date, null as brief, null as dept_name, null as  maker
		   , null as emp_name, null as state, null as back_reason, null as  response_emp
from med_apply_detail a
left join med_apply_main mam on a.group_id=mam.group_id
and a.hos_id=mam.hos_id and a.copy_code=mam.copy_code
and a.apply_id=mam.apply_id
left join med_inv_dict b on a.group_id = b.group_id
and a.hos_id = b.hos_id
and a.copy_code = b.copy_code
and a.inv_id = b.inv_id
and a.inv_no = b.inv_no
<where>
	a.group_id = #{group_id}
  and a.hos_id = #{hos_id}
  and a.copy_code = #{copy_code}
  <if test="begin_app_date != null and begin_app_date != ''">
				and mam.app_date &gt;= #{begin_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="end_app_date != null and end_app_date != ''">
				and mam.app_date &lt;= #{end_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="dept_id != null and dept_id != '' and dept_id != '00'">
				and mam.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				and mam.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != ''">
				and mam.brief like '%${brief}%'
			</if>
			<if test="store_id != null and store_id != '' and store_id != '00'">
				and mam.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="store_no != null and store_no != ''">
				and mam.store_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and mam.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="apply_no != null and apply_no != ''">
				AND mam.apply_no like '%${apply_no}%'
			</if>
			<if test="inv_code != null and inv_code != ''">
						AND (
							 b.inv_code like '%${inv_code}%'
							or upper(b.inv_name) like '%${inv_code}%'
							or upper(b.inv_model) like '%${inv_code}%'
							or upper(b.spell_code) like '%${inv_code}%'
							or upper(b.wbx_code) like '%${inv_code}%'
							or upper(b.bid_code) like '%${inv_code}%'
							or lower(b.spell_code) like '%${inv_code}%'
							or lower(b.bid_code) like '%${inv_code}%'
							or lower(b.wbx_code) like '%${inv_code}%'
							or lower(b.inv_name) like '%${inv_code}%'
						
					)
				</if>
		</where>
UNION ALL
    SELECT temp.* FROM (
select a.group_id, a.hos_id, a.copy_code, a.apply_id, a.detail_id
  , a.inv_id, a.inv_no, b.inv_code, b.bid_code, b.inv_name
  , nvl(a.is_closed, 0) as is_closed, b.inv_model, c.unit_name, d.fac_name, b.is_com
  , a.app_amount,nvl(b.plan_price,0) as price, a.app_amount * nvl(b.plan_price, 0) as amount_money
  , a.note, b.is_sec_whg , to_char(mam.apply_no) as apply_no, hsd.store_name
  , to_char(mam.app_date, 'yyyy-MM-dd hh24:mi:ss') as app_date, mam.brief, bb.dept_name, su.user_name as maker
   , cc.emp_name, mam.state, mam.back_reason, res.emp_name as response_emp
 
from med_apply_detail a
left join med_apply_main mam on a.group_id=mam.group_id
and a.hos_id=mam.hos_id and a.copy_code=mam.copy_code
and a.apply_id=mam.apply_id
left join med_inv_dict b on a.group_id = b.group_id
and a.hos_id = b.hos_id
and a.copy_code = b.copy_code
and a.inv_id = b.inv_id
and a.inv_no=b.inv_no
left join hos_unit c on b.group_id = c.group_id
and b.hos_id = c.hos_id
and b.unit_code = c.unit_code 
left join hos_fac_dict d on b.group_id = d.group_id
and b.hos_id = d.hos_id
and b.fac_id = d.fac_id
and b.fac_no = d.fac_no 
left join hos_store_dict hsd on mam.group_id = hsd.group_id
    and mam.hos_id = hsd.hos_id
    and mam.store_id = hsd.store_id
    and hsd.is_stop = 0 
    left join hos_dept_dict bb on mam.group_id = bb.group_id
    and mam.hos_id = bb.hos_id
    and mam.dept_id = bb.dept_id
    and bb.is_stop = 0 
    left join hos_emp_dict cc on mam.group_id = cc.group_id
    and mam.hos_id = cc.hos_id
    and mam.app_emp = cc.emp_id
    and cc.is_stop = 0 
    left join sys_user su on mam.group_id = su.group_id
    and mam.hos_id = su.hos_id
    and mam.maker = su.user_id
    and su.is_stop = 0 
    left join hos_emp_dict res on mam.group_id = res.group_id
    and mam.hos_id = res.hos_id
    and mam.response_emp = res.emp_id
    and res.is_stop = 0 
<where>
	a.group_id = #{group_id}
  and a.hos_id = #{hos_id}
  and a.copy_code = #{copy_code}
  <if test="begin_app_date != null and begin_app_date != ''">
				and mam.app_date &gt;= #{begin_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="end_app_date != null and end_app_date != ''">
				and mam.app_date &lt;= #{end_app_date,jdbcType=TIMESTAMP}
			</if>
 	 		
				and mam.dept_id in ( select perm_code from v_user_data_perm
				where group_id = ${group_id}
				and hos_id = ${hos_id} and user_id = ${user_id} and table_code =
				'HOS_DEPT_DICT'
				and is_read = 1 and is_write = 1)
			
				and ((mam.store_id in (
					select perm_code from v_user_data_perm
					where group_id = ${group_id}
						and hos_id = ${hos_id} and user_id = ${user_id} 
						and table_code = 'HOS_STORE_DICT' and is_read = 1
					)) 
				)
			
			<if test="dept_id != null and dept_id != '' and dept_id != '00'">
				and mam.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				and mam.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != ''">
				and mam.brief like '%${brief}%'
			</if>
			<if test="store_id != null and store_id != '' and store_id != '00'">
				and mam.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="store_no != null and store_no != ''">
				and mam.store_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and mam.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="apply_no != null and apply_no != ''">
				AND mam.apply_no like '%${apply_no}%'
			</if>
			<if test="inv_code != null and inv_code != ''">
						AND (
							 b.inv_code like '%${inv_code}%'
							or upper(b.inv_name) like '%${inv_code}%'
							or upper(b.inv_model) like '%${inv_code}%'
							or upper(b.spell_code) like '%${inv_code}%'
							or upper(b.wbx_code) like '%${inv_code}%'
							or upper(b.bid_code) like '%${inv_code}%'
							or lower(b.spell_code) like '%${inv_code}%'
							or lower(b.bid_code) like '%${inv_code}%'
							or lower(b.wbx_code) like '%${inv_code}%'
							or lower(b.inv_name) like '%${inv_code}%'
						
					)
				</if>
 </where> 
  )temp
	</select>
	
	
	<select id="queryApplyPrintTemlateByMainInBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
		a.apply_id as id,
			a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no, a.dept_id, a.dept_no, b.dept_code, b.dept_name, 
			a.store_id, a.store_no, c.store_code, c.store_name, app_date, a.app_emp , d.emp_code, d.emp_name app_emp, 
			a.brief, a.state, #{rela_state,jdbcType=INTEGER} rela_state, su.user_name maker,a.app_date in_date,su1.user_name CHECKER,
			a.check_date,resp.user_name,a.back_reason
		FROM med_apply_main a
		LEFT JOIN hos_dept_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id
			AND a.dept_id = b.dept_id
			<if test="show_history == 1">
				and a.dept_no = b.dept_no
			</if>
			<if test="show_history == 0">
				and b.is_stop = 0
			</if>
		LEFT JOIN hos_store_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id
			AND a.store_id = c.store_id
			<if test="show_history == 1">
				AND a.store_no = c.store_no
			</if>
			<if test="show_history == 0">
				and c.is_stop = 0
			</if>
		LEFT JOIN hos_emp_dict d
			ON a.group_id = d.group_id AND a.hos_id = d.hos_id
			AND a.app_emp = d.emp_id AND d.is_stop = 0
			  left join sys_user su on a.maker = su.user_id 
			  	        and a.group_id = su.group_id 
			  	        and a.hos_id = su.hos_id 
			  	        and a.hos_id = su.hos_id
             left join sys_user su1  on a.maker = su1.user_id 
                       and a.group_id = su1.group_id 
                       and a.hos_id = su1.hos_id 
                       and a.hos_id = su1.hos_id 
             left join sys_user su2  on a.maker = su2.user_id 
                       and a.group_id = su2.group_id 
                       and a.hos_id = su2.hos_id 
                       and a.hos_id = su2.hos_id
	        left join sys_user resp
	        on
	            a.group_id = resp.group_id
	            and a.hos_id = resp.hos_id
	            and a.copy_code = resp.copy_code
	            and a.response_emp = resp.user_id
	            and resp.is_stop = 0
                    
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and  a.apply_id in (${paraId})
	        order by  a.apply_id desc	

	</select>
	
	
	<select id="queryMedOutPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no, a.dept_id, a.dept_no, b.dept_code, b.dept_name, 
			a.store_id, a.store_no, c.store_code, c.store_name, app_date, a.app_emp , d.emp_code, d.emp_name app_emp, 
			a.brief, a.state, #{rela_state,jdbcType=INTEGER} rela_state, su.user_name maker,a.app_date in_date,su1.user_name CHECKER,
			a.check_date,resp.user_name,a.back_reason
		FROM med_apply_main a
		LEFT JOIN hos_dept_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id
			AND a.dept_id = b.dept_id
			<if test="show_history == 1">
				and a.dept_no = b.dept_no
			</if>
			<if test="show_history == 0">
				and b.is_stop = 0
			</if>
		LEFT JOIN hos_store_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id
			AND a.store_id = c.store_id
			<if test="show_history == 1">
				AND a.store_no = c.store_no
			</if>
			<if test="show_history == 0">
				and c.is_stop = 0
			</if>
		LEFT JOIN hos_emp_dict d
			ON a.group_id = d.group_id AND a.hos_id = d.hos_id
			AND a.app_emp = d.emp_id AND d.is_stop = 0
			  left join sys_user su on a.maker = su.user_id 
			  	        and a.group_id = su.group_id 
			  	        and a.hos_id = su.hos_id 
			  	        and a.hos_id = su.hos_id
             left join sys_user su1  on a.maker = su1.user_id 
                       and a.group_id = su1.group_id 
                       and a.hos_id = su1.hos_id 
                       and a.hos_id = su1.hos_id 
             left join sys_user su2  on a.maker = su2.user_id 
                       and a.group_id = su2.group_id 
                       and a.hos_id = su2.hos_id 
                       and a.hos_id = su2.hos_id
          	left join sys_user resp
	        on
	            a.group_id = resp.group_id
	            and a.hos_id = resp.hos_id
	            and a.copy_code = resp.copy_code
	            and a.response_emp = resp.user_id
	            and resp.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and a.apply_id = #{apply_id,jdbcType=INTEGER} 

	</select>
     
     
     <!-- 入库明细表模板打印 -->
	<select id="queryMedOutPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.apply_id as id,
			a.group_id, a.hos_id, a.copy_code, a.apply_id, a.detail_id, a.inv_id, a.inv_no, b.inv_code, b.inv_name, 
			b.inv_model, c.unit_name, d.fac_name, b.is_com, a.app_amount as amount, g.rela_amount, 
			e.cur_amount common_amount, f.cur_amount affi_amount, nvl(b.plan_price, 0) price, 
			a.app_amount*nvl(b.plan_price, 0) amount_money, a.note,b.bid_code 
		FROM med_apply_detail a
		left join med_inv_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no
		left join hos_unit c
			on b.group_id = c.group_id and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
	    left join hos_fac_dict d
	   		on b.group_id = d.group_id and b.hos_id = d.hos_id
	    	and b.fac_id = d.fac_id and b.fac_no = d.fac_no
		left join med_inv_hold e
			on a.group_id = e.group_id and a.hos_id = e.hos_id
			and a.copy_code = e.copy_code and a.inv_id = e.inv_id
			and e.store_id = #{store_id,jdbcType=INTEGER} 
		left join med_affi_inv_hold f
			on a.group_id = f.group_id and a.hos_id = f.hos_id
			and a.copy_code = f.copy_code and a.inv_id = f.inv_id
			and f.store_id = #{store_id,jdbcType=INTEGER} 
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) rela_amount 
			from med_apply_out_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and apply_id = #{apply_id,jdbcType=INTEGER} 
				and <![CDATA[rela_type <> 5]]>
			group by app_detail_id
		) g
			on a.detail_id = g.app_detail_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test="p_num ==1">
				and a.apply_id in (${paraId})
			</if>
			<if test="p_num ==0">
				and a.apply_id=#{apply_id,jdbcType=NUMERIC}
			</if>	
	</select>
</mapper>

