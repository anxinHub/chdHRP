<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.storage.out.MedOutMainMapper">

	<resultMap id="medOutMain" type="com.chd.hrp.med.entity.MedOutMain">
	<result property="group_id" column="group_id" />
	<result property="hos_id" column="hos_id" />
	<result property="copy_code" column="copy_code" />
	<result property="out_id" column="out_id" />
	<result property="out_no" column="out_no" />
	<result property="year" column="year" />
	<result property="month" column="month" />
	<result property="bus_type_code" column="bus_type_code" />
	<result property="store_id" column="store_id" />
	<result property="store_no" column="store_no" />
	<result property="brief" column="brief" />
	<result property="dept_id" column="dept_id" />
	<result property="dept_no" column="dept_no" />
	<result property="dept_emp" column="dept_emp" />
	<result property="inv_code" column="inv_code" />
	<result property="use_code" column="use_code" />
	<result property="proj_id" column="proj_id" />
	<result property="maker" column="maker" />
	<result property="out_date" column="out_date" />
	<result property="checker" column="checker" />
	<result property="check_date" column="check_date" />
	<result property="confirmer" column="confirmer" />
	<result property="confirm_date" column="confirm_date" />
	<result property="state" column="state" />
	<result property="is_dir" column="is_dir" />
	<result property="his_flag" column="his_flag" />
	<result property="emp_no" column="emp_no" />
	
	</resultMap>
	
	<select id="queryMedOutMainSeq"  resultType="java.lang.Long" useCache="false" flushCache="true">
		select MED_OUT_MAIN_SEQ.nextval from dual
	</select>

	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO MED_OUT_MAIN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null ">group_id,</if>
		<if test="hos_id != null ">hos_id,</if>
		<if test="copy_code != null and copy_code != ''">copy_code,</if>
		<if test="out_id != null ">out_id,</if>
		<if test="out_no != null and out_no != ''">out_no,</if>
		<if test="year != null and year != ''">year,</if>
		<if test="month != null and month != ''">month,</if>
		<if test="bus_type_code != null and bus_type_code != ''">bus_type_code,</if>
		<if test="store_id != null ">store_id,</if>
		<if test="store_no != null ">store_no,</if>
		<if test="brief != null and brief != ''">brief,</if>
		<if test="dept_id != null ">dept_id,</if>
		<if test="dept_no != null ">dept_no,</if>
		<if test="dept_emp != null ">dept_emp,</if>
		<if test="use_code != null and use_code != ''">use_code,</if>
		<if test="proj_id != null and proj_id != '' ">proj_id,</if>
		<if test="maker != null and maker != ''">maker,</if>
		<if test="out_date != null and out_date != ''">out_date,</if>
		<if test="checker != null and checker != ''">checker,</if>
		<if test="check_date != null and check_date != ''">check_date,</if>
		<if test="confirmer != null and confirmer != ''">confirmer,</if>
		<if test="confirm_date != null and confirm_date != ''">confirm_date,</if>
		<if test="state != null ">state,</if>
		<if test="is_dir != null ">is_dir,</if>
		<if test="his_flag != null and his_flag != ''">his_flag,</if>
		<if test="app_date != null and app_date != ''">app_date,</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null ">#{group_id,jdbcType=INTEGER},</if>
		<if test="hos_id != null ">#{hos_id,jdbcType=INTEGER},</if>
		<if test="copy_code != null and copy_code != ''">#{copy_code,jdbcType=VARCHAR},</if>
		<if test="out_id != null ">#{out_id,jdbcType=INTEGER},</if>
		<if test="out_no != null and out_no != ''">#{out_no,jdbcType=VARCHAR},</if>
		<if test="year != null and year != ''">#{year,jdbcType=VARCHAR},</if>
		<if test="month != null and month != ''">#{month,jdbcType=VARCHAR},</if>
		<if test="bus_type_code != null and bus_type_code != ''">#{bus_type_code,jdbcType=VARCHAR},</if>
		<if test="store_id != null ">#{store_id,jdbcType=INTEGER},</if>
		<if test="store_no != null ">#{store_no,jdbcType=INTEGER},</if>
		<if test="brief != null and brief != ''">#{brief,jdbcType=VARCHAR},</if>
		<if test="dept_id != null ">#{dept_id,jdbcType=INTEGER},</if>
		<if test="dept_no != null ">#{dept_no,jdbcType=INTEGER},</if>
		<if test="dept_emp != null ">#{dept_emp,jdbcType=INTEGER},</if>
		<if test="use_code != null and use_code != ''">#{use_code,jdbcType=VARCHAR},</if>
		<if test="proj_id != null and proj_id != '' ">#{proj_id,jdbcType=INTEGER},</if>
		<if test="maker != null and maker != ''">#{maker,jdbcType=INTEGER},</if>
		<if test="out_date != null and out_date != ''">to_date(#{out_date},'yyyy/MM/dd'),</if>
		<if test="checker != null and checker != ''">#{checker,jdbcType=INTEGER},</if>
		<if test="check_date != null and check_date != ''">to_date(#{check_date},'yyyy/MM/dd'),</if>
		<if test="confirmer != null and confirmer != ''">#{confirmer,jdbcType=INTEGER},</if>
		<if test="confirm_date != null and confirm_date != ''">to_date(#{confirm_date},'yyyy/MM/dd'),</if>
		<if test="state != null ">#{state,jdbcType=INTEGER},</if>
		<if test="is_dir != null ">#{is_dir,jdbcType=INTEGER},</if>
		<if test="his_flag != null and his_flag != ''">#{his_flag,jdbcType=VARCHAR}</if>
		<if test="app_date != null and app_date != ''">#{app_date,jdbcType=TIMESTAMP}</if> 
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO MED_OUT_MAIN (

		out_id,
		group_id,
		hos_id,
		copy_code,
		out_no,
		year,
		month,
		bus_type_code,
		store_id,
		store_no,
		brief,
		dept_id,
		dept_no,
		dept_emp,
		use_code,
		proj_id,
		maker,
		out_date,
		checker,
		check_date,
		confirmer,
		confirm_date,
		state,
		is_dir,
		his_flag
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.out_id,jdbcType=INTEGER}，
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.out_no,jdbcType=VARCHAR},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.bus_type_code,jdbcType=VARCHAR},
			#{item.store_id,jdbcType=INTEGER},
			#{item.store_no,jdbcType=INTEGER},
			#{item.brief,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.dept_no,jdbcType=INTEGER},
			#{item.dept_emp,jdbcType=INTEGER},
			#{item.use_code,jdbcType=VARCHAR},
			#{item.proj_id,jdbcType=INTEGER},
			#{item.maker,jdbcType=INTEGER},
			to_date(#{item.out_date},'yyyy/MM/dd'),
			#{item.checker,jdbcType=INTEGER},
			to_date(#{item.check_date},'yyyy/MM/dd'),
			#{item.confirmer,jdbcType=INTEGER},
			to_date(#{item.confirm_date},'yyyy/MM/dd'),
			#{item.state,jdbcType=INTEGER},
			#{item.is_dir,jdbcType=INTEGER},
			#{item.his_flag,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE med_out_main 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="year != null and year != ''">year = #{year,jdbcType=VARCHAR},</if>
		<if test="month != null and month != ''">month = #{month,jdbcType=VARCHAR},</if>
		<if test="bus_type_code != null and bus_type_code != ''">bus_type_code = #{bus_type_code,jdbcType=VARCHAR},</if>
		<if test="store_id != null ">store_id = #{store_id,jdbcType=INTEGER},</if>
		<if test="store_no != null ">store_no = #{store_no,jdbcType=INTEGER},</if>
		<if test="brief != null">brief = #{brief,jdbcType=VARCHAR},</if>
		<if test="dept_id != null ">dept_id = #{dept_id,jdbcType=INTEGER},</if>
		<if test="dept_no != null ">dept_no = #{dept_no,jdbcType=INTEGER},</if>
		<if test="dept_emp != null">dept_emp = #{dept_emp,jdbcType=INTEGER},</if>
		<if test="use_code != null">use_code = #{use_code,jdbcType=VARCHAR},</if>
		<if test="proj_id != null">proj_id = #{proj_id,jdbcType=INTEGER},</if>
		<if test="maker != null and maker != ''">maker = #{maker,jdbcType=INTEGER},</if>
		<if test="out_date != null and out_date != ''">out_date =to_date(#{out_date,jdbcType=DATE},'yyyy/MM/dd'),</if>
		<if test="checker != null and checker != ''">checker = #{checker,jdbcType=INTEGER},</if>
		<if test="check_date != null and check_date != ''">check_date = to_date(#{check_date,jdbcType=DATE},'yyyy/MM/dd'),</if>
		<if test="confirmer != null and confirmer != ''">confirmer = #{confirmer,jdbcType=INTEGER},</if>
		<if test="confirm_date != null and confirm_date != ''">confirm_date = to_date(#{confirm_date,jdbcType=DATE},'yyyy/MM/dd'),</if>
		<if test="state != null ">state = #{state,jdbcType=INTEGER},</if>
		<if test="is_dir != null ">is_dir = #{is_dir,jdbcType=INTEGER},</if>
		<if test="his_flag != null and his_flag != ''">his_flag = #{his_flag,jdbcType=VARCHAR},</if>
		<if test="app_date != null and app_date != ''">app_date = #{app_date,jdbcType=TIMESTAMP},</if>
		</trim>
		<where>                     
		<if test="group_id != null ">AND group_id = #{group_id,jdbcType=INTEGER}</if>
		<if test="hos_id != null ">AND hos_id = #{hos_id,jdbcType=INTEGER}</if>
		<if test="copy_code != null and copy_code != ''">AND copy_code = #{copy_code,jdbcType=VARCHAR}</if>
		<if test="out_id != null ">AND out_id = #{out_id,jdbcType=INTEGER}</if>
		</where>  
	</update>
	<update id="updateAuditBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_out_main set 
				check_date = to_date(#{item.check_date,jdbcType=VARCHAR},'yyyy/MM/dd'),
				checker = #{item.checker,jdbcType=INTEGER},
				state = #{item.state,jdbcType=INTEGER}
			<where>   
				hos_id = #{item.hos_id,jdbcType=INTEGER}   
				AND group_id = #{item.group_id,jdbcType=INTEGER} 
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}  
				AND out_id = #{item.out_id,jdbcType=INTEGER}            
			</where>  			
		</foreach>
	</update>
	<update id="updateConfirmBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_out_main set 
				year = #{item.year,jdbcType=VARCHAR}, 
				month = #{item.month,jdbcType=VARCHAR}, 
				confirm_date = to_date(#{item.confirm_date,jdbcType=VARCHAR},'yyyy/MM/dd'),
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				state = #{item.state,jdbcType=INTEGER}
			<where>   
				hos_id = #{item.hos_id,jdbcType=INTEGER}   
				AND group_id = #{item.group_id,jdbcType=INTEGER} 
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}  
				AND out_id = #{item.out_id,jdbcType=INTEGER}            
			</where>  			
		</foreach>
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_out_main 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.out_no != null and item.out_no != ''">out_no = #{item.out_no,jdbcType=VARCHAR},</if>
			<if test="item.year != null and item.year != ''">year = #{item.year,jdbcType=VARCHAR},</if>
			<if test="item.month != null and item.month != ''">month = #{item.month,jdbcType=VARCHAR},</if>
			<if test="item.bus_type_code != null and item.bus_type_code != ''">bus_type_code = #{item.bus_type_code,jdbcType=VARCHAR},</if>
			<if test="item.store_id != null ">store_id = #{item.store_id,jdbcType=INTEGER},</if>
			<if test="item.store_no != null ">store_no = #{item.store_no,jdbcType=INTEGER},</if>
			<if test="item.brief != null">brief = #{item.brief,jdbcType=VARCHAR},</if>
			<if test="item.dept_id != null ">dept_id = #{item.dept_id,jdbcType=INTEGER},</if>
			<if test="item.dept_no != null ">dept_no = #{item.dept_no,jdbcType=INTEGER},</if>
			<if test="item.dept_emp != null">dept_emp = #{item.dept_emp,jdbcType=INTEGER},</if>
			<if test="item.use_code != null">use_code = #{item.use_code,jdbcType=VARCHAR},</if>
			<if test="item.proj_id != null">proj_id = #{item.proj_id,jdbcType=INTEGER},</if>
			<if test="item.maker != null and item.maker != ''">maker = #{item.maker,jdbcType=INTEGER},</if>
			<if test="item.out_date != null and item.out_date != ''">out_date = to_date(#{item.out_date,jdbcType=VARCHAR},'yyyy/MM/dd'),</if>
			<if test="item.checker != null and item.checker != ''">checker = #{item.checker,jdbcType=INTEGER},</if>
			<if test="item.check_date != null and item.check_date != ''">check_date = to_date(#{item.check_date,jdbcType=VARCHAR},'yyyy/MM/dd'),</if>
			<if test="item.confirmer != null and item.confirmer != ''">confirmer = #{item.confirmer,jdbcType=INTEGER},</if>
			<if test="item.confirm_date != null and item.confirm_date != ''">confirm_date = to_date(#{item.confirm_date,jdbcType=VARCHAR},'yyyy/MM/dd'),</if>
			<if test="item.state != null ">state = #{item.state,jdbcType=INTEGER},</if>
			<if test="item.is_dir != null ">is_dir = #{item.is_dir,jdbcType=INTEGER},</if>
			<if test="item.his_flag != null and item.his_flag != ''">his_flag = #{item.his_flag,jdbcType=VARCHAR},</if>
			</trim>
			<where>                     
			<if test="item.group_id != null ">AND group_id = #{item.group_id,jdbcType=INTEGER}</if>  
			<if test="item.hos_id != null ">AND hos_id = #{item.hos_id,jdbcType=INTEGER}</if>  
			<if test="item.copy_code != null and item.copy_code != ''">AND copy_code = #{item.copy_code,jdbcType=VARCHAR}</if>  
			<if test="item.out_id != null ">AND out_id = #{item.out_id,jdbcType=INTEGER}</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM med_out_main 
		<where>                     
		<if test="group_id != null ">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null ">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="out_id != null ">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_no != null and out_no != ''">
		AND out_no = #{out_no,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null ">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null ">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="brief != null and brief != ''">
		AND brief = #{brief,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null ">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null ">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="dept_emp != null ">
		AND dept_emp = #{dept_emp,jdbcType=INTEGER}
		</if>
		<if test="use_code != null and use_code != ''">
		AND use_code = #{use_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="out_date != null and out_date != ''">
		AND out_date = #{out_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="confirmer != null and confirmer != ''">
		AND confirmer = #{confirmer,jdbcType=INTEGER}
		</if>
		<if test="confirm_date != null and confirm_date != ''">
		AND confirm_date = #{confirm_date,jdbcType=DATE}
		</if>
		<if test="state != null ">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="is_dir != null ">
		AND is_dir = #{is_dir,jdbcType=INTEGER}
		</if>
		<if test="his_flag != null and his_flag != ''">
		AND his_flag = #{his_flag,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		
			<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
				DELETE FROM med_out_main 
				<where>
				<if test="item.group_id != null ">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null ">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.out_id != null ">
				AND out_id = #{item.out_id,jdbcType=INTEGER}
				</if>
				<if test="item.out_no != null and item.out_no != ''">
				AND out_no = #{item.out_no,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
				<if test="item.bus_type_code != null and item.bus_type_code != ''">
				AND bus_type_code = #{item.bus_type_code,jdbcType=VARCHAR}
				</if>
				<if test="item.store_id != null ">
				AND store_id = #{item.store_id,jdbcType=INTEGER}
				</if>
				<if test="item.store_no != null ">
				AND store_no = #{item.store_no,jdbcType=INTEGER}
				</if>
				<if test="item.brief != null and item.brief != ''">
				AND brief = #{item.brief,jdbcType=VARCHAR}
				</if>
				<if test="item.out_date != null and item.out_date != ''">
				AND out_date = #{item.out_date,jdbcType=DATE}
				</if>
				<if test="item.dept_id != null ">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.dept_no != null ">
				AND dept_no = #{item.dept_no,jdbcType=INTEGER}
				</if>
				<if test="item.dept_emp != null ">
				AND dept_emp = #{item.dept_emp,jdbcType=INTEGER}
				</if>
				<if test="item.use_code != null and item.use_code != ''">
				AND use_code = #{item.use_code,jdbcType=VARCHAR}
				</if>
				<if test="item.proj_id != null and item.proj_id != '' ">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>
				<if test="item.maker != null and item.maker != ''">
				AND maker = #{item.maker,jdbcType=INTEGER}
				</if>
				<if test="item.checker != null and item.checker != ''">
				AND checker = #{item.checker,jdbcType=INTEGER}
				</if>
				<if test="item.check_date != null and item.check_date != ''">
				AND check_date = #{item.check_date,jdbcType=DATE}
				</if>
				<if test="item.confirmer != null and item.confirmer != ''">
				AND confirmer = #{item.confirmer,jdbcType=INTEGER}
				</if>
				<if test="item.confirm_date != null and item.confirm_date != ''">
				AND confirm_date = #{item.confirm_date,jdbcType=DATE}
				</if>
				<if test="item.state != null ">
				AND state = #{item.state,jdbcType=INTEGER}
				</if>
				<if test="item.is_dir != null ">
				AND is_dir = #{item.is_dir,jdbcType=INTEGER}
				</if>
				<if test="item.his_flag != null and item.his_flag != ''">
				AND his_flag = #{item.his_flag,jdbcType=VARCHAR}
				</if>
				</where>  
			</foreach>
	</delete>
	<select id="queryMedOutMain" parameterType="java.util.Map" resultType="java.util.HashMap">
		
	    with w_mom as (
		    SELECT 
			    mom.group_id as group_id,
			    mom.hos_id as hos_id,
			    mom.copy_code as copy_code,
			    mom.out_id as out_id,
			    mom.out_no as out_no,
			    mom.year as year,
			    mom.month as month,
			    mom.bus_type_code as bus_type_code,
			    mbt.bus_type_name as bus_type_name,
			    mom.store_id as store_id,
			    mom.store_no as store_no,
			    hsd.store_code as store_code,
			    hsd.store_name as store_name,
			    mom.brief as brief,
			    mom.dept_emp as dept_emp,
			    he.emp_name as emp_name,
			    mom.maker as maker ,
			    sumaker.user_name as user_name_make,
			    mom.confirmer as confirmer,
			    suconfirmer.user_name as user_name_confirmer,
			    mom.confirm_date as confirm_date,
			    mom.out_date as out_date,
			    mom.dept_id as dept_id,
			    mom.dept_no as dept_no,
			    hdd.dept_code as dept_code,
			    hdd.dept_name as dept_name,
			    mom.state as state,
			    mom.app_date,
			    case when  nvl(spc.print_count,0)>0 then 1 else 0 end print_state
		    FROM med_out_main mom
		    left join hos_store_dict hsd on mom.group_id = hsd.group_id and mom.hos_id = hsd.hos_id and mom.store_id = hsd.store_id and mom.store_no = hsd.store_no
		    left join med_bus_type mbt on mom.bus_type_code = mbt.bus_type_code 
		    left join hos_emp he on mom.group_id = he.group_id and mom.hos_id = he.hos_id  and mom.dept_emp = he.emp_id 
		    left join sys_user sumaker on mom.group_id = sumaker.group_id and mom.hos_id = sumaker.hos_id and mom.maker = sumaker.user_id
		    left join sys_user suconfirmer on mom.group_id = suconfirmer.group_id and mom.hos_id = suconfirmer.hos_id and mom.confirmer = suconfirmer.user_id 
		    left join hos_dept_dict hdd on mom.group_id = hdd.group_id and mom.hos_id = hdd.hos_id  and mom.dept_id = hdd.dept_id and mom.dept_no = hdd.dept_no
		    left join sys_print_count spc on mom.group_id = spc.group_id and mom.hos_id = spc.hos_id and mom.copy_code=spc.copy_code and mom.out_no = spc.business_no
			<where>             
				mbt.sel_flag = 'out' 
				<if test="group_id != null ">
					AND mom.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null ">
					AND mom.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mom.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="out_date_start != null and out_date_start != ''">
					<![CDATA[AND mom.out_date >= #{out_date_start,jdbcType=DATE}]]>
				</if>
				<if test="out_date_end != null and out_date_end != ''">
					<![CDATA[AND mom.out_date <= #{out_date_end,jdbcType=DATE}]]>
				</if>
				<if test="bus_type_code != null and bus_type_code != ''">
				    AND mom.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
				</if>
				<if test="maker_code != null and maker_code != ''">
					AND sumaker.user_id = #{maker_code,jdbcType=VARCHAR}
				</if>
				<if test="state != null and state != ''">
					AND mom.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="confirm_date_start != null and confirm_date_start != ''">
					<![CDATA[AND mom.confirm_date >= #{confirm_date_start,jdbcType=DATE}]]>
				</if>
				<if test="confirm_date_end != null and confirm_date_end != ''">
					<![CDATA[AND mom.confirm_date <= #{confirm_date_end,jdbcType=DATE}]]>
				</if>
				<if test="dept_id != null and dept_id != '' and dept_id != '00'">
					AND mom.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != '' and store_id != '00' ">
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="out_no != null and out_no != ''">
					AND mom.out_no like '%${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					and mom.brief like '%${brief}%'

				</if>
				<if test="emp_id != null and emp_id != ''">
					and he.emp_id =#{emp_id}

				</if>
				<if test="dept_id == '00' ">
					and to_char(mom.dept_id) in ( select perm_code from v_user_data_perm
					where group_id = #{group_id}
					and hos_id = #{hos_id} and user_id = #{user_id} and table_code =
					'HOS_DEPT_DICT'
					and is_read = 1 and is_write = 1)
				</if>
				<if test="store_id == '00' ">
					and to_char(mom.store_id) in (select perm_code from v_user_data_perm
					where group_id = #{group_id}
					and hos_id = #{hos_id} and user_id = #{user_id} and table_code =
					'HOS_STORE_DICT'
					and is_read = 1 and is_write = 1 )
				</if>
				<if test="print_state != null and print_state != ''">
					and case when  nvl(spc.print_count,0)>0 then 1 else 0 end  = #{print_state}
				</if>
			</where>   
			order by mom.out_id desc
	    ),counts_tmp as (
	    	select count(0) countnum,aa.out_id
	    	from w_mom  aa 
	    	left join med_out_detail bb on aa.group_id=bb.group_id and aa.hos_id=bb.hos_id and aa.copy_code=bb.copy_code 
	    		and aa.out_id=bb.out_id
	    	where <![CDATA[ bb.amount_money < 0]]>
	    	group by aa.out_id
	    ), w_detail as (
	    	SELECT 
		    	mom.out_id as out_id,
		    	nvl(sum(detail.amount_money),0) as amount_money
		    FROM med_out_main mom
		    left join med_out_detail detail on mom.group_id = detail.group_id and mom.hos_id = detail.hos_id and detail.copy_code = detail.copy_code and mom.out_id = detail.out_id
		    left join med_bus_type mbt on mom.bus_type_code = mbt.bus_type_code 
			<where>          
				mbt.sel_flag = 'out' 
				<if test="group_id != null ">
					AND mom.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null ">
					AND mom.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mom.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="out_date_start != null and out_date_start != ''">
					<![CDATA[AND mom.out_date >= #{out_date_start,jdbcType=DATE}]]>
				</if>
				<if test="out_date_end != null and out_date_end != ''">
					<![CDATA[AND mom.out_date <= #{out_date_end,jdbcType=DATE}]]>
				</if>
				<if test="bus_type_code != null and bus_type_code != ''">
					AND mom.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
				</if>
				<if test="state != null and state != ''">
					AND mom.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="confirm_date_start != null and confirm_date_start != ''">
					<![CDATA[AND mom.confirm_date >= #{confirm_date_start,jdbcType=DATE}]]>
				</if>
				<if test="confirm_date_end != null and confirm_date_end != ''">
					<![CDATA[AND mom.confirm_date <= #{confirm_date_end,jdbcType=DATE}]]>
				</if>
				<if test="dept_id != null and dept_id != '' and dept_id != '00'">
					AND mom.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != '' and store_id != '00' ">
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="out_no != null and out_no != ''">
					AND mom.out_no like '%${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					and mom.brief like '%${brief}%'

				</if>
				<if test="dept_id == '00' ">
					and to_char(mom.dept_id) in ( select perm_code from v_user_data_perm
					where group_id = #{group_id}
					and hos_id = #{hos_id} and user_id = #{user_id} and table_code =
					'HOS_DEPT_DICT'
					and is_read = 1 and is_write = 1)
				</if>
				<if test="store_id == '00' ">
					and to_char(mom.store_id) in (select perm_code from v_user_data_perm
					where group_id = #{group_id}
					and hos_id = #{hos_id} and user_id = #{user_id} and table_code =
					'HOS_STORE_DICT'
					and is_read = 1 and is_write = 1 )
				</if>
			</where> 
		    group  by mom.out_id
		    order by mom.out_id desc
	    )
	    SELECT	
			null group_id,null  as hos_id,null copy_code,null out_id,to_char('合计') out_no,
			null year,null month,null bus_type_code,null bus_type_name,null store_id,
			null store_no,null store_code,null store_name,null brief,null dept_emp,
			null emp_name,null maker ,null user_name_make,null confirmer,null user_name_confirmer,
			null confirm_date,null out_date,null dept_id,null dept_no,null dept_code,null dept_name,
			null state,sum(t.amount_money) as amount_money,null as app_date ,null print_state,0 countnum
		FROM w_detail t
		UNION ALL
		SELECT group_id, hos_id, copy_code, out_id,out_no,year, month, bus_type_code, bus_type_name, store_id,
			 store_no, store_code, store_name, brief, dept_emp,
			 emp_name, maker , user_name_make, confirmer, user_name_confirmer,
			 confirm_date, out_date, dept_id, dept_no, dept_code, dept_name,state,amount_money, app_date,print_state,countnum  
	    FROM(
			SELECT 
				t.group_id as group_id,
				t.hos_id as hos_id,
			    t.copy_code as copy_code,
				t.out_id as out_id,
				to_char(t.out_no) as out_no,
				t.year as year,
				t.month as month,
				t.bus_type_code as bus_type_code,
				t.bus_type_name as bus_type_name,
				t.store_id as store_id,
				t.store_no as store_no,
				t.store_code as store_code,
				t.store_name as store_name,
				t.brief as brief,
				t.dept_emp as dept_emp,
				t.emp_name as emp_name,
				t.maker as maker ,
				t.user_name_make as user_name_make,
				t.confirmer as confirmer,
				t.user_name_confirmer as user_name_confirmer,
				t.confirm_date as confirm_date,
				t.out_date as out_date,
				t.dept_id as dept_id,
				t.dept_no as dept_no,
				t.dept_code as dept_code,
				t.dept_name as dept_name,
				t.state as state,
				t2.amount_money,
				t.app_date,
				t.print_state,
				nvl(t3.countNum,0) as countnum
			FROM w_mom t
			left join w_detail t2 on t.out_id = t2.out_id
			left join counts_tmp t3 on t.out_id = t3.out_id
			order by t.out_id desc
		)
	</select>
	<select id="query" parameterType="java.util.Map" resultMap="medOutMain" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		out_id,
		out_no,
		year,
		month,
		bus_type_code,
		store_id,
		store_no,
		brief,
		out_date,
		dept_id,
		dept_no,
		dept_emp,
		use_code,
		proj_id,
		maker,
		checker,
		check_date,
		confirmer,
		confirm_date,
		state,
		is_dir,
		his_flag
		FROM MED_OUT_MAIN 
		<where>                     
		<if test="group_id != null ">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null ">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="out_id != null ">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_no != null and out_no != ''">
		AND out_no = #{out_no,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null ">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null ">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="brief != null and brief != ''">
		AND brief = #{brief,jdbcType=VARCHAR}
		</if>
		<if test="out_date != null and out_date != ''">
		AND out_date = #{out_date,jdbcType=DATE}
		</if>
		<if test="dept_id != null ">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null ">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="dept_emp != null ">
		AND dept_emp = #{dept_emp,jdbcType=INTEGER}
		</if>
		<if test="use_code != null and use_code != ''">
		AND use_code = #{use_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != '' ">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="confirmer != null and confirmer != ''">
		AND confirmer = #{confirmer,jdbcType=INTEGER}
		</if>
		<if test="confirm_date != null and confirm_date != ''">
		AND confirm_date = #{confirm_date,jdbcType=DATE}
		</if>
		<if test="state != null ">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="is_dir != null ">
		AND is_dir = #{is_dir,jdbcType=INTEGER}
		</if>
		<if test="his_flag != null and his_flag != ''">
		AND his_flag = #{his_flag,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryByCode" resultMap="medOutMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		out_id,
		out_no,
		year,
		month,
		bus_type_code,
		store_id,
		store_no,
		brief,
		dept_id,
		dept_no,
		dept_emp,
		use_code,
		maker,
		out_date,
		checker,
		check_date,
		confirmer,
		confirm_date,
		state,
		is_dir,
		his_flag,
		proj_id
		FROM med_out_main 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		out_id = #{out_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryMedOutMainByCode" resultType="java.util.TreeMap"  parameterType="java.util.Map" >
		SELECT 
			mom.group_id, mom.hos_id, mom.copy_code, mom.out_id, mom.out_no, mom.bus_type_code,
			mom.store_id, mom.store_no, hsd.store_code, hsd.store_name, mom.brief, mom.out_date, 
			mom.dept_id, mom.dept_no, hdd.dept_code, hdd.dept_name, mom.dept_emp, hed.emp_no, 
	    	hed.emp_code, hed.emp_name, mom.use_code, mou.use_name, mom.proj_id, hpd.proj_no, 
	    	hpd.proj_code, hpd.proj_name, mom.maker, mom.state,mom.app_date
		FROM med_out_main mom 
    	left join hos_emp_dict hed 
    		on mom.group_id = hed.group_id and mom.hos_id = hed.hos_id 
    		and mom.dept_emp = hed.emp_id and hed.is_stop=0
    	left join hos_store_dict hsd 
    		on mom.group_id = hsd.group_id and mom.hos_id = hsd.hos_id 
    		and mom.store_id = hsd.store_id and mom.store_no = hsd.store_no
    	left join hos_dept_dict hdd
    		on mom.group_id = hdd.group_id and mom.hos_id = hdd.hos_id
    		and mom.dept_id = hdd.dept_id and mom.dept_no = hdd.dept_no
		left join med_out_use mou
			on mom.group_id = mou.group_id and mom.hos_id = mou.hos_id
			and mom.copy_code = mou.copy_code and mom.use_code = mou.use_code
		left join hos_proj_dict hpd 
			on mom.group_id = hpd.group_id and mom.hos_id = hpd.hos_id 
			and mom.proj_id = hpd.proj_id and hpd.is_stop = 0 
		WHERE mom.group_id = #{group_id,jdbcType=INTEGER} 
			and mom.hos_id = #{hos_id,jdbcType=INTEGER} 
			and mom.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and mom.out_id = #{out_id,jdbcType=INTEGER} 
	</select>
	<select id="queryByUniqueness" resultMap="medOutMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		out_id,
		out_no,
		year,
		month,
		bus_type_code,
		store_id,
		store_no,
		brief,
		out_date,
		dept_id,
		dept_no,
		dept_emp,
		use_code,
		proj_id,
		maker,
		checker,
		check_date,
		confirmer,
		confirm_date,
		state,
		is_dir,
		his_flag
		FROM MED_OUT_MAIN 
		<where>                     
		<if test="group_id != null ">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null ">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="out_id != null ">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_no != null and out_no != ''">
		AND out_no = #{out_no,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null ">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null ">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="brief != null and brief != ''">
		AND brief = #{brief,jdbcType=VARCHAR}
		</if>
		<if test="out_date != null and out_date != ''">
		AND out_date = #{out_date,jdbcType=DATE}
		</if>
		<if test="dept_id != null ">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null ">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="dept_emp != null ">
		AND dept_emp = #{dept_emp,jdbcType=INTEGER}
		</if>
		<if test="use_code != null and use_code != ''">
		AND use_code = #{use_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != '' ">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="confirmer != null and confirmer != ''">
		AND confirmer = #{confirmer,jdbcType=INTEGER}
		</if>
		<if test="confirm_date != null and confirm_date != ''">
		AND confirm_date = #{confirm_date,jdbcType=DATE}
		</if>
		<if test="state != null ">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="is_dir != null ">
		AND is_dir = #{is_dir,jdbcType=INTEGER}
		</if>
		<if test="his_flag != null and his_flag != ''">
		AND his_flag = #{his_flag,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="medOutMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		out_id,
		out_no,
		year,
		month,
		bus_type_code,
		store_id,
		store_no,
		brief,
		out_date,
		dept_id,
		dept_no,
		dept_emp,
		use_code,
		proj_id,
		maker,
		checker,
		check_date,
		confirmer,
		confirm_date,
		state,
		is_dir,
		his_flag
		FROM MED_OUT_MAIN 
		<where>                     
		<if test="group_id != null ">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null ">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="out_id != null ">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_no != null and out_no != ''">
		AND out_no = #{out_no,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null ">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null ">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="brief != null and brief != ''">
		AND brief = #{brief,jdbcType=VARCHAR}
		</if>
		<if test="out_date != null and out_date != ''">
		AND out_date = #{out_date,jdbcType=DATE}
		</if>
		<if test="dept_id != null ">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null ">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="dept_emp != null ">
		AND dept_emp = #{dept_emp,jdbcType=INTEGER}
		</if>
		<if test="use_code != null and use_code != ''">
		AND use_code = #{use_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != '' ">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="confirmer != null and confirmer != ''">
		AND confirmer = #{confirmer,jdbcType=INTEGER}
		</if>
		<if test="confirm_date != null and confirm_date != ''">
		AND confirm_date = #{confirm_date,jdbcType=DATE}
		</if>
		<if test="state != null ">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="is_dir != null ">
		AND is_dir = #{is_dir,jdbcType=INTEGER}
		</if>
		<if test="his_flag != null and his_flag != ''">
		AND his_flag = #{his_flag,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>

	<select id="queryMedOutMainByInvHold"  parameterType="java.util.Map"  resultType="java.util.HashMap">

with w_mih as (

select 
mih.group_id as group_id,
mih.hos_id as hos_id,
mih.copy_code as copy_code,
mih.cur_amount as cur_amount,<!--当前库存数量-->
mih.cur_money as cur_money,<!--当前库存金额-->
mih.inv_id as inv_id,
mid.inv_no as  inv_no,
mid.inv_code as inv_code,
mid.inv_name as inv_name,
mid.inv_model as inv_model,
mid.plan_price as plan_price,<!--计划价-->
mid.is_charge as is_charge,
mid.fac_id as fac_id,
mid.fac_no as fac_no,
mid.unit_code as unit_code,
hu.unit_name as unit_name,<!--计量单位-->
hfd.fac_code as fac_code,
hfd.fac_name as fac_name
from med_inv_hold mih

left join med_inv_dict mid on mih.group_id = mid.group_id and mih.hos_id = mid.hos_id and mih.copy_code = mid.copy_code and mih.inv_id = mid.inv_id and mid.is_stop=0
left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id and mid.unit_code = hu.unit_code and hu.is_stop=0
left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id and mid.fac_id = hfd.fac_id and mid.fac_no = hfd.fac_no 
     <where>
     		<![CDATA[ mih.cur_amount > 0 ]]>
			<if test="group_id != null ">
				AND mih.group_id = #{group_id}
			</if>
			<if test="hos_id != null ">
				AND mih.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mih.copy_code = #{copy_code}
			</if>
			<if test="inv_id != null ">
				AND mih.inv_id = #{inv_id}
			</if>
			<!-- if test="inv_no != null and inv_no != ''">
				AND mid.inv_no = #{inv_no}
			</if -->
			<if test="store_id != null ">
				AND mih.store_id = #{store_id}
			</if>

		</where>
order by mih.inv_id asc
),

w_mod as (
select 
inv_id as inv_id,
sum(amount) as imme_amount ,<!--inv_hold表当前库存数量 减 明细表出库未确认的库存-->
sum(amount_money) as imme_amount_money,
mom.store_id as store_id,
mom.store_no as store_no

from med_out_detail medod
left join med_out_main mom on medod.group_id = mom.group_id and medod.hos_id = mom.hos_id and medod.copy_code = mom.copy_code and medod.out_id = mom.out_id
     <where>
     		<![CDATA[ mom.state < 3 ]]>
     		<if test="out_id != null  and  out_id !=''">
				AND mom.out_id != #{out_id}
			</if>
			<if test="group_id != null ">
				AND medod.group_id = #{group_id}
			</if>
			<if test="hos_id != null ">
				AND medod.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND medod.copy_code = #{copy_code}
			</if>
			<if test="inv_id != null ">
				AND medod.inv_id = #{inv_id}
			</if>
			<!-- if test="inv_no != null and inv_no != ''">
				AND medod.inv_no = #{inv_no}
			</if -->
			<if test="store_id != null ">
				AND mom.store_id = #{store_id}
			</if>
			<if test="store_no!= null and store_no!= ''">
				AND mom.store_no = #{store_no}
			</if>
		</where>
group by inv_id,store_id,store_no
order by medod.inv_id asc
)
select 

w_mih.group_id as group_id,
w_mih.hos_id as hos_id,
w_mih.copy_code as copy_code,
w_mih.cur_amount as cur_amount,<!--当前库存数量-->
w_mih.cur_money as cur_money,<!--当前库存金额-->
w_mih.inv_no as  inv_no,
w_mih.inv_code as inv_code,
w_mih.inv_name as inv_name,
w_mih.inv_model as inv_model,
w_mih.plan_price as plan_price,<!--计划价-->
w_mih.is_charge as is_charge,
w_mih.fac_id as fac_id,
w_mih.fac_no as fac_no,
w_mih.unit_code as unit_code,
w_mih.unit_name as unit_name,<!--计量单位-->
w_mih.fac_code as fac_code,
w_mih.fac_name as fac_name,
nvl(w_mih.cur_amount,0)  - nvl(w_mod.imme_amount,0) AS imme_amount,
nvl(w_mih.cur_money,0)  - nvl(w_mod.imme_amount_money,0) AS imme_amount_money,
w_mih.inv_id as inv_id,
w_mod.store_id as store_id,
w_mod.store_no as store_no

from w_mih w_mih
left join w_mod w_mod on w_mih.inv_id = w_mod.inv_id
order by w_mih.inv_id
	</select>
	
	<select id="queryMedOutMainByFifoBalance"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
with w_mfb as (

select 
mfb.group_id as group_id,
mfb.hos_id as hos_id,
mfb.copy_code as copy_code,
mfb.left_amount as left_amount,<!--当前库存数量-->
mfb.left_money as left_money,<!--当前库存金额-->
mfb.batch_sn as batch_sn, <!--批次-->
mfb.batch_no as batch_no,<!--批号-->
mfb.bar_code as bar_code,<!--条形码-->
mfb.price as price,<!--单价-->
mfb.inv_id as inv_id,<!--药品药品ID-->
mfb.location_id as location_id,<!--货位ID-->
mld.location_code as location_code,<!--货位编码-->
mld.location_name as location_name,<!--货位名称-->
mid.inv_no as  inv_no,<!--药品变更号-->
mid.inv_code as inv_code,<!--药品编码-->
mid.inv_name as inv_name,<!--药品名称-->
mid.inv_model as inv_model,<!--规格型号-->
mid.unit_code as unit_code,<!--计量单位编码-->
mid.sell_price as sell_price,<!--零售单价-->
hu.unit_name as unit_name,<!--计量单位名称-->
mbv.inva_date as inva_date<!--有效期-->

from med_fifo_balance mfb
left join med_inv_dict mid on mfb.group_id = mid.group_id and mfb.hos_id = mid.hos_id and mfb.copy_code = mid.copy_code and mfb.inv_id = mid.inv_id and mid.is_stop=0
left join med_location_dict mld on mfb.group_id = mld.group_id and mfb.hos_id = mld.hos_id and mfb.copy_code = mld.copy_code and mfb.location_id = mld.location_id and mld.is_stop=0
left join med_batch_validity mbv on mfb.group_id = mbv.group_id and mfb.hos_id = mbv.hos_id and mfb.copy_code = mbv.copy_code and mfb.inv_id = mbv.inv_id and mfb.batch_no = mbv.batch_no
left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id and mid.unit_code = hu.unit_code and hu.is_stop=0

<where>
			<![CDATA[ mfb.left_amount > 0]]>
      		<if test="group_id != null ">
        	AND mfb.group_id = #{group_id}
			</if>
			<if test="hos_id != null ">
				AND mfb.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mfb.copy_code = #{copy_code}
			</if>
			<if test="inv_id != null ">
				AND mfb.inv_id = #{inv_id}
			</if>
			<if test="batch_sn != null and batch_sn != ''">
				AND mfb.batch_sn = #{batch_sn}
			</if>
			<if test="batch_no != null and batch_no != ''">
				AND mfb.batch_no = #{batch_no}
			</if>
			<if test="bar_code != null and bar_code != ''">
				AND mfb.bar_code = #{bar_code}
			</if>
			<if test="store_id != null ">
				AND mfb.store_id = #{store_id}
			</if>
			<if test="sql != null and sql != ''">
				${sql}
			</if>
		</where>
order by mfb.inv_id asc

),

w_mod as (
select 
inv_id as inv_id,
batch_sn as batch_sn, <!--批次-->
batch_no as batch_no,<!--批号-->
bar_code as bar_code,<!--条形码-->
sum(amount) as imme_amount ,<!--MED_FIFO_BALANCE库存数量 减 明细表出库未确认的库存-->
sum(amount_money) as imme_amount_money,
mom.store_id as store_id,
mom.store_no as store_no
from med_out_detail medod
left join med_out_main mom on medod.group_id = mom.group_id and medod.hos_id = mom.hos_id and medod.copy_code = mom.copy_code and medod.out_id = mom.out_id
<where>
			<![CDATA[ mom.state < 3]]>
			<if test="out_id != null ">
				AND mom.out_id != #{out_id}
			</if>
			<if test="group_id != null ">
				AND medod.group_id = #{group_id}
			</if>
			<if test="hos_id != null ">
				AND medod.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND medod.copy_code = #{copy_code}
			</if>
			<if test="inv_id != null ">
				AND medod.inv_id = #{inv_id}
			</if>
			<!-- if test="inv_no != null and inv_no != ''">
				AND medod.inv_no = #{inv_no}
			</if -->
			<if test="batch_sn != null and batch_sn != ''">
				AND medod.batch_sn = #{batch_sn}
			</if>
			<if test="batch_no != null and batch_no != ''">
				AND medod.batch_no = #{batch_no}
			</if>
			<if test="bar_code != null and bar_code != ''">
				AND medod.bar_code = #{bar_code}
			</if>
			<if test="store_id != null ">
				AND mom.store_id = #{store_id}
			</if>
			<if test="sql != null and sql != ''">
				${sql}
			</if>
		</where>
group by inv_id,batch_sn,batch_no,bar_code,store_id,store_no
order by medod.inv_id asc

)

select 

w_mfb.group_id as group_id,
w_mfb.hos_id as hos_id,
w_mfb.copy_code as copy_code,
w_mfb.left_amount as left_amount,<!--当前库存数量-->
w_mfb.left_money as left_money,<!--当前库存金额-->
w_mfb.batch_sn as batch_sn, <!--批次-->
w_mfb.batch_no as batch_no,<!--批号-->
w_mfb.bar_code as bar_code,<!--条形码-->
w_mfb.price as price,<!--单价-->
w_mfb.inv_id as inv_id,<!--药品药品ID-->
w_mfb.location_id as location_id,<!--货位ID-->
w_mfb.location_code as location_code,<!--货位编码-->
w_mfb.location_name as location_name,<!--货位名称-->
w_mfb.inv_no as  inv_no,<!--药品变更号-->
w_mfb.inv_code as inv_code,<!--药品编码-->
w_mfb.inv_name as inv_name,<!--药品名称-->
w_mfb.inv_model as inv_model,<!--规格型号-->
w_mfb.unit_code as unit_code,<!--计量单位编码-->
w_mfb.sell_price as sell_price,<!--零售单价-->
w_mfb.unit_name as unit_name,<!--计量单位名称-->
w_mfb.inva_date as inva_date,<!--有效期-->
w_mod.store_id as store_id,
w_mod.store_no as store_no,
nvl(w_mfb.left_amount,0)  - nvl(w_mod.imme_amount,0) AS imme_amount,
nvl(w_mfb.left_money,0)  - nvl(w_mod.imme_amount_money,0) AS imme_amount_money,
nvl(w_mfb.left_amount,0) as cur_amount

from w_mfb w_mfb
left join w_mod w_mod on w_mfb.inv_id = w_mod.inv_id and  w_mfb.batch_sn= w_mod.batch_sn and w_mfb.batch_no= w_mod.batch_no and w_mfb.bar_code= w_mod.bar_code
<!-- 对于退库操作这块有异议 -->
where nvl(w_mfb.left_amount, 0) - nvl(w_mod.imme_amount, 0) > 0
order by w_mfb.inv_id, w_mfb.inva_date, w_mfb.batch_no, w_mfb.batch_sn
	</select>
	
	<select id="queryMedInMainByIsDir"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
		select mim.group_id, mim.hos_id, mim.copy_code, mim.in_id, mim.in_no, mim.brief, hsd.sup_name, 
			su.user_name as maker_name, mim.in_date, suc.user_name as confirmer_name, mim.confirm_date, 
			sum(nvl(mfb.left_amount, 0) - nvl(modet.amount, 0)) as imme_amount,dm.amount_money
		from med_in_main mim 
		left join med_in_detail mid
			on mim.group_id = mid.group_id and mim.hos_id = mid.hos_id
			and mim.copy_code = mid.copy_code and mim.in_id = mid.in_id
		 left join (
               select group_id, hos_id, copy_code,in_id,sum(amount_money) as amount_money
               from med_in_detail
             
   			   group by group_id, hos_id, copy_code,in_id
      		)dm on mim.group_id = dm.group_id
 			 and mim.hos_id = dm.hos_id
  			 and mim.copy_code = dm.copy_code 
  			 and dm.in_id=mim.in_id
		left join med_fifo_balance mfb
			on mim.group_id = mfb.group_id and mim.hos_id = mfb.hos_id
			and mim.copy_code = mfb.copy_code and mim.store_id = mfb.store_id
			and mid.inv_id = mfb.inv_id and mid.batch_no = mfb.batch_no
			and mid.batch_sn = mfb.batch_sn and mid.bar_code = mfb.bar_code
		left join med_out_main mom
			on mim.group_id = mom.group_id and mim.hos_id = mom.hos_id
			and mim.copy_code = mom.copy_code and mim.store_id = mom.store_id
			<![CDATA[and mom.state < 3]]>
		left join med_out_detail modet
			on mom.group_id = modet.group_id and mom.hos_id = modet.hos_id
			and mom.copy_code = modet.copy_code and mom.out_id = modet.out_id
			and mid.inv_id = modet.inv_id and mid.batch_no = modet.batch_no
			and mid.batch_sn = modet.batch_sn and mid.bar_code = modet.bar_code
		left join hos_sup_dict hsd
			on mim.group_id = hsd.group_id and mim.hos_id = hsd.hos_id
			and mim.sup_id = hsd.sup_id and hsd.is_stop = 0
		left join sys_user su
			on mim.group_id = su.group_id and su.hos_id = su.hos_id
			and mim.maker = su.user_id 
		left join sys_user suc
			on mim.group_id = suc.group_id and mim.hos_id = suc.hos_id
			and mim.confirmer = suc.user_id
		where mim.group_id = #{group_id,jdbcType=INTEGER}
			and mim.hos_id = #{hos_id,jdbcType=INTEGER}
			and mim.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test=" store_id!=null and store_id != '' ">
			and mim.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test=" dept_id !=null and dept_id != '' ">
			and mim.app_dept = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND mim.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="in_no != null and in_no != ''">
				AND mim.in_no = #{in_no,jdbcType=VARCHAR}
			</if>
			
			<if test="in_date_start != null and in_date_start != ''">
				<![CDATA[AND mim.in_date >= #{in_date_start,jdbcType=DATE}]]>
			</if>
			<if test="in_date_end != null and in_date_end != ''">
				<![CDATA[AND mim.in_date <= #{in_date_end,jdbcType=DATE}]]>
			</if>
			and mim.state = 3
		group by mim.group_id, mim.hos_id, mim.copy_code, mim.in_id, mim.in_no, mim.brief, hsd.sup_name, 
			su.user_name, mim.in_date, suc.user_name, mim.confirm_date,dm.amount_money
		having sum(nvl(mfb.left_amount, 0) - nvl(modet.amount, 0)) > 0
		order by mim.in_id
	</select>
	
	<select id="queryMedInDetailByIsDir"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
		select mid.in_detail_id, mid.inv_id, inv.inv_no, inv.inv_code, inv.inv_name, inv.inv_model, mid.batch_no, 
			mid.batch_sn, mid.bar_code, mid.price, sum(nvl(mfb.left_amount, 0) - nvl(modet.amount, 0)) as imme_amount
		from med_in_detail mid
		left join med_fifo_balance mfb
			on mid.group_id = mfb.group_id and mid.hos_id = mfb.hos_id
			and mid.copy_code = mfb.copy_code and mfb.store_id = #{store_id,jdbcType=INTEGER}
			and mid.inv_id = mfb.inv_id and mid.batch_no = mfb.batch_no
			and mid.batch_sn = mfb.batch_sn and mid.bar_code = mfb.bar_code
		left join med_out_detail modet
			on mid.group_id = modet.group_id and mid.hos_id = modet.hos_id
			and mid.copy_code = modet.copy_code and mid.inv_id = modet.inv_id 
			and mid.batch_no = modet.batch_no and mid.batch_sn = modet.batch_sn 
			and mid.bar_code = modet.bar_code
		left join med_out_main mom
			on modet.group_id = mom.group_id and modet.hos_id = mom.hos_id
			and modet.copy_code = mom.copy_code and modet.out_id = mom.out_id
			and mom.store_id = #{store_id,jdbcType=INTEGER} <![CDATA[and mom.state < 3]]>
		left join med_inv_dict inv
			on mid.group_id = inv.group_id and mid.hos_id = inv.hos_id
			and mid.copy_code = inv.copy_code and mid.inv_id = inv.inv_id
			and inv.is_stop = 0
		where mid.group_id = #{group_id,jdbcType=INTEGER}
			and mid.hos_id = #{hos_id,jdbcType=INTEGER}
			and mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mid.in_id = #{in_id,jdbcType=INTEGER}
		group by mid.in_detail_id, mid.inv_id, inv.inv_no, inv.inv_code, inv.inv_name, inv.inv_model, 
			mid.batch_no, mid.batch_sn, mid.bar_code, mid.price
		<!-- 如果不显示即时库存为0的药品，取消注释 -->
		--having sum(nvl(mfb.left_amount, 0) - nvl(modet.amount, 0)) > 0
		order by mid.in_detail_id
	</select>
	
	<select id="queryMedDeptMatchByMatchd"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
		select 
			mdm.group_id as group_id,
			mdm.hos_id as hos_id,
			mdm.copy_code as copy_code,
			mdm.dept_match_id as dept_match_id,
			mdm.dept_match_name as dept_match_name,
			mdmd.inv_id as inv_id,
			mid.inv_code as inv_code,
			mid.inv_name as inv_name,
			mid.inv_model as inv_model,
			mid.unit_code as unit_code,
			hu.unit_name as unit_name,
			mdm.store_id as store_id,
			hsd.store_no as store_no,
			hsd.store_code as store_code,
			hsd.store_name as store_name,
			mdmd.amount as amount
		from med_dept_match_detail mdmd
		left join med_dept_match mdm on mdmd.group_id = mdm.group_id and mdmd.hos_id = mdm.hos_id and mdmd.copy_code = mdm.copy_code and mdmd.dept_match_id = mdm.dept_match_id
		left join med_inv_dict mid on mdmd.group_id = mid.group_id and mdmd.hos_id = mid.hos_id and mdmd.copy_code = mid.copy_code and mdmd.inv_id = mid.inv_id and mid.is_stop=0
		left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id and mid.unit_code = hu.unit_code
		left join hos_store_dict hsd on mdm.group_id = hsd.group_id and mdm.hos_id = hsd.hos_id and mdm.store_id =hsd.store_id and hsd.is_stop=0
		<where>
			<if test="group_id != null ">
				AND mdmd.group_id = #{group_id}
			</if>
			<if test="hos_id != null ">
				AND mdmd.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mdmd.copy_code = #{copy_code}
			</if>
			<if test="inv_id != null ">
				AND mdmd.inv_id = #{inv_id}
			</if>
			<if test="store_id != null ">
				AND mdm.store_id = #{store_id}
			</if>
			<if test="dept_id != null ">
				AND mdm.dept_id = #{dept_id}
			</if>
			<if test="dept_match_id != null and dept_match_id != ''">
				AND mdmd.dept_match_id = #{dept_match_id}
			</if>
			<if test="sql != null and sql != ''">
				${sql}
			</if>
		</where>
		order by mdmd.inv_id
	</select>
	
	<select id="queryMedOutMainNext"  parameterType="java.util.Map"  resultType="java.lang.Integer">
		SELECT 
		*
		FROM (
		  SELECT NVL(MIN(out_id),'0') from MED_OUT_MAIN where 
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		AND  <![CDATA[ out_id>#{out_id,jdbcType=INTEGER} ]]>
		order by out_id
		)WHERE rownum = 1
	</select>
	
	<select id="queryMedOutMainPre"  parameterType="java.util.Map"  resultType="java.lang.Integer">
		SELECT 
		*
		FROM (
		  SELECT NVL(MIN(out_id),'0') from MED_OUT_MAIN where 
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		AND  <![CDATA[ out_id<#{out_id,jdbcType=INTEGER} ]]>
		order by out_id desc
		)WHERE rownum = 1
	</select>

   
   
   <!-- 入库主表模板打印 -->
	<select id="queryMedOutPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
			a.out_no as out_no,
			b.bus_type_name ,
			c.emp_name as dept_emp,
			d.store_code as store_code,
			d.store_name as store_name,
			e.user_name as maker,
			to_char(a.out_date, 'yyyy-MM-dd hh24:mi:ss') as out_date,
			f.user_name as checker,
			to_char(a.check_date, 'yyyy-MM-dd hh24:mi:ss') as check_date,
			g.user_name as confirmer,
			to_char(a.confirm_date, 'yyyy-MM-dd hh24:mi:ss') as confirm_date,
			a.brief as brief,
			h.dept_code as dept_code,
			h.dept_name as dept_name,
			i.proj_name as proj_name,
			j.use_name as use_name,
			SUM(mod.amount_money) money_sum, <!-- 合计金额 -->
			SUM(mod.amount_money) money_sum_upper, <!-- 合计金额 -->
			to_char(a.app_date, 'yyyy-MM-dd hh24:mi:ss') app_date,
			a.year,
      		a.month,
      		a.use_code
		from med_out_main a
		left join med_out_detail mod 
			on a.group_id = mod.group_id and a.hos_id = mod.hos_id
			and a.copy_code = mod.copy_code and a.out_id = mod.out_id 
		left join med_bus_type b on a.bus_type_code=b.bus_type_code
		left join hos_emp c on a.dept_emp=c.emp_id and a.group_id=c.group_id and a.hos_id=c.hos_id 
		left join hos_store_dict d on a.store_id=d.store_id and a.store_no=d.store_no and a.group_id=d.group_id and a.hos_id=d.hos_id
		left join sys_user e on a.maker=e.user_id and a.group_id=e.group_id and a.hos_id=e.hos_id 
		left join sys_user f on a.checker=f.user_id and a.group_id=f.group_id and a.hos_id=f.hos_id 
		left join sys_user g on a.confirmer=g.user_id and a.group_id=g.group_id and a.hos_id=g.hos_id 
		left join hos_dept_dict h on a.dept_id=h.dept_id and a.dept_no =h.dept_no and a.group_id=h.group_id and a.hos_id=h.hos_id
		left join hos_proj_dict i on a.proj_id =i.proj_id and i.is_stop=0 and  a.group_id=i.group_id and a.hos_id=i.hos_id
		left join med_out_use j on a.use_code=j.use_code and  a.group_id=j.group_id and a.hos_id=j.hos_id and a.copy_code=j.copy_code
		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.out_id=#{out_id,jdbcType=NUMERIC}
		group by a.out_no, b.bus_type_name, c.emp_name, d.store_code, d.store_name, e.user_name,
			a.out_date, f.user_name, a.check_date, g.user_name, a.confirm_date, a.brief, h.dept_code,
			h.dept_name, i.proj_name, j.use_name,a.app_date,a.year,a.month,a.use_code
		order by a.out_id desc
	</select>
	
	<!-- 入库主表批量模板打印 -->
	<select id="queryMedOutPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
			a.out_id as id,a.out_no as out_no,
			b.bus_type_name,
			c.emp_name as dept_emp,
			d.store_code as store_code,
			d.store_name as store_name,
			e.user_name as maker,
			to_char(a.out_date, 'yyyy-MM-dd hh24:mi:ss') as out_date,
			f.user_name as checker,
			to_char(a.check_date, 'yyyy-MM-dd hh24:mi:ss') as check_date,
			g.user_name as confirmer,
			to_char(a.confirm_date, 'yyyy-MM-dd hh24:mi:ss') as confirm_date,
			a.brief as brief,
			h.dept_code as dept_code,
			h.dept_name as dept_name,
			i.proj_name as proj_name,
			j.use_name as use_name,
			SUM(mod.amount_money) money_sum, --合计金额
			SUM(mod.amount_money) money_sum_upper ,--合计金额
			to_char(a.app_date, 'yyyy-MM-dd hh24:mi:ss')  app_date,
			a.year,
		    a.month,
		    a.use_code
		from med_out_main a
		left join med_out_detail mod 
			on a.group_id = mod.group_id and a.hos_id = mod.hos_id
			and a.copy_code = mod.copy_code and a.out_id = mod.out_id 
		left join med_bus_type b on a.bus_type_code=b.bus_type_code
		left join hos_emp c on a.dept_emp=c.emp_id and a.group_id=c.group_id and a.hos_id=c.hos_id 
		left join hos_store_dict d on a.store_id=d.store_id and a.store_no=d.store_no and a.group_id=d.group_id and a.hos_id=d.hos_id
		left join sys_user e on a.maker=e.user_id and a.group_id=e.group_id and a.hos_id=e.hos_id 
		left join sys_user f on a.checker=f.user_id and a.group_id=f.group_id and a.hos_id=f.hos_id 
		left join sys_user g on a.confirmer=g.user_id and a.group_id=g.group_id and a.hos_id=g.hos_id 
		left join hos_dept_dict h on a.dept_id=h.dept_id and a.dept_no =h.dept_no and a.group_id=h.group_id and a.hos_id=h.hos_id
		left join hos_proj_dict i on a.proj_id =i.proj_id and i.is_stop=0 and  a.group_id=i.group_id and a.hos_id=i.hos_id
		left join med_out_use j on a.use_code=j.use_code and  a.group_id=j.group_id and a.hos_id=j.hos_id and a.copy_code=j.copy_code
		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.out_id in (${paraId})
		group by a.out_id, a.out_no, b.bus_type_name, c.emp_name, d.store_code, d.store_name, e.user_name,
			a.out_date, f.user_name, a.check_date, g.user_name, a.confirm_date, a.brief, h.dept_code,
			h.dept_name, i.proj_name, j.use_name,a.app_date,a.year,a.month,a.use_code
		order by a.out_id desc
	</select>
	
	<!-- 出库明细表模板打印 -->
	<select id="queryMedOutPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		with inv_fifi as (
		  select a.store_id,a.inv_id,nvl(a.cur_amount,0)-nvl(b.amount,0)  as amount
		  
		  from med_inv_hold a
		  left join (
		  select group_id,hos_id,copy_code,store_id,inv_id,sum(nvl(amount,0)) amount 
		  from v_med_stock_imme 
		   where 
		    <if test="p_num==1">
					 store_id in (select store_id from med_out_main where  out_id in (${paraId}))
		   </if>
			<if test="p_num==0">
					 store_id = #{store_id,jdbcType=INTEGER}
			</if>
		   
           group by group_id,hos_id,copy_code,store_id,inv_id
		  ) b on a.group_id=b.group_id
		  and a.hos_id=b.hos_id
		  and a.copy_code=b.copy_code
		  and a.inv_id=b.inv_id
		  and a.store_id=b.store_id
		  where a.cur_amount>0
		  <if test="p_num==1">
					and a.store_id in (select store_id from med_out_main where  out_id in (${paraId}))
		</if>
			<if test="p_num==0">
					and a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
		  and a.group_id = #{group_id,jdbcType=NUMERIC}
		  and a.hos_id = #{hos_id,jdbcType=NUMERIC}
		  and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		)
		
		select 
			a.out_id as id,b.inv_code as inv_code,
			b.inv_name as inv_name,
			b.inv_model as inv_model,
			c.unit_name as unit_code,
			a.price as price,
			a.amount as amount,
			a.amount_money ,
			d.fac_name as fac_name,
			a.note as note,
			e.pack_name as pack_code,
			a.num_exchange as num_exchange,
			a.num as num ,
			a.BATCH_NO as BATCH_NO,
			a.BAR_CODE as BAR_CODE,
			to_char(a.INVA_DATE,'yyyy-MM-dd') as INVA_DATE,
			ld.LOCATION_CODE,
			ld.LOCATION_NAME as LOCATION_NAME,
			to_char(a.DISINFECT_DATE,'yyyy-MM-dd') as DISINFECT_DATE,
			a.SALE_PRICE as SALE_PRICE,
			a.SALE_MONEY as SALE_MONEY,
			a.SELL_PRICE as SELL_PRICE,
			a.SELL_MONEY as SELL_MONEY,
			a.ALLOT_PRICE as ALLOT_PRICE,
			a.ALLOT_MONEY as ALLOT_MONEY,
	        b.BiD_CODE as BID_CODE,
	        inf.amount as IMME_AMOUNT,
			m.memory_encoding as memory_encoding,mtd.med_type_name as MED_TYPE_NAME, 
			RANK () OVER (ORDER BY a.out_id,ld.LOCATION_NAME desc) AS rowno
		from (
			select b.store_id,a.group_id,a.hos_id,a.copy_code,a.out_id,a.inv_id,a.inv_no,a.batch_no,a.price,
			a.sell_price,a.allot_price,a.num_exchange,a.num,a.bar_code,a.inva_date,a.disinfect_date,
            	a.location_id,a.note,a.pack_code,a.out_no,a.sale_price,min(a.out_detail_id) out_detail_id,
            	sum(a.amount) amount,sum(a.amount_money) amount_money,sum(a.sell_money) sell_money,sum(a.allot_money) allot_money,sum(a.sale_money) sale_money  
     		from med_out_detail a
     		left join med_out_main b on a.out_id=b.out_id
     		where a.group_id = #{group_id,jdbcType=NUMERIC}
				and a.hos_id = #{hos_id,jdbcType=NUMERIC}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="p_num==1">
					and a.out_id in (${paraId})
				</if>
				<if test="p_num==0">
					and a.out_id = #{out_id,jdbcType=NUMERIC}
				</if>
     		group by b.store_id,a.group_id,a.hos_id,a.copy_code,a.out_id,a.inv_id,a.inv_no,a.batch_no,a.price,a.sell_price,a.allot_price,a.num_exchange,a.num,a.bar_code,a.inva_date,a.disinfect_date,
            	a.location_id,a.note,a.pack_code,a.out_no,a.sale_price
		) a 
		left join med_inv_dict b on a.group_id=b.group_id and a.hos_id =b.hos_id and a.copy_code=b.copy_code and a.inv_id=b.inv_id and a.inv_no=b.inv_no 
		left join hos_unit c on b.unit_code=c.unit_code and a.group_id=c.group_id and a.hos_id =c.hos_id
		left join hos_fac_dict d on b.fac_id=d.fac_id and b.group_id=d.group_id and b.hos_id =d.hos_id and b.fac_no=d.fac_no
		left join hos_package e on a.pack_code=e.pack_code and a.group_id=e.group_id and a.hos_id =e.hos_id
		left join med_store_inv msi on a.group_id = msi.group_id and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
        	and a.inv_id = msi.inv_id 
        	and a.store_id = msi.store_id 
        	   <if test="p_num==1">
					and msi.store_id in (select store_id from med_out_main where  out_id in (${paraId}))
				</if>
				<if test="p_num==0">
					and msi.store_id = #{store_id,jdbcType=INTEGER}
				</if>
        	
        	
        left join med_location_dict ld on msi.group_id = ld.group_id and msi.hos_id = ld.hos_id and msi.copy_code = ld.copy_code and msi.location_id = ld.location_id and ld.is_stop = 0 
        left join med_inv m on a.group_id = m.group_id and a.hos_id = m.hos_id and a.inv_id = m.inv_id
        left join inv_fifi inf on a.inv_id=inf.inv_id
        left join med_type_dict mtd on m.group_id = mtd.group_id 
			and m.hos_id = mtd.hos_id and m.copy_code = mtd.copy_code
			and m.med_type_id = mtd.med_type_id
			and mtd.is_stop = 0	
		order by a.out_id,ld.LOCATION_NAME desc

	</select>
	
	<!-- 查询科室申领主表数据 -->
	<select id="queryMedApplyMainOut" resultType="java.util.Map" parameterType="java.util.Map">
		with tmp_imme as (
			select inv_id, store_id, sum(amount) as amount
			from (
				--出库未确认单据         
				select inv_id, mom.store_id, sum(nvl(amount, 0)) as amount
				from med_out_main mom
				left join med_out_detail medod
					on mom.group_id = medod.group_id and mom.hos_id = medod.hos_id
					and mom.copy_code = medod.copy_code and mom.out_id = medod.out_id
				where medod.group_id = #{group_id,jdbcType=INTEGER}
					AND medod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND medod.copy_code = #{copy_code,jdbcType=VARCHAR}
					<![CDATA[
					AND mom.state < 3 
					AND mom.bus_type_code <> '21'
					AND medod.amount_money > 0
					]]>
				group by inv_id, mom.store_id
				--退货未确认单据         
				union all
				select inv_id, mim.store_id, -1 * sum(nvl(amount, 0)) as amount
				from med_in_main mim
				left join med_in_detail medid
					on mim.group_id = medid.group_id and mim.hos_id = medid.hos_id
					and mim.copy_code = medid.copy_code and mim.in_id = medid.in_id
				where medid.group_id = #{group_id,jdbcType=INTEGER}
					AND medid.hos_id = #{hos_id,jdbcType=INTEGER} 
					AND medid.copy_code = #{copy_code,jdbcType=VARCHAR} 
					<![CDATA[ 
					AND mim.state < 3 
					AND mim.bus_type_code in ('10','12','16','22') 
					and medid.amount_money < 0
					]]>
				group by inv_id, mim.store_id
			)
			group by inv_id, store_id
		), 
		tmp_affi_imme as (
			select inv_id, store_id, sum(amount) as amount
			from (
				--出库未确认单据         
				select inv_id, mom.store_id, sum(nvl(amount, 0)) as amount
				from med_affi_out mom
				left join med_affi_out_detail medod
					on mom.group_id = medod.group_id and mom.hos_id = medod.hos_id
					and mom.copy_code = medod.copy_code and mom.out_id = medod.out_id
				where medod.group_id = #{group_id,jdbcType=INTEGER}
					AND medod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND medod.copy_code = #{copy_code,jdbcType=VARCHAR}
					<![CDATA[
					AND mom.state < 3 
					AND mom.bus_type_code <> '30'
					]]>
				group by inv_id, mom.store_id
				--退货未确认单据         
				union all
				select inv_id, mim.store_id, -1 * sum(nvl(amount, 0)) as amount
				from med_affi_in mim
				left join med_affi_in_detail medid
					on mim.group_id = medid.group_id and mim.hos_id = medid.hos_id
					and mim.copy_code = medid.copy_code and mim.in_id = medid.in_id
				where medid.group_id = #{group_id,jdbcType=INTEGER}
					AND medid.hos_id = #{hos_id,jdbcType=INTEGER} 
					AND medid.copy_code = #{copy_code,jdbcType=VARCHAR} 
					<![CDATA[ 
					AND mim.state < 3 
					AND mim.bus_type_code = '29' 
					]]>
				group by inv_id, mim.store_id
			)
			group by inv_id, store_id
		), 
		tmp_rela as (
			--申领单总处理数量
			select mad.apply_id, mad.detail_id, mad.app_amount, sum(nvl(maor.rela_amount, 0)) rela_amount
			from med_apply_detail mad
			left join med_apply_out_rela maor
				on mad.group_id = maor.group_id and mad.hos_id = maor.hos_id
				and mad.copy_code = maor.copy_code and mad.apply_id = maor.apply_id
				and mad.detail_id = maor.app_detail_id 
				and <![CDATA[maor.rela_type <> 5]]>
			where mad.group_id = #{group_id,jdbcType=INTEGER}
				and mad.hos_id = #{hos_id,jdbcType=INTEGER}
				and mad.copy_code = #{copy_code,jdbcType=VARCHAR}	
				and nvl(mad.is_closed, 0) = 0 <!-- 关闭的药品算做全部完成 -->
			group by mad.apply_id, mad.detail_id, mad.app_amount
		), 
		tmp_app_left as(
			--申请单药品总库存
			select mad.apply_id,  sum(nvl(hold.cur_amount, 0) + nvl(afhold.cur_amount, 0) - nvl(imme.amount, 0) - nvl(afimme.amount, 0)) left_amount
			from med_apply_main mam
			left join med_apply_detail mad
				on mam.group_id = mad.group_id and mam.hos_id = mad.hos_id
				and mam.copy_code = mad.copy_code and mam.apply_id = mad.apply_id
			left join tmp_rela tr
				on mad.apply_id = tr.apply_id and mad.detail_id = tr.detail_id
			left join med_inv_hold hold
				on mam.group_id = hold.group_id and mam.hos_id = hold.hos_id
				and mam.copy_code = hold.copy_code and mam.store_id = hold.store_id
				and mad.inv_id = hold.inv_id
			left join med_affi_inv_hold afhold
				on mam.group_id = afhold.group_id and mam.hos_id = afhold.hos_id
				and mam.copy_code = afhold.copy_code and mam.store_id = afhold.store_id
				and mad.inv_id = afhold.inv_id
			left join tmp_imme imme
				on mam.store_id = imme.store_id
				and mad.inv_id = imme.inv_id 
			left join tmp_affi_imme afimme
				on mam.store_id = afimme.store_id
				and mad.inv_id = afimme.inv_id
			where mad.group_id = #{group_id,jdbcType=INTEGER}
				and mad.hos_id = #{hos_id,jdbcType=INTEGER}
				and mad.copy_code = #{copy_code,jdbcType=VARCHAR}	
				and <![CDATA[tr.app_amount <> tr.rela_amount]]>
			group by mad.apply_id
		)
		select a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no, a.app_date, a.brief, a.store_id, hsd.store_no, 
			hsd.store_code, hsd.store_name, a.dept_id, b.dept_no, b.dept_code, b.dept_name, c.emp_name, a.sender, 
			d.user_name sender_name, a.send_date, 
			case 
				when e.rela_amount = e.app_amount then 3 
				when <![CDATA[e.rela_amount <> e.app_amount and e.rela_amount <> 0]]> then 2
				else 1 
			end rela_state
		from med_apply_main a
		left join hos_store_dict hsd
			on a.group_id = hsd.group_id and a.hos_id = hsd.hos_id
			and a.store_id = hsd.store_id
			<if test="show_history == 1">
				and a.store_no = hsd.store_no
			</if>
			<if test="show_history == 0">
				and hsd.is_stop = 0
			</if>
		left join hos_dept_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.dept_id = b.dept_id
			<if test="show_history == 1">
				and a.dept_no = b.dept_no
			</if>
			<if test="show_history == 0">
				and b.is_stop = 0
			</if>
		left join hos_emp_dict c
			on a.group_id = c.group_id and a.hos_id = c.hos_id
			and a.app_emp = c.emp_id and c.is_stop = 0
		left join sys_user d
			on a.group_id = d.group_id and a.hos_id = d.hos_id
			and a.sender = d.user_id
		left join (
			select apply_id, sum(nvl(app_amount, 0)) app_amount, sum(nvl(rela_amount, 0)) rela_amount 
			from tmp_rela
			group by apply_id
		) e
			on a.apply_id = e.apply_id 
		left join tmp_app_left g
			on a.apply_id = g.apply_id 
		where a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test="begin_app_date != null and begin_app_date != ''">
				and a.app_date &gt;= #{begin_app_date,jdbcType=DATE}
			</if>
			<if test="end_app_date != null and end_app_date != ''">
				and a.app_date &lt;= #{end_app_date,jdbcType=DATE}
			</if>
			<if test="dept_id != null and dept_id != '' and dept_id != '00'">
				and a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != '' and store_id != '00'">
				and a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="apply_no != null and apply_no != ''">
				AND a.apply_no like '${apply_no}%'
			</if>
			<if test="dept_id == '00' ">
				and a.dept_id in ( select perm_code from v_user_data_perm
				where group_id = ${group_id}
				and hos_id = ${hos_id} and user_id = ${user_id} and table_code =
				'HOS_DEPT_DICT'
				and is_read = 1 and is_write = 1)
			</if>
			<if test="store_id == '00' ">
				and a.store_id in (select perm_code from v_user_data_perm
				where group_id = ${group_id}
				and hos_id = ${hos_id} and user_id = ${user_id} and table_code =
				'HOS_STORE_DICT'
				and is_read = 1 and is_write = 1 )
			</if>
			and a.state = 3
			<if test="is_zero != null ">
				and (#{is_zero,jdbcType=INTEGER} = 1 or (#{is_zero,jdbcType=INTEGER} = 0 and nvl(g.left_amount, 0) != 0))
			</if>
			<![CDATA[and e.app_amount > 0]]>
			and e.rela_amount != e.app_amount
			order by a.app_date, b.dept_name, a.store_id, a.dept_id
	</select>
	
	<!-- 查询科室申领明细数据 -->
	<select id="queryMedApplyDetailOut" resultType="java.util.Map" parameterType="java.util.Map" >
		with tmp_imme as (
			select inv_id, sum(amount) as amount
			from (
				--出库未确认单据         
				select inv_id, sum(nvl(amount, 0)) as amount
				from med_out_main mom
				left join med_out_detail medod
					on mom.group_id = medod.group_id and mom.hos_id = medod.hos_id
					and mom.copy_code = medod.copy_code and mom.out_id = medod.out_id
				where medod.group_id = #{group_id,jdbcType=INTEGER}
					AND medod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND medod.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[
					AND mom.state < 3 
					AND mom.bus_type_code <> '21'
					AND medod.amount_money > 0
					]]>
				group by inv_id
				--退货未确认单据         
				union all
				select inv_id, -1 * sum(nvl(amount, 0)) as amount
				from med_in_main mim
				left join med_in_detail medid
					on mim.group_id = medid.group_id and mim.hos_id = medid.hos_id
					and mim.copy_code = medid.copy_code and mim.in_id = medid.in_id
				where medid.group_id = #{group_id,jdbcType=INTEGER}
					AND medid.hos_id = #{hos_id,jdbcType=INTEGER} 
					AND medid.copy_code = #{copy_code,jdbcType=VARCHAR} 
					AND mim.store_id = #{store_id,jdbcType=INTEGER} 
					<![CDATA[ 
					AND mim.state < 3 
					AND mim.bus_type_code in ('10','12','16','22') 
					and medid.amount_money < 0
					]]>
				group by inv_id
			)
			group by inv_id
		), 
		tmp_affi_imme as (
			select inv_id, sum(amount) as amount
			from (
				--出库未确认单据         
				select inv_id, sum(nvl(amount, 0)) as amount
				from med_affi_out mom
				left join med_affi_out_detail medod
					on mom.group_id = medod.group_id and mom.hos_id = medod.hos_id
					and mom.copy_code = medod.copy_code and mom.out_id = medod.out_id
				where medod.group_id = #{group_id,jdbcType=INTEGER}
					AND medod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND medod.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[
					AND mom.state < 3 
					AND mom.bus_type_code <> '30'
					]]>
				group by inv_id
				--退货未确认单据         
				union all
				select inv_id, -1 * sum(nvl(amount, 0)) as amount
				from med_affi_in mim
				left join med_affi_in_detail medid
					on mim.group_id = medid.group_id and mim.hos_id = medid.hos_id
					and mim.copy_code = medid.copy_code and mim.in_id = medid.in_id
				where medid.group_id = #{group_id,jdbcType=INTEGER}
					AND medid.hos_id = #{hos_id,jdbcType=INTEGER} 
					AND medid.copy_code = #{copy_code,jdbcType=VARCHAR} 
					AND mim.store_id = #{store_id,jdbcType=INTEGER} 
					<![CDATA[ 
					AND mim.state < 3 
					AND mim.bus_type_code = '29' 
					]]>
				group by inv_id
			)
			group by inv_id
		)
		SELECT 
			a.group_id, a.hos_id, a.copy_code, a.apply_id, a.detail_id, a.inv_id, a.inv_no, b.inv_code, b.inv_name, 
			b.inv_model, c.unit_name, d.fac_name, b.is_com, a.app_amount, nvl(g.rela_amount, 0) as rela_amount, 
			nvl(e.cur_amount, 0) common_amount, nvl(f.cur_amount, 0) affi_amount, 
			nvl(e.cur_amount, 0) - nvl(h.amount, 0) imme_amount, nvl(f.cur_amount, 0) - nvl(i.amount, 0) affi_imme_amount, 
			nvl(b.plan_price, 0) price, a.app_amount*nvl(b.plan_price, 0) amount_money, a.note, a.is_closed
		FROM med_apply_detail a
		left join med_inv_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.inv_id = b.inv_id
			<if test="show_history == 1">
			and a.inv_no = b.inv_no
			</if>
			<if test="show_history == 0">
				and b.is_stop = 0
			</if>
		left join hos_unit c
			on b.group_id = c.group_id and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
	    left join hos_fac_dict d
	   		on b.group_id = d.group_id and b.hos_id = d.hos_id
	    	and b.fac_id = d.fac_id and b.fac_no = d.fac_no
		left join med_inv_hold e
			on a.group_id = e.group_id and a.hos_id = e.hos_id
			and a.copy_code = e.copy_code and a.inv_id = e.inv_id
			and e.store_id = #{store_id,jdbcType=INTEGER} 
		left join med_affi_inv_hold f
			on a.group_id = f.group_id and a.hos_id = f.hos_id
			and a.copy_code = f.copy_code and a.inv_id = f.inv_id
			and f.store_id = #{store_id,jdbcType=INTEGER} 
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) rela_amount 
			from med_apply_out_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and apply_id = #{apply_id,jdbcType=INTEGER} 
				and <![CDATA[rela_type <> 5]]>
			group by app_detail_id
		) g
			on a.detail_id = g.app_detail_id
		left join tmp_imme h
			on a.inv_id = h.inv_id
		left join tmp_affi_imme i
			on a.inv_id = i.inv_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and a.apply_id = #{apply_id,jdbcType=INTEGER} 
			and nvl(a.is_closed, 0) = 0
			and a.app_amount - nvl(g.rela_amount, 0) > 0
		ORDER BY a.detail_id
	</select>
	
	<!-- 用于出库单主表组装 -->
	<select id="queryOutMainByAppCollect" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		<!-- 业务类型bus_type_code在Controller里判断 -->
		SELECT DISTINCT mam.store_id, c.store_no, c.store_code, c.store_name, mam.dept_id, d.dept_no, 
			d.dept_code, d.dept_name, mam.app_emp dept_emp, b.emp_no, b.emp_code, b.emp_name, 
			to_char('由科室申领单汇总生成') brief
			<!-- '由科室申领单'||wm_concat(to_char(mam.apply_no))||'生成' brief -->
		FROM med_apply_detail mad 
		LEFT JOIN med_apply_main mam
			ON mad.group_id = mad.group_id and mad.hos_id = mad.hos_id
			and mad.copy_code = mam.copy_code and mad.apply_id = mam.apply_id
		LEFT JOIN hos_emp_dict b
			ON mam.group_id = b.group_id and mam.hos_id = b.hos_id
			and mam.app_emp = b.emp_id and b.is_stop = 0
		LEFT JOIN hos_store_dict c
			ON mam.group_id = c.group_id and mam.hos_id = c.hos_id
			and mam.store_id = c.store_id and c.is_stop = 0
		LEFT JOIN hos_dept_dict d
			ON mam.group_id = d.group_id and mam.hos_id = d.hos_id
			and mam.dept_id = d.dept_id and d.is_stop = 0
		WHERE mad.group_id = #{group_id,jdbcType=INTEGER} 
			and mad.hos_id = #{hos_id,jdbcType=INTEGER} 
			and mad.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and (
				<if test="detail_ids == null or detail_ids == ''">
					mad.detail_id in ('')
				</if> 
				<if test="detail_ids != null and detail_ids != ''">
					mad.detail_id in (${detail_ids})
				</if> 
				<if test="apply_ids != null and apply_ids != ''">
					 or mam.apply_id in (${apply_ids})
				</if>
			) 
	</select>
	
	<!-- 汇总生成出库单查询明细 -->
	<select id="queryOutDetailByAppCollect" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		SELECT 
			a.group_id, a.hos_id, a.copy_code, e.store_id, a.apply_id, a.detail_id, a.inv_id, a.inv_no, b.inv_code, 
			b.inv_name, nvl(a.app_amount, 0) - nvl(c.rela_amount, 0) amount, b.is_sec_whg 
		FROM med_apply_detail a
		LEFT JOIN med_apply_main e
			ON a.group_id = e.group_id
			AND a.hos_id = e.hos_id
			AND a.copy_code = e.copy_code
			AND a.apply_id = e.apply_id
		LEFT JOIN med_inv_dict b
			ON a.group_id = b.group_id
			AND a.hos_id = b.hos_id
			AND a.copy_code = b.copy_code
			AND a.inv_id = b.inv_id
			AND a.inv_no = b.inv_no
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) rela_amount 
			from med_apply_out_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and (
					<if test="detail_ids == null or detail_ids == ''">
						app_detail_id in ('')
					</if> 
					<if test="detail_ids != null and detail_ids != ''">
						app_detail_id in (${detail_ids})
					</if> 
					<if test="apply_ids != null and apply_ids != ''">
						 or apply_id in (${apply_ids})
					</if>
				) 
				and <![CDATA[rela_type <> 5]]>
			group by app_detail_id
		) c
			on a.detail_id = c.app_detail_id
		<!-- 自动匹配仓库
		left join med_store_inv msi 
			on mad.group_id = msi.group_id and mad.hos_id = msi.hos_id 
			and mad.copy_code = msi.copy_code and mad.inv_id = msi.inv_id 
			and msi.is_apply = 1 
		left join hos_store_dict hsd 
			on msi.group_id = hsd.group_id and msi.hos_id = hsd.hos_id
			and msi.store_id = hsd.store_id and hsd.is_stop = 0
		 -->
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and (
				<if test="detail_ids == null or detail_ids == ''">
					a.detail_id in ('')
				</if> 
				<if test="detail_ids != null and detail_ids != ''">
					a.detail_id in (${detail_ids})
				</if> 
				<if test="apply_ids != null and apply_ids != ''">
					 or a.apply_id in (${apply_ids})
				</if>
			) 
			and nvl(a.is_closed, 0) = 0
		ORDER BY a.detail_id desc
	</select>
	
	<!-- 获取药品批次信息 -->
	<select id="queryMedInvBatchList" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		with inv_temp as (
			select 
				a.group_id,
				a.hos_id,
				a.copy_code,
				a.inv_id,  --药品ID
				e.inv_no,  -- 药品变更号
				e.inv_code,  --药品编码
				e.inv_name,  --药品名称
				e.inv_model,  --规格型号
				h.unit_name,  --计量单位
				f.med_type_name,  --药品类别名称
				g.fac_name,  --生成产商名称
				e.spell_code,  --拼音码
				e.wbx_code,  --五笔码
				a.batch_no,  --批号
				sum(nvl(a.left_amount, 0)) as left_amount,  --当前库存数量
				sum(nvl(a.left_money, 0)) as left_money,  --当前库存数量
				a.price,  --单价
				nvl(a.sale_price, 0) as sale_price,  --批发单价
				nvl(e.sell_price, 0) as sell_price,  --零售单价
				e.alias
			from med_fifo_balance a
			left join med_inv_dict e
				on a.group_id = e.group_id and a.hos_id = e.hos_id
				and a.copy_code = e.copy_code and a.inv_id = e.inv_id
				and e.is_stop = 0 and e.use_state = 1
			left join med_type_dict f
				on a.group_id = f.group_id and a.hos_id = f.hos_id
				and a.copy_code = f.copy_code and e.med_type_id = f.med_type_id
				and f.is_stop = 0
			left join hos_fac_dict g
				on a.group_id = g.group_id and a.hos_id = g.hos_id
				and e.fac_id = g.fac_id and e.fac_no=g.fac_no
			left join hos_unit h
				on a.group_id = h.group_id and a.hos_id = h.hos_id
				and e.unit_code = h.unit_code 
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.store_id = #{store_id,jdbcType=INTEGER}
				<if test="is_bar != null and is_bar == 1">
					AND a.bar_code &lt;&gt; '-'
				</if>
				<if test="is_bar != null and is_bar == 0">
					AND a.bar_code = '-'
				</if>
				<if test="med_type_code != null and med_type_code != '' ">
			    and f.med_type_code like '${med_type_code}%'
				</if>
			group by a.group_id, a.hos_id, a.copy_code, a.inv_id, e.inv_no, e.inv_code, e.inv_name, e.spell_code, e.alias, 
				e.wbx_code, a.batch_no, a.price, a.sale_price, e.sell_price, e.inv_model, f.med_type_name, g.fac_name, h.unit_name
		),
		out_temp as (  
			select inv_id, batch_no, price, sum(amount) amount
			from(
				--出库未确认
				select 
					b.inv_id,
					b.batch_no,  --批号
					b.price,  --单价
					sum(nvl(b.amount, 0)) as amount   
				from med_out_main a
				left join med_out_detail b 
					on a.group_id = b.group_id and a.hos_id = b.hos_id 
					and a.copy_code = b.copy_code and a.out_id = b.out_id
				where a.group_id = #{group_id,jdbcType=INTEGER}
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND a.store_id = #{store_id,jdbcType=INTEGER}
					AND <![CDATA[ a.state < 3 ]]>
					AND <![CDATA[ a.bus_type_code <> '21' ]]>
					AND <![CDATA[ b.amount_money > 0  ]]>
				group by b.inv_id, b.batch_no, b.price 
				--退货未确认
				union all
				select 
					b.inv_id,
					b.batch_no,  --批号
					b.price,  --单价
					-1 * sum(nvl(b.amount, 0)) as amount 
				from med_in_main a
				left join med_in_detail b 
					on a.group_id = b.group_id and a.hos_id = b.hos_id 
					and a.copy_code = b.copy_code and a.in_id = b.in_id
				where a.group_id = #{group_id,jdbcType=INTEGER}
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND a.store_id = #{store_id,jdbcType=INTEGER}
					AND <![CDATA[ a.state < 3 ]]>
					AND a.bus_type_code in ('10','12','16','22')
					and <![CDATA[ b.amount_money < 0 ]]>
				group by b.inv_id, b.batch_no, b.price 
			)
			group by inv_id, batch_no, price  
		),inv_cert_tmp as(
           select a.inv_id,a.group_id,a.hos_id,a.copy_code,min(a.cert_id) cert_id
           from med_inv_cert_rela a
           where a.group_id = #{group_id,jdbcType=INTEGER}
                 and a.hos_id = #{hos_id,jdbcType=INTEGER}
                 and a.copy_code = #{copy_code,jdbcType=VARCHAR}
           group by a.inv_id,a.group_id,a.hos_id,a.copy_code
       )
		select 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.inv_id,  --药品ID
			a.inv_no,  --药品变更号
			a.inv_code,  --药品编码
			a.inv_name,  --药品名称
			a.inv_model,  --规格型号
			a.unit_name,  --计量单位
			a.med_type_name,  --药品类别名称
			a.fac_name,  --生成产商名称
			a.batch_no,  --批号
			a.left_amount as cur_amount,  --当前库存数量
			a.left_money as cur_money,  --当前库存金额
			a.price,  --单价
			a.sale_price,  --批发单价
			a.sell_price,  --零售单价
			nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
			mic.cert_id,
			mic.cert_code
		from inv_temp a
		left join out_temp b 
			on a.inv_id = b.inv_id 
			and a.batch_no= b.batch_no 
			and a.price = b.price
		left join inv_cert_tmp ict 	
			on ict.group_id = a.group_id
         	and ict.hos_id = a.hos_id
         	and ict.copy_code = a.copy_code
         	and ict.inv_id = a.inv_id 
    	left join med_inv_cert mic 
    		on mic.group_id = ict.group_id
         	and mic.hos_id = ict.hos_id
         	and mic.copy_code = ict.copy_code
         	and mic.cert_id = ict.cert_id
         	and mic.cert_state = 1
		<where>
			<if test="is_zero != null and is_zero == 0">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
					a.inv_code like '%${inv_code}%' or 
					a.inv_name like '%${inv_code}%'
					or
					a.spell_code like '%${inv_code}%' or 
					a.wbx_code like '%${inv_code}%' or
					a.alias like '%${inv_code}%'
				)
			</if>
		</where>
		order by a.inv_code, a.batch_no 
	</select>
	
	<!-- 出库明细查询 -->
	<select id="queryOutDetails" parameterType="java.util.Map" resultType="java.util.Map" >
		with detail_list as (
		     select md.group_id,md.hos_id,md.copy_code,md.out_id,to_char(md.out_no) out_no,to_char(mm.out_date,'yyyy-MM-dd') out_date,
		       mid.inv_code,mid.inv_name,hu.unit_name,mid.inv_model,md.batch_no,md.bar_code,md.price,md.amount,md.amount_money,
		       hfd.fac_name,mbt.bus_type_name as bus_type_name,
		       mm.store_id as store_id, mm.store_no as store_no,  hsd.store_code as store_code,  hsd.store_name as store_name,
		       mm.brief as brief, mm.dept_emp as dept_emp, he.emp_name as emp_name,
		       mm.maker as maker , sumaker.user_name as user_name_make, mm.confirmer as confirmer, suconfirmer.user_name as user_name_confirmer,
		       to_char(mm.confirm_date,'yyyy-MM-dd') as confirm_date, mm.dept_id as dept_id, mm.dept_no as dept_no,
		       hdd.dept_code as dept_code,  hdd.dept_name as dept_name, mid.med_type_id, mtd.med_type_name,case when  nvl(spc.print_count,0)>0 then 1 else 0 end print_state,
		       mm.state
		    from med_out_detail md
		    left join med_out_main mm on md.group_id=mm.group_id and md.hos_id=mm.hos_id and md.copy_code=mm.copy_code
		         and md.out_id=mm.out_id
		    left join med_inv_dict mid on md.group_id=mid.group_id and md.hos_id=mid.hos_id and md.copy_code=mid.copy_code
		         and md.inv_id=mid.inv_id and md.inv_no=mid.inv_no 
		    left join med_type_dict mtd on mtd.group_id = mid.group_id
				and mtd.hos_id = mid.hos_id
				and mtd.copy_code = mid.copy_code
				and mtd.med_type_id = mid.med_type_id
				and mtd.med_type_no = mid.med_type_no 
		    left join hos_unit hu on mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code =hu.unit_code and hu.is_stop=0
		    left join hos_fac_dict hfd on mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no=hfd.fac_no
		    left join hos_store_dict hsd on mm.group_id = hsd.group_id and mm.hos_id = hsd.hos_id and mm.store_id = hsd.store_id and mm.store_no = hsd.store_no
		    left join med_bus_type mbt on mm.bus_type_code = mbt.bus_type_code 
		    left join hos_emp he on mm.group_id = he.group_id and mm.hos_id = he.hos_id  and mm.dept_emp = he.emp_id and mm.dept_id = he.dept_id and mm.dept_no = he.dept_no
		    left join sys_user sumaker on mm.group_id = sumaker.group_id and mm.hos_id = sumaker.hos_id and mm.maker = sumaker.user_id
		    left join sys_user suconfirmer on mm.group_id = suconfirmer.group_id and mm.hos_id = suconfirmer.hos_id and mm.confirmer = suconfirmer.user_id 
		    left join hos_dept_dict hdd on mm.group_id = hdd.group_id and mm.hos_id = hdd.hos_id  and mm.dept_id = hdd.dept_id and mm.dept_no = hdd.dept_no
		    left join sys_print_count spc on md.group_id = spc.group_id and md.hos_id = spc.hos_id and md.copy_code=spc.copy_code and  md.out_no = spc.business_no
		    <where>             
			        mbt.sel_flag = 'out'         
				<if test="group_id != null ">
					AND mm.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null ">
					AND mm.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mm.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="out_date_start != null and out_date_start != ''">
					<![CDATA[AND mm.out_date >= #{out_date_start,jdbcType=DATE}]]>
				</if>
				<if test="out_date_end != null and out_date_end != ''">
					<![CDATA[AND mm.out_date <= #{out_date_end,jdbcType=DATE}]]>
				</if>
				<if test="bus_type_code != null and bus_type_code != ''">
				    AND mm.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
				</if>
				<if test="maker_code != null and maker_code != ''">
					AND sumaker.user_id = #{maker_code,jdbcType=VARCHAR}
				</if>
				<if test="state != null and state != ''">
					AND mm.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="confirm_date_start != null and confirm_date_start != ''">
					<![CDATA[AND mm.confirm_date >= #{confirm_date_start,jdbcType=DATE}]]>
				</if>
				<if test="confirm_date_end != null and confirm_date_end != ''">
					<![CDATA[AND mm.confirm_date <= #{confirm_date_end,jdbcType=DATE}]]>
				</if>
				<if test="dept_id != null and dept_id != '' and dept_id != '00'">
					AND mm.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="emp_id != null and emp_id != ''">
					and he.emp_id =#{emp_id}
				</if>  
				<if test="store_id != null and store_id != '' and store_id != '00' ">
					AND mm.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="out_no != null and out_no != ''">
					AND mm.out_no like '${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					and mm.brief like '%${brief}%'
				</if>
				<if test="batch_no != null and batch_no != ''">
					and md.batch_no like '%${batch_no}%'
				</if>
				<if test="med_type_code != null and med_type_code != ''">
					AND mtd.med_type_code like '${med_type_code}%'
				</if>
				<if test="dept_id == '00' ">
					and mm.dept_id in ( select perm_code from v_user_data_perm
						where group_id = #{group_id}
							and hos_id = #{hos_id} 
							and user_id = #{user_id} 
							and table_code = 'HOS_DEPT_DICT'
							and is_read = 1 
							and is_write = 1
					)
				</if>
				<if test="store_id == '00' ">
					and mm.store_id in (
						select perm_code from v_user_data_perm
						where group_id = #{group_id}
							and hos_id = #{hos_id} 
							and user_id = #{user_id} 
							and table_code = 'HOS_STORE_DICT'
							and is_read = 1 
							and is_write = 1 
					)
				</if>
				<if test="inv_code != null and inv_code != ''">
						AND (
							 mid.inv_code like '%${inv_code}%'
							or upper(mid.inv_name) like '%${inv_code}%'
							or upper(mid.inv_model) like '%${inv_code}%'
							or upper(mid.spell_code) like '%${inv_code}%'
							or upper(mid.wbx_code) like '%${inv_code}%'
							or upper(mid.bid_code) like '%${inv_code}%'
							or lower(mid.spell_code) like '%${inv_code}%'
							or lower(mid.bid_code) like '%${inv_code}%'
							or lower(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.inv_name) like '%${inv_code}%'
						
					)
				</if>
				<if test="print_state != null and print_state != ''">
					and case when  nvl(spc.print_count,0)>0 then 1 else 0 end  = #{print_state}
				</if>
			</where>    
		),sum_list as (
		   select null group_id,null hos_id,null copy_code,null out_id,'合计' out_no,null out_date,
		       null inv_code,null inv_name,null unit_name,null inv_model,null batch_no, null bar_code,null price,sum(amount) amount,
		       sum(amount_money) amount_money,  null fac_name,null  bus_type_name,
		       null store_id, null store_no,  null store_code,  null store_name,
		       null brief, null dept_emp, null emp_name,
		       null maker , null user_name_make, null confirmer,null user_name_confirmer,
		       null confirm_date, null dept_id, null dept_no, null dept_code,  null dept_name
		       , null as med_type_id, null as med_type_name, null print_state,null state
		   from detail_list
		)
		select group_id, hos_id, copy_code, out_id,out_no, out_date,
		        inv_code, inv_name, unit_name, inv_model, batch_no,  bar_code, price,amount,
		        amount_money,   fac_name,  bus_type_name,
		        store_id,  store_no,   store_code,   store_name,
		        brief,  dept_emp,  emp_name,
		        maker ,  user_name_make,  confirmer, user_name_confirmer,
		        confirm_date,  dept_id,  dept_no,  dept_code,   dept_name
		        , med_type_id,med_type_name,print_state,state
		from detail_list
		union all
		select group_id, hos_id, copy_code, out_id,out_no, out_date,
		        inv_code, inv_name, unit_name, inv_model, batch_no,  bar_code, price,amount,
		       amount_money,   fac_name,  bus_type_name,
		        store_id,  store_no,   store_code,   store_name,
		        brief,  dept_emp,  emp_name,
		        maker ,  user_name_make,  confirmer, user_name_confirmer,
		        confirm_date,  dept_id,  dept_no,  dept_code,   dept_name
		        , med_type_id,med_type_name,print_state,state
		from sum_list
		order by out_id desc, out_no, out_date, inv_code
				
		
	</select>

	<!-- 确认前单据状态校验 -->
	<select id="existsMedOutStateForConfirm" parameterType="java.util.List" resultType="java.lang.Integer">
		SELECT count(1)
		FROM MED_OUT_MAIN
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and out_id = #{item.out_id,jdbcType=INTEGER}
			and state = 3
		</foreach>
	</select>
</mapper>

