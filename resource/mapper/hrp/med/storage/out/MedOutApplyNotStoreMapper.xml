<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.storage.out.MedOutApplyNotStoreMapper">

	<resultMap id="medApplyMain" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="apply_id" column="apply_id" />
		<result property="apply_no" column="apply_no" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="app_emp" column="app_emp" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="app_date" column="app_date" />
		<result property="maker" column="maker" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="sender" column="sender" />
		<result property="send_date" column="send_date" />
		<result property="state" column="state" />
		<result property="back_reason" column="back_reason" />
		<result property="brief" column="brief" />
		<result property="rela_state" column="rela_state" />
	</resultMap>

	<resultMap id="medApplyDetail" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="bid_code" column="bid_code" />
		<result property="apply_id" column="apply_id" />
		<result property="detail_id" column="detail_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="fac_name" column="fac_name" />
		<result property="is_com" column="is_com" />
		<result property="price" column="price" />
		<result property="app_amount" column="app_amount" />
		<result property="amount_money" column="amount_money" />
		<result property="note" column="note" />
		<result property="is_sec_whg" column="is_sec_whg" />
		<result property="bid_code" column="bid_code" />
		<result property="is_closed" column="is_closed" />
		<result property="out_amount" column="out_amount" />
		<result property="pur_amount" column="pur_amount" />
		<result property="inv_structure" column="inv_structure" />
	</resultMap>
	<resultMap id="medStoreInv" type="java.util.Map">
		<result property="inv_id" column="inv_id" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
	</resultMap>

	<select id="query" resultMap="medApplyMain" parameterType="java.util.Map">
		select a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no,
			to_char(a.app_date, 'yyyy-MM-dd hh24:mi:ss') app_date, a.brief, b.dept_name, c.emp_name, a.state, a.back_reason,
			case 
				when ((nvl(e.rela_amount, 0) = 0) and (nvl(e.pur_amount, 0) = 0)) then 1 
				when e.rela_amount = e.app_amount then 3 
				when nvl(e.pur_amount, 0) != 0 then 4
				else 2
			end rela_state
		from med_apply_main a
		left join hos_dept_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.dept_id = b.dept_id
			<if test="show_history == 1">
				and a.dept_no = b.dept_no
			</if>
			<if test="show_history == 0">
				and b.is_stop = 0
			</if>
		left join hos_emp_dict c
			on a.group_id = c.group_id and a.hos_id = c.hos_id
			and a.app_emp = c.emp_id and c.is_stop = 0
		inner join (
			select aa.apply_id,sum(nvl(aa.app_amount,0)) app_amount,sum(nvl(bb.rela_amount,0)) as rela_amount,
				sum(nvl(cc.rela_amount,0)) as pur_amount
	        from (
	             select mad.group_id,mad.hos_id,mad.copy_code,mad.apply_id,mad.detail_id,
	             	sum(nvl(mad.app_amount,0)) app_amount
	             from med_apply_detail mad
	             <if test="inv_code != null and inv_code != ''">
					LEFT JOIN med_inv_dict mid  ON mad.group_id = mid.group_id and mad.hos_id = mid.hos_id
						and mad.copy_code = mid.copy_code and mad.inv_id = mid.inv_id
						and mad.inv_no = mid.inv_no
				 </if>
	             <where>
	             	 	mad.group_id = #{group_id,jdbcType=INTEGER}
					and mad.hos_id = #{hos_id,jdbcType=INTEGER}
					and mad.copy_code = #{copy_code,jdbcType=VARCHAR}		
					and nvl(mad.is_closed, 0) != 1 <!-- 关闭的药品算做全部完成 -->
					<if test="inv_code != null and inv_code != ''">
						and (mid.inv_code like '%${inv_code}%' or mid.inv_name like '%${inv_code}%')
					</if>
	             </where>
	             group by mad.group_id,mad.hos_id,mad.copy_code,mad.apply_id,mad.detail_id
	        ) aa left join (
	          	select group_id, hos_id, copy_code, rela_type, apply_id , app_detail_id, sum(nvl(rela_amount,0)) as rela_amount
	          	from med_apply_out_rela
	          	<where>
	          			group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
	          	</where>
	            group by group_id, hos_id, copy_code, rela_type, apply_id, app_detail_id
	        ) bb on aa.group_id=bb.group_id and aa.hos_id=bb.hos_id and aa.copy_code=bb.copy_code 
	        	and aa.apply_id=bb.apply_id and aa.detail_id=bb.app_detail_id
	        left join (
	        	select group_id,hos_id,copy_code,rela_type,apply_id,app_detail_id,sum(nvl(rela_amount,0)) as rela_amount
	        	from med_apply_pur_rela
	        	<where>
	        			group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
	        	</where>
	        	group by group_id, hos_id, copy_code, rela_type, apply_id, app_detail_id
	        ) cc on aa.group_id=cc.group_id and aa.hos_id=cc.hos_id and aa.copy_code=cc.copy_code
	        	and aa.apply_id=cc.apply_id and aa.detail_id=cc.app_detail_id
	        group by aa.apply_id
	        
			<!-- select mad.apply_id, sum(nvl(mad.app_amount, 0)) app_amount, sum(nvl(maor.rela_amount, 0)) rela_amount
			from med_apply_detail mad
			left join med_apply_out_rela maor
				on mad.group_id = maor.group_id and mad.hos_id = maor.hos_id
				and mad.copy_code = maor.copy_code and mad.apply_id = maor.apply_id
				and mad.detail_id = maor.app_detail_id 
				and <![CDATA[maor.rela_type <> 5]]>
			<if test="inv_code != null and inv_code != ''">
				LEFT JOIN med_inv_dict mid 
					ON mad.group_id = mid.group_id and mad.hos_id = mid.hos_id
					and mad.copy_code = mid.copy_code and mad.inv_id = mid.inv_id
					and mad.inv_no = mid.inv_no
			</if>
			where mad.group_id = #{group_id,jdbcType=INTEGER}
				and mad.hos_id = #{hos_id,jdbcType=INTEGER}
				and mad.copy_code = #{copy_code,jdbcType=VARCHAR}		
				and nvl(mad.is_closed, 0) != 1 关闭的药品算做全部完成
				<if test="inv_code != null and inv_code != ''">
					and (mid.inv_code like '%${inv_code}%' or mid.inv_name like '%${inv_code}%')
				</if>
			group by mad.apply_id -->
		) e
			on a.apply_id = e.apply_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_app_date != null and begin_app_date != ''">
				and a.app_date &gt;= #{begin_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="end_app_date != null and end_app_date != ''">
				and a.app_date &lt;= #{end_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="dept_id != null and dept_id != '' and dept_id != '00'">
				and a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != ''">
				and a.brief = #{brief,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != '' and store_id != '00'">
				and a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and a.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="apply_no != null and apply_no != ''">
				AND a.apply_no like '%${apply_no}%'
			</if>
			<if test="dept_id == '00' ">
				and to_char(a.dept_id) in ( select perm_code from v_user_data_perm
				where group_id = #{group_id}
				and hos_id = #{hos_id} and user_id = #{user_id} and table_code =
				'HOS_DEPT_DICT'
				and is_read = 1 and is_write = 1)
			</if>
			<if test="store_id == '00' ">
				and ((to_char(a.store_id) in (
					select perm_code from v_user_data_perm
					where group_id = #{group_id}
						and hos_id = #{hos_id} and user_id = #{user_id} 
						and table_code = 'HOS_STORE_DICT' and is_read = 1
					)) 
					or (a.store_id is null)
				)
			</if>
		order by a.apply_id desc
	</select>
	
	<select id="queryNDetail" parameterType="java.util.Map" resultType="java.util.Map">
		select 
			mad.group_id,mad.hos_id,mad.copy_code,mam.apply_id,mam.apply_no,mam.dept_id,
       		mam.dept_no,hdd.dept_code,hdd.dept_name,mam.state,to_char(mam.app_date, 'yyyy-MM-dd hh24:mi:ss') app_date,
       		mid.inv_code,mid.inv_name,mid.inv_id,mid.inv_no,mid.inv_model,mid.unit_code,hu.unit_name,
       		hfd.fac_name,nvl(mad.app_amount,0) app_amount,nvl(mid.plan_price,0) price, 
       		nvl(mad.app_amount,0)*nvl(mid.plan_price,0) amount_money,mid.is_com,mid.is_sec_whg,mad.note,
       		case 
				when nvl(e.rela_amount, 0) = 0 then 1 
				when e.rela_amount = e.app_amount then 3 
				else 2 
			end rela_state
		from med_apply_detail mad
		left join med_inv_dict mid on mad.group_id=mid.group_id and mad.hos_id = mid.hos_id 
		     and mad.copy_code = mid.copy_code and  mad.inv_id = mid.inv_id and mad.inv_no = mid.inv_no
		left join hos_unit hu on mid.group_id = hu.group_id  and mid.hos_id = hu.hos_id and mid.unit_code = hu.unit_code and hu.is_stop =0
		left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id and mid.fac_id = hfd.fac_id and mid.fac_no=hfd.fac_no
		left join med_apply_main mam on mad.group_id = mam.group_id and mad.hos_id = mam.hos_id
		     and mad.copy_code = mam.copy_code and mad.apply_id = mam.apply_id
		left join hos_dept_dict hdd on mam.group_id = hdd.group_id and mam.hos_id = hdd.hos_id 
			and mam.dept_id = hdd.dept_id
		    <if test="show_history == 1">
				and mam.dept_no = hdd.dept_no
			</if>
			<if test="show_history == 0">
				and hdd.is_stop = 0
			</if>
		left join (
			select mad.apply_id, sum(nvl(mad.app_amount, 0)) app_amount, sum(nvl(maor.rela_amount, 0)) rela_amount
			from med_apply_detail mad
			left join med_apply_out_rela maor
				on mad.group_id = maor.group_id and mad.hos_id = maor.hos_id
				and mad.copy_code = maor.copy_code and mad.apply_id = maor.apply_id
				and mad.detail_id = maor.app_detail_id 
				and <![CDATA[maor.rela_type <> 5]]>
			where mad.group_id = #{group_id,jdbcType=INTEGER}
				and mad.hos_id = #{hos_id,jdbcType=INTEGER}
				and mad.copy_code = #{copy_code,jdbcType=VARCHAR}		
			group by mad.apply_id
		) e on mam.apply_id = e.apply_id 
		<where>
			<if test="group_id != null and group_id != ''">
				and mad.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and mad.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and mad.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="begin_app_date != null and begin_app_date != ''">
				and mam.app_date &gt;= #{begin_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="end_app_date != null and end_app_date != ''">
				and mam.app_date &lt;= #{end_app_date,jdbcType=TIMESTAMP}
			</if>
			<if test="dept_id != null and dept_id != '' and dept_id != '00'">
				and mam.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				and mam.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != ''">
				and mam.brief = #{brief,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != '' and store_id != '00'">
				and mam.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and mam.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="apply_no != null and apply_no != ''">
				AND mam.apply_no like '${apply_no}%'
			</if>
			<if test="dept_id == '00' ">
				and mam.dept_id in ( 
					select perm_code from v_user_data_perm
					where group_id = ${group_id}
						and hos_id = ${hos_id} and user_id = ${user_id} 
						and table_code = 'HOS_DEPT_DICT'
						and is_read = 1 and is_write = 1
				)
			</if>
			<if test="store_id == '00' ">
				and ((mam.store_id in (select perm_code from v_user_data_perm
					where group_id = ${group_id}
						and hos_id = ${hos_id} and user_id = ${user_id} 
						and table_code = 'HOS_STORE_DICT'
						and is_read = 1 
						and is_write = 1 )
					) or (mam.store_id is null))
			</if>
			<if test="inv_code !=null and inv_code !=''  ">
				and (
					mid.inv_code like '${inv_code}%'
					or mid.inv_name like '${inv_code}%'
				)
			</if>
		</where>
		order by mad.apply_id desc,mad.detail_id asc
	</select>
	
	<!-- 获取一个主表序列 -->
	<select id="queryMedApplyMainSeq" resultType="java.lang.Long"
		useCache="false" flushCache="true">
		SELECT MED_APPLY_MAIN_SEQ.nextval
		FROM DUAL
	</select>

	<!-- 获取一个明细表序列 -->
	<select id="queryMedApplyDetailSeq" resultType="java.lang.Long"
		useCache="false" flushCache="true">
		SELECT MED_APPLY_DETAIL_SEQ.nextval FROM
		DUAL
	</select>

	<!-- 申请单主表添加 -->
	<insert id="addMedApplyMain" parameterType="java.util.Map">
		INSERT INTO MED_APPLY_MAIN (
		group_id, hos_id, copy_code, apply_id, apply_no, dept_id, dept_no, store_id,
		store_no, app_emp, app_date,
		maker, state, brief
		<if test="checker != null and checker != ''">, checker</if>
		<if test="check_date != null and check_date != ''">, check_date</if>
		<if test="sender != null and sender != ''">, sender</if>
		<if test="send_date != null and send_date != ''">, send_date</if>
		<if test="back_reason != null and back_reason != ''">, back_reason</if>
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{apply_id,jdbcType=INTEGER},
		#{apply_no,jdbcType=VARCHAR},
		#{dept_id,jdbcType=INTEGER},
		#{dept_no,jdbcType=INTEGER},
		#{store_id,jdbcType=INTEGER},
		#{store_no,jdbcType=INTEGER},
		#{app_emp,jdbcType=INTEGER},
		#{app_date,jdbcType=TIMESTAMP},
		#{maker,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		#{brief,jdbcType=VARCHAR}
		<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
		<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
		<if test="sender != null and sender != ''">, #{sender,jdbcType=INTEGER}</if>
		<if test="send_date != null and send_date != ''">, #{send_date,jdbcType=DATE}</if>
		<if test="back_reason != null and back_reason != ''">, #{back_reason,jdbcType=VARCHAR}</if>
		)
	</insert>

	<!-- 批量插入主表数据 -->
	<insert id="addMedApplyMainBatch" parameterType="java.util.List">
		INSERT INTO MED_APPLY_MAIN (
		group_id, hos_id, copy_code, apply_id, apply_no, dept_id, dept_no, store_id,
		store_no, app_emp, app_date,
		maker, state, brief, checker, check_date, sender, send_date, back_reason
		)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			SELECT
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{apply_id,jdbcType=INTEGER},
			#{apply_no,jdbcType=VARCHAR},
			#{dept_id,jdbcType=INTEGER},
			#{dept_no,jdbcType=INTEGER},
			#{store_id,jdbcType=INTEGER},
			#{store_no,jdbcType=INTEGER},
			#{app_emp,jdbcType=INTEGER},
			#{app_date,jdbcType=TIMESTAMP},
			#{maker,jdbcType=INTEGER},
			#{state,jdbcType=INTEGER},
			#{brief,jdbcType=VARCHAR},
			#{checker,jdbcType=INTEGER},
			#{check_date,jdbcType=DATE},
			#{sender,jdbcType=INTEGER},
			#{send_date,jdbcType=DATE},
			#{back_reason,jdbcType=VARCHAR}
			FROM DUAL
		</foreach>
	</insert>
	<!-- 申请单明细表添加（批量） -->
	<insert id="addMedApplyDetail" parameterType="java.util.List">
		INSERT INTO MED_APPLY_DETAIL (
		group_id, hos_id, copy_code, apply_id, detail_id, inv_id, inv_no, app_amount,
		note
		)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			select
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.apply_id,jdbcType=INTEGER},
			#{item.detail_id,jdbcType=INTEGER},
			#{item.inv_id,jdbcType=INTEGER},
			#{item.inv_no,jdbcType=VARCHAR},
			#{item.app_amount,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>

	<!-- 申请单主表修改 -->
	<update id="updateMedApplyMain" parameterType="java.util.Map">
		UPDATE med_apply_main
		<trim prefix="set" suffixOverrides=",">
			<if test="dept_id != null and dept_id != ''">
				dept_id = #{dept_id,jdbcType=INTEGER},
			</if>
			<if test="dept_no != null and dept_no != ''">
				dept_no = #{dept_no,jdbcType=INTEGER},
			</if>
			<if test="store_id != null and store_id != ''">
				store_id = #{store_id,jdbcType=INTEGER},
			</if>
			<if test="store_no != null and store_no != ''">
				store_no = #{store_no,jdbcType=INTEGER},
			</if>
			<if test="app_emp != null">
				app_emp = #{app_emp,jdbcType=INTEGER},
			</if>
			<if test="app_date != null and app_date != ''">
				app_date = #{app_date,jdbcType=TIMESTAMP},
			</if>
			<if test="brief != null">
				brief = #{brief,jdbcType=VARCHAR},
			</if>
		</trim>
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and apply_id =#{apply_id,jdbcType=INTEGER}
	</update>

	<!-- 申请单明细表修改（批量） -->
	<update id="updateMedApplyDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE med_apply_detail
			<trim prefix="set" suffixOverrides=",">
				<if test="item.inv_id != null and item.inv_id != ''">
					inv_id = #{item.inv_id,jdbcType=INTEGER},
				</if>
				<if test="item.inv_no != null and item.inv_no != ''">
					inv_no = #{item.inv_no,jdbcType=INTEGER},
				</if>
				<if test="item.app_amount != null and item.app_amount != ''">
					app_amount = #{item.app_amount,jdbcType=INTEGER},
				</if>
				<if test="item.note != null">
					note = #{item.note,jdbcType=VARCHAR},
				</if>
			</trim>
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
			and detail_id = #{item.detail_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 申请单主表删除 -->
	<delete id="deleteMedApplyMain" parameterType="java.util.Map">
		DELETE FROM
		med_apply_main
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and apply_id = #{apply_id,jdbcType=INTEGER}
	</delete>

	<!-- 申请单明细表删除 -->
	<delete id="deleteMedApplyDetail" parameterType="java.util.Map">
		DELETE FROM
		med_apply_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and apply_id = #{apply_id,jdbcType=INTEGER}
	</delete>

	<!-- 修改保存时删除页面中不存在的明细数据 -->
	<delete id="deleteMedApplyDetailForUpdate" parameterType="java.util.Map">
		DELETE
		FROM med_apply_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and apply_id = #{apply_id,jdbcType=INTEGER}
		and detail_id not in (${detail_ids})
	</delete>

	<!-- 申请单主表批量删除 -->
	<delete id="deleteMedApplyMainBatch" parameterType="java.util.List">
		DELETE FROM med_apply_main
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code =
			#{item.copy_code,jdbcType=VARCHAR}
			and apply_id =
			#{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<!-- 申请单明细表批量删除 -->
	<delete id="deleteMedApplyDetailBatch" parameterType="java.util.List">
		DELETE FROM med_apply_detail
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code =
			#{item.copy_code,jdbcType=VARCHAR}
			and apply_id =
			#{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<!-- 用于申请单主表加载 -->
	<select id="queryMedApplyMainByCode" resultMap="medApplyMain"
		parameterType="java.util.Map">
		SELECT
		a.group_id, a.hos_id, a.copy_code, a.apply_id, a.apply_no, a.dept_id, a.dept_no,
		b.dept_code, b.dept_name,
		a.store_id, a.store_no, c.store_code, c.store_name, a.app_emp, d.emp_code,
		d.emp_name, a.app_date, a.brief, a.state
		FROM med_apply_main a
		LEFT JOIN
		hos_dept_dict b
		ON a.group_id = b.group_id AND a.hos_id = b.hos_id
		AND a.dept_id = b.dept_id
		<if test="show_history == 1">
			AND a.dept_no = b.dept_no
		</if>
		<if test="show_history == null or show_history != 1">
			AND b.is_stop = 0
		</if>
		LEFT JOIN hos_store_dict c
		ON a.group_id = c.group_id AND a.hos_id = c.hos_id
		AND a.store_id = c.store_id
		<if test="show_history == 1">
			AND a.store_no = c.store_no
		</if>
		<if test="show_history == null or show_history == 0">
			AND c.is_stop = 0
		</if>
		LEFT JOIN hos_emp_dict d
		ON a.group_id = d.group_id AND a.hos_id = d.hos_id
		AND a.app_emp = d.emp_id AND d.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		and a.apply_id = #{apply_id,jdbcType=INTEGER}
	</select>

	<!-- 用于申请单明细表加载 -->
	<select id="queryMedApplyDetailByCode" resultMap="medApplyDetail" parameterType="java.util.Map">
		SELECT
			a.group_id, a.hos_id, a.copy_code,b.bid_code, a.apply_id, a.detail_id, a.inv_id, a.inv_no,
			b.inv_code, b.inv_name, b.bid_code, nvl(a.is_closed, 0) is_closed, 
			b.inv_model, c.unit_name, d.fac_name, b.is_com, a.app_amount, a.note,
			nvl(b.plan_price, 0) price, a.app_amount*nvl(b.plan_price, 0) amount_money,
			b.is_sec_whg, nvl(e.out_amount, 0) out_amount, nvl(f.pur_amount, 0) pur_amount, b.inv_structure
		FROM med_apply_detail a
		left join med_inv_dict b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no
		left join hos_unit c
			on b.group_id = c.group_id
			and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
		left join hos_fac_dict d
			on b.group_id = d.group_id and b.hos_id = d.hos_id
			and b.fac_id = d.fac_id
			and b.fac_no = d.fac_no
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) out_amount 
			from med_apply_out_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and apply_id = #{apply_id,jdbcType=INTEGER} 
				and <![CDATA[rela_type <> 5]]>
			group by app_detail_id
		) e
			on a.detail_id = e.app_detail_id
		LEFT JOIN (
			select app_detail_id, sum(nvl(rela_amount, 0)) pur_amount 
			from med_apply_pur_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and apply_id = #{apply_id,jdbcType=INTEGER} 
				and rela_type = 1
			group by app_detail_id
		) f
			on a.detail_id = f.app_detail_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		and a.apply_id = #{apply_id,jdbcType=INTEGER}
		order by b.inv_name
	</select>
	<!-- 申请单审核或消审有待修改传入包含list的Map -->
	<update id="auditOrUnAuditBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update med_apply_main set
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and apply_id = #{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</update>
	<!-- 修改是否发送 -->
	<update id="updateBySendBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update med_apply_main set
			state = #{item.state,jdbcType=INTEGER},
			sender = #{item.sender,jdbcType=INTEGER},
			send_date = #{item.send_date,jdbcType=DATE}
			WHERE
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 修改取消发送 -->
	<update id="updateBackBySendBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update med_apply_main set
			state = 2,
			sender = '',
			send_date = ''
			WHERE
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 查询所有配套表 -->
	<select id="queryMatch" parameterType="java.util.Map" resultMap="medApplyDetail">
		SELECT
		mid.inv_id,
		mid.inv_no,
		mid.inv_code,
		mid.inv_name,
		mid.inv_model,
		hu.unit_name,
		hfd.fac_name,
		mid.plan_price price,
		mdmd.amount app_amount,
		mid.is_com
		FROM MED_DEPT_MATCH mdm
		LEFT JOIN med_dept_match_detail mdmd
		ON mdm.group_id = mdmd.group_id AND mdm.hos_id = mdmd.hos_id
		AND mdm.copy_code = mdmd.copy_code AND mdm.dept_match_id =
		mdmd.dept_match_id
		LEFT JOIN MED_INV_DICT mid
		ON mdmd.group_id = mid.group_id AND mdmd.hos_id = mid.hos_id
		AND mdmd.copy_code = mid.copy_code AND mdmd.inv_id = mid.inv_id
			and mid.is_stop = 0
		
		LEFT JOIN HOS_UNIT hu
		ON mid.group_id = hu.group_id AND mid.hos_id = hu.hos_id
		AND mid.unit_code = hu.unit_code
		LEFT JOIN HOS_STORE_DICT hsd
		ON mdm.group_id = hsd.group_id AND mdm.hos_id = hsd.hos_id
		AND mdm.store_id = hsd.store_id
		AND hsd.is_stop = 0
		LEFT JOIN HOS_FAC_DICT hfd
		ON mid.group_id = hfd.group_id AND mid.hos_id = hfd.hos_id
			AND mid.fac_id = hfd.fac_id
			AND mid.fac_no = hfd.fac_no
		
		WHERE mdm.group_id = #{group_id}
			AND mdm.hos_id = #{hos_id}
			AND mdm.copy_code = #{copy_code}
			<if test="dept_match_id != null and dept_match_id != '' ">
				AND mdm.dept_match_id = #{dept_match_id}
			</if>
			<if test="store_id != null and store_id != '' ">
				AND mdm.store_id = #{store_id}
			</if>
			<if test="dept_id != null and dept_id != '' ">
				AND mdm.dept_id = #{dept_id}
			</if>
			AND mid.use_state = 1 
		ORDER BY mdmd.inv_id
	</select>

<!-- 仓库药品对应集合 -->
	<select id="queryMedStoreInvs" parameterType="java.util.Map" resultMap="medStoreInv">
		select
		mid.inv_id, mid.inv_code,mid.inv_name
		from MED_STORE_INV msi
		left join MED_INV_DICT mid on msi.group_id = mid.group_id and msi.hos_id =
		mid.hos_id and msi.copy_code = mid.copy_code and msi.inv_id =
		mid.inv_id
		<where>
			is_stop = 0
			<if test="group_id != null  and group_id != ''">
				and msi.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and msi.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and msi.copy_code = #{copy_code}
			</if>
			<if test="store_id != null  and store_id != ''">
				and msi.store_id = #{store_id}
			</if>
		</where>
		order by mid.inv_code
	</select>
	
	<select id="queryStoreExistInv" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(inv_id)
		from MED_STORE_INV msi
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="store_id != null  and store_id != ''">
				and store_id = #{store_id}
			</if>
			<if test="inv_id != null  and inv_id != ''">
				and inv_id = #{inv_id}
			</if>
		</where>
	</select>
</mapper>

