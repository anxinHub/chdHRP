<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostDeptPeopleMapper">

	<resultMap id="costDeptPeople" type="com.chd.hrp.cost.entity.CostDeptPeople">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="acc_month" column="acc_month" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="doctor_num" column="doctor_num" />
		<result property="nurse_num" column="nurse_num" />
		<result property="technician_num" column="technician_num" />
		<result property="pharmacist_num" column="pharmacist_num" />
		<result property="manager_num" column="manager_num" />
		<result property="supportor_num" column="supportor_num" />
		<result property="floater_num" column="floater_num" />
		<result property="out_employ_num" column="out_employ_num" />
		<result property="clearner_num" column="clearner_num" />
		<result property="alldept_num" column="alldept_num" />
	</resultMap>

	<insert id="addCostDeptPeople" useGeneratedKeys="true">

		INSERT INTO
		COST_DEPT_PEOPLE
		(
		group_id,
		hos_id,
		copy_code,
		acc_year,
		acc_month,
		dept_id,
		dept_no,
		doctor_num,
		nurse_num,
		technician_num,
		pharmacist_num,
		manager_num,
		supportor_num,
		floater_num,
		out_employ_num,
		clearner_num,
		alldept_num
		)
		VALUES
		(
		#{group_id},
		#{hos_id},
		#{copy_code},
		#{acc_year},
		#{acc_month},
		#{dept_id},
		#{dept_no},
		#{doctor_num},
		#{nurse_num},
		#{technician_num},
		#{pharmacist_num},
		#{manager_num},
		#{supportor_num},
		#{floater_num},
		#{out_employ_num},
		#{clearner_num},
		#{doctor_num}+
		#{nurse_num}+
		#{technician_num}+
		#{pharmacist_num}+
		#{manager_num}+
		#{supportor_num}+
		#{floater_num}+
		#{out_employ_num}+
		#{clearner_num}
		)

	</insert>

	<insert id="addBatchCostDeptPeople" parameterType="java.util.List">

		INSERT INTO COST_DEPT_PEOPLE
		(
		group_id,
		hos_id,
		copy_code,
		acc_year,
		acc_month,
		dept_id,
		dept_no,
		doctor_num,
		nurse_num,
		technician_num,
		pharmacist_num,
		manager_num,
		supportor_num,
		floater_num,
		out_employ_num,
		clearner_num,
		alldept_num
		)
		<!-- 没有序列的变通调整 顺序要调整一下 -->
		select A.* FROM (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id},
			#{item.hos_id},
			#{item.copy_code},
			#{item.acc_year},
			#{item.acc_month},
			#{item.dept_id},
			#{item.dept_no},
			#{item.doctor_num},
			#{item.nurse_num},
			#{item.technician_num},
			#{item.pharmacist_num},
			#{item.manager_num},
			#{item.supportor_num},
			#{item.floater_num},
			#{item.out_employ_num},
			#{item.clearner_num},
			#{item.doctor_num}+
			#{item.nurse_num}+
			#{item.technician_num}+
			#{item.pharmacist_num}+
			#{item.manager_num}+
			#{item.supportor_num}+
			#{item.floater_num}+
			#{item.out_employ_num}+
			#{item.clearner_num}
			from
			dual
		</foreach>
		) A

	</insert>

	<update id="updateCostDeptPeople" parameterType="java.util.Map">

		UPDATE
		cost_dept_people SET
		doctor_num = #{doctor_num},
		nurse_num =
		#{nurse_num},
		technician_num = #{technician_num},
		pharmacist_num =
		#{pharmacist_num},
		manager_num = #{manager_num},
		supportor_num =
		#{supportor_num},
		floater_num = #{floater_num},
		out_employ_num =
		#{out_employ_num},
		clearner_num = #{clearner_num},
		alldept_num =
		#{doctor_num}+
		#{nurse_num}+
		#{technician_num}+
		#{pharmacist_num}+
		#{manager_num}+
		#{supportor_num}+
		#{floater_num}+
		#{out_employ_num}+
		#{clearner_num}
		WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code} and
		acc_year = #{acc_year} and
		acc_month =
		#{acc_month} and
		dept_id = #{dept_id} and
		dept_no = #{dept_no}

	</update>

	<update id="updateBatchCostDeptPeople" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE cost_dept_people SET
			doctor_num =
			#{doctor_num},
			nurse_num = #{nurse_num},
			technician_num =
			#{technician_num},
			pharmacist_num = #{pharmacist_num},
			manager_num =
			#{manager_num},
			supportor_num = #{supportor_num},
			floater_num =
			#{floater_num},
			out_employ_num = #{out_employ_num},
			clearner_num =
			#{clearner_num},
			alldept_num = #{doctor_num}+
			#{nurse_num}+
			#{technician_num}+
			#{pharmacist_num}+
			#{manager_num}+
			#{supportor_num}+
			#{floater_num}+
			#{out_employ_num}+
			#{clearner_num}
			WHERE
			group_id =
			#{item.group_id} and
			hos_id = #{item.hos_id} and
			copy_code =
			#{item.copy_code} and
			acc_year = #{item.acc_year} and
			acc_month =
			#{item.acc_month} and
			dept_id = #{item.dept_id} and
			dept_no =
			#{item.dept_no}
		</foreach>
	</update>

	<delete id="deleteCostDeptPeople" parameterType="java.util.Map">

		DELETE FROM
		cost_dept_people
		WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		copy_code = #{copy_code} and
		acc_year = #{acc_year} and
		acc_month =
		#{acc_month} 
		<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no}
			</if>

	</delete>

	<delete id="deleteBatchCostDeptPeople" parameterType="java.util.List">
		DELETE FROM cost_dept_people
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id} and
			hos_id =
			#{item.hos_id} and
			copy_code = #{item.copy_code} and
			acc_year =
			#{item.acc_year} and
			acc_month = #{item.acc_month} and
			dept_id =
			#{item.dept_id} and
			dept_no = #{item.dept_no}
		</foreach>

	</delete>

	<delete id="deleteMonthlyCostDeptPeople" parameterType="java.util.Map">
		delete from cost_dept_people
		where group_id = #{group_id}
		and hos_id = #{hos_id} 
		and copy_code = #{copy_code}
		and acc_year || acc_month between #{b_year_month} and #{e_year_month}
	</delete>
	
	<select id="queryCostDeptPeopleByCode" resultType="com.chd.hrp.cost.entity.CostDeptPeople"
		parameterType="string">

		SELECT
		cdp.group_id,
		cdp.hos_id,
		cdp.copy_code,
		cdp.acc_year,
		cdp.acc_month,
		cdp.dept_id,
		cdp.dept_no,
		hdd.dept_code,
		hdd.dept_name,
		cdp.doctor_num,
		cdp.nurse_num,
		cdp.technician_num,
		cdp.pharmacist_num,
		cdp.manager_num,
		cdp.supportor_num,
		cdp.floater_num,
		cdp.out_employ_num,
		cdp.clearner_num,
		cdp.alldept_num
		FROM COST_DEPT_PEOPLE cdp
		left join
		hos_dept_dict hdd
		on cdp.group_id = hdd.group_id and cdp.hos_id =
		hdd.hos_id and
		cdp.dept_id = hdd.dept_id
		<if test="is_flag == 1">
			and cdp.dept_no = hdd.dept_no
		</if>
		<where>
			<if test="is_flag == 0 or is_flag == ''">
				and hdd.is_stop=0
			</if>
			<if test="group_id != null and group_id != ''">
				AND cdp.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND cdp.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND cdp.copy_code = #{copy_code}
			</if>
			<if test="year_month != null and year_month != ''">
				AND cdp.acc_year || '' || cdp.acc_month = #{year_month}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND cdp.acc_year = #{acc_year}
			</if>
			<if test="acc_month != null and acc_month != ''">
				AND cdp.acc_month = #{acc_month}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdd.dept_code = #{dept_code}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND cdp.dept_id = #{dept_id}
			</if>
			
		</where>

	</select>

	<select id="queryCostDeptPeople" parameterType="java.util.Map"
		resultMap="costDeptPeople">
		with temp as
		(
		SELECT
		cdp.group_id,
		cdp.hos_id,
		cdp.copy_code,
		cdp.acc_year,
		cdp.acc_month,
		cdp.dept_id,
		cdp.dept_no,
		hdd.dept_code,
		hdd.dept_name,
		cdp.doctor_num,
		cdp.nurse_num,
		cdp.technician_num,
		cdp.pharmacist_num,
		cdp.manager_num,
		cdp.supportor_num,
		cdp.floater_num,
		cdp.out_employ_num,
		cdp.clearner_num,
		cdp.alldept_num
		FROM COST_DEPT_PEOPLE cdp
		left join hos_dept_dict hdd
		on cdp.group_id = hdd.group_id and cdp.hos_id = hdd.hos_id and
		cdp.dept_id = hdd.dept_id
		<if test="is_flag == 1">
			and cdp.dept_no = hdd.dept_no
		</if>
		<where>
			<if test="is_flag == 0 or is_flag == ''">
				and hdd.is_stop=0
			</if>
			<if test="group_id != null and group_id != ''">
				AND cdp.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND cdp.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND cdp.copy_code = #{copy_code}
			</if>
			<if
				test=" b_year_month != null and b_year_month != '' and e_year_month != null and e_year_month != ''">
				AND cdp.acc_year ||''|| cdp.acc_month between #{b_year_month} and
				#{e_year_month}
			</if>

			<if test="dept_id != null and dept_id != ''">
				AND cdp.dept_id = #{dept_id}
			</if>
			
			<if test="doctor_num != null and doctor_num != ''">
				AND cdp.doctor_num = #{doctor_num}
			</if>
			<if test="nurse_num != null and nurse_num != ''">
				AND cdp.nurse_num = #{nurse_num}
			</if>
			<if test="technician_num != null and technician_num != ''">
				AND cdp.technician_num = #{technician_num}
			</if>
			<if test="pharmacist_num != null and pharmacist_num != ''">
				AND cdp.pharmacist_num = #{pharmacist_num}
			</if>
			<if test="manager_num != null and manager_num != ''">
				AND cdp.manager_num = #{manager_num}
			</if>
			<if test="supportor_num != null and supportor_num != ''">
				AND cdp.supportor_num = #{supportor_num}
			</if>
			<if test="floater_num != null and floater_num != ''">
				AND cdp.floater_num = #{floater_num}
			</if>
			<if test="out_employ_num != null and out_employ_num != ''">
				AND cdp.out_employ_num = #{out_employ_num}
			</if>
			<if test="clearner_num != null and clearner_num != ''">
				AND cdp.clearner_num = #{clearner_num}
			</if>
			<if test="alldept_num != null and alldept_num != ''">
				AND cdp.alldept_num = #{alldept_num}
			</if>
		</where>
		<!-- 2016/11/3 lxj 按照统计年月、科室代码升序排列 -->
		order by hdd.dept_code,cdp.acc_year,cdp.acc_month,cdp.dept_id
		)select group_id,hos_id,copy_code,acc_year,acc_month,acc_year||acc_month as
		year_month,dept_id,dept_no,dept_code,dept_name,
		doctor_num,nurse_num,technician_num,pharmacist_num,manager_num,supportor_num,floater_num,out_employ_num,clearner_num,alldept_num
		from temp
		union all
		select null,null, null,'总','计' ,null,null, null, null, null,
		sum(doctor_num), sum(nurse_num), sum(technician_num),
		sum(pharmacist_num), sum(manager_num), sum(supportor_num),
		sum(floater_num),
		sum(out_employ_num),sum(clearner_num),sum(alldept_num) from temp

	</select>
	
	<select id="queryCostDeptPeoplePrint" parameterType="java.util.Map" resultType="java.util.Map">
		with temp as
		(
		SELECT
		cdp.group_id,
		cdp.hos_id,
		cdp.copy_code,
		cdp.acc_year,
		cdp.acc_month,
		cdp.dept_id,
		cdp.dept_no,
		hdd.dept_code,
		hdd.dept_name,
		cdp.doctor_num,
		cdp.nurse_num,
		cdp.technician_num,
		cdp.pharmacist_num,
		cdp.manager_num,
		cdp.supportor_num,
		cdp.floater_num,
		cdp.out_employ_num,
		cdp.clearner_num,
		cdp.alldept_num
		FROM COST_DEPT_PEOPLE cdp
		left join hos_dept_dict hdd
		on cdp.group_id = hdd.group_id and cdp.hos_id = hdd.hos_id and
		cdp.dept_id = hdd.dept_id
		<if test="is_flag == 1">
			and cdp.dept_no = hdd.dept_no
		</if>
		<where>
			<if test="is_flag == 0 or is_flag == ''">
				and hdd.is_stop=0
			</if>
			<if test="group_id != null and group_id != ''">
				AND cdp.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND cdp.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND cdp.copy_code = #{copy_code}
			</if>
			<if
				test=" b_year_month != null and b_year_month != '' and e_year_month != null and e_year_month != ''">
				AND cdp.acc_year ||''|| cdp.acc_month between #{b_year_month} and
				#{e_year_month}
			</if>

			<if test="dept_id != null and dept_id != ''">
				AND cdp.dept_id = #{dept_id}
			</if>
			
			<if test="doctor_num != null and doctor_num != ''">
				AND cdp.doctor_num = #{doctor_num}
			</if>
			<if test="nurse_num != null and nurse_num != ''">
				AND cdp.nurse_num = #{nurse_num}
			</if>
			<if test="technician_num != null and technician_num != ''">
				AND cdp.technician_num = #{technician_num}
			</if>
			<if test="pharmacist_num != null and pharmacist_num != ''">
				AND cdp.pharmacist_num = #{pharmacist_num}
			</if>
			<if test="manager_num != null and manager_num != ''">
				AND cdp.manager_num = #{manager_num}
			</if>
			<if test="supportor_num != null and supportor_num != ''">
				AND cdp.supportor_num = #{supportor_num}
			</if>
			<if test="floater_num != null and floater_num != ''">
				AND cdp.floater_num = #{floater_num}
			</if>
			<if test="out_employ_num != null and out_employ_num != ''">
				AND cdp.out_employ_num = #{out_employ_num}
			</if>
			<if test="clearner_num != null and clearner_num != ''">
				AND cdp.clearner_num = #{clearner_num}
			</if>
			<if test="alldept_num != null and alldept_num != ''">
				AND cdp.alldept_num = #{alldept_num}
			</if>
		</where>
		<!-- 2016/11/3 lxj 按照统计年月、科室代码升序排列 -->
		order by hdd.dept_code,cdp.acc_year,cdp.acc_month,cdp.dept_id
		)select group_id,hos_id,copy_code,acc_year,acc_month,acc_year||acc_month as
		year_month,dept_id,dept_no,dept_code,dept_name,
		doctor_num,nurse_num,technician_num,pharmacist_num,manager_num,supportor_num,floater_num,out_employ_num,clearner_num,alldept_num
		from temp
		union all
		select null,null, null,'总','计' ,null,null, null, null, null,
		sum(doctor_num), sum(nurse_num), sum(technician_num),
		sum(pharmacist_num), sum(manager_num), sum(supportor_num),
		sum(floater_num),
		sum(out_employ_num),sum(clearner_num),sum(alldept_num) from temp

	</select>

	<insert id="addPeopleCollect" parameterType="java.util.Map">
		insert into COST_DEPT_PEOPLE
		(group_id,
		hos_id,
		copy_code,
		acc_year,
		Acc_Month,
		Dept_Id,
		dept_no,
		doctor_num,
		alldept_num)
		select group_id,
		hos_id,
	    '${copy_code}' copy_code,
		'${acc_year}' acc_year,
		'${acc_month}' Acc_Month,
		dept_id,
		dept_no,
		count(emp_id) doctor_num,
		count(emp_id) alldept_num
		from hos_emp_dict
	   where
			group_id = #{group_id}
			and hos_id = #{hos_id}
		group by group_id,hos_id,dept_id, dept_no

	</insert>

	  <insert id = "extendCostDeptPeople" parameterType="java.util.Map">
	       insert into cost_dept_people
					  (group_id,
					   hos_id,
					   copy_code,
					   acc_year,
					   acc_month,
					   dept_id,
					   dept_no,
					   doctor_num,
					   nurse_num,
					   technician_num,
					   pharmacist_num,
					   manager_num,
					   supportor_num,
					   floater_num,
					   out_employ_num,
					   clearner_num,
					   alldept_num)
					  select group_id,
					         hos_id,
					         copy_code,
					         #{end_year},
					         #{end_month},
					         dept_id,
					         dept_no,
					         doctor_num,
					         nurse_num,
					         technician_num,
					         pharmacist_num,
					         manager_num,
					         supportor_num, 
					         floater_num,
					         out_employ_num,
					         clearner_num,
					         alldept_num
					    from cost_dept_people
							where group_id = #{group_id}
							and hos_id = #{hos_id}
					        and copy_code = #{copy_code}
							and acc_year = #{acc_year}
							and acc_month = #{acc_month}
	  </insert>
</mapper>

