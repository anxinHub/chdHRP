<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostChargeKindArrtMapper">

	<resultMap id="costChargeKindArrt" type="com.chd.hrp.cost.entity.CostChargeKindArrt">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="charge_kind_id" column="charge_kind_id"/>
        <result property="charge_kind_code" column="charge_kind_code"/>
        <result property="charge_kind_name" column="charge_kind_name"/>
        <result property="income_type_id" column="income_type_id"/>
        <result property="income_type_name" column="income_type_name"/>
        <result property="income_item_id_in" column="income_item_id_in"/>
        <result property="income_item_id_out" column="income_item_id_out"/>
        <result property="income_item_name_in" column="income_item_name_in"/>
        <result property="income_item_name_out" column="income_item_name_out"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
	</resultMap>
	
	<resultMap id="costChargeKindArrt1" type="java.util.Map">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="charge_kind_id" column="charge_kind_id"/>
        <result property="charge_kind_code" column="charge_kind_code"/>
        <result property="charge_kind_name" column="charge_kind_name"/>
        <result property="income_type_id" column="income_type_id"/>
        <result property="income_type_name" column="income_type_name"/>
        <result property="income_item_id_in" column="income_item_id_in"/>
        <result property="income_item_id_out" column="income_item_id_out"/>
        <result property="income_item_name_in" column="income_item_name_in"/>
        <result property="income_item_name_out" column="income_item_name_out"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
	</resultMap>
	
    <insert id="addCostChargeKindArrt" useGeneratedKeys="true" >
    
        INSERT INTO COST_CHARGE_KIND_ARRT (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    income_item_id_in
			 ,
                    income_item_id_out
			 ,
                    charge_kind_id
			 ,
                    charge_kind_code
			 ,
                    charge_kind_name
			 ,
                    income_type_id
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        ) VALUES (
#{group_id,jdbcType=INTEGER}			 ,
#{hos_id,jdbcType=INTEGER}			 ,
#{copy_code,jdbcType=VARCHAR}			 ,
#{income_item_id_in,jdbcType=INTEGER}			 ,
#{income_item_id_out,jdbcType=INTEGER}			 ,
COST_CHARGE_KIND_ARRT_SEQ.nextval			 ,
#{charge_kind_code,jdbcType=VARCHAR}			 ,
#{charge_kind_name,jdbcType=VARCHAR}			 ,
#{income_type_id,jdbcType=INTEGER}			 ,
#{spell_code,jdbcType=VARCHAR}			 ,
#{wbx_code,jdbcType=VARCHAR}			 
        )
    
    </insert>
	<insert id="addBatchCostChargeKindArrt" parameterType="java.util.List" >
    
        INSERT INTO COST_CHARGE_KIND_ARRT (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    income_item_id_in
			 ,
                    income_item_id_out
			 ,
                    charge_kind_id
			 ,
                    charge_kind_code
			 ,
                    charge_kind_name
			 ,
                    income_type_id
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
#{item.group_id}			 ,
#{item.hos_id}			 ,
#{item.copy_code}			 ,
#{item.income_item_id_in}			 ,
#{item.income_item_id_out}			 ,
COST_CHARGE_KIND_ARRT_SEQ.nextval			 ,
#{item.charge_kind_code}			 ,
#{item.charge_kind_name}			 ,
#{item.income_type_id}			 ,
#{item.spell_code}			 ,
#{item.wbx_code}			 
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateCostChargeKindArrt" parameterType="java.util.Map">
    
        UPDATE cost_charge_kind_arrt SET
			 income_item_id_in = #{income_item_id_in,jdbcType=INTEGER}
			 ,
			 income_item_id_out = #{income_item_id_out,jdbcType=INTEGER}
			 ,
			 charge_kind_code = #{charge_kind_code,jdbcType=VARCHAR}
			 ,
			 charge_kind_name = #{charge_kind_name,jdbcType=VARCHAR}
			 ,
			 income_type_id = #{income_type_id,jdbcType=INTEGER}
			 ,
			 spell_code = #{spell_code,jdbcType=VARCHAR}
			 ,
			 wbx_code = #{wbx_code,jdbcType=VARCHAR}
			 
        WHERE 
		 group_id = #{group_id,jdbcType=INTEGER}
			  and 
		 hos_id = #{hos_id,jdbcType=INTEGER}
			  and 
		 copy_code = #{copy_code,jdbcType=VARCHAR}
			  and 
		 charge_kind_id = #{charge_kind_id,jdbcType=INTEGER}
			 
   
	</update>
	<update id="updateBatchCostChargeKindArrt" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE cost_charge_kind_arrt SET
			 income_item_id_in = #{income_item_id_in}
			 ,
			 income_item_id_out = #{income_item_id_out}
			 ,
			 charge_kind_code = #{charge_kind_code}
			 ,
			 charge_kind_name = #{charge_kind_name}
			 ,
			 income_type_id = #{income_type_id}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			  and 
		 charge_kind_id = #{item.charge_kind_id}
			 
    </foreach>
	</update>

    <delete id="deleteCostChargeKindArrt" parameterType="java.util.Map">
   
        DELETE FROM cost_charge_kind_arrt WHERE
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code}   and 
	        charge_kind_id = #{charge_kind_id} 
   
    </delete>
    <delete id="deleteBatchCostChargeKindArrt" parameterType="java.util.List">
        DELETE FROM cost_charge_kind_arrt WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			  and 
		 charge_kind_id = #{item.charge_kind_id}
			 
		</foreach>
   
    </delete>
    
    <select id="queryCostChargeKindArrtByCode" resultType="com.chd.hrp.cost.entity.CostChargeKindArrt" parameterType="string" >
	  
         SELECT 
            ccka.group_id,
            ccka.hos_id,
            ccka.copy_code,
            ccka.charge_kind_id,
            ccka.charge_kind_code,
            ccka.income_type_id,
            cit.income_type_name,
            ccka.charge_kind_name,
            ccka.income_item_id_in,
            (select INCOME_ITEM_NAME from COST_INCOME_ITEM_ARRT ciia where ciia.group_id = ccka.group_id and ciia.hos_id = ccka.hos_id and ciia.copy_code = ccka.copy_code and ccka.income_item_id_in = ciia.INCOME_ITEM_ID) income_item_name_in,
            ccka.income_item_id_out,
            (select INCOME_ITEM_NAME from COST_INCOME_ITEM_ARRT ciia where ciia.group_id = ccka.group_id and ciia.hos_id = ccka.hos_id and ciia.copy_code = ccka.copy_code and ccka.income_item_id_out = ciia.INCOME_ITEM_ID) income_item_name_out,
            ccka.spell_code,
            ccka.wbx_code
        FROM COST_CHARGE_KIND_ARRT ccka 
        left join COST_INCOME_TYPE cit on
        ccka.income_type_id = cit.income_type_id
	       <where>  
		        <if test="group_id != null and group_id != ''">
                    AND ccka.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND ccka.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND ccka.copy_code = #{copy_code}
               </if>
               <if test="charge_kind_id != null and charge_kind_id != ''">
                    AND ccka.charge_kind_id = #{charge_kind_id}
               </if>
			    <if test="charge_kind_code != null and charge_kind_code != ''">
                    AND ccka.charge_kind_code = #{charge_kind_code}
               </if>
                <if test="income_type_id != null and income_type_id != ''">
                    AND ccka.income_type_id = #{income_type_id}
               </if>
			    <if test="income_item_id_in != null and income_item_id_in != ''">
                    AND ccka.income_item_id_in = #{income_item_id_in}
               </if>
			    <if test="income_item_id_out != null and income_item_id_out != ''">
                    AND ccka.income_item_id_out = #{income_item_id_out}
               </if>
        	</where>
	</select>
	<select id="queryCostChargeKindArrt" parameterType="java.util.Map" resultMap="costChargeKindArrt1" >
      
         SELECT 
            ccka.group_id,
            ccka.hos_id,
            ccka.copy_code,
            ccka.charge_kind_id,
            ccka.charge_kind_code,
            ccka.income_type_id,
            cit.income_type_name,
            ccka.charge_kind_name,
            ccka.income_item_id_in,
            (select INCOME_ITEM_NAME from COST_INCOME_ITEM_ARRT ciia where ciia.group_id = ccka.group_id and ciia.hos_id = ccka.hos_id and ciia.copy_code = ccka.copy_code and ccka.income_item_id_in = ciia.INCOME_ITEM_ID) income_item_name_in,
            ccka.income_item_id_out,
            (select INCOME_ITEM_NAME from COST_INCOME_ITEM_ARRT ciia where ciia.group_id = ccka.group_id and ciia.hos_id = ccka.hos_id and ciia.copy_code = ccka.copy_code and ccka.income_item_id_out = ciia.INCOME_ITEM_ID) income_item_name_out,
            ccka.spell_code,
            ccka.wbx_code
        FROM COST_CHARGE_KIND_ARRT ccka 
        left join COST_INCOME_TYPE cit on
        ccka.income_type_id = cit.income_type_id
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND ccka.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND ccka.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND ccka.copy_code = #{copy_code}
               </if>
               <if test="charge_kind_id != null and charge_kind_id != ''">
                    AND ccka.charge_kind_id = #{charge_kind_id}
               </if>
			    <if test="charge_kind_code != null and charge_kind_code != ''">
			      AND (ccka.charge_kind_code like  '${charge_kind_code}%' 
                    or ccka.charge_kind_name like  '%${charge_kind_code}%' 
                     or ccka.spell_code like  '%${charge_kind_code}%' 
                     or ccka.wbx_code like  '%${charge_kind_code}%' )
               </if>
			    <if test="income_type_id != null and income_type_id != ''">
                    AND ccka.income_type_id = #{income_type_id}
               </if>
			    <if test="charge_kind_name != null and charge_kind_name != ''">
                    AND ccka.charge_kind_name = #{charge_kind_name}
               </if>
			    <if test="income_item_id_in != null and income_item_id_in != ''">
                    AND ccka.income_item_id_in = #{income_item_id_in}
               </if>
			    <if test="income_item_id_out != null and income_item_id_out != ''">
                    AND ccka.income_item_id_out = #{income_item_id_out}
               </if>
                <if test="income_item_id != null and income_item_id != ''">
                    AND (ccka.income_item_id_out = #{income_item_id} or ccka.income_item_id_in = #{income_item_id} )
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND ccka.spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND ccka.wbx_code = #{wbx_code}
               </if>
        </where>   
				order by ccka.charge_kind_code asc
    </select>
	
</mapper>

