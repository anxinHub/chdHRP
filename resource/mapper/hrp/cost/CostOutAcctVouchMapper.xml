<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostOutAcctVouchMapper">
 
	<resultMap id="costOutAcctVouch" type="com.chd.hrp.cost.entity.CostOutAcctVouch">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="out_id" column="out_id"/>
        <result property="acc_year" column="acc_year"/>
        <result property="acc_month" column="acc_month"/>
        <result property="dept_id" column="dept_id"/>
        <result property="dept_no" column="dept_no"/>
        <result property="dept_code" column="dept_code"/>
        <result property="dept_name" column="dept_name"/>
        <result property="cost_item_id" column="cost_item_id"/>
        <result property="cost_item_no" column="cost_item_no"/>
        <result property="cost_item_code" column="cost_item_code"/>
        <result property="cost_item_name" column="cost_item_name"/>
         <result property="source_id" column="source_id"/>
        <result property="source_code" column="source_code"/>
        <result property="source_name" column="source_name"/>
        <result property="amount" column="amount"/>
        <result property="dept_level" column="dept_level"/>
	</resultMap>
	
    <insert id="addCostOutAcctVouch" useGeneratedKeys="true" >
    
        INSERT INTO COST_OUT_ACCT_VOUCH 
		(
            group_id,
            hos_id,
            copy_code,
            acc_year,
            acc_month,
            out_id,
            dept_id,
            dept_no,
            cost_item_id,
            cost_item_no,
            source_id,
            amount
        ) 
		VALUES 
		(
		 #{group_id},
		 #{hos_id},
		 #{copy_code},
		 #{acc_year},
		 #{acc_month},
		 cost_out_acct_vouch_seq.nextval,
		 #{dept_id},
		 #{dept_no},
		 #{cost_item_id},
		 #{cost_item_no},
		 #{source_id},
		 #{amount}
        )
    
    </insert>
	
	<insert id="addBatchCostOutAcctVouch" parameterType="java.util.List" >
    
        INSERT INTO COST_OUT_ACCT_VOUCH 
		(
    		group_id,
    		hos_id,
    		copy_code,
    		acc_year,
    		acc_month,
    		dept_id,
    		dept_no,
    		cost_item_id,
    		cost_item_no,
    		source_id,
    		amount
        ) 
		<!-- 没有序列的变通调整 顺序要调整一下 -->
		select A.* FROM (
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
		    #{item.group_id},
		    #{item.hos_id},
		    #{item.copy_code},
		    #{item.acc_year},
		    #{item.acc_month},
		    #{item.dept_id},
		    #{item.dept_no},
		    #{item.cost_item_id},
		    #{item.cost_item_no},
		    #{item.source_id},
		    #{item.amount}
		 from dual 
		</foreach>
		) A
    
    </insert>

	<update id="updateCostOutAcctVouch" parameterType="java.util.Map">
    
        UPDATE cost_out_acct_vouch SET
			 amount = #{amount},
			 dept_id = #{dept_id},
			 dept_no = #{dept_no},
			 cost_item_id = #{cost_item_id}, 
		     cost_item_no = #{cost_item_no}, 
		     source_id = #{source_id}
        WHERE 
		    group_id = #{group_id} and 
		    hos_id = #{hos_id} and 
		    copy_code = #{copy_code} and 
		    acc_year = #{acc_year} and
		    acc_month = #{acc_month} and  
		    out_id = #{out_id}
   
	</update>
	
	<update id="updateBatchCostOutAcctVouch" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE cost_out_acct_vouch SET
			 amount = #{amount}
        WHERE 
		    group_id = #{item.group_id} and 
		    hos_id = #{item.hos_id} and 
		    copy_code = #{item.copy_code} and 
		    acc_year = #{item.acc_year} and 
		    acc_month = #{item.acc_month} and 
		    dept_id = #{item.dept_id} and 
		    dept_no = #{item.dept_no} and 
		    cost_item_id = #{item.cost_item_id} and 
		    cost_item_no = #{item.cost_item_no} and 
		    source_id = #{item.source_id}
    </foreach>
	</update>

    <delete id="deleteCostOutAcctVouch" parameterType="java.util.Map">
   
        DELETE FROM cost_out_acct_vouch 
			WHERE
				group_id = #{group_id}  and 
				hos_id = #{hos_id}  and 
				copy_code = #{copy_code}  and 
				acc_year = #{acc_year}  and 
			    acc_month = #{acc_month}  and 
				out_id = #{out_id}  
    </delete>
	
    <delete id="deleteBatchCostOutAcctVouch" parameterType="java.util.List">
        DELETE FROM cost_out_acct_vouch 
			WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			    group_id = #{item.group_id} and 
			    hos_id = #{item.hos_id} and 
			    copy_code = #{item.copy_code} and 
			    acc_year = #{item.acc_year} and 
			    acc_month = #{item.acc_month} and 
			    out_id = #{item.out_id} 
			</foreach>
        
    </delete>
    
     <delete id="deleteMonthlyCostOutAcctVouch" parameterType="java.util.Map">
   
            delete from cost_out_acct_vouch 
			where group_id = #{group_id}  
			and  hos_id = #{hos_id} 
			and  copy_code = #{copy_code}  
			and  acc_year || acc_month between #{b_year_month} and #{e_year_month} 
    </delete>
    
    <select id="queryCostOutAcctVouchByCode" resultType="com.chd.hrp.cost.entity.CostOutAcctVouch" parameterType="string" >
	  
        SELECT 
            coav.group_id,
            coav.hos_id,
            coav.copy_code,
            coav.out_id,
            coav.acc_year,
            coav.acc_month,
            coav.dept_id,
            coav.dept_no,
            hdd.dept_code,
            hdd.dept_name,
            coav.cost_item_id,
            coav.cost_item_no,
            cidn.cost_item_code,
            cidn.cost_item_name,
            coav.amount,
            coav.source_id,
            hs.source_id,
            hs.source_code,
            hs.source_name 
        FROM COST_OUT_ACCT_VOUCH coav 
        left join hos_dept_dict hdd
        on coav.group_id = hdd.group_id and coav.hos_id = hdd.hos_id
        and coav.dept_id = hdd.dept_id 
		<if test="is_flag == 1">
         and coav.dept_no = hdd.dept_no 
        </if>
        left join COST_ITEM_DICT_NO cidn 
        on coav.cost_item_id = cidn.cost_item_id 
        and coav.group_id = cidn.group_id and coav.hos_id = cidn.hos_id and coav.copy_code = cidn.copy_code
        <if test="is_flag == 1">
        and coav.cost_item_no = cidn.cost_item_no 
        </if>
         left join HOS_SOURCE hs
        on coav.group_id = hs.group_id and coav.hos_id = hs.hos_id and coav.source_id = hs.source_id
	        <where>            
	            <if test="is_flag == 0 or is_flag == ''">
					and hdd.is_stop=0
					and cidn.is_stop=0
				</if>                  
			    <if test="group_id != null and group_id != ''">
                    AND coav.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND coav.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND coav.copy_code = #{copy_code}
               </if>
                <if test="out_id != null and out_id != ''">
                    AND coav.out_id = #{out_id}
               </if>
               <if test="source_id != null and source_id != ''">
                    AND hs.source_id = #{source_id}
               </if>
			    <if test="year_month != null and year_month != ''">
                    AND coav.acc_year || '' || coav.acc_month = #{year_month}
               </if>
                <if test="acc_year != null and acc_year != ''">
                    AND coav.acc_year = #{acc_year}
               </if>
               <if test="acc_month != null and acc_month != ''">
                    AND coav.acc_month = #{acc_month}
               </if>
			    <if test="dept_id != null and dept_id != ''">
                    AND coav.dept_id = #{dept_id}
               </if>
			    
			    <if test="cost_item_id != null and cost_item_id != ''">
                    AND coav.cost_item_id = #{cost_item_id}
               </if>
			   
			   


        </where>   	  
        
	</select>
	<select id="queryCostOutAcctVouch" parameterType="java.util.Map" resultMap="costOutAcctVouch" >
      with temp as
      (
         SELECT 
            coav.group_id,
            coav.hos_id,
            coav.copy_code,
            coav.out_id,
            coav.acc_year,
            coav.acc_month,
            coav.dept_id,
            coav.dept_no,
            hdd.dept_code,
            hdd.dept_name,
            hdd.dept_level,
            hdd.is_last,
            coav.cost_item_id,
            coav.cost_item_no,
            cidn.cost_item_code,
            cidn.cost_item_name,
            coav.amount,
            hs.source_id,
            hs.source_code,
            hs.source_name
        FROM COST_OUT_ACCT_VOUCH coav 
        left join hos_dept_dict hdd
        on coav.group_id = hdd.group_id and coav.hos_id = hdd.hos_id
        and coav.dept_id = hdd.dept_id
        <if test="is_flag == 1">
         and coav.dept_no = hdd.dept_no 
        </if>
        left join COST_ITEM_DICT_NO cidn 
        on coav.cost_item_id = cidn.cost_item_id 
        and coav.group_id = cidn.group_id and coav.hos_id = cidn.hos_id and coav.copy_code = cidn.copy_code
        <if test="is_flag == 1">
        and coav.cost_item_no = cidn.cost_item_no 
        </if>
         left join HOS_SOURCE hs
        on coav.group_id = hs.group_id and coav.hos_id = hs.hos_id and coav.source_id = hs.source_id
            <where>            
            <if test="is_flag == 0 or is_flag == ''">
					and hdd.is_stop=0
					and cidn.is_stop=0
				</if>         
			    <if test="group_id != null and group_id != ''">
                    AND coav.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND coav.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND coav.copy_code = #{copy_code}
               </if>
               <if test="source_id != null and source_id != ''">
                    AND hs.source_id = #{source_id}
               </if>
               <if test="is_last==1">    
                    AND hdd.is_last = #{is_last}
               </if>
			   <if test=" b_year_month != null and b_year_month != '' and e_year_month != null and e_year_month != ''">
                  AND coav.acc_year ||''|| coav.acc_month between #{b_year_month} and  #{e_year_month}
            </if>
<!--                <if test="acc_year != null and acc_year != ''"> -->
<!--                     AND coav.acc_year = #{acc_year} -->
<!--                </if> -->
<!--                <if test="acc_month != null and acc_month != ''"> -->
<!--                     AND coav.acc_month = #{acc_month} -->
<!--                </if> -->
			    <if test="dept_id != null and dept_id != ''">
                    AND coav.dept_id = #{dept_id}
               </if>
			   
			    <if test="cost_item_id != null and cost_item_id != ''">
                    AND coav.cost_item_id = #{cost_item_id}
               </if>
			   <if test="dept_kind != null and dept_kind != ''">
			   		And hdd.kind_code = #{dept_kind}
			   </if>
               	<if test="dept_code != null and dept_code != ''">
                    AND hdd.dept_code like '${dept_code}%'
               </if>
			    <if test="amount != null and amount != ''">
                    AND coav.amount = #{amount}
               </if>
        </where> 
        <!-- 
        	2016/11/08 lxj
        	按统计年月,部门编码,成本项目编码,资金来源编码升序
         -->  
		order by coav.acc_year,coav.acc_month,hdd.dept_code,cidn.cost_item_code,hs.source_code
	)select group_id,hos_id,copy_code,out_id,acc_year,acc_month,acc_year||acc_month as year_month,dept_id,dept_no,dept_code,dept_name,dept_level,
		 cost_item_id,cost_item_no,cost_item_code,cost_item_name,amount,is_last,source_id,source_code,source_name from temp
   union all
   select  null,null, null,null,'总','计' ,null, null, null, null,null,null, null, null, null,null,sum(amount), null,null, null, null from temp
    </select>
    
    <select id="queryCostOutAcctVouchPrint" parameterType="java.util.Map" resultType="java.util.Map" >
      with temp as
      (
         SELECT 
            coav.group_id,
            coav.hos_id,
            coav.copy_code,
            coav.acc_year,
            coav.acc_month,
            coav.dept_id,
            coav.dept_no,
            hdd.dept_code,
            hdd.dept_name,
            hdd.dept_level,
            hdd.is_last,
            coav.cost_item_id,
            coav.cost_item_no,
            cidn.cost_item_code,
            cidn.cost_item_name,
            coav.amount,
            hs.source_id,
            hs.source_code,
            hs.source_name
        FROM COST_OUT_ACCT_VOUCH coav 
        left join hos_dept_dict hdd
        on coav.group_id = hdd.group_id and coav.hos_id = hdd.hos_id
        and coav.dept_id = hdd.dept_id
        <if test="is_flag == 1">
         and coav.dept_no = hdd.dept_no 
        </if>
        left join COST_ITEM_DICT_NO cidn 
        on coav.cost_item_id = cidn.cost_item_id 
        and coav.group_id = cidn.group_id and coav.hos_id = cidn.hos_id and coav.copy_code = cidn.copy_code
        <if test="is_flag == 1">
        and coav.cost_item_no = cidn.cost_item_no 
        </if>
         left join HOS_SOURCE hs
        on coav.group_id = hs.group_id and coav.hos_id = hs.hos_id and coav.source_id = hs.source_id
            <where>            
            <if test="is_flag == 0 or is_flag == ''">
					and hdd.is_stop=0
					and cidn.is_stop=0
				</if>         
			    <if test="group_id != null and group_id != ''">
                    AND coav.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND coav.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND coav.copy_code = #{copy_code}
               </if>
               <if test="source_id != null and source_id != ''">
                    AND hs.source_id = #{source_id}
               </if>
               <if test="is_last==1">    
                    AND hdd.is_last = #{is_last}
               </if>
			   <if test=" b_year_month != null and b_year_month != '' and e_year_month != null and e_year_month != ''">
                  AND coav.acc_year ||''|| coav.acc_month between #{b_year_month} and  #{e_year_month}
            </if>
<!--                <if test="acc_year != null and acc_year != ''"> -->
<!--                     AND coav.acc_year = #{acc_year} -->
<!--                </if> -->
<!--                <if test="acc_month != null and acc_month != ''"> -->
<!--                     AND coav.acc_month = #{acc_month} -->
<!--                </if> -->
			    <if test="dept_id != null and dept_id != ''">
                    AND coav.dept_id = #{dept_id}
               </if>
			    
			    <if test="cost_item_id != null and cost_item_id != ''">
                    AND coav.cost_item_id = #{cost_item_id}
               </if>
			    
               	<if test="dept_code != null and dept_code != ''">
                    AND hdd.dept_code like '${dept_code}%'
               </if>
			    <if test="amount != null and amount != ''">
                    AND coav.amount = #{amount}
               </if>
        </where> 
        <!-- 
        	2016/11/08 lxj
        	按统计年月,部门编码,成本项目编码,资金来源编码升序
         -->  
		order by coav.acc_year,coav.acc_month,hdd.dept_code,cidn.cost_item_code,hs.source_code
	)select group_id,hos_id,copy_code,acc_year,acc_month,acc_year||acc_month as year_month,dept_id,dept_no,dept_code,dept_name,dept_level,
		 cost_item_id,cost_item_no,cost_item_code,cost_item_name,amount,is_last,source_id,source_code,source_name from temp
   union all
   select  null,null, null,'总','计' ,null, null, null, null,null,null, null, null, null,null,sum(amount), null,null, null, null from temp
    </select>
	<select id="queryCostDeptByCode" resultType="com.chd.hrp.cost.entity.CostOutAcctVouch" parameterType="string" >
	  
        select 
        a.dept_id,
         a.dept_no ,
         a.dept_code ,
         a.dept_name
		 from
		hos_dept_dict a
		left join hos_dept b on a.group_id=b.group_id and
		a.hos_id=b.hos_id and
		a.dept_id=b.dept_id
		<where>
			<if test="group_id != null  and group_id != ''">
				and a.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and a.hos_id = #{hos_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				and  a.dept_code = #{dept_code}
			</if>
			 <if test="is_stop != null and is_stop != ''">
                    AND a.is_stop = #{is_stop}
               </if>
		</where>
		order by a.dept_id 
        
	</select>
	
	<insert id="addCostOutAcctVouchByAcc">
		begin 
			<!-- 删除当月数据重新插入 -->
			delete from cost_out_acct_vouch 
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and acc_year = #{acc_year}
				and acc_month = #{acc_month};
				
			<!-- 插入会计数据 -->
			insert into cost_out_acct_vouch(
				out_id,group_id, hos_id, copy_code, acc_year, acc_month, dept_id, dept_no, 
				cost_item_id, cost_item_no, source_id, amount
			)
			select cost_out_acct_vouch_seq.nextval, t.* from (
					          select av.group_id,
					                 av.hos_id,
					                 av.copy_code,
					                 av.acc_year,
					                 av.acc_month,
					                 avc.check1_id,
					                 avc.check1_no,
					                 cidn.cost_item_id,
					                 cidn.cost_item_no,
					                 hs.source_id,
					                 sum(avc.debit)
					            from acc_vouch av 
					            left join acc_vouch_detail avd
					              on av.group_id = avd.group_id
					             and av.hos_id = avd.hos_id
					             and av.copy_code = avd.copy_code
					             and av.vouch_id = avd.vouch_id
					            left join acc_vouch_check avc
					              on avd.group_id = avc.group_id
					             and avd.hos_id = avc.hos_id
					             and avd.copy_code = avc.copy_code
					             and avd.vouch_detail_id = avc.vouch_detail_id
					            left join acc_subj asubj
					              on avd.group_id = asubj.group_id
					             and avd.hos_id = asubj.hos_id
					             and avd.copy_code = asubj.copy_code
					             and avd.acc_year = asubj.acc_year
					             and avd.subj_code = asubj.subj_code
					            left join cost_subj_item_map csim
					              on csim.group_id = asubj.group_id
					             and csim.hos_id = asubj.hos_id
					             and csim.copy_code = asubj.copy_code
					             and csim.acc_year = asubj.acc_year
					             and csim.subj_code = asubj.subj_code
								left join cost_item_dict_no cidn
								on cidn.group_id = csim.group_id
								and cidn.hos_id = csim.hos_id
								and cidn.copy_code = csim.copy_code
								and cidn.cost_item_code = csim.item_code
								and cidn.is_last = 1
								and cidn.is_stop = 0
					            left join (select source_id
					                         from hos_source
					                        where group_id = #{group_id}
					                          and hos_id = #{hos_id}
					                          and source_attr = 1
					                          and rownum = 1) hs
					              on 1 = 1
					           where av.group_id = #{group_id}
					             and av.hos_id = #{hos_id}
					             and av.copy_code = #{copy_code}
					             and av.acc_year = #{acc_year}
					             and av.acc_month = #{acc_month}
					             and av.state = 99
					             and avc.check1_id is not null
					             and cidn.cost_item_id is not null
					           group by av.group_id,
					                    av.hos_id,
					                    av.copy_code,
					                    av.acc_year,
					                    av.acc_month,
					                    avc.check1_id,
					                    avc.check1_no,
					                    cidn.cost_item_id,
					                    cidn.cost_item_no,
					                    hs.source_id		
				)t;
		end;
	</insert>
	<select id="queryCostOutAcctVouchPrm" parameterType="java.util.Map" resultType="java.util.Map" >
      with temp as
      (
         SELECT 
            coav.group_id,
            coav.hos_id,
            coav.copy_code,
            coav.acc_year,
            coav.acc_month,
            coav.dept_id,
            coav.dept_no,
            hdd.dept_code,
            hdd.dept_name,
            hdd.dept_level,
            hdd.is_last,
            coav.cost_item_id,
            coav.cost_item_no,
            cidn.cost_item_code,
            cidn.cost_item_name,
            coav.amount,
            hs.source_id,
            hs.source_code,
            hs.source_name
        FROM COST_OUT_ACCT_VOUCH coav 
        left join hos_dept_dict hdd
        on coav.group_id = hdd.group_id and coav.hos_id = hdd.hos_id
        and coav.dept_id = hdd.dept_id
        <if test="is_flag == 1">
         and coav.dept_no = hdd.dept_no 
        </if>
        left join COST_ITEM_DICT_NO cidn 
        on coav.cost_item_id = cidn.cost_item_id 
        and coav.group_id = cidn.group_id and coav.hos_id = cidn.hos_id and coav.copy_code = cidn.copy_code
        <if test="is_flag == 1">
        and coav.cost_item_no = cidn.cost_item_no 
        </if>
         left join HOS_SOURCE hs
        on coav.group_id = hs.group_id and coav.hos_id = hs.hos_id and coav.source_id = hs.source_id
            <where>            
            <if test="is_flag == 0 or is_flag == ''">
					and hdd.is_stop=0
					and cidn.is_stop=0
				</if>         
			    <if test="group_id != null and group_id != ''">
                    AND coav.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND coav.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND coav.copy_code = #{copy_code}
               </if>
               <if test="source_id != null and source_id != ''">
                    AND hs.source_id = #{source_id}
               </if>
               <if test="is_last==1">    
                    AND hdd.is_last = #{is_last}
               </if>
			   <if test=" b_year_month != null and b_year_month != '' and e_year_month != null and e_year_month != ''">
                  AND coav.acc_year || coav.acc_month between #{b_year_month} and  #{e_year_month}
            </if>
<!--                <if test="acc_year != null and acc_year != ''"> -->
<!--                     AND coav.acc_year = #{acc_year} -->
<!--                </if> -->
<!--                <if test="acc_month != null and acc_month != ''"> -->
<!--                     AND coav.acc_month = #{acc_month} -->
<!--                </if> -->
			    <if test="dept_id != null and dept_id != ''">
                    AND coav.dept_id = #{dept_id}
               </if>
			    
			    <if test="cost_item_id != null and cost_item_id != ''">
                    AND coav.cost_item_id = #{cost_item_id}
               </if>
			   
               	<if test="dept_code != null and dept_code != ''">
                    AND hdd.dept_code like '${dept_code}%'
               </if>
			    <if test="amount != null and amount != ''">
                    AND coav.amount = #{amount}
               </if>
        </where> 
        <!-- 
        	2016/11/08 lxj
        	按统计年月,部门编码,成本项目编码,资金来源编码升序
         -->  
		order by coav.acc_year,coav.acc_month,hdd.dept_code,cidn.cost_item_code,hs.source_code
	)select group_id,hos_id,copy_code,acc_year,acc_month,acc_year||acc_month as year_month,dept_id,dept_no,dept_code,dept_name,dept_level
		 
 <foreach collection="prm" item="item" index="index" separator="  " >
			  , sum(decode(cost_item_code, '${item.cost_item_code}', amount, null)) as c_${item.cost_item_code}
 </foreach>

 from temp
  group by  group_id
                       ,hos_id
                       ,copy_code
                       ,acc_year
                       ,acc_month
                       ,acc_year || acc_month 
                       ,dept_id
                       ,dept_no
                       ,dept_code
                       ,dept_name
                       ,dept_level
   union all
   select  null,null, null,'总','计' ,null, null, null, null,null,null
 <foreach collection="prm" item="item" index="index" separator="  " >
			  , sum(decode(cost_item_code, '${item.cost_item_code}', amount, null)) as c_${item.cost_item_code}
 </foreach>
 from temp
    </select>
    
    <select id="queryCostOutAcctVouchPrmPrint" parameterType="java.util.Map" resultType="java.util.Map" >
      with temp as
      (
         SELECT  
            coav.group_id,
            coav.hos_id,
            coav.copy_code,
            coav.acc_year,
            coav.acc_month,
            coav.dept_id,
            coav.dept_no,
            hdd.dept_code,
            hdd.dept_name,
            hdd.dept_level,
            hdd.is_last,
            coav.cost_item_id,
            coav.cost_item_no,
            cidn.cost_item_code,
            cidn.cost_item_name,
            coav.amount,
            hs.source_id,
            hs.source_code,
            hs.source_name
        FROM COST_OUT_ACCT_VOUCH coav 
        left join hos_dept_dict hdd
        on coav.group_id = hdd.group_id and coav.hos_id = hdd.hos_id
        and coav.dept_id = hdd.dept_id
        <if test="is_flag == 1">
         and coav.dept_no = hdd.dept_no 
        </if>
        left join COST_ITEM_DICT_NO cidn 
        on coav.cost_item_id = cidn.cost_item_id 
        and coav.group_id = cidn.group_id and coav.hos_id = cidn.hos_id and coav.copy_code = cidn.copy_code
        <if test="is_flag == 1">
        and coav.cost_item_no = cidn.cost_item_no 
        </if>
         left join HOS_SOURCE hs
        on coav.group_id = hs.group_id and coav.hos_id = hs.hos_id and coav.source_id = hs.source_id
            <where>            
            <if test="is_flag == 0 or is_flag == ''">
					and hdd.is_stop=0
					and cidn.is_stop=0
				</if>         
			    <if test="group_id != null and group_id != ''">
                    AND coav.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND coav.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND coav.copy_code = #{copy_code}
               </if>
               <if test="source_id != null and source_id != ''">
                    AND hs.source_id = #{source_id}
               </if>
               <if test="is_last==1">    
                    AND hdd.is_last = #{is_last}
               </if>
			   <if test=" b_year_month != null and b_year_month != '' and e_year_month != null and e_year_month != ''">
                  AND coav.acc_year || coav.acc_month between #{b_year_month} and  #{e_year_month}
            </if>
<!--                <if test="acc_year != null and acc_year != ''"> -->
<!--                     AND coav.acc_year = #{acc_year} -->
<!--                </if> -->
<!--                <if test="acc_month != null and acc_month != ''"> -->
<!--                     AND coav.acc_month = #{acc_month} -->
<!--                </if> -->
			    <if test="dept_id != null and dept_id != ''">
                    AND coav.dept_id = #{dept_id}
               </if>
			    
			    <if test="cost_item_id != null and cost_item_id != ''">
                    AND coav.cost_item_id = #{cost_item_id}
               </if>
			    
               	<if test="dept_code != null and dept_code != ''">
                    AND hdd.dept_code like '${dept_code}%'
               </if>
			    <if test="amount != null and amount != ''">
                    AND coav.amount = #{amount}
               </if>
        </where> 
        <!-- 
        	2016/11/08 lxj
        	按统计年月,部门编码,成本项目编码,资金来源编码升序
         -->  
		order by coav.acc_year,coav.acc_month,hdd.dept_code,cidn.cost_item_code,hs.source_code
	)select group_id,hos_id,copy_code,acc_year,acc_month,acc_year||acc_month as year_month,dept_id,dept_no,dept_code,dept_name,dept_level
		 
 <foreach collection="prm" item="item" index="index" separator="  " >
			  , sum(decode(cost_item_code, '${item.cost_item_code}', amount, null)) as c_${item.cost_item_code}
 </foreach>

 from temp
  group by  group_id
                       ,hos_id
                       ,copy_code
                       ,acc_year
                       ,acc_month
                       ,acc_year || acc_month 
                       ,dept_id
                       ,dept_no
                       ,dept_code
                       ,dept_name
                       ,dept_level
   union all
   select  null,null, null,'总','计' ,null, null, null, null,null,null
 <foreach collection="prm" item="item" index="index" separator="  " >
			  , sum(decode(cost_item_code, '${item.cost_item_code}', amount, null)) as c_${item.cost_item_code}
 </foreach>
 from temp
    </select>
    
    
    <select id="checkCostOutAcctVouch" parameterType="java.util.Map" resultType="java.util.Map" >
			  with temp as (
		        select av.group_id, av.hos_id, av.copy_code, av.acc_year, av.acc_month
		          , avc.check1_id, avc.check1_no, asubj.subj_code, asubj.subj_name, cidn.cost_item_code
		          , cidn.cost_item_name, cidn.cost_item_id, cidn.cost_item_no, hs.source_id, sum(avc.debit) debit
		        from acc_vouch av
		        left join acc_vouch_detail avd on av.group_id = avd.group_id
		        and av.hos_id = avd.hos_id
		        and av.copy_code = avd.copy_code
		        and av.vouch_id = avd.vouch_id 
		        left join acc_vouch_check avc on avd.group_id = avc.group_id
		        and avd.hos_id = avc.hos_id
		        and avd.copy_code = avc.copy_code
		        and avd.vouch_detail_id = avc.vouch_detail_id 
		        left join acc_subj asubj on avd.group_id = asubj.group_id
		        and avd.hos_id = asubj.hos_id
		        and avd.copy_code = asubj.copy_code
		        and avd.acc_year = asubj.acc_year
		        and avd.subj_code = asubj.subj_code 
		        left join cost_subj_item_map csim on csim.group_id = asubj.group_id
		        and csim.hos_id = asubj.hos_id
		        and csim.copy_code = asubj.copy_code
		        and csim.acc_year = asubj.acc_year
		        and csim.subj_code = asubj.subj_code 
		        left join cost_item_dict_no cidn on cidn.group_id = csim.group_id
		        and cidn.hos_id = csim.hos_id
		        and cidn.copy_code = csim.copy_code
		        and cidn.cost_item_code = csim.item_code
		        and cidn.is_last = 1
		        and cidn.is_stop = 0 
		          left join (
		            select source_id
		            from hos_source
		            where group_id = #{group_id}
		              and hos_id = #{hos_id}
		              and source_attr = 1
		              and rownum = 1
		          ) hs on 1 = 1 
		        where av.group_id =  #{group_id}
		          and av.hos_id =  #{hos_id}
		          and av.copy_code = #{copy_code}
		          and av.acc_year = #{acc_year}
		          and av.acc_month = #{acc_month}
		          and av.state = 99
		          and (asubj.subj_code like '5001'||'%' or asubj.subj_code like '5101'||'%')
					 group by  av.group_id, av.hos_id, av.copy_code, av.acc_year, av.acc_month
		          , avc.check1_id, avc.check1_no, asubj.subj_code, asubj.subj_name, cidn.cost_item_code
		          , cidn.cost_item_name, cidn.cost_item_id, cidn.cost_item_no, hs.source_id
		      )
		    select group_id, hos_id, copy_code, acc_year || acc_month as year_month
		      , check1_id, check1_no, subj_code, subj_name, cost_item_code
		      , cost_item_name, cost_item_id, cost_item_no, source_id, debit
					,decode(cost_item_id,null,'会计科目和成本项目没有维护对应关系,') note
		    from temp
		    where check1_id is null
		      or cost_item_id is null
		    union all
		    select null, null, null, '合计', null
		      , null, null, null, null, null
		      , null, null, null, sum(debit), null
		    from temp
		    where check1_id is null 
				or cost_item_id is null
				 union all
		    select null, null, null, '通过合计', null
		      , null, null, null, null, null
		      , null, null, null, sum(debit), null
		    from temp
		    where check1_id is not null 
				or cost_item_id is not null
		    union all
		    select null, null, null, '总合计', null
		      , null, null, null, null, null
		      , null, null, null, sum(debit), null
		    from temp
				union all
				select null, null, null, '通过条数', null
		      , null, null, null, null, null
		      , null, null, null, count(debit), null
		    from temp
		    where check1_id is not null 
				or cost_item_id is not null
				union all
				select null, null, null, '总条数', null
		      , null, null, null, null, null
		      , null, null, null, count(debit), null
		    from temp
				
				
	</select>
    
    
</mapper>

