<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostWageItemArrtMapper">

	<resultMap id="costWageItemArrt" type="com.chd.hrp.cost.entity.CostWageItemArrt">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="wage_item_code" column="wage_item_code"/>
        <result property="wage_item_name" column="wage_item_name"/>
        <result property="is_stop" column="is_stop"/>
        <result property="remark" column="remark"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
	</resultMap>
	
    <insert id="addCostWageItemArrt" useGeneratedKeys="true" >
    
        INSERT INTO COST_WAGE_ITEM_ARRT (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_item_code
			 ,
                    wage_item_name
			 ,
                    is_stop
			 ,
                    remark
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        ) VALUES (
#{group_id}			 ,
#{hos_id}			 ,
#{copy_code}			 ,
#{wage_item_code}			 ,
#{wage_item_name}			 ,
#{is_stop}			 ,
#{remark}			 ,
#{spell_code}			 ,
#{wbx_code}			 
        )
    
    </insert>
	<insert id="addBatchCostWageItemArrt" parameterType="java.util.List" >
    
        INSERT INTO COST_WAGE_ITEM_ARRT (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_item_code
			 ,
                    wage_item_name
			 ,
                    is_stop
			 ,
                    remark
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        )  select t.* from(
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
#{item.group_id}			 ,
#{item.hos_id}			 ,
#{item.copy_code}			 ,
#{item.wage_item_code}			 ,
#{item.wage_item_name}			 ,
#{item.is_stop}			 ,
#{item.remark}			 ,
#{item.spell_code}			 ,
#{item.wbx_code}			 
		 from dual 
		</foreach>
    )t
    </insert>
<insert id="addBatchCostWageItemArrtNew" parameterType="java.util.Map">
 INSERT INTO COST_WAGE_ITEM_ARRT (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_item_code
			 ,
                    wage_item_name
			 ,
                    is_stop
			 ,
                    remark
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        ) select group_id,
                 hos_id,
                 copy_code,
                 item_code,
                 item_name,
                 is_stop,
                 note,
                 spell_code,
			     wbx_code
                from (
                
                select group_id,
                 hos_id,
                 copy_code,
                 wage_code,
                 item_code,
                 item_name,
                 is_stop,
                 note,
                 spell_code,
			     wbx_code  from  ACC_WAGE_ITEM a where not exists (select 1 from COST_WAGE_ITEM_ARRT b 
			     where a.group_id=b.group_id and a.hos_id=b.hos_id  and a.copy_code=b.copy_code
			     )
			     <if test="group_id !=null and group_id !='' ">
			     and a.group_id=group_id
			     </if>
                <if test="hos_id !=null and hos_id !='' ">
                and a.hos_id=hos_id
                </if>
                <if test="copy_code !=null and copy_code !='' ">
                and a.copy_code= copy_code
                </if>
                )t
</insert>
	<update id="updateCostWageItemArrt" parameterType="java.util.Map">
    
        UPDATE cost_wage_item_arrt SET
			 wage_item_name = #{wage_item_name}
			 ,
			 is_stop = #{is_stop}
			 ,
			 remark = #{remark}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
			  and 
		 wage_item_code = #{wage_item_code}
			 
   
	</update>
	<update id="updateBatchCostWageItemArrt" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE cost_wage_item_arrt SET
			 wage_item_name = #{wage_item_name}
			 ,
			 is_stop = #{is_stop}
			 ,
			 remark = #{remark}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			  and 
		 wage_item_code = #{item.wage_item_code}
			 
    </foreach>
	</update>

    <delete id="deleteCostWageItemArrt" parameterType="java.util.Map">
   
        DELETE FROM cost_wage_item_arrt WHERE
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code}   and 
	        wage_item_code = #{wage_item_code} 
   
    </delete>
    <delete id="deleteBatchCostWageItemArrt" parameterType="java.util.List">
        DELETE FROM cost_wage_item_arrt WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			  and 
		 wage_item_code = #{item.wage_item_code}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryCostWageItemArrtByCode" resultType="com.chd.hrp.cost.entity.CostWageItemArrt" parameterType="string" >
	  
        SELECT 
            group_id,
            hos_id,
            copy_code,
            wage_item_code,
            wage_item_name,
            is_stop,
            remark,
            spell_code,
            wbx_code
		FROM cost_wage_item_arrt 
	        WHERE 
		        group_id = #{group_id}   and 
		        hos_id = #{hos_id}   and 
		        copy_code = #{copy_code}   and 
		        wage_item_code = #{wage_item_code} 
        
	</select>
	<select id="queryCostWageItemArrt" parameterType="java.util.Map" resultMap="costWageItemArrt" >
      
        SELECT 
            group_id,
            hos_id,
            copy_code,
            wage_item_code,
            wage_item_name,
            is_stop,
            remark,
            spell_code,
            wbx_code
        FROM COST_WAGE_ITEM_ARRT 
            <where>               
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND copy_code = #{copy_code}
               </if>
			    <if test="wage_item_code != null and wage_item_code != ''">
                    AND wage_item_code = #{wage_item_code}
               </if>
			    <if test="wage_item_name != null and wage_item_name != ''">
                    AND wage_item_name = #{wage_item_name}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND is_stop = #{is_stop}
               </if>
			    <if test="remark != null and remark != ''">
                    AND remark = #{remark}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND wbx_code = #{wbx_code}
               </if>
        </where>   
				order by group_id asc
    </select>
	<select id="queryCostWageItemArrtPrint" parameterType="java.util.Map" resultType="java.util.Map" >
      
        SELECT 
            group_id,
            hos_id,
            copy_code,
            wage_item_code,
            wage_item_name,
            is_stop,
            remark,
            spell_code,
            wbx_code
        FROM COST_WAGE_ITEM_ARRT 
            <where>               
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND copy_code = #{copy_code}
               </if>
			    <if test="wage_item_code != null and wage_item_code != ''">
                    AND wage_item_code = #{wage_item_code}
               </if>
			    <if test="wage_item_name != null and wage_item_name != ''">
                    AND wage_item_name = #{wage_item_name}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND is_stop = #{is_stop}
               </if>
			    <if test="remark != null and remark != ''">
                    AND remark = #{remark}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND wbx_code = #{wbx_code}
               </if>
        </where>   
				order by group_id asc
    </select>
</mapper>

