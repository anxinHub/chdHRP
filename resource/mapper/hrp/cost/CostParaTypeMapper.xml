<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostParaTypeMapper">
	
	<resultMap id="costParaType" type="com.chd.hrp.cost.entity.CostParaType">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="type_code" column="type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO COST_PARA_TYPE (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="type_code != null and type_code != ''">
		type_code
		,
		</if>
		<if test="type_name != null and type_name != ''">
		type_name
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="type_code != null and type_code != ''">
		#{type_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="type_name != null and type_name != ''">
		#{type_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO COST_PARA_TYPE (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="type_code != null and type_code != ''">
		type_code
		,
		</if>
		<if test="type_name != null and type_name != ''">
		type_name
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) select COST_PARA_TYPE_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			<trim suffix="" suffixOverrides=",">
			<if test="item.group_id != null and item.group_id != ''">
			#{item.group_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.hos_id != null and item.hos_id != ''">
			#{item.hos_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.copy_code != null and item.copy_code != ''">
			#{item.copy_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.type_code != null and item.type_code != ''">
			#{item.type_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.type_name != null and item.type_name != ''">
			#{item.type_name,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			#{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE cost_para_type 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="type_name != null and type_name != ''">
		type_name = #{type_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="type_name != null and type_name != ''">
		AND type_name = #{type_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE cost_para_type 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.type_name != null and item.type_name != ''">
			type_name = #{item.type_name,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.type_code != null and item.type_code != ''">
			AND type_code = #{type_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.type_name != null and item.type_name != ''">
			AND type_name = #{type_name,jdbcType=VARCHAR}
			</if>  
			<if test="item.note != null and item.note != ''">
			AND note = #{note,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM cost_para_type 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="type_name != null and type_name != ''">
		AND type_name = #{type_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM cost_para_type 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.type_code != null and item.type_code != ''">
				AND type_code = #{item.type_code,jdbcType=VARCHAR}
				</if>
				<if test="item.type_name != null and item.type_name != ''">
				AND type_name = #{item.type_name,jdbcType=VARCHAR}
				</if>
				<if test="item.note != null and item.note != ''">
				AND note = #{item.note,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="costParaType" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_code,
		type_name,
		note
		FROM COST_PARA_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="type_code != null and type_code != ''">
				AND (type_code like '${type_code}%'
				or
				type_name like '%${type_code}%'
				 )
			</if>
		<if test="type_name != null and type_name != ''">
		AND type_name = #{type_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryByCode" resultMap="costParaType"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_code,
		type_name,
		note
		FROM cost_para_type 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		type_code = #{type_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="costParaType"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_code,
		type_name,
		note
		FROM COST_PARA_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="type_name != null and type_name != ''">
		AND type_name = #{type_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="costParaType"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		type_code,
		type_name,
		note
		FROM COST_PARA_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="type_name != null and type_name != ''">
		AND type_name = #{type_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
</mapper>

