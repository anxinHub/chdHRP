<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostCustomDeptMapper">

	<resultMap id="deptMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_code" column="dept_code" />
		<result property="kind_code" column="kind_code" />
		<result property="kind_name" column="kind_name" />
		<result property="dept_name" column="dept_name" />
		<result property="is_stop" column="is_stop" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="note" column="note" />
	</resultMap>
	<insert id="add" useGeneratedKeys="true">

		INSERT INTO COST_CUSTOM_DEPT (
		group_id
		,
		hos_id
		,
		dept_id
		,
		dept_code
		,
		kind_code
		,
		dept_name
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note

		) VALUES (
		#{group_id,jdbcType=INTEGER} ,
		#{hos_id,jdbcType=INTEGER} ,
		COST_CUSTOM_DEPT_SEQ.nextval ,
		#{dept_code,jdbcType=VARCHAR} ,
		#{kind_code,jdbcType=VARCHAR} ,
		#{dept_name,jdbcType=VARCHAR} ,
		#{is_stop,jdbcType=INTEGER} ,
		#{spell_code,jdbcType=VARCHAR} ,
		#{wbx_code,jdbcType=VARCHAR} ,
		#{note,jdbcType=VARCHAR} 
		)

	</insert>
	<insert id="addBatch" parameterType="java.util.List">

		INSERT INTO COST_CUSTOM_DEPT (
		dept_id
		,
		group_id
		,
		hos_id
		,
		dept_code
		,
		kind_code
		,
		dept_name
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note

		) select COST_CUSTOM_DEPT_SEQ.nextval , t.*
		from(
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.dept_code} ,
			#{item.kind_code} ,
			#{item.dept_name} ,
			#{item.is_stop} ,
			#{item.spell_code} ,
			#{item.wbx_code} ,
			#{item.note} 
			from dual
		</foreach>
		) t
	</insert>

	<update id="update" parameterType="java.util.Map">

		UPDATE COST_CUSTOM_DEPT
		<trim prefix="SET" suffixOverrides=",">
			<if test="dept_code != null and dept_code != ''">
				dept_code = #{dept_code,jdbcType=VARCHAR}
				,
			</if>
			<if test="kind_code != null and kind_code != ''">
				kind_code = #{kind_code,jdbcType=VARCHAR}
				,
			</if>
			<if test="dept_name != null and dept_name != ''">
				dept_name = #{dept_name,jdbcType=VARCHAR}
				,
			</if>
			<if test="is_stop != null and is_stop != ''">
				is_stop = #{is_stop,jdbcType=INTEGER}
				,
			</if>
			<if test="spell_code != null and spell_code != ''">
				spell_code = #{spell_code,jdbcType=VARCHAR}
				,
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				wbx_code = #{wbx_code,jdbcType=VARCHAR}
				,
			</if>
			<if test="note != null and note != ''">
				note = #{note,jdbcType=VARCHAR}
				,
			</if>
			
		</trim>
		WHERE
		group_id = #{group_id,jdbcType=INTEGER}
		and
		hos_id =
		#{hos_id,jdbcType=INTEGER}
		and
		dept_id = #{dept_id,jdbcType=INTEGER}
	</update>


	<update id="updateDeptName" parameterType="java.util.Map">

		UPDATE COST_CUSTOM_DEPT SET
		dept_name = #{dept_name}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}

		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		dept_id = #{dept_id}
	</update>

	<update id="updateBatch" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE COST_CUSTOM_DEPT SET
			dept_code = #{item.dept_code}
			,
			kind_code = #{item.kind_code}
			,
			dept_name = #{item.dept_name}
			,
			is_stop = #{item.is_stop}
			,
			spell_code = #{item.spell_code}
			,
			wbx_code = 	#{item.wbx_code}
			,
			note = #{item.note}

			WHERE
			group_id = 	#{item.group_id}
			and hos_id = #{item.hos_id}
			and dept_id = #{item.dept_id}

		</foreach>
	</update>

	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM COST_CUSTOM_DEPT WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		dept_id = #{dept_id}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM COST_CUSTOM_DEPT WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			and hos_id =#{item.hos_id}
			and dept_id = #{item.dept_id}
		</foreach>

 
	</delete>

	<select id="queryByCode" resultMap="deptMap" parameterType="java.util.Map">

		SELECT
		hd.group_id,
		hd.hos_id,
		hd.dept_id,
		hd.dept_code,
		hd.kind_code,
		hdk.kind_name,
		hd.dept_name,
		hd.is_stop,
		hd.spell_code,
		hd.wbx_code,
		hd.note
		FROM COST_CUSTOM_DEPT hd
		left join HOS_DEPT_kind hdk 
			on
				hd.group_id = hdk.group_id 
				and hd.hos_id = hdk.hos_id and
				hd.kind_code = hdk.kind_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND hd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hd.hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hd.dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hd.dept_code = #{dept_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hd.kind_code = #{kind_code}
			</if>
		</where>
	</select>
	<select id="queryDeptByCodeName" resultMap="deptMap" parameterType="java.util.Map">
		select hdk.group_id, hdk.hos_id,  hdk.kind_code , hdk.kind_name
		from  hos_dept_kind hdk 
		<where>
			<if test="group_id != null and group_id != ''">
				AND hdk.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdk.hos_id = #{hos_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdk.kind_code = #{dept_code}
			</if>
		</where>
	</select>
	<select id="query" parameterType="java.util.Map" resultMap="deptMap">
		SELECT 
		hd.group_id,
		hd.hos_id,
		hd.dept_id,
		hd.dept_code,
		hd.kind_code,
		hdk.kind_name,
		hd.dept_name,
		hd.is_stop,
		hd.spell_code,
		hd.wbx_code,
		hd.note
		FROM COST_CUSTOM_DEPT hd
		left join HOS_DEPT_kind hdk 
			on
				hd.group_id = hdk.group_id 
				and hd.hos_id = hdk.hos_id and
				hd.kind_code = hdk.kind_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND hd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hd.hos_id = #{hos_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND ( hd.dept_code like '${dept_code}%' or
					hd.dept_name like '%${dept_code}%' or
					hd.spell_code like upper('%${dept_code}%') or
					hd.wbx_code like upper('%${dept_code}%')
				)
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hd.kind_code = #{kind_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hd.is_stop = #{is_stop}
			</if>
			
		</where>
		order by hd.dept_code asc
	</select>

	<select id="queryDeptById" resultMap="deptMap" parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		dept_id,
		dept_code,
		kind_code,
		dept_name,
		is_stop,
		spell_code,
		wbx_code,
		note
		FROM COST_CUSTOM_DEPT
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id != #{dept_id}
			</if>
			AND ( dept_code = #{dept_code} or dept_name = #{dept_name} )

		</where>
	</select>
	
	<select id="queryDeptKindDate" resultMap="deptMap" parameterType="java.util.Map">

		SELECT	kind_code
		FROM hos_dept_kind
		where 
			group_id = #{group_id}
			AND hos_id = #{hos_id}

	</select>
	
</mapper>

