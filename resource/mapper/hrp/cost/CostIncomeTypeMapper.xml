<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostIncomeTypeMapper">

	<resultMap id="costIncomeType" type="com.chd.hrp.cost.entity.CostIncomeType">
		<result property="income_type_id" column="income_type_id"/>
        <result property="income_type_code" column="income_type_code"/>
        <result property="income_type_name" column="income_type_name"/>
        <result property="is_stop" column="is_stop"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
	</resultMap>
	
    <insert id="addCostIncomeType" useGeneratedKeys="true" >
    
        INSERT INTO COST_INCOME_TYPE (
        	income_type_id,
                    income_type_code
			 ,
                    income_type_name
			 ,
                    is_stop
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        ) VALUES (
        COST_INCOME_TYPE_SEQ.nextval,
#{income_type_code}			 ,
#{income_type_name}			 ,
#{is_stop}			 ,
#{spell_code}			 ,
#{wbx_code}			 
        )
    
    </insert>
	<insert id="addBatchCostIncomeType" parameterType="java.util.List" >
    
        INSERT INTO COST_INCOME_TYPE (
        income_type_id,
                    income_type_code
			 ,
                    income_type_name
			 ,
                    is_stop
			 ,
                    spell_code
			 ,
                    wbx_code
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 	
        COST_INCOME_TYPE_SEQ.nextval,	
#{item.income_type_code}			 ,
#{item.income_type_name}			 ,
#{item.is_stop}			 ,
#{item.spell_code}			 ,
#{item.wbx_code}			 
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateCostIncomeType" parameterType="java.util.Map">
    
        UPDATE cost_income_type SET
			 income_type_name = #{income_type_name}
			 ,
			 is_stop = #{is_stop}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 income_type_id = #{income_type_id}
			 
   
	</update>
	<update id="updateBatchCostIncomeType" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE cost_income_type SET
			 income_type_name = #{income_type_name}
			 ,
			 is_stop = #{is_stop}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 income_type_id = #{item.income_type_id}
			 
    </foreach>
	</update>

    <delete id="deleteCostIncomeType" parameterType="java.util.Map">
   
        DELETE FROM cost_income_type WHERE
	        income_type_id = #{income_type_id} 
   
    </delete>
    <delete id="deleteBatchCostIncomeType" parameterType="java.util.List">
        DELETE FROM cost_income_type WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 income_type_id = #{item.income_type_id}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryCostIncomeTypeByCode" resultType="com.chd.hrp.cost.entity.CostIncomeType" parameterType="string" >
	  
        SELECT 
        	income_type_id,
            income_type_code,
            income_type_name,
            is_stop,
            spell_code,
            wbx_code
		FROM cost_income_type 
	        <where>      
	        	<if test="income_type_id != null and income_type_id != ''">
                    AND income_type_id = #{income_type_id}
               </if>               
			    <if test="income_type_code != null and income_type_code != ''">
                    AND income_type_code = #{income_type_code}
               </if>
        </where>
        
	</select>
	<select id="queryCostIncomeType" parameterType="java.util.Map" resultMap="costIncomeType" >
      
        SELECT 
        	income_type_id,
            income_type_code,
            income_type_name,
            is_stop,
            spell_code,
            wbx_code
        FROM COST_INCOME_TYPE 
            <where>      
            	<if test="income_type_id != null and income_type_id != ''">
                    AND income_type_id = #{income_type_id}
               </if>                
			    <if test="income_type_code != null and income_type_code != ''">                  
                   AND (income_type_code like '%${income_type_code}%' 
                    or income_type_name like '%${income_type_code}%' 
                     or spell_code like '%${income_type_code}%' 
                     or wbx_code like '%${income_type_code}%' )
               </if>
			    <if test="income_type_name != null and income_type_name != ''">
                    AND income_type_name = #{income_type_name}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND is_stop = #{is_stop}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND wbx_code = #{wbx_code}
               </if>
        </where>   
				order by income_type_code asc
    </select>
	
</mapper>

