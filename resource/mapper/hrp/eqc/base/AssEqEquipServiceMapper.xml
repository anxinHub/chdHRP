<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.eqc.dao.base.AssEqEquipServiceMapper">
	
	<resultMap id="assEqEquipService" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="analysis_code" column="analysis_code"/>
	<result property="analysis_name" column="analysis_name"/>
	<result property="charge_kind_id" column="charge_kind_id"/>
	<result property="charge_kind_name" column="charge_kind_name"/>
	<result property="min_minutes" column="min_minutes"/>
	<result property="minutes_per_times" column="minutes_per_times"/>
	<result property="max_minutes" column="max_minutes"/>
	<result property="remark" column="remark"/>
	<result property="invalid_flag" column="invalid_flag"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_EQ_SERVICE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			analysis_code
			,
			charge_kind_id
			,
			min_minutes
			,
			minutes_per_times
			,
			max_minutes
			,
			remark
			,
			invalid_flag
		
		) VALUES (
			#{group_id}		,
			#{hos_id}		,
			#{copy_code}		,
			#{analysis_code}		,
			#{charge_kind_id}		,
			#{min_minutes}		,
			#{minutes_per_times}		,
			#{max_minutes}		,
			#{remark}		,
			#{invalid_flag}		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_EQ_SERVICE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			analysis_code
			,
			charge_kind_id
			,
			min_minutes
			,
			minutes_per_times
			,
			max_minutes
			,
			remark
			,
			invalid_flag
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.copy_code}			,
				#{item.analysis_code}			,
				#{item.charge_kind_id}			,
				#{item.min_minutes}			,
				#{item.minutes_per_times}			,
				#{item.max_minutes}			,
				#{item.remark}			,
				#{item.invalid_flag}			
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ASS_EQ_SERVICE SET
		min_minutes = #{min_minutes}
			,
			minutes_per_times = #{minutes_per_times}
			,
			max_minutes = #{max_minutes}
			,
			remark = #{remark}
			,
			invalid_flag = #{invalid_flag}
			
		WHERE 
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and analysis_code = #{analysis_code}
			and charge_kind_id = #{charge_kind_id}
		
	
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_EQ_SERVICE SET
				min_minutes = #{item.min_minutes}
				,
				minutes_per_times = #{item.minutes_per_times}
				,
				max_minutes = #{item.max_minutes}
				,
				remark = #{item.remark}
				,
				invalid_flag = #{item.invalid_flag}
				
			WHERE 
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and analysis_code = #{item.analysis_code}
				and charge_kind_id = #{item.charge_kind_id}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ASS_EQ_SERVICE 
		WHERE
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and analysis_code = #{analysis_code}
			and charge_kind_id = #{charge_kind_id}
	
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ASS_EQ_SERVICE WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and analysis_code = #{item.analysis_code}
				and charge_kind_id = #{item.charge_kind_id}
				
			</foreach>
	
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assEqEquipService" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.analysis_code,
			e.analysis_name ,
			a.charge_kind_id,
			d.charge_kind_name ,
			a.min_minutes,
			a.minutes_per_times,
			a.max_minutes,
			a.remark,
			a.invalid_flag
		FROM ASS_EQ_SERVICE a
		<!--
		left join V_ASS_CARD b
			on  a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			
		left join ass_no_dict c
			on  c.group_id = b.group_id
			and c.hos_id = b.hos_id
			and c.copy_code = b.copy_code
			and c.ass_id = b.ass_id
			and c.ass_no = b.ass_no
		-->
		left join COST_CHARGE_KIND_ARRT d
			on  a.group_id = d.group_id
			and a.hos_id = d.hos_id
			and a.copy_code = d.copy_code
			and a.charge_kind_id = d.charge_kind_id
		left join ASS_Benefit_Analysis_Object  e
		    on  a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.copy_code = e.copy_code
			and a.analysis_code = e.analysis_code
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			<if test="analysis_code != null and analysis_code != ''">
			AND a.analysis_code = #{analysis_code}
			</if>
			<if test="charge_kind_id != null and charge_kind_id != ''">
			AND a.charge_kind_id = #{charge_kind_id}
			</if>
			<if test="min_minutes != null and min_minutes != ''">
			AND a.min_minutes = #{min_minutes}
			</if>
			<if test="remark != null and remark != ''">
			AND a.remark like '%' || #{remark} || '%'
			</if>
		order by analysis_code asc
	</select>
	<select id="queryByCode" resultMap="assEqEquipService" parameterType="string" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			analysis_code,
			charge_kind_id,
			min_minutes,
			minutes_per_times,
			max_minutes,
			remark,
			invalid_flag
		FROM ASS_EQ_SERVICE 
		WHERE 
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and analysis_code = #{analysis_code}
			and charge_kind_id = #{charge_kind_id}
	
	</select>
	
	<!-- 查询添加数据是否已存在 -->
	<select id="queryDataExist" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM ASS_EQ_SERVICE
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND analysis_code = #{item.analysis_code,jdbcType=VARCHAR}
				AND charge_kind_id = #{item.charge_kind_id,jdbcType=VARCHAR}
		</foreach>
	</select>
</mapper>

