<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.eqc.dao.xymanage.AssEqEquipConsumableMapper">
	
	<resultMap id="assEqEquipConsumable" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="analysis_code" column="analysis_code"/>
	<result property="analysis_name" column="analysis_name"/>
	<result property="oresource_code" column="oresource_code"/>
	<result property="oresource_code_name" column="oresource_code_name"/>
	<result property="price" column="price"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="quantity" column="quantity"/>
	<result property="amount" column="amount"/>
	<result property="remark" column="remark"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_EQ_CONSUM_STANDARD(
			group_id
			,
			hos_id
			,
			copy_code
			,
			analysis_code
			,
			oresource_code
			,
			price
			,
			unit_code
			,
			quantity
			,
			amount
			,
			remark
		
		) VALUES (
			#{group_id}		,
			#{hos_id}		,
			#{copy_code}		,
			#{analysis_code}		,
			#{oresource_code}		,
			#{price}		,
			#{unit_code}		,
			#{quantity}		,
			#{amount}		,
			#{remark}		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_EQ_CONSUM_STANDARD(
			group_id
			,
			hos_id
			,
			copy_code
			,
			analysis_code
			,
			oresource_code
			,
			price
			,
			unit_code
			,
			quantity
			,
			amount
			,
			remark
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.copy_code}			,
				#{item.analysis_code}			,
				#{item.oresource_code}			,
				#{item.price}			,
				#{item.unit_code}			,
				#{item.quantity}			,
				#{item.amount}			,
				#{item.remark}			
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ASS_EQ_CONSUM_STANDARD SET
			price = #{price}
			,
			unit_code = #{unit_code}
			,
			quantity = #{quantity}
			,
			amount = #{amount}
			,
			remark = #{remark}
		
		WHERE 
			group_id = #{group_id}   
			and hos_id = #{hos_id}   
			and copy_code = #{copy_code}   
			and analysis_code = #{analysis_code}   
			and oresource_code = #{oresource_code} 
		
	
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_EQ_CONSUM_STANDARD SET
				price = #{item.price}
				,
				unit_code = #{item.unit_code}
				,
				quantity = #{item.quantity}
				,
				amount = #{item.amount}
				,
				remark = #{item.remark}
			
			WHERE 
				group_id = #{item.group_id}   
				and hos_id = #{item.hos_id}   
				and copy_code = #{item.copy_code}   
				and analysis_code = #{item.analysis_code}   
				and oresource_code = #{item.oresource_code} 
			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ASS_EQ_CONSUM_STANDARD 
		WHERE
			group_id = #{group_id}   
			and hos_id = #{hos_id}   
			and copy_code = #{copy_code}   
			and analysis_code = #{analysis_code}   
			and oresource_code = #{oresource_code} 
	
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ASS_EQ_CONSUM_STANDARD WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}   
				and hos_id = #{item.hos_id}   
				and copy_code = #{item.copy_code}   
				and analysis_code = #{item.analysis_code}   
				and oresource_code = #{item.oresource_code} 
				
			</foreach>
	
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assEqEquipConsumable" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.analysis_code,
			t.analysis_name ,
			a.oresource_code,
			e.oresource_desc oresource_code_name ,
			a.price,
			a.unit_code,
			d.unit_name ,
			a.quantity,
			a.amount,
			a.remark
		FROM ASS_EQ_CONSUM_STANDARD a
		left join ASS_BENEFIT_ANALYSIS_OBJECT t
			on a.group_id = t.group_id
			and a.hos_id = t.hos_id
			and a.copy_code = t.copy_code
			and a.analysis_code = t.analysis_code	
		left join hos_unit d
			on a.group_id = d.group_id
			and a.hos_id = d.hos_id
			and a.unit_code = d.unit_code
		left join ASS_OTHER_RESOURCE_TYPE e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.copy_code = e.copy_code
			and a.oresource_code = e.oresource_code
		where                    
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			<if test="analysis_code != null and analysis_code != ''">
			AND a.analysis_code = #{analysis_code}
			</if>
			<if test="oresource_code != null and oresource_code != ''">
			AND a.oresource_code = #{oresource_code}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="unit_code != null and unit_code != ''">
			AND a.unit_code = #{unit_code}
			</if>
			<if test="quantity != null and quantity != ''">
			AND a.quantity = #{quantity}
			</if>
			<if test="amount != null and amount != ''">
			AND a.amount = #{amount}
			</if>
			<if test="remark != null and remark != ''">
			AND a.remark = #{remark}
			</if>
		order by a.analysis_code asc
	</select>
	<select id="queryByCode" resultMap="assEqEquipConsumable" parameterType="string" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			analysis_code,
			ec_eq_group,
			oresource_code,
			price,
			unit_code,
			quantity,
			amount,
			remark
		FROM ASS_EQ_CONSUM_STANDARD 
		WHERE 
			group_id = #{group_id}   
			and hos_id = #{hos_id}   
			and copy_code = #{copy_code}   
			and analysis_code = #{analysis_code}   
			and oresource_code = #{oresource_code} 
	
	</select>
	<!-- 查询添加数据是否已存在 -->
	<select id="queryDataExist" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM ASS_EQ_CONSUM_STANDARD
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND analysis_code = #{item.analysis_code,jdbcType=VARCHAR}
				AND oresource_code = #{item.oresource_code,jdbcType=VARCHAR}
		</foreach>
	</select>
</mapper>

