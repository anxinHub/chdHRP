<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.ProjMapper">

	<resultMap id="proj" type="com.chd.hrp.sys.entity.Proj">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="proj_id" column="proj_id"/>
        <result property="proj_code" column="proj_code"/>
        <result property="type_code" column="type_code"/>
         <result property="type_name" column="type_name"/> 
        <result property="proj_name" column="proj_name"/>
        <result property="proj_simple" column="proj_simple"/>
        <result property="sort_code" column="sort_code"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
        <result property="is_stop" column="is_stop"/>
        <result property="note" column="note"/>
	</resultMap>
	
	<resultMap id="accProj" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="proj_id" column="proj_id"/>
		<result property="proj_code" column="proj_code"/>
		<result property="type_code" column="type_code"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_name" column="dept_name"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="type_name" column="type_name"/>
		<result property="proj_name" column="proj_name"/>
		<result property="proj_simple" column="proj_simple"/>
		<result property="is_stop" column="is_stop"/>
		<result property="level_code" column="level_code"/>
		<result property="level_name" column="level_name"/>
		<result property="use_code" column="use_code"/>
		<result property="use_name" column="use_name"/>
		<result property="con_emp_id" column="con_emp_id"/>
		<result property="con_emp_name" column="con_emp_name"/>
		<result property="con_phone" column="con_phone"/>
		<result property="acc_emp_id" column="acc_emp_id"/>
		<result property="acc_emp_name" column="acc_emp_name"/>
		<result property="acc_phone" column="acc_phone"/>
		<result property="app_emp_id" column="app_emp_id"/>
		<result property="app_emp_name" column="app_emp_name"/>
		<result property="app_date" column="app_date"/>
		<result property="app_phone" column="app_phone"/>
		<result property="email" column="email"/>
		<result property="note" column="note"/>
		<result property="sort_code" column="sort_code"/>
		
	</resultMap>
	
    <insert id="addProj" useGeneratedKeys="true" >
    
        INSERT INTO HOS_PROJ (
                    group_id
			 ,
                    hos_id
			 ,
                    proj_id
			 ,
                    proj_code
			 ,
                    type_code
			 ,
                    proj_name
			 ,
                    proj_simple
			 ,
                    sort_code
			 ,
                    spell_code
			 ,
                    wbx_code
			 ,
                    is_stop
			 ,
                    note
			 
        ) VALUES (
#{group_id}			 ,
#{hos_id}			 ,
HOS_PROJ_SEQ.nextval			 ,
#{proj_code}			 ,
#{type_code}			 ,
#{proj_name}			 ,
#{proj_simple}			 ,
#{sort_code}			 ,
#{spell_code}			 ,
#{wbx_code}			 ,
#{is_stop}			 ,
#{note}			 
        )
    
    </insert>
	<insert id="addBatchProj" parameterType="java.util.List" >
    
        INSERT INTO HOS_PROJ (
                    group_id
			 ,
                    hos_id
			 ,
                    proj_id
			 ,
                    proj_code
			 ,
                    type_code
			 ,
                    proj_name
			 ,
                    proj_simple
			 ,
                    sort_code
			 ,
                    spell_code
			 ,
                    wbx_code
			 ,
                    is_stop
			 ,
                    note
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
#{item.group_id}			 ,
#{item.hos_id}			 ,
#{item.proj_id}			 ,
#{item.proj_code}			 ,
#{item.type_code}			 ,
#{item.proj_name}			 ,
#{item.proj_simple}			 ,
#{item.sort_code}			 ,
#{item.spell_code}			 ,
#{item.wbx_code}			 ,
#{item.is_stop}			 ,
#{item.note}			 
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateProj" parameterType="java.util.Map">
    
        UPDATE hos_proj SET
        	 proj_id = #{proj_id}
			 ,
			 proj_code = #{proj_code}
			 ,
			 proj_name = #{proj_name}
			 ,
			 type_code = #{type_code}
			 ,
			 proj_simple = #{proj_simple}
			 <if test="sort_code!=null and sort_code!=''">
			 ,
			 sort_code = #{sort_code}
			 </if>
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 ,
			 is_stop = #{is_disable} <!-- _dict 的 is_disable 与不带_dict 的 is_stop 一个含义  -->
			 ,
			 note = #{note}
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 proj_id = #{proj_id}
			 
	</update>
	
	<update id="updateProjCode" parameterType="java.util.Map">
    
        UPDATE hos_proj SET
			 proj_code = #{proj_code}
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 proj_id = #{proj_id}
   
	</update>
	
	<update id="updateProjName" parameterType="java.util.Map">
    
        UPDATE hos_proj SET
			 proj_name = #{proj_name}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 proj_id = #{proj_id}
			 
	</update>
	
	<update id="updateBatchProj" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE hos_proj SET
			 type_code = #{type_code}
			 ,
			 proj_name = #{proj_name}
			 ,
			 proj_simple = #{proj_simple}
			 ,
			 sort_code = #{sort_code}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 ,
			 is_stop = #{is_stop}
			 ,
			 note = #{note}
			 
        WHERE 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 proj_id = #{item.proj_id}
			 
    </foreach>
	</update>

    <delete id="deleteProj" parameterType="java.util.Map">
   
        DELETE FROM hos_proj WHERE
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        proj_id = #{proj_id}   
   
    </delete>
    <delete id="deleteBatchProj" parameterType="java.util.List">
        DELETE FROM hos_proj WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 proj_id = #{item.proj_id}
			 
		</foreach>
        
   
    </delete>
     <select id="queryProjCurrentSequence" resultType="java.lang.Long" useCache="false">
		  select HOS_PROJ_SEQ.currval proj_id from dual
	</select>
    <select id="queryProjByCode" resultType="com.chd.hrp.sys.entity.Proj" parameterType="string" >
		SELECT 
            hp.group_id,
            hp.hos_id,
            hp.proj_id,
            hp.proj_code,
            hp.type_code,
            hpt.type_name,
            hp.proj_name,
            hp.proj_simple,
            hp.sort_code,
            hp.spell_code,
            hp.wbx_code,
            hp.is_stop,
            hp.note
        FROM HOS_PROJ hp left join  hos_proj_type hpt  
         ON 
        	hp.group_id = hpt.group_id
        	and hp.hos_id = hpt.hos_id
        	and hp.type_code = hpt.type_code
        <where>
        	<if test="group_id != null and group_id != ''">
                AND hp.group_id = #{group_id}
	        </if>
		    <if test="hos_id != null and hos_id != ''">
	            AND hp.hos_id = #{hos_id}
             </if>
		    <if test="proj_id != null and proj_id != ''">
	            AND hp.proj_id = #{proj_id}
	        </if>
	        <if test="proj_code != null and proj_code != ''">
	            AND hp.proj_code = #{proj_code}
	        </if>
        </where>  
	</select>
	<select id="queryProj" parameterType="java.util.Map" resultMap="proj" >
      
        SELECT 
            hp.group_id,
            hp.hos_id,
            hp.proj_id,
            hp.proj_code,
            hp.type_code,
            hpt.type_name,
            hp.proj_name,
            hp.proj_simple,
            hp.sort_code,
            hp.spell_code,
            hp.wbx_code,
            hp.is_stop,
            hp.note
        FROM HOS_PROJ hp left join HOS_PROJ_TYPE hpt
        	ON 
        	hp.group_id = hpt.group_id
        	and hp.hos_id = hpt.hos_id
        	and hp.type_code = hpt.type_code
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND hp.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hp.hos_id = #{hos_id}
               </if>
			    <if test="proj_id != null and proj_id != ''">
                    AND hp.proj_id = #{proj_id}
               </if>
			    <if test="proj_code != null and proj_code != '' and proj_code != 'HOS_PROJ'">
                    AND hp.proj_code = #{proj_code}
               </if>
			    <if test="type_code != null and type_code != ''">
                    AND hp.type_code = #{type_code}
               </if>
			    <if test="proj_name != null and proj_name != ''">
                    AND ( upper(hp.proj_name) like '%${proj_name}%' 
                         or upper(hp.proj_code) like '%${proj_name}%' 
                         or hp.spell_code like '%${proj_name}%' 
                         or hp.wbx_code like '%${proj_name}%' 
                       )
               </if>
			    <if test="proj_simple != null and proj_simple != ''">
                    AND hp.proj_simple = #{proj_simple}
               </if>
			    <if test="sort_code != null and sort_code != ''">
                    AND hp.sort_code = #{sort_code}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND hp.spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND hp.wbx_code = #{wbx_code}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND hp.is_stop = #{is_stop}
               </if>
			    <if test="note != null and note != ''">
                    AND hp.note = #{note}
               </if>
        </where>   
				order by proj_code asc
    </select>
	
	
	<select id="queryAccProj" parameterType="java.util.Map" resultMap="accProj" >
      
  SELECT hp.group_id, hp.hos_id, hp.proj_id, hp.proj_code, hp.type_code,apa.dept_id,hd.dept_name
    ,hd.dept_no,hd.dept_code, hpt.type_name, hp.proj_name, hp.proj_simple, hp.is_stop,apa.level_code,hpl.level_name
    , apa.use_code, hpu.use_name, apa.con_emp_id,he.emp_name con_emp_name, apa.con_phone,
    apa.acc_emp_id,hed.emp_name acc_emp_name, apa.acc_phone, apa.app_emp_id,hedict.emp_name app_emp_name
    , apa.app_date, apa.app_phone, apa.email
    , apa.note,hp.sort_code
  FROM HOS_PROJ_dict hp
  left join  acc_proj_attr apa
  on hp.group_id = apa.group_id
  AND hp.hos_id = apa.hos_id
  AND hp.proj_id = apa.proj_id and hp.is_stop=0
  left join  HOS_PROJ_TYPE hpt
  on hp.group_id = hpt.group_id
   AND hp.hos_id = hpt.hos_id
   AND hp.type_code = hpt.type_code
  left join HOS_PROJ_LEVEL hpl
  on apa.group_id = hpl.group_id
    AND apa.hos_id = hpl.hos_id
    AND apa.level_code = hpl.level_code
  left join  HOS_PROJ_USE hpu
  on apa.group_id = hpu.group_id
    AND apa.hos_id = hpu.hos_id
    AND apa.use_code = hpu.use_code
    left join Hos_Dept_Dict hd 
   on apa.group_id = hd.group_id
    AND apa.hos_id = hd.hos_id
    AND apa.dept_id = hd.dept_id
    left join Hos_Emp_Dict he
    on he.group_id = apa.group_id
    AND he.hos_id = apa.hos_id
    AND he.emp_id = apa.con_emp_id  and he.is_stop=0 
   left join Hos_Emp_Dict hed
   on hed.group_id = apa.group_id
   AND hed.hos_id = apa.hos_id
   AND hed.emp_id = apa.acc_emp_id and hed.is_stop=0 
   left join Hos_Emp_Dict hedict
    on hedict.group_id = apa.group_id
    AND hedict.hos_id = apa.hos_id
    AND hedict.emp_id = apa.app_emp_id and hedict.is_stop=0
            <where>         
            hp.is_stop=0            
			    <if test="group_id != null and group_id != ''">
                    AND hp.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hp.hos_id = #{hos_id}
               </if>
			    <if test="proj_id != null and proj_id != ''">
                    AND hp.proj_id = #{proj_id}
               </if>
			    <if test="proj_code != null and proj_code != '' and proj_code != 'HOS_PROJ'">
                    AND hp.proj_code = #{proj_code}
               </if>
			    <if test="type_code != null and type_code != ''">
                    AND hp.type_code = #{type_code}
               </if>
			    <if test="proj_name != null and proj_name != ''">
                    AND ( upper(hp.proj_name) like '%${proj_name}%' 
                         or upper(hp.proj_code) like '%${proj_name}%' 
                         or hp.spell_code like '%${proj_name}%' 
                         or hp.wbx_code like '%${proj_name}%' 
                       )
               </if>
			    <if test="proj_simple != null and proj_simple != ''">
                    AND hp.proj_simple = #{proj_simple}
               </if>
			    <if test="sort_code != null and sort_code != ''">
                    AND hp.sort_code = #{sort_code}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND hp.spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND hp.wbx_code = #{wbx_code}
               </if>
<!-- 			    <if test="is_stop != null and is_stop != ''"> -->
<!--                     AND hp.is_stop = #{is_stop} -->
<!--                </if> -->
			    <if test="note != null and note != ''">
                    AND hp.note = #{note}
               </if>
               <if test="user_code!=null and user_code!=''">
               		and (
               			 he.emp_code like  '%${user_code}%'
               		  or he.emp_name like  '%${user_code}%'
               		  or upper(he.spell_code) like  '%${user_code}%'
               		  or lower(he.spell_code) like  '%${user_code}%'
               		)
               </if>
              	<if test="begin_app_date != null and begin_app_date != ''">
	            	AND apa.app_date &gt;= to_date(#{begin_app_date},'yyyy-MM-dd')
	         	</if>
	          	<if test="end_app_date != null and end_app_date != ''">
	           		 AND apa.app_date &lt;= to_date(#{end_app_date},'yyyy-MM-dd')
	          	</if>
        </where>   
				order by hp.proj_code asc
    </select>
	
	
	
	<select id="queryProjById" resultType="com.chd.hrp.sys.entity.Proj" parameterType="string" >
		SELECT 
            hp.group_id,
            hp.hos_id,
            hp.proj_id,
            hp.proj_code,
            hp.type_code,
            hpt.type_name,
            hp.proj_name,
            hp.proj_simple,
            hp.sort_code,
            hp.spell_code,
            hp.wbx_code,
            hp.is_stop,
            hp.note
        FROM HOS_PROJ hp left join hos_proj_type hpt 
        	ON 
        		hp.group_id=hpt.group_id and 
        		hp.hos_id = hpt.hos_id and 
        		hp.type_code = hpt.type_code 
        <where>
        	<if test="group_id != null and group_id != '' ">
		    	and hp.group_id = #{group_id}
		    </if>   
		    <if test="hos_id != null and hos_id != '' ">
		    	and hp.hos_id = #{hos_id}
		    </if>   
		    <if test="proj_id != null and proj_id != '' ">
		    	and hp.proj_id != #{proj_id}
		    </if>   
		     and (proj_code = #{proj_code} or proj_name = #{proj_name})
        </where> 
	</select>
	
	<select id="queryMaxProj_sort" parameterType="java.util.Map" resultType="com.chd.hrp.sys.entity.Proj" >
		
		select Max(sort_code) as sort_code
		
		from hos_proj
		
		<where>
			<if test="group_id != null and group_id !='' ">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id !='' ">
				and hos_id = #{hos_id}
			</if>
		</where>
	</select>
	
	<select id="queryProj_sort" parameterType="java.util.Map" resultType="com.chd.hrp.sys.entity.Proj" >
		
		select  sort_code
		
		from hos_proj
		
		<where>
			<if test="group_id != null and group_id !='' ">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id !='' ">
				and hos_id = #{hos_id}
			</if>
			<if test="proj_id != null and proj_id !='' ">
				and proj_id != #{proj_id}
			</if>
			<if test="sort_code != null and sort_code !='' ">
				and sort_code = #{sort_code}
			</if>
		</where>
	</select>
	<select id="queryProjByStop" parameterType="java.util.Map" resultMap="proj"  >
		
		select a.acc_year ,sum(a.end_os) from (
			select alc.acc_year,alc.subj_code,sum(alc.end_os) end_os from acc_leder_check alc 
			where alc.group_id  = #{group_id}
			 and alc.hos_id = #{hos_id}
			 and alc.acc_year = #{acc_year}
			 and alc.acc_month ='00'
			 and alc.check3_id  = #{proj_id}
			 and alc.check3_id is not null 
			 group by alc.acc_year,alc.subj_code
			 union all   
			 select avc.acc_year,avc.subj_code,case when subj.subj_dire =  0 then sum(avc.debit) - sum(avc.credit)
    											else  sum(avc.credit) -  sum(avc.debit) end  as end_os
    		 from acc_vouch_check avc 
    		 left join acc_subj subj on avc.group_id = subj.group_id
			  and avc.hos_id = subj.hos_id and avc.copy_code = subj.copy_code
			  and avc.acc_year = subj.acc_year and avc.subj_code = subj.subj_code
			 where avc.group_id  = #{group_id}
			 and avc.hos_id = #{hos_id}
			 and avc.acc_year = #{acc_year}
			 and avc.check3_id  = #{proj_id}
			 and avc.check3_id is not null
			 and avc.vouch_id is not null
			 group by avc.acc_year,avc.subj_code,subj.subj_dire
			  ) a  
			  group by a.acc_year
	</select>
</mapper>

