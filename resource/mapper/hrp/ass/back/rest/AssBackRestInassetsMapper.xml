<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.back.rest.AssBackRestInassetsMapper">
	
	<resultMap id="assBackRestInassets" type="com.chd.hrp.ass.entity.back.rest.AssBackRestInassets">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_back_no" column="ass_back_no"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="back_money" column="back_money"/>
	<result property="note" column="note"/> 
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="back_date" column="back_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	</resultMap>
		
	<resultMap id="assBackRestInassetsMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_back_no" column="ass_back_no"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="back_money" column="back_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="back_date" column="back_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="note_detail" column="note_detail"/>
	<result property="state_name" column="state_name"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="bus_type_name" column="bus_type_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="confirm_emp_name" column="confirm_emp_name"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="add_manage_depre" column="add_manage_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_BACK_REST_INASSETS (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		ass_back_no
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no
		,
		</if>
		<if test="back_money != null and back_money != ''">
		back_money
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		#{ass_back_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		#{bus_type_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		to_number(#{store_id})
		,
		</if>
		<if test="store_no != null and store_no != ''">
		to_number(#{store_no})
		,
		</if>
		<if test="back_money != null and back_money != ''">
		to_number(#{back_money})
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_BACK_REST_INASSETS (
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_back_no
		,
		bus_type_code
		,
		store_id
		,
		store_no
		,
		back_money
		,
		note
		,
		create_emp
		,
		create_date
		,
		state
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.ass_back_no,jdbcType=VARCHAR}
			,
			#{item.bus_type_code,jdbcType=VARCHAR}
			,
			#{item.store_id,jdbcType=INTEGER}
			,
			#{item.store_no,jdbcType=INTEGER}
			,
			#{item.back_money,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			#{item.create_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateBackMoney" parameterType="java.util.Map">
	
		UPDATE ass_back_rest_inassets 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="back_money != null and back_money != ''">
		back_money = #{back_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		AND ass_back_no = #{ass_back_no}
		</if>
		</where>  
	</update>
	
	<update id="updateBatchConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_back_rest_inassets 
			<trim prefix="SET"  suffixOverrides=","> 
			back_date = to_date(#{item.back_date},'YYYY-MM-DD')
			,
			confirm_emp = #{item.confirm_emp,jdbcType=INTEGER}
			,
			state = 2
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.ass_back_no != null and item.ass_back_no != ''">
			AND ass_back_no = #{item.ass_back_no}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_back_rest_inassets 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id = #{store_id,jdbcType=INTEGER}
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no = #{store_no,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="note == null or note == ''">
		note = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		AND ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_back_rest_inassets 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.bus_type_code != null and item.bus_type_code != ''">
			bus_type_code = #{item.bus_type_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.back_money != null and item.back_money != ''">
			back_money = #{item.back_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.ass_back_no != null and item.ass_back_no != ''">
			AND ass_back_no = #{item.ass_back_no,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_back_rest_inassets 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		AND ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_back_rest_inassets 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.ass_back_no != null and item.ass_back_no != ''">
				AND ass_back_no = #{item.ass_back_no,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assBackRestInassets" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_back_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.bus_type_code,
			abtd.bus_type_name,
			a.back_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.back_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '退货确认' else '' end state_name
		FROM ass_back_rest_inassets a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		AND a.ass_back_no = #{ass_back_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
		<if test="back_money != null and back_money != ''">
		AND a.back_money = #{back_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="back_date != null and back_date != ''">
		AND a.back_date = #{back_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="back_date_beg != null and back_date_beg != '' and back_date_end != null and back_date_end != ''">
		AND a.back_date between to_date(#{back_date_beg},'YYYY-MM-DD') and to_date(#{back_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		</where>   
		union all
		
		SELECT 
			  null group_id,
			  null hos_id,
		      null copy_code,
		      null ass_back_no,
		      null store_id,
		      null store_no,
		      null store_code,
		      null store_name,
		      null bus_type_code,
			  null bus_type_name,
		      sum(a.back_money) back_money,
		      '合计' note,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null back_date,
		      null confirm_emp,
		      null confirm_emp_name,
		      null state,
		      null state_name
		    FROM ass_back_rest_inassets a 
		    <where>                     
				<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code}
				</if>
				<if test="ass_back_no != null and ass_back_no != ''">
				AND a.ass_back_no = #{ass_back_no}
				</if>
				<if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id}
				</if>
				<if test="store_no != null and store_no != ''">
				AND a.store_no = #{store_no}
				</if>
				<if test="back_money != null and back_money != ''">
				AND a.back_money = #{back_money}
				</if>
				<if test="note != null and note != ''">
				AND a.note = #{note}
				</if>
				<if test="create_emp != null and create_emp != ''">
				AND a.create_emp = #{create_emp}
				</if>
				<if test="create_date != null and create_date != ''">
				AND a.create_date = #{create_date}
				</if>
				<if test="back_date != null and back_date != ''">
				AND a.back_date = #{back_date}
				</if>
				<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
				AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
				</if>
				<if test="back_date_beg != null and back_date_beg != '' and back_date_end != null and back_date_end != ''">
				AND a.back_date between to_date(#{back_date_beg},'YYYY-MM-DD') and to_date(#{back_date_end},'YYYY-MM-DD')
				</if>
				<if test="confirm_emp != null and confirm_emp != ''">
				AND a.confirm_emp = #{confirm_emp}
				</if>
				<if test="state != null and state != ''">
				AND a.state = #{state}
				</if>
			</where>   
		    ) t
		order by t.create_date desc
	</select>
	<select id="queryByCode" resultMap="assBackRestInassets"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_back_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.bus_type_code,
			abtd.bus_type_name,
			a.back_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.back_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '退货确认' else '' end state_name
		FROM ass_back_rest_inassets a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.ass_back_no = #{ass_back_no,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assBackRestInassets"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_back_no,
		bus_type_code,
		store_id,
		store_no,
		back_money,
		note,
		create_emp,
		create_date,
		back_date,
		confirm_emp,
		state
		FROM ASS_BACK_REST_INASSETS 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		AND ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="back_money != null and back_money != ''">
		AND back_money = #{back_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="back_date != null and back_date != ''">
		AND back_date = #{back_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by create_date desc
	</select>
	<select id="queryExists" resultMap="assBackRestInassets"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_back_no,
		bus_type_code,
		store_id,
		store_no,
		back_money,
		note,
		create_emp,
		create_date,
		back_date,
		confirm_emp,
		state
		FROM ASS_BACK_REST_INASSETS 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_back_no != null and ass_back_no != ''">
		AND ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="back_money != null and back_money != ''">
		AND back_money = #{back_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="back_date != null and back_date != ''">
		AND back_date = #{back_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by create_date desc
	</select>
	
	<select id="collectAssBackInassets" statementType="CALLABLE"
		parameterType="java.util.Map">
		<![CDATA[ {call PKG_ASS_APP.prc_CalcDepreSingle(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{ass_year,jdbcType=VARCHAR, mode=IN},
	        #{ass_month,jdbcType=VARCHAR, mode=IN},
	        #{ass_naturs,jdbcType=VARCHAR, mode=IN},
	        #{ass_card_no,jdbcType=VARCHAR, mode=IN},
	        'B',
	        #{ass_json_str,jdbcType=VARCHAR,mode=OUT},
	        #{ass_AppCode,jdbcType=INTEGER,mode=OUT},
	        #{ass_ErrTxt,jdbcType=VARCHAR,mode=OUT}
        )} 
		 ]]>
	</select>
	
	<!-- 主页面  其他无形资产  其他退货 主表数据查询  批量打印 -->
	<select id="queryAssBackInassetsPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.ass_back_no as id ,
			a.ass_back_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.bus_type_code,
			abtd.bus_type_name,
			to_char(a.back_money,'FM999,999,990.00') back_money,
			a.note,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.back_date,'yyyy-mm-dd') back_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '退货确认' else '' end state
		FROM ass_back_rest_Inassets a
		
		left join hos_store_dict b 
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.store_id = b.store_id
				and b.is_stop = 0
		left join ass_bus_type_dict abtd 
			on
				a.group_id = abtd.group_id
				and a.hos_id = abtd.hos_id
				and a.copy_code = abtd.copy_code
				and a.bus_type_code = abtd.bus_type_code
			
		left join sys_user su2 
			on
				a.group_id = su2.group_id
				and a.hos_id = su2.hos_id
				and a.create_emp = su2.user_id
		
		left join sys_user su3 
			on
				a.group_id = su3.group_id
				and a.hos_id = su3.hos_id
				and a.confirm_emp = su3.user_id
		
		where                    
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.ass_back_no in (${paraId})
		order by a.create_date desc 		
	</select>   
	
	<!-- 其他无形资产  其他退货 明细表数据查询  批量打印 -->
	<select id="queryAssBackInassetsPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT 
			a.ass_back_no as id ,
			a.ass_card_no,
			c.ass_id,
			c.ass_no,
			c.ass_code,
			c.ass_name,
			to_char(a.price,'FM999,999,990.00') price,
			<!-- a.now_depre,
			a.now_manage_depre, -->
			to_char(a.add_depre,'FM999,999,990.00') add_depre,
			to_char(a.add_manage_depre,'FM999,999,990.00') add_manage_depre,
			to_char(a.cur_money,'FM999,999,990.00') cur_money,
			to_char(a.fore_money,'FM999,999,990.00') fore_money,
			a.note note_detail
		FROM ass_back_rest_detail_Inassets a
		left join ass_card_Inassets b 
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.ass_card_no = b.ass_card_no
		
		left join ass_no_dict c 
			on
				b.group_id = c.group_id
				and b.hos_id = c.hos_id
				and b.copy_code = c.copy_code 
				and b.ass_id = c.ass_id
				and c.is_stop = 0
		
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND a.ass_back_no in (${paraId})
			</if>
			<if test="ass_back_no != null and ass_back_no != ''">
			AND a.ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
			</if>
		order by a.ass_card_no desc 	
	</select>
	
	<!-- 修改页面  其他无形资产  其他退货 主表数据查询  批量打印 -->
	<select id="queryAssBackInassetsPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.ass_back_no as id ,
			a.ass_back_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.bus_type_code,
			abtd.bus_type_name,
			to_char(a.back_money,'FM999,999,990.00') back_money,
			a.note,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.back_date,'yyyy-mm-dd') back_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '退货确认' else '' end state
		FROM ass_back_rest_Inassets a
		
		left join hos_store_dict b 
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.store_id = b.store_id
				and b.is_stop = 0
		left join ass_bus_type_dict abtd 
			on
				a.group_id = abtd.group_id
				and a.hos_id = abtd.hos_id
				and a.copy_code = abtd.copy_code
				and a.bus_type_code = abtd.bus_type_code
			
		left join sys_user su2 
			on
				a.group_id = su2.group_id
				and a.hos_id = su2.hos_id
				and a.create_emp = su2.user_id
		
		left join sys_user su3 
			on
				a.group_id = su3.group_id
				and a.hos_id = su3.hos_id
				and a.confirm_emp = su3.user_id
		
		where                    
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
			order by a.create_date desc 	
	</select>   
	
	<!-- 其他无形资产 其他退货 退货单 状态查询 （打印校验数据专用） -->
	<select id="queryAssBackRestInassetsState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT ass_back_no  FROM ass_back_rest_Inassets 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND ass_back_no in  (${paraId})
			</if>
			<if test="ass_back_no != null and ass_back_no != ''">
			AND ass_back_no = #{ass_back_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	<!-- 明细查询 -->
	<select id="queryDetails"  parameterType="java.util.Map" resultMap="assBackRestInassetsMap">
	
		with detail_tmp as
					 (select a.group_id,
					         a.hos_id,
					         a.copy_code,
					         a.ass_back_no,
					         a.store_id,
					         a.store_no,
					         d.store_code,
					         d.store_name,
					         a.bus_type_code,
					         r.bus_type_name,
					         a.back_money,
					         a.note,
					         a.create_emp,
					         su2.user_name create_emp_name,
					         a.create_date,
					         a.back_date,
					         a.confirm_emp,
					         su3.user_name confirm_emp_name,
					         a.state,
					         case
					           when a.state = 0 then
					            '新建'
					           when a.state = 1 then
					            '审核'
					           when a.state = 2 then
					            '退货确认'
					           else
					            ''
					         end state_name,
					         b.ass_card_no,
					         f.ass_id,
					         f.ass_no,
					         e.ass_code,
					         e.ass_name,
					         b.price,
					         
					         b.add_depre,
					         b.add_manage_depre,
					         b.cur_money,
					         b.fore_money,
					         b.note             note_detail
					    from ASS_BACK_REST_INASSETS a
					    left join ASS_BACK_REST_DETAIL_INASSETS b
					      on a.group_id = b.group_id
					     and a.hos_id = b.hos_id
					     and a.copy_code = b.copy_code
					     and a.ass_back_no = b.ass_back_no
					    left join ass_card_INASSETS f
					      on b.group_id = f.group_id
					     and b.hos_id = f.hos_id
					     and b.copy_code = f.copy_code
					     and b.ass_card_no = f.ass_card_no
					    left join ass_no_dict e
					      on f.group_id = e.group_id
					     and f.hos_id = e.hos_id
					     and f.copy_code = e.copy_code
					     and f.ass_id = e.ass_id
					     and e.is_stop = 0
					    left join hos_store_dict d
					      on a.group_id = d.group_id
					     and a.hos_id = d.hos_id
					     and a.store_id = d.store_id
					     and d.is_stop = 0
					  
					    left join ass_bus_type_dict r
					      on a.group_id = r.group_id
					     and a.hos_id = r.hos_id
					     and a.copy_code = r.copy_code
					     and a.bus_type_code = r.bus_type_code
					    left join sys_user su2
					      on a.group_id = su2.group_id
					     and a.hos_id = su2.hos_id
					     and a.create_emp = su2.user_id
					  
					    left join sys_user su3
					      on a.group_id = su3.group_id
					     and a.hos_id = su3.hos_id
					     and a.confirm_emp = su3.user_id
					  		<where>                     
									<if test="group_id != null and group_id != ''">
									AND a.group_id = #{group_id}
									</if>
									<if test="hos_id != null and hos_id != ''">
									AND a.hos_id = #{hos_id}
									</if>
									<if test="copy_code != null and copy_code != ''">
									AND a.copy_code = #{copy_code}
									</if>
									<if test="ass_back_no != null and ass_back_no != ''">
									AND a.ass_back_no = #{ass_back_no}
									</if>
									<if test="store_id != null and store_id != ''">
									AND a.store_id = #{store_id}
									</if>
									<if test="store_no != null and store_no != ''">
									AND a.store_no = #{store_no}
									</if>
									<if test="back_money != null and back_money != ''">
									AND a.back_money = #{back_money}
									</if>
									<if test="note != null and note != ''">
									AND a.note = #{note}
									</if>
									<if test="create_emp != null and create_emp != ''">
									AND a.create_emp = #{create_emp}
									</if>
									<if test="create_date != null and create_date != ''">
									AND a.create_date = #{create_date}
									</if>
									<if test="back_date != null and back_date != ''">
									AND a.back_date = #{back_date}
									</if>
									<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
									AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
									</if>
									<if test="back_date_beg != null and back_date_beg != '' and back_date_end != null and back_date_end != ''">
									AND a.back_date between to_date(#{back_date_beg},'YYYY-MM-DD') and to_date(#{back_date_end},'YYYY-MM-DD')
									</if>
									<if test="confirm_emp != null and confirm_emp != ''">
									AND a.confirm_emp = #{confirm_emp}
									</if>
									<if test="state != null and state != ''">
									AND a.state = #{state}
									</if>
									</where>   
					  ),
					sum_tmp as
					 (select null group_id,
					         null hos_id,
					         null copy_code,
					         null ass_back_no,
					         null store_id,
					         null store_no,
					         null store_code,
					         null store_name,
					         null bus_type_code,
					         null bus_type_name,
					          sum(back_money) back_money,
					         '合计' note,
					         null create_emp,
					         null create_emp_name,
					         null create_date,
					         null back_date,
					         null confirm_emp,
					         null confirm_emp_name,
					         null state,
					         null state_name,
					         null ass_card_no,
					         null ass_id,
					         null ass_no,
					         null ass_code,
					         null ass_name,
					         sum(price) price,
					         
					         sum(add_depre) add_depre,
					         sum(add_manage_depre) add_manage_depre,
					         sum(cur_money) cur_money,
					         sum(fore_money) fore_money,
					         null note_detail
					    from detail_tmp)
					
					select group_id,
					       hos_id,
					       copy_code,
					       ass_back_no,
					       store_id,
					       store_no,
					       store_code,
					       store_name,
					       bus_type_code,
					       bus_type_name,
					       back_money,
					       note,
					       create_emp,
					       create_emp_name,
					       create_date,
					       back_date,
					       confirm_emp,
					       confirm_emp_name,
					       state,
					       state_name,
					       ass_card_no,
					       ass_id,
					       ass_no,
					       ass_code,
					       ass_name,
					       price,
					       
					       add_depre,
					       add_manage_depre,
					       cur_money,
					       fore_money,
					       note_detail
					  from detail_tmp
					union all
					select group_id,
					       hos_id,
					       copy_code,
					       ass_back_no,
					       store_id,
					       store_no,
					       store_code,
					       store_name,
					       bus_type_code,
					       bus_type_name,
					       back_money,
					       note,
					       create_emp,
					       create_emp_name,
					       create_date,
					       back_date,
					       confirm_emp,
					       confirm_emp_name,
					       state,
					       state_name,
					       ass_card_no,
					       ass_id,
					       ass_no,
					       ass_code,
					       ass_name,
					       price,
					       
					       add_depre,
					       add_manage_depre,
					       cur_money,
					       fore_money,
					       note_detail
					  from sum_tmp
					
					 order by create_date desc
		
	</select>
</mapper>

