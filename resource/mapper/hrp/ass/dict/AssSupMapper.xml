<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssSupMapper">

	<resultMap id="sup" type="com.chd.hrp.ass.entity.dict.AssSup">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="sup_id" column="sup_id" />
		<result property="sup_no" column="sup_no" />
		<result property="sup_code" column="sup_code" />
		<result property="hos_hos_id" column="hos_hos_id" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="sup_name" column="sup_name" />
		<result property="sort_code" column="sort_code" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="is_stop" column="is_stop" />
		<result property="is_mat" column="is_mat" />
		<result property="is_ass" column="is_ass" />
		<result property="is_med" column="is_med" />
	</resultMap>

	<insert id="addSup" useGeneratedKeys="true">

		INSERT INTO HOS_SUP (
		group_id
		,
		hos_id
		,
		sup_id
		,
		sup_code
		,
		type_code
		,
		sup_name
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
   			is_mat,
   			is_ass,
   			is_med,
		note
		) VALUES (
		#{group_id} ,
		#{hos_id} ,
		HOS_SUP_SEQ.nextval,
		#{sup_code} ,
		#{type_code} ,
		#{sup_name,jdbcType=NVARCHAR} ,
		#{sort_code} ,
		#{spell_code} ,
		#{wbx_code} ,
		#{is_stop} ,
   			#{is_mat} ,
   			#{is_ass} ,
   			#{is_med} ,
		#{note,jdbcType=VARCHAR}
		)

	</insert>
	<insert id="addBatchSup" parameterType="java.util.List">

		INSERT INTO HOS_SUP (
		group_id
		,
		hos_id
		,
		sup_id
		,
		sup_code
		,
		type_code
		,
		sup_name
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		note

		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			HOS_SUP_SEQ.nextval,
			#{item.sup_code} ,
			#{item.type_code} ,
			#{item.sup_name} ,
			#{item.sort_code} ,
			#{item.spell_code} ,
			#{item.wbx_code} ,
			#{item.is_stop} ,
			#{item.note}
			from dual
		</foreach>

	</insert>

	<update id="updateSup" parameterType="java.util.Map">

		UPDATE hos_sup SET
		sup_code = #{sup_code}
		,
		sup_name = #{sup_name}
		,
		type_code = #{type_code}
		,
		sort_code = #{sort_code}
		,
		note = #{note}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		,
		is_stop = #{is_stop}
		,
		is_mat = #{is_mat}
		     ,
	 	 is_ass = #{is_ass}
		    ,
	     is_med = #{is_med}
		    
		
		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		sup_id = #{sup_id}

	</update>
	
	<update id="updateSysUserSup" parameterType="java.util.Map">

		UPDATE SYS_SUP_USER SET
		
		sup_no = #{sup_no}
		,
		user_code = #{sup_code}
		,
		user_name = #{sup_name}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		 
		
		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		sup_id = #{sup_id}

	</update>
	
	<select id="querySupDict" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select sup_no from
		hos_sup_dict
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id =#{hos_id,jdbcType=INTEGER}
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		and is_stop=0
	</select>
	
	<update id="updateSupByCode" parameterType="java.util.Map">

		UPDATE hos_sup SET

		sup_code = #{sup_code}

		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		sup_id = #{sup_id}


	</update>
	
	<update id="updateSupByName" parameterType="java.util.Map">

		UPDATE hos_sup SET

		sup_name = #{sup_name}

		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		sup_id = #{sup_id}


	</update>
	
	<update id="updateBatchSup" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE hos_sup SET
			hos_hos_id = #{hos_hos_id}
			,
			type_code = #{type_code}
			,
			sup_name = #{sup_name}
			,
			sort_code =
			#{sort_code}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
			,
			is_stop = #{is_stop}
			,
			note = #{note}

			WHERE
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			sup_id = #{item.sup_id}
			and
			sup_code =
			#{item.sup_code}

		</foreach>
	</update>

	<delete id="deleteSup" parameterType="java.util.Map">

		DELETE FROM hos_sup WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		sup_id = #{sup_id} and
		sup_code = #{sup_code}

	</delete>
	<delete id="deleteBatchSup" parameterType="java.util.List">
		DELETE FROM hos_sup WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			and
			hos_id =
			#{item.hos_id}
			and
			sup_id = #{item.sup_id}
			<!-- and
			sup_code =
			#{item.sup_code} -->

		</foreach>


	</delete>

	<select id="querySupByCode" resultType="com.chd.hrp.ass.entity.dict.AssSup"
		parameterType="string">

		select
		hs.group_id,hs.hos_id,hs.sup_id,hs.sup_code,hs.sup_name,hs.spell_code,hs.wbx_code,hs.note,hs.sort_code,hs.type_code,
		hst.type_name,hs.is_mat,hs.is_ass,hs.is_med
		from hos_sup hs left join HOS_SUP_TYPE hst 
		on
		hs.type_code = hst.type_code
		AND hs.group_id = hst.group_id
		AND hs.hos_id = hst.hos_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND hs.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hs.hos_id = #{hos_id}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND hs.sup_id = #{sup_id}
			</if>
			<if test="sup_code != null and sup_code != ''">
				AND hs.sup_code = #{sup_code}
			</if>
		</where> 
		

	</select>

	<select id="querySupCurrentSequence" resultType="java.lang.Long" 
	useCache="false">
		select HOS_SUP_SEQ.currval sup_id from dual
	</select>



   	<select id="querySupMaxTypeCode" resultType="com.chd.hrp.ass.entity.dict.AssSup"  parameterType="java.util.Map">
	
		select distinct max(sup_code) as sup_code from hos_sup

       where type_code=#{type_code}
       <if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="typepy != null and typepy != '' ">
				AND sup_code like '${typepy}%'
			</if>
	</select>
	
	 <select id="querySupMaxTypePy" resultType="com.chd.hrp.ass.entity.dict.AssSup"  parameterType="java.util.Map">
	
		select distinct spell_code as sup_code from HOS_SUP_TYPE

       where type_code=#{type_code}
       and is_stop=0
       <if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
	</select>


	<select id="querySup" parameterType="java.util.Map" resultMap="sup">

		SELECT
		hs.group_id,
		hs.hos_id,
		hs.sup_id,
		hs.sup_code,
		hs.type_code,
		hst.type_name,
		hs.sup_name,
		hs.sort_code,
		hs.spell_code,
		hs.wbx_code,
		hs.is_stop,
		hs.note
		FROM HOS_SUP hs left join HOS_SUP_TYPE hst 
			ON
			hs.group_id = hst.group_id
			and hs.hos_id = hst.hos_id
			and hs.type_code = hst.type_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND hs.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hs.hos_id = #{hos_id}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND hs.sup_id = #{sup_id}
			</if>
			<if test="sup_code != null and sup_code != ''">
				AND hs.sup_code like '${sup_code}%'
			</if>
			<if test="hos_hos_id != null and hos_hos_id != ''">
				AND hs.hos_hos_id = #{hos_hos_id}
			</if>
			<if test="type_code != null and type_code != ''">
				AND hs.type_code = #{type_code}
			</if>
			<if test="sup_name != null and sup_name != ''">
				AND hs.sup_name like '%${sup_name}%'
			</if>
			<if test="sort_code != null and sort_code != ''">
				AND hs.sort_code = #{sort_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND hs.spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND hs.wbx_code = #{wbx_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hs.is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND hs.note = #{note}
			</if>
		</where>
		order by hs.sup_code asc
	</select>
	<select id="querySupById" resultType="com.chd.hrp.ass.entity.dict.AssSup"
		parameterType="string">

		select
		hs.group_id,hs.hos_id,hs.sup_id,hs.sup_code,hs.sup_name,hs.note,hs.sort_code,hs.type_code,
		hst.type_name
		from hos_sup hs left join HOS_SUP_TYPE hst 
			ON	
				hs.type_code = hst.type_code
				AND hs.group_id = hst.group_id
				AND hs.hos_id = hst.hos_id
		<where>
			<if test="group_id != null and group_id != '' ">
			 and hs.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			 and hs.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id != '' ">
			 and hs.sup_id != #{sup_id,jdbcType=INTEGER}
			</if>
			and (hs.sup_code = #{sup_code,jdbcType=VARCHAR}  or hs.sup_name = #{sup_name,jdbcType=VARCHAR})
		
		</where> 
	</select>
	
	<select id="queryMaxSup_sort" parameterType="java.util.Map" resultType="com.chd.hrp.ass.entity.dict.AssSup">
		select Max(sort_code)  as sort_code
		
		from hos_sup
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
		</where>
	</select>
	<select id="querySup_sort" parameterType="java.util.Map" resultType="com.chd.hrp.ass.entity.dict.AssSup">
		select Max(sort_code)  as sort_code
		
		from hos_sup
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="sup_id != null and sup_id != ''">
				and sup_id != #{sup_id}
			</if>
			<if test="sort_code != null and sort_code != ''">
				and sort_code = #{sort_code}
			</if>
		</where>
	</select>
</mapper>

