<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssDictMapper">
	 
	<resultMap id="assDict" type="com.chd.hrp.ass.entity.dict.AssDict">  
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="ass_type_id" column="ass_type_id"/>
	<result property="ass_type_name" column="ass_type_name"/>
	<result property="acc_type_code" column="acc_type_code"/>
	<result property="acc_type_name" column="acc_type_name"/>
	<result property="ass_unit" column="ass_unit"/>
	<result property="ass_unit_name" column="ass_unit_name"/>
	<result property="is_measure" column="is_measure"/>
	<result property="is_depre" column="is_depre"/>
	<result property="ass_depre_code" column="ass_depre_code"/>
	<result property="ass_depre_name" column="ass_depre_name"/>
	<result property="depre_years" column="depre_years"/>
	<result property="is_stop" column="is_stop"/>
	<result property="ass_spec" column="ass_spec"/>
	<result property="ass_model" column="ass_model"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_no" column="fac_no"/>
	<result property="fac_id_name" column="fac_id_name"/>
	<result property="fac_no_name" column="fac_no_name"/>
	<result property="fac_name" column="fac_name"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_name" column="ven_name"/>
	<result property="ven_id_name" column="ven_id_name"/>
	<result property="ven_no_name" column="ven_no_name"/>
	<result property="usage_code" column="usage_code"/>
	<result property="usage_name" column="equi_usage_name"/>
	<result property="gb_code" column="gb_code"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_ins" column="is_ins"/>
	<result property="is_accept" column="is_accept"/>
	<result property="is_check" column="is_check"/>
	<result property="ass_brand" column="ass_brand"/>
	<result property="is_bar" column="is_bar"/>
	<result property="note" column="note"/>
	<result property="bar_type" column="bar_type"/>
	<result property="is_manage_depre" column="is_manage_depre"/>
	<result property="manage_depr_method" column="manage_depr_method"/>
	<result property="manage_depre_amount" column="manage_depre_amount"/>
	<result property="manage_depr_method_name" column="manage_depr_method_name"/>
	<result property="price" column="price"/>
	<result property="is_fae" column="is_fae" />
	<result property="common_name" column="common_name" />
	<result property="type_code" column="type_code" />
	</resultMap>
	
	<resultMap id="assDictMap" type="map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>  
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="ass_type_id" column="ass_type_id"/>
	<result property="ass_type_name" column="ass_type_name"/>
	<result property="acc_type_code" column="acc_type_code"/>
	<result property="acc_type_name" column="acc_type_name"/>
	<result property="ass_unit" column="ass_unit"/>
	<result property="ass_unit_name" column="ass_unit_name"/>
	<result property="is_measure" column="is_measure"/>
	<result property="is_depre" column="is_depre"/>
	<result property="ass_depre_code" column="ass_depre_code"/>
	<result property="ass_depre_name" column="ass_depre_name"/>
	<result property="depre_years" column="depre_years"/>
	<result property="is_stop" column="is_stop"/>
	<result property="ass_spec" column="ass_spec"/>
	<result property="ass_model" column="ass_model"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_no" column="fac_no"/>
	<result property="fac_id_name" column="fac_id_name"/>
	<result property="fac_no_name" column="fac_no_name"/>
	<result property="fac_name" column="fac_name"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_name" column="ven_name"/>
	<result property="ven_id_name" column="ven_id_name"/>
	<result property="ven_no_name" column="ven_no_name"/>
	<result property="usage_code" column="usage_code"/>
	<result property="usage_name" column="equi_usage_name"/>
	<result property="gb_code" column="gb_code"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_ins" column="is_ins"/>
	<result property="is_accept" column="is_accept"/>
	<result property="is_check" column="is_check"/>
	<result property="ass_brand" column="ass_brand"/>
	<result property="is_bar" column="is_bar"/>
	<result property="note" column="note"/>
	<result property="bar_type" column="bar_type"/>
	<result property="is_manage_depre" column="is_manage_depre"/>
	<result property="manage_depr_method" column="manage_depr_method"/>
	<result property="manage_depre_amount" column="manage_depre_amount"/>
	<result property="manage_depr_method_name" column="manage_depr_method_name"/>
	<result property="price" column="price"/>
	<result property="is_fae" column="is_fae" />
	<result property="common_name" column="common_name" />
	<result property="type_code" column="type_code" />
	</resultMap>
	
	<resultMap id="by_tree" type="java.util.Map">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="pId" column="pId" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="is_last" column="is_last" />
		<result property="ass_type_id" column="ass_type_id" />
		<result property="manage_depre_amount" column="manage_depre_amount" />
	</resultMap>
	<insert id="addAssDict" useGeneratedKeys="true" >
		<selectKey keyProperty="ass_id" resultType="java.lang.Long" order="BEFORE">
	    	select ASS_DICT_SEQ.nextval from dual
	  	</selectKey>
		INSERT INTO ASS_DICT (
				group_id
				,
				hos_id
				,
				copy_code
				,
				ass_id
				,
				ass_code
				,
				ass_name
				,
				ass_type_id
				,
				ass_unit
				,
				is_measure
				,
				is_depre
				,
				ass_depre_code
				,
				depre_years
				,
				is_stop
				,
				ass_spec
				,
				ass_model
				,
				fac_id
				,
				fac_no
				,
				ven_id
				,
				ven_no
				,
				usage_code
				,
				gb_code
				,
				spell_code
				,
				wbx_code
				,
				is_ins
				,
				is_accept
				,
				is_check
				,
				ass_brand
				,         
				is_bar 
				,            
				bar_type           
				,
				is_manage_depre
				,    
				manage_depr_method 
				,
				manage_depre_amount,
				note,
				reg_no
				,
				price
				,
				measure_type
				,
				is_s_measure
				,
				measure_king_code
				,
				is_fae
				,
				common_name,
				type_code
		) VALUES (
			#{group_id,jdbcType=INTEGER}		,
			#{hos_id,jdbcType=INTEGER}		,
			#{copy_code,jdbcType=VARCHAR}		,
			#{ass_id,jdbcType=INTEGER},
			#{ass_code,jdbcType=VARCHAR}		,
			#{ass_name,jdbcType=VARCHAR}		,
			#{ass_type_id,jdbcType=INTEGER}		,
			#{ass_unit,jdbcType=VARCHAR}		,
			#{is_measure,jdbcType=INTEGER}		,
			#{is_depre,jdbcType=INTEGER}		,
			#{ass_depre_code,jdbcType=VARCHAR}		,
			#{depre_years,jdbcType=INTEGER}		,
			#{is_stop,jdbcType=INTEGER}		,
			#{ass_spec,jdbcType=VARCHAR}		,
			#{ass_model,jdbcType=VARCHAR}		,
			#{fac_id,jdbcType=INTEGER}		,
			#{fac_no,jdbcType=VARCHAR}		,
			#{ven_id,jdbcType=INTEGER}		,
			#{ven_no,jdbcType=VARCHAR}		,
			#{usage_code,jdbcType=VARCHAR}		,
			#{gb_code,jdbcType=VARCHAR}		,
			#{spell_code,jdbcType=VARCHAR}		,
			#{wbx_code,jdbcType=VARCHAR}	,
			#{is_ins,jdbcType=INTEGER},
			#{is_accept,jdbcType=INTEGER},
			#{is_check,jdbcType=INTEGER},
			#{ass_brand,jdbcType=INTEGER}, 
			#{is_bar,jdbcType=INTEGER}, 
			#{bar_type,jdbcType=VARCHAR},         
			#{is_manage_depre,jdbcType=INTEGER},    
			#{manage_depr_method,jdbcType=VARCHAR}, 
			#{manage_depre_amount,jdbcType=INTEGER},
			#{note,jdbcType=INTEGER},
			#{reg_no,jdbcType=VARCHAR},
			#{price,jdbcType=INTEGER},
			#{measure_type,jdbcType=INTEGER},
			#{is_s_measure,jdbcType=INTEGER},
			#{measure_king_code,jdbcType=VARCHAR},
			#{is_fae,jdbcType=INTEGER},
			#{common_name,jdbcType=VARCHAR},
			#{type_code,jdbcType=VARCHAR}
		)
	
	</insert>
	<insert id="addBatchAssDict" parameterType="java.util.List" >
	
		INSERT INTO ASS_DICT (
		ass_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_code
		,
		ass_name
		,
		ass_type_id
		,
		ass_unit
		,
		is_measure
		,
		is_depre
		,
		ass_depre_code
		,
		depre_years
		,
		is_stop
		,
		ass_spec
		,
		ass_model
		,
		fac_id
		,
		fac_no
		,
		ven_id
		,
		ven_no
		,
		usage_code
		,
		gb_code
		,
		spell_code
		,
		wbx_code
		,
		reg_no
		,
		price
		,
		measure_type
		,
		is_s_measure
		,
		measure_king_code
		,
		is_fae
		,
		common_name,
		type_code
		) select ASS_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}			,
				#{item.hos_id,jdbcType=INTEGER}			,
				#{item.copy_code,jdbcType=VARCHAR}			,
				#{item.ass_code,jdbcType=VARCHAR}			,
				#{item.ass_name,jdbcType=VARCHAR}			,
				#{item.ass_type_id,jdbcType=INTEGER}			,
				#{item.ass_unit,jdbcType=VARCHAR}			,
				#{item.is_measure,jdbcType=INTEGER}			,
				#{item.is_depre,jdbcType=INTEGER}			,
				#{item.ass_depre_code,jdbcType=VARCHAR}			,
				#{item.depre_years,jdbcType=INTEGER}			,
				#{item.is_stop,jdbcType=INTEGER}			,
				#{item.ass_spec,jdbcType=VARCHAR}			,
				#{item.ass_model,jdbcType=VARCHAR}			,
				#{item.fac_id,jdbcType=INTEGER}			,
				#{item.fac_no,jdbcType=INTEGER}			,
				#{item.ven_id,jdbcType=INTEGER}			,
				#{item.ven_no,jdbcType=INTEGER}			,
				#{item.usage_code,jdbcType=VARCHAR}			,
				#{item.gb_code,jdbcType=VARCHAR}			,
				#{item.spell_code,jdbcType=VARCHAR}			,
				#{item.wbx_code,jdbcType=VARCHAR}			,
				#{item.reg_no,jdbcType=VARCHAR},
				#{item.price,jdbcType=INTEGER},
				#{item.measure_type,jdbcType=INTEGER},
				#{item.is_s_measure,jdbcType=INTEGER},
				#{item.measure_king_code,jdbcType=VARCHAR},
				#{item.is_fae},
				#{item.common_name,jdbcType=VARCHAR},
				#{item.type_code,jdbcType=VARCHAR}
			from dual
		</foreach>
		)t
		
	</insert>
	
	<insert id="batchImportAssDict" parameterType="java.util.List">
		INSERT INTO ASS_DICT (
		ass_id,group_id,hos_id,copy_code,ass_code,ass_name,ass_type_id,ass_unit,is_measure,is_depre,
		ass_depre_code,depre_years,is_stop,ass_spec,ass_model,fac_id,fac_no,ven_id,ven_no,usage_code,
		gb_code,spell_code,wbx_code,is_ins,is_accept,is_check,ass_brand,is_bar,bar_type,is_manage_depre,    
		manage_depr_method,manage_depre_amount,reg_no,price,measure_type,is_s_measure,measure_king_code,is_fae,
		type_code
		) select ASS_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id},
				#{item.hos_id},
				#{item.copy_code},
				#{item.ass_code},
				#{item.ass_name},
				#{item.ass_type_id},
				#{item.ass_unit},
				#{item.is_measure},
				#{item.is_depre},
				#{item.ass_depre_code},
				#{item.depre_years},
				#{item.is_stop},
				#{item.ass_spec},
				#{item.ass_model},
				#{item.fac_id},
				#{item.fac_no},
				#{item.ven_id},
				#{item.ven_no},
				#{item.usage_code},
				#{item.gb_code},
				#{item.spell_code},
				#{item.wbx_code},
				#{item.is_ins},
				#{item.is_accept},
				#{item.is_check},
				#{item.ass_brand}, 
				#{item.is_bar}, 
				#{item.bar_type},         
				#{item.is_manage_depre},    
				#{item.manage_depr_method}, 
				#{item.manage_depre_amount},
				#{item.reg_no},
				#{item.price},
				#{item.measure_type},
				#{item.is_s_measure},
				#{item.measure_king_code},
				#{item.is_fae},
				#{item.type_code}
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateAssDict" parameterType="java.util.Map">
	
		UPDATE ass_dict SET
				ass_code = #{ass_code,jdbcType=VARCHAR}
				,
				ass_name = #{ass_name,jdbcType=VARCHAR}
				,
				ass_type_id = #{ass_type_id,jdbcType=INTEGER}
				,
				ass_unit = #{ass_unit,jdbcType=VARCHAR}
				,
				is_measure = #{is_measure,jdbcType=INTEGER}
				,
				is_depre = #{is_depre,jdbcType=INTEGER}
				,
				ass_depre_code = #{ass_depre_code,jdbcType=VARCHAR}
				,
				depre_years = #{depre_years,jdbcType=INTEGER}
				, 
				is_stop = #{is_stop,jdbcType=INTEGER}
				,
		      	ass_spec = #{ass_spec,jdbcType=VARCHAR}
				,
				ass_model = #{ass_model,jdbcType=VARCHAR}
				,
				fac_id = #{fac_id,jdbcType=VARCHAR}
				,
				 fac_no = #{fac_no,jdbcType=VARCHAR}
				, 
				ven_id = #{ven_id,jdbcType=VARCHAR}
				,
				 ven_no = #{ven_no,jdbcType=VARCHAR}
				, 
				usage_code = #{usage_code,jdbcType=VARCHAR}
				,
				 gb_code = #{gb_code,jdbcType=VARCHAR}
				, 
				spell_code = #{spell_code,jdbcType=VARCHAR}
				,
				wbx_code = #{wbx_code,jdbcType=VARCHAR}
				,
				is_ins = #{is_ins,jdbcType=INTEGER}
				,
				is_accept = #{is_accept,jdbcType=INTEGER}
				,
				is_check = #{is_check,jdbcType=INTEGER}
				,
				ass_brand = #{ass_brand,jdbcType=VARCHAR}
				,         
				is_bar = #{is_bar,jdbcType=INTEGER}
				,            
				bar_type = #{bar_type,jdbcType=INTEGER}           
				,
				is_manage_depre = #{is_manage_depre,jdbcType=INTEGER}        
				,    
				manage_depr_method = #{manage_depr_method,jdbcType=VARCHAR}
				,
				manage_depre_amount = #{manage_depre_amount,jdbcType=INTEGER}
				,
				reg_no = #{reg_no,jdbcType=INTEGER}
				,
				price = #{price,jdbcType=VARCHAR}
				,
				measure_type = #{measure_type,jdbcType=VARCHAR} 
				,
				is_s_measure = #{is_s_measure,jdbcType=INTEGER}
				,
				measure_king_code = #{measure_king_code}
				,
				is_fae = #{is_fae}
				,
				common_name = #{common_name},
				type_code = #{type_code}
				WHERE 
					group_id = #{group_id,jdbcType=INTEGER}
					 and 
					hos_id = #{hos_id,jdbcType=INTEGER}
					 and 
					copy_code = #{copy_code,jdbcType=VARCHAR}
					 and 
					ass_id = #{ass_id,jdbcType=INTEGER}
	
	</update>
	
	<update id="updateSupByCode" parameterType="java.util.Map">

		UPDATE ass_dict SET

		ass_code = #{ass_code}

		WHERE
	group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		copy_code = #{copy_code}
		 and 
		ass_id = #{ass_id}


	</update>
	
	<update id="updateSupByName" parameterType="java.util.Map">

		UPDATE ass_dict SET

		ass_name = #{ass_name}

		WHERE
		group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		copy_code = #{copy_code}
		 and 
		ass_id = #{ass_id}

	</update>
	
	
	
	
	<update id="updateBatchAssDict" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE ass_dict 
			<trim prefix="SET" suffixOverrides=",">
			<if test="item.ass_code != '' and item.ass_code != null">
			ass_code = #{item.ass_code}
			,
			</if>
			<if test="item.ass_name != '' and item.ass_name != null">
			ass_name = #{item.ass_name}
			,
			</if>
			<if test="item.ass_type_id != '' and item.ass_type_id != null">
			ass_type_id = #{item.ass_type_id}
			,
			</if>
			<if test="item.ass_unit != '' and item.ass_unit != null">
			ass_unit = #{item.ass_unit}
			,
			</if>
			<if test="item.is_measure != '' and item.is_measure != null">
			is_measure = #{item.is_measure}
			,
			</if>
			<if test="item.is_depre != '' and item.is_depre != null">
			is_depre = #{item.is_depre}
			,
			</if>
			<if test="item.ass_depre_code != '' and item.ass_depre_code != null">
			ass_depre_code = #{item.ass_depre_code}
			,
			</if>
			<if test="item.depre_years != '' and item.depre_years != null">
			depre_years = #{item.depre_years}
			,
			</if>
			<if test="item.measure_type != '' and item.measure_type != null">
			measure_type = #{item.measure_type}
			,
			</if>
			<if test="item.is_s_measure != '' and item.is_s_measure != null">
			is_s_measure = #{item.is_s_measure}
			,
			</if>
			<if test="item.measure_king_code != '' and item.measure_king_code != null">
			measure_king_code = #{item.measure_king_code}
			,
			</if>
			<if test="item.is_fae != '' and item.is_fae != null">
			is_fae = #{item.is_fae}
			,
			</if>
			<if test="item.common_name != '' and item.common_name != null">
			common_name = #{item.common_name}
			,
			</if>
			<if test="item.type_code != '' and item.type_code != null">
			type_code = #{item.type_code}
			,
			</if>
			</trim>
			WHERE 
			group_id = #{item.group_id}
			 and 
			hos_id = #{item.hos_id}
			 and 
			copy_code = #{item.copy_code}
			 and 
			ass_id = #{item.ass_id}
			
		</foreach>
	</update>
	
	<delete id="deleteAssDict" parameterType="java.util.Map">
	
		DELETE FROM ass_dict WHERE
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		ass_id = #{ass_id} 
	
	</delete>
	<delete id="deleteBatchAssDict" parameterType="java.util.List">
		DELETE FROM ass_dict WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				 and 
				hos_id = #{item.hos_id}
				 and 
				copy_code = #{item.copy_code}
				 and 
				ass_id = #{item.ass_id}
				
			</foreach>
	
	</delete>
	<select id="queryAssDict" parameterType="java.util.Map" resultMap="assDict" >
		select * from (select *
    		from (select t.group_id,
               t.hos_id,
               t.copy_code,
               null as ass_id,
               t.ass_type_code as ass_code,
               t.ass_type_name as ass_name,
               t.ass_type_id,
               null as ass_type_code,
               null as ass_type_name,
               t.acc_type_code,
               null as acc_type_name,
               null as ass_unit,
               null as ass_unit_name,
               null as is_measure,
               null as is_depre,
               null as ass_depre_code,
               null as ass_depre_name,
               null as depre_years,
               t.is_stop,
               null as ass_spec,
               null as ass_model,
               null as fac_id,
               null as fac_no,
               null as fac_code,
               null as fac_name,
               null as ven_id,
               null as ven_no,
               null as ven_code,
               null as sup_name,
               null as usage_code,
               null as equi_usage_name,
               null as gb_code,
               null as spell_code,
               null as wbx_code,
               nvl(super_code, '0') as seq,
               null as is_ins,
               null as is_accept,
               null as is_check,
               null as ass_brand,
               null as is_bar,
               null as bar_type,
               null as is_manage_depre,
               null as manage_depr_method,
               null as manage_depr_method_name,
               null as manage_depre_amount,
               null as reg_no,
               null as price,
               null as measure_type,
			   null as is_s_measure,
			   null as measure_king_code,
			   null as measure_king_name,
			   null as is_fae,
			   null as common_name,
			   null as type_code,
			   null as type_name
      from ass_type_dict t
      where                      
		    t.group_id = #{group_id} 
			AND t.hos_id = #{hos_id}
			AND t.copy_code = #{copy_code}
      union all
      select 
            a.group_id, a.hos_id, a.copy_code, a.ass_id, a.ass_code
		    , a.ass_name, a.ass_type_id, b.ass_type_code, b.ass_type_name, b.acc_type_code
		    , afd.fina_type_name as acc_type_name, a.ass_unit, hu.unit_name as ass_unit_name, a.is_measure, a.is_depre
		    , a.ass_depre_code, c.ass_depre_name, a.depre_years, a.is_stop, a.ass_spec
		    , a.ass_model, a.fac_id, a.fac_no, hfd.fac_code || ' ' || hfd.fac_name as fac_code, hfd.fac_name
		    , a.ven_id, a.ven_no, hsd.sup_code || ' ' || hsd.sup_name as ven_code, hsd.sup_name, a.usage_code
		    , d.equi_usage_name, agd.gb_name gb_code, a.spell_code,a.wbx_code,b.ass_type_code as seq,
     		 a.is_ins,a.is_accept,a.is_check,a.ass_brand,a.is_bar,case when a.bar_type = 1 then '一维条码' else '二维条码' end bar_type,
     		 a.is_manage_depre,a.manage_depr_method,admd.ass_depre_name manage_depr_method_name,
     		 a.manage_depre_amount,a.reg_no,a.price,a.measure_type,a.is_s_measure,a.measure_king_code,
		amkd.measure_king_name,a.is_fae,a.common_name,a.type_code,ats.type_name
		
      from ass_dict a
        left join ass_type_dict b on a.group_id = b.group_id
		  and a.hos_id = b.hos_id
		  and a.copy_code = b.copy_code
		  and a.ass_type_id = b.ass_type_id 
		left join ASS_FINA_DICT afd on 
		  b.group_id = afd.group_id
		  and b.hos_id = afd.hos_id
		  and b.copy_code = afd.copy_code
		  and b.acc_type_code = afd.fina_type_code  
		  left join ass_depre_method_dict c on a.ass_depre_code = c.ass_depre_code 
		  left join ass_usage_dict d on a.group_id = d.group_id
		  and a.hos_id = d.hos_id
		  and a.copy_code = d.copy_code
		  and a.usage_code = d.equi_usage_code 
		  left join HOS_UNIT hu on a.group_id = hu.group_id
		  and a.hos_id = hu.hos_id
		  and a.ass_unit = hu.unit_code 
		  left join HOS_SUP_dict hsd on a.group_id = hsd.group_id
		  and a.hos_id = hsd.hos_id
		  and a.ven_id = hsd.sup_id
		  and hsd.is_stop = 0 
		  left join hos_fac_dict hfd on a.group_id = hfd.group_id
		  and a.hos_id = hfd.hos_id
		  and a.fac_id = hfd.fac_id
		  and hfd.is_stop = 0 
		  left join ass_depre_method_dict admd on
  		  a.manage_depr_method = admd.ass_depre_code
  		  left join ass_gb_dict agd on
  		  a.gb_code = agd.gb_code
  		  left join ASS_Measure_King_DICT amkd on
		   a.group_id = amkd.group_id
		   and a.hos_id = amkd.hos_id
		   and a.copy_code = amkd.copy_code
		   and a.measure_king_code = amkd.measure_king_code
		  
		  left join ASS_TYPE_SIXEIGHT ats on
		   a.group_id = ats.group_id
		   and a.hos_id = ats.hos_id
		   and a.copy_code = ats.copy_code
		   and a.type_code = ats.type_code  
		   
       where                      
		    a.group_id = #{group_id} 
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
    ) t
    where t.ass_id != 0
    start with t.ass_code in (select ass_type_code
      from ass_type_dict m
      where m.group_id = #{group_id} 
			AND m.hos_id = #{hos_id}
			AND m.copy_code = #{copy_code}
			<if test="ass_code != '' and ass_code != null">
			and m.ass_type_code = #{ass_code}
			</if>
	        and m.type_level = (
	          select min(t5.type_level)
	          from ass_type_dict t5
	          where t5.group_id = #{group_id} 
					AND t5.hos_id = #{hos_id}
					AND t5.copy_code = #{copy_code}
					<if test="ass_code != '' and ass_code != null">
					and t5.ass_type_code = #{ass_code}
					</if>)
      union all
	      select t1.ass_code
	      from ass_dict t1
	      where t1.group_id = #{group_id} 
	        and t1.hos_id = #{hos_id}
	        and t1.copy_code = #{copy_code}
	        <if test="ass_code != '' and ass_code != null">
				and t1.ass_code = #{ass_code}
			</if>
	        and not exists (
	          select 1
	          from ass_type_dict atd
	          where atd.group_id = #{group_id} 
	            and atd.hos_id = #{hos_id}
	            and atd.copy_code = #{copy_code}
	            <if test="ass_code != '' and ass_code != null">
					and atd.ass_type_code = #{ass_code}
				</if>
	          ))
	    connect by t.seq = PRIOR t.ass_code
	    order siblings by t.ass_code) tt
	    <where>
	    	<if test="ass_code_like != '' and ass_code_like != null">
	    		and tt.ass_code like '%${ass_code_like}%'
	    	</if>
	    	<if test="ass_name != '' and ass_name != null">
	    		and (tt.ass_code like '%${ass_name}%' 
	    		or tt.ass_name like '%${ass_name}%' 
	    		or tt.spell_code like '%${ass_name}%'
	    		or tt.wbx_code like '%${ass_name}%')
	    	</if>
	    	<if test="usage_code != '' and usage_code != null">
	    		and tt.usage_code like '%${usage_code}%'
	    	</if>
	    	<if test="ass_type_id != '' and ass_type_id != null">
	    		and tt.ass_type_id = #{ass_type_id}
	    	</if>
	    	<if test="ass_type_code != '' and ass_type_code != null">
	    		and tt.ass_type_code = #{ass_type_code}
	    	</if>
	    	<if test="acc_type_code != '' and acc_type_code != null">
	    		and tt.acc_type_code = #{acc_type_code}
	    	</if>
	    	<if test="depre_years != '' and depre_years != null">
	    		and tt.depre_years = #{depre_years}
	    	</if>
	    	<if test="is_depre != '' and is_depre != null">
	    		and tt.is_depre = #{is_depre}
	    	</if>
	    	<if test="is_stop != '' and is_stop != null">
	    		and tt.is_stop = #{is_stop}
	    	</if>
	    	<if test="is_measure != '' and is_measure != null">
	    		and tt.is_measure = #{is_measure}
	    	</if>
	    	<if test="fac_id != '' and fac_id != null">
	    		and tt.fac_id = #{fac_id}
	    	</if>
	    	<if test="ven_id != '' and ven_id != null">
	    		and tt.ven_id = #{ven_id}
	    	</if>
	    	<if test="usage_code != '' and usage_code != null">
	    		and tt.usage_code = #{usage_code}
	    	</if>
	    	<if test="ass_spec != '' and ass_spec != null">
	    		and tt.ass_spec like '%${ass_spec}%'
	    	</if>
	    	<if test="ass_model != '' and ass_model != null">
	    		and tt.ass_model like '%${ass_model}%'
	    	</if>
	    	<if test="is_fae != '' and is_fae != null">
	    		and tt.is_fae = #{is_fae}
	    	</if>
	    	<if test="type_code != '' and type_code != null">
	    		and tt.type_code = #{type_code}
	    	</if>
	    </where>
	</select>
	
	
	<select id="queryAssDictTree" parameterType="java.util.Map" resultMap="by_tree" >
			select *
  				from (
  				select 
               case
                 when t2.ass_code is not null then
                  t2.ass_code||'@'||t1.ass_naturs
                 else
                  t1.ass_type_code||'@'||t1.ass_naturs
               end as id,
               case
                 when t2.ass_code is not null then
                  t2.ass_code || ' ' || t2.ass_name
                 else
                  t1.ass_type_code || ' ' || t1.ass_type_name
               end as name,
               case
                 when t2.ass_code is not null then
                  t1.ass_type_code||'@'||t1.ass_naturs
                 else
                  nvl(t1.super_code||'@'||t1.ass_naturs,'0')
               end as pId,
               t1.is_last,
                t1.ass_type_id ,
                 t1.manage_depre_amount
          from ass_type_dict t1
          left join ass_dict t2
            on t1.group_id = t2.group_id
           and t1.hos_id = t2.hos_id
           and t1.copy_code = t2.copy_code
           and t1.ass_type_id = t2.ass_type_id
		<where>                     
			<if test="group_id != null and group_id != ''">
			 AND t1.group_id = #{group_id} 
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND t1.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND t1.copy_code = #{copy_code}
			</if>
		</where>   
		 union all
        select 
               t1.ass_type_code||'@'||t1.ass_naturs as id,
               t1.ass_type_code || ' ' || t1.ass_type_name as name,
               nvl(t1.super_code||'@'||t1.ass_naturs,'0') as pId,
               t1.is_last,
                t1.ass_type_id ,
                 t1.manage_depre_amount
          from ass_type_dict t1
         <where>      
         	t1.is_last = 1    
         	and  exists (select 1
                          from ass_dict t2
                         where t1.group_id = t2.group_id
                           and t1.hos_id = t2.hos_id
                           and t1.copy_code = t2.copy_code
                           and t1.ass_type_id = t2.ass_type_id
                        )
			<if test="group_id != null and group_id != ''">
			 AND t1.group_id = #{group_id} 
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND t1.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND t1.copy_code = #{copy_code}
			</if>
		</where>
         ) t
		order by t.id
	</select>
	
	
	<select id="queryAssDictByCode" resultType="com.chd.hrp.ass.entity.dict.AssDict" parameterType="java.util.Map" >
	
		SELECT a.group_id,
       a.hos_id,
       a.copy_code,
       a.ass_id,
       a.ass_code,
       a.ass_name,
       a.ass_type_id,
       b.ass_type_code,
       b.ass_type_name,
       b.acc_type_code,
       afd.fina_type_name acc_type_name,
       a.ass_unit,
       hu.unit_name ass_unit_name,
       a.is_measure,
       a.is_depre,
       a.ass_depre_code,
       c.ass_depre_name,
       a.depre_years,
       a.is_stop,
       a.ass_spec,
       a.ass_model,
       a.fac_id,
       a.fac_no,
       hfd.fac_code || ' ' || hfd.fac_name fac_code,
       hfd.fac_name,
       a.ven_id,
       a.ven_no,
       hsd.sup_code || ' ' || hsd.sup_name ven_code,
       hsd.sup_name,
       a.usage_code,
       d.equi_usage_name usage_name,
       a.gb_code,
       agd.gb_name,
       a.spell_code,
       a.wbx_code,
       a.is_ins,
       a.is_accept,
       a.is_check,
       a.ass_brand,         
	   a.is_bar,             
		a.bar_type,           
		a.is_manage_depre,    
		a.manage_depr_method, 
		admd.ass_depre_name manage_depr_method_name,
		a.manage_depre_amount,
		a.reg_no,
		a.price,
		a.measure_type,
		a.is_s_measure,
		a.measure_king_code,
		amkd.measure_king_name,
		a.is_fae,
		a.common_name,
		a.type_code,
		ats.type_name
  FROM ASS_DICT a
  
  left join ass_type_dict b
    on a.group_id = b.group_id
   and a.hos_id = b.hos_id
   and a.copy_code = b.copy_code
   and a.ass_type_id = b.ass_type_id
   
  left join ASS_FINA_DICT afd
    on b.group_id = afd.group_id
   and b.hos_id = afd.hos_id
   and b.copy_code = afd.copy_code
   and b.acc_type_code = afd.fina_type_code
   
  left join ass_depre_method_dict c
    on a.ass_depre_code = c.ass_depre_code
    
  left join ass_usage_dict d
    on a.group_id = d.group_id
   and a.hos_id = d.hos_id
   and a.copy_code = d.copy_code
   and a.usage_code = d.equi_usage_code
   
  LEFT JOIN HOS_UNIT hu
    ON a.group_id = hu.group_id
   and a.hos_id = hu.hos_id
   and a.ass_unit = hu.unit_code
   
  left join HOS_SUP_dict hsd
    on a.group_id = hsd.group_id
   and a.hos_id = hsd.hos_id
   and a.ven_id = hsd.sup_id
   and hsd.is_stop = 0
   
  left join hos_fac_dict hfd
    on a.group_id = hfd.group_id
   and a.hos_id = hfd.hos_id
   and a.fac_id = hfd.fac_id
   and hfd.is_stop = 0
   
   left join ass_depre_method_dict admd on
   a.manage_depr_method = admd.ass_depre_code
   
   left join ass_gb_dict agd on
   a.gb_code = agd.gb_code
   
   left join ASS_Measure_King_DICT amkd on
   a.group_id = amkd.group_id
   and a.hos_id = amkd.hos_id
   and a.copy_code = amkd.copy_code
   and a.measure_king_code = amkd.measure_king_code
   
   left join ASS_TYPE_SIXEIGHT ats on
   a.group_id = ats.group_id
   and a.hos_id = ats.hos_id
   and a.copy_code = ats.copy_code
   and a.type_code = ats.type_code 
   
 where a.group_id = #{group_id}
   and a.hos_id = #{hos_id}
   and a.copy_code = #{copy_code}
 
		<if test="ass_id != null and ass_id != ''">
		AND a.ass_id = #{ass_id}
		</if>
		<if test="ass_code != null and ass_code != ''">
		AND a.ass_code = #{ass_code}
		</if>
	   <if test="ass_code != null and ass_code != ''">
		AND ass_code = #{ass_code}
		</if>
		<if test="ass_name != null and ass_name != ''">
		AND ass_name = #{ass_name}
		</if>
	</select>
	
	
	<select id="queryAssDictByAssId" resultType="com.chd.hrp.ass.entity.dict.AssDict" parameterType="java.util.Map" >
	
		SELECT a.group_id,
       a.hos_id,
       a.copy_code,
       a.ass_id,
       a.ass_code,
       a.ass_name,
       a.ass_type_id,
       b.ass_type_code,
       b.ass_type_name,
       b.acc_type_code,
       afd.fina_type_name acc_type_name,
       a.ass_unit,
       hu.unit_name ass_unit_name,
       a.is_measure,
       a.is_depre,
       a.ass_depre_code,
       c.ass_depre_name,
       a.depre_years,
       a.is_stop,
       a.ass_spec,
       a.ass_model,
       a.fac_id,
       a.fac_no,
       hfd.fac_code || ' ' || hfd.fac_name fac_code,
       hfd.fac_name,
       a.ven_id,
       a.ven_no,
       hsd.sup_code || ' ' || hsd.sup_name ven_code,
       hsd.sup_name,
       a.usage_code,
       d.equi_usage_name,
       a.gb_code,
       a.spell_code,
       a.wbx_code,
       a.is_ins,
       a.is_accept,
       a.is_check,
       a.ass_brand,         
	   a.is_bar,             
		a.bar_type,           
		a.is_manage_depre,    
		a.manage_depr_method, 
		admd.ass_depre_name manage_depr_method_name,
		a.manage_depre_amount,
		a.reg_no,
		a.price,
		a.measure_type,
		a.is_s_measure,
		a.measure_king_code,
		amkd.measure_king_name,
		a.is_fae,
		a.common_name,
		a.type_code,
		ats.type_name
  FROM ASS_DICT a
  
  left join ass_type_dict b
    on a.group_id = b.group_id
   and a.hos_id = b.hos_id
   and a.copy_code = b.copy_code
   and a.ass_type_id = b.ass_type_id
   
  left join ASS_FINA_DICT afd
    on b.group_id = afd.group_id
   and b.hos_id = afd.hos_id
   and b.copy_code = afd.copy_code
   and b.acc_type_code = afd.fina_type_code
   
  left join ass_depre_method_dict c
    on a.ass_depre_code = c.ass_depre_code
    
  left join ass_usage_dict d
    on a.group_id = d.group_id
   and a.hos_id = d.hos_id
   and a.copy_code = d.copy_code
   and a.usage_code = d.equi_usage_code
   
  LEFT JOIN HOS_UNIT hu
    ON a.group_id = hu.group_id
   and a.hos_id = hu.hos_id
   and a.ass_unit = hu.unit_code
   
  left join HOS_SUP_dict hsd
    on a.group_id = hsd.group_id
   and a.hos_id = hsd.hos_id
   and a.ven_id = hsd.sup_id
   and hsd.is_stop = 0
   
  left join hos_fac_dict hfd
    on a.group_id = hfd.group_id
   and a.hos_id = hfd.hos_id
   and a.fac_id = hfd.fac_id
   and hfd.is_stop = 0
   
   left join ass_depre_method_dict admd on
   a.manage_depr_method = admd.ass_depre_code
   
   left join ASS_Measure_King_DICT amkd on
   a.group_id = amkd.group_id
   and a.hos_id = amkd.hos_id
   and a.copy_code = amkd.copy_code
   and a.measure_king_code = amkd.measure_king_code
   
   left join ASS_TYPE_SIXEIGHT ats on
   a.group_id = ats.group_id
   and a.hos_id = ats.hos_id
   and a.copy_code = ats.copy_code
   and a.type_code = ats.type_code
   
 where a.group_id = #{group_id}
   and a.hos_id = #{hos_id}
   and a.copy_code = #{copy_code}
 
		AND a.ass_id = #{ass_id}
		
	</select>
	
	<select id="queryAssDictByAssCode" resultType="com.chd.hrp.ass.entity.dict.AssDict" parameterType="java.util.Map" >
	
		SELECT a.group_id,
       a.hos_id,
       a.copy_code,
       a.ass_id,
       a.ass_code,
       a.ass_name,
       a.ass_type_id,
       b.ass_type_code,
       b.ass_type_name,
       b.acc_type_code,
       afd.fina_type_name acc_type_name,
       a.ass_unit,
       hu.unit_name ass_unit_name,
       a.is_measure,
       a.is_depre,
       a.ass_depre_code,
       c.ass_depre_name,
       a.depre_years,
       a.is_stop,
       a.ass_spec,
       a.ass_model,
       a.fac_id,
       a.fac_no,
       hfd.fac_code || ' ' || hfd.fac_name fac_code,
       hfd.fac_name,
       a.ven_id,
       a.ven_no,
       hsd.sup_code || ' ' || hsd.sup_name ven_code,
       hsd.sup_name,
       a.usage_code,
       d.equi_usage_name,
       a.gb_code,
       a.spell_code,
       a.wbx_code,
       a.is_ins,
       a.is_accept,
       a.is_check,
       a.ass_brand,         
	   a.is_bar,             
		a.bar_type,           
		a.is_manage_depre,    
		a.manage_depr_method, 
		admd.ass_depre_name manage_depr_method_name,
		a.manage_depre_amount,
		a.reg_no,
		a.price,
		a.measure_type,
		a.is_s_measure,
		a.measure_king_code,
		amkd.measure_king_name,
		a.is_fae,
		a.common_name,
		a.type_code,
		ats.type_name
  FROM ASS_DICT a
  
  left join ass_type_dict b
    on a.group_id = b.group_id
   and a.hos_id = b.hos_id
   and a.copy_code = b.copy_code
   and a.ass_type_id = b.ass_type_id
   
  left join ASS_FINA_DICT afd
    on b.group_id = afd.group_id
   and b.hos_id = afd.hos_id
   and b.copy_code = afd.copy_code
   and b.acc_type_code = afd.fina_type_code
   
  left join ass_depre_method_dict c
    on a.ass_depre_code = c.ass_depre_code
    
  left join ass_usage_dict d
    on a.group_id = d.group_id
   and a.hos_id = d.hos_id
   and a.copy_code = d.copy_code
   and a.usage_code = d.equi_usage_code
   
  LEFT JOIN HOS_UNIT hu
    ON a.group_id = hu.group_id
   and a.hos_id = hu.hos_id
   and a.ass_unit = hu.unit_code
   
  left join HOS_SUP_dict hsd
    on a.group_id = hsd.group_id
   and a.hos_id = hsd.hos_id
   and a.ven_id = hsd.sup_id
   and hsd.is_stop = 0
   
  left join hos_fac_dict hfd
    on a.group_id = hfd.group_id
   and a.hos_id = hfd.hos_id
   and a.fac_id = hfd.fac_id
   and hfd.is_stop = 0
   
   left join ass_depre_method_dict admd on
   a.manage_depr_method = admd.ass_depre_code
   
   left join ASS_Measure_King_DICT amkd on
   a.group_id = amkd.group_id
   and a.hos_id = amkd.hos_id
   and a.copy_code = amkd.copy_code
   and a.measure_king_code = amkd.measure_king_code
   
   left join ASS_TYPE_SIXEIGHT ats on
   a.group_id = ats.group_id
   and a.hos_id = ats.hos_id
   and a.copy_code = ats.copy_code
   and a.type_code = ats.type_code
   
 where a.group_id = #{group_id}
   and a.hos_id = #{hos_id}
   and a.copy_code = #{copy_code}
   AND a.ass_code = #{ass_code}
	</select>
	
	
	<select id="queryAssDictByCodeOrName" resultType="java.lang.Integer" parameterType="java.util.Map" >

		SELECT 
			count(0)
		FROM ASS_DICT a
		WHERE a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.ass_code = #{ass_code}
			<if test="ass_name != null || ass_name != ''">
			AND a.ass_name = #{ass_name}
			</if>
			
	</select>
	<select id="queryAssDictByUniqueness" resultType="com.chd.hrp.ass.entity.dict.AssDict" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_id,
		ass_code,
		ass_name,
		ass_type_id,
		ass_unit,
		is_measure,
		is_depre,
		ass_depre_code,
		depre_years,
		is_stop,
		ass_spec,
		ass_model,
		fac_id,
		fac_no,
		ven_id,
		ven_no,
		usage_code,
		gb_code,
		spell_code,
		wbx_code,
        is_ins,
        is_accept,
        is_check,
        ass_brand,         
		is_bar,             
		bar_type,           
		is_manage_depre,    
		manage_depr_method, 
		manage_depre_amount,
		reg_no,
		price,
		measure_type,
		is_s_measure,
		measure_king_code,
		is_fae,
		common_name,
		type_code
		FROM ASS_DICT 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code}
			</if>
			<if test="ass_id != null and ass_id != ''">
			AND ass_id = #{ass_id}
			</if>
			<if test="ass_code != null and ass_code != ''">
			AND ass_code = #{ass_code}
			</if>
			<if test="ass_name != null and ass_name != ''">
			AND ass_name = #{ass_name}
			</if>
			<if test="ass_type_id != null and ass_type_id != ''">
			AND ass_type_id = #{ass_type_id}
			</if>
			<if test="ass_unit != null and ass_unit != ''">
			AND ass_unit = #{ass_unit}
			</if>
			<if test="is_measure != null and is_measure != ''">
			AND is_measure = #{is_measure}
			</if>
			<if test="is_depre != null and is_depre != ''">
			AND is_depre = #{is_depre}
			</if>
			<if test="ass_depre_code != null and ass_depre_code != ''">
			AND ass_depre_code = #{ass_depre_code}
			</if>
			<if test="depre_years != null and depre_years != ''">
			AND depre_years = #{depre_years}
			</if>
			<if test="is_stop != null and is_stop != ''">
			AND is_stop = #{is_stop}
			</if>
			<if test="ass_spec != null and ass_spec != ''">
			AND ass_spec = #{ass_spec}
			</if>
			<if test="ass_model != null and ass_model != ''">
			AND ass_model = #{ass_model}
			</if>
			<if test="fac_id != null and fac_id != ''">
			AND fac_id = #{fac_id}
			</if>
			<if test="fac_no != null and fac_no != ''">
			AND fac_no = #{fac_no}
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND ven_id = #{ven_id}
			</if>
			<if test="ven_no != null and ven_no != ''">
			AND ven_no = #{ven_no}
			</if>
			<if test="usage_code != null and usage_code != ''">
			AND usage_code = #{usage_code}
			</if>
			<if test="gb_code != null and gb_code != ''">
			AND gb_code = #{gb_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
			AND spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
			AND wbx_code = #{wbx_code}
			</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryasstypeid" resultType="java.util.Map" parameterType="java.util.Map">
	select max(t.ass_code) ass_code from ass_no_dict t where t.ass_type_id in(
 <!--       select ass_type_id from ass_type_dict t1 where t1.ass_type_code =  -->#{ass_type_id}
)
	</select>
	
	
	<select id="queryByCode" resultMap="assDictMap" parameterType="java.util.Map" >
		SELECT a.group_id,
       a.hos_id,
       a.copy_code,
       a.ass_id,
       a.ass_no,
       a.ass_code,
       a.ass_name,
       a.ass_type_id,
       b.ass_type_code,
       b.ass_type_name,
       b.acc_type_code,
       afd.fina_type_name acc_type_name,
       a.ass_unit,
       hu.unit_name ass_unit_name,
       a.is_measure,
       a.is_depre,
       a.ass_depre_code,
       c.ass_depre_name,
       a.depre_years,
       a.is_stop,
       a.ass_spec,
       a.ass_model,
       a.fac_id,
       a.fac_no,
       hfd.fac_code || ' ' || hfd.fac_name fac_code,
       hfd.fac_name,
       a.ven_id,
       a.ven_no,
       hsd.sup_code || ' ' || hsd.sup_name ven_code,
       hsd.sup_name,
       a.usage_code,
       d.equi_usage_name,
       a.gb_code,
       a.spell_code,
       a.wbx_code,
       a.is_ins,
       a.is_accept,
       a.is_check,
       a.ass_brand,         
	   a.is_bar,             
		a.bar_type,           
		a.is_manage_depre,    
		a.manage_depr_method, 
		admd.ass_depre_name manage_depr_method_name,
		a.manage_depre_amount,
		a.reg_no,
		a.price,
		a.measure_type,
		a.is_s_measure,
		a.measure_king_code,
		amkd.measure_king_name,
		a.is_fae,
		a.common_name,
		a.type_code,
		ats.type_name
  FROM ASS_no_DICT a
  
  left join ass_type_dict b
    on a.group_id = b.group_id
   and a.hos_id = b.hos_id
   and a.copy_code = b.copy_code
   and a.ass_type_id = b.ass_type_id
   
  left join ASS_FINA_DICT afd
    on b.group_id = afd.group_id
   and b.hos_id = afd.hos_id
   and b.copy_code = afd.copy_code
   and b.acc_type_code = afd.fina_type_code
   
  left join ass_depre_method_dict c
    on a.ass_depre_code = c.ass_depre_code
    
  left join ass_usage_dict d
    on a.group_id = d.group_id
   and a.hos_id = d.hos_id
   and a.copy_code = d.copy_code
   and a.usage_code = d.equi_usage_code
   
  LEFT JOIN HOS_UNIT hu
    ON a.group_id = hu.group_id
   and a.hos_id = hu.hos_id
   and a.ass_unit = hu.unit_code
   
  left join HOS_SUP_dict hsd
    on a.group_id = hsd.group_id
   and a.hos_id = hsd.hos_id
   and a.ven_id = hsd.sup_id
   and hsd.is_stop = 0
   
  left join hos_fac_dict hfd
    on a.group_id = hfd.group_id
   and a.hos_id = hfd.hos_id
   and a.fac_id = hfd.fac_id
   and hfd.is_stop = 0
   
   left join ass_depre_method_dict admd on
   a.manage_depr_method = admd.ass_depre_code
   
   left join ASS_Measure_King_DICT amkd on
   a.group_id = amkd.group_id
   and a.hos_id = amkd.hos_id
   and a.copy_code = amkd.copy_code
   and a.measure_king_code = amkd.measure_king_code
   
   left join ASS_TYPE_SIXEIGHT ats on
   a.group_id = ats.group_id
   and a.hos_id = ats.hos_id
   and a.copy_code = ats.copy_code
   and a.type_code = ats.type_code
   
 where a.group_id = #{group_id}
   and a.hos_id = #{hos_id}
   and a.copy_code = #{copy_code}
   AND a.ass_code = #{ass_code}
   and a.is_stop = 0
	
	</select>
	
	<!-- 增加资产变更表 -->
	<insert id="addBatch" parameterType="java.util.List">
	
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
		INSERT INTO ASS_NO_DICT (
		ass_no
		,
		group_id
		,
		hos_id
		,
		copy_code
		<if test="item.ass_id != null and item.ass_id !=''">,ass_id</if>
		<if test="item.ass_code != null and item.ass_code != ''">,ass_code</if>
		<if test="item.ass_name != null and item.ass_name != ''">,ass_name</if>
		<if test="item.ass_type_id != null and item.ass_type_id != ''">,ass_type_id</if>
		<if test="item.ass_unit != null and item.ass_unit != ''">,ass_unit</if>
		<if test="item.is_measure != null and item.is_measure != ''">,is_measure</if>
		<if test="item.is_depre != null and item.is_depre != ''">,is_depre</if>
		<if test="item.ass_depre_code != null and item.ass_depre_code != ''">,ass_depre_code</if>
		<if test="item.depre_years != null and item.depre_years != ''">,depre_years</if>
		<if test="item.is_stop != null and item.is_stop != ''">,is_stop</if>
		<if test="item.ass_spec != null and item.ass_spec != ''">,ass_spec</if>
		<if test="item.ass_model != null and item.ass_model != ''">,ass_model</if>
		<if test="item.fac_id != null and item.fac_id != ''">,fac_id</if>
		<if test="item.fac_no != null and item.fac_no != ''">,fac_no</if>
		<if test="item.ven_id != null and item.ven_id != ''">,ven_id</if>
		<if test="item.ven_no != null and item.ven_no != ''">,ven_no</if>
		<if test="item.usage_code != null and item.usage_code != ''">,usage_code</if>
		<if test="item.gb_code != null and item.gb_code != ''">,gb_code</if>
		<if test="item.spell_code != null and item.spell_code != ''">,spell_code</if>
		<if test="item.wbx_code != null and item.wbx_code != ''">,wbx_code</if>
		<if test="item.is_ins != null and item.is_ins != ''">,is_ins</if>
		<if test="item.is_accept != null and item.is_accept != ''">,is_accept</if>
		<if test="item.is_check != null and item.is_check != ''">,is_check</if>
		<if test="item.ass_brand != null and item.ass_brand != ''">,ass_brand</if>
		<if test="item.is_bar != null and item.is_bar != ''">, is_bar </if>
		<if test="item.bar_type != null and item.bar_type != ''">, bar_type  </if>         
		<if test="item.is_manage_depre != null and item.is_manage_depre != ''">,is_manage_depre</if>
		<if test="item.manage_depr_method != null and item.manage_depr_method != ''">, manage_depr_method </if>
		<if test="item.manage_depre_amount != null and item.manage_depre_amount != ''">,manage_depre_amount</if>
		<if test="item.note != null and item.note != ''">,note</if>
		<if test="item.reg_no != null and item.reg_no != ''">,reg_no</if>
		<if test="item.price != null and item.price != ''">,price</if>
		<if test="item.measure_type != null and item.measure_type != ''">,measure_type</if>
		<if test="item.is_s_measure != null and item.is_s_measure != ''">,is_s_measure</if>
		<if test="item.measure_king_code != null and item.measure_king_code != ''">,measure_king_code</if>
		<if test="item.is_fae != null and item.is_fae != ''">,is_fae</if>
		<if test="item.common_name != null and item.common_name != ''">,common_name</if>
		<if test="item.type_code != null and item.type_code != ''">,type_code</if>
		)
		 VALUES (
		 ASS_NO_DICT_SEQ.nextval,
		 #{item.group_id,jdbcType=INTEGER} ,
			#{item.hos_id,jdbcType=INTEGER} ,
			#{item.copy_code,jdbcType=VARCHAR} 
			<if test="item.ass_id != null and item.ass_id !=''">,#{item.ass_id,jdbcType=INTEGER} </if>
			<if test="item.ass_code != null and item.ass_code != ''">,#{item.ass_code,jdbcType=VARCHAR} </if>
			<if test="item.ass_name != null and item.ass_name != ''">,#{item.ass_name,jdbcType=VARCHAR} </if>
			<if test="item.ass_type_id != null and item.ass_type_id != ''">,#{item.ass_type_id,jdbcType=INTEGER} </if>
			<if test="item.ass_unit != null and item.ass_unit != ''">,#{item.ass_unit,jdbcType=VARCHAR} </if>
			<if test="item.is_measure != null and item.is_measure != ''">,#{item.is_measure,jdbcType=INTEGER} </if>
			<if test="item.is_depre != null and item.is_depre != ''">,#{item.is_depre,jdbcType=INTEGER} </if>
			<if test="item.ass_depre_code != null and item.ass_depre_code != ''">,#{item.ass_depre_code,jdbcType=VARCHAR} </if>
			<if test="item.depre_years != null and item.depre_years != ''">	,#{item.depre_years,jdbcType=VARCHAR} </if>
			<if test="item.is_stop != null and item.is_stop != ''">,#{item.is_stop,jdbcType=INTEGER} </if>
			<if test="item.ass_spec != null and item.ass_spec != ''">	,#{item.ass_spec,jdbcType=VARCHAR} </if>
			<if test="item.ass_model != null and item.ass_model != ''">	,#{item.ass_model,jdbcType=VARCHAR} </if>
			<if test="item.fac_id != null and item.fac_id != ''">,#{item.fac_id,jdbcType=INTEGER}</if>
			<if test="item.fac_no != null and item.fac_no != ''">,#{item.fac_no,jdbcType=INTEGER} </if>
			<if test="item.ven_id != null and item.ven_id != ''">,#{item.ven_id,jdbcType=INTEGER} </if>
			<if test="item.ven_no != null and item.ven_no != ''">,#{item.ven_no,jdbcType=INTEGER} </if>
			<if test="item.usage_code != null and item.usage_code != ''">,#{item.usage_code,jdbcType=VARCHAR} </if>
			<if test="item.gb_code != null and item.gb_code != ''">,#{item.gb_code,jdbcType=VARCHAR} </if>
			<if test="item.spell_code != null and item.spell_code != ''">,#{item.spell_code,jdbcType=VARCHAR} </if>
			<if test="item.wbx_code != null and item.wbx_code != ''">,#{item.wbx_code,jdbcType=VARCHAR}</if>
			<if test="item.is_ins != null and item.is_ins != ''">,#{item.is_ins,jdbcType=INTEGER}</if>
			<if test="item.is_accept != null and item.is_accept != ''">,#{item.is_accept,jdbcType=INTEGER}</if>
			<if test="item.is_check != null and item.is_check != ''">,#{item.is_check,jdbcType=INTEGER}</if>
			<if test="item.ass_brand != null and item.ass_brand != ''">,#{item.ass_brand,jdbcType=VARCHAR}</if>
			<if test="item.is_bar != null and item.is_bar != ''">, #{item.is_bar,jdbcType=INTEGER} </if>
			<if test="item.bar_type != null and item.bar_type != ''">, #{item.bar_type,jdbcType=VARCHAR}  </if>         
			<if test="item.is_manage_depre != null and item.is_manage_depre != ''">,#{item.is_manage_depre,jdbcType=INTEGER}</if>
			<if test="item.manage_depr_method != null and item.manage_depr_method != ''">, #{item.manage_depr_method,jdbcType=VARCHAR} </if>
			<if test="item.manage_depre_amount != null and item.manage_depre_amount != ''">,#{item.manage_depre_amount,jdbcType=VARCHAR}</if>
			<if test="item.note != null and item.note != ''">,#{item.note,jdbcType=VARCHAR}</if>
			<if test="item.reg_no != null and item.reg_no != ''">,#{item.reg_no,jdbcType=INTEGER}</if>
			<if test="item.price != null and item.price != ''">,#{item.price,jdbcType=INTEGER}</if>
			<if test="item.measure_type != null and item.measure_type != ''">,#{item.measure_type,jdbcType=INTEGER}</if>
			<if test="item.is_s_measure != null and item.is_s_measure != ''">,#{item.is_s_measure,jdbcType=INTEGER}</if>
			<if test="item.measure_king_code != null and item.measure_king_code != ''">,#{item.measure_king_code,jdbcType=VARCHAR}</if>
			<if test="item.is_fae != null and item.is_fae != ''">,#{item.is_fae,jdbcType=INTEGER}</if>
			<if test="item.common_name != null and item.common_name != ''">,#{item.common_name,jdbcType=VARCHAR}</if>
			<if test="item.type_code != null and item.type_code != ''">,#{item.type_code,jdbcType=VARCHAR}</if>
		 )
	
	
	</foreach>
	</insert>
	
	
</mapper>

