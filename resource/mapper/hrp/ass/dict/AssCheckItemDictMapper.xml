<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssCheckItemDictMapper">
	
	<resultMap id="assCheckItemDict" type="com.chd.hrp.ass.entity.dict.AssCheckItemDict">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="check_item_code" column="check_item_code"/>
	<result property="check_item_name" column="check_item_name"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_stop" column="is_stop"/>
	</resultMap>
	
	<insert id="addAssCheckItemDict" useGeneratedKeys="true" >
	
		INSERT INTO ASS_CHECK_ITEM_DICT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		check_item_code
		,
		check_item_name
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		
		) VALUES (
		#{group_id}		,
		#{hos_id}		,
		#{copy_code}		,
		#{check_item_code}		,
		#{check_item_name}		,
		#{spell_code}		,
		#{wbx_code}		,
		#{is_stop}		
		)
	
	</insert>
	<insert id="addBatchAssCheckItemDict" parameterType="java.util.List" >
	
		INSERT INTO ASS_CHECK_ITEM_DICT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		check_item_code
		,
		check_item_name
		,
		spell_code
		,
	
		is_stop
		
		) select ASS_CHECK_ITEM_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}			,
			#{item.hos_id}			,
			#{item.copy_code}			,
			#{item.check_item_code}			,
			#{item.check_item_name}			,
			#{item.spell_code}			,
			
			#{item.is_stop}			
		
		</foreach>
		)t
	</insert>
	
	<update id="updateAssCheckItemDict" parameterType="java.util.Map">
	
		UPDATE ass_check_item_dict SET
		check_item_name = #{check_item_name}
		,
		spell_code = #{spell_code}
		,
		
		is_stop = #{is_stop}
		
		WHERE 
		group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		copy_code = #{copy_code}
		 and 
		check_item_code = #{check_item_code}
		
	
	</update>
	<update id="updateBatchAssCheckItemDict" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE ass_check_item_dict SET
			check_item_name = #{check_item_name}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
			,
			is_stop = #{is_stop}
			
			WHERE 
			group_id = #{item.group_id}
			 and 
			hos_id = #{item.hos_id}
			 and 
			copy_code = #{item.copy_code}
			 and 
			check_item_code = #{item.check_item_code}
			
		</foreach>
	</update>
	
	<delete id="deleteAssCheckItemDict" parameterType="java.util.Map">
	
		DELETE FROM ass_check_item_dict WHERE
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		check_item_code = #{check_item_code} 
	
	</delete>
	<delete id="deleteBatchAssCheckItemDict" parameterType="java.util.List">
		DELETE FROM ass_check_item_dict WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				 and 
				hos_id = #{item.hos_id}
				 and 
				copy_code = #{item.copy_code}
				 and 
				check_item_code = #{item.check_item_code}
				
			</foreach>
	
	</delete>
	<select id="queryAssCheckItemDict" parameterType="java.util.Map" resultMap="assCheckItemDict" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.check_item_code,
		a.check_item_name,
		a.spell_code,
		a.wbx_code,
		a.is_stop 
		FROM ASS_CHECK_ITEM_DICT a
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="check_item_code != null and check_item_code != ''">
		 AND ( a.check_item_code like '%${check_item_code}%' or
		 a.check_item_name like '%${check_item_code}%' or
		  a.wbx_code  like '%${check_item_code}%' or   
		  a.spell_code like '%${check_item_code}%' )  
		 
		</if>
		<if test="check_item_name != null and check_item_name != ''">
		AND a.check_item_name = #{check_item_name}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND a.spell_code = #{spell_code}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND a.wbx_code = #{wbx_code}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND a.is_stop = #{is_stop}
		</if>
		<if test="is_exists_affi != null and is_exists_affi != ''">
		AND not exists (
			select 1 from ass_check_item_affi b where group_id=#{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			and b.ass_id = #{ass_id}
			and a.check_item_code = b.check_item_code
		)
		</if>
		</where>   
		order by a.check_item_code asc
	</select>
	<select id="queryAssCheckItemDictByCode" resultType="com.chd.hrp.ass.entity.dict.AssCheckItemDict" parameterType="string" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		check_item_code,
		check_item_name,
		spell_code,
		wbx_code,
		is_stop
		FROM ass_check_item_dict 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		check_item_code = #{check_item_code} 
	
	</select>
	
		<select id="queryByName" resultType="com.chd.hrp.ass.entity.dict.AssCheckItemDict" parameterType="string" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		check_item_code,
		check_item_name,
		spell_code,
		wbx_code,
		is_stop
		FROM ass_check_item_dict 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		check_item_name = #{check_item_name} 
	
	</select>
	<select id="queryAssCheckItemDictByUniqueness" resultType="com.chd.hrp.ass.entity.dict.AssCheckItemDict" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		check_item_code,
		check_item_name,
		spell_code,
		wbx_code,
		is_stop
		FROM ass_check_item_dict 
		WHERE 
		group_id = #{group_id}   
		and hos_id = #{hos_id}   
		and copy_code = #{copy_code} 
		<if test="check_item_code != null and check_item_code != ''"> 
		and check_item_code = #{check_item_code} 
		</if> 
		<if test="check_item_name != null and check_item_name != ''"> 
		and check_item_name = #{check_item_name} 
		</if> 
	</select>

</mapper>

