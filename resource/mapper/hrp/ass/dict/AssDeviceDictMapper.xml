<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssDeviceDictMapper">
	
	<resultMap id="assDeviceDict" type="com.chd.hrp.ass.entity.dict.AssDeviceDict">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="device_code" column="device_code"/>
	<result property="device_name" column="device_name"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_stop" column="is_stop"/>
	</resultMap>
	
	<insert id="addAssDeviceDict" useGeneratedKeys="true" >
	
		INSERT INTO ASS_DEVICE_DICT (
		group_id
		,
		hos_id
		,
		device_code
		,
		device_name
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		
		) VALUES (
#{group_id}		,
#{hos_id}		,
#{device_code}		,
#{device_name}		,
#{spell_code}		,
#{wbx_code}		,
#{is_stop}		
		)
	
	</insert>
	<insert id="addBatchAssDeviceDict" parameterType="java.util.List" >
	
		INSERT INTO ASS_DEVICE_DICT (
		group_id
		,
		hos_id
		,
		device_code
		,
		device_name
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		
		) select ASS_DEVICE_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
#{item.group_id}			,
#{item.hos_id}			,
#{item.device_code}			,
#{item.device_name}			,
#{item.spell_code}			,
#{item.wbx_code}			,
#{item.is_stop}			
		
		</foreach>
		)t
	</insert>
	
	<update id="updateAssDeviceDict" parameterType="java.util.Map">
	
		UPDATE ASS_DEVICE_DICT SET
		device_name = #{device_name}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		,
		is_stop = #{is_stop}
		
		WHERE 
		group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		device_code = #{device_code}
		
	
	</update>
	<update id="updateBatchAssDeviceDict" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE ASS_DEVICE_DICT SET
			device_name = #{device_name}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
			,
			is_stop = #{is_stop}
			
			WHERE 
			group_id = #{item.group_id}
			 and 
			hos_id = #{item.hos_id}
			 and 
			device_code = #{item.device_code}
			
		</foreach>
	</update>
	
	<delete id="deleteAssDeviceDict" parameterType="java.util.Map">
	
		DELETE FROM ASS_DEVICE_DICT WHERE
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		device_code = #{device_code} 
	
	</delete>
	<delete id="deleteBatchAssDeviceDict" parameterType="java.util.List">
		DELETE FROM ASS_DEVICE_DICT WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				 and 
				hos_id = #{item.hos_id}
				 and 
				device_code = #{item.device_code}
				
			</foreach>
	
	</delete>
	<select id="queryAssDeviceDict" parameterType="java.util.Map" resultMap="assDeviceDict" >
	
		SELECT 
		group_id,
		hos_id,
		device_code,
		device_name,
		spell_code,
		wbx_code,
		is_stop
		FROM ASS_DEVICE_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="device_code != null and device_code != ''">
		AND device_code = #{device_code}
		</if>
		<if test="device_name != null and device_name != ''">
		AND device_name like  '%${device_name}%'
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop}
		</if> 
		</where>   
		order by group_id asc
	</select>
	<select id="queryAssDeviceDictByCode" resultType="com.chd.hrp.ass.entity.dict.AssDeviceDict" parameterType="string" >
	
		SELECT 
		group_id,
		hos_id,
		device_code,
		device_name,
		spell_code,
		wbx_code,
		is_stop
		FROM ASS_DEVICE_DICT 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		device_code = #{device_code} 
	
	</select>
	<select id="queryAssDeviceDictByName" resultType="com.chd.hrp.ass.entity.dict.AssDeviceDict" parameterType="string" >
	
		SELECT 
		group_id,
		hos_id,
		device_code,
		device_name,
		spell_code,
		wbx_code,
		is_stop
		FROM ASS_DEVICE_DICT 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		device_name = #{device_name} 
	
	</select>
</mapper>

