<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssPaySourceMapper">
	
	<resultMap id="assPaySource" type="com.chd.hrp.ass.entity.dict.AssPaySource">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_code" column="pay_code"/>
	<result property="source_id" column="source_id"/>
	</resultMap>
		
	<resultMap id="assPaySourceMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_code" column="pay_code"/>
	<result property="source_id" column="source_id"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_PAY_SOURCE (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="pay_code != null and pay_code != ''">
		pay_code
		,
		</if>
		<if test="source_id != null and source_id != ''">
		source_id
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="pay_code != null and pay_code != ''">
		#{pay_code}
		,
		</if>
		<if test="source_id != null and source_id != ''">
		#{source_id}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_PAY_SOURCE (
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_code
		,
		source_id
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.pay_code}
			,
			#{item.source_id}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_pay_source 
		<trim prefix="SET"  suffixOverrides=","> 
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_pay_source 
			<trim prefix="SET"  suffixOverrides=","> 
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.pay_code != null and item.pay_code != ''">
			AND pay_code = #{item.pay_code}
			</if>  
			<if test="item.source_id != null and item.source_id != ''">
			AND source_id = #{item.source_id}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_pay_source 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_pay_source 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code}
				</if>
				<if test="item.pay_code != null and item.pay_code != ''">
				AND pay_code = #{item.pay_code}
				</if>
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assPaySource" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.pay_code,
			a.source_id,
			b.source_code,
			b.source_name
		FROM ASS_PAY_SOURCE a
		left join hos_source b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="pay_code != null and pay_code != ''">
			AND a.pay_code = #{pay_code}
			</if>
			<if test="source_id != null and source_id != ''">
			AND a.source_id = #{source_id}
			</if>
		</where>   
		order by a.source_id asc
	</select>
	
	
	
	<select id="queryByPayCode" parameterType="java.util.Map" resultMap="assPaySourceMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.pay_code,
			a.source_id,
			b.source_code,
			b.source_name
		FROM ASS_PAY_SOURCE a
		left join hos_source b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.pay_code = #{pay_code}
		</where>   
	</select>
	
	<select id="queryByCode" resultMap="assPaySource"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_code,
		source_id
		FROM ass_pay_source 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		pay_code = #{pay_code}   and 
		source_id = #{source_id} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assPaySource"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_code,
		source_id
		FROM ASS_PAY_SOURCE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assPaySource"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_code,
		source_id
		FROM ASS_PAY_SOURCE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id}
		</if>
		</where>   
		order by group_id asc
	</select>
</mapper>

