<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.cert.AssCertDetailMapper">
	
	<resultMap id="assCertDetail" type="com.chd.hrp.ass.entity.dict.cert.AssCertDetail">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="cert_code" column="cert_code"/>
		<result property="ass_id" column="ass_id"/>  
	</resultMap>
		
	<resultMap id="assCertDetailMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="cert_code" column="cert_code"/>
		<result property="ass_id" column="ass_id"/>  
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ass_cert_detail (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="cert_code != null and cert_code != ''">
		cert_code
		,
		</if>
		<if test="ass_id != null and ass_id != ''">
		ass_id
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="cert_code != null and cert_code != ''">
		#{cert_code}
		,
		</if>
		<if test="ass_id != null and ass_id != ''">
		#{ass_id}
		,
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ass_cert_detail (
			group_id,         
			hos_id,           
			copy_code,        
			cert_code,        
			ass_id     
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.cert_code}
			,        
			#{item.ass_id}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_cert_detail 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="cert_code != null and cert_code != ''">
		AND cert_code = #{cert_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_id != null and ass_id != ''">
		AND ass_id = #{ass_id}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_cert_detail 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND cert_code = #{item.cert_code,jdbcType=VARCHAR}
				<if test="item.ass_id != null and item.ass_id != ''">
				AND ass_id = #{item.ass_id}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assCertDetail" >
	
		SELECT 
			t1.group_id,         
			t1.hos_id,           
			t1.copy_code,        
			t1.cert_code,        
			t1.ass_id,
			t2.ass_code,
			t2.ass_name,
			t2.ass_model,
			t2.ass_spec,
			t2.ass_brand

		FROM ass_cert_detail t1
		left join ass_no_dict t2 on
		t1.group_id = t2.group_id
		and t1.hos_id = t2.hos_id
		and t1.copy_code = t2.copy_code
		and t1.ass_id = t2.ass_id
		and t2.is_stop = 0
				
		
		<where>                     
		AND t1.group_id = #{group_id,jdbcType=INTEGER}
		AND t1.hos_id = #{hos_id,jdbcType=INTEGER}
		AND t1.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="cert_code != null and cert_code != ''">
		AND t1.cert_code = #{cert_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_id != null and ass_id != ''">
		AND t1.ass_id = #{ass_id,jdbcType=VARCHAR}
		</if>
		</where>   
		order by t1.cert_code asc
	</select>
	<select id="queryByCode" resultMap="assCertDetail"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,         
			hos_id,           
			copy_code,        
			cert_code,        
			ass_id  
		FROM ass_cert_detail 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			cert_code = #{cert_code,jdbcType=VARCHAR}   and 
			ass_id = #{ass_id} 
	
	</select>

	<select id="queryByUniqueness" resultMap="assCertDetail"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,         
			hos_id,           
			copy_code,        
			cert_code,        
			ass_id  
		FROM ass_cert_detail 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="cert_code != null and cert_code != ''">
		AND cert_code = #{cert_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_id != null and ass_id != ''">
		AND ass_id = #{ass_id}
		</if>
		</where>   
		order by ass_id asc
	</select>
	<select id="queryExists" resultMap="assCertDetail"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,         
			hos_id,           
			copy_code,        
			cert_code,        
			ass_id   
		FROM ass_cert_detail 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="cert_code != null and cert_code != ''">
		AND cert_code = #{cert_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_id != null and ass_id != ''">
		AND ass_id = #{ass_id}
		</if>
		
		</where>   
		order by ass_id asc
	</select>
	
</mapper>

