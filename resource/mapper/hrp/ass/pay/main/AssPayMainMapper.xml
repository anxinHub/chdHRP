<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.pay.main.AssPayMainMapper">
	
	<resultMap id="assPayMain" type="com.chd.hrp.ass.entity.pay.main.AssPayMain"> 
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_no" column="pay_no"/>
	<result property="pay_date" column="pay_date"/>
	<result property="ven_id" column="ven_id"/>
	<result property="pay_money" column="pay_money"/>
	<result property="state" column="state"/>
	<result property="create_emp" column="create_emp"/> 
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="note" column="note"/>
	<result property="ven_no" column="ven_no"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	</resultMap>
		
	<resultMap id="assPayMainMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_no" column="pay_no"/>
	<result property="pay_date" column="pay_date"/>
	<result property="ven_id" column="ven_id"/>
	<result property="pay_money" column="pay_money"/>
	<result property="state" column="state"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="note" column="note"/>
	<result property="ven_no" column="ven_no"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_PAY_MAIN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="pay_no != null and pay_no != ''">
		pay_no
		,
		</if>
		<if test="pay_date != null and pay_date != ''">
		pay_date
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="pay_no != null and pay_no != ''">
		#{pay_no}
		,
		</if>
		<if test="pay_date != null and pay_date != ''">
		to_date(#{pay_date},'YYYY-MM-DD')
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		#{ven_id}
		,
		</if>
		<if test="state != null and state != ''">
		#{state}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		#{ven_no}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		#{store_id}
		,
		</if>
		<if test="store_no != null and store_no != ''">
		#{store_no}
		,
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_PAY_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_no
		,
		pay_date
		,
		ven_id
		,
		pay_money
		,
		state
		,
		create_emp
		,
		create_date
		,
		audit_emp
		,
		audit_date
		,
		note
		,
		ven_no
		,
		store_id
		,
		store_no
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.pay_no}
			,
			#{item.pay_date}
			,
			#{item.ven_id}
			,
			#{item.pay_money}
			,
			#{item.state}
			,
			#{item.create_emp}
			,
			#{item.create_date}
			,
			#{item.audit_emp}
			,
			#{item.audit_date}
			,
			#{item.note}
			,
			#{item.ven_no}
			,
			#{item.store_id}
			,
			#{item.store_no}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_pay_main 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="pay_date != null and pay_date != ''">
		pay_date = to_date(#{pay_date},'YYYY-MM-DD')
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id = #{ven_id}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note}
		,
		</if>
		<if test="note == null or note == ''">
		note = null
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no = #{ven_no}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id = #{store_id}
		,
		</if>
		<if test="store_id == null or store_id == ''">
		store_id = null
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no = #{store_no}
		,
		</if>
		<if test="store_no == null or store_no == ''">
		store_no = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_no != null and pay_no != ''">
		AND pay_no = #{pay_no}
		</if>
		</where>  
	</update>
	
	<update id="updatePayMoney" parameterType="java.util.Map">
	
		UPDATE ass_pay_main set
			pay_money = #{pay_money}
		<where>                     
		AND group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND pay_no = #{pay_no}
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_pay_main  set
			state = 2,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND pay_no = #{item.pay_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_pay_main  set
			state = 1,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND pay_no = #{item.pay_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_pay_main  set
			state = 0,
			audit_emp = null,
			audit_date = null
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND pay_no = #{item.pay_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_pay_main 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.pay_date != null and item.pay_date != ''">
			pay_date = #{item.pay_date}
			,
			</if>
			<if test="item.ven_id != null and item.ven_id != ''">
			ven_id = #{item.ven_id}
			,
			</if>
			<if test="item.pay_money != null and item.pay_money != ''">
			pay_money = #{item.pay_money}
			,
			</if>
			<if test="item.state != null and item.state != ''">
			state = #{item.state}
			,
			</if>
			<if test="item.create_emp != null and item.create_emp != ''">
			create_emp = #{item.create_emp}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date}
			,
			</if>
			<if test="item.audit_emp != null and item.audit_emp != ''">
			audit_emp = #{item.audit_emp}
			,
			</if>
			<if test="item.audit_date != null and item.audit_date != ''">
			audit_date = #{item.audit_date}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note}
			,
			</if>
			<if test="item.ven_no != null and item.ven_no != ''">
			ven_no = #{item.ven_no}
			,
			</if>
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.pay_no != null and item.pay_no != ''">
			AND pay_no = #{item.pay_no}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_pay_main 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_no != null and pay_no != ''">
		AND pay_no = #{pay_no}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_pay_main 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code}
				</if>
				<if test="item.pay_no != null and item.pay_no != ''">
				AND pay_no = #{item.pay_no}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assPayMain" >
		select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.pay_no,
			a.pay_date,
			a.ven_id,
			a.pay_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '付款确认' else '' end state_name,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.note,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_PAY_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			<if test="pay_no != null and pay_no != ''">
			AND a.pay_no = #{pay_no}
			</if>
			<if test="pay_date_beg != null and pay_date_beg != '' and pay_date_end != null and pay_date_end != ''">
			AND a.pay_date between to_date(#{pay_date_beg},'YYYY-MM-DD') and to_date(#{pay_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="pay_money != null and pay_money != ''"> 
			AND a.pay_money = #{pay_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
			<if test="ass_nature != null and ass_nature != ''">  
				and exists (
				      select 1
				      from Ass_Pay_Detail ab
				      left join ass_bill_detail aa
				      on aa.group_id = ab.group_id
				      and aa.hos_id = ab.hos_id
				      and aa.copy_code = ab.copy_code
				      and aa.bill_no = ab.bill_no
				      where ab.group_id = a.group_id
				        and ab.hos_id = a.hos_id
				        and ab.copy_code = a.copy_code
				        and ab.pay_no = a.pay_no
				        and aa.naturs_code = #{ass_nature}
				    )
	        </if>
		</where>   
		union all
		SELECT 
			  null group_id,
			  null hos_id,
		      null copy_code,
		      null pay_no,
		      null pay_date,
		      null ven_id,
		      sum(pay_money) pay_money,
		      null state,
		      null state_name,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      '合计' note,
		      null ven_no,
		      null ven_code,
		      null ven_name,
			  null store_id,
			  null store_no,
			  null store_code,
			  null store_name
		    FROM ASS_PAY_MAIN a
		    <where>                     
				AND a.group_id = #{group_id}
				AND a.hos_id = #{hos_id}
				AND a.copy_code = #{copy_code}
				<if test="pay_no != null and pay_no != ''">
				AND a.pay_no = #{pay_no}
				</if>
				<if test="pay_date_beg != null and pay_date_beg != '' and pay_date_end != null and pay_date_end != ''">
				AND a.pay_date between to_date(#{pay_date_beg},'YYYY-MM-DD') and to_date(#{pay_date_end},'YYYY-MM-DD')
				</if>
				<if test="ven_id != null and ven_id != ''">
				AND a.ven_id = #{ven_id}
				</if>
				<if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="pay_money != null and pay_money != ''">
				AND a.pay_money = #{pay_money}
				</if>
				<if test="state != null and state != ''">
				AND a.state = #{state}
				</if>
				<if test="create_emp != null and create_emp != ''">
				AND a.create_emp = #{create_emp}
				</if>
				<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
				AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
				</if>
				<if test="audit_emp != null and audit_emp != ''">
				AND a.audit_emp = #{audit_emp}
				</if>
				<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
				AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
				</if>
				<if test="note != null and note != ''">
				AND a.note = #{note}
				</if>
				<if test="ass_nature != null and ass_nature != ''">  
				and exists (
				      select 1
				      from Ass_Pay_Detail ab
				      left join ass_bill_detail aa
				      on aa.group_id = ab.group_id
				      and aa.hos_id = ab.hos_id
				      and aa.copy_code = ab.copy_code
				      and aa.bill_no = ab.bill_no
				      where ab.group_id = a.group_id
				        and ab.hos_id = a.hos_id
				        and ab.copy_code = a.copy_code
				        and ab.pay_no = a.pay_no
				        and aa.naturs_code = #{ass_nature}
				    )
	        </if>
			</where>
		) t
		order by t.pay_no desc
	</select>
	<select id="queryByCode" resultMap="assPayMain"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.pay_no,
			a.pay_date,
			a.ven_id,
			a.pay_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '付款确认' else '' end state_name,
			a.create_emp,
			a.create_date,
			a.audit_emp,
			a.audit_date,
			a.note,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_PAY_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   and 
			a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			a.pay_no = #{pay_no,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assPayMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_no,
		pay_date,
		ven_id,
		pay_money,
		state,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		note,
		ven_no,
		store_id,
		store_no
		FROM ASS_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_no != null and pay_no != ''">
		AND pay_no = #{pay_no}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND pay_date = #{pay_date}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="pay_money != null and pay_money != ''">
		AND pay_money = #{pay_money}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assPayMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_no,
		pay_date,
		ven_id,
		pay_money,
		state,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		note,
		ven_no,
		store_id,
		store_no
		FROM ASS_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="pay_no != null and pay_no != ''">
		AND pay_no = #{pay_no}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND pay_date = #{pay_date}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="pay_money != null and pay_money != ''">
		AND pay_money = #{pay_money}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 付款主表打印 -->
	<select id="queryaAssPayBatch" parameterType="java.util.Map" resultType="java.util.Map">
	with temp as (
	     select to_char(wm_concat(to_char(bm.invoice_no))) invoice_nos from ass_pay_detail asd
	     left join ass_bill_main bm
	          on bm.bill_no = asd.bill_no
	          and bm.group_id = asd.group_id
	          and bm.hos_id = asd.hos_id
	          and bm.copy_code = asd.copy_code 
	          where                     
			asd.group_id = #{group_id}
			AND asd.hos_id = #{hos_id}
			AND asd.copy_code = #{copy_code}
			AND asd.pay_no in (${paraId})	
	) 
	select distinct a.pay_no as id,
	             a.group_id,
	             a.hos_id,
	             a.copy_code,
	             a.note,
	             to_char(a.pay_money, 'FM999,999,990.00') pay_money,
	             a.pay_no,
	             case
	               when a.state = 0 then
	                '新建'
	               when a.state = 1 then
	                '审核'
	               when a.state = 2 then
	                '确认'
	               else
	                ''
	             end state,
	             s1.user_name AUDIT_EMP,
	             s2.user_name CREATE_EMP,
	             to_char(a.AUDIT_DATE, 'yyyy-mm-dd') AUDIT_DATE,
	             to_char(a.CREATE_DATE, 'yyyy-mm-dd') CREATE_DATE,
	             to_char(a.pay_date, 'yyyy-mm-dd') pay_date,
	             h.sup_code ven_code,
	             h.sup_name ven_name,
	             c.pay_name,
	             (select count(bill_no) from ass_pay_detail 
	               where                     
			          group_id = #{group_id}
					AND hos_id = #{hos_id}
					AND copy_code = #{copy_code}
					AND pay_no in (${paraId})	
	          
	          ) SUM_COUNT,
	             bb.bank_no,
	                 bb.bank_name,
	                 
	                 (select invoice_nos from temp) as invoice_nos,
			hsd.store_code,
			hsd.store_name
	        from ASS_PAY_MAIN a
	         
	        
	        left join ASS_PAY_STAGE b
	          on a.group_id = b.group_id
	         and a.hos_id = b.hos_id
	         and a.copy_code = b.copy_code
	         and a.pay_no = b.pay_no
	       
	        left join acc_pay_type c
	          on b.group_id = c.group_id
	         and b.hos_id = c.hos_id
	         and b.copy_code = c.copy_code
	         and b.pay_code = c.pay_code
	         
	         left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
	      
	        left join HOS_SUP_DICT h
	          on h.group_id = a.group_id
	         and h.hos_id = a.hos_id
	         and h.sup_id = a.ven_id
	         and h.is_stop = 0
	        left join sys_user s1
	          on s1.group_id = a.group_id
	         and s1.hos_id = a.hos_id
	         and s1.user_id = a.AUDIT_EMP
	        left join sys_user s2
	          on s2.group_id = a.group_id
	         and s2.hos_id = a.hos_id
	         and s2.user_id = a.CREATE_EMP
	          left join ass_sup_attr d
	            on d.group_id = a.group_id
	           and d.hos_id = a.hos_id
	           and d.sup_id = a.ven_id
	           and d.is_stop = 0
	        left join acc_sup_attr tr
	          on tr.group_id = a.group_id
	         and tr.hos_id = a.hos_id
	         and tr.sup_id = a.ven_id
	          left join HOS_SUP_BANK bb
	             on bb.group_id = a.group_id
	             and bb.hos_id = a.hos_id
	             and bb.sup_id = a.ven_id
	             and bb.is_default = 1
	                where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.pay_no in (${paraId})	
	             GROUP BY a.pay_no,
	                a.group_id,
	                a.hos_id,
	                a.copy_code,
	                a.note,
	                a.pay_money,
	                a.pay_no,
	                a.state,
	                s1.user_name,
	                s2.user_name,
	                a.AUDIT_DATE,
	                a.CREATE_DATE,
	                a.pay_date,
	                h.sup_code,
	                h.sup_name,
	                c.pay_name,
	                hsd.store_code,
			        hsd.store_name,
	                bb.bank_no,
	                 bb.bank_name
	
	
		
			          	     
		
	</select>
	<select id="querAssPayByPrint" parameterType="java.util.Map" resultType="java.util.Map">
	with temp as (
	     select to_char(wm_concat(to_char(bm.invoice_no))) invoice_nos from ass_pay_detail asd
	     left join ass_bill_main bm
	          on bm.bill_no = asd.bill_no
	          and bm.group_id = asd.group_id
	          and bm.hos_id = asd.hos_id
	          and bm.copy_code = asd.copy_code 
	          where                     
			asd.group_id = #{group_id}
			AND asd.hos_id = #{hos_id}
			AND asd.copy_code = #{copy_code}
			AND asd.pay_no = #{pay_no,jdbcType=VARCHAR}
	) 
	select distinct a.pay_no as id,
	             a.group_id,
	             a.hos_id,
	             a.copy_code,
	             a.note,
	             to_char(a.pay_money, 'FM999,999,990.00') pay_money,
	             a.pay_no,
	             case
	               when a.state = 0 then
	                '新建'
	               when a.state = 1 then
	                '审核'
	               when a.state = 2 then
	                '确认'
	               else
	                ''
	             end state,
	             s1.user_name AUDIT_EMP,
	             s2.user_name CREATE_EMP,
	             to_char(a.AUDIT_DATE, 'yyyy-mm-dd') AUDIT_DATE,
	             to_char(a.CREATE_DATE, 'yyyy-mm-dd') CREATE_DATE,
	             to_char(a.pay_date, 'yyyy-mm-dd') pay_date,
	             h.sup_code ven_code,
	             h.sup_name ven_name,
	             c.pay_name,
	             (select count(bill_no) from ass_pay_detail 
	               where                     
	          		 group_id = #{group_id}
					AND hos_id = #{hos_id}
					AND copy_code = #{copy_code}
					AND pay_no  = #{pay_no,jdbcType=VARCHAR}	) SUM_COUNT,
	             bb.bank_no,
	                 bb.bank_name,
	                 hsd.store_code,
			        hsd.store_name,
	                 (select invoice_nos from temp) as invoice_nos
	        from ASS_PAY_MAIN a
	         
	        
	        left join ASS_PAY_STAGE b
	          on a.group_id = b.group_id
	         and a.hos_id = b.hos_id
	         and a.copy_code = b.copy_code
	         and a.pay_no = b.pay_no
	       
	        left join acc_pay_type c
	          on b.group_id = c.group_id
	         and b.hos_id = c.hos_id
	         and b.copy_code = c.copy_code
	         and b.pay_code = c.pay_code
	         
	          left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
	      
	        left join HOS_SUP_DICT h
	          on h.group_id = a.group_id
	         and h.hos_id = a.hos_id
	         and h.sup_id = a.ven_id
	         and h.is_stop = 0
	        left join sys_user s1
	          on s1.group_id = a.group_id
	         and s1.hos_id = a.hos_id
	         and s1.user_id = a.AUDIT_EMP
	        left join sys_user s2
	          on s2.group_id = a.group_id
	         and s2.hos_id = a.hos_id
	         and s2.user_id = a.CREATE_EMP
	          left join ass_sup_attr d
	            on d.group_id = a.group_id
	           and d.hos_id = a.hos_id
	           and d.sup_id = a.ven_id
	           and d.is_stop = 0
	        left join acc_sup_attr tr
	          on tr.group_id = a.group_id
	         and tr.hos_id = a.hos_id
	         and tr.sup_id = a.ven_id
	          left join HOS_SUP_BANK bb
	             on bb.group_id = a.group_id
	             and bb.hos_id = a.hos_id
	             and bb.sup_id = a.ven_id
	             and bb.is_default = 1
	                where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
	             GROUP BY a.pay_no,
	                a.group_id,
	                a.hos_id,
	                a.copy_code,
	                a.note,
	                a.pay_money,
	                a.pay_no,
	                a.state,
	                s1.user_name,
	                s2.user_name,
	                a.AUDIT_DATE,
	                a.CREATE_DATE,
	                a.pay_date,
	                h.sup_code,
	                h.sup_name,
	                hsd.store_code,
			        hsd.store_name,
	                c.pay_name,
	                bb.bank_no,
	                 bb.bank_name
		
		
	</select>
	<!-- 付款从表打印 -->
	<select id="queryAssPay_detail" parameterType="java.util.Map" resultType="java.util.Map">
		select a.pay_no as id,
       a.hos_id,
       a.copy_code,
       a.group_id,
       to_char(a.bill_money, 'FM999,999,990.00') bill_money,
       a.note INT_note,
       m.bill_no,
        m.invoice_no,
       to_char(b.pay_money, 'FM999,999,990.00') pay_page_money,
       to_char(m.bill_date,'yyyy-MM-dd') bill_date,
       to_char(sum(c.pay_plan_money),'FM999,999,990.00') pay_plan_money 
        --,na.naturs_name
  from ASS_PAY_DETAIL a

  left join ASS_BILL_MAIN m
    on m.group_id = a.group_id
   and m.hos_id = a.hos_id
   and m.copy_code = a.copy_code
   and m.bill_no = a.bill_no
   left join  ASS_PAY_STAGE b
   on  a.group_id = b.group_id
   and a.hos_id = b.hos_id
   and a.copy_code = b.copy_code
   and  a.bill_no = b.bill_no
   and a.pay_no = b.pay_no
  left join ass_bill_stage c
   on c.group_id = a.group_id
   and c.hos_id = a.hos_id
   and c.copy_code = a.copy_code
   and c.bill_no = a.bill_no
	left join (select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                   ass_spec,
                    ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '03' as ass_naturs
               from ass_card_general
               where                     
      		group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price,
                       ass_spec,
                       ass_mondl
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                     ass_spec,
                    ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '02' as ass_naturs
               from ass_card_special
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price,
                       ass_spec,
                       ass_mondl
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                    '' ass_spec ,
                    '' ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '01' as ass_naturs
               from ass_card_house
               where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                    '' ass_spec ,
                    '' ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '05' as ass_naturs
               from ass_card_inassets
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                    '' ass_spec,
                    '' ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '06' as ass_naturs
               from ass_card_land
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                     ass_spec,
                    ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '04' as ass_naturs
               from ass_card_other
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price,
                        ass_spec,
                    ass_mondl) card
    on c.group_id = card.group_id
   and c.hos_id = card.hos_id
   and c.copy_code = card.copy_code
   and c.ass_card_no = card.ass_card_no
   left join ass_naturs na 
   on na.naturs_code = card.ass_naturs		
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND a.pay_no in  (${paraId})
			</if>
			<if test="pay_no != null and pay_no != ''">
			AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
			</if>
			group by a.pay_no , a.hos_id, a.copy_code, a.group_id,a.bill_money,a.note,m.bill_date,m.bill_no, m.invoice_no,b.pay_money
			--	,na.naturs_name
	</select>
	
	
	<!-- 资产付款单状态查询  （打印时校验数据专用） -->
	<select id="queryAssPayState" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT pay_no  FROM ASS_PAY_MAIN 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND pay_no in  (${paraId})
			</if>
			<if test="pay_no != null and pay_no != ''">
			AND pay_no = #{pay_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	
	</select>
	
	<!-- 明细打印主表 -->
	<select id="queryAssPayDYMain" parameterType="java.util.Map" resultType="java.util.Map">
		select a.pay_no as id,
	       a.group_id,
	       a.hos_id,
	       a.copy_code,
	       to_char(a.pay_money, 'FM999,999,990.00') pay_money,
	       a.pay_no,
	       to_char(a.pay_date, 'yyyy-mm-dd') pay_date,
	       h.sup_code ven_code,
	       h.sup_name ven_name
	  from ASS_PAY_MAIN a
	  left join HOS_SUP_DICT h
	    on h.group_id = a.group_id
	   and h.hos_id = a.hos_id
	   and h.sup_id = a.ven_id
	   and h.is_stop = 0
    
     where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.pay_no = #{pay_no}	
	
	</select>
	<!-- 明细打印从表 -->
	<select id="queryAssPayDetailDY" parameterType="java.util.Map" resultType="java.util.Map">
			select a.pay_no as id,
       a.hos_id,
       a.copy_code,
       a.group_id,
       to_char(a.bill_money, 'FM999,999,990.00') bill_money,
       m.bill_no,
       b.ass_card_no,
       card.ass_in_no,
       card.ass_amount,
       to_char(card.price, 'FM999,999,990.00') price,
      to_char(card.sum_price, 'FM999,999,990.00') sum_price,
      to_char(b.pay_plan_money, 'FM999,999,990.00') fu_price,
       c.ass_name,
       c.ass_code,
       card.ass_spec,
        card.ass_mondl,
         m.invoice_no,
         na.naturs_name,
		fun_ass_type_split(#{group_id}, #{hos_id}, #{copy_code}, card.ass_id) ass_type_name
  from ASS_PAY_DETAIL a
  left join ASS_BILL_MAIN m
    on m.group_id = a.group_id
   and m.hos_id = a.hos_id
   and m.copy_code = a.copy_code
   and m.bill_no = a.bill_no
  left join ASS_BILL_STAGE b
    on a.group_id = b.group_id
   and a.hos_id = b.hos_id
   and a.copy_code = b.copy_code
   and a.bill_no = b.bill_no
  left join (select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                   ass_spec,
                    ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '03' as ass_naturs
               from ass_card_general
               where                     
      		group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price,
                       ass_spec,
                       ass_mondl
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                     ass_spec,
                    ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '02' as ass_naturs
               from ass_card_special
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price,
                       ass_spec,
                       ass_mondl
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                    '' ass_spec ,
                    '' ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '01' as ass_naturs
               from ass_card_house
               where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                    '' ass_spec ,
                    '' ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '05' as ass_naturs
               from ass_card_inassets
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                    '' ass_spec,
                    '' ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '06' as ass_naturs
               from ass_card_land
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price
             union all
             select group_id,
                    hos_id,
                    copy_code,
                    ass_card_no,
                    ass_id,
                    ass_no,
                    ass_in_no,
                    ass_amount,
                    price,
                     ass_spec,
                    ass_mondl,
                    sum(ass_amount * price) sum_price,
                    '04' as ass_naturs
               from ass_card_other
               where                     
      group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
              group by group_id,
                       hos_id,
                       copy_code,
                       ass_card_no,
                       ass_id,
                       ass_no,
                       ass_in_no,
                       ass_amount,
                       price,
                        ass_spec,
                    ass_mondl) card
    on b.group_id = card.group_id
   and b.hos_id = card.hos_id
   and b.copy_code = card.copy_code
   and b.ass_card_no = card.ass_card_no
   left join ass_no_dict c
    on card.group_id = c.group_id
   and card.hos_id = c.hos_id
   and card.copy_code = c.copy_code
   and card.ass_id = c.ass_id
   and c.is_stop = 0
   left join ass_naturs na 
   on na.naturs_code = card.ass_naturs
			where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			<if test="pay_no != null and pay_no != ''">
			AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
			</if>	
	</select>
	
</mapper>

