<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.allot.out.AssAllotOutGeneralMapper">  
	
	<resultMap id="assAllotOutGeneral" type="com.chd.hrp.ass.entity.allot.out.AssAllotOutGeneral">  
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="allot_out_no" column="allot_out_no"/>
	<result property="out_store_id" column="out_store_id"/>
	<result property="out_store_no" column="out_store_no"/>
	<result property="in_group_id" column="in_group_id"/>
	<result property="in_hos_id" column="in_hos_id"/>
	<result property="in_store_id" column="in_store_id"/>
	<result property="in_store_no" column="in_store_no"/>
	<result property="price" column="price"/> 
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="assAllotOutGeneralMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="allot_out_no" column="allot_out_no"/>
	<result property="out_store_id" column="out_store_id"/>
	<result property="out_store_no" column="out_store_no"/>
	<result property="in_group_id" column="in_group_id"/>
	<result property="in_hos_id" column="in_hos_id"/>
	<result property="in_store_id" column="in_store_id"/>
	<result property="in_store_no" column="in_store_no"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	<result property="add_manage_depre" column="add_manage_depre"/>
	<result property="add_depre_month" column="add_depre_month"/>
	<result property="now_depre" column="now_depre"/>
	<result property="now_manage_depre" column="now_manage_depre"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="state_name" column="state_name"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="in_store_name" column="in_store_name"/>
	<result property="in_store_code" column="in_store_code"/>
	<result property="in_hos_name" column="in_hos_name"/>
	<result property="in_group_name" column="in_group_name"/>
	<result property="out_store_name" column="out_store_name"/>
	<result property="out_store_code" column="out_store_code"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_ALLOT_OUT_General (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="allot_out_no != null and allot_out_no != ''">
		allot_out_no
		,
		</if>
		<if test="out_store_id != null and out_store_id != ''">
		out_store_id
		,
		</if>
		<if test="out_store_no != null and out_store_no != ''">
		out_store_no
		,
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		in_group_id
		,
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		in_hos_id
		,
		</if>
		<if test="in_store_id != null and in_store_id != ''">
		in_store_id
		,
		</if>
		<if test="in_store_no != null and in_store_no != ''">
		in_store_no
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		to_number(#{group_id})
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		to_number(#{hos_id})
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="allot_out_no != null and allot_out_no != ''">
		#{allot_out_no}
		,
		</if>
		<if test="out_store_id != null and out_store_id != ''">
		to_number(#{out_store_id})
		,
		</if>
		<if test="out_store_no != null and out_store_no != ''">
		to_number(#{out_store_no})
		,
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		to_number(#{in_group_id})
		,
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		to_number(#{in_hos_id})
		,
		</if>
		<if test="in_store_id != null and in_store_id != ''">
		to_number(#{in_store_id})
		,
		</if>
		<if test="in_store_no != null and in_store_no != ''">
		to_number(#{in_store_no})
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_ALLOT_OUT_General (
		group_id
		,
		hos_id
		,
		copy_code
		,
		allot_out_no
		,
		out_store_id
		,
		out_store_no
		,
		in_group_id
		,
		in_hos_id
		,
		in_store_id
		,
		in_store_no
		,
		create_emp
		,
		create_date
		,
		state
		,
		note
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.allot_out_no,jdbcType=VARCHAR}
			,
			#{item.out_store_id,jdbcType=INTEGER}
			,
			#{item.out_store_no,jdbcType=INTEGER}
			,
			#{item.in_group_id,jdbcType=INTEGER}
			,
			#{item.in_hos_id,jdbcType=INTEGER}
			,
			#{item.in_store_id,jdbcType=INTEGER}
			,
			#{item.in_store_no,jdbcType=INTEGER}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			#{item.create_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_allot_out_General 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="out_store_id != null and out_store_id != ''">
		out_store_id = #{out_store_id,jdbcType=INTEGER}
		,
		</if>
		<if test="out_store_no != null and out_store_no != ''">
		out_store_no = #{out_store_no,jdbcType=INTEGER}
		,
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		in_group_id = #{in_group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		in_hos_id = #{in_hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="in_store_id != null and in_store_id != ''">
		in_store_id = #{in_store_id,jdbcType=INTEGER}
		,
		</if>
		<if test="in_store_no != null and in_store_no != ''">
		in_store_no = #{in_store_no,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="note == null and note == ''">
		note = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="allot_out_no != null and allot_out_no != ''">
		AND allot_out_no = #{allot_out_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_allot_out_General 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.out_store_id != null and item.out_store_id != ''">
			out_store_id = #{item.out_store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.out_store_no != null and item.out_store_no != ''">
			out_store_no = #{item.out_store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.in_group_id != null and item.in_group_id != ''">
			in_group_id = #{item.in_group_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.in_hos_id != null and item.in_hos_id != ''">
			in_hos_id = #{item.in_hos_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.in_store_id != null and item.in_store_id != ''">
			in_store_id = #{item.in_store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.in_store_no != null and item.in_store_no != ''">
			in_store_no = #{item.in_store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.allot_out_no != null and item.allot_out_no != ''">
			AND allot_out_no = #{item.allot_out_no,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_allot_out_General 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="allot_out_no != null and allot_out_no != ''">
		AND allot_out_no = #{allot_out_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_allot_out_General 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.allot_out_no != null and item.allot_out_no != ''">
				AND allot_out_no = #{item.allot_out_no,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	
	
	<update id="updateAllotOutMoney" parameterType="java.util.Map">
	
		UPDATE ASS_ALLOT_OUT_General 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="price != null and price != ''">
		price = #{price}
		,
		</if>
		<if test="add_depre != null and add_depre != ''">
		add_depre = #{add_depre}
		,
		</if>
		<if test="cur_money != null and cur_money != ''">
		cur_money = #{cur_money}
		,
		</if>
		<if test="fore_money != null and fore_money != ''">
		fore_money = #{fore_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="allot_in_no != null and allot_in_no != ''">
		AND allot_out_no = #{allot_out_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_ALLOT_OUT_General  set
			state = 2,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND allot_out_no = #{item.allot_out_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_ALLOT_OUT_General  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND allot_out_no = #{item.allot_out_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_ALLOT_OUT_General  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND allot_out_no = #{item.allot_out_no}
			</where>  			
		</foreach>
	</update>
	
	
	<select id="query" parameterType="java.util.Map" resultMap="assAllotOutGeneral" >
	
		select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_out_no,
			a.out_store_id,
			a.out_store_no,
			out_store.store_code out_store_code,
			out_store.store_name out_store_name,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.in_store_id,
			a.in_store_no,
			in_store.store_code in_store_code,
			in_store.store_name in_store_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '出库确认' else '' end state_name,
			a.note
		FROM ASS_ALLOT_OUT_General a
		left join hos_store_dict out_store on
		a.group_id = out_store.group_id
		and a.hos_id = out_store.hos_id
		and a.out_store_id = out_store.store_id
		and out_store.is_stop = 0
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join hos_store_dict in_store on
		a.in_group_id = in_store.group_id
		and a.in_hos_id = in_store.hos_id
		and a.in_store_id = in_store.store_id
		and in_store.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="allot_out_no != null and allot_out_no != ''">
			AND a.allot_out_no = #{allot_out_no}
			</if>
			<if test="out_store_id != null and out_store_id != ''">
			AND a.out_store_id = #{out_store_id}
			</if>
			<if test="in_group_id != null and in_group_id != ''">
			AND a.in_group_id = #{in_group_id}
			</if>
			<if test="in_hos_id != null and in_hos_id != ''">
			AND a.in_hos_id = #{in_hos_id}
			</if>
			<if test="in_store_id != null and in_store_id != ''">
			AND a.in_store_id = #{in_store_id}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="add_depre != null and add_depre != ''">
			AND a.add_depre = #{add_depre}
			</if>
			<if test="cur_money != null and cur_money != ''">
			AND a.cur_money = #{cur_money}
			</if>
			<if test="fore_money != null and fore_money != ''">
			AND a.fore_money = #{fore_money}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != ''">
			AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
			</if>
			<if test="create_date_end != null and create_date_end != ''">
			AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != ''">
			AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
			</if>
			<if test="audit_date_end != null and audit_date_end != ''">
			AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>   
		union all
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null allot_out_no,
		      null out_store_id,
		      null out_store_no,
		      null out_store_code,
		      null out_store_name,
		      null in_group_id,
		      null in_group_name,
		      null in_hos_id,
		      null in_hos_name,
		      null in_store_id,
		      null in_store_no,
		      null in_store_code,
		      null in_store_name,
		      sum(a.price) price,
		      sum(a.add_depre) add_depre,
		      sum(a.cur_money) cur_money,
		      sum(a.fore_money) fore_money,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      null state,
		      null state_name,
		      '合计' note
		    FROM ASS_ALLOT_OUT_General a
			<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="allot_out_no != null and allot_out_no != ''">
			AND a.allot_out_no = #{allot_out_no}
			</if>
			<if test="out_store_id != null and out_store_id != ''">
			AND a.out_store_id = #{out_store_id}
			</if>
			<if test="in_group_id != null and in_group_id != ''">
			AND a.in_group_id = #{in_group_id}
			</if>
			<if test="in_hos_id != null and in_hos_id != ''">
			AND a.in_hos_id = #{in_hos_id}
			</if>
			<if test="in_store_id != null and in_store_id != ''">
			AND a.in_store_id = #{in_store_id}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="add_depre != null and add_depre != ''">
			AND a.add_depre = #{add_depre}
			</if>
			<if test="cur_money != null and cur_money != ''">
			AND a.cur_money = #{cur_money}
			</if>
			<if test="fore_money != null and fore_money != ''">
			AND a.fore_money = #{fore_money}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != ''">
			AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
			</if>
			<if test="create_date_end != null and create_date_end != ''">
			AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != ''">
			AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
			</if>
			<if test="audit_date_end != null and audit_date_end != ''">
			AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>  ) t
		order by t.allot_out_no desc
	</select>
	
	<select  id="queryByAllotInImport" parameterType="java.util.Map" resultMap="assAllotOutGeneral" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_out_no,
			a.out_store_id,
			a.out_store_no,
			out_store.store_code out_store_code,
			out_store.store_name out_store_name,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.in_store_id,
			a.in_store_no,
			in_store.store_code in_store_code,
			in_store.store_name in_store_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note
		FROM ASS_ALLOT_OUT_General a
		left join hos_store_dict out_store on
		a.group_id = out_store.group_id
		and a.hos_id = out_store.hos_id
		and a.out_store_id = out_store.store_id
		and out_store.is_stop = 0
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join hos_store_dict in_store on
		a.in_group_id = in_store.group_id
		and a.in_hos_id = in_store.hos_id
		and a.in_store_id = in_store.store_id
		and in_store.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		<where>          
			AND a.group_id = #{out_group_id}
			AND a.hos_id = #{out_hos_id}
			AND a.in_store_id = #{out_store_id}
			and a.in_group_id = #{group_id}
			and a.in_hos_id = #{hos_id}
			and not exists (
				select 1 from ass_allot_map_General where
							out_group_id = a.in_group_id
							AND out_hos_id = a.in_hos_id
							and allot_out_no = a.allot_out_no
			)
			AND a.state = 2
			<if test="allot_out_no != null and allot_out_no != ''">
			AND a.allot_out_no = #{allot_out_no}
			</if>
			<if test="in_group_id != null and in_group_id != ''">
			AND a.in_group_id = #{in_group_id}
			</if>
			<if test="in_hos_id != null and in_hos_id != ''">
			AND a.in_hos_id = #{in_hos_id}
			</if>
			<if test="in_store_id != null and in_store_id != ''">
			AND a.in_store_id = #{in_store_id}
			</if>
			<if test="in_store_no != null and in_store_no != ''">
			AND a.in_store_no = #{in_store_no}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != ''">
			AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
			</if>
			<if test="create_date_end != null and create_date_end != ''">
			AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != ''">
			AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
			</if>
			<if test="audit_date_end != null and audit_date_end != ''">
			AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
		</where>   
		order by a.allot_out_no desc
	</select>
	
	
	<select  id="queryByAllotInImportView" parameterType="java.util.Map" resultMap="assAllotOutGeneral" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_out_no,
			a.out_store_id,
			a.out_store_no,
			out_store.store_code out_store_code,
			out_store.store_name out_store_name,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.in_store_id,
			a.in_store_no,
			in_store.store_code in_store_code,
			in_store.store_name in_store_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note
		FROM ASS_ALLOT_OUT_General a
		left join hos_store_dict out_store on
		a.group_id = out_store.group_id
		and a.hos_id = out_store.hos_id
		and a.out_store_id = out_store.store_id
		and out_store.is_stop = 0
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join hos_store_dict in_store on
		a.in_group_id = in_store.group_id
		and a.in_hos_id = in_store.hos_id
		and a.in_store_id = in_store.store_id
		and in_store.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_allot_map_General alms on
		a.group_id = alms.group_id
		and a.hos_id = alms.hos_id
		and a.copy_code = alms.copy_code
		and a.allot_out_no = alms.allot_out_no
		<where>          
			AND a.group_id = #{out_group_id}
			AND a.hos_id = #{out_hos_id}
			AND a.out_store_id = #{out_store_id}
			AND a.out_store_no = #{out_store_no}
			and a.in_group_id = #{group_id}
			and a.in_hos_id = #{hos_id}
			and alms.allot_in_no = #{allot_in_no}
			AND a.state = 2
			<if test="allot_out_no != null and allot_out_no != ''">
			AND a.allot_out_no = #{allot_out_no}
			</if>
			<if test="in_group_id != null and in_group_id != ''">
			AND a.in_group_id = #{in_group_id}
			</if>
			<if test="in_hos_id != null and in_hos_id != ''">
			AND a.in_hos_id = #{in_hos_id}
			</if>
			<if test="in_store_id != null and in_store_id != ''">
			AND a.in_store_id = #{in_store_id}
			</if>
			<if test="in_store_no != null and in_store_no != ''">
			AND a.in_store_no = #{in_store_no}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != ''">
			AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
			</if>
			<if test="create_date_end != null and create_date_end != ''">
			AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != ''">
			AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
			</if>
			<if test="audit_date_end != null and audit_date_end != ''">
			AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
		</where>   
		order by a.allot_out_no desc
	</select>
	
	
	<select id="queryByCode" resultMap="assAllotOutGeneral"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_out_no,
			a.out_store_id,
			a.out_store_no,
			out_store.store_code out_store_code,
			out_store.store_name out_store_name,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.in_store_id,
			a.in_store_no,
			in_store.store_code in_store_code,
			in_store.store_name in_store_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note
		FROM ASS_ALLOT_OUT_General a
		left join hos_store_dict out_store on
		a.group_id = out_store.group_id
		and a.hos_id = out_store.hos_id
		and a.out_store_id = out_store.store_id
		and out_store.is_stop = 0
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join hos_store_dict in_store on
		a.in_group_id = in_store.group_id
		and a.in_hos_id = in_store.hos_id
		and a.in_store_id = in_store.store_id
		and in_store.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.allot_out_no = #{allot_out_no,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assAllotOutGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		allot_out_no,
		out_store_id,
		out_store_no,
		in_group_id,
		in_hos_id,
		in_store_id,
		in_store_no,
		price,
		add_depre,
		cur_money,
		fore_money,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note
		FROM ASS_ALLOT_OUT_General 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="allot_out_no != null and allot_out_no != ''">
		AND allot_out_no = #{allot_out_no,jdbcType=VARCHAR}
		</if>
		<if test="out_store_id != null and out_store_id != ''">
		AND out_store_id = #{out_store_id,jdbcType=INTEGER}
		</if>
		<if test="out_store_no != null and out_store_no != ''">
		AND out_store_no = #{out_store_no,jdbcType=INTEGER}
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		AND in_group_id = #{in_group_id,jdbcType=INTEGER}
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		AND in_hos_id = #{in_hos_id,jdbcType=INTEGER}
		</if>
		<if test="in_store_id != null and in_store_id != ''">
		AND in_store_id = #{in_store_id,jdbcType=INTEGER}
		</if>
		<if test="in_store_no != null and in_store_no != ''">
		AND in_store_no = #{in_store_no,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre,jdbcType=INTEGER}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money,jdbcType=INTEGER}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assAllotOutGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		allot_out_no,
		out_store_id,
		out_store_no,
		in_group_id,
		in_hos_id,
		in_store_id,
		in_store_no,
		price,
		add_depre,
		cur_money,
		fore_money,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note
		FROM ASS_ALLOT_OUT_General 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="allot_out_no != null and allot_out_no != ''">
		AND allot_out_no = #{allot_out_no,jdbcType=VARCHAR}
		</if>
		<if test="out_store_id != null and out_store_id != ''">
		AND out_store_id = #{out_store_id,jdbcType=INTEGER}
		</if>
		<if test="out_store_no != null and out_store_no != ''">
		AND out_store_no = #{out_store_no,jdbcType=INTEGER}
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		AND in_group_id = #{in_group_id,jdbcType=INTEGER}
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		AND in_hos_id = #{in_hos_id,jdbcType=INTEGER}
		</if>
		<if test="in_store_id != null and in_store_id != ''">
		AND in_store_id = #{in_store_id,jdbcType=INTEGER}
		</if>
		<if test="in_store_no != null and in_store_no != ''">
		AND in_store_no = #{in_store_no,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre,jdbcType=INTEGER}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money,jdbcType=INTEGER}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	
	<select id="collectAssAllotOutGeneral" statementType="CALLABLE"
		parameterType="java.util.Map">
		<![CDATA[ {call PKG_ASS_APP.prc_CalcDepreSingle(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{ass_year,jdbcType=VARCHAR, mode=IN},
	        #{ass_month,jdbcType=VARCHAR, mode=IN},
	        #{ass_naturs,jdbcType=VARCHAR, mode=IN},
	        #{ass_card_no,jdbcType=VARCHAR, mode=IN},
	        'B',
	        #{ass_json_str,jdbcType=VARCHAR,mode=OUT},
	        #{ass_AppCode,jdbcType=INTEGER,mode=OUT},
	        #{ass_ErrTxt,jdbcType=VARCHAR,mode=OUT}
        )} 
		 ]]>
	</select>
	
	<!-- 一般设备 资产调剂 出库 打印 主表数据查询（主页面 打印） -->
	<select id="queryAssAllotOutGeneralPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT 
			a.allot_out_no as id ,
			a.allot_out_no,
			a.out_store_id,
			a.out_store_no,
			out_store.store_code out_store_code,
			out_store.store_name out_store_name,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.in_store_id,
			a.in_store_no,
			in_store.store_code in_store_code,
			in_store.store_name in_store_name,
			to_char(a.price,'FM999,999,990.00') price,
			to_char(a.add_depre,'FM999,999,990.00') add_depre,
			to_char(a.cur_money,'FM999,999,990.00') cur_money,
			to_char(a.fore_money,'FM999,999,990.00') fore_money,
			su1.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			su2.user_name confirm_emp,
			to_char(a.audit_date,'yyyy-mm-dd') back_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state,
			a.note
		FROM ASS_ALLOT_OUT_General a
		
		left join hos_store_dict out_store 
			on
				a.group_id = out_store.group_id
				and a.hos_id = out_store.hos_id
				and a.out_store_id = out_store.store_id
				and out_store.is_stop = 0
		left join sys_group sg 
			on
				a.in_group_id = sg.group_id
		left join hos_info hi 
			on
				a.in_group_id = hi.group_id
				and a.in_hos_id = hi.hos_id
		
		left join hos_store_dict in_store 
			on
				a.in_group_id = in_store.group_id
				and a.in_hos_id = in_store.hos_id
				and a.in_store_id = in_store.store_id
				and in_store.is_stop = 0
		
		left join sys_user su1 
			on
				a.group_id = su1.group_id
				and a.hos_id = su1.hos_id
				and a.create_emp = su1.user_id
		
		left join sys_user su2 
			on
				a.group_id = su2.group_id
				and a.hos_id = su2.hos_id
				and a.audit_emp = su2.user_id
		
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.allot_out_no in (${paraId})
			order by a.allot_out_no asc
	</select>
	
	<!-- 一般设备 资产调剂 出库 打印 明细表数据查询 -->
	<select id="queryAssAllotOutGeneralPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT 
			a.allot_out_no as id ,
			a.ass_card_no,
			c.ass_id,
			c.ass_no,
			c.ass_code,
			c.ass_name,b.ass_brand,b.ass_spec,
			c.fac_id ,
			c.fac_no ,
			hfd.fac_code ,
			hfd.fac_name ,
			to_char(a.price,'FM999,999,990.00') price_detail,
			to_char(a.now_depre,'FM999,999,990.00') now_depre,
			to_char(a.now_manage_depre,'FM999,999,990.00') now_manage_depre,
			to_char(a.add_depre,'FM999,999,990.00') add_depre_detail ,
			to_char(a.add_manage_depre,'FM999,999,990.00') add_manage_depre,
			a.add_depre_month,
			to_char(a.cur_money,'FM999,999,990.00') cur_money_detail,
			to_char(a.fore_money,'FM999,999,990.00') fore_money_detail,
			a.note note_detail
		FROM ASS_ALLOT_OUT_DETAIL_General a
		
		left join ass_card_General b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_card_no = b.ass_card_no
		
		left join ass_no_dict c 
			on
				b.group_id = c.group_id
				and b.hos_id = c.hos_id
				and b.copy_code = c.copy_code 
				and b.ass_id = c.ass_id
				and c.is_stop = 0
		left join hos_fac_dict hfd
			on
				c.group_id = hfd.group_id
				and c.hos_id = hfd.hos_id
				and c.fac_id = hfd.fac_id
				and hfd.is_stop = 0
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			<if test="paraId != null and paraId != ''">
			AND a.allot_out_no in (${paraId})
			</if>
			<if test="allot_out_no != null and allot_out_no != ''">
			AND a.allot_out_no = #{allot_out_no}
			</if>
			order by a.allot_out_no asc
	</select>
	
	<!-- 一般设备 资产调剂 出库 打印 主表数据查询（修改页面 打印） -->
	<select id="queryAssAllotOutGeneralPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT 
			a.allot_out_no as id ,
			a.allot_out_no,
			a.out_store_id,
			a.out_store_no,
			out_store.store_code out_store_code,
			out_store.store_name out_store_name,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.in_store_id,
			a.in_store_no,
			in_store.store_code in_store_code,
			in_store.store_name in_store_name,
			to_char(a.price,'FM999,999,990.00') price,
			to_char(a.add_depre,'FM999,999,990.00') add_depre,
			to_char(a.cur_money,'FM999,999,990.00') cur_money,
			to_char(a.fore_money,'FM999,999,990.00') fore_money,
			su1.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			su2.user_name confirm_emp,
			to_char(a.audit_date,'yyyy-mm-dd') back_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state,
			a.note
		FROM ASS_ALLOT_OUT_General a
		
		left join hos_store_dict out_store 
			on
				a.group_id = out_store.group_id
				and a.hos_id = out_store.hos_id
				and a.out_store_id = out_store.store_id
				and out_store.is_stop = 0
		left join sys_group sg 
			on
				a.in_group_id = sg.group_id
		left join hos_info hi 
			on
				a.in_group_id = hi.group_id
				and a.in_hos_id = hi.hos_id
		
		left join hos_store_dict in_store 
			on
				a.in_group_id = in_store.group_id
				and a.in_hos_id = in_store.hos_id
				and a.in_store_id = in_store.store_id
				and in_store.is_stop = 0
		
		left join sys_user su1 
			on
				a.group_id = su1.group_id
				and a.hos_id = su1.hos_id
				and a.create_emp = su1.user_id
		
		left join sys_user su2 
			on
				a.group_id = su2.group_id
				and a.hos_id = su2.hos_id
				and a.audit_emp = su2.user_id
		
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.allot_out_no = #{allot_out_no}
			order by a.allot_out_no asc
	</select>
	
	<!-- 一般设备  资产调剂出库  出库单状态查询（打印校验数据用） -->
	<select id="queryAssAllotOutGeneralState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT allot_out_no  FROM ASS_ALLOT_OUT_General 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND allot_out_no in  (${paraId})
			</if>
			<if test="allot_out_no != null and allot_out_no != ''">
			AND allot_out_no = #{allot_out_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	
	<!--明细查询-->
	<select id="queryDetails" parameterType="java.util.Map" resultMap="assAllotOutGeneralMap">
			with detail_tmp as
							 (select a.group_id,
							         a.hos_id,
							         a.copy_code,
							         a.allot_out_no,
							         a.out_store_id,
							         a.out_store_no,
							         out_store.store_code out_store_code,
							         out_store.store_name out_store_name,
							         a.in_group_id,
							         sg.group_name in_group_name,
							         a.in_hos_id,
							         hi.hos_name in_hos_name,
							         a.in_store_id,
							         a.in_store_no,
							         in_store.store_code in_store_code,
							         in_store.store_name in_store_name,
							         b.price,
							         b.add_depre,
							         b.cur_money,
							         b.fore_money,
							         a.create_emp,
							         su1.user_name create_emp_name,
							         a.create_date,
							         a.audit_emp,
							         su2.user_name audit_emp_name,
							         a.audit_date,
							         a.state,
							         case
							           when a.state = 0 then
							            '新建'
							           when a.state = 1 then
							            '审核'
							           when a.state = 2 then
							            '出库确认'
							           else
							            ''
							         end state_name,
							         a.note,
							         b.add_manage_depre,
							         b.add_depre_month,
							         b.now_depre,
							         b.now_manage_depre,
							         b.ass_card_no,
							         d.ass_id,
							         d.ass_no,
							         d.ass_code,
							         d.ass_name
							    from ASS_ALLOT_OUT_General a
							    left join ASS_ALLOT_OUT_DETAIL_General b
							      on a.group_id = b.group_id
							     and a.hos_id = b.hos_id
							     and a.copy_code = b.copy_code
							     and a.allot_out_no = b.allot_out_no
							    left join hos_store_dict out_store
							      on a.group_id = out_store.group_id
							     and a.hos_id = out_store.hos_id
							     and a.out_store_id = out_store.store_id
							     and out_store.is_stop = 0
							  
							    left join sys_group sg
							      on a.in_group_id = sg.group_id
							  
							    left join hos_info hi
							      on a.in_group_id = hi.group_id
							     and a.in_hos_id = hi.hos_id
							  
							    left join hos_store_dict in_store
							      on a.in_group_id = in_store.group_id
							     and a.in_hos_id = in_store.hos_id
							     and a.in_store_id = in_store.store_id
							     and in_store.is_stop = 0
							  
							    left join sys_user su1
							      on a.group_id = su1.group_id
							     and a.hos_id = su1.hos_id
							     and a.create_emp = su1.user_id
							  
							    left join sys_user su2
							      on a.group_id = su2.group_id
							     and a.hos_id = su2.hos_id
							     and a.audit_emp = su2.user_id
							    left join ass_card_General c
							      on b.group_id = c.group_id
							     and b.hos_id = c.hos_id
							     and b.copy_code = c.copy_code
							     and b.ass_card_no = c.ass_card_no
							  
							    left join ass_no_dict d
							      on c.group_id = d.group_id
							     and c.hos_id = d.hos_id
							     and c.copy_code = d.copy_code
							     and c.ass_id = d.ass_id
							     and d.is_stop = 0
							  <where>                     
									<if test="group_id != null and group_id != ''">
									AND a.group_id = #{group_id}
									</if>
									<if test="hos_id != null and hos_id != ''">
									AND a.hos_id = #{hos_id}
									</if>
									<if test="copy_code != null and copy_code != ''">
									AND a.copy_code = #{copy_code}
									</if>
									<if test="allot_out_no != null and allot_out_no != ''">
									AND a.allot_out_no = #{allot_out_no}
									</if>
									<if test="out_store_id != null and out_store_id != ''">
									AND a.out_store_id = #{out_store_id}
									</if>
									<if test="out_store_no != null and out_store_no != ''">
									AND a.out_store_no = #{out_store_no}
									</if>
									<if test="in_group_id != null and in_group_id != ''">
									AND a.in_group_id = #{in_group_id}
									</if>
									<if test="in_hos_id != null and in_hos_id != ''">
									AND a.in_hos_id = #{in_hos_id}
									</if>
									<if test="in_store_id != null and in_store_id != ''">
									AND a.in_store_id = #{in_store_id}
									</if>
									<if test="in_store_no != null and in_store_no != ''">
									AND a.in_store_no = #{in_store_no}
									</if>
									<if test="price != null and price != ''">
									AND a.price = #{price}
									</if>
									<if test="add_depre != null and add_depre != ''">
									AND a.add_depre = #{add_depre}
									</if>
									<if test="cur_money != null and cur_money != ''">
									AND a.cur_money = #{cur_money}
									</if>
									<if test="fore_money != null and fore_money != ''">
									AND a.fore_money = #{fore_money}
									</if>
									<if test="create_emp != null and create_emp != ''">
									AND a.create_emp = #{create_emp}
									</if>
									<if test="create_date_beg != null and create_date_beg != ''">
									AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
									</if>
									<if test="create_date_end != null and create_date_end != ''">
									AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
									</if>
									<if test="audit_emp != null and audit_emp != ''">
									AND a.audit_emp = #{audit_emp}
									</if>
									<if test="audit_date_beg != null and audit_date_beg != ''">
									AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
									</if>
									<if test="audit_date_end != null and audit_date_end != ''">
									AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
									</if>
									<if test="state != null and state != ''">
									AND a.state = #{state}
									</if>
									<if test="note != null and note != ''">
									AND a.note = #{note}
									</if>
								</where>   
							  ),
							sum_tmp as
							 (select null group_id,
							         null hos_id,
							         null copy_code,
							         null allot_out_no,
							         null out_store_id,
							         null out_store_no,
							         null out_store_code,
							         null out_store_name,
							         null in_group_id,
							         null in_group_name,
							         null in_hos_id,
							         null in_hos_name,
							         null in_store_id,
							         null in_store_no,
							         null in_store_code,
							         null in_store_name,
							         sum(price) price,
							         sum(add_depre) add_depre,
							         sum(cur_money) cur_money,
							         sum(fore_money) fore_money,
							         null create_emp,
							         null create_emp_name,
							         null create_date,
							         null audit_emp,
							         null audit_emp_name,
							         null audit_date,
							         null state,
							         null state_name,
							         '合计' note,
							         sum(add_manage_depre) add_manage_depre,
							         null add_depre_month,
							         sum(now_depre) now_depre,
							         sum(now_manage_depre) now_manage_depre,
							         null ass_card_no,
							         null ass_id,
							         null ass_no,
							         null ass_code,
							         null ass_name
							    from detail_tmp)
							
							select group_id,
							       hos_id,
							       copy_code,
							       allot_out_no,
							       out_store_id,
							       out_store_no,
							       out_store_code,
							       out_store_name,
							       in_group_id,
							       in_group_name,
							       in_hos_id,
							       in_hos_name,
							       in_store_id,
							       in_store_no,
							       in_store_code,
							       in_store_name,
							       price,
							       add_depre,
							       cur_money,
							       fore_money,
							       create_emp,
							       create_emp_name,
							       create_date,
							       audit_emp,
							       audit_emp_name,
							       audit_date,
							       state,
							       state_name,
							       note,
							       add_manage_depre,
							       add_depre_month,
							       now_depre,
							       now_manage_depre,
							       ass_card_no,
							       ass_id,
							       ass_no,
							       ass_code,
							       ass_name
							  from detail_tmp
							union all
							select group_id,
							       hos_id,
							       copy_code,
							       allot_out_no,
							       out_store_id,
							       out_store_no,
							       out_store_code,
							       out_store_name,
							       in_group_id,
							       in_group_name,
							       in_hos_id,
							       in_hos_name,
							       in_store_id,
							       in_store_no,
							       in_store_code,
							       in_store_name,
							       price,
							       add_depre,
							       cur_money,
							       fore_money,
							       create_emp,
							       create_emp_name,
							       create_date,
							       audit_emp,
							       audit_emp_name,
							       audit_date,
							       state,
							       state_name,
							       note,
							       add_manage_depre,
							       add_depre_month,
							       now_depre,
							       now_manage_depre,
							       ass_card_no,
							       ass_id,
							       ass_no,
							       ass_code,
							       ass_name
							  from sum_tmp
							
							 order by allot_out_no desc
			
	
	
	</select>
</mapper>

