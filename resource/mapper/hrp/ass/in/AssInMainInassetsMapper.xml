<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.in.AssInMainInassetsMapper">  
	
	<resultMap id="assInMainInassets" type="com.chd.hrp.ass.entity.in.AssInMainInassets">  
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="purc_emp" column="purc_emp"/> 
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="ass_purpose" column="ass_purpose"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="invoice_no" column="invoice_no"/>
	<result property="invoice_date" column="invoice_date"/>
	<result property="pact_code" column="pact_code"/>
	</resultMap>
		
	<resultMap id="assInMainInassetsMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_code" column="ven_code"/>
	<result property="ven_name" column="ven_name"/>
	<result property="purc_emp" column="purc_emp"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="ass_purpose" column="ass_purpose"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="ass_brand" column="ass_brand"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_no" column="fac_no"/>
	<result property="fac_code" column="fac_code"/>
	<result property="fac_name" column="fac_name"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="in_amount" column="in_amount"/>
	<result property="price" column="price"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="invoice_no" column="invoice_no"/>
	<result property="invoice_date" column="invoice_date"/>
	<result property="pact_code" column="pact_code"/>
	</resultMap>
	
	<resultMap  id="assInMainInassetsDetailMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_spec" column="ass_spec"/>
	<result property="ass_model" column="ass_model"/>
	<result property="price" column="price"/>
	<result property="now_depre" column="now_depre"/>
	<result property="now_manage_depre" column="now_manage_depre"/>
	<result property="depre_money" column="depre_money"/>
	<result property="add_depre" column="add_depre"/>
	<result property="manage_depre_money" column="manage_depre_money"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="note" column="note"/>
	<result property="stage_no" column="stage_no"/>
	<result property="stage_name" column="stage_name"/>
	<result property="pay_plan_money" column="pay_plan_money"/>
	<result property="pact_code" column="pact_code"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_IN_MAIN_INASSETS (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		ass_in_no
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no
		,
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		purc_emp
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		ass_purpose
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		proj_id
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		proj_no
		,
		</if>
		<if test="in_money != null and in_money != ''">
		in_money
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		invoice_no
		,
		</if>
		<if test="invoice_date != null and invoice_date != ''">
		invoice_date
		,
		</if>
		<if test="pact_code != null and pact_code != ''">
		pact_code
		,
		</if>
		
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		to_number(#{group_id})
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		to_number(#{hos_id})
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		#{ass_in_no}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		to_number(#{store_id})
		,
		</if>
		<if test="store_no != null and store_no != ''">
		to_number(#{store_no})
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		to_number(#{ven_id})
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		to_number(#{ven_no})
		,
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		to_number(#{purc_emp})
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		to_number(#{dept_id})
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		to_number(#{dept_no})
		,
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		#{ass_purpose}
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		to_number(#{proj_id})
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		to_number(#{proj_no})
		,
		</if>
		<if test="in_money != null and in_money != ''">
		to_number(#{in_money})
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		,
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		#{invoice_no}
		,
		</if>
		<if test="invoice_date != null and invoice_date != ''">
		to_date(#{invoice_date},'YYYY-MM-DD')
		,
		</if>
		<if test="pact_code != null and pact_code != ''">
		#{pact_code}
		,
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_IN_MAIN_INASSETS (
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_in_no
		,
		store_id
		,
		store_no
		,
		ven_id
		,
		ven_no
		,
		purc_emp
		,
		dept_id
		,
		dept_no
		,
		ass_purpose
		,
		proj_id
		,
		proj_no
		,
		in_money
		,
		note
		,
		create_emp
		,
		create_date
		,
		state
		,
		invoice_no
		,
		invoice_date
		,
		pact_code
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.ass_in_no}
			,
			#{item.store_id}
			,
			#{item.store_no}
			,
			#{item.ven_id}
			,
			#{item.ven_no}
			,
			#{item.purc_emp}
			,
			#{item.dept_id}
			,
			#{item.dept_no}
			,
			#{item.ass_purpose}
			,
			#{item.proj_id}
			,
			#{item.proj_no}
			,
			#{item.in_money}
			,
			#{item.note}
			,
			#{item.create_emp}
			,
			#{item.create_date}
			,
			#{item.state}
			,
			#{item.invoice_no}
			,
			#{item.invoice_date}
			,
			#{item.pact_code}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_in_main_inassets 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="store_id != null and store_id != ''">
		store_id = #{store_id}
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no = #{store_no}
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id = #{ven_id}
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no = #{ven_no}
		,
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		purc_emp = #{purc_emp}
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id = #{dept_id}
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no = #{dept_no}
		,
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		ass_purpose = #{ass_purpose}
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		proj_id = #{proj_id}
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		proj_no = #{proj_no}
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		invoice_no = #{invoice_no}
		,
		</if>
		<if test="invoice_date != null and invoice_date != ''">
		invoice_date = to_date(#{invoice_date},'YYYY-MM-DD')
		,
		</if>
		<if test="pact_code != null and pact_code != ''">
		pact_code = #{pact_code}
		,
		</if>
		
		<if test="store_id == null or store_id == ''">
		store_id = null
		,
		</if>
		<if test="store_no == null or store_no == ''">
		store_no = null
		,
		</if>
		<if test="ven_id == null or ven_id == ''">
		ven_id = null
		,
		</if>
		<if test="ven_no == null or ven_no == ''">
		ven_no = null
		,
		</if>
		<if test="purc_emp == null or purc_emp == ''">
		purc_emp = null
		,
		</if>
		<if test="dept_id == null or dept_id == ''">
		dept_id = null
		,
		</if>
		<if test="dept_no == null or dept_no == ''">
		dept_no = null
		,
		</if>
		<if test="ass_purpose == null or ass_purpose == ''">
		ass_purpose = null
		,
		</if>
		<if test="proj_id == null or proj_id == ''">
		proj_id = null
		,
		</if>
		<if test="proj_no == null or proj_no == ''">
		proj_no = null
		,
		</if>
		<if test="note == null or note == ''">
		note = null
		,
		</if>
		<if test="pact_code == null or pact_code == ''">
		pact_codepact_code = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		</where>  
	</update>
	
	<update id="updateInMoney" parameterType="java.util.Map">
	
		UPDATE ass_in_main_inassets 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="in_money != null and in_money != ''">
		in_money = #{in_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_main_inassets  set
			state = 2,
			confirm_emp = #{item.confirm_emp},
			in_date = to_date(#{item.in_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_main_inassets  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_main_inassets  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_main_inassets 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no}
			,
			</if>
			<if test="item.ven_id != null and item.ven_id != ''">
			ven_id = #{item.ven_id}
			,
			</if>
			<if test="item.ven_no != null and item.ven_no != ''">
			ven_no = #{item.ven_no}
			,
			</if>
			<if test="item.purc_emp != null and item.purc_emp != ''">
			purc_emp = #{item.purc_emp}
			,
			</if>
			<if test="item.dept_id != null and item.dept_id != ''">
			dept_id = #{item.dept_id}
			,
			</if>
			<if test="item.dept_no != null and item.dept_no != ''">
			dept_no = #{item.dept_no}
			,
			</if>
			<if test="item.ass_purpose != null and item.ass_purpose != ''">
			ass_purpose = #{item.ass_purpose}
			,
			</if>
			<if test="item.proj_id != null and item.proj_id != ''">
			proj_id = #{item.proj_id}
			,
			</if>
			<if test="item.proj_no != null and item.proj_no != ''">
			proj_no = #{item.proj_no}
			,
			</if>
			<if test="item.in_money != null and item.in_money != ''">
			in_money = #{item.in_money}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note}
			,
			</if>
			<if test="item.create_emp != null and item.create_emp != ''">
			create_emp = #{item.create_emp}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.ass_in_no != null and item.ass_in_no != ''">
			AND ass_in_no = #{item.ass_in_no}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_in_main_inassets 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_in_main_inassets 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code}
				</if>
				<if test="item.ass_in_no != null and item.ass_in_no != ''">
				AND ass_in_no = #{item.ass_in_no}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assInMainInassets" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			a.purc_emp,
			su1.emp_name purc_emp_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.invoice_no,
			a.invoice_date,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="user_id != null and  user_id != ''">
          	and exists (
				select 1 from v_user_data_perm b where
				a.group_id=b.group_id 
				and a.hos_id=b.hos_id 
				and to_char(a.store_id) = b.perm_code
				and user_id=#{user_id}
				AND TABLE_CODE = upper('hos_store_dict')
				and  b.is_write = 1
				
	          	union all
	          	
	          	select 1 from v_user_data_perm b where
				a.group_id=b.group_id 
				and a.hos_id=b.hos_id 
				and to_char(a.store_id) = b.perm_code
				and user_id=#{user_id}
				AND TABLE_CODE = upper('hos_store_dict')
				and b.is_read = 1
          	)
		  	</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		AND a.purc_emp = #{purc_emp}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND a.invoice_no = #{invoice_no}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND a.pact_code = #{pact_code}
		</if>
		<if test="ass_name != null and ass_name != ''">
		and  exists (select 1 from ass_in_detail_INASSETS ab
				left join ass_no_dict ac
			      on ab.group_id = ac.group_id
			     and ab.hos_id = ac.hos_id
			     and ab.copy_code = ac.copy_code
			     and ab.ass_id = ac.ass_id
			     and ac.is_stop = 0
			     where 
			      a.group_id = ab.group_id
		          and a.hos_id = ab.hos_id
		          and a.copy_code = ab.copy_code
			      and a.ass_in_no = ab.ass_in_no
				     and (
					ac.ass_code like '%${ass_name}%' or
					ac.ass_name like
					'%${ass_name}%'
					or
					ac.spell_code like '%${ass_name}%' or
					ac.wbx_code like
					'%${ass_name}%' or
					ab.ass_spec  like '%${ass_name}%'
					)
		
		
		 )
		</if>
		</where>   
		union all
		
		SELECT 
			null group_id,
			null hos_id,
			null copy_code,
			null ass_in_no,
			null store_id,
			null store_no,
			null store_code,
			null store_name,
			null ven_id,
			null ven_no,
			null sup_code,
			null sup_name,
			null purc_emp,
			null purc_emp_name,
			null dept_id,
			null dept_no,
			null dept_code,
			null dept_name,
			null ass_purpose,
			null ass_purpose_name,
			null proj_id,
			null proj_no,
			null proj_code,
			null proj_name,
			sum(a.in_money) in_money,
			'合计' note,
			null create_emp,
			null create_emp_name,
			null create_date,
			null in_date,
			null confirm_emp,
			null confirm_emp_name,
			null state,
			'' state_name,
			null invoice_no,
			null invoice_date,
			null pact_code
			FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="user_id != null and  user_id != ''">
          	and exists (
				select 1 from v_user_data_perm b where
				a.group_id=b.group_id 
				and a.hos_id=b.hos_id 
				and to_char(a.store_id) = b.perm_code
				and user_id=#{user_id}
				AND TABLE_CODE = upper('hos_store_dict')
				and  b.is_write = 1
				
	          	union all
	          	
	          	select 1 from v_user_data_perm b where
				a.group_id=b.group_id 
				and a.hos_id=b.hos_id 
				and to_char(a.store_id) = b.perm_code
				and user_id=#{user_id}
				AND TABLE_CODE = upper('hos_store_dict')
				and b.is_read = 1
          	)
		  	</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		AND a.purc_emp = #{purc_emp}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND a.invoice_no = #{invoice_no}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND a.pact_code = #{pact_code}
		</if>
		<if test="ass_name != null and ass_name != ''">
		and  exists (select 1 from ass_in_detail_INASSETS ab
				left join ass_no_dict ac
			      on ab.group_id = ac.group_id
			     and ab.hos_id = ac.hos_id
			     and ab.copy_code = ac.copy_code
			     and ab.ass_id = ac.ass_id
			     and ac.is_stop = 0
			     where 
			      a.group_id = ab.group_id
		          and a.hos_id = ab.hos_id
		          and a.copy_code = ab.copy_code
			      and a.ass_in_no = ab.ass_in_no
				     and (
					ac.ass_code like '%${ass_name}%' or
					ac.ass_name like
					'%${ass_name}%'
					or
					ac.spell_code like '%${ass_name}%' or
					ac.wbx_code like
					'%${ass_name}%' or
					ab.ass_spec  like '%${ass_name}%'
					)
		
		
		 )
		</if>
		</where>  ) t
		
		order by t.create_date desc
	</select>
	
	
	<select id="queryByInitOut" parameterType="java.util.Map" resultMap="assInMainInassets" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			a.purc_emp,
			su1.emp_name purc_emp_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			a.invoice_no,
			a.invoice_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		<where>
		AND a.dept_id is not null   
		AND a.state = 2     
		AND not exists (select 1 from ass_in_out_map_INASSETS  abpm
						where
						abpm.group_id = a.group_id
						AND abpm.hos_id = a.hos_id
						AND abpm.copy_code = a.copy_code
						and abpm.ass_in_no = a.ass_in_no
						and abpm.bill_type = #{bill_type}
						) 
		and not exists (
          select 1
          from ass_in_back_map_INASSETS abps
          where abps.group_id = a.group_id
            and abps.hos_id = a.hos_id
            and abps.copy_code = a.copy_code
            and abps.ass_in_no = a.ass_in_no
        )				         
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="ass_in_nos != null and ass_in_nos != ''">
		AND a.ass_in_no in (${ass_in_nos})
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND a.ven_no = #{ven_no}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND a.invoice_no = #{invoice_no}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND a.pact_code = #{pact_code}
		</if>
		
		</where>   
		 ) t
		order by t.create_date desc
	</select>
	
	
	<select id="queryInMainByOutNo" parameterType="java.util.Map" resultMap="assInMainInassets" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			a.purc_emp,
			su1.emp_name purc_emp_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			a.invoice_no,
			a.invoice_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		left join ass_in_out_map_INASSETS abpm on
		a.group_id = abpm.group_id
		and a.hos_id = abpm.hos_id
		and a.copy_code = abpm.copy_code
		and a.ass_in_no = abpm.ass_in_no
		
		<where>
		AND a.group_id = #{group_id}
		AND a.hos_id = #{hos_id}
		AND a.copy_code = #{copy_code}
		and abpm.out_no = #{out_no}
		</where>   
		 ) t
		order by t.create_date desc
	</select>
	
	
	<select id="queryByCode" resultMap="assInMainInassets"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			a.purc_emp,
			su1.emp_code||' '||su1.emp_name purc_emp_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			a.invoice_no,
			a.invoice_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		WHERE 
		a.group_id = #{group_id}   and 
		a.hos_id = #{hos_id}   and 
		a.copy_code = #{copy_code}   and 
		a.ass_in_no = #{ass_in_no} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assInMainInassets"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		store_id,
		store_no,
		ven_id,
		ven_no,
		purc_emp,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		invoice_no,
		invoice_date,
		state,
		pact_code
		FROM ASS_IN_MAIN_INASSETS 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no}
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		AND purc_emp = #{purc_emp}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		</where>   
		order by create_date desc
	</select>
	<select id="queryExists" resultMap="assInMainInassets"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		store_id,
		store_no,
		ven_id,
		ven_no,
		purc_emp,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		invoice_no,
		invoice_date,
		state,
		pact_code
		FROM ASS_IN_MAIN_INASSETS 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no}
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		AND purc_emp = #{purc_emp}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		</where>   
		order by create_date desc
	</select>
	
	<!-- 主页面  批量打印  其他无形资产 入库主表数据查询 -->
	<select id="queryAssInassetsPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.ass_in_no as id ,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			su1.emp_name purc_emp,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			aud.equi_usage_name ass_purpose,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			to_char(a.in_money,'FM999,999,990.00') in_money,
			t_m.in_amount amount_sum,
			a.note,
			a.invoice_no,
			a.invoice_date,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.in_date,'yyyy-mm-dd') in_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		left join (
			select t.group_id,t.hos_id,t.copy_code,t.ass_in_no,sum(t.in_amount) in_amount from ass_in_detail_INASSETS t
			where t.group_id = #{group_id}
			AND t.hos_id = #{hos_id}
			AND t.copy_code = #{copy_code}
			AND t.ass_in_no in (${paraId})
			group by t.group_id,t.hos_id,t.copy_code,t.ass_in_no
		) t_m on 
		a.group_id = t_m.group_id
		and a.hos_id = t_m.hos_id
		and a.copy_code = t_m.copy_code
		and a.ass_in_no = t_m.ass_in_no
		
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.ass_in_no in (${paraId})
		order by a.create_date desc	
	</select>
		
	<!-- 修改页面 打印  其他无形资产 入库主表数据查询 -->
	<select id="queryAssInassetsPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			su1.emp_name purc_emp,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			aud.equi_usage_name ass_purpose,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			to_char(a.in_money,'FM999,999,990.00') in_money,
			t_m.in_amount amount_sum,
			a.note,
			a.invoice_no,
			a.invoice_date,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.in_date,'yyyy-mm-dd') in_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		left join (
			select t.group_id,t.hos_id,t.copy_code,t.ass_in_no,sum(t.in_amount) in_amount from ass_in_detail_INASSETS t
			where t.group_id = #{group_id}
			AND t.hos_id = #{hos_id}
			AND t.copy_code = #{copy_code}
			AND t.ass_in_no = #{ass_in_no}
			group by t.group_id,t.hos_id,t.copy_code,t.ass_in_no
		) t_m on 
		a.group_id = t_m.group_id
		and a.hos_id = t_m.hos_id
		and a.copy_code = t_m.copy_code
		and a.ass_in_no = t_m.ass_in_no
		
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.ass_in_no = #{ass_in_no}
		order by a.create_date asc	
	</select>
	
	<!-- 其他无形资产 入库明细表数据查询 -->
	<select id="queryAssInassetsPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		with d_main as
 		(select t5.ass_in_no as id,
         t5.ass_id,
         b.ass_code ass_no,
         b.ass_name,
         t5.ass_spec,
         t5.ass_model,
         t5.ass_brand,
         c.fac_code fac_no,
         c.fac_name,
         hu.unit_name unit_code,
         t5.in_amount,
         atd.ass_type_name,
         to_char(t5.price, 'FM999,999,990.00') price,
         t5.note as note_detail,
         to_char(t5.price * t5.in_amount, 'FM999,999,990.00') price_sum,
         to_char(zc_price, 'FM999,999,990.00') zc_price,
         to_char(cz_price, 'FM999,999,990.00') cz_price,
         to_char(ky_price, 'FM999,999,990.00') ky_price,
         to_char(jx_price, 'FM999,999,990.00') jx_price,
         case
           when zc_price is not null then
            '其他资金=' || to_char(zc_price, 'FM999,999,990.00')
         end || case
           when cz_price is not null then
            '财政资金=' || to_char(cz_price, 'FM999,999,990.00')
         end || case
           when ky_price is not null then
            '|科研资金=' || to_char(ky_price, 'FM999,999,990.00')
         end || case
           when jx_price is not null then
            '|教学资金=' || to_char(jx_price, 'FM999,999,990.00')
         end source_price
    from (select t3.source_id,
                 t3.group_id,
                 t3.hos_id,
                 t3.copy_code,
                 sum(t3.price) sum_price,
                 sum(t2.price) price_sum,
                 t2.ass_id,
                 t2.ass_no,
                 t2.ass_in_no
            from ass_card_INASSETS t2
            left join ass_resource_INASSETS t3
              on t3.ass_card_no = t2.ass_card_no
             and t3.group_id = t2.group_id
             and t3.hos_id = t3.hos_id
             and t3.copy_code = t2.copy_code
           where 
            t2.group_id = #{group_id,jdbcType=INTEGER}
            AND t2.hos_id = #{hos_id,jdbcType=INTEGER}
            AND t2.copy_code = #{copy_code,jdbcType=VARCHAR}
            <if test="paraId != null and paraId != ''">
            AND t2.ass_in_no in  (${paraId})
            </if>
            <if test="ass_in_no != null and ass_in_no != ''">
            AND t2.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
            </if>
           
           group by t3.source_id,
                    t2.ass_id,
                    t2.ass_no,
                    t3.group_id,
                    t3.hos_id,
                    t2.ass_in_no,
                    t3.copy_code) pivot(sum(sum_price) as price for source_id in('1' as ZC,
                                                                                 '2' as CZ,
                                                                                 '3' as KY,
                                                                                 '4' as JX)) t
    left join ass_in_detail_INASSETS t5
      on t.ass_id = t5.ass_id
     and t5.group_id = t.group_id
     and t5.hos_id = t.hos_id
     and t5.copy_code = t.copy_code
     and t5.ass_in_no = t.ass_in_no
    left join ass_no_dict b
      on t5.group_id = b.group_id
     and t5.hos_id = b.hos_id
     and t5.copy_code = b.copy_code
     and t5.ass_id = b.ass_id
     and b.is_stop = 0
    left join ass_type_dict atd
      on b.group_id = atd.group_id
     and b.hos_id = atd.hos_id
     and b.copy_code = atd.copy_code
     and b.ass_type_id = atd.ass_type_id
    left join hos_fac_dict c
      on t5.group_id = c.group_id
     and t5.hos_id = c.hos_id
     and t5.fac_id = c.fac_id
     and c.is_stop = 0
    left join hos_unit hu
      on t5.group_id = hu.group_id
     and t5.hos_id = hu.hos_id
     and t5.unit_code = hu.unit_code
     and hu.is_stop = 0
   where 
     t5.group_id = #{group_id,jdbcType=INTEGER}
			AND t5.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t5.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND t5.ass_in_no in  (${paraId})
			</if>
			<if test="ass_in_no != null and ass_in_no != ''">
			AND t5.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
			</if>
   
   group by t5.ass_in_no,
            b.ass_code,
            t5.ass_id,
            b.ass_name,
            t5.ass_spec,
            t5.ass_model,
            t5.ass_brand,
            c.fac_code,
            c.fac_name,
            hu.unit_name,
            t5.in_amount,
            atd.ass_type_name,
            t5.price,
            t5.note,
            price_sum,
            zc_price,
            cz_price,
            ky_price,
            jx_price
   order by t5.ass_in_no asc),
		str_card_no_l as
		 (select *
		    from (select ass_in_no,
		                 ass_id,
		                 ASS_SPEC,
		                 ASS_MONDL,
		                 max(substr(ass_card_no,
		                            greatest(-4, -length(ass_card_no)),
		                            4)) ass_cards
		            from ass_card_INASSETS
		           where 
		                            group_id = #{group_id,jdbcType=INTEGER}
		                      AND hos_id = #{hos_id,jdbcType=INTEGER}
		                      AND copy_code = #{copy_code,jdbcType=VARCHAR}                                                                        
		                     <if test="paraId != null and paraId != ''">
		                     AND ass_in_no in  (${paraId})
		                     </if>
		                     <if test="ass_in_no != null and ass_in_no != ''">
		                     AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		                     </if>
		           
		           group by ass_in_no, ass_id, ass_id, ASS_SPEC, ASS_MONDL) t
		  
		  ),
		str_card_no_m as
		 (select *
		    from (select ass_in_no,
		                 ass_id,
		                 ASS_SPEC,
		                 ASS_MONDL,
		                 min(substr(ass_card_no,
		                            greatest(-4, -length(ass_card_no)),
		                            4)) ass_cards
		            from ass_card_INASSETS
		           where 
		            group_id = #{group_id,jdbcType=INTEGER}
		                      AND hos_id = #{hos_id,jdbcType=INTEGER}
		                      AND copy_code = #{copy_code,jdbcType=VARCHAR}                                                                        
		                     <if test="paraId != null and paraId != ''">
		                     AND ass_in_no in  (${paraId})
		                     </if>
		                     <if test="ass_in_no != null and ass_in_no != ''">
		                     AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		                     </if>
		           
		           group by ass_in_no, ass_id, ass_id, ASS_SPEC, ASS_MONDL) t),
		str_card_no_s as
		 (select ass_in_no,
		         ass_id,
		         ass_spec,
		         ass_mondl,
		         substr(ass_cards, 0, length(ass_cards) - 4) ass_cards
		    from (select ass_in_no,
		                 ass_id,
		                 ASS_SPEC,
		                 ASS_MONDL,
		                 max(ass_card_no) ass_cards
		            from ass_card_INASSETS
		           where 
		            group_id = #{group_id,jdbcType=INTEGER}
		                      AND hos_id = #{hos_id,jdbcType=INTEGER}
		                      AND copy_code = #{copy_code,jdbcType=VARCHAR}                                                                        
		                     <if test="paraId != null and paraId != ''">
		                     AND ass_in_no in  (${paraId})
		                     </if>
		                     <if test="ass_in_no != null and ass_in_no != ''">
		                     AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		                     </if>
		           
		           group by ass_in_no, ass_id, ass_id, ASS_SPEC, ASS_MONDL
		          
		          ) t
		  
		  )
		select t1.ass_cards || 
				case when t3.ass_cards = t2.ass_cards then t2.ass_cards else
				t3.ass_cards || '-' || t2.ass_cards end ass_card_nos, t.*
		  from d_main t
		  left join str_card_no_s t1
		    on t.id = t1.ass_in_no and t.ass_id = t1.ass_id and t.ASS_SPEC = t1.ASS_SPEC and t.ass_model = t1.ass_mondl
		  left join str_card_no_l t2
		    on t.id = t2.ass_in_no and t.ass_id = t2.ass_id and t.ASS_SPEC = t2.ASS_SPEC and t.ass_model = t2.ass_mondl
		  left join str_card_no_m t3
		    on t.id = t3.ass_in_no and t.ass_id = t3.ass_id and t.ASS_SPEC = t3.ASS_SPEC and t.ass_model = t3.ass_mondl
	</select>
	
	<!-- 入库单状态查询  （打印时校验数据专用） -->
	<select id="queryAssInassetsState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT ass_in_no  FROM ASS_IN_MAIN_INASSETS 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND ass_in_no in  (${paraId})
			</if>
			<if test="ass_in_no != null and ass_in_no != ''">
			AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	
	<!-- 明细查询 -->
	<select id="queryDetails" parameterType="java.util.Map" resultMap="assInMainInassetsMap">
	with detail_tmp as
					 (select a.group_id,
					         a.hos_id,
					         a.copy_code,
					         a.ass_in_no,
					         a.store_id,
					         a.store_no,
					         f.store_code,
					         f.store_name,
					         a.ven_id,
					         a.ven_no,
					         g.sup_code    ven_code,
					         g.sup_name    ven_name,
					         a.purc_emp,
					         a.dept_id,
					         a.dept_no,
					         h.dept_code,
					         h.dept_name,
					         a.ass_purpose,
					         a.proj_id,
					         a.proj_no,
					         i.proj_code,
					         i.proj_name,
					         a.in_money,
					         a.note,
					         k2.user_name  create_emp_name,
					         k3.user_name  confirm_emp_name,
					         a.state,
					         case
					           when a.state = 0 then
					            '新建'
					           when a.state = 1 then
					            '审核'
					           when a.state = 2 then
					            '入库确认'
					           else
					            ''
					         end state_name,
					         a.in_date,
					         a.create_date,
					         a.confirm_emp,
					         a.create_emp,
					         b.ass_id,
					         b.ass_no,
					         c.ass_code,
					         c.ass_name,
					         
					         b.ass_brand,
					         b.fac_id,
					         b.fac_no,
					         d.fac_code,
					         d.fac_name,
					         b.unit_code,
					         e.unit_name,
					         b.in_amount,
					         b.price,
					         a.invoice_no,
					         a.invoice_date,
					         b.note      note_detail,
					         a.pact_code
					    from ASS_IN_MAIN_inassets a
					    left join ass_in_detail_inassets b
					      on a.group_id = b.group_id
					     and a.hos_id = b.hos_id
					     and a.copy_code = b.copy_code
					     and a.ass_in_no = b.ass_in_no
					    left join ass_no_dict c
					      on b.group_id = c.group_id
					     and b.hos_id = c.hos_id
					     and b.copy_code = c.copy_code
					     and b.ass_id = c.ass_id
					     and c.is_stop = 0
					    left join hos_fac_dict d
					      on d.group_id = b.group_id
					     and d.hos_id = b.hos_id
					     and d.fac_id = b.fac_id
					     and d.is_stop = 0
					    left join hos_unit e
					      on e.group_id = b.group_id
					     and e.hos_id = b.hos_id
					     and e.unit_code = b.unit_code
					     and e.is_stop = 0
					    left join hos_store_dict f
					      on f.group_id = a.group_id
					     and f.hos_id = a.hos_id
					     and f.store_id = a.store_id
					     and f.is_stop = 0
					    left join hos_sup_dict g
					      on g.group_id = a.group_id
					     and g.hos_id = a.hos_id
					     and g.sup_id = a.ven_id
					     and g.is_stop = 0
					    left join hos_dept_dict h
					      on h.group_id = a.group_id
					     and h.hos_id = a.hos_id
					     and h.dept_id = a.dept_id
					     and h.is_stop = 0
					    left join hos_proj_dict i
					      on i.group_id = a.group_id
					     and i.hos_id = a.hos_id
					     and i.proj_id = a.proj_id
					     and i.is_stop = 0
					    left join hos_emp_dict k
					      on k.group_id = a.group_id
					     and k.hos_id = a.hos_id
					     and k.emp_id = a.purc_emp
					     and k.is_stop = 0
					    left join sys_user k2
					      on k2.group_id = a.group_id
					     and k2.hos_id = a.hos_id
					     and k2.user_id = a.create_emp
					    left join sys_user k3
					      on k3.group_id = a.group_id
					     and k3.hos_id = a.hos_id
					     and k3.user_id = a.confirm_emp
					    left join ass_usage_dict m
					      on m.group_id = a.group_id
					     and m.hos_id = a.hos_id
					     and m.copy_code = a.copy_code
					     and m.equi_usage_code = a.ass_purpose
					  		<where>                     
							<if test="group_id != null and group_id != ''">
							AND a.group_id = #{group_id}
							</if>
							<if test="hos_id != null and hos_id != ''">
							AND a.hos_id = #{hos_id}
							</if>
							<if test="copy_code != null and copy_code != ''">
							AND a.copy_code = #{copy_code}
							</if>
							<if test="user_id != null and  user_id != ''">
				          	and exists (
								select 1 from v_user_data_perm b where
								a.group_id=b.group_id 
								and a.hos_id=b.hos_id 
								and to_char(a.store_id) = b.perm_code
								and user_id=#{user_id}
								AND TABLE_CODE = upper('hos_store_dict')
								and  b.is_write = 1
								
					          	union all
					          	
					          	select 1 from v_user_data_perm b where
								a.group_id=b.group_id 
								and a.hos_id=b.hos_id 
								and to_char(a.store_id) = b.perm_code
								and user_id=#{user_id}
								AND TABLE_CODE = upper('hos_store_dict')
								and b.is_read = 1
				          	)
						  	</if>
							<if test="ass_in_no != null and ass_in_no != ''">
							AND a.ass_in_no = #{ass_in_no}
							</if>
							<if test="store_id != null and store_id != ''">
							AND a.store_id = #{store_id}
							</if>
							<if test="store_no != null and store_no != ''">
							AND a.store_no = #{store_no}
							</if>
							<if test="ven_id != null and ven_id != ''">
							AND a.ven_id = #{ven_id}
							</if>
							<if test="ven_no != null and ven_no != ''">
							AND a.ven_no = #{ven_no}
							</if>
							<if test="purc_emp != null and purc_emp != ''">
							AND a.purc_emp = #{purc_emp}
							</if>
							<if test="dept_id != null and dept_id != ''">
							AND a.dept_id = #{dept_id}
							</if>
							<if test="dept_no != null and dept_no != ''">
							AND a.dept_no = #{dept_no}
							</if>
							<if test="ass_purpose != null and ass_purpose != ''">
							AND a.ass_purpose = #{ass_purpose}
							</if>
							<if test="proj_id != null and proj_id != ''">
							AND a.proj_id = #{proj_id}
							</if>
							<if test="proj_no != null and proj_no != ''">
							AND a.proj_no = #{proj_no}
							</if>
							<if test="in_money != null and in_money != ''">
							AND a.in_money = #{in_money}
							</if>
							<if test="note != null and note != ''">
							AND a.note = #{note}
							</if>
							<if test="create_emp != null and create_emp != ''">
							AND a.create_emp = #{create_emp}
							</if>
							<if test="create_date != null and create_date != ''">
							AND a.create_date = #{create_date}
							</if>
							<if test="in_date != null and in_date != ''">
							AND a.in_date = #{in_date}
							</if>
							<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
							AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
							</if>
							<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
							AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
							</if>
							<if test="confirm_emp != null and confirm_emp != ''">
							AND a.confirm_emp = #{confirm_emp}
							</if>
							<if test="state != null and state != ''">
							AND a.state = #{state}
							</if>
							<if test="invoice_no != null and invoice_no != ''">
							AND a.invoice_no = #{invoice_no}
							</if>
							<if test="ass_name != null and ass_name != ''">
							and (
								c.ass_code like '%${ass_name}%' or
								c.ass_name like
								'%${ass_name}%'
								or
								c.spell_code like '%${ass_name}%' or
								c.wbx_code like
								'%${ass_name}%' or
								b.ass_spec like '%${ass_name}%'
								)
							</if>
							</where>   
					  ),
					sum_tmp as
					 (select null group_id,
					         null hos_id,
					         null copy_code,
					         null ass_in_no,
					         null store_id,
					         null store_no,
					         null store_code,
					         null store_name,
					         null ven_id,
					         null ven_no,
					         null ven_code,
					         null ven_name,
					         null purc_emp,
					         null dept_id,
					         null dept_no,
					         null dept_code,
					         null dept_name,
					         null ass_purpose,
					         null proj_id,
					         null proj_no,
					         null proj_code,
					         null proj_name,
					         sum(price * in_amount) in_money,
					         '合计' note,
					         null create_emp_name,
					         null confirm_emp_name,
					         
					         null state_name,
					         null in_date,
					         null create_date,
					         null confirm_emp,
					         null create_emp,
					         null ass_id,
					         null ass_no,
					         null ass_code,
					         null ass_name,
					         
					         null ass_brand,
					         null fac_id,
					         null fac_no,
					         null fac_code,
					         null fac_name,
					         null unit_code,
					         null unit_name,
					         sum(in_amount) in_amount,
					         null price,
					         null invoice_no,
					         null invoice_date,
					         null note_detail,
					         null state,
					         null pact_code
					    from detail_tmp)
					
					select group_id,
					       hos_id,
					       copy_code,
					       ass_in_no,
					       store_id,
					       store_no,
					       store_code,
					       store_name,
					       ven_id,
					       ven_no,
					       ven_code,
					       ven_name,
					       purc_emp,
					       dept_id,
					       dept_no,
					       dept_code,
					       dept_name,
					       ass_purpose,
					       proj_id,
					       proj_no,
					       proj_code,
					       proj_name,
					       in_money,
					       note,
					       create_emp_name,
					       confirm_emp_name,
					       
					       state_name,
					       in_date,
					       create_date,
					       confirm_emp,
					       create_emp,
					       ass_id,
					       ass_no,
					       ass_code,
					       ass_name,
					       
					       ass_brand,
					       fac_id,
					       fac_no,
					       fac_code,
					       fac_name,
					       unit_code,
					       unit_name,
					       in_amount,
					       price,
					       note_detail,
					       invoice_no,
					       invoice_date,
					       state,
					       pact_code
					  from detail_tmp
					union all
					select group_id,
					       hos_id,
					       copy_code,
					       ass_in_no,
					       store_id,
					       store_no,
					       store_code,
					       store_name,
					       ven_id,
					       ven_no,
					       ven_code,
					       ven_name,
					       purc_emp,
					       dept_id,
					       dept_no,
					       dept_code,
					       dept_name,
					       ass_purpose,
					       proj_id,
					       proj_no,
					       proj_code,
					       proj_name,
					       in_money,
					       note,
					       create_emp_name,
					       confirm_emp_name,
					       
					       state_name,
					       in_date,
					       create_date,
					       confirm_emp,
					       create_emp,
					       ass_id,
					       ass_no,
					       ass_code,
					       ass_name,
					       
					       ass_brand,
					       fac_id,
					       fac_no,
					       fac_code,
					       fac_name,
					       unit_code,
					       unit_name,
					       in_amount,
					       price,
					       note_detail,
					       invoice_no,
					       invoice_date,
					       state,
					       pact_code
					  from sum_tmp
					
					 order by create_date desc
	
	
	</select>
	
	
	<select id="queryAssBackInMainInassetss"  parameterType="java.util.Map" resultMap="assInMainInassets">
			SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			a.purc_emp,
			su1.emp_code||' '||su1.emp_name purc_emp_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			a.invoice_no,
			a.invoice_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
	<where>   
		 not exists (select 1 from ASS_IN_BACK_MAP_INASSETS  abpm
						where
						abpm.group_id = #{group_id,jdbcType=INTEGER}
						AND abpm.hos_id = #{hos_id,jdbcType=INTEGER}
						AND abpm.copy_code = #{copy_code,jdbcType=VARCHAR}
						and abpm.ass_in_no = a.ass_in_no
						)                   
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND a.ven_no = #{ven_no}
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		AND a.purc_emp = #{purc_emp}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND a.invoice_no = #{invoice_no}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND a.pact_code = #{pact_code}
		</if>
		
		</where>   
		order by a.create_date desc
	
	
	</select>
	
	<select id="queryAssBackInMaiInassets" parameterType="java.util.Map" resultMap="assInMainInassets">
		SELECT 
			      a.group_id,
			      a.hos_id,
			      a.copy_code,
			      a.ass_in_no,
			      a.store_id,
			      a.store_no,
			      b.store_code,
			      b.store_name,
			      a.ven_id,
			      a.ven_no,
			      c.sup_code ven_code,
			      c.sup_name ven_name,
			      a.purc_emp,
			      su1.emp_code||' '||su1.emp_name purc_emp_name,
			      a.dept_id,
			      a.dept_no,
			      d.dept_code,
			      d.dept_name,
			      a.ass_purpose,
			      aud.equi_usage_name ass_purpose_name,
			      a.proj_id,
			      a.proj_no,
			      e.proj_code,
			      e.proj_name,
			      a.in_money,
			      a.note,
			      a.create_emp,
			      su2.user_name create_emp_name,
			      a.create_date,
			      a.in_date,
			      a.confirm_emp,
			      su3.user_name confirm_emp_name,
			      a.state,
			      a.invoice_no,
			      a.invoice_date,
			      case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			      a.pact_code
			    FROM ASS_IN_MAIN_Inassets a
			    left join hos_store_dict b on
			    a.group_id = b.group_id
			    and a.hos_id = b.hos_id
			    and a.store_id = b.store_id
			    and b.is_stop = 0
			    
			    left join hos_sup_dict c on
			    a.group_id = c.group_id
			    and a.hos_id = c.hos_id
			    and a.ven_id = c.sup_id
			    and c.is_stop = 0
			    
			    left join hos_dept_dict d on
			    a.group_id = d.group_id
			    and a.hos_id = d.hos_id
			    and a.dept_id = d.dept_id
			    and d.is_stop = 0
			    
			    left join hos_proj_dict e on
			    a.group_id = e.group_id
			    and a.hos_id = e.hos_id
			    and a.proj_id = e.proj_id
			    and e.is_stop = 0
			    
			    left join hos_emp_dict su1 on
			    a.group_id = su1.group_id
			    and a.hos_id = su1.hos_id
			    and a.purc_emp = su1.emp_id
			    and su1.is_stop = 0
			    
			    left join sys_user su2 on
			    a.group_id = su2.group_id
			    and a.hos_id = su2.hos_id
			    and a.create_emp = su2.user_id
			    
			    left join sys_user su3 on
			    a.group_id = su3.group_id
			    and a.hos_id = su3.hos_id
			    and a.confirm_emp = su3.user_id
			    
			    left join ass_usage_dict aud on
			    a.group_id = aud.group_id
			    and a.hos_id = aud.hos_id
			    and a.copy_code = aud.copy_code
			    and a.ass_purpose = aud.equi_usage_code
			    where
							a.group_id = #{group_id,jdbcType=INTEGER}
							AND a.hos_id = #{hos_id,jdbcType=INTEGER}
							AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					        AND exists (
					        select 1 from ASS_IN_BACK_MAP_Inassets c 
					        	where   c.group_id = #{group_id,jdbcType=INTEGER}
					        		     and c.hos_id = #{hos_id,jdbcType=INTEGER}
					        			 and c.copy_code = #{copy_code,jdbcType=VARCHAR}
					        			 and c.ass_back_no =#{ass_back_no,jdbcType=VARCHAR}
					        		   and c.ass_in_no = a.ass_in_no
					        )
					order by a.create_date desc
	
	</select>
	
	<select id="querycountStore" resultType="java.lang.Integer">
		SELECT 
			count(1)
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		 where
 		<if test="group_id != null and group_id != ''">
		a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_nos != null and ass_in_nos != ''">
			AND a.ass_in_no in (
			<foreach collection="ass_in_nos" item="item" index="index" separator=",">
		        #{item}
		      </foreach>
		      )
		    </if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
	
	</select>
	
	<select id="querycountVen" resultType="java.lang.Integer">
		SELECT 
			count(1)
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		 where
 		<if test="group_id != null and group_id != ''">
		a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_nos != null and ass_in_nos != ''">
			AND a.ass_in_no in (
			<foreach collection="ass_in_nos" item="item" index="index" separator=",">
		        #{item}
		      </foreach>
		      )
		    </if>
		
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND a.ven_no = #{ven_no}
		</if>
	</select>
	
	<update id="updateAssInMainBillNo" parameterType="java.util.Map">
		UPDATE Ass_In_Main_Inassets set
		<if test="invoice_date != null and invoice_date != ''">
		invoice_date = to_date(#{invoice_date},'YYYY-MM-DD')
		,
		</if>
		invoice_no = #{invoice_no}
		
		where group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND ass_in_no = #{ass_in_no}
	</update>
	
	<select id="queryByInitBack"  resultMap="assInMainInassets"  parameterType="java.util.Map" >
	select * from (
		SELECT 
      a.group_id,
      a.hos_id,
      a.copy_code,
      a.ass_in_no,
      a.store_id,
      a.store_no,
      b.store_code,
      b.store_name,
      a.ven_id,
      a.ven_no,
      c.sup_code ven_code,
      c.sup_name ven_name,
      a.purc_emp,
      su1.emp_name purc_emp_name,
      a.dept_id,
      a.dept_no,
      d.dept_code,
      d.dept_name,
      a.ass_purpose,
      aud.equi_usage_name ass_purpose_name,
      a.proj_id,
      a.proj_no,
      e.proj_code,
      e.proj_name,
      a.in_money,
      a.note,
      a.create_emp,
      su2.user_name create_emp_name,
      a.create_date,
      a.in_date,
      a.confirm_emp,
      su3.user_name confirm_emp_name,
      a.invoice_no,
	  a.invoice_date,
      a.state,
      case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
      a.pact_code
    FROM Ass_In_Main_Inassets a
    left join hos_store_dict b on
    a.group_id = b.group_id
    and a.hos_id = b.hos_id
    and a.store_id = b.store_id
    and b.is_stop = 0
    
    left join hos_sup_dict c on
    a.group_id = c.group_id
    and a.hos_id = c.hos_id
    and a.ven_id = c.sup_id
    and c.is_stop = 0
    
    left join hos_dept_dict d on
    a.group_id = d.group_id
    and a.hos_id = d.hos_id
    and a.dept_id = d.dept_id
    and d.is_stop = 0
    
    left join hos_proj_dict e on
    a.group_id = e.group_id
    and a.hos_id = e.hos_id
    and a.proj_id = e.proj_id
    and e.is_stop = 0
    
    left join hos_emp_dict su1 on
    a.group_id = su1.group_id
    and a.hos_id = su1.hos_id
    and a.purc_emp = su1.emp_id
    and su1.is_stop = 0
    
    left join sys_user su2 on
    a.group_id = su2.group_id
    and a.hos_id = su2.hos_id
    and a.create_emp = su2.user_id
    
    left join sys_user su3 on
    a.group_id = su3.group_id
    and a.hos_id = su3.hos_id
    and a.confirm_emp = su3.user_id
    
    left join ass_usage_dict aud on
    a.group_id = aud.group_id
    and a.hos_id = aud.hos_id
    and a.copy_code = aud.copy_code
    and a.ass_purpose = aud.equi_usage_code
	<where>
		 a.state = 2     
		AND not exists (select 1 from ASS_IN_BACK_MAP_INASSETS  abpm
						where
						abpm.group_id = a.group_id
						AND abpm.hos_id = a.hos_id
						AND abpm.copy_code = a.copy_code
						and abpm.ass_in_no = a.ass_in_no
						)          
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="ass_in_nos != null and ass_in_nos != ''">
		AND a.ass_in_no in (${ass_in_nos})
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND a.ven_no = #{ven_no}
		</if>
		<if test="purc_emp != null and purc_emp != ''">
		AND a.purc_emp = #{purc_emp}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND a.invoice_no = #{invoice_no}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND a.pact_code = #{pact_code}
		</if>
		</where>
	 ) t
		order by t.create_date desc
	</select>
	
	
	<select id="queryByInvoiceNo" resultMap="assInMainInassets"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.ven_id,
			a.ven_no,
			c.sup_code ven_code,
			c.sup_name ven_name,
			a.purc_emp,
			su1.emp_code||' '||su1.emp_name purc_emp_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			a.invoice_no,
			a.invoice_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.pact_code
		FROM ASS_IN_MAIN_INASSETS a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_sup_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.ven_id = c.sup_id
		and c.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join hos_emp_dict su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.purc_emp = su1.emp_id
		and su1.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		WHERE 
		a.group_id = #{group_id}   and 
		a.hos_id = #{hos_id}   and 
		a.copy_code = #{copy_code}   AND 
		a.invoice_no = #{invoice_no}
	
	</select>
	
	<!-- 生成发票查询主表信息 -->
	<select id="queryAssGenerateBillInassets" parameterType="java.util.Map" resultMap="assInMainInassetsMap">
		SELECT 
			t.group_id,
			t.hos_id,
			t.copy_code,
			t.store_id,
			t.store_no,
			t.ven_id,
			t.ven_no,
			t.invoice_no,
			t.invoice_date,
			t.state,
			t1.store_code,
			sum(t.in_money) in_money
		FROM ASS_IN_MAIN_INASSETS t
		left join hos_store_dict t1 on
		t.group_id = t1.group_id
		and t.hos_id = t1.hos_id
		where 
			t.group_id = #{group_id,jdbcType=INTEGER}
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND t.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		group by t.group_id,t.hos_id, t.copy_code,t.store_id,t.store_no,t.ven_id,t.ven_no,t.invoice_no,t.invoice_date,t.state,t1.store_code
      
	</select>
	
	<!-- 生成发票从表 -->
	<select id="queryAssGenerateBillCard" parameterType="java.util.Map" resultMap="assInMainInassetsMap">
		select group_id,
	       hos_id,
	       copy_code,
	       ass_card_no,
	       price
	  from ass_card_Inassets
	  where
	  		group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
	
	</select>
	
	<!-- 生成发票分期付款表 -->
	<select id="queryAssGenerateBillStage" parameterType="java.util.Map" resultMap="assInMainInassetsDetailMap">
		select group_id,
	       hos_id,
	       copy_code,
	       stage_no,
	       stage_name,
	       ass_card_no,
	       pay_plan_money
	  from ass_pay_stage_Inassets
	  where
	  		group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND ass_card_no = #{ass_card_no,jdbcType=VARCHAR}
	
	</select>
</mapper>

