<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.in.rest.AssInRestMainOtherMapper">
	
	<resultMap id="assInRestMainOther" type="com.chd.hrp.ass.entity.in.rest.AssInRestMainOther">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="ass_purpose" column="ass_purpose"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	</resultMap>
		
	<resultMap id="assInRestMainOtherMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="ass_purpose" column="ass_purpose"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="confirm_emp_name" column="confirm_emp_name"/>
	<result property="bus_type_name" column="bus_type_name"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="ass_purpose_name" column="ass_purpose_name"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="ass_id"  column="ass_id"/>
	<result property="ass_no"    column="ass_no"   />
	<result property="ass_code"  column="ass_code"/>
	<result property="ass_name"    column="ass_name"   />
	<result property="ass_spec"     column="ass_spec"/>
	<result property="ass_model"     column="ass_model"/>
	<result property="ass_brand"           column="ass_brand"/>
	<result property="fac_id"              column="fac_id"/>
	<result property="fac_no"              column="fac_no"/>
	<result property="fac_code"              column="fac_code"/>
	<result property="fac_name"              column="fac_name"/>
	<result property="unit_code"           column="unit_code"/>
	<result property="unit_name"           column="unit_name"/>
	<result property="in_amount"           column="in_amount"/>
	<result property="price"               column="price"/>
	<result property="note_detail"                column="note_detail"/>
	<result property="add_depre" column="add_depre"/>
	<result property="add_depre_month" column="add_depre_month"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	</resultMap>
	
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_IN_REST_MAIN_Other (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		ass_in_no
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		ass_purpose
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		proj_id
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		proj_no
		,
		</if>
		<if test="in_money != null and in_money != ''">
		in_money
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		to_number(#{group_id})
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		to_number(#{hos_id})
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		#{ass_in_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		#{bus_type_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		to_number(#{store_id})
		,
		</if>
		<if test="store_no != null and store_no != ''">
		to_number(#{store_no})
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		to_number(#{dept_id})
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		to_number(#{dept_no})
		,
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		#{ass_purpose,jdbcType=VARCHAR}
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		to_number(#{proj_id})
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		to_number(#{proj_no})
		,
		</if>
		<if test="in_money != null and in_money != ''">
		to_number(#{in_money})
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_IN_REST_MAIN_Other (
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_in_no
		,
		bus_type_code
		,
		store_id
		,
		store_no
		,
		dept_id
		,
		dept_no
		,
		ass_purpose
		,
		proj_id
		,
		proj_no
		,
		in_money
		,
		note
		,
		create_emp
		,
		create_date
		,
		state
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.ass_in_no,jdbcType=VARCHAR}
			,
			#{item.bus_type_code,jdbcType=VARCHAR}
			,
			#{item.store_id,jdbcType=INTEGER}
			,
			#{item.store_no,jdbcType=INTEGER}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.dept_no,jdbcType=INTEGER}
			,
			#{item.ass_purpose,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.proj_no,jdbcType=INTEGER}
			,
			#{item.in_money,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			#{item.create_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_in_rest_main_Other 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id = #{store_id,jdbcType=INTEGER}
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no = #{store_no,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no = #{dept_no,jdbcType=INTEGER}
		,
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		ass_purpose = #{ass_purpose,jdbcType=VARCHAR}
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		proj_id = #{proj_id,jdbcType=INTEGER}
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		proj_no = #{proj_no,jdbcType=INTEGER}
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="store_id == null or store_id == ''">
		store_id = null
		,
		</if>
		<if test="store_no == null or store_no == ''">
		store_no = null
		,
		</if>
		<if test="dept_id == null or dept_id == ''">
		dept_id = null
		,
		</if>
		<if test="dept_no == null or dept_no == ''">
		dept_no = null
		,
		</if>
		<if test="ass_purpose == null or ass_purpose == ''">
		ass_purpose = null
		,
		</if>
		<if test="proj_id == null or proj_id == ''">
		proj_id = null
		,
		</if>
		<if test="proj_no == null or proj_no == ''">
		proj_no = null
		,
		</if>
		<if test="note == null or note == ''">
		note = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	
	
	<update id="updateInMoney" parameterType="java.util.Map">
	
		UPDATE ass_in_rest_main_Other 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="in_money != null and in_money != ''">
		in_money = #{in_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_Other  set
			state = 2,
			confirm_emp = #{item.confirm_emp},
			in_date = to_date(#{item.in_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_Other  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_Other  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_Other 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.bus_type_code != null and item.bus_type_code != ''">
			bus_type_code = #{item.bus_type_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_id != null and item.dept_id != ''">
			dept_id = #{item.dept_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_no != null and item.dept_no != ''">
			dept_no = #{item.dept_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.ass_purpose != null and item.ass_purpose != ''">
			ass_purpose = #{item.ass_purpose,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.proj_id != null and item.proj_id != ''">
			proj_id = #{item.proj_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.proj_no != null and item.proj_no != ''">
			proj_no = #{item.proj_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.in_money != null and item.in_money != ''">
			in_money = #{item.in_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.ass_in_no != null and item.ass_in_no != ''">
			AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_in_rest_main_Other 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_in_rest_main_Other 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.ass_in_no != null and item.ass_in_no != ''">
				AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assInRestMainOther" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.bus_type_code,
			abtd.bus_type_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name
		FROM ass_in_rest_main_Other a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		</where>   
		union all
		
		SELECT 
			null group_id,
			null hos_id,
			null copy_code,
			null ass_in_no,
			null store_id,
			null store_no,
			null store_code,
			null store_name,
			null purc_emp,
			null purc_emp_name,
			null dept_id,
			null dept_no,
			null dept_code,
			null dept_name,
			null ass_purpose,
			null ass_purpose_name,
			null bus_type_code,
			null bus_type_name,
			null proj_id,
			null proj_no,
			sum(a.in_money) in_money,
			'合计' note,
			null create_emp,
			null create_emp_name,
			null create_date,
			null in_date,
			null confirm_emp,
			null confirm_emp_name,
			null state,
			'' state_name
		FROM ass_in_rest_main_Other a
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
	<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		</where>  ) t
		
		order by t.create_date desc
	</select>
	<select id="queryByCode" resultMap="assInRestMainOther"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			a.ass_purpose,
			aud.equi_usage_name ass_purpose_name,
			a.bus_type_code,
			abtd.bus_type_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name
		FROM ass_in_rest_main_Other a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_dept_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.dept_id = d.dept_id
		and d.is_stop = 0
		
		left join hos_proj_dict e on
		a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.proj_id = e.proj_id
		and e.is_stop = 0
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.ass_in_no = #{ass_in_no,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assInRestMainOther"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		bus_type_code,
		store_id,
		store_no,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		state
		FROM ASS_IN_REST_MAIN_Other 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND ass_purpose = #{ass_purpose,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by create_date desc
	</select>
	<select id="queryExists" resultMap="assInRestMainOther"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		bus_type_code,
		store_id,
		store_no,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		state
		FROM ASS_IN_REST_MAIN_Other 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND ass_purpose = #{ass_purpose,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by create_date desc
	</select>
	
	<!-- 其他固定资产 其他入库 主页面 批量打印 主表数据查询  -->
	<select id="queryAssInRestOtherPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.ass_in_no as id,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			aud.equi_usage_name ass_purpose,
			a.bus_type_code,
			abtd.bus_type_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			to_char(a.in_money,'FM999,999,990.00') in_money,
			t_m.in_amount,
			a.note,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.in_date,'yyyy-mm-dd') in_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state
		FROM ass_in_rest_main_Other a
		left join hos_store_dict b 
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.store_id = b.store_id
				and b.is_stop = 0
		
		left join hos_dept_dict d 
			on
				a.group_id = d.group_id
				and a.hos_id = d.hos_id
				and a.dept_id = d.dept_id
				and d.is_stop = 0
		
		left join hos_proj_dict e 
			on
				a.group_id = e.group_id
				and a.hos_id = e.hos_id
				and a.proj_id = e.proj_id
				and e.is_stop = 0
		
		left join sys_user su2 
			on
				a.group_id = su2.group_id
				and a.hos_id = su2.hos_id
				and a.create_emp = su2.user_id
		
		left join sys_user su3 
			on
				a.group_id = su3.group_id
				and a.hos_id = su3.hos_id
				and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud 
			on
				a.group_id = aud.group_id
				and a.hos_id = aud.hos_id
				and a.copy_code = aud.copy_code
				and a.ass_purpose = aud.equi_usage_code
		
		left join ass_bus_type_dict abtd 
			on
				a.group_id = abtd.group_id
				and a.hos_id = abtd.hos_id
				and a.copy_code = abtd.copy_code
				and a.bus_type_code = abtd.bus_type_code
		
		left join (
			select t.group_id,t.hos_id,t.copy_code,t.ass_in_no,sum(t.in_amount) in_amount from ASS_IN_REST_DETAIL_Other t
			where t.group_id = #{group_id}
			AND t.hos_id = #{hos_id}
			AND t.copy_code = #{copy_code}
			AND t.ass_in_no in (${paraId})
			group by t.group_id,t.hos_id,t.copy_code,t.ass_in_no
		) t_m on 
		a.group_id = t_m.group_id
		and a.hos_id = t_m.hos_id
		and a.copy_code = t_m.copy_code
		and a.ass_in_no = t_m.ass_in_no
		
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.ass_in_no in (${paraId})
		order by a.create_date desc
	</select>
	
	<!-- 其他固定资产 其他入库 批量打印 明细表数据查询 -->
	<select id="queryAssInRestOtherPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		with d_main as(
select t5.ass_in_no as id ,
		t5.ass_id,
      t5.ass_no,
      b.ass_code,
      b.ass_name,
      t5.ass_spec,
      t5.ass_model,
      t5.ass_brand,
      c.fac_code fac_no,
      c.fac_name ,
      hu.unit_name unit_code,
      t5.in_amount d_amount,
      atd.ass_type_name,
      to_char(t5.price,'FM999,999,990.00') price,
      to_char(t5.add_depre,'FM999,999,990.00') add_depre,
      t5.add_depre_month,
      to_char(t5.cur_money,'FM999,999,990.00') cur_money,
      to_char(t5.fore_money,'FM999,999,990.00') fore_money,
      t5.note note_detail,
       to_char(price_sum,'FM999,999,990.00') price_sum,
           to_char(zc_price,'FM999,999,990.00') zc_price,
           to_char(cz_price,'FM999,999,990.00') cz_price,
          to_char(ky_price,'FM999,999,990.00') ky_price, 
           to_char(jx_price,'FM999,999,990.00') jx_price,
         case
           when zc_price is not null then
            '其他资金=' || to_char(zc_price, 'FM999,999,990.00')
         end || case
           when cz_price is not null then
            '财政资金=' || to_char(cz_price, 'FM999,999,990.00')
         end || case
           when ky_price is not null then
            '|科研资金=' || to_char(ky_price, 'FM999,999,990.00')
         end || case
           when jx_price is not null then
            '|教学资金=' || to_char(jx_price, 'FM999,999,990.00')
         end source_price
      from (select t3.source_id,
                   t3.group_id,
                   t3.hos_id,
                   t3.copy_code,
                   sum(t3.price) sum_price,
                   sum(t2.price) price_sum,
                   t2.ass_id,
                   t2.ass_no,
                   t2.ass_in_no
              from ass_card_other t2
            
              left join ass_resource_other t3
                on t3.ass_card_no = t2.ass_card_no
               and t3.group_id = t2.group_id
               and t3.hos_id = t3.hos_id
               and t3.copy_code = t2.copy_code
           where 
	         t2.group_id = #{group_id,jdbcType=INTEGER}
				AND t2.hos_id = #{hos_id,jdbcType=INTEGER}
				AND t2.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="paraId != null and paraId != ''">
				AND t2.ass_in_no in  (${paraId})
				</if>
				<if test="ass_in_no != null and ass_in_no != ''">
				AND t2.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
				</if>
      
         
          group by t3.source_id,
                  t2.ass_id,
                  t2.ass_no,
                  t3.group_id,
                  t3.hos_id,
                  t2.ass_in_no,
                  t3.copy_code) pivot(sum(sum_price) as price for source_id in('1' as ZC,
                                                                               '2' as CZ,
                                                                               '3' as KY,
                                                                               '4' as JX)) t
        left join ASS_IN_REST_DETAIL_other t5
          on t.ass_id = t5.ass_id
         and t5.group_id = t.group_id
         and t5.hos_id = t.hos_id
         and t5.copy_code = t.copy_code
         and t5.ass_in_no = t.ass_in_no  
        left join ass_no_dict b
          on t5.group_id = b.group_id
         and t5.hos_id = b.hos_id
         and t5.copy_code = b.copy_code
         and t5.ass_id = b.ass_id
         and b.is_stop = 0
         
        left join ass_type_dict atd
      on b.group_id = atd.group_id
     and b.hos_id = atd.hos_id
     and b.copy_code = atd.copy_code
     and b.ass_type_id = atd.ass_type_id 
         
        left join hos_fac_dict c
          on t5.group_id = c.group_id
         and t5.hos_id = c.hos_id
         and t5.fac_id = c.fac_id
         and c.is_stop = 0
        left join hos_unit hu
          on t5.group_id = hu.group_id
         and t5.hos_id = hu.hos_id
         and t5.unit_code = hu.unit_code
         and hu.is_stop = 0

  where 
		t5.group_id = #{group_id,jdbcType=INTEGER}
			AND t5.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t5.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND t5.ass_in_no in  (${paraId})
			</if>
			<if test="ass_in_no != null and ass_in_no != ''">
			AND t5.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
			</if>
      
      group by t5.ass_in_no,
      			t5.ass_id,
                t5.ass_no,
                b.ass_code,
                b.ass_name,
                t5.ass_spec,
                t5.ass_model,
                t5.ass_brand,
                c.fac_code,
                c.fac_name,
                hu.unit_name,
                atd.ass_type_name,
                t5.in_amount,
                t5.price,
                t5.add_depre,
                t5.add_depre_month,
                t5.cur_money,
                t5.fore_money,
                t5.note,
                price_sum,
                zc_price,
                cz_price,
                ky_price,
                jx_price
      order by t5.ass_in_no desc
      ),str_card_no_l as
		 (select *
		    from (select ass_in_no,
		                 ass_id,
		                 max(substr(ass_card_no,
		                            greatest(-4, -length(ass_card_no)),
		                            4)) ass_cards
		            from ass_card_other
		           where 
		                            group_id = #{group_id,jdbcType=INTEGER}
		                      AND hos_id = #{hos_id,jdbcType=INTEGER}
		                      AND copy_code = #{copy_code,jdbcType=VARCHAR}                                                                        
		                     <if test="paraId != null and paraId != ''">
		                     AND ass_in_no in  (${paraId})
		                     </if>
		                     <if test="ass_in_no != null and ass_in_no != ''">
		                     AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		                     </if>
		           
		           group by ass_in_no, ass_id, ass_id) t
		  
		  ),
		str_card_no_m as
		 (select *
		    from (select ass_in_no,
		                 ass_id,
		                 min(substr(ass_card_no,
		                            greatest(-4, -length(ass_card_no)),
		                            4)) ass_cards
		            from ass_card_other
		           where 
		            group_id = #{group_id,jdbcType=INTEGER}
		                      AND hos_id = #{hos_id,jdbcType=INTEGER}
		                      AND copy_code = #{copy_code,jdbcType=VARCHAR}                                                                        
		                     <if test="paraId != null and paraId != ''">
		                     AND ass_in_no in  (${paraId})
		                     </if>
		                     <if test="ass_in_no != null and ass_in_no != ''">
		                     AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		                     </if>
		           
		           group by ass_in_no, ass_id, ass_id) t),
		str_card_no_s as
		 (select ass_in_no,
		         ass_id,
		         substr(ass_cards, 0, length(ass_cards) - 4) ass_cards
		    from (select ass_in_no,
		                 ass_id,
		                 max(ass_card_no) ass_cards
		            from ass_card_other
		           where 
		            group_id = #{group_id,jdbcType=INTEGER}
		                      AND hos_id = #{hos_id,jdbcType=INTEGER}
		                      AND copy_code = #{copy_code,jdbcType=VARCHAR}                                                                        
		                     <if test="paraId != null and paraId != ''">
		                     AND ass_in_no in  (${paraId})
		                     </if>
		                     <if test="ass_in_no != null and ass_in_no != ''">
		                     AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		                     </if>
		           
		           group by ass_in_no, ass_id, ass_id
		          
		          ) t
		  
		  )
		select t1.ass_cards || 
				case when t3.ass_cards = t2.ass_cards then t2.ass_cards else
				t3.ass_cards || '-' || t2.ass_cards end ass_card_nos, t.*
		  from d_main t
		  left join str_card_no_s t1
		    on t.id = t1.ass_in_no and t.ass_id = t1.ass_id 
		  left join str_card_no_l t2
		    on t.id = t2.ass_in_no and t.ass_id = t2.ass_id 
		  left join str_card_no_m t3
		    on t.id = t3.ass_in_no and t.ass_id = t3.ass_id 
		
	</select>
	
	<!-- 其他固定资产 其他入库 修改页面 批量打印 主表数据查询  -->
	<select id="queryAssInRestOtherPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.ass_in_no as id,
			a.ass_in_no,
			a.store_id,
			a.store_no,
			b.store_code,
			b.store_name,
			a.dept_id,
			a.dept_no,
			d.dept_code,
			d.dept_name,
			aud.equi_usage_name ass_purpose,
			a.bus_type_code,
			abtd.bus_type_name,
			a.proj_id,
			a.proj_no,
			e.proj_code,
			e.proj_name,
			to_char(a.in_money,'FM999,999,990.00') in_money,
			t_m.in_amount,
			a.note,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.in_date,'yyyy-mm-dd') in_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state
		FROM ass_in_rest_main_Other a
		left join hos_store_dict b 
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.store_id = b.store_id
				and b.is_stop = 0
		
		left join hos_dept_dict d 
			on
				a.group_id = d.group_id
				and a.hos_id = d.hos_id
				and a.dept_id = d.dept_id
				and d.is_stop = 0
		
		left join hos_proj_dict e 
			on
				a.group_id = e.group_id
				and a.hos_id = e.hos_id
				and a.proj_id = e.proj_id
				and e.is_stop = 0
		
		left join sys_user su2 
			on
				a.group_id = su2.group_id
				and a.hos_id = su2.hos_id
				and a.create_emp = su2.user_id
		
		left join sys_user su3 
			on
				a.group_id = su3.group_id
				and a.hos_id = su3.hos_id
				and a.confirm_emp = su3.user_id
		
		left join ass_usage_dict aud 
			on
				a.group_id = aud.group_id
				and a.hos_id = aud.hos_id
				and a.copy_code = aud.copy_code
				and a.ass_purpose = aud.equi_usage_code
		
		left join ass_bus_type_dict abtd 
			on
				a.group_id = abtd.group_id
				and a.hos_id = abtd.hos_id
				and a.copy_code = abtd.copy_code
				and a.bus_type_code = abtd.bus_type_code
		
		left join (
			select t.group_id,t.hos_id,t.copy_code,t.ass_in_no,sum(t.in_amount) in_amount from ASS_IN_REST_DETAIL_Other t
			where t.group_id = #{group_id}
			AND t.hos_id = #{hos_id}
			AND t.copy_code = #{copy_code}
			AND t.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
			group by t.group_id,t.hos_id,t.copy_code,t.ass_in_no
		) t_m on 
		a.group_id = t_m.group_id
		and a.hos_id = t_m.hos_id
		and a.copy_code = t_m.copy_code
		and a.ass_in_no = t_m.ass_in_no
		
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		order by a.create_date desc
	</select>
	
	<!-- 其他固定资产 其他入库单 状态查询 （打印校验数据专用） -->
	<select id="queryAssInRestOtherState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT ass_in_no  FROM ass_in_rest_main_Other 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND ass_in_no in  (${paraId})
			</if>
			<if test="ass_in_no != null and ass_in_no != ''">
			AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	<!-- 明细查询 -->
	<select id="queryDetails"  parameterType="java.util.Map" resultMap="assInRestMainOtherMap">
				with detail_tmp as
							 (select a.group_id,
							         a.hos_id,
							         a.copy_code,
							         a.ass_in_no,
							         a.store_id,
							         a.store_no,
							         c.store_code,
							         c.store_name,
							         a.dept_id,
							         a.dept_no,
							         d.dept_code,
							         d.dept_name,
							         a.ass_purpose,
							         f.equi_usage_name ass_purpose_name,
							         a.bus_type_code,
							         g.bus_type_name,
							         a.proj_id,
							         a.proj_no,
							         e.proj_code,
							         e.proj_name,
							         a.in_money,
							         a.note,
							         a.create_emp,
							         su2.user_name create_emp_name,
							         a.create_date,
							         a.in_date,
							         a.confirm_emp,
							         su3.user_name confirm_emp_name,
							         a.state,
							         case
							           when a.state = 0 then
							            '新建'
							           when a.state = 1 then
							            '审核'
							           when a.state = 2 then
							            '入库确认'
							           else
							            ''
							         end state_name,
							         
							         b.ass_id,
							         b.ass_no,
							         r.ass_code,
							         r.ass_name,
							         b.ass_spec,
							         b.ass_model,
							         b.ass_brand,
							         b.fac_id,
							         b.fac_no,
							         t.fac_code,
							         t.fac_name,
							         b.unit_code,
							         y.unit_name,
							         b.in_amount,
							         b.price,
							         b.add_depre,
							         b.add_depre_month,
							         b.cur_money,
							         b.fore_money,
							         b.note            note_detail
							    from ass_in_rest_main_Other a
							    left join ASS_IN_REST_DETAIL_Other b
							      on a.group_id = b.group_id
							     and a.hos_id = b.hos_id
							     and a.copy_code = b.copy_code
							     and a.ass_in_no = b.ass_in_no
							    left join ass_no_dict r
							      on r.group_id = b.group_id
							     and r.hos_id = b.hos_id
							     and r.copy_code = b.copy_code
							     and r.ass_id = b.ass_id
							     and r.is_stop = 0
							    left join hos_fac_dict t
							      on t.group_id = b.group_id
							     and t.hos_id = b.hos_id
							     and t.fac_id = b.fac_id
							     and t.is_stop = 0
							    left join hos_unit y
							      on y.group_id = b.group_id
							     and y.hos_id = b.hos_id
							     and y.unit_code = b.unit_code
							     and y.is_stop = 0
							  
							    left join hos_store_dict c
							      on a.group_id = c.group_id
							     and a.hos_id = c.hos_id
							     and a.store_id = c.store_id
							     and c.is_stop = 0
							    left join hos_dept_dict d
							      on a.group_id = d.group_id
							     and a.hos_id = d.hos_id
							     and a.dept_id = d.dept_id
							     and d.is_stop = 0
							    left join hos_proj_dict e
							      on a.group_id = e.group_id
							     and a.hos_id = e.hos_id
							     and a.proj_id = e.proj_id
							     and e.is_stop = 0
							    left join sys_user su2
							      on a.group_id = su2.group_id
							     and a.hos_id = su2.hos_id
							     and a.create_emp = su2.user_id
							  
							    left join sys_user su3
							      on a.group_id = su3.group_id
							     and a.hos_id = su3.hos_id
							     and a.confirm_emp = su3.user_id
							  
							    left join ass_usage_dict f
							      on a.group_id = f.group_id
							     and a.hos_id = f.hos_id
							     and a.copy_code = f.copy_code
							     and a.ass_purpose = f.equi_usage_code
							  
							    left join ass_bus_type_dict g
							      on a.group_id = g.group_id
							     and a.hos_id = g.hos_id
							     and a.copy_code = g.copy_code
							     and a.bus_type_code = g.bus_type_code
							  <where>                     
									<if test="group_id != null and group_id != ''">
									AND a.group_id = #{group_id}
									</if>
									<if test="hos_id != null and hos_id != ''">
									AND a.hos_id = #{hos_id}
									</if>
									<if test="copy_code != null and copy_code != ''">
									AND a.copy_code = #{copy_code}
									</if>
									<if test="ass_in_no != null and ass_in_no != ''">
									AND a.ass_in_no = #{ass_in_no}
									</if>
									<if test="store_id != null and store_id != ''">
									AND a.store_id = #{store_id}
									</if>
									<if test="store_no != null and store_no != ''">
									AND a.store_no = #{store_no}
									</if>
									<if test="dept_id != null and dept_id != ''">
									AND a.dept_id = #{dept_id}
									</if>
									<if test="dept_no != null and dept_no != ''">
									AND a.dept_no = #{dept_no}
									</if>
									<if test="ass_purpose != null and ass_purpose != ''">
									AND a.ass_purpose = #{ass_purpose}
									</if>
									<if test="proj_id != null and proj_id != ''">
									AND a.proj_id = #{proj_id}
									</if>
									<if test="proj_no != null and proj_no != ''">
									AND a.proj_no = #{proj_no}
									</if>
									<if test="in_money != null and in_money != ''">
									AND a.in_money = #{in_money}
									</if>
									<if test="note != null and note != ''">
									AND a.note = #{note}
									</if>
									<if test="create_emp != null and create_emp != ''">
									AND a.create_emp = #{create_emp}
									</if>
									<if test="create_date != null and create_date != ''">
									AND a.create_date = #{create_date}
									</if>
									<if test="in_date != null and in_date != ''">
									AND a.in_date = #{in_date}
									</if>
									<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
									AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
									</if>
									<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
									AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
									</if>
									<if test="confirm_emp != null and confirm_emp != ''">
									AND a.confirm_emp = #{confirm_emp}
									</if>
									<if test="state != null and state != ''">
									AND a.state = #{state}
									</if>
									</where>   
							  ),
							sum_tmp as
							 (select null group_id,
							         null hos_id,
							         null copy_code,
							         null ass_in_no,
							         null store_id,
							         null store_no,
							         null store_code,
							         null store_name,
							         null dept_id,
							         null dept_no,
							         null dept_code,
							         null dept_name,
							         null ass_purpose,
							         null ass_purpose_name,
							         null bus_type_code,
							         null bus_type_name,
							         null proj_id,
							         null proj_no,
							         null proj_code,
							         null proj_name,
							         sum(in_money) in_money,
							         '合计' note,
							         null create_emp,
							         null create_emp_name,
							         null create_date,
							         null in_date,
							         null confirm_emp,
							         null confirm_emp_name,
							         null state,
							         null state_name,
							         null ass_id,
							         null ass_no,
							         null ass_code,
							         null ass_name,
							         null ass_spec,
							         null ass_model,
							         null ass_brand,
							         null fac_id,
							         null fac_no,
							         null fac_code,
							         null fac_name,
							         null unit_code,
							         null unit_name,
							         null in_amount,
							         sum(price) price,
							         sum(add_depre) add_depre,
							         null add_depre_month,
							         sum(cur_money) cur_money,
							         sum(fore_money) fore_money,
							         null note_detail
							    from detail_tmp)
							
							select group_id,
							       hos_id,
							       copy_code,
							       ass_in_no,
							       store_id,
							       store_no,
							       store_code,
							       store_name,
							       dept_id,
							       dept_no,
							       dept_code,
							       dept_name,
							       ass_purpose,
							       ass_purpose_name,
							       bus_type_code,
							       bus_type_name,
							       proj_id,
							       proj_no,
							       proj_code,
							       proj_name,
							       in_money,
							       note,
							       create_emp,
							       create_emp_name,
							       create_date,
							       in_date,
							       confirm_emp,
							       confirm_emp_name,
							       state,
							       state_name,
							       ass_id,
							       ass_no,
							       ass_code,
							       ass_name,
							       ass_spec,
							       ass_model,
							       ass_brand,
							       fac_id,
							       fac_no,
							       fac_code,
							       fac_name,
							       unit_code,
							       unit_name,
							       in_amount,
							       price,
							       add_depre,
							       add_depre_month,
							       cur_money,
							       fore_money,
							       note_detail
							  from detail_tmp
							union all
							select group_id,
							       hos_id,
							       copy_code,
							       ass_in_no,
							       store_id,
							       store_no,
							       store_code,
							       store_name,
							       dept_id,
							       dept_no,
							       dept_code,
							       dept_name,
							       ass_purpose,
							       ass_purpose_name,
							       bus_type_code,
							       bus_type_name,
							       proj_id,
							       proj_no,
							       proj_code,
							       proj_name,
							       in_money,
							       note,
							       create_emp,
							       create_emp_name,
							       create_date,
							       in_date,
							       confirm_emp,
							       confirm_emp_name,
							       state,
							       state_name,
							       ass_id,
							       ass_no,
							       ass_code,
							       ass_name,
							       ass_spec,
							       ass_model,
							       ass_brand,
							       fac_id,
							       fac_no,
							       fac_code,
							       fac_name,
							       unit_code,
							       unit_name,
							       in_amount,
							       price,
							       add_depre,
							       add_depre_month,
							       cur_money,
							       fore_money,
							       note_detail
							  from sum_tmp
							
							 order by create_date desc
				
	</select>
</mapper>

