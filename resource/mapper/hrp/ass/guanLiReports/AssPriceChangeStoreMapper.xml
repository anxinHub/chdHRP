<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.guanLiReports.AssPriceChangeStoreMapper">
 
	<resultMap id="assPriceChnageStore" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="ass_type_code" column="ass_type_code" />
		<result property="ass_type_name" column="ass_type_name" />
		
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		
		<result property="type_level" column="type_level" />
		<result property="init_price" column="init_price" />
		<result property="add_price" column="add_price" />
		<result property="reduce_price" column="reduce_price" />
		<result property="sum_price" column="sum_price" />

		<result property="r_begin" column="r_begin" />
		<result property="r_end" column="r_end" />

		<result property="r_add_sum" column="r_add_sum" /> 
		<result property="r_dec_sum" column="r_dec_sum" />

		<result property="bus_01" column="bus_01" />
		<result property="bus_02" column="bus_02" />
		<result property="bus_03" column="bus_03" />
		<result property="bus_04" column="bus_04" />
		<result property="bus_05" column="bus_05" />
		<result property="bus_06" column="bus_06" />
		<result property="bus_07" column="bus_07" />
		<result property="bus_08" column="bus_08" />
		<result property="bus_09" column="bus_09" />
		<result property="bus_10" column="bus_10" />
		<result property="bus_11" column="bus_11" />
		<result property="bus_12" column="bus_12" />
		<result property="bus_13" column="bus_13" />
		<result property="bus_14" column="bus_14" />
		<result property="bus_15" column="bus_15" />
		<result property="bus_16" column="bus_16" />
		<result property="bus_17" column="bus_17" />
		<result property="bus_18" column="bus_18" />
		<result property="bus_19" column="bus_19" />
		<result property="bus_20" column="bus_20" />
		<result property="bus_21" column="bus_21" />
		<result property="bus_22" column="bus_22" />
		<result property="bus_23" column="bus_23" />
		<result property="bus_24" column="bus_24" />
		<result property="bus_25" column="bus_25" />
		<result property="bus_26" column="bus_26" />
		<result property="bus_27" column="bus_27" />
		<result property="bus_28" column="bus_28" />
		<result property="bus_29" column="bus_29" />
		<result property="bus_30" column="bus_30" />
		
		<result property="dec_11" column="dec_11" />
		<result property="dec_12" column="dec_12" />
		<result property="dec_21" column="dec_21" />
		<result property="dec_22" column="dec_22" />
		<result property="dec_23" column="dec_23" />
		<result property="dec_24" column="dec_24" />
		<result property="dec_31" column="dec_31" />
		<result property="dec_31" column="dec_31" />
		<result property="dec_32" column="dec_33" />
		<result property="dec_33" column="dec_33" />
		<result property="dec_41" column="dec_41" />
		<result property="dec_51" column="dec_51" />
		
	</resultMap>

	<resultMap type="java.util.Map" id="busTypeStoreMap">
		<result property="bus_type" column="bus_type" />
		<result property="bus_name" column="bus_name" />
		<result property="in_out" column="in_out" />
	</resultMap>

	<select id="queryBusTypesStore" parameterType="java.util.Map"
		resultMap="busTypeStoreMap">
		select distinct t.bus_type,t.bus_name,in_out from
		ASS_COLLECT_TYPE_REP_BUSTYPE t
		where t.group_id = #{group_id}
		and t.hos_id = #{hos_id}
		and t.copy_code = #{copy_code}
		and t.year_month between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR}
		and t.bus_type not in(24,25)
		<if test="in_out != null and in_out != ''">
			and t.in_out = #{in_out}
		</if>
		
		order by bus_type,in_out
	</select>
	
	<select id="queryBusTypesStoreExists" parameterType="java.util.Map"
		resultMap="busTypeStoreMap">
		select distinct t.bus_type,t.bus_name,in_out from
		ASS_COLLECT_TYPE_REP_BUSTYPE t
		where t.group_id = #{group_id}
		and t.hos_id = #{hos_id}
		and t.copy_code = #{copy_code}
		and t.year_month = #{year_month_begin,jdbcType=VARCHAR} 
		and t.bus_type not in(24,25)
		<if test="in_out != null and in_out != ''">
			and t.in_out = #{in_out}
		</if>
		
		order by bus_type,in_out
	</select>


	<!-- 资产原值变动 查询 -->
	<select id="query" parameterType="java.util.Map" resultMap="assPriceChnageStore">

		WITH temp_init AS
		(SELECT ASS_TYPE_ID,STORE_ID, SUM(r_begin) r_begin, SUM(r_end) r_end
		FROM ass_collect_type_main_rep
		WHERE
		group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and year_month = #{year_month_begin,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
		and store_id = #{store_id}
		</if>
		GROUP BY ASS_TYPE_ID,STORE_ID),
		
		
		temp_add AS
		(SELECT *
		FROM (SELECT ASS_TYPE_ID,STORE_ID, BUS_TYPE, R_ADD
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and YEAR_MONTH  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
		and store_id = #{store_id}
		</if>
		) pivot(SUM(R_ADD) FOR
		BUS_TYPE IN(${bus_type_add}))),
		
		
		temp_dec AS
		(SELECT *
		FROM (SELECT ASS_TYPE_ID,STORE_ID,BUS_TYPE, R_DEC
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and YEAR_MONTH  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
		and store_id = #{store_id}
		</if>
		
		) pivot(SUM(R_DEC) FOR
		BUS_TYPE IN(${bus_type_dec}))),
		
		
		temp_add_sum as
		(SELECT ASS_TYPE_ID,STORE_ID, SUM(r_add) r_add_sum
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
		and store_id = #{store_id}
		</if>
		and year_month  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR} and in_out=1  and bus_type not in(24,25)
		GROUP BY ASS_TYPE_ID,STORE_ID),
		
		
		temp_dec_sum as
		(SELECT ASS_TYPE_ID,STORE_ID, SUM(r_dec) r_dec_sum
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and year_month  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR} and in_out=0  and bus_type not in(24,25)
		<if test="store_id != null and store_id != ''">
		and store_id = #{store_id}
		</if>
		
		
		GROUP BY ASS_TYPE_ID,STORE_ID),
		
		
		temp_all_sum as(
			SELECT 
				ass_type_code,
				store_code,
				store_name,
				r_begin,
				${cols_add},
				r_add_sum,
				${cols_dec},
				r_dec_sum
				,r_end
			FROM temp_init t1
			LEFT JOIN temp_add t2
			ON t1.ASS_TYPE_ID = t2.ASS_TYPE_ID and t1.store_id = t2.store_id
			LEFT JOIN temp_dec t3
			ON t1.ASS_TYPE_ID = t3.ASS_TYPE_ID and t1.store_id = t3.store_id
			LEFT JOIN temp_add_sum t4
			ON t1.ASS_TYPE_ID = t4.ASS_TYPE_ID and t1.store_id = t4.store_id
			LEFT JOIN temp_dec_sum t5
			ON t1.ASS_TYPE_ID = t5.ASS_TYPE_ID and t1.store_id = t5.store_id
			left join ass_type_dict t6 on t1.ass_type_id=t6.ass_type_id
			
			left join hos_store_dict t7 on t1.store_id = t7.store_id and t7.is_stop = 0
			
			where t6.group_id=#{group_id,jdbcType=INTEGER}
			and t6.hos_id=#{hos_id,jdbcType=INTEGER}
			and t6.copy_code=#{copy_code,jdbcType=VARCHAR}
		),
		
		
		temp_results as(
				select t1.ass_type_code,cast(lpad(chr(41377), type_level * 2 - 1,chr(41377))
				|| t1.ass_type_name as varchar2(50)) ass_type_name,store_code,store_name, type_level
				,sum(r_begin) r_begin, ${cols_add_sum}, sum(r_add_sum) r_add_sum, ${cols_dec_sum}
				, sum(r_dec_sum) r_dec_sum, sum(r_end) r_end
				from ass_type_dict t1
				left join temp_all_sum t2 on t2.ass_type_code like t1.ass_type_code || '%'
				<where>
					<if test="type_level != null and type_level != ''">
						t1.type_level <![CDATA[ <= ]]> #{type_level,jdbcType=INTEGER}
					</if>
				</where>
				group by t1.ass_type_code,t1.ass_type_name,type_level,store_code,store_name
				order by ass_type_code, ass_type_name
		)
				
				
		select * from (
				select ass_type_code,ass_type_name,store_code,store_name,r_begin,${cols_add},r_add_sum,${cols_dec},r_dec_sum
				,r_end from temp_results
				union all
				select null,'合计',null,null,sum(r_begin) r_begin, ${cols_add_sum}, sum(r_add_sum) r_add_sum, ${cols_dec_sum}
				, sum(r_dec_sum) r_dec_sum, sum(r_end) r_end from temp_results where type_level=1 
		) t
		order by ass_type_code, ass_type_name

	</select>

	<!-- 打印 -->
	<select id="queryAssPriceChangStoreMainPrint" parameterType="java.util.Map"
		resultMap="assPriceChnageStore">

			WITH temp_init AS
		(SELECT ASS_TYPE_ID,STORE_ID, SUM(r_begin) r_begin, SUM(r_end) r_end
		FROM ass_collect_type_main_rep
		WHERE
		group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and year_month = #{year_month_begin,jdbcType=VARCHAR}
		GROUP BY ASS_TYPE_ID,STORE_ID),
		
		
		temp_add AS
		(SELECT *
		FROM (SELECT ASS_TYPE_ID,STORE_ID, BUS_TYPE, R_ADD
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and YEAR_MONTH  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR}
		) pivot(SUM(R_ADD) FOR
		BUS_TYPE IN(${bus_type_add}))),
		
		
		temp_dec AS
		(SELECT *
		FROM (SELECT ASS_TYPE_ID,STORE_ID,BUS_TYPE, R_DEC
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and YEAR_MONTH  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR}) pivot(SUM(R_DEC) FOR
		BUS_TYPE IN(${bus_type_dec}))),
		
		
		temp_add_sum as
		(SELECT ASS_TYPE_ID,STORE_ID, SUM(r_add) r_add_sum
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and year_month  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR} and in_out=1  and bus_type not in(24,25)
		GROUP BY ASS_TYPE_ID,STORE_ID),
		
		
		temp_dec_sum as
		(SELECT ASS_TYPE_ID,STORE_ID, SUM(r_dec) r_dec_sum
		FROM ASS_COLLECT_TYPE_REP_BUSTYPE
		WHERE group_id=#{group_id,jdbcType=INTEGER}
		and hos_id=#{hos_id,jdbcType=INTEGER}
		and copy_code=#{copy_code,jdbcType=VARCHAR}
		and year_month  between #{year_month_begin,jdbcType=VARCHAR} and   #{year_month_end,jdbcType=VARCHAR} and in_out=0  and bus_type not in(24,25)
		GROUP BY ASS_TYPE_ID,STORE_ID),
		
		
		temp_all_sum as(
			SELECT 
				ass_type_code,
				store_code,
				store_name,
				r_begin,
				${cols_add},
				r_add_sum,
				${cols_dec},
				r_dec_sum
				,r_end
			FROM temp_init t1
			LEFT JOIN temp_add t2
			ON t1.ASS_TYPE_ID = t2.ASS_TYPE_ID and t1.store_id = t2.store_id
			LEFT JOIN temp_dec t3
			ON t1.ASS_TYPE_ID = t3.ASS_TYPE_ID and t1.store_id = t3.store_id
			LEFT JOIN temp_add_sum t4
			ON t1.ASS_TYPE_ID = t4.ASS_TYPE_ID and t1.store_id = t4.store_id
			LEFT JOIN temp_dec_sum t5
			ON t1.ASS_TYPE_ID = t5.ASS_TYPE_ID and t1.store_id = t5.store_id
			left join ass_type_dict t6 on t1.ass_type_id=t6.ass_type_id
			
			left join hos_store_dict t7 on t1.store_id = t7.store_id and t7.is_stop = 0
			
			where t6.group_id=#{group_id,jdbcType=INTEGER}
			and t6.hos_id=#{hos_id,jdbcType=INTEGER}
			and t6.copy_code=#{copy_code,jdbcType=VARCHAR}
		),
		
		
		temp_results as(
				select t1.ass_type_code,cast(lpad(chr(41377), type_level * 2 - 1,chr(41377))
				|| t1.ass_type_name as varchar2(50)) ass_type_name,store_code,store_name, type_level
				,sum(r_begin) r_begin, ${cols_add_sum}, sum(r_add_sum) r_add_sum, ${cols_dec_sum}
				, sum(r_dec_sum) r_dec_sum, sum(r_end) r_end
				from ass_type_dict t1
				left join temp_all_sum t2 on t2.ass_type_code like t1.ass_type_code || '%'
				<where>
					<if test="type_level != null and type_level != ''">
						t1.type_level <![CDATA[ <= ]]> #{type_level,jdbcType=INTEGER}
					</if>
				</where>
				group by t1.ass_type_code,t1.ass_type_name,type_level,store_code,store_name
				order by ass_type_code, ass_type_name
		)
				
				
		select * from (
				select ass_type_code,ass_type_name,store_code,store_name,r_begin,${cols_add},r_add_sum,${cols_dec},r_dec_sum
				,r_end from temp_results
				union all
				select null,'合计',null,null,sum(r_begin) r_begin, ${cols_add_sum}, sum(r_add_sum) r_add_sum, ${cols_dec_sum}
				, sum(r_dec_sum) r_dec_sum, sum(r_end) r_end from temp_results where type_level=1 
		) t
		order by ass_type_code, ass_type_name

	</select>

</mapper>