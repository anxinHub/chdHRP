<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.guanLiReports.AssPropertyMonthBusMainMapper">

	<resultMap id="assPropertyMonthBusMain"
		type="com.chd.hrp.ass.entity.guanLiReports.AssPropertyMonthBusMain">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="depre_year" column="depre_year" />
		<result property="depre_month" column="depre_month" />
		<result property="ass_card_no" column="ass_card_no" />
		<result property="now_depre_amount" column="now_depre_amount" />
		<result property="remain_price" column="remain_price" />
		<result property="ass_type_code" column="ass_type_code" />
		<result property="ass_type_name" column="ass_type_name" /> 
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="begin_money" column="begin_money" />
		<result property="add_money" column="add_money" />
		<result property="dec_money" column="dec_money" />
		<result property="end_money" column="end_money" />
		<result property="balance_money" column="balance_money" />
		<result property="ass_naturs" column="ass_naturs" />
		<result property="ass_naturs_name" column="ass_naturs_name" />

	</resultMap>
	
	
	
	<resultMap id="assPropertyBusTypeMonthBusMap"
		type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="depre_year" column="depre_year" />
		<result property="depre_month" column="depre_month" />
		<result property="ass_card_no" column="ass_card_no" />
		<result property="now_depre_amount" column="now_depre_amount" />
		<result property="remain_price" column="remain_price" />
		<result property="ass_type_code" column="ass_type_code" />
		<result property="ass_type_name" column="ass_type_name" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="begin_money" column="begin_money" />
		<result property="add_money" column="add_money" />
		<result property="dec_money" column="dec_money" />
		<result property="end_money" column="end_money" />
		<result property="balance_money" column="balance_money" />
		<result property="ass_naturs" column="ass_naturs" />
		<result property="ass_naturs_name" column="ass_naturs_name" />
		
		<result property="depre_begin_money" column="depre_begin_money" />
		<result property="depre_add_money" column="depre_add_money" />
		<result property="depre_dec_money" column="depre_dec_money" />
		<result property="depre_balance_money" column="depre_balance_money" />
		
		<result property="remain_begin_money" column="remain_begin_money" />
		<result property="remain_end_money" column="remain_end_money" />
		
		<result property="cq_add" column="cq_add" />
		<result property="yz_add" column="yz_add" />
		<result property="jz_add" column="jz_add" />
		<result property="tj_add" column="tj_add" />
		
		<result property="bf_dec" column="bf_dec" />
		<result property="yz_dec" column="yz_dec" />
		<result property="th_dec" column="th_dec" />
		<result property="tj_dec" column="tj_dec" />
		
		<result property="bfjs_dec" column="bfjs_dec" />
		<result property="zjjs_dec" column="zjjs_dec" />
		<result property="thjs_dec" column="thjs_dec" />
		<result property="tjjs_dec" column="tjjs_dec" />

	</resultMap>
	
	
	<resultMap id="assPropertyMonthBusMainMap"
		type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="depre_year" column="depre_year" />
		<result property="depre_month" column="depre_month" />
		<result property="ass_card_no" column="ass_card_no" />
		<result property="now_depre_amount" column="now_depre_amount" />
		<result property="remain_price" column="remain_price" />
		<result property="ass_type_code" column="ass_type_code" />
		<result property="ass_type_name" column="ass_type_name" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="begin_money" column="begin_money" />
		<result property="add_money" column="add_money" />
		<result property="dec_money" column="dec_money" />
		<result property="end_money" column="end_money" />
		<result property="balance_money" column="balance_money" />
				<result property="ass_naturs" column="ass_naturs" />
		<result property="ass_naturs_name" column="ass_naturs_name" />

	</resultMap>

	<select id="queryAssPropertyBusMonthMain" parameterType="java.util.Map"
		resultMap="assPropertyBusTypeMonthBusMap">
		WITH type_main_rep as(
		SELECT a.GROUP_ID
		,a.HOS_ID
		,a.COPY_CODE
		,ACC_YEAR
		,ACC_MONTH
		,YEAR_MONTH
		,a.ASS_TYPE_ID
		, CASE
		WHEN ass_type_code = '040301' THEN
		'029901'
		WHEN ass_type_code = '040302' THEN
		'029902'
		ELSE
		ass_type_code
		END ass_type_code
		, CASE
		WHEN ass_type_code = '040301' THEN
		'0299'
		WHEN ass_type_code = '040302' THEN
		'0299'
		ELSE
		super_code
		END super_code
		, CASE
		WHEN ass_type_code = '040301' THEN
		'02'
		WHEN ass_type_code = '040302' THEN
		'02'
		ELSE
		ass_naturs
		END ass_naturs
		,R_BEGIN
		,R_ADD
		,R_DEC
		,R_END
		,L_BEGIN
		,L_ADD
		,L_DEC
		,L_END
		FROM ASS_COLLECT_TYPE_MAIN a
		INNER JOIN ass_type_dict b
		ON a.group_id = b.group_id
		AND a.hos_id = b.hos_id
		AND a.copy_code = b.copy_code
		AND a.ass_type_id = b.ass_type_id
		WHERE a.group_id = #{group_id, jdbcType = INTEGER}
   			AND a.hos_id = #{hos_id, jdbcType = INTEGER}
   			AND a.copy_code = #{copy_code, jdbcType = VARCHAR}
   			AND   a.year_month   between #{year_month_begin,jdbcType=VARCHAR} and #{year_month_end,jdbcType=VARCHAR}
		)

		,type_dict AS
		(SELECT GROUP_ID    ,HOS_ID , COPY_CODE , ASS_TYPE_ID , ASS_TYPE_CODE , ASS_TYPE_NAME , SUPER_CODE , TYPE_LEVEL , a.ASS_NATURS
        ,naturs_name ass_naturs_name
    FROM ASS_TYPE_DICT a
    LEFT JOIN ASS_NATURS b
      ON a.ASS_NATURS = b.naturs_code
   WHERE ass_type_code NOT IN ('0403', '040301', '040302', '06')
   AND  a.group_id = #{group_id, jdbcType = INTEGER}
   			AND a.hos_id = #{hos_id, jdbcType = INTEGER}
   			AND a.copy_code = #{copy_code, jdbcType = VARCHAR}
   			
  UNION ALL
		SELECT ${group_id}
		,${hos_id}
		,'${copy_code}'
		,0
        ,'0299'
        ,'病房护理设备（总务）'
        ,'02'
        ,2
        ,'02'
        ,'专业设备'
		FROM dual
		UNION ALL
		SELECT ${group_id}
		,${hos_id}
		,'${copy_code}'
		, 245, '029901', '床类', '0299', 3, '02', '专业设备'
		FROM dual
		UNION ALL
		SELECT ${group_id}
		,${hos_id}
		,'${copy_code}'
		, 246, '029902', '车类', '0299', 3, '02', '专业设备'
		FROM dual
		), type_begin AS
				 (SELECT t1.ass_type_code
				        ,nvl(t2.r_begin, 0) AS begin_money
				        ,nvl(t2.l_begin, 0) AS depre_begin_money
				    FROM type_dict t1
				    LEFT JOIN type_main_rep t2
				      ON t1.group_id = t2.group_id
				     AND t1.hos_id = t2.hos_id
				     AND t1.copy_code = t2.copy_code
				     AND t1.ass_type_id = t2.ass_type_id
				  AND t2.year_month = #{year_month_begin,jdbcType=VARCHAR}
				  where t1.group_id = #{group_id,jdbcType=INTEGER} AND t1.hos_id = #{hos_id,jdbcType=INTEGER} AND t1.copy_code = #{copy_code,jdbcType=VARCHAR}
				      and exists (select 1 from v_user_data_perm b where
							t1.group_id=b.group_id and t1.hos_id=b.hos_id and
							to_char(t1.ass_naturs)=b.perm_code
							AND TABLE_CODE =
							upper('ass_naturs')
							and b.user_id=#{user_id}
							and (b.is_read = 1
							or b.is_write = 1 ))
				     <if test="ass_naturs != null and ass_naturs != ''">
							and t1.ass_naturs = #{ass_naturs,jdbcType=VARCHAR}
					 </if>
				  ),
				  type_end as (
				  		SELECT t1.ass_type_code
				        ,nvl(t2.r_end, 0) AS end_money
				        ,nvl(t2.l_end, 0) AS depre_end_money
				    FROM type_dict t1
				    LEFT JOIN type_main_rep t2
				      ON t1.group_id = t2.group_id
				     AND t1.hos_id = t2.hos_id
				     AND t1.copy_code = t2.copy_code
				     AND t1.ass_type_id = t2.ass_type_id
				  AND t2.year_month = #{year_month_end,jdbcType=VARCHAR}
				  where t1.group_id = #{group_id,jdbcType=INTEGER} AND t1.hos_id = #{hos_id,jdbcType=INTEGER} AND t1.copy_code = #{copy_code,jdbcType=VARCHAR}
				      and exists (select 1 from v_user_data_perm b where
							t1.group_id=b.group_id and t1.hos_id=b.hos_id and
							to_char(t1.ass_naturs)=b.perm_code
							AND TABLE_CODE =
							upper('ass_naturs')
							and b.user_id=#{user_id}
							and (b.is_read = 1
							or b.is_write = 1 ))
				     <if test="ass_naturs != null and ass_naturs != ''">
									and t1.ass_naturs = #{ass_naturs,jdbcType=VARCHAR}
					 </if>
				  ),
type_t as
 (
  
  SELECT t1.ass_type_code,
          t1.ass_type_name,
          t1.type_level,
          nvl(t1.super_code, 0) super_code,
          sum(nvl(t2.r_add, 0)) AS add_money,
          sum(nvl(t3.cq_add, 0)) AS cq_add,
          sum(nvl(t3.yz_add, 0)) AS yz_add,
          sum(nvl(t3.jz_add, 0)) AS jz_add,
          sum(nvl(t3.tj_add, 0)) AS tj_add,
          sum(nvl(t2.r_dec, 0)) AS dec_money,
          sum(nvl(t4.bf_dec, 0)) AS bf_dec,
          sum(nvl(t4.yz_dec, 0)) AS yz_dec,
          sum(nvl(t4.th_dec, 0)) AS th_dec,
          sum(nvl(t4.tj_dec, 0)) AS tj_dec,
          sum(nvl(t2.l_add, 0)) AS depre_add_money,
          sum(nvl(t2.l_dec, 0)) AS depre_dec_money,
          sum(nvl(t5.bfjs_dec, 0)) AS bfjs_dec,
          sum(nvl(t5.zjjs_dec, 0)) AS zjjs_dec,
          sum(nvl(t5.thjs_dec, 0)) AS thjs_dec,
          sum(nvl(t5.tjjs_dec, 0)) AS  tjjs_dec
    FROM type_dict t1
    LEFT JOIN type_main_rep t2
      ON t1.group_id = t2.group_id
     AND t1.hos_id = t2.hos_id
     AND t1.copy_code = t2.copy_code
     AND t1.ass_type_id = t2.ass_type_id
     and  t2.year_month   between #{year_month_begin,jdbcType=VARCHAR} and #{year_month_end,jdbcType=VARCHAR}
    left join (select *
                 from (SELECT bus_name, ass_type_id, r_add
                         from ass_collect_type_bustype
                        where year_month between #{year_month_begin,jdbcType=VARCHAR} and #{year_month_end,jdbcType=VARCHAR})
                      
                      pivot(sum(nvl(r_add, 0)) for bus_name in('采购增加' cq_add,
                                                               '原值增加' yz_add,
                                                               '捐赠入库' jz_add,
                                                               '调剂增加' tj_add))) t3
      on t1.ass_type_id = t3.ass_type_id
  
    left join (select *
                 from (SELECT bus_name, ass_type_id, r_dec
                         from ass_collect_type_bustype
                        where year_month between #{year_month_begin,jdbcType=VARCHAR} and #{year_month_end,jdbcType=VARCHAR})
                      
                      pivot(sum(nvl(r_dec, 0)) for bus_name in('报废' bf_dec,
                                                               '原值减少' yz_dec,
                                                               '退货' th_dec,
                                                               '调剂' tj_dec))) t4
      on t1.ass_type_id = t4.ass_type_id
          
            left join (select *
                   from (SELECT bus_name, ass_type_id, L_dec
                           from ass_collect_type_bustype
                          where year_month between #{year_month_begin,jdbcType=VARCHAR} and #{year_month_end,jdbcType=VARCHAR})
                        
                        pivot(sum(nvl(L_dec, 0)) for bus_name in('报废'
                                                                 bfjs_dec,
                                                                 '折旧减少'
                                                                 zjjs_dec,
                                                                 '退货'
                                                                 thjs_dec,
                                                                 '调剂'
                                                                 tjjs_dec))) t5
              on t1.ass_type_id = t5.ass_type_id
          
			     WHERE 
			      t1.group_id = #{group_id,jdbcType=INTEGER} AND t1.hos_id = #{hos_id,jdbcType=INTEGER} AND t1.copy_code = #{copy_code,jdbcType=VARCHAR}
			      <!-- AND t1.is_stop = 0 -->        
				 <if test="ass_naturs != null and ass_naturs != ''">
					     and t1.ass_naturs = #{ass_naturs,jdbcType=VARCHAR}
				</if>
	  and exists (select 1 from v_user_data_perm b where
			t1.group_id=b.group_id and t1.hos_id=b.hos_id and
			to_char(t1.ass_naturs)=b.perm_code
			AND TABLE_CODE =
			upper('ass_naturs')
			and b.user_id=#{user_id}
			and (b.is_read = 1
			or b.is_write = 1 )) 
           group by t1.ass_type_code,
              t1.ass_type_name,
              t1.type_level,
              t1.super_code
  ),
test_all as
 (
 select  t1.ass_type_code,
         t1.ass_type_name,
         t1.type_level,
         t1.ass_naturs,
         t1.ass_naturs_name,
         nvl(t1.super_code, 0) super_code, 
         sum(begin_money) AS begin_money,
         sum(add_money) AS add_money,
         sum(cq_add) AS cq_add,
        sum(yz_add) AS yz_add,
        sum(jz_add) AS jz_add,
         sum(tj_add) AS tj_add,
         sum(dec_money) AS dec_money,
         sum(bf_dec) AS bf_dec,
         sum(yz_dec) AS yz_dec,
         sum(th_dec) AS th_dec,
        sum(tj_dec) AS tj_dec,
         sum(depre_begin_money) AS depre_begin_money,
         sum(depre_add_money) AS depre_add_money,
         sum(depre_dec_money) AS depre_dec_money,
         sum(bfjs_dec) AS bfjs_dec,
         sum(zjjs_dec) AS zjjs_dec,
         sum(thjs_dec) AS thjs_dec,
         sum(tjjs_dec) AS  tjjs_dec,
         sum(end_money) end_money,
         sum(depre_balance_money) depre_balance_money,
         sum(remain_begin_money) remain_begin_money,
         sum(remain_end_money) remain_end_money
         
         from (
 select t1.ass_type_code,
         nvl(t1.begin_money, 0) AS begin_money,
         0 AS add_money,
         0 AS cq_add,
        0 AS yz_add,
        0 AS jz_add,
         0 AS tj_add,
         0 AS dec_money,
         0 AS bf_dec,
         0 AS yz_dec,
         0 AS th_dec,
        0 AS tj_dec,
         nvl(t1.depre_begin_money, 0) AS depre_begin_money,
         0 AS depre_add_money,
         0 AS depre_dec_money,
         0 AS bfjs_dec,
         0 AS zjjs_dec,
         0 AS thjs_dec,
         0 AS  tjjs_dec,
         0 end_money,
         0 depre_balance_money,
         nvl(t1.begin_money, 0) - nvl(t1.depre_begin_money, 0) remain_begin_money,
         0 remain_end_money
  
    from type_begin t1
    union all
    select t2.ass_type_code,
        
         0 AS begin_money,
         nvl(t2.add_money, 0) AS add_money,
         nvl(t2.cq_add, 0) AS cq_add,
         nvl(t2.yz_add, 0) AS yz_add,
         nvl(t2.jz_add, 0) AS jz_add,
         nvl(t2.tj_add, 0) AS tj_add,
         nvl(t2.dec_money, 0) AS dec_money,
         nvl(t2.bf_dec, 0) AS bf_dec,
         nvl(t2.yz_dec, 0) AS yz_dec,
         nvl(t2.th_dec, 0) AS th_dec,
         nvl(t2.tj_dec, 0) AS tj_dec,
         0 AS depre_begin_money,
         nvl(t2.depre_add_money, 0) AS depre_add_money,
         nvl(t2.depre_dec_money, 0) AS depre_dec_money,
         nvl(t2.bfjs_dec, 0) AS bfjs_dec,
         nvl(t2.zjjs_dec, 0) AS zjjs_dec,
         nvl(t2.thjs_dec, 0) AS thjs_dec,
         nvl(t2.tjjs_dec, 0) AS  tjjs_dec,
         0 end_money,
         0 depre_balance_money,
         0 remain_begin_money,
         0 remain_end_money
         from  type_t t2
		 union all
		 select t3.ass_type_code,
         0 AS begin_money,
         0 AS add_money,
         0 AS cq_add,
         0 AS yz_add,
         0 AS jz_add,
        0 AS tj_add,
         0 AS dec_money,
         0 AS bf_dec,
         0 AS yz_dec,
         0 AS th_dec,
         0 AS tj_dec,
         0 AS depre_begin_money,
         0 AS depre_add_money,
         0 AS depre_dec_money,
         0 AS bfjs_dec,
         0 AS zjjs_dec,
         0 AS thjs_dec,
         0 AS  tjjs_dec,
         nvl(t3.end_money, 0) end_money,
         nvl(t3.depre_end_money, 0) depre_balance_money,
         0 remain_begin_money,
         (nvl(t3.end_money, 0)) - (nvl(t3.depre_end_money, 0)) remain_end_money
         from type_end t3) t
         left join type_dict t1 on t.ass_type_code=t1.ass_type_code
         group by t1.ass_type_code,
         t1.ass_type_name,
         t1.type_level,
         t1.ass_naturs,
         t1.ass_naturs_name,
         t1.super_code
		  ),
temp1 AS
 (SELECT t2.ass_type_code,
         t2.ass_type_name,
         t2.ass_naturs,
         t2.ass_naturs_name,
         sum(t2.begin_money) begin_money,
         sum(t2.add_money) add_money,
         sum(t2.cq_add) cq_add,
         sum(t2.yz_add) yz_add,
         sum(t2.jz_add) jz_add,
         sum(t2.tj_add) tj_add,
         sum(t2.dec_money) dec_money,
         sum(t2.bf_dec) bf_dec,
         sum(t2.yz_dec) yz_dec,
         sum(t2.th_dec) th_dec,
         sum(t2.tj_dec) tj_dec,
         sum(t2.end_money) end_money,
         sum(t2.depre_begin_money) depre_begin_money,
         sum(t2.depre_add_money) depre_add_money,
         sum(t2.depre_dec_money) depre_dec_money,
         sum(t2.bfjs_dec) bfjs_dec,
         sum(t2.zjjs_dec) zjjs_dec,
         sum(t2.thjs_dec) thjs_dec,
         sum(t2.tjjs_dec) tjjs_dec,
         sum(t2.depre_balance_money) depre_balance_money,
         sum(t2.remain_begin_money) remain_begin_money,
         sum(t2.remain_end_money) remain_end_money
    FROM (SELECT connect_by_root(t1.ass_type_code) ass_type_code,
                 connect_by_root(t1.ass_type_name) ass_type_name,
                 connect_by_root(t1.ass_naturs) ass_naturs,
                 connect_by_root(t1.ass_naturs_name) ass_naturs_name,
                 t1.begin_money,
                 t1.add_money,
                 t1.cq_add,
                 t1.yz_add,
                 t1.jz_add,
                 t1.tj_add,
                 t1.dec_money,
                 t1.end_money,
                 t1.bf_dec,
                 t1.yz_dec,
                 t1.th_dec,
                 t1.tj_dec,
                 t1.depre_begin_money,
                 t1.depre_add_money,
                 t1.depre_dec_money,
                 t1.bfjs_dec,
                 t1.zjjs_dec,
                 t1.thjs_dec,
                 t1.tjjs_dec,
                 t1.depre_balance_money,
                 t1.remain_begin_money,
                 t1.remain_end_money
            FROM test_all t1
           START WITH t1.super_code IN (SELECT super_code FROM test_all
            <if test="type_level != null and type_level != ''">
			        WHERE  type_level <![CDATA[ <= ]]> #{type_level,jdbcType=INTEGER}
			        </if>                            
                                        )
          CONNECT BY PRIOR t1.ass_type_code = t1.super_code) t2
   GROUP BY t2.ass_type_code,
            t2.ass_type_name,
            t2.ass_naturs,
            t2.ass_naturs_name
   ORDER BY t2.ass_type_code),
temp2 AS
 (SELECT t.ass_type_code,
         cast(lpad(chr(41377), level * 2 - 1, chr(41377)) || t.ass_type_name as
              varchar2(50)) ass_type_name
    FROM type_t t
   START WITH t.super_code = 0 
  CONNECT BY PRIOR t.ass_type_code = t.super_code
  )
SELECT *
  FROM (SELECT   t2.ass_type_code,
                 t2.ass_type_name,
                 ass_naturs,
                 ass_naturs_name,
                 t1.begin_money,
                 t1.add_money,
                 t1.cq_add,
                 t1.yz_add,
                 t1.jz_add,
                 t1.tj_add,
                 t1.dec_money,
                 t1.bf_dec,
                 t1.yz_dec,
                 t1.th_dec,
                 t1.tj_dec,
                 t1.end_money,
                 t1.depre_begin_money,
                 t1.depre_add_money,
                 t1.depre_dec_money,
                 t1.bfjs_dec,
                 t1.zjjs_dec,
                 t1.thjs_dec,
                 t1.tjjs_dec,
               t1.depre_balance_money,
               t1.remain_begin_money,
               t1.remain_end_money
          FROM temp1 t1, temp2 t2
         WHERE t1.ass_type_code = t2.ass_type_code
        
        UNION ALL
        
        SELECT '合计' AS ass_type_code,
               null AS ass_type_name,
               null as ass_naturs,
               null as ass_naturs_name,
               nvl(sum(t3.begin_money), 0) AS begin_money, 
               nvl(sum(t3.add_money), 0) AS add_money,
               nvl(sum(t3.cq_add), 0) cq_add,
               nvl(sum(t3.yz_add), 0) yz_add,
               nvl(sum(t3.jz_add), 0) jz_add,
               nvl(sum(t3.tj_add), 0) tj_add,
               nvl(sum(t3.dec_money), 0) AS dec_money,
               nvl(sum(t3.bf_dec), 0) bf_dec,
               nvl(sum(t3.yz_dec), 0) yz_dec,
               nvl(sum(t3.th_dec), 0) th_dec,
               nvl(sum(t3.tj_dec), 0) tj_dec,
               nvl(sum(t3.end_money), 0) as end_money,
               nvl(sum(t3.depre_begin_money), 0) AS depre_begin_money,
               nvl(sum(t3.depre_add_money), 0) AS depre_add_money,
               nvl(sum(t3.depre_dec_money), 0) AS depre_dec_money,
               nvl(sum(t3.bfjs_dec), 0) bfjs_dec,
               nvl(sum(t3.zjjs_dec), 0) zjjs_dec,
               nvl(sum(t3.thjs_dec), 0) thjs_dec,
               nvl(sum(t3.tjjs_dec), 0) tjjs_dec,
               nvl(sum(t3.depre_balance_money), 0) AS depre_balance_money,
               nvl(sum(t3.remain_begin_money), 0) AS remain_begin_money,
               nvl(sum(t3.remain_end_money), 0) AS remain_end_money
          FROM test_all t3
         
        ) t
 ORDER BY t.ass_type_code
		    
	</select>
	
	
</mapper>

