<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.measure.AssMeasurePlanMapper">
	
	<resultMap id="assMeasurePlan" type="com.chd.hrp.ass.entity.measure.AssMeasurePlan">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="plan_id" column="plan_id"/>
	<result property="plan_no" column="plan_no"/>   
	<result property="plan_name" column="plan_name"/> 
	<result property="plan_year" column="plan_year"/>
	<result property="ass_nature" column="ass_nature"/>
	<result property="naturs_name" column="naturs_name"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="queryDate" column="queryDate"/>
	<result property="check_way" column="check_way"/>
	<result property="note" column="note"/>
	<result property="measure_cycle" column="measure_cycle"/>
	
	<result property="is_inner" column="is_inner"/>
	
	<result property="is_inner_name" column="is_inner_name"/>
	
	<result property="outer_measure_org" column="outer_measure_org"/>
	
	</resultMap>
	
		<resultMap type="java.util.Map" id="assCardTable">
	<result property="ass_id_no" column="ass_id_no" />
		<result property="ass_nature" column="ass_nature" />
		<result property="naturs_code" column="naturs_code" />
		<result property="ass_card_no" column="ass_card_no" />
		<result property="ass_code" column="ass_code" />
		<result property="ass_name" column="ass_name" />
		<result property="ass_spec" column="ass_spec" />
		<result property="ass_model" column="ass_model" />
		<result property="ass_brand" column="ass_brand" />
		<result property="ass_unit_name" column="ass_unit_name" />
		<result property="fac_name" column="fac_name" />
		<result property="ven_name" column="ven_name" />
		<result property="price" column="price" />
		<result property="depre_money" column="depre_money" />
		<result property="manage_depre_money" column="manage_depre_money" />
		<result property="cur_money" column="cur_money" />
		<result property="fore_money" column="fore_money" />
		<result property="add_depre_month" column="add_depre_month" />
		<result property="add_manage_month" column="add_manage_month" />
		<result property="buy_type" column="buy_type" />
		<result property="use_state" column="use_state" />
		<result property="in_date" column="in_date" />
		<result property="ven_id" column="ven_id" />
		<result property="ven_no" column="ven_no" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="is_dept" column="is_dept" />
		<result property="dept_name" column="dept_name" />
		<result property="measure_cycle" column="measure_cycle"/>
		<result property="is_inner" column="is_inner"/>
		<result property="outer_measure_org" column="outer_measure_org"/>
		<result property="fac_id" column="fac_id"/>
		<result property="fac_no" column="fac_no"/>
		<result property="ass_seq_no" column="ass_seq_no"/>
	</resultMap>
	
	 <select id="queryCurrentSequence" resultType="java.lang.Long">
		select ASS_MEASURE_PLAN_SEQ.currval val from dual
	</select>
	<insert id="addAssMeasurePlan" useGeneratedKeys="true" >
	
		INSERT INTO ASS_MEASURE_PLAN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		plan_id
		,
		<if test="plan_no != null and plan_no != ''">
		plan_no
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		plan_name
		,
		</if>
		<if test="plan_year != null and plan_year != ''">
		plan_year
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="check_way != null and check_way != ''">
		check_way
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="measure_cycle != null and measure_cycle != ''">
		measure_cycle
		,
		</if>
		<if test="is_inner != null and is_inner != ''">
		is_inner
		,
		</if>
		<if test="outer_measure_org != null and outer_measure_org != ''">
		outer_measure_org
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		
		ASS_MEASURE_PLAN_SEQ.nextval
		,
		<if test="plan_no != null and plan_no != ''">
		#{plan_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		#{plan_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_year != null and plan_year != ''">
		#{plan_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		#{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		#{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		#{audit_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		#{audit_date,jdbcType=DATE}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=INTEGER}
		,
		</if>
		<if test="check_way != null and check_way != ''">
		#{check_way,jdbcType=VARCHAR}
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		
		</if>
		<if test="measure_cycle != null and measure_cycle != ''">
		#{measure_cycle,jdbcType=INTEGER}
		,
		</if>
		<if test="is_inner != null and is_inner != ''">
		#{is_inner,jdbcType=INTEGER}
		,
		</if>
		<if test="outer_measure_org != null and outer_measure_org != ''">
		#{outer_measure_org,jdbcType=VARCHAR}
		,
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatchAssMeasurePlan" parameterType="java.util.List" >
	
		INSERT INTO ASS_MEASURE_PLAN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		plan_id
		,
		</if>
		<if test="plan_no != null and plan_no != ''">
		plan_no
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		plan_name
		,
		</if>
		<if test="plan_year != null and plan_year != ''">
		plan_year
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="check_way != null and check_way != ''">
		check_way
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="is_inner != null and is_inner != ''">
		is_inner
		,
		</if>
		<if test="outer_measure_org != null and outer_measure_org != ''">
		outer_measure_org
		,
		</if>
		</trim>
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			<trim suffix="" suffixOverrides=",">
			<if test="group_id != null and group_id != ''">
			#{item.group_id},jdbcType=INTEGER}
			,
			</if>
			<if test="hos_id != null and hos_id != ''">
			#{item.hos_id},jdbcType=INTEGER}
			,
			</if>
			<if test="copy_code != null and copy_code != ''">
			#{item.copy_code},jdbcType=VARCHAR}
			,
			</if>
			<if test="plan_id != null and plan_id != ''">
			#{item.plan_id},jdbcType=INTEGER}
			,
			</if>
			<if test="plan_no != null and plan_no != ''">
			#{item.plan_no},jdbcType=VARCHAR}
			,
			</if>
			<if test="plan_name != null and plan_name != ''">
			#{item.plan_name},jdbcType=VARCHAR}
			,
			</if>
			<if test="plan_year != null and plan_year != ''">
			#{item.plan_year},jdbcType=VARCHAR}
			,
			</if>
			<if test="ass_nature != null and ass_nature != ''">
			#{item.ass_nature},jdbcType=VARCHAR}
			,
			</if>
			<if test="create_emp != null and create_emp != ''">
			#{item.create_emp},jdbcType=VARCHAR}
			,
			</if>
			<if test="create_date != null and create_date != ''">
			#{item.create_date},jdbcType=DATE}
			,
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			#{item.audit_emp},jdbcType=VARCHAR}
			,
			</if>
			<if test="audit_date != null and audit_date != ''">
			#{item.audit_date},jdbcType=DATE}
			,
			</if>
			<if test="state != null and state != ''">
			#{item.state},jdbcType=INTEGER}
			,
			</if>
			<if test="check_way != null and check_way != ''">
			#{item.check_way},jdbcType=VARCHAR}
			,
			</if>
			<if test="note != null and note != ''">
			#{item.note},jdbcType=VARCHAR}
			,
			</if>
			<if test="is_inner != null and is_inner != ''">
			#{item.is_inner},jdbcType=INTEGER}
			,
			</if>
			<if test="outer_measure_org != null and outer_measure_org != ''">
			#{item.outer_measure_org},jdbcType=VARCHAR}
			,
			</if>
			</trim>
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateAssMeasurePlan" parameterType="java.util.Map">
	
		UPDATE ass_measure_plan 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="plan_no != null and plan_no != ''">
		plan_no = #{plan_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		plan_name = #{plan_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_year != null and plan_year != ''">
		plan_year = #{plan_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature = #{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp = #{create_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = #{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp = #{audit_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date = #{audit_date,jdbcType=DATE}
		,
		</if>
		<if test="state != null and state != ''">
		state = #{state,jdbcType=INTEGER}
		,
		</if>
		<if test="check_way != null and check_way != ''">
		check_way = #{check_way,jdbcType=VARCHAR}
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="measure_cycle != null and measure_cycle != ''">
		measure_cycle = #{measure_cycle,jdbcType=VARCHAR}
		,
		</if>
		<if test="is_inner != null and is_inner != ''">
		is_inner = #{is_inner,jdbcType=INTEGER}
		,
		</if>
		<if test="outer_measure_org != null and outer_measure_org != ''">
		outer_measure_org = #{outer_measure_org,jdbcType=VARCHAR}
		,
		</if>
		</trim>
		<where>   
		 group_id = #{group_id,jdbcType=INTEGER}

		AND hos_id = #{hos_id,jdbcType=INTEGER}

		AND copy_code = #{copy_code,jdbcType=VARCHAR}

		AND plan_id = #{plan_id,jdbcType=INTEGER}
		
		</where>  
	</update>
	<update id="updateBatchAssMeasurePlan" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_measure_plan 
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.state != null and item.state != ''">
					state = #{item.state},
				</if> 
			    <if test="item.audit_emp != null and item.audit_emp != ''">
					audit_emp = #{item.audit_emp} ,
				</if>
				<if test="item.audit_date != null and item.audit_date != ''">
					audit_date = #{item.audit_date} ,
				</if>
			 	<if test="item.is_inner != null and item.is_inner != ''">
				is_inner = #{item.is_inner,}
				,
				</if>
				<if test="item.outer_measure_org != null and item.outer_measure_org != ''">
				outer_measure_org = #{item.outer_measure_org}
				,
				</if>
			</trim>
		   <where>
					state=0
				<if test="item.group_id != null and item.group_id != ''">
					AND group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code}
				</if> 
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id}
				</if>
			</where>		
		</foreach>
	</update>
	
	
		
		<update id="updateBatchAssMeasurePlanBack" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE ass_measure_plan
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.state != null and item.state != ''">
					state = #{item.state},
				</if> 
					  audit_emp = #{item.audit_emp},  
				      audit_date = #{item.audit_date},
				 
			</trim>
			<where>
					state=1
				<if test="item.group_id != null and item.group_id != ''">
					AND group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code}
				</if> 
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id}
				</if>
			</where>
			</foreach>
	</update>
	
	
	 <update id="updateBatchAssMeasurePlanStop" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE ass_measure_plan
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.state != null and item.state != ''">
					state = #{item.state},
				</if>  
				 
			</trim>
			<where> 
				<if test="item.group_id != null and item.group_id != ''">
					AND group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code}
				</if> 
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id}
				</if>
			</where>
			</foreach>
	</update>
	
	<delete id="deleteAssMeasurePlan" parameterType="java.util.Map">
	
		DELETE FROM ass_measure_plan 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="check_way != null and check_way != ''">
		AND check_way = #{check_way,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatchAssMeasurePlan" parameterType="java.util.List">
		DELETE FROM ass_measure_plan 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				  group_id = #{item.group_id,jdbcType=INTEGER}

				AND hos_id = #{item.hos_id,jdbcType=INTEGER}

				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}

				AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				
			</foreach>
	    </where>  
	</delete>
	<select id="queryAssMeasurePlan" parameterType="java.util.Map" resultMap="assMeasurePlan" >
	
		SELECT amp.group_id,
	       amp.hos_id,
	       amp.copy_code,
	       amp.plan_id,
	       amp.plan_no,
	       amp.plan_name,
	       amp.plan_year,
	       amp.ass_nature,
	       an.naturs_name,
	       amp.create_emp,
	       su.user_name    create_emp_name,
	       amp.create_date,
	       amp.audit_emp,
	       suu.user_name   audit_emp_name,
	       amp.audit_date,
	       amp.state,
	       amp.check_way,
	       amp.note ,
	       amp.is_inner ,
	       amp.outer_measure_org
	  FROM ASS_MEASURE_PLAN amp
	  left join (select group_id,
	                    hos_id,
	                    copy_code,
	                    plan_id,
	                    max(ass_card_no) ass_card_no
	               from ass_measure_plan_ass
	              group by group_id, hos_id, copy_code, plan_id) aa
	    on aa.group_id = amp.group_id
	   and aa.hos_id = amp.hos_id
	   and aa.copy_code = amp.copy_code
	   and aa.plan_id = amp.plan_id
	  left join v_ass_card ca
	    on ca.GROUP_ID = aa.group_id
	   and ca.HOS_ID = aa.hos_id
	   and ca.COPY_CODE = aa.copy_code
	   and ca.ASS_CARD_NO = aa.ass_card_no
	  left join ass_no_dict di
	    on di.group_id = ca.GROUP_ID
	   and di.hos_id = ca.HOS_ID
	   and di.copy_code = ca.COPY_CODE
	   and di.ass_id = ca.ASS_ID
	   and di.ass_no = ca.ASS_NO
	   and di.is_stop = 0
	  left join ass_naturs an
	    on amp.ass_nature = an.naturs_code
	  left join sys_user su
	    on amp.create_emp = su.user_id
	  left join sys_user suu
	    on amp.audit_emp = suu.user_id

		<where>                     
		<if test="group_id != null and group_id != ''">
		AND amp.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND amp.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND amp.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND amp.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND amp.plan_no like  '%${plan_no}%'
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND amp.plan_name like  '%${plan_name}%'
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND amp.plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND amp.ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND amp.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND amp.create_date = #{create_date,jdbcType=DATE}
		</if>
	    <if test="create_date_begin != null and create_date_begin != '' and create_date_end != null and create_date_end != ''">
			AND amp.create_date between to_date(#{create_date_begin},'yyyy/mm/dd') and to_date(#{create_date_end},'yyyy/mm/dd')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND amp.audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND amp.audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="audit_date_begin != null and audit_date_begin != '' and audit_date_end != null and audit_date_end != ''">
			AND amp.audit_date between to_date(#{audit_date_begin},'yyyy/mm/dd') and to_date(#{audit_date_end},'yyyy/mm/dd')
		</if>
		<if test="state != null and state != ''">
		AND amp.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="check_way != null and check_way != ''">
		AND amp.check_way = #{check_way,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND amp.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="ass_table != null and ass_table != ''">
		AND (di.ass_name like '%${ass_table}%' 
		or aa.ass_card_no  like '%${ass_table}%' 
		or di.ass_code like '%${ass_table}%'  
		)
		</if>
		</where>   
		order by amp.plan_id asc
	</select>
	<select id="queryAssMeasurePlanByCode" resultMap="assMeasurePlan"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_name,
		plan_year,
		ass_nature,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		check_way,
		note,
		measure_cycle ,
		is_inner,
		outer_measure_org
		FROM ass_measure_plan 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		plan_id = #{plan_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryAssMeasurePlanByUniqueness" resultMap="assMeasurePlan"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_name,
		plan_year,
		ass_nature,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		check_way,
		note ,
		is_inner ,
		outer_measure_org
		FROM ASS_MEASURE_PLAN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="check_way != null and check_way != ''">
		AND check_way = #{check_way,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryAssMeasurePlanExists" resultMap="assMeasurePlan"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_name,
		plan_year,
		ass_nature,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		check_way,
		note ,
		is_inner ,
		outer_measure_org
		FROM ASS_MEASURE_PLAN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="check_way != null and check_way != ''">
		AND check_way = #{check_way,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryAssCardSpecial" resultMap="assCardTable">
		SELECT
			an.naturs_code||' '||an.naturs_name ass_nature,
			an.naturs_code naturs_code,
			a.ass_card_no , 
			b.ass_code,
			b.ass_name,
			b.ass_spec,
			b.ass_model,
			b.ass_brand,
		    hu.unit_name ass_unit_name,
		    hfd.fac_code||' '||hfd.fac_name fac_name,
		    hsd.sup_code||' '||hsd.sup_name ven_name,
		    a.price,
		    a.depre_money,
		    a.manage_depre_money,
		    a.cur_money,
		    a.fore_money,
		    a.add_depre_month,
		    a.add_manage_month,
		    a.buy_type,
		    a.use_state,
		    a.in_date,
		    a.ven_id,
		    a.ven_no,
		    a.store_id,
		    a.store_no,
		    a.is_dept,
		    hdd.dept_name,
		    a.fac_id,
		    a.fac_no,
		    a.ass_seq_no
		FROM ASS_CARD_SPECIAL a 
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		and b.is_measure = 1
		left join ass_type_dict c on
		b.group_id = c.group_id
		and b.hos_id = c.hos_id
	    and b.copy_code = c.copy_code
	    and b.ass_type_id = c.ass_type_id
	    and c.is_stop = 0
	    
	    left join ass_naturs an on
	    c.ass_naturs = an.naturs_code
	    
	    left join hos_unit hu on
	    b.group_id=hu.group_id and
	    b.hos_id=hu.hos_id and
	    b.ass_unit=hu.unit_code 
	    and hu.is_stop=0
	    
	    left join hos_fac_dict hfd on 
	    a.group_id = hfd.group_id
	    and a.hos_id = hfd.hos_id
	    and a.fac_id = hfd.fac_id
	    and hfd.is_stop = 0
	    
	    left join hos_sup_dict hsd on
	    a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.ven_id = hsd.sup_id
		and hsd.is_stop = 0
		
		left join hos_dept_dict hdd on
	    a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
        
        left join (
         select 	 
         			 t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no,
			         nvl(sum(t1.unpay_money),0) unpay_money,
			         nvl(sum(t1.pay_money),0) pay_money ,
			         nvl(sum(t1.pay_plan_money),0) pay_plan_money 
			         
         	from  ass_pay_stage_SPECIAL t1 
                left join ass_card_SPECIAL t2 on
                t1.group_id = t2.group_id
                and t1.hos_id = t2.hos_id
                and t1.copy_code = t2.copy_code
                and t1.ass_card_no = t2.ass_card_no
               group by t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no   
	    )  pay on a.group_id = pay.group_id 
	    and a.hos_id = pay.hos_id
	    and a.copy_code = pay.copy_code
	    and a.ass_card_no = pay.ass_card_no
		
		<where>
				and a.group_id = #{group_id}
				and a.hos_id = #{hos_id}
				and a.copy_code = #{copy_code}
				and a.is_measure = 1
				and a.use_state in (0,1,2,3,4,5,6)
			<if test="ass_nature != null  and ass_nature != ''">
				and an.naturs_code = #{ass_nature}
			</if>
			<if test="bus_type_code != null  and bus_type_code != ''">
				and a.buy_type = #{bus_type_code}
			</if>
			<if test="ass_card_no != null  and ass_card_no != ''">
				and a.ass_card_no like '%${ass_card_no}%'
			</if>
			<if test="ass_name != null  and ass_name != ''">
				and b.ass_name like '%${ass_name}%'
			</if>	
			<if test="dept_id != null  and dept_id != ''">
				and a.dept_id = #{dept_id}
			</if>	
			<if test="dept_no != null  and dept_no != ''">
				and a.dept_no = #{dept_no}
			</if>
			<if test="use_state != null  and use_state != ''">
				and a.use_state in (${use_state})
			</if>	
			<if test="in_date != null  and in_date != ''">
				and a.in_date  &lt;= to_date(#{in_date},'YYYY-MM-DD')
			</if>
			<if test="store_id != null  and store_id != ''">
				and a.store_id = #{store_id}
			</if>	
			<if test="store_no != null  and store_no != ''">
				and a.store_no = #{store_no}
			</if>
			<if test="ven_id != null  and ven_id != ''">
				and a.ven_id = #{ven_id}
			</if>	
			<if test="ven_no != null  and ven_no != ''">
				and a.ven_no = #{ven_no}
			</if>
			<if test="is_dept != null  and is_dept != ''">
				and a.is_dept = #{is_dept}
			</if>
			<if test="contract_id != null  and contract_id != ''">
				and a.contract_id = #{contract_id}
			</if>	
			<if test="dept_id != null  and dept_id != '' and dept_no != null  and dept_no != ''">
				 and exists(

						select 1 from ass_share_dept_SPECIAL t1
						where a.hos_id = t1.hos_id
						and a.copy_code = t1.copy_code
						and a.ass_card_no = t1.ass_card_no 
				  		and t1.dept_id = #{dept_id}
				        and t1.dept_no = #{dept_no}
 					)
			</if>	
			<if test="is_payment != null  and is_payment != ''">
				and pay.pay_plan_money - pay.pay_money > 0
			</if>
			<if test="is_unpayment != null  and is_unpayment != ''">
				and pay.pay_money > 0
			</if>
			<if test="ass_card_not_exists != null  and ass_card_not_exists != ''">
				and a.ass_card_no not in (${ass_card_not_exists})
			</if>
			<if test=" key != null  and  key != ''">
				and (
					a.ass_card_no like '%${key}%' or
					a.ass_id like '%${key}%' or
					b.ass_code like '%${key}%' or
					b.ass_name like '%${key}%' or
					an.naturs_code like '%${key}%' or 
				    b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
			<if test=" sql != null  and  sql != ''">
				and not exists (
				${sql}
				)
			</if>
		</where>
		order by a.ass_card_no
	</select>
	
	<select id="queryAssCardGeneral" resultMap="assCardTable">
		SELECT
		an.naturs_code||' '||an.naturs_name ass_nature,
		an.naturs_code naturs_code,
		a.ass_card_no , 
		b.ass_code,
		b.ass_name,
		b.ass_spec,
		b.ass_model,
		b.ass_brand,
	    hu.unit_name ass_unit_name,
	    hfd.fac_code||' '||hfd.fac_name fac_name,
	    hsd.sup_code||' '||hsd.sup_name ven_name,
	    a.price,
	    a.depre_money,
		a.manage_depre_money,
		a.cur_money,
		a.fore_money,
		a.add_depre_month,
		a.add_manage_month,
		a.buy_type,
		a.use_state,
		a.in_date,
		    a.ven_id,
		    a.ven_no,
		    a.store_id,
		    a.store_no,
		    a.is_dept,
		    hdd.dept_name,
		    a.fac_id,
		    a.fac_no,
		    a.ass_seq_no
		FROM
		ASS_CARD_GENERAL a 
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		and b.is_measure = 1
		left join ass_type_dict c on
		b.group_id = c.group_id
		and b.hos_id = c.hos_id
	    and b.copy_code = c.copy_code
	    and b.ass_type_id = c.ass_type_id
	    and c.is_stop = 0
	    
	    left join ass_naturs an on
	    c.ass_naturs = an.naturs_code
	    
	    left join hos_unit hu on
	    b.group_id=hu.group_id and
	    b.hos_id=hu.hos_id and
	    b.ass_unit=hu.unit_code 
	    and hu.is_stop=0
	    
	    left join hos_fac_dict hfd on 
	    a.group_id = hfd.group_id
	    and a.hos_id = hfd.hos_id
	    and a.fac_id = hfd.fac_id
	    and hfd.is_stop = 0
	    
	    left join hos_sup_dict hsd on
	    a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.ven_id = hsd.sup_id
		and hsd.is_stop = 0
		
		left join hos_dept_dict hdd on
	    a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
        
        left join (
         select 	 
         			 t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no,
			         nvl(sum(t1.unpay_money),0) unpay_money,
			         nvl(sum(t1.pay_money),0) pay_money ,
			         nvl(sum(t1.pay_plan_money),0) pay_plan_money 
			         
         	from  ass_pay_stage_GENERAL t1 
                left join ass_card_GENERAL t2 on
                t1.group_id = t2.group_id
                and t1.hos_id = t2.hos_id
                and t1.copy_code = t2.copy_code
                and t1.ass_card_no = t2.ass_card_no
               group by t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no   
	    )  pay on a.group_id = pay.group_id 
	    and a.hos_id = pay.hos_id
	    and a.copy_code = pay.copy_code
	    and a.ass_card_no = pay.ass_card_no
		
		<where>
				and a.group_id = #{group_id}
				and a.hos_id = #{hos_id}
				and a.copy_code = #{copy_code}
				and a.is_measure = 1
				and a.use_state in (0,1,2,3,4,5,6)
			<if test="ass_nature != null  and ass_nature != ''">
				and an.naturs_code = #{ass_nature}
			</if>
			<if test="bus_type_code != null  and bus_type_code != ''">
				and a.buy_type = #{bus_type_code}
			</if>	
			<if test="use_state != null  and use_state != ''">
				and a.use_state in (${use_state})
			</if>	
			<if test="in_date != null  and in_date != ''">
				and a.in_date  &lt;= to_date(#{in_date},'YYYY-MM-DD')
			</if>
			<if test="ass_card_no != null  and ass_card_no != ''">
				and a.ass_card_no like '%${ass_card_no}%'
			</if>
			<if test="ass_name != null  and ass_name != ''">
				and b.ass_name like '%${ass_name}%'
			</if>
			<if test="dept_id != null  and dept_id != ''">
				and a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null  and dept_no != ''">
				and a.dept_no = #{dept_no}
			</if>
			<if test="store_id != null  and store_id != ''">
				and a.store_id = #{store_id}
			</if>	
			<if test="store_no != null  and store_no != ''">
				and a.store_no = #{store_no}
			</if>
			<if test="ven_id != null  and ven_id != ''">
				and a.ven_id = #{ven_id}
			</if>	
			<if test="ven_no != null  and ven_no != ''">
				and a.ven_no = #{ven_no}
			</if>
			<if test="is_dept != null  and is_dept != ''">
				and a.is_dept = #{is_dept}
			</if>
			<if test="contract_id != null  and contract_id != ''">
				and a.contract_id = #{contract_id}
			</if>	
			<if test="dept_id != null  and dept_id != '' and dept_no != null  and dept_no != ''">
				 and exists(

						select 1 from ass_share_dept_GENERAL t1
						where a.hos_id = t1.hos_id
						and a.copy_code = t1.copy_code
						and a.ass_card_no = t1.ass_card_no 
				  		and t1.dept_id = #{dept_id}
				        and t1.dept_no = #{dept_no}
 					)
			</if>
			<if test="is_payment != null  and is_payment != ''">
				and pay.pay_plan_money - pay.pay_money > 0
			</if>
			<if test="is_unpayment != null  and is_unpayment != ''">
				and pay.pay_money > 0
			</if>
			<if test="ass_card_not_exists != null  and ass_card_not_exists != ''">
				and a.ass_card_no not in (${ass_card_not_exists})
			</if>
			<if test=" key != null  and  key != ''">
				and (
					a.ass_card_no like '%${key}%' or
					a.ass_id like '%${key}%' or
					b.ass_code like '%${key}%' or
					b.ass_name like '%${key}%' or
					an.naturs_code like '%${key}%' or 
				    b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
			<if test=" sql != null  and  sql != ''">
				and not exists (
				${sql}
				)
			</if>
		</where>
		order by a.ass_card_no
	</select>
	
	<select id="queryAssCardHouse" resultMap="assCardTable">
		SELECT
		an.naturs_code||' '||an.naturs_name ass_nature,
		an.naturs_code naturs_code,
		a.ass_card_no , 
		b.ass_code,
		b.ass_name,
		b.ass_spec,
		b.ass_model,
		b.ass_brand,
	    hu.unit_name ass_unit_name,
	    hfd.fac_code||' '||hfd.fac_name fac_name,
	    hsd.sup_code||' '||hsd.sup_name ven_name,
	    a.price,
	    a.depre_money,
		a.manage_depre_money,
		a.cur_money,
		a.fore_money,
		a.add_depre_month,
		a.add_manage_month,
		a.buy_type,
		a.use_state,
		a.in_date,
		    a.ven_id,
		    a.ven_no,
		    null store_id,
		    null store_no,
		    null is_dept,
		    hdd.dept_name
		FROM
		ASS_CARD_HOUSE a 
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		and b.is_measure = 1
		left join ass_type_dict c on
		b.group_id = c.group_id
		and b.hos_id = c.hos_id
	    and b.copy_code = c.copy_code
	    and b.ass_type_id = c.ass_type_id
	    and c.is_stop = 0
	    
	    left join ass_naturs an on
	    c.ass_naturs = an.naturs_code
	    
	    left join hos_unit hu on
	    b.group_id=hu.group_id and
	    b.hos_id=hu.hos_id and
	    b.ass_unit=hu.unit_code 
	    and hu.is_stop=0
	    
	    left join hos_fac_dict hfd on 
	    b.group_id = hfd.group_id
	    and b.hos_id = hfd.hos_id
	    and b.fac_id = hfd.fac_id
	    and hfd.is_stop = 0
	    
	    left join hos_sup_dict hsd on
	    a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.ven_id = hsd.sup_id
		and hsd.is_stop = 0
		
		left join hos_dept_dict hdd on
	    a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
        
        left join (
         select 	 
         			 t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no,
			         nvl(sum(t1.unpay_money),0) unpay_money,
			         nvl(sum(t1.pay_money),0) pay_money ,
			         nvl(sum(t1.pay_plan_money),0) pay_plan_money
			         
         	from  ass_pay_stage_HOUSE t1 
                left join ass_card_HOUSE t2 on
                t1.group_id = t2.group_id
                and t1.hos_id = t2.hos_id
                and t1.copy_code = t2.copy_code
                and t1.ass_card_no = t2.ass_card_no
               group by t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no   
	    )  pay on a.group_id = pay.group_id 
	    and a.hos_id = pay.hos_id
	    and a.copy_code = pay.copy_code
	    and a.ass_card_no = pay.ass_card_no
		
		<where>
				and a.group_id = #{group_id}
				and a.hos_id = #{hos_id}
				and a.copy_code = #{copy_code}
				<!-- and a.is_measure = 1 -->
				and a.use_state in (0,1,2,3,4,5,6)
			<if test="ass_nature != null  and ass_nature != ''">
				and an.naturs_code = #{ass_nature}
			</if>
			<if test="bus_type_code != null  and bus_type_code != ''">
				and a.buy_type = #{bus_type_code}
			</if>	
			<if test="ass_card_no != null  and ass_card_no != ''">
				and a.ass_card_no like '%${ass_card_no}%'
			</if>
			<if test="ass_name != null  and ass_name != ''">
				and b.ass_name like '%${ass_name}%'
			</if>
			<if test="dept_id != null  and dept_id != ''">
				and a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null  and dept_no != ''">
				and a.dept_no = #{dept_no}
			</if>
			<if test="use_state != null  and use_state != ''">
				and a.use_state in (${use_state})
			</if>	
			<if test="in_date != null  and in_date != ''">
				and a.in_date  &lt;= to_date(#{in_date},'YYYY-MM-DD')
			</if>
			<if test="store_id != null  and store_id != ''">
				and a.store_id = #{store_id}
			</if>	
			<if test="store_no != null  and store_no != ''">
				and a.store_no = #{store_no}
			</if>
			<if test="ven_id != null  and ven_id != ''">
				and a.ven_id = #{ven_id}
			</if>	
			<if test="ven_no != null  and ven_no != ''">
				and a.ven_no = #{ven_no}
			</if>
			<if test="is_dept != null  and is_dept != ''">
				and a.is_dept = #{is_dept}
			</if>
			<if test="contract_id != null  and contract_id != ''">
				and a.contract_id = #{contract_id}
			</if>	
			<if test="dept_id != null  and dept_id != '' and dept_no != null  and dept_no != ''">
				 and exists(

						select 1 from ass_share_dept_HOUSE t1
						where a.hos_id = t1.hos_id
						and a.copy_code = t1.copy_code
						and a.ass_card_no = t1.ass_card_no 
				  		and t1.dept_id = #{dept_id}
				        and t1.dept_no = #{dept_no}
 					)
			</if>
			<if test="is_payment != null  and is_payment != ''">
				and pay.pay_plan_money - pay.pay_money > 0
			</if>
			<if test="is_unpayment != null  and is_unpayment != ''">
				and pay.pay_money > 0
			</if>
			<if test="ass_card_not_exists != null  and ass_card_not_exists != ''">
				and a.ass_card_no not in (${ass_card_not_exists})
			</if>
			<if test=" key != null  and  key != ''">
				and (
					a.ass_card_no like '%${key}%' or
					a.ass_id like '%${key}%' or
					b.ass_code like '%${key}%' or
					b.ass_name like '%${key}%' or
					an.naturs_code like '%${key}%' or 
				    b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
			<if test=" sql != null  and  sql != ''">
				and not exists (
				${sql}
				)
			</if>
		</where>
		order by a.ass_card_no
	</select>
	
	<select id="queryAssCardOther" resultMap="assCardTable">
		SELECT
			an.naturs_code||' '||an.naturs_name ass_nature,
			an.naturs_code naturs_code,
			a.ass_card_no , 
			b.ass_code,
			b.ass_name,
			b.ass_spec,
			b.ass_model,
			b.ass_brand,
		    hu.unit_name ass_unit_name,
		    hfd.fac_code||' '||hfd.fac_name fac_name,
		    hsd.sup_code||' '||hsd.sup_name ven_name,
		    a.price,
		    a.depre_money,
		    a.manage_depre_money,
		    a.cur_money,
		    a.fore_money,
		    a.add_depre_month,
		    a.add_manage_month,
		    a.buy_type,
		    a.use_state,
		    a.in_date,
		    a.ven_id,
		    a.ven_no,
		    a.store_id,
		    a.store_no,
		    a.is_dept,
		    hdd.dept_name,
		    a.fac_id,
		    a.fac_no,
		    a.ass_seq_no
		FROM
		ASS_CARD_OTHER a 
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		and b.is_measure = 1
		left join ass_type_dict c on
		b.group_id = c.group_id
		and b.hos_id = c.hos_id
	    and b.copy_code = c.copy_code
	    and b.ass_type_id = c.ass_type_id
	    and c.is_stop = 0
	    
	    left join ass_naturs an on
	    c.ass_naturs = an.naturs_code
	    
	    left join hos_unit hu on
	    b.group_id=hu.group_id and
	    b.hos_id=hu.hos_id and
	    b.ass_unit=hu.unit_code 
	    and hu.is_stop=0
	    
	    left join hos_fac_dict hfd on 
	    a.group_id = hfd.group_id
	    and a.hos_id = hfd.hos_id
	    and a.fac_id = hfd.fac_id
	    and hfd.is_stop = 0
	    
	    left join hos_sup_dict hsd on
	    a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.ven_id = hsd.sup_id
		and hsd.is_stop = 0
		
		left join hos_dept_dict hdd on
	    a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
        
        left join (
         select 	 
         			 t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no,
			         nvl(sum(t1.unpay_money),0) unpay_money,
			         nvl(sum(t1.pay_money),0) pay_money ,
			         nvl(sum(t1.pay_plan_money),0) pay_plan_money
			         
         	from  ass_pay_stage_OTHER t1 
                left join ass_card_OTHER t2 on
                t1.group_id = t2.group_id
                and t1.hos_id = t2.hos_id
                and t1.copy_code = t2.copy_code
                and t1.ass_card_no = t2.ass_card_no
               group by t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no   
	    )  pay on a.group_id = pay.group_id 
	    and a.hos_id = pay.hos_id
	    and a.copy_code = pay.copy_code
	    and a.ass_card_no = pay.ass_card_no
		
		<where>
				and a.group_id = #{group_id}
				and a.hos_id = #{hos_id}
				and a.copy_code = #{copy_code}
				and a.is_measure = 1
				and a.use_state in (0,1,2,3,4,5,6)
			<if test="ass_nature != null  and ass_nature != ''">
				and an.naturs_code = #{ass_nature}
			</if>
			<if test="bus_type_code != null  and bus_type_code != ''">
				and a.buy_type = #{bus_type_code}
			</if>	
			<if test="use_state != null  and use_state != ''">
				and a.use_state in (${use_state})
			</if>
			<if test="ass_card_no != null  and ass_card_no != ''">
				and a.ass_card_no like '%${ass_card_no}%'
			</if>
			<if test="ass_name != null  and ass_name != ''">
				and b.ass_name like '%${ass_name}%'
			</if>	
			<if test="dept_id != null  and dept_id != ''">
				and a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null  and dept_no != ''">
				and a.dept_no = #{dept_no}
			</if>
			<if test="in_date != null  and in_date != ''">
				and a.in_date  &lt;= to_date(#{in_date},'YYYY-MM-DD')
			</if>
			<if test="store_id != null  and store_id != ''">
				and a.store_id = #{store_id}
			</if>	
			<if test="store_no != null  and store_no != ''">
				and a.store_no = #{store_no}
			</if>
			<if test="ven_id != null  and ven_id != ''">
				and a.ven_id = #{ven_id}
			</if>	
			<if test="ven_no != null  and ven_no != ''">
				and a.ven_no = #{ven_no}
			</if>
			<if test="is_dept != null  and is_dept != ''">
				and a.is_dept = #{is_dept}
			</if>
			<if test="contract_id != null  and contract_id != ''">
				and a.contract_id = #{contract_id}
			</if>
			<if test="dept_id != null  and dept_id != '' and dept_no != null  and dept_no != ''">
				 and exists(

						select 1 from ass_share_dept_OTHER t1
						where a.hos_id = t1.hos_id
						and a.copy_code = t1.copy_code
						and a.ass_card_no = t1.ass_card_no 
				  		and t1.dept_id = #{dept_id}
				        and t1.dept_no = #{dept_no}
 					)
			</if>	
			<if test="is_payment != null  and is_payment != ''">
				and pay.pay_plan_money - pay.pay_money > 0
			</if>
			<if test="is_unpayment != null  and is_unpayment != ''">
				and pay.pay_money > 0
			</if>
			<if test="ass_card_not_exists != null  and ass_card_not_exists != ''">
				and a.ass_card_no not in (${ass_card_not_exists})
			</if>
			<if test=" key != null  and  key != ''">
				and (
					a.ass_card_no like '%${key}%' or
					a.ass_id like '%${key}%' or
					b.ass_code like '%${key}%' or
					b.ass_name like '%${key}%' or
					an.naturs_code like '%${key}%' or 
				    b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
			<if test=" sql != null  and  sql != ''">
				and not exists (
				${sql}
				)
			</if>
		</where>
		order by a.ass_card_no
	</select>
	
	
	<select id="queryAssCardInassets" resultMap="assCardTable">
		SELECT
			an.naturs_code||' '||an.naturs_name ass_nature,
			an.naturs_code naturs_code,
			a.ass_card_no , 
			b.ass_code,
			b.ass_name,
			b.ass_spec,
			b.ass_model,
			b.ass_brand,
		    hu.unit_name ass_unit_name,
		    hfd.fac_code||' '||hfd.fac_name fac_name,
		    hsd.sup_code||' '||hsd.sup_name ven_name,
		    a.price,
		    a.depre_money,
		    a.manage_depre_money,
		    a.cur_money,
		    a.fore_money,
		    a.add_depre_month,
		    a.add_manage_month,
		    a.buy_type,
		    a.use_state,
		    a.in_date,
		    a.ven_id,
		    a.ven_no,
		    a.store_id,
		    a.store_no,
		    a.is_dept,
		    hdd.dept_name
		FROM
		ass_card_inassets a 
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		and b.is_measure = 1
		left join ass_type_dict c on
		b.group_id = c.group_id
		and b.hos_id = c.hos_id
	    and b.copy_code = c.copy_code
	    and b.ass_type_id = c.ass_type_id
	    and c.is_stop = 0
	    
	    left join ass_naturs an on
	    c.ass_naturs = an.naturs_code
	    
	    left join hos_unit hu on
	    b.group_id=hu.group_id and
	    b.hos_id=hu.hos_id and
	    b.ass_unit=hu.unit_code 
	    and hu.is_stop=0
	    
	    left join hos_fac_dict hfd on 
	    b.group_id = hfd.group_id
	    and b.hos_id = hfd.hos_id
	    and b.fac_id = hfd.fac_id
	    and hfd.is_stop = 0
	    
	    left join hos_sup_dict hsd on
	    a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.ven_id = hsd.sup_id
		and hsd.is_stop = 0
		
		left join hos_dept_dict hdd on
	    a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
        
        left join (
         select 	 
         			 t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no,
			         nvl(sum(t1.unpay_money),0) unpay_money,
			         nvl(sum(t1.pay_money),0) pay_money ,
			         nvl(sum(t1.pay_plan_money),0) pay_plan_money
			         
         	from  ass_pay_stage_inassets t1 
                left join ass_card_inassets t2 on
                t1.group_id = t2.group_id
                and t1.hos_id = t2.hos_id
                and t1.copy_code = t2.copy_code
                and t1.ass_card_no = t2.ass_card_no
               group by t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no   
	    )  pay on a.group_id = pay.group_id 
	    and a.hos_id = pay.hos_id
	    and a.copy_code = pay.copy_code
	    and a.ass_card_no = pay.ass_card_no
        
		<where>
				and a.group_id = #{group_id}
				and a.hos_id = #{hos_id}
				and a.copy_code = #{copy_code}
				and a.is_measure = 1
				and a.use_state in (0,1,2,3,4,5,6)
			<if test="ass_nature != null  and ass_nature != ''">
				and an.naturs_code = #{ass_nature}
			</if>
			<if test="bus_type_code != null  and bus_type_code != ''">
				and a.buy_type = #{bus_type_code}
			</if>	
			<if test="use_state != null  and use_state != ''">
				and a.use_state in (${use_state})
			</if>	
			<if test="in_date != null  and in_date != ''">
				and a.in_date  &lt;= to_date(#{in_date},'YYYY-MM-DD')
			</if>
			<if test="store_id != null  and store_id != ''">
				and a.store_id = #{store_id}
			</if>	
			<if test="ass_card_no != null  and ass_card_no != ''">
				and a.ass_card_no like '%${ass_card_no}%'
			</if>
			<if test="ass_name != null  and ass_name != ''">
				and b.ass_name like '%${ass_name}%'
			</if>
			<if test="dept_id != null  and dept_id != ''">
				and a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null  and dept_no != ''">
				and a.dept_no = #{dept_no}
			</if>
			<if test="store_no != null  and store_no != ''">
				and a.store_no = #{store_no}
			</if>
			<if test="ven_id != null  and ven_id != ''">
				and a.ven_id = #{ven_id}
			</if>	
			<if test="ven_no != null  and ven_no != ''">
				and a.ven_no = #{ven_no}
			</if>
			<if test="is_dept != null  and is_dept != ''">
				and a.is_dept = #{is_dept}
			</if>
			<if test="contract_id != null  and contract_id != ''">
				and a.contract_id = #{contract_id}
			</if>	
			<if test="dept_id != null  and dept_id != '' and dept_no != null  and dept_no != ''">
				 and exists(

						select 1 from ass_share_dept_inassets t1
						where a.hos_id = t1.hos_id
						and a.copy_code = t1.copy_code
						and a.ass_card_no = t1.ass_card_no 
				  		and t1.dept_id = #{dept_id}
				        and t1.dept_no = #{dept_no}
 					)
			</if>
			<if test="is_payment != null  and is_payment != ''">
				and pay.pay_plan_money - pay.pay_money > 0
			</if>
			<if test="is_unpayment != null  and is_unpayment != ''">
				and pay.pay_money > 0
			</if>
			<if test="ass_card_not_exists != null  and ass_card_not_exists != ''">
				and a.ass_card_no not in (${ass_card_not_exists})
			</if>
			<if test=" key != null  and  key != ''">
				and (
					a.ass_card_no like '%${key}%' or
					a.ass_id like '%${key}%' or
					b.ass_code like '%${key}%' or
					b.ass_name like '%${key}%' or
					an.naturs_code like '%${key}%' or 
				    b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
			<if test=" sql != null  and  sql != ''">
				and not exists (
				${sql}
				)
			</if>
		</where>
		order by a.ass_card_no
	</select>
	
	
	<select id="queryAssCardLand" resultMap="assCardTable">
		SELECT
			an.naturs_code||' '||an.naturs_name ass_nature,
			an.naturs_code naturs_code,
			a.ass_card_no , 
			b.ass_code,
			b.ass_name,
			b.ass_spec,
			b.ass_model,
			b.ass_brand,
		    hu.unit_name ass_unit_name,
		    hfd.fac_code||' '||hfd.fac_name fac_name,
		    hsd.sup_code||' '||hsd.sup_name ven_name,
		    a.price,
		    a.depre_money,
		    a.manage_depre_money,
		    a.cur_money,
		    a.fore_money,
		    a.add_depre_month,
		    a.add_manage_month,
		    a.buy_type,
		    a.use_state,
		    a.in_date,
		    a.ven_id,
		    a.ven_no,
		    null store_id,
		    null store_no,
		    null is_dept,
		    hdd.dept_name
		FROM
		ass_card_land a 
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		and b.is_measure = 1
		left join ass_type_dict c on
		b.group_id = c.group_id
		and b.hos_id = c.hos_id
	    and b.copy_code = c.copy_code
	    and b.ass_type_id = c.ass_type_id
	    and c.is_stop = 0
	    
	    left join ass_naturs an on
	    c.ass_naturs = an.naturs_code
	    
	    left join hos_unit hu on
	    b.group_id=hu.group_id and
	    b.hos_id=hu.hos_id and
	    b.ass_unit=hu.unit_code 
	    and hu.is_stop=0
	    
	    left join hos_fac_dict hfd on 
	    b.group_id = hfd.group_id
	    and b.hos_id = hfd.hos_id
	    and b.fac_id = hfd.fac_id
	    and hfd.is_stop = 0
	    
	    left join hos_sup_dict hsd on
	    a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.ven_id = hsd.sup_id
		and hsd.is_stop = 0
		
		left join hos_dept_dict hdd on
	    a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		
		left join (
         select 	 
         			 t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no,
			         nvl(sum(t1.unpay_money),0) unpay_money,
			         nvl(sum(t1.pay_money),0) pay_money ,
			         nvl(sum(t1.pay_plan_money),0) pay_plan_money
			         
         	from  ass_pay_stage_land t1 
                left join ass_card_land t2 on
                t1.group_id = t2.group_id
                and t1.hos_id = t2.hos_id
                and t1.copy_code = t2.copy_code
                and t1.ass_card_no = t2.ass_card_no
               group by t1.group_id, t1.hos_id, t1.copy_code, t1.ass_card_no   
	    )  pay on a.group_id = pay.group_id 
	    and a.hos_id = pay.hos_id
	    and a.copy_code = pay.copy_code
	    and a.ass_card_no = pay.ass_card_no 
		
		
		<where>
				and a.group_id = #{group_id}
				and a.hos_id = #{hos_id}
				and a.copy_code = #{copy_code}
				<!-- and a.is_measure = 1 -->
				and a.use_state in (0,1,2,3,4,5,6)
			<if test="ass_nature != null  and ass_nature != ''">
				and an.naturs_code = #{ass_nature}
			</if>
			<if test="bus_type_code != null  and bus_type_code != ''">
				and a.buy_type = #{bus_type_code}
			</if>	
			<if test="ass_card_no != null  and ass_card_no != ''">
				and a.ass_card_no like '%${ass_card_no}%'
			</if>
			<if test="ass_name != null  and ass_name != ''">
				and b.ass_name like '%${ass_name}%'
			</if>
			<if test="dept_id != null  and dept_id != ''">
				and a.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null  and dept_no != ''">
				and a.dept_no = #{dept_no}
			</if>
			<if test="use_state != null  and use_state != ''">
				and a.use_state in (${use_state})
			</if>	
			<if test="in_date != null  and in_date != ''">
				and a.in_date  &lt;= to_date(#{in_date},'YYYY-MM-DD')
			</if>
			<if test="store_id != null  and store_id != ''">
				and a.store_id = #{store_id}
			</if>	
			<if test="store_no != null  and store_no != ''">
				and a.store_no = #{store_no}
			</if>
			<if test="ven_id != null  and ven_id != ''">
				and a.ven_id = #{ven_id}
			</if>	
			<if test="ven_no != null  and ven_no != ''">
				and a.ven_no = #{ven_no}
			</if>
			<if test="is_dept != null  and is_dept != ''">
				and a.is_dept = #{is_dept}
			</if>
			<if test="contract_id != null  and contract_id != ''">
				and a.contract_id = #{contract_id}
			</if>	
			<if test="dept_id != null  and dept_id != '' and dept_no != null  and dept_no != ''">
				 and exists(

						select 1 from ass_share_dept_land t1
						where a.hos_id = t1.hos_id
						and a.copy_code = t1.copy_code
						and a.ass_card_no = t1.ass_card_no 
				  		and t1.dept_id = #{dept_id}
				        and t1.dept_no = #{dept_no}
 					)
			</if>
			<if test="is_payment != null  and is_payment != ''">
				and pay.pay_plan_money - pay.pay_money > 0
			</if>
			<if test="is_unpayment != null  and is_unpayment != ''">
				and pay.pay_money > 0
			</if>
			<if test="ass_card_not_exists != null  and ass_card_not_exists != ''">
				and a.ass_card_no not in (${ass_card_not_exists})
			</if>
			<if test=" key != null  and  key != ''">
				and (
					a.ass_card_no like '%${key}%' or
					a.ass_id like '%${key}%' or
					b.ass_code like '%${key}%' or
					b.ass_name like '%${key}%' or
					an.naturs_code like '%${key}%' or 
				    b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
			<if test=" sql != null  and  sql != ''">
				and not exists (
				${sql}
				)
			</if>
		</where> 
		order by a.ass_card_no
	</select>
	<!-- 计量提醒 -->
	<select id="queryAssMeasureRemindPlan" parameterType="java.util.Map" resultMap="assMeasurePlan" >
	
		SELECT 
		amp.group_id, 
		amp.hos_id, 
		amp.copy_code, 
		amp.plan_id, 
		amp.plan_no , 
		amp.plan_name, 
		amp.plan_year, 
		amp.ass_nature, 
		an.naturs_name,
		amp.create_emp,
		su.user_name  create_emp_name,
		amp.create_date , 
		amp.audit_emp, 
		suu.user_name audit_emp_name,
		amp.audit_date, 
		 case when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{newDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) &lt; 0 then '过期' 
           when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{newDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) = 0 then '到期'
           when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{newDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) &lt;   p.para_value then '临近'  
           end as state_name ,
		amp.check_way, 
		amp.note ,
		amp.is_inner ,
		amp.outer_measure_org
		    FROM ASS_MEASURE_PLAN amp
		    left join ass_naturs an on amp.ass_nature = an.naturs_code
		    left join sys_user su on amp.create_emp = su.user_id
		    left join sys_user suu on amp.audit_emp = suu.user_id
		    left join acc_para p on amp.group_id = p.group_id  and 
				amp.hos_id = p.hos_id  and 
				amp.copy_code = p.copy_code and 
				p.para_code = '05004'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND amp.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND amp.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND amp.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		
		AND amp.state = 1
		<if test="state_name ==1 ">
		and nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{newDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) &gt;  0 and nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{queryDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) &lt; p.para_value
		</if>
		<if test="state_name ==2">
		and nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{newDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) = 0
		</if>
		<if test="state_name ==3">
		and nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.measure_cycle) - to_date(#{newDate,jdbcType=DATE},'yyyy-MM-dd'))), 0) &lt; 0 
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND amp.ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND amp.plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		</where>   
		order by amp.plan_id asc
	</select>
	
	<!-- 打印主表 -->
	<select id="queryAssMeasurePlanByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
		 
		amp.plan_id as id, 
		amp.group_id, 
		amp.hos_id, 
		amp.copy_code,
		amp.plan_no , 
		amp.plan_name, 
		amp.plan_year, 
		amp.ass_nature, 
		an.naturs_name,
		amp.create_emp,
		su.user_name  create_emp_name,
		amp.create_date , 
		amp.audit_emp, 
		suu.user_name audit_emp_name,
		amp.audit_date, 
		amp.state,
		case when amp.state = 0 then '新建' when amp.state = 1 then '审核' when amp.state = 2 then '终止' else '' end state_name, 
		amp.check_way, 
		amp.note ,
		case when amp.is_inner = 0 then '否' else '是' end is_inner_name, 
		amp.outer_measure_org
		
		    FROM ASS_MEASURE_PLAN amp
		    left join ass_naturs an on amp.ass_nature = an.naturs_code
		    left join sys_user su on amp.create_emp = su.user_id
		    left join sys_user suu on amp.audit_emp = suu.user_id
	where                     
			amp.group_id = #{group_id}
			AND amp.hos_id = #{hos_id}
			AND amp.copy_code = #{copy_code}
			AND amp.plan_id in (${paraId})
		order by amp.plan_id asc
	</select>
	
	<!-- 修改页面打印 -->
	<select id="queryAssMeasurePlanByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
		 
		amp.plan_id as id, 
		amp.group_id, 
		amp.hos_id, 
		amp.copy_code,
		amp.plan_no , 
		amp.plan_name, 
		amp.plan_year, 
		amp.ass_nature, 
		an.naturs_name,
		amp.create_emp,
		su.user_name  create_emp_name,
		amp.create_date , 
		amp.audit_emp, 
		suu.user_name audit_emp_name,
		amp.audit_date, 
		amp.state,
		case when amp.state = 0 then '新建' when amp.state = 1 then '审核' when amp.state = 2 then '终止' else '' end state_name, 
		amp.check_way, 
		amp.note ,
		case when amp.is_inner = 0 then '否' else '是' end is_inner_name, 
		amp.outer_measure_org
		    FROM ASS_MEASURE_PLAN amp
		    left join ass_naturs an on amp.ass_nature = an.naturs_code
		    left join sys_user su on amp.create_emp = su.user_id
		    left join sys_user suu on amp.audit_emp = suu.user_id
	where                     
			amp.group_id = #{group_id}
			AND amp.hos_id = #{hos_id}
			AND amp.copy_code = #{copy_code}
			AND amp.plan_id  = #{plan_id}
		order by amp.plan_id asc
	</select>
	
	<!-- 从表打印 -->
	<select id="queryAssMeasurePlanByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.plan_id as id,
		       a.ass_card_no,
		       c.ASS_SPEC,
		       c.ASS_MONDL,
		       c.ASS_BRAND,
		       b.ass_code,
		       b.ass_name,
		       d.fac_code,
		       d.fac_name,
		       a.measure_cycle,
		       case
		         when a.measure_kind = 0 then
		          '年度计划'
		         when a.measure_kind = 1 then
		          '临时计划'
		         else
		          ''
		       end measure_kind_name,
		       a.plan_exec_date,
		       a.measure_desc<!-- ,
		       case
		         when a.is_inner = 0 then
		          '否'
		         when a.is_inner = 1 then
		          '是'
		         else
		          ''
		       end is_inner_name,
		       a.outer_measure_org -->
		
		  FROM ASS_MEASURE_PLAN_ASS a
		  left join v_ass_card c
		    on a.group_id = c.GROUP_ID
		   and a.hos_id = c.HOS_ID
		   and a.copy_code = c.COPY_CODE
		   and a.ass_card_no = c.ASS_CARD_NO
		  left join ASS_NO_DICT b
		    on b.group_id = c.GROUP_ID
		   and b.hos_id = c.HOS_ID
		   and b.copy_code = c.COPY_CODE
		   and b.ass_id = c.ASS_ID
		   and b.ass_no = c.ASS_NO
		  left join HOS_FAC_DICT d
		    on d.group_id = c.GROUP_ID
		   and d.hos_id = c.HOS_ID
		   and d.fac_id = c.FAC_ID
		   and d.fac_no = c.FAC_NO
		where 
		a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND a.plan_id in  (${paraId})
			</if>
			<if test="plan_id != null and plan_id != ''">
			AND a.plan_id = #{plan_id,jdbcType=VARCHAR}
			</if> 	
	
	order by a.plan_id asc
	</select>
	
	<!-- 打印状态 -->
	<select id="queryAssMeasurePlanState" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT plan_no  FROM ass_measure_plan 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND plan_id in  (${paraId})
			</if>
			<if test="plan_id != null and plan_id != ''">
			AND plan_id = #{plan_id,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
</mapper>

