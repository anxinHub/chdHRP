<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.balance.AssBalanceHouseMapper">

	<resultMap id="assBalanceHouseMap"
		type="com.chd.hrp.ass.entity.balance.AssBalanceHouse">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="year_month" column="year_month" />
		<result property="ass_id" column="ass_id" />
		<result property="store_id" column="store_id" />
		<result property="dept_id" column="dept_id" />
		
		<result property="begin_amount" column="begin_amount" />
		<result property="begin_money" column="begin_money" />
		<result property="add_amount" column="add_amount" />
		<result property="add_money" column="add_money" />
		<result property="dec_amount" column="dec_amount" />
		<result property="dec_money" column="dec_money" />
		<result property="end_amount" column="end_amount" />
		<result property="end_money" column="end_money" />
	</resultMap>

   <insert  id = "add"   useGeneratedKeys="true" >
	
	
	     INSERT INTO ASS_BALANCE_HOUSE (
	     
	     group_id,
	     
	     hos_id,
	     
	     copy_code,
	     
	     year_month,
	     
	     ass_id,
	     
	     store_id,
	     
	     dept_id,
	     
	     begin_amount,
	     
	     begin_money,
	     
	     add_amount,
	     
	     add_money,
	     
	     dec_amount,
	     
	     dec_money,
	     
	     end_amount,
	     
	     end_money
	     )
         values(
	  	    #{group_id,jdbcType=INTEGER},
	  	    
	  	    #{hos_id,jdbcType=INTEGER},
	  	   
	  	    #{copy_code,jdbcType=VARCHAR},
	  	    
	  	    #{year_month,jdbcType=VARCHAR},
	  	    
	  	    #{ass_id,jdbcType=VARCHAR},
	  	    
	  	    #{store_id,jdbcType=VARCHAR},
	  	    
	  	    #{dept_id,jdbcType=VARCHAR},
	  	    
	  	    #{begin_amount,jdbcType=INTEGER},
	  	        
	  	    #{begin_money,jdbcType=INTEGER},
	  	            
	  	    #{add_amount,jdbcType=INTEGER},
	  	                
	  	    #{add_money,jdbcType=INTEGER},
	  	                    
	  	    #{dec_amount,jdbcType=INTEGER},
	  	                        
	  	    #{dec_money,jdbcType=INTEGER},
	  	    
	  	    #{end_amount,jdbcType=INTEGER},
	  	                        
	  	    #{end_money,jdbcType=INTEGER}
	  	    )
	  		
	</insert>
     <insert id = "addCheckOutEnd"   parameterType="java.util.Map">
  
      insert into ASS_BALANCE_HOUSE
       (group_id,
       
       hos_id,
       
       copy_code,
       
       year_month,
       
       ass_id,
       
       store_id,
       
       dept_id,
       
       begin_amount,
       
       begin_money,
       
       add_amount,
       
       add_money,
       
       dec_amount,
	     
	     dec_money,
	     
	     end_amount,
	     
	     end_money)
       
       select 
       group_id,
       
       hos_id,
       
       copy_code,
       
       #{current_year_month,jdbcType=VARCHAR},
       
       ass_id,
       
       store_id,
       
       dept_id,
       
       end_amount,
       
       end_money,
       
       0,
       
       0,
       
       0,
	     
	   0,
	     
	   0,
	     
	   0 
       from ASS_BALANCE_HOUSE
        <where>                   
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>  
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>  
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="year_month != null and year_month != ''">
			AND year_month = #{year_month,jdbcType=VARCHAR}
			</if>  
    </where>
	 
	 </insert>
        <insert  id = "addBatch"  parameterType="java.util.List" >
	
	
	     INSERT INTO ASS_BALANCE_HOUSE (
	     
	     group_id,
	     
	     hos_id,
	     
	     copy_code,
	     
	     year_month,
	     
	     ass_id,
	     
	     store_id,
	     
	     dept_id,
	     
	     begin_amount,
	     
	     begin_money,
	     
	     add_amount,
	     
	     add_money,
	     
	     dec_amount,
	     
	     dec_money,
	     
	     end_amount,
	     
	     end_money
	     )
	  	<foreach collection="list" item="item" index="index" separator=" union all " >
	  	 
	  	     select 
	  	    
	  	    #{item.group_id,jdbcType=INTEGER},
	  	    
	  	    #{item.hos_id,jdbcType=INTEGER},
	  	   
	  	    #{item.copy_code,jdbcType=VARCHAR},
	  	    
	  	    #{item.year_month,jdbcType=VARCHAR},
	  	    
	  	    #{item.ass_id,jdbcType=VARCHAR},
	  	    
	  	    #{item.store_id,jdbcType=VARCHAR},
	  	    
	  	    #{item.dept_id,jdbcType=VARCHAR},
	  	    
	  	    #{item.begin_amount,jdbcType=INTEGER},
	  	        
	  	    #{item.begin_money,jdbcType=INTEGER},
	  	            
	  	    #{item.add_amount,jdbcType=INTEGER},
	  	                
	  	    #{item.add_money,jdbcType=INTEGER},
	  	                    
	  	    #{item.dec_amount,jdbcType=INTEGER},
	  	                        
	  	    #{item.dec_money,jdbcType=INTEGER},
	  	    
	  	    #{item.end_amount,jdbcType=INTEGER},
	  	                        
	  	    #{item.end_money,jdbcType=INTEGER}
	  	    
	  		from dual
		</foreach>
	
	</insert>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BALANCE_HOUSE 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.begin_amount != null and item.begin_amount != ''">
			begin_money = #{item.begin_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.begin_money != null and item.begin_money != ''">
			begin_money = #{item.begin_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.add_amount != null and item.add_amount != ''">
			add_amount = #{item.add_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.add_money != null and item.add_money != ''">
			add_money = #{item.add_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dec_amount != null and item.dec_amount != ''">
			dec_amount = #{item.dec_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dec_money != null and item.dec_money != ''">
			dec_money = #{item.dec_money,jdbcType=INTEGER}
			,
			</if>
		    <if test="item.end_amount != null and item.end_amount != ''">
			end_amount = #{item.end_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="item.end_money != null and item.end_money != ''">
			end_money = #{item.end_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.sql != null and item.sql != ''">
				AND ${sql}
			,
			</if>
			</trim>
			<where>                   
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.year_month != null and item.year_month != ''">
			AND year_month = #{item.year_month,jdbcType=VARCHAR}
			</if>  
			<if test="item.ass_id != null and item.ass_id != ''">
			AND ass_id = #{item.ass_id,jdbcType=VARCHAR}
			</if>  
			<if test="item.store_id != null and item.store_id != ''">
			AND store_id = #{item.store_id,jdbcType=VARCHAR}
			</if>  
			<if test="item.dept_id != null and item.dept_id != ''">
			AND dept_id = #{item.dept_id,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<update id="updateCheckOutEnds" parameterType="java.util.Map">
	
	    UPDATE ASS_BALANCE_HOUSE 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="begin_amount != null and begin_amount != ''">
			begin_amount = #{begin_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="begin_money != null and begin_money != ''">
			begin_money = #{begin_money,jdbcType=INTEGER}
			,
			</if>
			<if test="add_amount != null and add_amount != ''">
			add_amount = NVL(add_amount,0) + #{add_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="add_money != null and add_money != ''">
			add_money = NVL(add_money,0) + #{add_money,jdbcType=INTEGER}
			,
			</if>
			<if test="dec_amount != null and dec_amount != ''">
			dec_amount = NVL(dec_amount,0) + #{dec_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="dec_money != null and dec_money != ''">
			dec_money = NVL(dec_money,0) +  #{dec_money,jdbcType=INTEGER}
			,
			</if>
		    <if test="end_amount != null and end_amount != ''">
			end_amount = #{end_amount,jdbcType=INTEGER}
			,
			</if>
			<if test="end_money != null and end_money != ''">
			end_money = #{end_money,jdbcType=INTEGER}
			,
			</if>
			</trim>
			<where>                   
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>  
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>  
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="year_month != null and year_month != ''">
			AND year_month = #{year_month,jdbcType=VARCHAR}
			</if>  
			<if test="ass_id != null and ass_id != ''">
			AND ass_id = #{ass_id,jdbcType=VARCHAR}
			</if>  
			<if test="store_id != null and store_id != ''">
			AND store_id = #{store_id,jdbcType=VARCHAR}
			</if>  
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=VARCHAR}
			</if>  
			</where>  	
	   
	</update>
	
	<update id="updateCheckOutEnd" parameterType="java.util.Map">
           update ASS_BALANCE_HOUSE  b set b.end_amount = (
      select nvl(begin_amount,0) + nvl(add_amount,0) - nvl(dec_amount,0) end_amount
  from ASS_BALANCE_HOUSE a where a.group_id = b.group_id and 
  a.hos_id = b.hos_id and a.copy_code = b.copy_code and 
  a.ass_id = b.ass_id and a.store_id = b.store_id and a.year_month = b.year_month
 ),b.end_money = (
     select nvl(begin_money,0)  + nvl(add_money,0) - nvl(dec_money,0) end_money
     from ASS_BALANCE_HOUSE a
    where a.group_id = b.group_id and 
    a.hos_id = b.hos_id and a.copy_code = b.copy_code and 
    a.ass_id = b.ass_id and a.store_id = b.store_id and a.year_month = b.year_month
   )
   <where>
   			<if test="group_id != null and group_id != ''">
			AND b.group_id = #{group_id,jdbcType=INTEGER}
			</if>  
			<if test="hos_id != null and hos_id != ''">
			AND b.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>  
			<if test="copy_code != null and copy_code != ''">
			AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="year_month != null and year_month != ''">
			AND b.year_month = #{year_month,jdbcType=VARCHAR}
			</if>  
    </where>
	</update>
	
	<select id ="query" parameterType="java.util.Map" resultMap="assBalanceHouseMap" >
	
	 select 
	     
	     group_id,
	     
	     hos_id,
	     
	     copy_code,
	     
	     year_month,
	     
	     ass_id,
	     
	     store_id,
	     
	     dept_id,
	     
	     begin_amount,
	     
	     begin_money,
	     
	     add_amount,
	     
	     add_money,
	     
	     dec_amount,
	     
	     dec_money,
	     
	     end_amount,
	     
	     end_money
	     
	     from ASS_BALANCE_HOUSE
	     <where>
	         <if test="group_id != null and group_id != ''">
		       AND group_id = #{group_id,jdbcType=INTEGER}
		     </if>
		     <if test="hos_id != null and hos_id != ''">
		       AND hos_id = #{hos_id,jdbcType=INTEGER}
		     </if>
		     <if test="copy_code != null and copy_code != ''">
		       AND copy_code = #{copy_code,jdbcType=VARCHAR}
		     </if>
		     <if test="year_month != null and year_month != ''">
		      AND year_month = #{year_month,jdbcType=VARCHAR}
		     </if>
		     <if test="ass_id != null and ass_id != ''">
		       AND ass_id = #{ass_id,jdbcType=INTEGER}
		     </if>
		      <if test="store_id != null and store_id != ''">
		       AND store_id = #{store_id,jdbcType=INTEGER}
		     </if>
		       <if test="dept_id != null and dept_id != ''">
		       AND dept_id = #{dept_id,jdbcType=INTEGER}
		     </if>
	     </where>
	      
	   
	</select>
	
	 <select  id = "queryByCode" resultMap="assBalanceHouseMap"  parameterType="java.util.Map">
	
	    select 
	     
	     group_id,
	     
	     hos_id,
	     
	     copy_code,
	     
	     year_month,
	     
	     ass_id,
	     
	     store_id,
	     
	     dept_id,
	     
	     begin_amount,
	     
	     begin_money,
	     
	     add_amount,
	     
	     add_money,
	     
	     dec_amount,
	     
	     dec_money,
	     
	     end_amount,
	     
	     end_money
	     
	     from ASS_BALANCE_HOUSE
	     
	    <where>
	          <if test="group_id != null and group_id != ''">
		     AND group_id = #{group_id,jdbcType=INTEGER}
		     </if>
		     <if test="hos_id != null and hos_id != ''">
		     AND hos_id = #{hos_id,jdbcType=INTEGER}
		     </if>
		     <if test="copy_code != null and copy_code != ''">
		      AND copy_code = #{copy_code,jdbcType=VARCHAR}
		     </if>
		      <if test="year_month != null and year_month != ''">
		      AND year_month = #{year_month,jdbcType=VARCHAR}
		     </if>
		   	  <if test="year_month_Balance!= null and year_month_Balance != ''">
		      AND year_month = #{year_month,jdbcType=VARCHAR}
		     </if>
		     <if test="ass_id != null and ass_id != ''">
		      AND ass_id = #{ass_id,jdbcType=VARCHAR}
		     </if>
		      <if test="store_id != null and store_id != ''">
		      AND store_id = #{store_id,jdbcType=VARCHAR}
		     </if>
		      <if test="dept_id != null and dept_id != ''">
		      AND dept_id = #{dept_id,jdbcType=VARCHAR}
		     </if>
	    </where>
	
	</select>

  <select id = "queryBalanceAccountHouseMain"  parameterType="java.util.Map" resultMap="assBalanceHouseMap">
     
                      SELECT
                        ss.group_id, 
                        ss.hos_id,
                        ss.copy_code, 
                        atd.ass_type_code, 
                        atd.ass_type_name , 
                        ss.year_month, NULL AS acc_begin_money, 
                        SUM(ss.begin_money), NULL AS acc_add_money, 
                        SUM(ss.add_money), NULL AS acc_dec_money,
                        SUM(ss.dec_money), NULL AS acc_end_money,
                         SUM(ss.end_money)
                                    from 
                         (select 
                           ABH.group_id,
                           ABH.hos_id,
                           ABH.copy_code,
                           ABH.year_month,
                           ABH.ass_id,
                           sum(nvl(ABH.begin_amount,0)) begin_amount,
                           sum(nvl(ABH.begin_money,0)) begin_money,
                           sum(nvl(ABH.add_amount,0)) add_amount,
                           sum(nvl(ABH.add_money,0)) add_money,
                           sum(nvl(ABH.dec_amount,0)) dec_amount,
                           sum(nvl(ABH.dec_money,0)) dec_money,
                           sum(nvl(ABH.end_amount,0)) end_amount,
                           sum(nvl(ABH.end_money,0)) end_money,
                           ad.ass_type_id
                                  from 
                           ASS_BALANCE_HOUSE ABH
                           left join ass_no_dict ad on ABH.ass_id = ad.ass_id
                           where ad.is_stop = '0'
                           GROUP BY  ABH.group_id,ABH.hos_id,ABH.copy_code,
                           ABH.year_month, ABH.ass_id, ad.ass_type_id ) ss
                           left join ass_type_dict atd on atd.ass_type_id = ss.ass_type_id
                           and atd.group_id = ss.group_id and atd.hos_id = ss.hos_id
                           and atd.copy_code = ss.copy_code
                            <where>
                            <if test="group_id != null and group_id != ''">
	                         ss.group_id = #{group_id,jdbcType=INTEGER}
				             </if>
				            <if test="hos_id != null and hos_id != ''">
				            AND ss.hos_id = #{hos_id,jdbcType=INTEGER}
				             </if>
				            <if test="copy_code != null and copy_code != ''">
				             AND ss.copy_code = #{copy_code,jdbcType=VARCHAR}
			               	</if>
				            <if test="year_month != null and year_month != ''">
				             AND ss.year_month = #{year_month,jdbcType=VARCHAR}
			             	</if>
                            </where> 
                             GROUP BY  ss.group_id, ss.hos_id, ss.copy_code, atd.ass_type_code, atd.ass_type_name,ss.year_month
     </select>

    <select id = "queryBalanceAccountHouseDetail"  parameterType="java.util.Map" resultMap="assBalanceHouseMap">
     
                    SELECT ss.group_id, ss.hos_id, ss.copy_code, atd.ass_type_code, atd.ass_type_name,ss.ass_name
        , ss.year_month, NULL AS acc_begin_money, ss.begin_money, NULL AS acc_add_money, ss.add_money
        , NULL AS acc_dec_money, ss.dec_money, NULL AS acc_end_money, ss.end_money
          FROM (
         SELECT abh.group_id, abh.hos_id, abh.copy_code, abh.year_month, abh.ass_id,ad.ass_name
        , SUM(nvl(abh.begin_amount, 0)) AS begin_amount, SUM(nvl(abh.begin_money, 0)) AS begin_money, SUM(nvl(abh.add_amount, 0)) AS add_amount, SUM(nvl(abh.add_money, 0)) AS add_money, SUM(nvl(abh.dec_amount, 0)) AS dec_amount
        , SUM(nvl(abh.dec_money, 0)) AS dec_money, SUM(nvl(abh.end_amount, 0)) AS end_amount, SUM(nvl(abh.end_money, 0)) AS end_money, ad.ass_type_id
      FROM ASS_BALANCE_House abh
        LEFT JOIN ass_no_dict ad ON abh.ass_id = ad.ass_id 
      WHERE ad.is_stop = '0'
      GROUP BY abh.group_id, abh.hos_id, abh.copy_code, abh.year_month, abh.ass_id, ad.ass_type_id,ad.ass_name
        ) ss
       LEFT JOIN ass_type_dict atd ON atd.ass_type_id = ss.ass_type_id
               AND atd.group_id = ss.group_id
               AND atd.hos_id = ss.hos_id
               AND atd.copy_code = ss.copy_code 
                            <where>
                            <if test="group_id != null and group_id != ''">
	                         ss.group_id = #{group_id,jdbcType=INTEGER}
				             </if>
				            <if test="hos_id != null and hos_id != ''">
				            AND ss.hos_id = #{hos_id,jdbcType=INTEGER}
				             </if>
				            <if test="copy_code != null and copy_code != ''">
				             AND ss.copy_code = #{copy_code,jdbcType=VARCHAR}
			               	</if>
				            <if test="year_month != null and year_month != ''">
				             AND ss.year_month = #{year_month,jdbcType=VARCHAR}
			             	</if>
                            </where> 

     </select>

 <delete id="delete" parameterType="java.util.Map">
   
        DELETE FROM ASS_BALANCE_HOUSE 
		<where>
				<if test="group_id != null and group_id != ''">
	             group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="year_month != null and year_month != ''">
				AND year_month = #{year_month,jdbcType=VARCHAR}
				</if>
	    </where>  
		
   </delete>
	 <delete id="deleteBatch" parameterType="java.util.List">
   
        DELETE FROM ASS_BALANCE_HOUSE 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
	             group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year_month != null and item.year_month != ''">
				AND year_month = #{item.year_month,jdbcType=VARCHAR}
				</if>
			
			</foreach>
	    </where>  
		
   </delete>
</mapper>

