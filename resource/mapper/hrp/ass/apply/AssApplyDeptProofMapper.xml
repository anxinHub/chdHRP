<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.apply.AssApplyDeptProofMapper">

<resultMap type="com.chd.hrp.ass.entity.apply.AssApplyDeptProof" id="assApplyDeptProof">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="apply_id" column="apply_id" />
		<result property="proof_id" column="proof_id" />
		<result property="bcost_year" column="bcost_year" />
		<result property="avg_cost" column="avg_cost" />
		<result property="avg_profit" column="avg_profit" />
		<result property="benefit_rate" column="benefit_rate" />
		<result property="create_user" column="create_user" />
		<result property="use_place" column="use_place" />
		<result property="apply_analyze" column="apply_analyze" />
		<result property="investigate_analyze" column="investigate_analyze" />
		<result property="describ" column="describ" />
		
</resultMap>
<resultMap type="com.chd.hrp.ass.entity.apply.AssApplyDeptProofDetail" id="assApplyDeptProofDetail">

		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="proof_id" column="proof_id" />
		<result property="proof_detail_id" column="proof_detail_id" />
		<result property="year_num" column="year_num" />
		<result property="project_income" column="project_income" />
		<result property="year_workload" column="year_workload" />
		<result property="charge_stand" column="charge_stand" />
		<result property="consumable_cost" column="consumable_cost" />
		<result property="employee_cost" column="employee_cost" />
		<result property="maintenance_cost" column="apply_analyze" />
		<result property="waterele_cost" column="waterele_cost" />
		<result property="depreciation_cost" column="depreciation_cost" />
		<result property="other_cost" column="other_cost" />

</resultMap>
<select id="queryApplyProof" parameterType="java.util.Map" resultMap="assApplyDeptProof">
 select  group_id, hos_id, copy_code,proof_id, bcost_year, avg_cost, avg_profit, benefit_rate, create_user, use_place, apply_analyze, investigate_analyze, describ
  from ass_apply_proof 
  <where>
  		proof_id=#{proof_id} 
      <if test="group_id != null and group_id != ''">
             AND group_id = #{group_id}
      </if>
	  <if test="hos_id != null and hos_id != ''">
             AND hos_id = #{hos_id}
      </if>
	  <if test="copy_code != null and copy_code != ''">
             AND copy_code = #{copy_code}
      </if>
      
  </where>
</select>

<select id="queryApplyProofDetail" parameterType="java.util.Map" resultMap="assApplyDeptProofDetail">
select  group_id, hos_id, copy_code, proof_id,proof_detail_id, year_num, project_income, year_workload, charge_stand, consumable_cost,
 employee_cost, maintenance_cost, waterele_cost, depreciation_cost, other_cost
 from ass_apply_proof_detail
 <where>
 proof_id=#{proof_id}
 <if test="group_id != null and group_id != ''">
             AND group_id = #{group_id}
      </if>
	  <if test="hos_id != null and hos_id != ''">
             AND hos_id = #{hos_id}
      </if>
	  <if test="copy_code != null and copy_code != ''">
             AND copy_code = #{copy_code}
      </if>
     
 </where>
</select>

<delete id="deleteApplyProof"  parameterType="java.util.Map"> 

 delete from ass_apply_proof 
 where proof_id=#{proof_id} and group_id = #{group_id} AND hos_id = #{hos_id} AND copy_code = #{copy_code}
</delete>

<delete id="deleteApplyProofDetailm" parameterType="java.util.Map">
delete from ass_apply_proof_detail
where proof_id=#{proof_id} and group_id = #{group_id} AND hos_id = #{hos_id} AND copy_code = #{copy_code}
</delete>

<delete id="deleteApplyProofDetail"  parameterType="java.util.List">
delete from ass_apply_proof_detail where 
 <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
     proof_id=#{item.proof_id} and group_id = #{item.group_id} AND hos_id = #{item.hos_id} 
     AND copy_code = #{item.copy_code} and proof_detail_id=#{item.proof_detail_id}
     </foreach>

</delete>

<select id="queryApplyDeptProofExists" parameterType="java.util.Map" resultMap="assApplyDeptProof">
 select  group_id, hos_id, copy_code,proof_id, bcost_year, avg_cost, avg_profit, benefit_rate, create_user, use_place, apply_analyze, investigate_analyze, describ
  from ass_apply_proof 
  <where>
  proof_id=#{proof_id} and apply_id=#{apply_id} and detail_id=#{detail_id}
      <if test="group_id != null and group_id != ''">
             AND group_id = #{group_id}
      </if>
	  <if test="hos_id != null and hos_id != ''">
             AND hos_id = #{hos_id}
      </if>
	  <if test="copy_code != null and copy_code != ''">
             AND copy_code = #{copy_code}
      </if>
</where>
</select>

<update id="updateApplyDeptProof" parameterType="java.util.Map">

update ass_apply_proof
   set
       bcost_year = #{bcost_year},
       avg_cost = #{avg_cost},
       avg_profit =#{avg_profit},
       benefit_rate = #{benefit_rate},
       create_user = #{create_user},
       use_place = #{use_place},
       apply_analyze = #{apply_analyze},
       investigate_analyze = #{investigate_analyze},
       describ = #{describ}
 where group_id = #{group_id}
   and hos_id = #{hos_id}
   and copy_code = #{copy_code}
   and proof_id = #{proof_id}
 
</update>
<select id="queryApplyDeptProofSequence" resultType="java.lang.Long">
		select ass_apply_proof_SEQ.currval val from dual
	</select>
<insert id="addApplyDeptProof" useGeneratedKeys="true">
	insert into ass_apply_proof
  (group_id, hos_id, copy_code,proof_id, bcost_year, avg_cost, avg_profit, benefit_rate, 
   create_user, use_place, apply_analyze, investigate_analyze, describ)
values(
    #{group_id ,jdbcType=INTEGER},
    #{hos_id ,jdbcType=INTEGER},
    #{copy_code ,jdbcType=VARCHAR}, 
    ass_apply_proof_SEQ.nextval, 
    #{bcost_year}, 
	#{avg_cost}, 
	#{avg_profit}, 
	#{benefit_rate}, 
    #{create_user ,jdbcType=VARCHAR}, 
    #{use_place ,jdbcType=VARCHAR}, 
    #{apply_analyze ,jdbcType=VARCHAR},
     #{investigate_analyze,jdbcType=VARCHAR}, 
     #{describ,jdbcType=VARCHAR} 
    )
</insert>
<!--  -->
<select id="queryAssApplyProofSequence" resultType="java.lang.Long">
		select ass_apply_proof_SEQ.currval val from dual
	</select>

<select id="queryApplyDeptProofDetailExists" parameterType="java.util.Map" resultMap="assApplyDeptProofDetail">
select  group_id, hos_id, copy_code, proof_id, proof_detail_id , year_num, project_income, year_workload, charge_stand, consumable_cost,
 employee_cost, maintenance_cost, waterele_cost, depreciation_cost, other_cost
 from ass_apply_proof_detail
 <where>
 proof_id=#{proof_id} and proof_detail_id=#{proof_detail_id}
 <if test="group_id != null and group_id != ''">
             AND group_id = #{group_id}
      </if>
	  <if test="hos_id != null and hos_id != ''">
             AND hos_id = #{hos_id}
      </if>
	  <if test="copy_code != null and copy_code != ''">
             AND copy_code = #{copy_code}
      </if>
     
 </where>
</select>

<update id="updateApplyDeptProofDetail"  parameterType="java.util.Map">
update ass_apply_proof_detail
   set year_num=#{year_num},
       project_income = #{project_income},
       year_workload =#{year_workload},
       charge_stand = #{charge_stand},
       consumable_cost = #{consumable_cost},
       employee_cost = #{employee_cost},
       maintenance_cost = #{maintenance_cost},
       waterele_cost = #{waterele_cost},
       depreciation_cost = #{depreciation_cost},
       other_cost = #{other_cost}
 where group_id = #{group_id}
   and hos_id = #{hos_id}
   and copy_code = #{copy_code}
   and proof_id = #{proof_id}
   and proof_detail_id = #{proof_detail_id}

</update>

<insert id="addApplyDeptProofDetail" parameterType="java.util.Map">

insert into ass_apply_proof_detail
  (group_id, hos_id, copy_code, proof_id, proof_detail_id,year_num, project_income, year_workload,
   charge_stand, consumable_cost, employee_cost, maintenance_cost, waterele_cost,
   depreciation_cost, other_cost)
values(
  #{group_id},#{ hos_id},#{ copy_code},#{ proof_id},
  ass_apply_proof_detail_SEQ.nextval,
  #{year_num},#{ project_income},
  #{ year_workload},#{charge_stand},
  #{ consumable_cost},#{ employee_cost},
  #{ maintenance_cost},#{ waterele_cost},
  #{depreciation_cost},#{ other_cost}
 )
</insert>

	<!-- 根据 购置申请信息 查询 论证数据信息  -->
	<select id="queryApplyProofInfo" parameterType="java.util.List" resultType="java.util.Map">
		select group_id , hos_id , copy_code , proof_id FROM ass_apply_dept_detail WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code =#{item.copy_code,jdbcType=VARCHAR}
			and apply_id =#{item.apply_id,jdbcType=INTEGER}
			and proof_id is not null
		</foreach>
	</select>
	
	<!-- 根据 论证主表id 批量删除 论证明细数据 -->
	<delete id="deleteBatchApplyProofDetailByProofId"  parameterType="java.util.List">
		delete from ass_apply_proof_detail where 
	 	<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
	    	group_id = #{item.group_id} 
	    	AND hos_id = #{item.hos_id} 
	     	AND copy_code = #{item.copy_code} 
	     	and proof_id=#{item.proof_id} 
	     </foreach>

	</delete>
	
	<!-- 根据 id 批量删除 论证数据 -->
	<delete id="deleteBatchApplyProofById"  parameterType="java.util.List">
		delete from ass_apply_proof where 
	 	<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
	    	group_id = #{item.group_id} 
	    	AND hos_id = #{item.hos_id} 
	     	AND copy_code = #{item.copy_code} 
	     	and proof_id=#{item.proof_id} 
	     </foreach>

	</delete>
</mapper>