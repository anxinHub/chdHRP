<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.bill.back.AssBackBillMainMapper">
	
	<resultMap id="assBackBillMain" type="com.chd.hrp.ass.entity.bill.back.AssBackBillMain">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="bill_no" column="bill_no"/>
	<result property="invoice_no" column="invoice_no"/>
	<result property="bill_date" column="bill_date"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="pact_code" column="pact_code"/> 
	<result property="bill_money" column="bill_money"/>
	<result property="state" column="state"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="note" column="note"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	</resultMap>
		
	<resultMap id="assBackBillMainMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="bill_no" column="bill_no"/>
		<result property="invoice_no" column="invoice_no"/>
		<result property="bill_date" column="bill_date"/>
		<result property="ven_id" column="ven_id"/>
		<result property="ven_no" column="ven_no"/>
		<result property="pact_code" column="pact_code"/>
		<result property="bill_money" column="bill_money"/>
		<result property="state" column="state"/>
		<result property="create_emp" column="create_emp"/>
		<result property="create_date" column="create_date"/>
		<result property="audit_emp" column="audit_emp"/>
		<result property="audit_date" column="audit_date"/>
		<result property="note" column="note"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
	</resultMap>
	
	<resultMap id="assImportAssInBackMap" type="java.util.Map">
		<result property="ass_card_no" column="ass_card_no"/>
		<result property="ass_name" column="ass_name"/>
		<result property="pay_plan_money" column="pay_plan_money"/>
		<result property="stage_no" column="stage_no"/>
		<result property="stage_name" column="stage_name"/>
		<result property="pay_term_name" column="pay_term_name"/>
		<result property="pay_plan_date" column="pay_plan_date"/>
		<result property="pay_money" column="pay_money"/>
		<result property="unpay_money" column="unpay_money"/>
		<result property="bill_money" column="bill_money"/>
		<result property="ven_name" column="ven_name"/>
		<result property="note" column="note"/>
		<result property="invoice_no" column="invoice_no"/>
		<result property="naturs_code" column="naturs_code"/>
		<result property="ass_in_no" column="ass_in_no"/>
		<result property="in_date" column="in_date"/>
		<result property="state_name" column="state_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_BACK_BILL_MAIN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="bill_no != null and bill_no != ''">
		bill_no
		,
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		invoice_no
		,
		</if>
		<if test="bill_date != null and bill_date != ''">
		bill_date
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no
		,
		</if>
		<if test="pact_code != null and pact_code != ''">
		pact_code
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="bill_no != null and bill_no != ''">
		#{bill_no}
		,
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		#{invoice_no}
		,
		</if>
		<if test="bill_date != null and bill_date != ''">
		to_date(#{bill_date},'YYYY-MM-DD')
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		#{ven_id}
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		#{ven_no}
		,
		</if>
		<if test="pact_code != null and pact_code != ''">
		#{pact_code}
		,
		</if>
		<if test="state != null and state != ''">
		#{state}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		,
		</if>
		<if test="store_id != null and store_id != ''">
		#{store_id}
		,
		</if>
		<if test="store_no != null and store_no != ''">
		#{store_no}
		,
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_BACK_BILL_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		bill_no
		,
		invoice_no
		,
		bill_date
		,
		ven_id
		,
		ven_no
		,
		pact_code
		,
		bill_money
		,
		state
		,
		create_emp
		,
		create_date
		,
		note
		,
		store_id
		,
		store_no
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.bill_no}
			,
			#{item.invoice_no}
			,
			#{item.bill_date}
			,
			#{item.ven_id}
			,
			#{item.ven_no}
			,
			#{item.pact_code}
			,
			#{item.bill_money}
			,
			#{item.state}
			,
			#{item.create_emp}
			,
			#{item.create_date}
			,
			#{item.note}
			,
			#{item.store_id}
			,
			#{item.store_no}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateBillMoney" parameterType="java.util.Map">
	
		UPDATE ASS_BACK_BILL_MAIN 
		<trim prefix="SET"  suffixOverrides=","> 
		bill_money = #{bill_money}
		,
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_BILL_MAIN  set
			state = 2,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND bill_no = #{item.bill_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_BILL_MAIN  set
			state = 1,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND bill_no = #{item.bill_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_BILL_MAIN  set
			state = 0,
			audit_emp = null,
			audit_date = null
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND bill_no = #{item.bill_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ASS_BACK_BILL_MAIN 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="invoice_no != null and invoice_no != ''">
		invoice_no = #{invoice_no}
		,
		</if>
		<if test="bill_date != null and bill_date != ''">
		bill_date = to_date(#{bill_date},'YYYY-MM-DD')
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id = #{ven_id}
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no = #{ven_no}
		,
		</if>
		<if test="pact_code != null and pact_code != ''">
		pact_code = #{pact_code}
		,
		</if>
		<if test="pact_code == null or pact_code == ''">
		pact_code = null
		,
		</if>
		<if test="bill_money != null and bill_money != ''">
		bill_money = #{bill_money}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note}
		,
		</if>
		<if test="note == null or note == ''">
		note = null
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id = #{store_id}
		,
		</if>
		<if test="store_id == null or store_id == ''">
		store_id = null
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no = #{store_no}
		,
		</if>
		<if test="store_no == null or store_no == ''">
		store_no = null
		,
		</if>
		</trim>
		<where>                     
		AND group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND bill_no = #{bill_no}
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_BILL_MAIN 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.invoice_no != null and item.invoice_no != ''">
			invoice_no = #{item.invoice_no}
			,
			</if>
			<if test="item.bill_date != null and item.bill_date != ''">
			bill_date = #{item.bill_date}
			,
			</if>
			<if test="item.ven_id != null and item.ven_id != ''">
			ven_id = #{item.ven_id}
			,
			</if>
			<if test="item.ven_no != null and item.ven_no != ''">
			ven_no = #{item.ven_no}
			,
			</if>
			<if test="item.pact_code != null and item.pact_code != ''">
			pact_code = #{item.pact_code}
			,
			</if>
			<if test="item.bill_money != null and item.bill_money != ''">
			bill_money = #{item.bill_money}
			,
			</if>
			<if test="item.state != null and item.state != ''">
			state = #{item.state}
			,
			</if>
			<if test="item.create_emp != null and item.create_emp != ''">
			create_emp = #{item.create_emp}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date}
			,
			</if>
			<if test="item.audit_emp != null and item.audit_emp != ''">
			audit_emp = #{item.audit_emp}
			,
			</if>
			<if test="item.audit_date != null and item.audit_date != ''">
			audit_date = #{item.audit_date}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note}
			,
			</if>
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.bill_no != null and item.bill_no != ''">
			AND bill_no = #{item.bill_no}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ASS_BACK_BILL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ASS_BACK_BILL_MAIN 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code}
				</if>
				<if test="item.bill_no != null and item.bill_no != ''">
				AND bill_no = #{item.bill_no}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assBackBillMain" >
	select * from 
		(SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.invoice_no,
			a.bill_date,
			a.ven_id,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.pact_code,
			a.bill_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.note,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_BACK_BILL_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no = #{bill_no}
			</if>
			<if test="invoice_no != null and invoice_no != ''">
			AND a.invoice_no = #{invoice_no}
			</if>
			<if test="bill_date_beg != null and bill_date_beg != '' and bill_date_end != null and bill_date_end != ''">
			AND a.bill_date between to_date(#{bill_date_beg},'YYYY-MM-DD') and to_date(#{bill_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
			AND a.pact_code = #{pact_code}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="ass_nature != null and ass_nature != ''">
				and  exists (
		            select 1 from ass_back_bill_detail ab
		            where  ab.group_id = a.group_id
		            and ab.hos_id = a.hos_id
		            and ab.copy_code = a.copy_code
		            and ab.bill_no = a.bill_no
		             and  ab.naturs_code = #{ass_nature}
		            
		        )
	        </if>
		</where>   
		
		union all 
		
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null bill_no,
		      null invoice_no,
		      null bill_date,
		      null ven_id,
		      null ven_no,
		      null ven_code,
		      null ven_name,
		      null pact_code,
		      sum(a.bill_money) bill_money,
		      null state,
		      null state_name,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      '合计' note,
			  null store_id,
			  null store_no,
			  null store_code,
			  null store_name
		    FROM ASS_BACK_BILL_MAIN a
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no like '%${bill_no}%'
			</if>
			<if test="invoice_no != null and invoice_no != ''">
			AND a.invoice_no = '%${invoice_no}%'
			</if>
			<if test="bill_date_beg != null and bill_date_beg != '' and bill_date_end != null and bill_date_end != ''">
			AND a.bill_date between to_date(#{bill_date_beg},'YYYY-MM-DD') and to_date(#{bill_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
			AND a.pact_code = #{pact_code}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="ass_nature != null and ass_nature != ''">  
				and  exists (
		            select 1 from ass_back_bill_detail ab
		            where  ab.group_id = a.group_id
		            and ab.hos_id = a.hos_id
		            and ab.copy_code = a.copy_code
		            and ab.bill_no = a.bill_no
		             and  ab.naturs_code = #{ass_nature}
		            
		        )
	        </if>
		</where>  ) t
		order by t.bill_no desc
	</select>
	<select id="queryByCode" resultMap="assBackBillMain"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.invoice_no,
			a.bill_date,
			a.ven_id,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.pact_code,
			a.bill_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.note,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_BACK_BILL_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		WHERE 
		a.group_id = #{group_id}   and 
		a.hos_id = #{hos_id}   and 
		a.copy_code = #{copy_code}   and 
		a.bill_no = #{bill_no} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assBackBillMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		bill_no,
		invoice_no,
		bill_date,
		ven_id,
		ven_no,
		pact_code,
		bill_money,
		state,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		note
		FROM ASS_BACK_BILL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND invoice_no = #{invoice_no}
		</if>
		<if test="bill_date != null and bill_date != ''">
		AND bill_date = #{bill_date}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND pact_code = #{pact_code}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND bill_money = #{bill_money}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assBackBillMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		bill_no,
		invoice_no,
		bill_date,
		ven_id,
		ven_no,
		pact_code,
		bill_money,
		state,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		note
		FROM ASS_BACK_BILL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND invoice_no = #{invoice_no}
		</if>
		<if test="bill_date != null and bill_date != ''">
		AND bill_date = #{bill_date}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND pact_code = #{pact_code}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND bill_money = #{bill_money}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 退款发票打印主表 -->
	<select id="queryAssBackBillBatch" parameterType="java.util.Map" resultType="java.util.Map">
		select a.bill_no as id,a.hos_id,a.copy_code,a.group_id,a.note,a.bill_no,
    case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确定' else '' end state ,
           s.user_name AUDIT_EMP, s.user_name CREATE_EMP,
           to_char(a.CREATE_DATE, 'yyyy-mm-dd') CREATE_DATE,
         to_char(a.AUDIT_DATE, 'yyyy-mm-dd') AUDIT_DATE,
         to_char(a.BILL_DATE, 'yyyy-mm-dd') BILL_DATE,
         to_char(a.BILL_MONEY,'FM999,999,990.00') bill_money,a.INVOICE_NO,
         a.ven_id,
          a.ven_no,
          c.sup_code ven_code,
          c.sup_name ven_name,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
    from ASS_BACK_BILL_MAIN a
    
    left  join ASS_BILL_MAIN b on  b.group_id=a.group_id and b.hos_id=a.hos_id and b.COPY_CODE =a.COPY_CODE and b.BILL_NO = a.BILL_NO 
    left join sys_user s  on s.group_id=a.group_id and s.hos_id=a.hos_id and s.user_id=a.CREATE_EMP and s.IS_STOP = 0
    left join sys_user s1  on s1.group_id=a.group_id and s1.hos_id=a.hos_id and s1.user_id=a.AUDIT_EMP and s1.IS_STOP = 0
     
     left join hos_sup_dict c on  a.group_id = c.group_id and a.hos_id = c.hos_id and a.ven_id = c.sup_id and c.is_stop = 0
     
     left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
     
	 where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.bill_no in (${paraId})
	
	</select>
	<select id="querAssBackBillByPrint" parameterType="java.util.Map" resultType="java.util.Map">
		select a.bill_no as id,a.hos_id,a.copy_code,a.group_id,a.note,a.bill_no,
    case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确定' else '' end state ,
           s.user_name AUDIT_EMP, s.user_name CREATE_EMP,
           to_char(a.CREATE_DATE, 'yyyy-mm-dd') CREATE_DATE,
         to_char(a.AUDIT_DATE, 'yyyy-mm-dd') AUDIT_DATE,
         to_char(a.BILL_DATE, 'yyyy-mm-dd') BILL_DATE,
         to_char(a.BILL_MONEY,'FM999,999,990.00') bill_money,a.INVOICE_NO,
         a.ven_id,
          a.ven_no,
          c.sup_code ven_code,
          c.sup_name ven_name,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
    from ASS_BACK_BILL_MAIN a
    
    left  join ASS_BILL_MAIN b on  b.group_id=a.group_id and b.hos_id=a.hos_id and b.COPY_CODE =a.COPY_CODE and b.BILL_NO = a.BILL_NO 
    left join sys_user s  on s.group_id=a.group_id and s.hos_id=a.hos_id and s.user_id=a.CREATE_EMP and s.IS_STOP = 0
    left join sys_user s1  on s1.group_id=a.group_id and s1.hos_id=a.hos_id and s1.user_id=a.AUDIT_EMP and s1.IS_STOP = 0
     
     left join hos_sup_dict c on  a.group_id = c.group_id and a.hos_id = c.hos_id and a.ven_id = c.sup_id and c.is_stop = 0
     
      left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
     
	where                     
				a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.bill_no = #{bill_no}
	
	</select>
	<!-- 退款发票打印从表 -->
	<select id="queryAssBackBill_detail" parameterType="java.util.Map" resultType="java.util.Map">
	select a.bill_no as id,a.hos_id,a.copy_code,a.group_id, a.note INIT_NOTE,s.NATURS_CODE,s.naturs_name,a.ass_card_no,to_char(a.bill_money,'FM999,999,990.00') INT_BILL_MONEY

			    from ASS_BACK_BILL_DETAIL a
			    left join ASS_NATURS s on s.naturs_code = a.naturs_code
		
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no = #{bill_no,jdbcType=VARCHAR}
			</if>
	
	</select>
	
	<select id="queryBackBillMainImport" parameterType="java.util.Map" resultMap="assBackBillMain">
	select * from 
		(SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.invoice_no,
			a.bill_date,
			a.ven_id,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.pact_code,
			a.bill_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.note,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_BACK_BILL_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			and not exists (
				select 1 from ass_back_pay_detail t 
				left join ass_back_pay_main t1 on
				t.group_id = t1.group_id
				and t.hos_id = t1.hos_id
				and t.copy_code = t1.copy_code
				and t.pay_no = t1.pay_no
				
				where 
				a.group_id = t.group_id
				and a.hos_id = t.hos_id
				and a.copy_code = t.copy_code
				and a.bill_no = t.bill_no
				and t1.state = 0
			)
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no = #{bill_no}
			</if>
			<if test="bill_nos != null and bill_nos != ''">
			AND a.bill_no in 
			<foreach collection="bill_nos" item="bill_no" open="(" separator="," close=")">
				#{bill_no}
			</foreach>
			</if>
			<if test="invoice_no != null and invoice_no != ''">
			AND a.invoice_no = #{invoice_no}
			</if>
			<if test="bill_date_beg != null and bill_date_beg != '' and bill_date_end != null and bill_date_end != ''">
			AND a.bill_date between to_date(#{bill_date_beg},'YYYY-MM-DD') and to_date(#{bill_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
			AND a.pact_code = #{pact_code}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id}
			</if>
		</where>   
		
		union all 
		
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null bill_no,
		      null invoice_no,
		      null bill_date,
		      null ven_id,
		      null ven_no,
		      null ven_code,
		      null ven_name,
		      null pact_code,
		      sum(a.bill_money) bill_money,
		      null state,
		      null state_name,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      '合计' note,
			  null store_id,
			  null store_no,
			  null store_code,
			  null store_name
		    FROM ASS_BACK_BILL_MAIN a
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			
			and not exists (
				select 1 from ass_back_pay_detail t 
				left join ass_back_pay_main t1 on
				t.group_id = t1.group_id
				and t.hos_id = t1.hos_id
				and t.copy_code = t1.copy_code
				and t.pay_no = t1.pay_no
				
				where 
				a.group_id = t.group_id
				and a.hos_id = t.hos_id
				and a.copy_code = t.copy_code
				and a.bill_no = t.bill_no
				and t1.state = 0
			)
			
			
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no like '%${bill_no}%'
			</if>
			<if test="bill_nos != null and bill_nos != ''">
			AND a.bill_no in 
			<foreach collection="bill_nos" item="bill_no" open="(" separator="," close=")">
				#{bill_no}
			</foreach>
			</if>
			<if test="invoice_no != null and invoice_no != ''">
			AND a.invoice_no = '%${invoice_no}%'
			</if>
			<if test="bill_date_beg != null and bill_date_beg != '' and bill_date_end != null and bill_date_end != ''">
			AND a.bill_date between to_date(#{bill_date_beg},'YYYY-MM-DD') and to_date(#{bill_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="pact_code != null and pact_code != ''">
			AND a.pact_code = #{pact_code}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id}
			</if>
		</where>  ) t
		order by t.bill_no desc
	
	</select>
	
	
	<select id="queryAssInAndAssChangeBack" parameterType="java.util.Map" resultMap="assImportAssInBackMap" >
			select 
			t.ass_card_no,
			t2.ass_name,
			t.pay_plan_money,
			t.stage_no,
			t.stage_name,
			c.pay_term_name,
			t.pay_plan_date,
			t.pay_money,
			t.unpay_money,
			b.sup_name ven_name,
			t4.invoice_no,
			t.ass_naturs naturs_code,
			t1.ass_in_no,
			t1.in_date,
			acus.state_name

	from v_ass_pay_stage t

    	left join mat_pay_term c on 
   	 	t.group_id = c.group_id
    	and t.hos_id = c.hos_id
		and t.copy_code = c.copy_code
		and t.pay_term_id = c.pay_term_id
		and c.is_stop = 0 
    
    	left join hos_sup_dict b on 
    	t.group_id = b.group_id
		and t.hos_id = b.hos_id
		and t.ven_id = b.sup_id
		and b.is_stop = 0
    

	    left join v_ass_card t1 on
	    t.group_id = t1.group_id
	    and t.hos_id = t1.hos_id
	    and t.copy_code = t1.copy_code
	    and t.ass_card_no = t1.ass_card_no
    	and t.ass_naturs = t1.ass_naturs
    	
    	left join ass_card_use_state acus on
	    t1.use_state = acus.state_code
	    and acus.is_stop = 0
    
	    left join ass_no_dict t2 on
	    t1.group_id = t2.group_id
	    and t1.hos_id = t2.hos_id
	    and t1.copy_code = t2.copy_code
	    and t1.ass_id = t2.ass_id
	    and t2.is_stop = 0
    
	    left join v_ass_in_main t4 on
	    t1.group_id = t4.group_id
	    and t1.hos_id = t4.hos_id
	    and t1.copy_code = t4.copy_code
	    and t1.ass_in_no = t4.ass_in_no
	    and t1.ass_naturs = t4.ass_naturs
    
	    left join v_ass_change_detail t3 on 
	    t.group_id = t3.group_id
	    and t.hos_id = t3.hos_id
	    and t.copy_code = t3.copy_code
	    and t.ass_card_no = t3.ass_card_no
	    and t.ass_naturs = t3.ass_naturs
    
	    left join v_ass_change_main t5 on
	    t3.group_id = t5.group_id
	    and t3.hos_id = t5.hos_id
	    and t3.copy_code = t5.copy_code
	    and t3.change_no = t5.change_no
	    and t3.ass_naturs = t5.ass_naturs
	    
	    left join v_ass_back_bill_vis vabbv on
		t.group_id = vabbv.group_id 
		and t.hos_id = vabbv.hos_id
		and t.copy_code = vabbv.copy_code
		and t.ass_card_no = vabbv.ass_card_no 
		
		left join v_ass_back_detail vabd on 
		t.group_id = vabd.group_id 
		and t.hos_id = vabd.hos_id
		and t.copy_code = vabd.copy_code
		and t.ass_card_no = vabd.ass_card_no 
		and t.ass_naturs = vabd.ass_naturs
    
    where t.group_id = #{group_id}
          and t.hos_id = #{hos_id}
          and t.copy_code = #{copy_code}
			 and t.ven_id = #{ven_id}
			 and t1.store_id = #{store_id}
         <if test="ass_card_no != null and ass_card_no != ''">
			 and t.ass_card_no = #{ass_card_no}
		 </if>
		 <if test="ass_in_no != null and ass_in_no != ''">
			 and t1.ass_in_no like '%${ass_in_no}%'
		 </if>
		 <if test="ass_back_no != null and ass_back_no != ''">
			 and vabd.ass_back_no like '%${ass_back_no}%'
		 </if>
		 <if test="invoice_no != null and invoice_no != ''">
			 and t4.invoice_no like '%${invoice_no}%'
		 </if>
		 <if test="in_date_beg != null and in_date_beg != ''">
		 	 AND t1.in_date &gt;= to_date(#{in_date_beg},'YYYY-MM-DD')
		 </if>
		 <if test="in_date_end != null and in_date_end != ''">
			 AND t1.in_date &lt;= to_date(#{in_date_end},'YYYY-MM-DD')
		 </if>
		 <if test="change_no != null and change_no != ''">
			 and t3.change_no like '%${change_no}%'
		 </if>
		 <if test="change_date_beg != null and change_date_beg != ''">
		 	 AND t5.change_date &gt;= to_date(#{change_date_beg},'YYYY-MM-DD')
		 </if>
		 <if test="change_date_end != null and change_date_end != ''">
			 AND t5.change_date &lt;= to_date(#{change_date_end},'YYYY-MM-DD')
		 </if>
		 <if test="is_dis == 0">
		 	and t1.use_state not in (6,7) 
		 </if>
		 <if test="is_back == 0">
		 	and t1.dispose_type = 41
		 </if>
		 
		  and t.pay_money > 0 
          and t.bill_money > 0
          <!-- and t.pay_money  > abs(nvl(vabbv.bill_money,0)) -->
          and t1.use_state != 0
          order by t.ass_card_no desc
	</select>
	
	
	<!-- 退款发票状态查询  （打印时校验数据专用） -->
	<select id="queryAssBackBillState" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT bill_no  FROM ASS_BACK_BILL_MAIN 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND bill_no in  (${paraId})
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND bill_no = #{bill_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	
	</select>
	
	<select id="queryByImportPay" parameterType="java.util.Map" resultMap="assBackBillMain">
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.invoice_no,
			a.bill_date,
			a.ven_id,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.pact_code,
			a.bill_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.note,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_BACK_BILL_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND a.bill_no = #{bill_no}
		</if>
		<if test="bill_nos != null and bill_nos != ''">
		AND a.bill_no in (${bill_nos})
		</if>
		<if test="invoice_no != null and invoice_no != ''">
		AND a.invoice_no = #{invoice_no}
		</if>
		<if test="bill_date != null and bill_date != ''">
		AND a.bill_date = #{bill_date}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id}
		</if>
		<if test="pact_code != null and pact_code != ''">
		AND a.pact_code = #{pact_code}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND a.bill_money = #{bill_money}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND a.audit_date = #{audit_date}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id}
		</if>
		</where>  
	</select>
	
	<select id="queryBackBillMainImports" parameterType="java.util.Map" resultMap="assBackBillMain">
	select * from 
		(SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.invoice_no,
			a.bill_date,
			a.ven_id,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.pact_code,
			a.bill_money,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.note,
			a.store_id,
			a.store_no,
			hsd.store_code,
			hsd.store_name
		FROM ASS_BACK_BILL_MAIN a
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join hos_store_dict hsd on
		a.group_id = hsd.group_id
		and a.hos_id = hsd.hos_id
		and a.store_id = hsd.store_id
		and hsd.is_stop = 0 
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			and a.state = 2
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no = #{bill_no}
			</if>
			<if test="bill_nos != null and bill_nos != ''">
			AND a.bill_no not in 
			<foreach collection="bill_nos" item="bill_no" open="(" separator="," close=")">
				#{bill_no}
			</foreach>
			</if>
			<if test="invoice_no != null and invoice_no != ''">
			AND a.invoice_no = #{invoice_no}
			</if>
			<if test="bill_date_beg != null and bill_date_beg != '' and bill_date_end != null and bill_date_end != ''">
			AND a.bill_date between to_date(#{bill_date_beg},'YYYY-MM-DD') and to_date(#{bill_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="pact_code != null and pact_code != ''">
			AND a.pact_code = #{pact_code}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>   
		
		union all 
		
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null bill_no,
		      null invoice_no,
		      null bill_date,
		      null ven_id,
		      null ven_no,
		      null ven_code,
		      null ven_name,
		      null pact_code,
		      sum(a.bill_money) bill_money,
		      null state,
		      null state_name,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      '合计' note,
			  null store_id,
			  null store_no,
			  null store_code,
			  null store_name
		    FROM ASS_BACK_BILL_MAIN a
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			and a.state = 2
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no like '%${bill_no}%'
			</if>
			<if test="bill_nos != null and bill_nos != ''">
			AND a.bill_no not in 
			<foreach collection="bill_nos" item="bill_no" open="(" separator="," close=")">
				#{bill_no}
			</foreach>
			</if>
			<if test="invoice_no != null and invoice_no != ''">
			AND a.invoice_no = '%${invoice_no}%'
			</if>
			<if test="bill_date_beg != null and bill_date_beg != '' and bill_date_end != null and bill_date_end != ''">
			AND a.bill_date between to_date(#{bill_date_beg},'YYYY-MM-DD') and to_date(#{bill_date_end},'YYYY-MM-DD')
			</if>
			<if test="ven_id != null and ven_id != ''">
			AND a.ven_id = #{ven_id}
			</if>
			<if test="store_id != null and store_id != ''">
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="pact_code != null and pact_code != ''">
			AND a.pact_code = #{pact_code}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>  ) t
		order by t.bill_no desc
	
	</select>
</mapper>

