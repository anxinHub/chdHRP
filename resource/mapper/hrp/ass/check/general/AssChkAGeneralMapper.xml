<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.check.general.AssChkAGeneralMapper">
	
	<resultMap id="assChkAGeneral" type="com.chd.hrp.ass.entity.check.general.AssChkAGeneral">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_chk_no" column="ass_chk_no"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="apply_date" column="apply_date"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	</resultMap>
		
	<resultMap id="assChkAGeneralMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_chk_no" column="ass_chk_no"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="apply_date" column="apply_date"/>
	<result property="state" column="state"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_CHK_A_General (
		group_id,
		hos_id,
		copy_code,
		ass_chk_no,
		note,
		create_emp,
		create_date,
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp,
		</if>
		<if test="apply_date != null and apply_date != ''">
		apply_date,
		</if>
		state
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{ass_chk_no,jdbcType=VARCHAR},
		#{note,jdbcType=VARCHAR},
		#{create_emp,jdbcType=INTEGER},
		to_date(#{create_date},'YYYY-MM-DD'),
		<if test="audit_emp != null and audit_emp != ''">
		#{audit_emp,jdbcType=INTEGER},
		</if>
		<if test="apply_date != null and apply_date != ''">
		#{apply_date,jdbcType=DATE}	,
		</if>
		#{state,jdbcType=INTEGER}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_CHK_A_General (
		group_id,
		hos_id,
		copy_code,
		ass_chk_no,
		note,
		create_emp,
		create_date,
		audit_emp,
		apply_date,
		state		
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.ass_chk_no,jdbcType=VARCHAR},
			#{item.note,jdbcType=VARCHAR},
			#{item.create_emp,jdbcType=INTEGER},
			#{item.create_date,jdbcType=DATE},
			#{item.audit_emp,jdbcType=INTEGER},
			#{item.apply_date,jdbcType=DATE},
			#{item.state,jdbcType=INTEGER}			
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_chk_a_General SET
		note = #{note,jdbcType=VARCHAR},
		create_emp = #{create_emp,jdbcType=INTEGER},
		create_date = to_date(#{create_date},'YYYY-MM-DD'),
		audit_emp = #{audit_emp,jdbcType=INTEGER},
		apply_date = #{apply_date,jdbcType=DATE},
		state = #{state,jdbcType=INTEGER}
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_chk_a_General SET
			note = #{item.note,jdbcType=VARCHAR},
			create_emp = #{item.create_emp,jdbcType=INTEGER},
			create_date = #{item.create_date,jdbcType=DATE},
			audit_emp = #{item.audit_emp,jdbcType=INTEGER},
			apply_date = #{item.apply_date,jdbcType=DATE},
			state = #{item.state,jdbcType=INTEGER}
			where                  
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND ass_chk_no = #{item.ass_chk_no,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_chk_a_General 
		where                     
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_chk_a_General 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND ass_chk_no = #{item.ass_chk_no,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assChkAGeneral" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_chk_no,
			a.note,
			a.create_emp,su2.user_name as create_emp_name,
			a.create_date,
			a.audit_emp,su3.user_name as audit_emp_name,
			a.apply_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '盘亏确认' else '' end state_name
		FROM ASS_CHK_A_General a
		left join sys_user su2 on
			a.group_id = su2.group_id
			and a.hos_id = su2.hos_id
			and a.create_emp = su2.user_id
		
		left join sys_user su3 on
			a.group_id = su3.group_id
			and a.hos_id = su3.hos_id
			and a.audit_emp = su3.user_id 
		where                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_chk_no != null and ass_chk_no != ''">
		AND a.ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="apply_date_beg != null and apply_date_beg != '' and apply_date_end != null and apply_date_end != ''">
		AND a.apply_date between to_date(#{apply_date_beg},'YYYY-MM-DD') and to_date(#{apply_date_end},'YYYY-MM-DD')
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=INTEGER}
		</if>
		order by a.group_id asc
	</select>
	<select id="queryByCode" resultMap="assChkAGeneral"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_chk_no,
			a.note,
			a.create_emp,su2.user_name as create_emp_name,
			a.create_date,
			a.audit_emp,su3.user_name as audit_emp_name,
			a.apply_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '盘亏确认' else '' end state_name
		FROM ASS_CHK_A_General a
		left join sys_user su2 on
			a.group_id = su2.group_id
			and a.hos_id = su2.hos_id
			and a.create_emp = su2.user_id
		
		left join sys_user su3 on
			a.group_id = su3.group_id
			and a.hos_id = su3.hos_id
			and a.audit_emp = su3.user_id 
		where                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
	
	</select>
	<select id="queryByUniqueness" resultMap="assChkAGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_chk_no,
		note,
		create_emp,
		create_date,
		audit_emp,
		apply_date,
		state
		FROM ASS_CHK_A_General 
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_chk_no != null and ass_chk_no != ''">
		AND ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="apply_date != null and apply_date != ''">
		AND apply_date = #{apply_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assChkAGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_chk_no,
		note,
		create_emp,
		create_date,
		audit_emp,
		apply_date,
		state
		FROM ASS_CHK_A_General 
		where                     
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
		order by group_id asc
	</select>
	
	<select id="collectAssChkAGeneral" statementType="CALLABLE"
		parameterType="java.util.Map">
		<![CDATA[ {call PKG_ASS_APP.prc_CalcDepreSingle(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{ass_year,jdbcType=VARCHAR, mode=IN},
	        #{ass_month,jdbcType=VARCHAR, mode=IN},
	        #{ass_naturs,jdbcType=VARCHAR, mode=IN},
	        #{ass_card_no,jdbcType=VARCHAR, mode=IN},
	        'A',
	        #{ass_json_str,jdbcType=VARCHAR,mode=OUT},
	        #{ass_AppCode,jdbcType=INTEGER,mode=OUT},
	        #{ass_ErrTxt,jdbcType=VARCHAR,mode=OUT}
        )} 
		 ]]>
	</select>
	
	<update id="updateBatchConfirm" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_CHK_A_General SET
			apply_date = to_date(#{item.apply_date},'YYYY-MM-DD'),
			audit_emp = #{item.audit_emp,jdbcType=INTEGER},
			state = 2
			where                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_chk_no = #{item.ass_chk_no}
		</foreach>
	</update>
	<!-- 追溯盘亏申请 -->
	<select id="queryAssApplyDeptByPlanDept" parameterType="java.util.Map" resultMap="assChkAGeneral" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_chk_no,
			a.note,
			a.create_emp,su2.user_name as create_emp_name,
			a.create_date,
			a.audit_emp,su3.user_name as audit_emp_name,
			a.apply_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '盘亏确认' else '' end state_name
		FROM ASS_CHK_A_General a
		left join sys_user su2 on
			a.group_id = su2.group_id
			and a.hos_id = su2.hos_id
			and a.create_emp = su2.user_id
		
		left join sys_user su3 on
			a.group_id = su3.group_id
			and a.hos_id = su3.hos_id
			and a.audit_emp = su3.user_id 
		where                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		   AND exists (
		        select 1 from ASS_CHK_A_R_MAP_General c 
		        	where    c.group_id = #{group_id,jdbcType=INTEGER}
		        		     and c.hos_id = #{hos_id,jdbcType=INTEGER}
		        			 and c.copy_code = #{copy_code,jdbcType=VARCHAR}
		        			 and c.rss_chk_no = #{rss_chk_no,jdbcType=VARCHAR}
		        			 and c.ass_chk_no = a.ass_chk_no
		        )
		<if test="ass_chk_no != null and ass_chk_no != ''">
		AND a.ass_chk_no = #{ass_chk_no,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="apply_date_beg != null and apply_date_beg != '' and apply_date_end != null and apply_date_end != ''">
		AND a.apply_date between to_date(#{apply_date_beg},'YYYY-MM-DD') and to_date(#{apply_date_end},'YYYY-MM-DD')
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=INTEGER}
		</if>
		order by a.group_id asc
		</select>
</mapper>

