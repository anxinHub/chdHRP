<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.check.mobile.AssCheckMobileMapper">

	<resultMap id="assCheckMobileMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="naturs_code" column="naturs_code" />
		<result property="naturs_name" column="naturs_name" />
		<result property="ass_card_no" column="ass_card_no" />
		<result property="ass_ori_card_no" column="ass_ori_card_no" />
		<result property="bar_code" column="bar_code" />
		<result property="dept_name_old" column="dept_name_old" />
		<result property="dept_name_new" column="dept_name_new" />
		<result property="check_name" column="check_name" />
		<result property="check_date" column="check_date" />
	</resultMap>
	<resultMap id="contrastMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="naturs_code" column="naturs_code" />
		<result property="naturs_name" column="naturs_name" />
		<result property="ass_id" column="ass_id" />
		<result property="ass_no" column="ass_no" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="ass_code" column="ass_code" />
		<result property="ass_name" column="ass_name" />
		<result property="ass_amount" column="ass_amount" />
		<result property="check_amount" column="check_amount" />
		<result property="acc_amount" column="acc_amount" />
	</resultMap>
	<resultMap id="contrastMapDept" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="naturs_code" column="naturs_code" />
		<result property="naturs_name" column="naturs_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		
		<result property="ass_id" column="ass_id" />
		<result property="ass_no" column="ass_no" />
		<result property="ass_code" column="ass_code" />
		<result property="ass_name" column="ass_name" />
		<result property="ass_amount" column="ass_amount" />
		<result property="check_amount" column="check_amount" />
		<result property="acc_amount" column="acc_amount" />
	</resultMap>
	<resultMap id="contrastMapStore" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="naturs_code" column="naturs_code" />
		<result property="naturs_name" column="naturs_name" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="ass_id" column="ass_id" />
		<result property="ass_no" column="ass_no" />
		<result property="ass_code" column="ass_code" />
		<result property="ass_name" column="ass_name" />
		<result property="ass_amount" column="ass_amount" />
		<result property="check_amount" column="check_amount" />
		<result property="acc_amount" column="acc_amount" />
	</resultMap>
	<resultMap id="contrastMapHouseLand" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="naturs_code" column="naturs_code" />
		<result property="naturs_name" column="naturs_name" />
		<result property="ass_id" column="ass_id" />
		<result property="ass_no" column="ass_no" />
		<result property="ass_code" column="ass_code" />
		<result property="ass_name" column="ass_name" />
		<result property="ass_amount" column="ass_amount" />
		<result property="check_amount" column="check_amount" />
		<result property="acc_amount" column="acc_amount" />
	</resultMap>
	
	<select id="queryRepairs" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select * from ass_card_repairs_mobile
	</select>
	
	<select id="queryPolling" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select distinct group_id,hos_id,copy_code,ass_year,ass_month,ass_nature,dept_id,dept_no,create_emp,
			create_date from ass_card_polling_mobile
	</select>
	

	<select id="query" parameterType="java.util.Map" resultMap="assCheckMobileMap">
		select t.ass_naturs
		naturs_code,t6.naturs_name,t.ASS_CARD_NO,t3.bar_code,t5.ass_code,t5.ass_name,t4.dept_name
		dept_name_old,t3.dept_name
		dept_name_new,t3.check_name,to_char(t3.check_date,'yyyy-mm-dd')
		check_date
		from v_ass_card t
		right join (
		select
		t1.id,t1.check_name,t2.dept_name,t1.ass_card_no,t1.bar_code,t1.check_date,t1.check_state,t2.dept_no,t2.dept_id,t2.dept_code,t2.group_id,t2.hos_id
		from
		ass_card_check_mobile t1
		left join hos_dept_dict t2 on
		t1.dept_id=t2.dept_id
		where
		t2.group_id=#{group_id,jdbcType=INTEGER} and
		t2.hos_id=#{hos_id,jdbcType=INTEGER}
		) t3
		on
		t.BAR_CODE=t3.BAR_CODE and
		t.GROUP_ID=t3.group_id and
		t.HOS_ID=t3.hos_id
		left join hos_dept_dict t4
		on t.dept_id=t4.dept_id
		and
		t.DEPT_NO=t4.dept_no
		and
		t4.group_id=t.GROUP_ID and
		t4.hos_id=t.HOS_ID
		left join ass_no_dict t5
		on t.GROUP_ID=t5.group_id
		and t.HOS_ID=t5.hos_id
		and
		t.COPY_CODE=t5.copy_code
		and
		t.ASS_ID=t.ASS_ID and t.ASS_NO=t5.ass_no
		left join ass_naturs t6 on
		t6.naturs_code=t.ass_naturs
		where
		t.group_id =
		#{group_id,jdbcType=INTEGER}
		AND
		t.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND t.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		<if test="ass_card_no != null and ass_card_no != ''">
			AND t.ass_card_no = #{ass_card_no,jdbcType=VARCHAR}
		</if>
		<if test="bar_code != null and bar_code != ''">
			AND t.bar_code =
			#{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
			AND t.dept_id =
			#{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
			AND t.dept_no =
			#{dept_no,jdbcType=INTEGER}
		</if>
		<if 
			test="check_date_beg != null and check_date_beg != '' and check_date_end != null and check_date_end != ''">
			AND t3.check_date between
			to_date(#{check_date_beg},'YYYY-MM-DD') and
			to_date(#{check_date_end},'YYYY-MM-DD')
		</if>
		order by ass_naturs,dept_name_old,dept_name_new,bar_code asc
	</select>
	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM
		ass_card_check_mobile
		where
		bar_code =
		#{bar_code,jdbcType=VARCHAR}

	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_card_check_mobile
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				bar_code =
				#{item.bar_code,jdbcType=VARCHAR}

			</foreach>
		</where>
	</delete>  
	
	<select id="queryUserId" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT user_id 
		FROM sys_user 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND user_name = #{user_name,jdbcType=VARCHAR}
	</select>
	<insert id="repairsGenerate" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
		insert into ass_repair
		(group_id,
		hos_id,
		copy_code,
		rep_code,
		fau_code,
		loc_code,
		eme_status,
		rep_user,
		rep_dept,
		phone,
		fau_note,
		app_time,
		is_card,
		ass_card_no,
		ass_name,
		is_urg,
		state,
		flag,
		is_any)
			select
		#{item.group_id},
		#{item.hos_id},
		#{item.copy_code},
		#{item.rep_code},
		#{item.fau_code},
		#{item.loc_code},
		#{item.eme_status},
		#{item.rep_user},
		#{item.rep_dept},
		#{item.phone},
		#{item.fau_note},
		#{item.app_time},
		1,
		#{item.ass_card_no},
		#{item.ass_name},
		#{item.is_urg},
		#{item.state},
		#{item.flag},
		#{item.is_any}
		
		  from dual
		</foreach>
	</insert>
	
	<select id="existsAssRepairs" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM ass_repair
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and rep_user = #{rep_user,jdbcType=INTEGER}
		and rep_dept = #{rep_dept,jdbcType=INTEGER}
		<if test="ass_card_no != null and ass_card_no != ''">
			and ass_card_no = #{ass_card_no,jdbcType=VARCHAR}
		</if>
		and app_time = #{app_time,jdbcType=DATE}
	</select>

	<update id="generate" parameterType="java.util.Map">
		begin

		UPDATE
		ass_check_s_detail_special t
		SET check_amount = 1, pl_amount
		= 0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE
		nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
        <!-- 暂时不添加 集团 医院 账套 关联条件  特殊情况 东阳的APP盘点是没有集团医院账套  后期需关联上 -->
		AND EXISTS
		(SELECT 1
		FROM (select t2.store_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_special t2 on
		t1.bar_code=t2.bar_code
		where t2.is_dept=0
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.store_id =
		t1.store_id
		AND t.ass_card_no = t1.ass_card_no);


		UPDATE
		ass_check_s_detail_general t
		SET check_amount = 1, pl_amount =
		0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.store_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_general t2 on
		t1.bar_code=t2.bar_code
		where t2.is_dept=0
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.store_id =
		t1.store_id
		AND t.ass_card_no = t1.ass_card_no);


		UPDATE
		ass_check_s_detail_inassets t
		SET check_amount = 1, pl_amount =
		0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.store_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_inassets t2 on
		t1.ass_card_no=t2.ass_card_no
		where t2.is_dept=0
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.store_id =
		t1.store_id
		AND t.ass_card_no =
		t1.ass_card_no);

		UPDATE
		ass_check_s_detail_other t
		SET check_amount = 1,
		pl_amount = 0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.store_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_other t2 on
		t1.bar_code=t2.bar_code
		where t2.is_dept=0
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.store_id =
		t1.store_id
		AND t.ass_card_no =
		t1.ass_card_no);


		UPDATE
		ass_check_d_detail_special t
		SET check_amount =
		1, pl_amount = 0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.dept_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_special t2 on
		t1.bar_code=t2.bar_code
		where t2.is_dept=1
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.dept_id =
		t1.dept_id
		AND t.ass_card_no =
		t1.ass_card_no);
		

		UPDATE
		ass_check_d_detail_general t
		SET check_amount = 1, pl_amount =
		0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE
		nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.dept_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_general t2 on
		t1.bar_code=t2.bar_code
		where t2.is_dept=1
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.dept_id =
		t1.dept_id
		AND t.ass_card_no =
		t1.ass_card_no);

		UPDATE
		ass_check_d_detail_inassets t
		SET check_amount = 1, pl_amount =
		0,is_mobile=1, pl_reason = '由PDA盘点生成'
		WHERE
		nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.dept_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_inassets t2 on
		t1.ass_card_no=t2.ass_card_no
		where t2.is_dept=1
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.dept_id =
		t1.dept_id
		AND t.ass_card_no =
		t1.ass_card_no);

		UPDATE
		ass_check_d_detail_other t
		SET
		check_amount = 1, pl_amount = 0,is_mobile=1,
		pl_reason = '由PDA盘点生成'
		WHERE
		nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM (select t2.dept_id,t2.ass_card_no from
		ass_card_check_mobile t1
		left join ass_card_other t2 on
		t1.bar_code=t2.bar_code
		where t2.is_dept=1
		<if test="group_id != null and group_id != ''">
			and t2.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t2.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t2.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		) t1
		WHERE t.dept_id =
		t1.dept_id
		AND t.ass_card_no =
		t1.ass_card_no);


		UPDATE
		ass_check_detail_house t
		SET
		check_amount = 1, pl_amount = 0,is_mobile=1, pl_reason
		= '由PDA盘点生成'
		WHERE
		nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM ass_card_check_mobile t1
		WHERE t.ass_card_no =
		t1.ass_card_no);

		UPDATE ass_check_detail_land t
		SET check_amount = 1,is_mobile=1,
		pl_amount = 0, pl_reason = '由PDA盘点生成'
		WHERE nvl(is_mobile,-1) != 1
		<if test="group_id != null and group_id != ''">
			and t.group_id =
			#{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
			AND
			t.hos_id =
			#{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
			AND t.copy_code =
			#{copy_code,jdbcType=VARCHAR}
		</if>
		AND EXISTS
		(SELECT 1
		FROM ass_card_check_mobile t1
		WHERE
		t.ass_card_no =
		t1.ass_card_no);

		end;
	</update>
	<select id="queryMoblieContrast" parameterType="java.util.Map"
		resultMap="contrastMap">
		select
		t1.ass_naturs naturs_code,naturs_name,t1.group_id,t1.hos_id,t1.copy_code,t1.dept_id,t1.dept_no,t5.dept_code,t5.dept_name,
		t1.store_id,t1.store_no,t6.store_code,t6.store_name,t1.ass_id,t1.ass_no,ass_code,ass_name,nvl(t1.ass_amount,0)
		ass_amount,nvl(t2.check_amount,0) check_amount
		from v_mobile_card t1
		left
		join v_mobile_check_results t2
		on
		t1.dept_id=t2.dept_id and
		t1.ass_id=t2.ass_id
		left join ass_naturs t3 on t3.naturs_code=t1.ass_naturs
		left join ass_no_dict t4 on t4.group_id=t1.group_id and t4.hos_id=t1.hos_id and t4.copy_code=t1.copy_code
		and t4.ass_id=t1.ass_id and t4.ass_no=t1.ass_no and t4.is_stop=0
		left join  hos_dept_dict t5 on t5.group_id=t1.group_id and t5.hos_id=t1.hos_id and t5.dept_id=t1.dept_id and t5.dept_no=t1.dept_no and t5.is_stop=0
		left join  hos_store_dict t6 on t6.group_id=t1.group_id and t6.hos_id=t1.hos_id and t6.store_id=t1.store_id and t6.store_no=t1.store_no and t6.is_stop=0
		
		where t1.group_id =
		#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND t1.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		<if test="dept_id != null and dept_id != ''">
		and t1.dept_id=#{dept_id,jdbcType=INTEGER}
		</if>
		<if test="ass_id != null and ass_id != ''">
		and t1.ass_id=#{ass_id,jdbcType=INTEGER}
		</if>
		order by naturs_code,dept_code,ass_code
	</select>

	<select id="queryCheckContrast" parameterType="java.util.Map"
		resultMap="contrastMap">
		select
		t1.ass_naturs naturs_code,naturs_name,t1.group_id,t1.hos_id,t1.copy_code,t1.ass_id,t1.ass_no,ass_code,ass_name,ass_amount,t2.acc_amount,t2.check_amount
		from(
		select
		t1.ass_naturs,t1.group_id,t1.hos_id,t1.copy_code,t1.ass_id,t1.ass_no,sum(ass_amount)
		ass_amount from v_mobile_card t1
		group by
		t1.ass_naturs,t1.group_id,t1.hos_id,t1.copy_code,t1.ass_id,t1.ass_no)
		t1
		left join v_ass_check_data t2
		on t1.ass_naturs=t2.ass_naturs
		and
		t1.group_id=t2.group_id
		and t1.hos_id=t2.hos_id
		and
		t1.copy_code=t2.copy_code
		and t1.ass_id=t2.ass_id
		and
		t1.ass_no=t2.ass_no
		left join ass_naturs t3 on t3.naturs_code=t1.ass_naturs
		left join ass_no_dict t4 on t4.group_id=t1.group_id and t4.hos_id=t1.hos_id and t4.copy_code=t1.copy_code
		and t4.ass_id=t1.ass_id and t4.ass_no=t1.ass_no and t4.is_stop=0
		where t1.group_id =
		#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND t1.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		and exists (select 1 from v_ass_check_plan_no a where a.check_plan_no=t2.check_plan_no)
		<if test="ass_id != null and ass_id != ''">
		and t1.ass_id=#{ass_id,jdbcType=INTEGER}
		</if>
		order by naturs_code,ass_code
	</select>
	<select id="queryCheckContrastDept" parameterType="java.util.Map"
		resultMap="contrastMapDept">
		SELECT t1.ass_naturs naturs_code
		,naturs_name
		,t1.group_id
		,t1.hos_id
		,t1.copy_code
		,t1.dept_id
		,t1.dept_no
		,t5.dept_code
		,t5.dept_name
		,t1.ass_id
		,t1.ass_no
		,ass_code
		,ass_name
		,nvl(ass_amount, 0) ass_amount
		,nvl(acc_amount, 0) acc_amount
		,nvl(check_amount, 0) check_amount
		FROM v_mobile_card t1
		LEFT JOIN (SELECT ass_naturs
		,group_id
		,hos_id
		,copy_code
		,check_plan_no
		,dept_id
		,dept_no
		,ass_id
		,ass_no
		,SUM(nvl(acc_amount, 0)) acc_amount
		,SUM(nvl(check_amount, 0)) check_amount
		FROM v_ass_check_dept
		GROUP BY ass_naturs
		,group_id
		,hos_id
		,copy_code
		,check_plan_no
		,dept_id
		,dept_no
		,ass_id
		,ass_no) t2
		ON t1.group_id = t2.group_id
		AND t1.hos_id = t2.hos_id
		AND t1.copy_code = t2.copy_code
		AND t1.ass_id = t2.ass_id
		AND t1.ass_no = t2.ass_no
		AND t1.dept_id = t2.dept_id
		AND t1.dept_no = t2.dept_no
		AND t1.ass_naturs = t2.ass_naturs
		AND nvl(t1.store_id, 0) = 0
		left join ass_naturs t3 on t3.naturs_code=t1.ass_naturs
		left join ass_no_dict t4 on t4.group_id=t1.group_id and t4.hos_id=t1.hos_id and t4.copy_code=t1.copy_code
		and t4.ass_id=t1.ass_id and t4.ass_no=t1.ass_no and t4.is_stop=0
		left join  hos_dept_dict t5 on t5.group_id=t1.group_id and t5.hos_id=t1.hos_id and t5.dept_id=t1.dept_id and t5.dept_no=t1.dept_no and t5.is_stop=0
		where t1.group_id =
		#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND t1.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		and exists (select 1 from v_ass_check_plan_no a where a.check_plan_no=t2.check_plan_no)
		<if test="dept_id != null and dept_id != ''">
		and t1.dept_id=#{dept_id,jdbcType=INTEGER}
		</if>
		<if test="ass_id != null and ass_id != ''">
		and t1.ass_id=#{ass_id,jdbcType=INTEGER}
		</if>
		order by naturs_code,dept_code,ass_code
	</select>
	<select id="queryCheckContrastStore" parameterType="java.util.Map"
		resultMap="contrastMapStore">

		SELECT t1.ass_naturs naturs_code
		,naturs_name
		,t1.group_id
		,t1.hos_id
		,t1.copy_code
		,t1.store_id
		,t1.store_no
		,t5.store_code
		,t5.store_name
		,t1.ass_id
		,t1.ass_no
		,ass_code
		,ass_name
		,nvl(ass_amount, 0) ass_amount
		,nvl(acc_amount, 0) acc_amount
		,nvl(check_amount, 0) check_amount
		FROM v_mobile_card t1
		LEFT JOIN (SELECT ass_naturs
		,group_id
		,hos_id
		,copy_code
		,check_plan_no
		,store_id
		,store_no
		,ass_id
		,ass_no
		,SUM(nvl(acc_amount, 0)) acc_amount
		,SUM(nvl(check_amount, 0)) check_amount
		FROM v_ass_check_store
		GROUP BY ass_naturs
		,group_id
		,hos_id
		,copy_code
		,check_plan_no
		,store_id
		,store_no
		,ass_id
		,ass_no) t2
		ON t1.group_id = t2.group_id
		AND t1.hos_id = t2.hos_id
		AND t1.copy_code = t2.copy_code
		AND t1.ass_id = t2.ass_id
		AND t1.ass_no = t2.ass_no
		AND t1.store_id = t2.store_id
		AND t1.store_no = t2.store_no
		AND t1.ass_naturs = t2.ass_naturs
		AND nvl(t1.dept_id, 0) != 0
		left join ass_naturs t3 on t3.naturs_code=t1.ass_naturs
		left join ass_no_dict t4 on t4.group_id=t1.group_id and t4.hos_id=t1.hos_id and t4.copy_code=t1.copy_code
		and t4.ass_id=t1.ass_id and t4.ass_no=t1.ass_no and t4.is_stop=0
		left join  hos_store_dict t5 on t5.group_id=t1.group_id and t5.hos_id=t1.hos_id and t5.store_id=t1.store_id and t5.store_no=t1.store_no and t5.is_stop=0

		where t1.group_id =
		#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND t1.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		and exists (select 1 from v_ass_check_plan_no a where a.check_plan_no=t2.check_plan_no)
		<if test="store_id != null and store_id != ''">
		and t1.store_id=#{store_id,jdbcType=INTEGER}
		</if>
<if test="ass_id != null and ass_id != ''">
		and t1.ass_id=#{ass_id,jdbcType=INTEGER}
		</if>
		order by naturs_code,store_code,ass_code
	</select>
	<select id="queryCheckContrastHouseLand" parameterType="java.util.Map"
		resultMap="contrastMapHouseLand">

		SELECT t1.ass_naturs naturs_code
		,naturs_name
		,t1.group_id
		,t1.hos_id
		,t1.copy_code
		,t1.ass_id
		,t1.ass_no
		,t4.ass_code
		,t4.ass_name
		,nvl(ass_amount, 0) ass_amount
		,nvl(acc_amount, 0) acc_amount
		,nvl(check_amount, 0) check_amount
		FROM v_mobile_card t1
		LEFT JOIN (SELECT ass_naturs
		,group_id
		,hos_id
		,copy_code
		,check_plan_no
		,ass_id
		,ass_no
		
		,SUM(nvl(acc_amount, 0)) acc_amount
		,SUM(nvl(check_amount, 0)) check_amount
		FROM v_ass_check_house_land
		GROUP BY ass_naturs
		,group_id
		,hos_id
		,copy_code
		,check_plan_no
		,ass_id
		,ass_no) t2
		ON t1.group_id = t2.group_id
		AND t1.hos_id = t2.hos_id
		AND t1.copy_code = t2.copy_code
		AND t1.ass_id = t2.ass_id
		AND t1.ass_no = t2.ass_no
		AND t1.ass_naturs = t2.ass_naturs
		left join ass_naturs t3 on t3.naturs_code=t1.ass_naturs
		left join ass_no_dict t4 on t4.group_id=t1.group_id and t4.hos_id=t1.hos_id and t4.copy_code=t1.copy_code
		and t4.ass_id=t1.ass_id and t4.ass_no=t1.ass_no and t4.is_stop=0
		where t1.group_id =
		#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND t1.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		and t1.ass_naturs in('06','01')
		and exists (select 1 from v_ass_check_plan_no a where a.check_plan_no=t2.check_plan_no)
		<if test="ass_id != null and ass_id != ''">
		and t1.ass_id=#{ass_id,jdbcType=INTEGER}
		</if>
		order by naturs_code,ass_code
	</select>
	
	<insert id="addAssInspectionPollMain" useGeneratedKeys="true" >
	
		INSERT INTO ASS_INSPECTION (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>

		ins_id
		,

		<if test="ins_no != null and ins_no != ''">
		ins_no
		,
		</if>
		<if test="ins_name != null and ins_name != ''">
		ins_name
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		ass_year
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		ass_month
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="note != null and note != ''">
		note
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>

		<if test="ins_id != null and ins_id != ''">
		#{ins_id,jdbcType=INTEGER}
		,
		</if>

		<if test="ins_no != null and ins_no != ''">
		#{ins_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="ins_name != null and ins_name != ''">
		#{ins_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		#{ass_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		#{ass_month,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		#{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		#{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		#{dept_no,jdbcType=INTEGER}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		#{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		#{audit_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		#{audit_date,jdbcType=DATE}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=INTEGER}
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		
		</if>
		</trim>		
		)
	
	</insert>
	
	<insert id="addAssInspectionPollDetail" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
		insert into ass_inspection_detail
		(
		
		group_id
		,
		hos_id
		,
		copy_code
		,
		ins_id
		,
		detail_id
		,
		ass_card_no
		,
		state
		<if test="item.is_rep != null and item.is_rep != ''">
		,
		is_rep
		</if>
		<if test="item.is_main != null and item.is_main != ''">
		,
		is_main
		</if>
		<if test="item.ins_result != null and item.ins_result != ''">
		,
		ins_result
		</if>
		<if test="item.note != null and item.note != ''">
		,
		note
		</if>
		) values(
		
		#{item.group_id,jdbcType=INTEGER}
		,
		#{item.hos_id,jdbcType=INTEGER}
		,
		#{item.copy_code,jdbcType=VARCHAR}
		,
		#{item.ins_id,jdbcType=INTEGER}
		,
		ASS_INSPECTION_DETAIL_SEQ.nextval
		,
		#{item.ass_card_no,jdbcType=VARCHAR}
		,
		#{item.state,jdbcType=INTEGER}
		<if test="item.is_rep != null and item.is_rep != ''">
		,
		#{item.is_rep,jdbcType=INTEGER}
		</if>
		<if test="item.is_main != null and item.is_main != ''">
		,
		#{item.is_main,jdbcType=INTEGER}
		</if>
		<if test="item.ins_result != null and item.ins_result != ''">
		,
		#{item.ins_result,jdbcType=VARCHAR}
		</if>
		<if test="item.note != null and item.note != ''">
		,
		#{item.note,jdbcType=VARCHAR}
		</if>
		)
		</foreach>
	</insert>
				
	<select id="queryPollingDetail" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select * from ass_card_polling_mobile
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_year != null and ass_year != ''">
			and ass_year=#{ass_year}
		</if>
		<if test="ass_month != null and ass_month != ''">
			and ass_month=#{ass_month}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
			and ass_nature=#{ass_nature}
		</if>
		<if test="dept_id != null and dept_id != ''">
			and dept_id=#{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
			and dept_no=#{dept_no}
		</if>
		<if test="create_emp != null and create_emp != ''">
			and create_emp=#{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
			and create_date=#{create_date,jdbcType=DATE}
		</if>
	</select>
	
	<select id="queryPollingByCode" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM ass_inspection
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_year != null and ass_year != ''">
			and ass_year=#{ass_year}
		</if>
		<if test="ass_month != null and ass_month != ''">
			and ass_month=#{ass_month}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
			and ass_nature=#{ass_nature}
		</if>
		<if test="dept_id != null and dept_id != ''">
			and dept_id=#{dept_id}
		</if>
		<if test="dept_no != null and dept_no != ''">
			and dept_no=#{dept_no}
		</if>
		<if test="create_emp != null and create_emp != ''">
			and create_emp=#{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
			and create_date=#{create_date,jdbcType=DATE}
		</if>

	</select>
	
	<select id="queryPollingSequence" resultType="java.lang.Long">
		select ASS_INSPECTION_SEQ.NEXTVAL val from dual
	</select>
	
	<!-- 	保养 -->
	<select id="queryMainTainSequence" resultType="java.lang.Long">
		select ASS_MAINTAIN_REC_SEQ.NEXTVAL val from dual
	</select>
	<select id="queryMainTain" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select distinct group_id,hos_id,copy_code,ass_year,ass_month,ass_nature,dept_id,dept_no,create_emp,
			create_date,maintain_hours,maintain_money from ass_card_maintain_mobile
	</select>
	<select id="queryMainTainByCode" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM ASS_MAINTAIN_REC
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_year != null and ass_year != ''">
			and ass_year=#{ass_year}
		</if>
		<if test="ass_month != null and ass_month != ''">
			and ass_month=#{ass_month}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
			and ass_nature=#{ass_nature}
		</if>
		<if test="maintain_dept_id != null and maintain_dept_id != ''">
			and maintain_dept_id=#{maintain_dept_id}
		</if>
		<if test="maintain_dept_no != null and maintain_dept_no != ''">
			and maintain_dept_no=#{maintain_dept_no}
		</if>
		<if test="create_emp != null and create_emp != ''">
			and create_emp=#{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
			and create_date=#{create_date,jdbcType=DATE}
		</if>
	</select>
	<select id="queryMainTainDetail" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select * from ass_card_maintain_mobile
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_year != null and ass_year != ''">
			and ass_year=#{ass_year}
		</if>
		<if test="ass_month != null and ass_month != ''">
			and ass_month=#{ass_month}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
			and ass_nature=#{ass_nature}
		</if>
		<if test="maintain_dept_id != null and maintain_dept_id != ''">
			and dept_id=#{maintain_dept_id}
		</if>
		<if test="maintain_dept_no != null and maintain_dept_no != ''">
			and dept_no=#{maintain_dept_no}
		</if>
		<if test="create_emp != null and create_emp != ''">
			and create_emp=#{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
			and create_date=#{create_date,jdbcType=DATE}
		</if>
	</select>
	<insert id="addAssInspectionMTMain" useGeneratedKeys="true" >
	
		INSERT INTO ASS_MAINTAIN_REC (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		rec_id
		,
		
		<if test="rec_no != null and rec_no != ''">
		rec_no
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		ass_year
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		ass_month
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		plan_id
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="fact_exec_emp != null and fact_exec_emp != ''">
		fact_exec_emp
		,
		</if>
		<if test="plan_exec_date != null and plan_exec_date != ''">
		plan_exec_date
		,
		</if>
		<if test="fact_exec_date != null and fact_exec_date != ''">
		fact_exec_date
		,
		</if>
		
		maintain_hours
		,
		
		maintain_money
		,
		
		<if test="maintain_desc != null and maintain_desc != ''">
		maintain_desc
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="maintain_dept_id != null and maintain_dept_id != ''">
		maintain_dept_id
		,
		</if>
		<if test="maintain_dept_no != null and maintain_dept_no != ''">
		maintain_dept_no
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		#{rec_id}
		,
		
		<if test="rec_no != null and rec_no != ''">
		#{rec_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		#{ass_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		#{ass_month,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		#{plan_id,jdbcType=INTEGER}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		#{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="fact_exec_emp != null and fact_exec_emp != ''">
		#{fact_exec_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_exec_date != null and plan_exec_date != ''">
		#{plan_exec_date,jdbcType=DATE}
		,
		</if>
		<if test="fact_exec_date != null and fact_exec_date != ''">
		#{fact_exec_date,jdbcType=DATE}
		,
		</if>
		
		#{maintain_hours,jdbcType=INTEGER}
		,
		
		#{maintain_money,jdbcType=INTEGER}
		,
		<if test="maintain_desc != null and maintain_desc != ''">
		#{maintain_desc,jdbcType=VARCHAR}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=INTEGER}
		,
		</if>
		<if test="maintain_dept_id != null and maintain_dept_id != ''">
		#{maintain_dept_id,jdbcType=VARCHAR}
		,
		</if>
		<if test="maintain_dept_no != null and maintain_dept_no != ''">
		#{maintain_dept_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		#{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		#{audit_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		#{audit_emp,jdbcType=INTEGER}
		
		</if>
		</trim>		
		)
	</insert>
	<insert id="addAssInspectionMTDetail" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
		insert into ASS_MAINTAIN_REC_ASS
		(
		
		group_id
		,
		hos_id
		,
		copy_code
		,
		rec_id
		,
		detail_id
		,
		ass_card_no
		
		,
		maintain_money
		,
		maintain_unit
		,
		maintain_hours
		
		) values(
		
		#{item.group_id,jdbcType=INTEGER}
		,
		#{item.hos_id,jdbcType=INTEGER}
		,
		#{item.copy_code,jdbcType=VARCHAR}
		,
		#{item.rec_id,jdbcType=INTEGER}
		,
		ASS_MAINTAIN_REC_ASS_SEQ.nextval
		,
		#{item.ass_card_no,jdbcType=VARCHAR}
		,
		#{item.maintain_money,jdbcType=INTEGER}
		,
		#{item.maintain_unit,jdbcType=INTEGER}
		,
		#{item.maintain_hours,jdbcType=INTEGER}
		)
		</foreach>
	</insert>
	<!-- 	检测计量 -->
	<select id="queryMeasureSequence" resultType="java.lang.Long">
		select ASS_MEASURE_REC_SEQ.NEXTVAL val from dual
	</select>
	<select id="queryMeasure" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select distinct group_id,hos_id,copy_code,ass_nature,dept_id,dept_no,create_emp,
			create_date,measure_money,other_money,measure_hours,measure_kind,measure_type,measure_result from ass_card_measure_mobile
	</select>
	<select id="queryMeasureByCode" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM ass_measure_rec
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_nature != null and ass_nature != ''">
			and ass_nature=#{ass_nature}
		</if>
		
		<if test="create_emp != null and create_emp != ''">
			and create_emp=#{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
			and create_date=#{create_date,jdbcType=DATE}
		</if>
	</select>
	<select id="queryMeasureDetail" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		select * from ass_card_measure_mobile
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="ass_nature != null and ass_nature != ''">
			and ass_nature=#{ass_nature}
		</if>
		
		<if test="create_emp != null and create_emp != ''">
			and create_emp=#{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
			and create_date=#{create_date,jdbcType=DATE}
		</if>
	</select>
	<insert id="addAssInspectionMeasureMain" useGeneratedKeys="true" >
	
		INSERT INTO ASS_MEASURE_REC (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if> 
		rec_id
		, 
		<if test="seq_no != null and seq_no != ''">
		seq_no
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		plan_id
		,
		</if>
		<if test="cert_no != null and cert_no != ''">
		cert_no
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="outer_measure_engr != null and outer_measure_engr != ''">
		outer_measure_engr
		,
		</if>
		<if test="inner_measure_emp != null and inner_measure_emp != ''">
		inner_measure_emp
		,
		</if>
		<if test="plan_measure_date != null and plan_measure_date != ''">
		plan_measure_date
		,
		</if>
		<if test="fact_measure_date != null and fact_measure_date != ''">
		fact_measure_date
		,
		</if>
		<if test="pre_next_date != null and pre_next_date != ''">
		pre_next_date
		,
		</if>
		
		measure_kind
		,
		
		<if test="outer_measure_org != null and outer_measure_org != ''">
		outer_measure_org
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		
		state
		,
		measure_result
		,
		<if test="measure_idea != null and measure_idea != ''">
		measure_idea
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		#{rec_id}
		,
		<if test="seq_no != null and seq_no != ''">
		#{seq_no,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		#{plan_id,jdbcType=INTEGER}
		,
		</if>
		<if test="cert_no != null and cert_no != ''">
		#{cert_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		#{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="outer_measure_engr != null and outer_measure_engr != ''">
		#{outer_measure_engr,jdbcType=VARCHAR}
		,
		</if>
		<if test="inner_measure_emp != null and inner_measure_emp != ''">
		#{inner_measure_emp,jdbcType=VARCHAR}
		,
		</if>
		
		<if test="pre_next_date != null and pre_next_date != ''">
		to_date(#{pre_next_date,jdbcType=VARCHAR},'yyyy-MM-dd')
		,
		</if>
		
		#{measure_kind,jdbcType=INTEGER}
		,
		
		<if test="outer_measure_org != null and outer_measure_org != ''">
		#{outer_measure_org,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		#{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		#{audit_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		to_date(#{audit_date,jdbcType=VARCHAR},'yyyy-MM-dd')
		,
		</if>
		
		#{state,jdbcType=INTEGER}
		,
		#{measure_result,jdbcType=INTEGER}
		,
		<if test="measure_idea != null and measure_idea != ''">
		#{measure_idea,jdbcType=VARCHAR}
		
		</if>
		</trim>		
		)
	</insert>
	<insert id="addAssInspectionMeasureDetail" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
		insert into ass_measure_rec_detail
		(
		
		group_id
		,
		hos_id
		,
		copy_code
		,
		rec_id
		,
		detail_id
		,
		ass_card_no
		
		,
		measure_result
		
		) values(
		
		#{item.group_id,jdbcType=INTEGER}
		,
		#{item.hos_id,jdbcType=INTEGER}
		,
		#{item.copy_code,jdbcType=VARCHAR}
		,
		#{item.rec_id,jdbcType=INTEGER}
		,
		ASS_MEASURE_REC_DETAIL_SEQ.nextval
		,
		#{item.ass_card_no,jdbcType=VARCHAR}
		,
		#{item.measure_result,jdbcType=INTEGER}
		
		)
		</foreach>
	</insert>
	

</mapper>

