<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.check.special.AssCheckPlanSpecialMapper">  

	<resultMap id="assCheckPlanSpecial"
		type="com.chd.hrp.ass.entity.check.special.AssCheckPlanSpecial">  
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="check_plan_no" column="check_plan_no" />
		<result property="summary" column="summary" />
		<result property="beg_date" column="beg_date" />
		<result property="end_date" column="end_date" />
		<result property="fin_date" column="fin_date" />
		<result property="mak_emp" column="mak_emp" />
		<result property="mak_emp_name" column="mak_emp_name" />
		<result property="mak_date" column="mak_date" />
		<result property="audit_emp" column="audit_emp" />
		<result property="audit_emp_name" column="audit_emp_name" />
		<result property="audit_date" column="audit_date" />
		<result property="state" column="state" />
	</resultMap>

	<resultMap id="assCheckPlanSpecialMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="check_plan_no" column="check_plan_no" />
		<result property="summary" column="summary" />
		<result property="beg_date" column="beg_date" />
		<result property="end_date" column="end_date" />
		<result property="fin_date" column="fin_date" />
		<result property="mak_emp" column="mak_emp" />
		<result property="mak_emp_name" column="mak_emp_name" />
		<result property="mak_date" column="mak_date" />
		<result property="audit_emp" column="audit_emp" />
		<result property="audit_emp_name" column="audit_emp_name" />
		<result property="audit_date" column="audit_date" />
		<result property="state" column="state" />
	</resultMap>
	<resultMap id="by_tree" type="java.util.Map">

		<result property="code" column="code" />
		<result property="text" column="text" />
		<result property="pcode" column="pcode" />
		<result property="check_no" column="check_no" />
		<result property="check_plan_no" column="check_plan_no" />
		<result property="bill_id" column="bill_id" />
		<result property="bill_no" column="bill_no" />
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
	</resultMap>
	<resultMap id="stores" type="java.util.Map">
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />

	</resultMap>
	<resultMap id="depts" type="java.util.Map">
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />

	</resultMap>
	<insert id="add" useGeneratedKeys="true">

		INSERT INTO ASS_CHECK_PLAN_SPECIAL (
		<trim suffix="" suffixOverrides=",">
			<if test="group_id != null and group_id != ''">
				group_id
				,
			</if>
			<if test="hos_id != null and hos_id != ''">
				hos_id
				,
			</if>
			<if test="copy_code != null and copy_code != ''">
				copy_code
				,
			</if>
			<if test="check_plan_no != null and check_plan_no != ''">
				check_plan_no
				,
			</if>
			<if test="summary != null and summary != ''">
				summary
				,
			</if>
			<if test="beg_date != null and beg_date != ''">
				beg_date
				,
			</if>
			<if test="end_date != null and end_date != ''">
				end_date
				,
			</if>
			<if test="fin_date != null and fin_date != ''">
				fin_date
				,
			</if>
			<if test="mak_emp != null and mak_emp != ''">
				mak_emp
				,
			</if>
			<if test="mak_date != null and mak_date != ''">
				mak_date
				,
			</if>
			<if test="audit_emp != null and audit_emp != ''">
				audit_emp
				,
			</if>
			<if test="audit_date != null and audit_date != ''">
				audit_date
				,
			</if>
			<if test="state != null and state != ''">
				state
				,
			</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			<if test="group_id != null and group_id != ''">
				#{group_id,jdbcType=INTEGER}
				,
			</if>
			<if test="hos_id != null and hos_id != ''">
				#{hos_id,jdbcType=INTEGER}
				,
			</if>
			<if test="copy_code != null and copy_code != ''">
				#{copy_code,jdbcType=VARCHAR}
				,
			</if>
			<if test="check_plan_no != null and check_plan_no != ''">
				#{check_plan_no,jdbcType=VARCHAR}
				,
			</if>
			<if test="summary != null and summary != ''">
				#{summary,jdbcType=VARCHAR}
				,
			</if>
			<if test="beg_date != null and beg_date != ''">
				#{beg_date,jdbcType=DATE}
				,
			</if>
			<if test="end_date != null and end_date != ''">
				#{end_date,jdbcType=DATE}
				,
			</if>
			<if test="fin_date != null and fin_date != ''">
				#{fin_date,jdbcType=DATE}
				,
			</if>
			<if test="mak_emp != null and mak_emp != ''">
				#{mak_emp,jdbcType=INTEGER}
				,
			</if>
			<if test="mak_date != null and mak_date != ''">
				#{mak_date,jdbcType=DATE}
				,
			</if>
			<if test="audit_emp != null and audit_emp != ''">
				#{audit_emp,jdbcType=INTEGER}
				,
			</if>
			<if test="audit_date != null and audit_date != ''">
				#{audit_date,jdbcType=DATE}
				,
			</if>
			<if test="state != null and state != ''">
				#{state,jdbcType=INTEGER}

			</if>
		</trim>
		)

	</insert>
	<insert id="addBatch" parameterType="java.util.List">

		INSERT INTO ASS_CHECK_PLAN_SPECIAL (
		group_id
		,
		hos_id
		,
		copy_code
		,
		check_plan_no
		,
		summary
		,
		beg_date
		,
		end_date
		,
		fin_date
		,
		mak_emp
		,
		mak_date
		,
		audit_emp
		,
		audit_date
		,
		state

		) select t.* from(
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.check_plan_no,jdbcType=VARCHAR}
			,
			#{item.summary,jdbcType=VARCHAR}
			,
			#{item.beg_date,jdbcType=DATE}
			,
			#{item.end_date,jdbcType=DATE}
			,
			#{item.fin_date,jdbcType=DATE}
			,
			#{item.mak_emp,jdbcType=INTEGER}
			,
			#{item.mak_date,jdbcType=DATE}
			,
			#{item.audit_emp,jdbcType=INTEGER}
			,
			#{item.audit_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}

			from dual
		</foreach>
		)t
	</insert>

	<update id="update" parameterType="java.util.Map">

		UPDATE ass_check_plan_special
		<trim prefix="SET" suffixOverrides=",">
			<if test="summary != null and summary != ''">
				summary = #{summary,jdbcType=VARCHAR}
				,
			</if>
			<if test="beg_date != null and beg_date != ''">
				beg_date = #{beg_date,jdbcType=DATE}
				,
			</if>
			<if test="end_date != null and end_date != ''">
				end_date = #{end_date,jdbcType=DATE}
				,
			</if>
			<if test="fin_date != null ">
				fin_date = #{fin_date,jdbcType=DATE}
				,
			</if>
			<if test="mak_emp != null and mak_emp != ''">
				mak_emp = #{mak_emp,jdbcType=INTEGER}
				,
			</if>
			<if test="mak_date != null and mak_date != ''">
				mak_date = #{mak_date,jdbcType=DATE}
				,
			</if>
			<if test="audit_emp != null ">
				audit_emp = #{audit_emp,jdbcType=INTEGER}
				,
			</if>
			<if test="audit_date != null ">
				audit_date = #{audit_date,jdbcType=DATE}
				,
			</if>
			<if test="state != null and state != ''">
				state = #{state,jdbcType=INTEGER}
				,
			</if>
		</trim>
		where
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND copy_code =
		#{copy_code,jdbcType=VARCHAR}
		AND check_plan_no =
		#{check_plan_no,jdbcType=VARCHAR}
	</update>
	<update id="updateBatch" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE ass_check_plan_special
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.summary != null and item.summary != ''">
					summary = #{item.summary,jdbcType=VARCHAR}
					,
				</if>
				<if test="item.beg_date != null and item.beg_date != ''">
					beg_date = #{item.beg_date,jdbcType=DATE}
					,
				</if>
				<if test="item.end_date != null and item.end_date != ''">
					end_date = #{item.end_date,jdbcType=DATE}
					,
				</if>
				<if test="item.fin_date != null ">
					fin_date = #{item.fin_date,jdbcType=DATE}
					,
				</if>
				<if test="item.mak_emp != null and item.mak_emp != ''">
					mak_emp = #{item.mak_emp,jdbcType=INTEGER}
					,
				</if>
				<if test="item.mak_date != null and item.mak_date != ''">
					mak_date = #{item.mak_date,jdbcType=DATE}
					,
				</if>
				<if test="item.audit_emp != null ">
					audit_emp = #{item.audit_emp,jdbcType=INTEGER}
					,
				</if>
				<if test="item.audit_date != null ">
					audit_date = #{item.audit_date,jdbcType=DATE}
					,
				</if>
				<if test="item.state != null and item.state != ''">
					state = #{item.state,jdbcType=INTEGER}
					,
				</if>
			</trim>
			where
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id =
			#{item.hos_id,jdbcType=INTEGER}
			AND copy_code =
			#{item.copy_code,jdbcType=VARCHAR}
			AND check_plan_no =
			#{item.check_plan_no,jdbcType=VARCHAR}
		</foreach>
	</update>

	<delete id="delete" parameterType="java.util.Map">
		BEGIN

		<!-- 删除仓库盘点登记单主从表 -->
		DELETE FROM ASS_CHECK_SP_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};
		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_DP_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};

		<!-- 删除仓库盘点单主从表 -->
		DELETE FROM ASS_CHECK_S_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};
		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_D_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};

		<!-- 删除仓库盘点单主从表 -->
		DELETE FROM ASS_CHECK_S_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};

		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_D_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};

		<!-- 删除任务单 -->

		DELETE FROM
		ass_check_plan_special
		WHERE
		group_id =
		#{group_id,jdbcType=INTEGER}
		AND
		hos_id = #{hos_id,jdbcType=INTEGER}
		AND
		copy_code =
		#{copy_code,jdbcType=VARCHAR}
		AND check_plan_no =
		#{check_plan_no,jdbcType=VARCHAR};
		END;
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_check_plan_special
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code =
				#{item.copy_code,jdbcType=VARCHAR}
				AND check_plan_no =
				#{item.check_plan_no,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assCheckPlanSpecial">

		SELECT
		acps.group_id,
		acps.hos_id,
		acps.copy_code,
		check_plan_no,
		summary,
		beg_date,
		end_date,
		fin_date,
		mak_emp,
		su.user_name mak_emp_name,
		mak_date,
		audit_emp,
		su1.user_name audit_emp_name,
		audit_date,
		state
		FROM
		ASS_CHECK_PLAN_SPECIAL acps
		left join sys_user su on
		acps.group_id=su.group_id and
		acps.hos_id=su.hos_id and
		acps.mak_emp=su.user_id
		left join sys_user su1 on
		acps.group_id=su1.group_id and
		acps.hos_id=su1.hos_id and
		acps.audit_emp=su1.user_id

		WHERE
		acps.group_id =
		#{group_id,jdbcType=INTEGER}
		AND
		acps.hos_id =
		#{hos_id,jdbcType=INTEGER}
		AND acps.copy_code =
		#{copy_code,jdbcType=VARCHAR}
		<if test="check_plan_no != null and check_plan_no != ''">
			AND check_plan_no =
			#{check_plan_no,jdbcType=VARCHAR}
		</if>
		<if test="summary != null and summary != ''">
			AND summary = #{summary,jdbcType=VARCHAR}
		</if>
		<if test="beg_date != null and beg_date != ''">
			AND beg_date = #{beg_date,jdbcType=DATE}
		</if>
		<if test="end_date != null and end_date != ''">
			AND end_date = #{end_date,jdbcType=DATE}
		</if>
		<if test="fin_date != null and fin_date != ''">
			AND fin_date = #{fin_date,jdbcType=DATE}
		</if>
		<if test="mak_emp != null and mak_emp != ''">
			AND mak_emp = #{mak_emp,jdbcType=INTEGER}
		</if>
		<if
			test="mak_date_beg != null and mak_date_beg != '' and mak_date_end != null and mak_date_end != ''">
			AND mak_date between to_date(#{mak_date_beg},'YYYY-MM-DD') and
			to_date(#{mak_date_end},'YYYY-MM-DD')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
			AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
			AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
		</if>
		order by check_plan_no DESC
	</select>
	<select id="queryByCode" resultMap="assCheckPlanSpecial"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		copy_code,
		check_plan_no,
		summary,
		beg_date,
		end_date,
		fin_date,
		mak_emp,
		mak_date,
		audit_emp,
		audit_date,
		state
		FROM ass_check_plan_special
		WHERE
		group_id =
		#{group_id,jdbcType=INTEGER} and
		hos_id = #{hos_id,jdbcType=INTEGER}
		and
		copy_code = #{copy_code,jdbcType=VARCHAR} and
		check_plan_no =
		#{check_plan_no,jdbcType=VARCHAR}

	</select>
	<select id="queryByUniqueness" resultMap="assCheckPlanSpecial"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		copy_code,
		check_plan_no,
		summary,
		beg_date,
		end_date,
		fin_date,
		mak_emp,
		mak_date,
		audit_emp,
		audit_date,
		state
		FROM
		ASS_CHECK_PLAN_SPECIAL
		WHERE
		group_id = #{group_id,jdbcType=INTEGER}
		AND
		hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code =
		#{copy_code,jdbcType=VARCHAR}
		AND check_plan_no =
		#{check_plan_no,jdbcType=VARCHAR}
		<if test="summary != null and summary != ''">
			AND summary = #{summary,jdbcType=VARCHAR}
		</if>
		<if test="beg_date != null and beg_date != ''">
			AND beg_date = #{beg_date,jdbcType=DATE}
		</if>
		<if test="end_date != null and end_date != ''">
			AND end_date = #{end_date,jdbcType=DATE}
		</if>
		<if test="fin_date != null and fin_date != ''">
			AND fin_date = #{fin_date,jdbcType=DATE}
		</if>
		<if test="mak_emp != null and mak_emp != ''">
			AND mak_emp = #{mak_emp,jdbcType=INTEGER}
		</if>
		<if test="mak_date != null and mak_date != ''">
			AND mak_date = #{mak_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
			AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
			AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
		</if>
		order by check_plan_no DESC
	</select>
	<select id="queryExists" resultMap="assCheckPlanSpecial"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		copy_code,
		check_plan_no,
		summary,
		beg_date,
		end_date,
		fin_date,
		mak_emp,
		mak_date,
		audit_emp,
		audit_date,
		state
		FROM
		ASS_CHECK_PLAN_SPECIAL
		WHERE
		group_id = #{group_id,jdbcType=INTEGER}
		AND
		hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code =
		#{copy_code,jdbcType=VARCHAR}
		<if test="check_plan_no != null and check_plan_no != ''">
			AND check_plan_no = #{check_plan_no,jdbcType=VARCHAR}
		</if>
		<if test="check_plan_no_all != null and check_plan_no_all != ''">
			AND check_plan_no in ${check_plan_no_all}
		</if>
		<if test="summary != null and summary != ''">
			AND summary = #{summary,jdbcType=VARCHAR}
		</if>
		<if test="beg_date != null and beg_date != ''">
			AND beg_date = #{beg_date,jdbcType=DATE}
		</if>
		<if test="end_date != null and end_date != ''">
			AND end_date = #{end_date,jdbcType=DATE}
		</if>
		<if test="fin_date != null and fin_date != ''">
			AND fin_date = #{fin_date,jdbcType=DATE}
		</if>
		<if test="mak_emp != null and mak_emp != ''">
			AND mak_emp = #{mak_emp,jdbcType=INTEGER}
		</if>
		<if test="mak_date != null and mak_date != ''">
			AND mak_date = #{mak_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
			AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
			AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
		</if>
		order by check_plan_no DESC
	</select>

	<insert id="addGenerateStore">
		BEGIN

		<!-- 删除仓库盘点登记单主从表 -->
		DELETE FROM ASS_CHECK_SP_DETAIL_SPECIAL WHERE group_id = #{group_id,
		jdbcType = INTEGER} AND hos_id = #{hos_id, jdbcType = INTEGER} AND
		copy_code = #{copy_code, jdbcType = VARCHAR} AND store_id =
		#{store_id, jdbcType = INTEGER} AND check_plan_no = #{check_plan_no, jdbcType = VARCHAR};

		<!-- 删除仓库盘点单主从表 -->
		DELETE FROM ASS_CHECK_S_DETAIL_SPECIAL WHERE group_id = #{group_id, jdbcType
		= INTEGER} AND hos_id = #{hos_id, jdbcType = INTEGER} AND copy_code =
		#{copy_code, jdbcType = VARCHAR} AND store_id = #{store_id, jdbcType =
		INTEGER}  AND
		check_plan_no = #{check_plan_no, jdbcType = VARCHAR};
		<!-- 删除仓库盘点单主从表 -->
		DELETE FROM ASS_CHECK_S_SPECIAL WHERE group_id = #{group_id, jdbcType =
		INTEGER} AND hos_id = #{hos_id, jdbcType = INTEGER} AND copy_code =
		#{copy_code, jdbcType = VARCHAR} AND store_id = #{store_id, jdbcType =
		INTEGER}  AND
		check_plan_no = #{check_plan_no, jdbcType = VARCHAR};
		<!-- 添加仓库盘点单主表 -->
		INSERT
		INTO ASS_CHECK_S_SPECIAL(group_id
		,hos_id
		,copy_code
		,check_plan_no
		,check_no
		,store_id
		,store_no
		,check_emp
		,check_date
		,state) VALUES(#{group_id
		,jdbcType = INTEGER}
		,#{hos_id
		,jdbcType = INTEGER}
		,#{copy_code
		,jdbcType = VARCHAR}
		,#{check_plan_no
		,jdbcType = VARCHAR}
		,#{check_no
		,jdbcType = VARCHAR}
		,#{store_id
		,jdbcType = INTEGER}
		,#{store_no
		,jdbcType = INTEGER}
		,#{check_emp
		,jdbcType = INTEGER}
		,#{check_date
		,jdbcType = DATE}
		,#{state
		,jdbcType = INTEGER});
		<!-- 添加明细数据 -->
		<!-- 备注后期需要控制 卡片状态 处置报废的不盘 具体跟进业务来定 -->
		INSERT
		INTO ASS_CHECK_S_DETAIL_SPECIAL(group_id, hos_id, copy_code,
		check_plan_no, check_no, store_id, store_no, ass_card_no, ass_id,
		ass_no, acc_amount)

		SELECT t1.group_id
		,t1.hos_id
		,t1.copy_code
		,#{check_plan_no}
		,#{check_no}
		,store_id
		,store_no
		,ass_card_no
		,t1.ass_id
		,t1.ass_no
		,1
		FROM ass_card_special t1
		inner join ass_no_dict t2 on t1.group_id=t2.group_id and
		t1.hos_id=t2.hos_id and t1.copy_code=t2.copy_code and
		t1.ass_id=t2.ass_id and t1.ass_no=t2.ass_no
		WHERE t1.group_id = #{group_id, jdbcType = INTEGER}
		AND t1.hos_id = #{hos_id, jdbcType = INTEGER}
		AND t1.copy_code = #{copy_code, jdbcType = VARCHAR}
		AND store_id = #{store_id, jdbcType = INTEGER}
		AND is_dept = 0  and use_state!=0 and use_state!=7
		and exists (
		select 1 from v_user_data_perm b
		where
		t2.group_id=b.group_id
		and t2.hos_id=b.hos_id
		AND TABLE_CODE = upper('ass_type_dict')
		and to_char(t2.ass_type_id)=b.perm_code
		and user_id=#{user_id}
		and (b.is_read = 1
		or b.is_write = 1 )
		)
		;

		END;

	</insert>

	<insert id="addGenerateDept">
		BEGIN
		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_DP_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		dept_id=#{dept_id,jdbcType=INTEGER}
		and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};


		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_D_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		dept_id=#{dept_id,jdbcType=INTEGER}
		and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};

		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_D_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		dept_id=#{dept_id,jdbcType=INTEGER}
		and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR};

		<!-- 添加科室盘点单主表 -->
		INSERT INTO ASS_CHECK_D_SPECIAL
		(group_id,hos_id,copy_code,check_plan_no,check_no,dept_id,dept_no
		,check_emp,check_date,state)
		VALUES
		(#{group_id,jdbcType=INTEGER},#{hos_id,jdbcType=INTEGER},#{copy_code,jdbcType=VARCHAR}
		,#{check_plan_no,jdbcType=VARCHAR},#{check_no,jdbcType=VARCHAR},#{dept_id,jdbcType=INTEGER}
		,#{dept_no,jdbcType=INTEGER},#{check_emp,jdbcType=INTEGER}
		,#{check_date,jdbcType=DATE},#{state,jdbcType=INTEGER}
		);
		<!-- 添加明细数据 -->
		<!-- 备注后期需要控制 卡片状态 处置报废的不盘 具体跟进业务来定 -->
		INSERT INTO ASS_CHECK_D_DETAIL_SPECIAL (
		group_id,hos_id,copy_code,check_plan_no,check_no,dept_id,dept_no
		,ass_card_no,ass_id,ass_no,acc_amount)

		select
		t1.group_id,t1.hos_id,t1.copy_code,#{check_plan_no},#{check_no},dept_id,dept_no,ass_card_no,t1.ass_id,t1.ass_no,1
		from ass_card_special t1
		inner join ass_no_dict t2 on t1.group_id=t2.group_id and
		t1.hos_id=t2.hos_id and t1.copy_code=t2.copy_code and
		t1.ass_id=t2.ass_id and t1.ass_no=t2.ass_no
		where t1.group_id=#{group_id,jdbcType=INTEGER} and
		t1.hos_id=#{hos_id,jdbcType=INTEGER}
		and
		t1.copy_code=#{copy_code,jdbcType=VARCHAR} and
		dept_id=#{dept_id,jdbcType=INTEGER}
		and is_dept=1 and use_state!=0 and use_state!=7
		and exists (
		select 1 from v_user_data_perm b
		where
		t2.group_id=b.group_id
		and t2.hos_id=b.hos_id
		AND TABLE_CODE = upper('ass_type_dict')
		and to_char(t2.ass_type_id)=b.perm_code
		and user_id=#{user_id}
		and (b.is_read = 1
		or b.is_write = 1 )
		)
		and exists (select 1 from v_user_data_perm b where
			t1.group_id=b.group_id and t1.hos_id=b.hos_id and
			t1.store_id=b.perm_code
			AND TABLE_CODE = upper('hos_store_dict')
			and user_id=#{user_id}and (b.is_read = 1
			or b.is_write = 1 ))
		;

		END;
	</insert>

	<insert id="addGenerateStoreDetail">
		BEGIN
		<!-- 删除仓库盘点单主从表 -->

		delete from ASS_CHECK_S_DETAIL_SPECIAL t1
		where
		t1.group_id=#{group_id,jdbcType=INTEGER} and
		t1.hos_id=#{hos_id,jdbcType=INTEGER}
		and
		t1.copy_code=#{copy_code,jdbcType=VARCHAR} and
		store_id=#{store_id,jdbcType=INTEGER}
		and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR}
		<if test="ass_type_id != null and ass_type_id != ''">
			and exists (select 1
			from ass_no_dict t2
			where t1.group_id =
			t2.group_id
			and t1.hos_id = t2.hos_id
			and t1.copy_code = t2.copy_code
			and t1.ass_id = t2.ass_id
			and t2.is_stop = 0
			and t2.ass_type_id = #{ass_type_id,jdbcType=INTEGER})
		</if>
		;
		<!-- 添加明细数据 -->
		<!-- 备注后期需要控制 卡片状态 处置报废的不盘 具体跟进业务来定 -->
		INSERT INTO ASS_CHECK_S_DETAIL_SPECIAL (
		group_id,hos_id,copy_code,check_plan_no,check_no,store_id,store_no
		,ass_card_no,ass_id,ass_no,acc_amount)

		select
		t1.group_id,t1.hos_id,t1.copy_code,#{check_plan_no},#{check_no},store_id,store_no,ass_card_no,t1.ass_id,t1.ass_no,1
		from ass_card_special t1
		inner join ass_no_dict t2 on t1.group_id=t2.group_id and
		t1.hos_id=t2.hos_id and t1.copy_code=t2.copy_code and
		t1.ass_id=t2.ass_id and t1.ass_no=t2.ass_no
		where t1.group_id=#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id=#{hos_id,jdbcType=INTEGER}
		and
		t1.copy_code=#{copy_code,jdbcType=VARCHAR} and
		store_id=#{store_id,jdbcType=INTEGER}
		and is_dept=0  and use_state!=0 and use_state!=7
		<if test="ass_type_id != null and ass_type_id != ''">
			and exists (select 1
			from ass_no_dict t2
			where t1.group_id =
			t2.group_id
			and t1.hos_id = t2.hos_id
			and t1.copy_code = t2.copy_code
			and t1.ass_id = t2.ass_id
			and t2.is_stop = 0
			and t2.ass_type_id = #{ass_type_id,jdbcType=INTEGER})
		</if>
		and exists (
		select 1 from v_user_data_perm b
		where
		t2.group_id=b.group_id
		and t2.hos_id=b.hos_id
		AND TABLE_CODE = upper('ass_type_dict')
		and to_char(t2.ass_type_id)=b.perm_code
		and user_id=#{user_id}
		and (b.is_read = 1
		or b.is_write = 1 )
		)
		;
		END;
	</insert>

	<insert id="addGenerateDeptDetail">
		BEGIN

		<!-- 删除科室盘点单主从表 -->
		DELETE FROM ASS_CHECK_D_DETAIL_SPECIAL where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		dept_id=#{dept_id,jdbcType=INTEGER}
		and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR}
		<if test="ass_type_id != null and ass_type_id != ''">
			and exists (select 1
			from ass_no_dict t2
			where t1.group_id =
			t2.group_id
			and t1.hos_id = t2.hos_id
			and t1.copy_code = t2.copy_code
			and t1.ass_id = t2.ass_id
			and t2.is_stop = 0
			and t2.ass_type_id = #{ass_type_id,jdbcType=INTEGER})
		</if>
		;
		<!-- 添加明细数据 -->
		<!-- 备注后期需要控制 卡片状态 处置报废的不盘 具体跟进业务来定 -->
		INSERT INTO ASS_CHECK_D_DETAIL_SPECIAL (
		group_id,hos_id,copy_code,check_plan_no,check_no,dept_id,dept_no
		,ass_card_no,ass_id,ass_no,acc_amount)

		select
		t1.group_id,t1.hos_id,t1.copy_code,#{check_plan_no},#{check_no},dept_id,dept_no,ass_card_no,t1.ass_id,t1.ass_no,1
		from ass_card_special t1
		inner join ass_no_dict t2 on t1.group_id=t2.group_id and
		t1.hos_id=t2.hos_id and t1.copy_code=t2.copy_code and
		t1.ass_id=t2.ass_id and t1.ass_no=t2.ass_no
		where t1.group_id=#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id=#{hos_id,jdbcType=INTEGER}
		and
		t1.copy_code=#{copy_code,jdbcType=VARCHAR} and
		dept_id=#{dept_id,jdbcType=INTEGER}
		and is_dept=1 and use_state!=0 and use_state!=7
		<if test="ass_type_id != null and ass_type_id != ''">
			and exists (select 1
			from ass_no_dict t2
			where t1.group_id =
			t2.group_id
			and t1.hos_id = t2.hos_id
			and t1.copy_code = t2.copy_code
			and t1.ass_id = t2.ass_id
			and t2.is_stop = 0
			and t2.ass_type_id = #{ass_type_id,jdbcType=INTEGER})
		</if>
		and exists (
		select 1 from v_user_data_perm b
		where
		t2.group_id=b.group_id
		and t2.hos_id=b.hos_id
		AND TABLE_CODE = upper('ass_type_dict')
		and to_char(t2.ass_type_id)=b.perm_code
		and user_id=#{user_id}
		and (b.is_read = 1
		or b.is_write = 1 )
		)
			and exists (select 1 from v_user_data_perm b where
			t1.group_id=b.group_id and t1.hos_id=b.hos_id and
			t1.store_id=b.perm_code
			AND TABLE_CODE = upper('hos_store_dict')
			and user_id=#{user_id}
			and (b.is_read = 1
				or b.is_write = 1 )
			)
		;
		END;
	</insert>

	<select id="queryByTree" parameterType="java.util.Map"
		resultMap="by_tree">


		select check_no, check_plan_no, text, pcode, code, bill_id,
		bill_no,state,state_name
		from (select '0' check_no,
		'0' check_plan_no,
		'仓库' text,
		'0'
		pcode,
		'01' code,
		0 bill_id,
		0 bill_no,
		null as state, '状态' as state_name
		from dual
		union all
		select t1.check_no,
		t1.check_plan_no,
		store_name||'-'||case when t6.state = 0 then '新建' when t6.state = 1 then '提交' else '新建' end store_name,
		'01',
		'01' ||
		store_code,
		t1.store_id,
		t1.store_no,
		t6.state,
		case when t6.state = 0 then '新建' when t6.state = 1 then '提交' else '新建' end
		state_name
		from ASS_CHECK_S_SPECIAL t1
		left join hos_store_dict t2
		on
		t1.group_id =
		t2.group_id
		and t1.hos_id = t2.hos_id
		and t1.store_id =
		t2.store_id
		and
		t1.store_no = t2.store_no
		and t2.is_ass = 1
		and
		t2.is_stop = 0
		left join ass_check_s_special t6 on
		t1.group_id=t6.group_id
		and t1.hos_id = t6.hos_id
		and t1.copy_code = t6.copy_code
		and t1.check_plan_no=t6.check_plan_no
		and t1.check_no=t6.check_no
		where t1.group_id=#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id=#{hos_id,jdbcType=INTEGER}
		and
		t1.copy_code=#{copy_code,jdbcType=VARCHAR}
		AND
		t1.check_plan_no=#{check_plan_no,jdbcType=VARCHAR}
		
		and exists (
			select 1 from v_user_data_perm b where
				t1.group_id=b.group_id and t1.hos_id=b.hos_id 
				AND TABLE_CODE = upper('hos_store_dict')
				and t1.store_id=b.perm_code
				and user_id=#{user_id}
				and b.is_read = 1
			
			union all
          		
          		select 1 from v_user_data_perm b where
				t1.group_id=b.group_id 
				and t1.hos_id=b.hos_id 
				and to_char(t1.store_id) = b.perm_code
				and user_id=#{user_id}
				AND TABLE_CODE = upper('hos_store_dict')
				and b.is_write = 1 
			)
		
		union all
		select '0'
		check_no,
		'0' check_plan_no,
		'科室' text,
		'0' pcode,
		'02' code,
		0 bill_id,
		0
		bill_no,
		null as state,
		'状态' as state_name
		from dual
		union all
		select t1.check_no,
		t1.check_plan_no,
		dept_name||'-'||case when t6.state = 0 then '新建' when t6.state = 1 then '提交' else '新建' end dept_name,
		'02',
		'02' || dept_code,
		t1.dept_id,
		t1.dept_no,
		t6.state,
		case when t6.state = 0 then '新建' when t6.state = 1 then '提交' else '新建' end
		state_name
		from ass_check_d_special
		t1
		left join hos_dept_dict t2
		on t1.group_id =
		t2.group_id
		and t1.hos_id
		= t2.hos_id
		and t1.dept_id = t2.dept_id
		and
		t1.dept_no = t2.dept_no
		and
		t2.is_stop = 0
		and t2.is_last = 1
		left join ass_check_d_special t6 on
		t1.group_id=t6.group_id
		and t1.hos_id = t6.hos_id
		and t1.copy_code = t6.copy_code
		and t1.check_plan_no=t6.check_plan_no
		and t1.check_no=t6.check_no
		where
		t1.group_id=#{group_id,jdbcType=INTEGER}
		and
		t1.hos_id=#{hos_id,jdbcType=INTEGER}
		and
		t1.copy_code=#{copy_code,jdbcType=VARCHAR}
		AND
		t1.check_plan_no=#{check_plan_no,jdbcType=VARCHAR}
		
		and exists (
				select 1 from v_user_data_perm b where
				t1.group_id=b.group_id and t1.hos_id=b.hos_id 
				AND TABLE_CODE = upper('hos_dept_dict')
				and t1.dept_id=b.perm_code
				and user_id=#{user_id}
				and b.is_read = 1
			
			union all
          		
          		select 1 from v_user_data_perm b where
				t1.group_id=b.group_id 
				and t1.hos_id=b.hos_id 
				and to_char(t1.dept_id) = b.perm_code
				and user_id=#{user_id}
				AND TABLE_CODE = upper('hos_dept_dict')
				and b.is_write = 1 
		) 
		
		)
		
		order by pcode,
		code

	</select>
	<select id="queryCheckS" parameterType="java.util.Map"
		resultType="integer">
		select count(1) from
		ass_check_s_detail_special
		where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR}
	</select>
	<select id="queryCheckD" parameterType="java.util.Map"
		resultType="integer">
		select count(1) from
		ass_check_d_detail_special
		where
		group_id=#{group_id,jdbcType=INTEGER} and
		hos_id=#{hos_id,jdbcType=INTEGER}
		and
		copy_code=#{copy_code,jdbcType=VARCHAR} and
		check_plan_no=#{check_plan_no,jdbcType=VARCHAR}
	</select>

	<!-- 查询资产相关的结账信息 -->
	<select id="queryStores" resultMap="stores" parameterType="java.util.Map">

		select
		store_id, store_no
		from hos_store_dict hs
		where
		store_id in(select ac.store_id from ass_card_special ac where ac.is_dept=0)
		and group_id =#{group_id}
		and hos_id =#{hos_id}
		and is_ass = 1
		and is_stop = 0
		and exists (select 1 from v_user_data_perm b where
		hs.group_id=b.group_id and hs.hos_id=b.hos_id 
		AND TABLE_CODE = upper('hos_store_dict')
		and
		
		hs.store_id=b.perm_code
		and user_id=#{user_id}and (b.is_read = 1
		or b.is_write = 1 ))


		order by store_code asc
	</select>
	<!-- 查询资产相关的结账信息 -->
	<select id="queryDepts" resultMap="depts" parameterType="java.util.Map">

		select
		dept_id, dept_no
		FROM hos_dept_dict de
		where dept_id in(select ac.dept_id from ass_card_special ac where
		ac.is_dept=1)
		and is_last = 1
		and is_stop = 0
		<!-- and exists (select 1 from v_user_data_perm b where
		de.group_id=b.group_id and de.hos_id=b.hos_id 
		AND TABLE_CODE = upper('hos_dept_dict')
		and
		de.dept_id=b.perm_code
		and user_id=#{user_id}) -->
		order by dept_code asc
	</select>
</mapper>

