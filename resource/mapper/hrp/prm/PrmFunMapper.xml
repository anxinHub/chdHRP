<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.prm.dao.PrmFunMapper">
	
	<resultMap id="prmFun" type="com.chd.hrp.prm.entity.PrmFun">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="fun_code" column="fun_code"/> 
	<result property="fun_name" column="fun_name"/>
	<result property="type_code" column="type_code"/>
	<result property="fun_method_chs" column="fun_method_chs"/>
	<result property="fun_method_eng" column="fun_method_eng"/>
	<result property="fun_note" column="fun_note"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_pre" column="is_pre"/>
	<result property="is_rec" column="is_rec"/>
	<result property="is_stop" column="is_stop"/>
	<result property="type_name" column="type_name"/>
    <result property="prm_fun_sql" column="prm_fun_sql"/>
    <result property="prc_name" column="prc_name"/>
	<result property="fun_sql" column="fun_sql"/>
	<result property="pkg_name" column="pkg_name"/>
	</resultMap>
	
	<resultMap id="collect" type="java.util.Map">
	<result property="prm_result" column="prm_result"/>
	<result property="prm_appcode" column="prm_appcode"/>
	<result property="prm_errtxt" column="prm_errtxt"/>
	</resultMap>
	
	<insert id="addPrmFun" useGeneratedKeys="true" >
	
		INSERT INTO PRM_FUN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		fun_code
		,
		fun_name
		,
		type_code
		,
		fun_method_chs
		,
		fun_method_eng
		,
		fun_note
		,
		spell_code
		,
		wbx_code
		,
		is_pre
		,
		is_rec
		,
		is_stop
		,
		prc_name
		,
		fun_sql
		,
		pkg_name
		) VALUES (
#{group_id}		,
#{hos_id}		,
#{copy_code}		,
#{fun_code}		,
#{fun_name}		,
#{type_code}		,
#{fun_method_chs}		,
#{fun_method_eng}		,
#{fun_note}		,
#{spell_code}		,
#{wbx_code}		,
#{is_pre}		,
#{is_rec}		,
#{is_stop}		,
#{prc_name}		,
#{fun_sql,jdbcType=BLOB}		,
#{pkg_name}
		)
	
	</insert>
	
	
	<insert id="addBatchPrmFun" parameterType="java.util.List" >
	
		INSERT INTO PRM_FUN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		fun_code
		,
		fun_name
		,
		type_code
		,
		fun_method_chs
		,
		fun_method_eng
		,
		fun_note
		,
		spell_code
		,
		wbx_code
		,
		is_pre
		,
		is_rec
		,
		is_stop
		,
		prc_name
		,
		fun_sql
		,
		pkg_name
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
#{item.group_id}			,
#{item.hos_id}			,
#{item.copy_code}			,
#{item.fun_code}			,
#{item.fun_name}			,
#{item.type_code}			,
#{item.fun_method_chs}			,
#{item.fun_method_eng}			,
#{item.fun_note}			,
#{item.spell_code}			,
#{item.wbx_code}			,
#{item.is_pre}			,
#{item.is_rec}			,
#{item.is_stop}			,
#{item.prc_name}	    ,
#{item.fun_sql}	        ,
#{item.pkg_name}		
		from dual
		</foreach>
		)t
	</insert>
	
	<update id="updatePrmFun" parameterType="java.util.Map">
	
		UPDATE prm_fun SET
		fun_name = #{fun_name}
		,
		type_code = #{type_code}
		,
		fun_method_chs = #{fun_method_chs}
		,
		fun_method_eng = #{fun_method_eng}
		,
		fun_note = #{fun_note}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		,
		is_pre = #{is_pre}
		,
		is_rec = #{is_rec}
		,
		is_stop = #{is_stop}
		,
		prc_name = #{prc_name}
		,
		fun_sql = #{fun_sql}
		,
		pkg_name = #{pkg_name}
		WHERE 
		group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		copy_code = #{copy_code}
		 and 
		fun_code = #{fun_code}
		
	
	</update>
	<update id="updateBatchPrmFun" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE prm_fun SET
			fun_name = #{item.fun_name}
			,
			type_code = #{item.type_code}
			,
			fun_method_chs = #{item.fun_method_chs}
			,
			fun_method_eng = #{item.fun_method_eng}
			,
			fun_note = #{item.fun_note}
			,
			spell_code = #{item.spell_code}
			,
			wbx_code = #{item.wbx_code}
			,
			is_pre = #{item.is_pre}
			,
			is_rec = #{item.is_rec}
			,
			is_stop = #{item.is_stop}
			,
			pkg_name = #{item.pkg_name}
			WHERE 
			group_id = #{item.group_id}
			 and 
			hos_id = #{item.hos_id}
			 and 
			copy_code = #{item.copy_code}
			 and 
			fun_code = #{item.fun_code}
			
		</foreach>
	</update>
	
	<delete id="deletePrmFun" parameterType="java.util.Map">
	
		DELETE FROM prm_fun WHERE
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		fun_code = #{fun_code} 
	
	</delete>
	<delete id="deleteBatchPrmFun" parameterType="java.util.List">
		DELETE FROM prm_fun WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				 and 
				hos_id = #{item.hos_id}
				 and 
				copy_code = #{item.copy_code}
				 and 
				fun_code = #{item.fun_code}
				
			</foreach>
	
	</delete>
	<select id="queryPrmFun" parameterType="java.util.Map" resultMap="prmFun" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		fun_code,
		fun_name,
		type_code,
		fun_method_chs,
		fun_method_eng,
		fun_note,
		spell_code,
		wbx_code,
		is_pre,
		is_rec,
		is_stop,
		prc_name,
		fun_sql,
		pkg_name
		FROM PRM_FUN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="fun_code != null and fun_code != ''">
		AND fun_code = #{fun_code}
		</if>
		<if test="fun_name != null and fun_name != ''">
		AND fun_name = #{fun_name}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code}
		</if>
		<if test="fun_method_chs != null and fun_method_chs != ''">
		AND fun_method_chs = #{fun_method_chs}
		</if>
		<if test="fun_method_eng != null and fun_method_eng != ''">
		AND fun_method_eng = #{fun_method_eng}
		</if>
		<if test="fun_note != null and fun_note != ''">
		AND fun_note = #{fun_note}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code}
		</if>
		<if test="is_pre != null and is_pre != ''">
		AND is_pre = #{is_pre}
		</if>
		<if test="is_rec != null and is_rec != ''">
		AND is_rec = #{is_rec}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop}
		</if>
		</where>   
		order by fun_code asc
	</select>
	
	<select id="queryPrmFunByFile" parameterType="java.util.Map" resultMap="prmFun" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		fun_code,
		fun_name,
		type_code,
		fun_method_chs,
		fun_method_eng,
		fun_note,
		spell_code,
		wbx_code,
		is_pre,
		is_rec,
		is_stop,
		prc_name,
		fun_sql,
		pkg_name
		FROM PRM_FUN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		and fun_sql is not null
		</where>   
		order by fun_code asc
	</select>
	
	<select id="queryPrmFunByCode" resultType="com.chd.hrp.prm.entity.PrmFun" parameterType="string" >
	
		SELECT 
			pf.group_id,
			pf.hos_id,
			pf.copy_code,
			pf.fun_code as fun_code,
			pf.fun_name as fun_name,
			pf.type_code as type_code,
			pf.fun_method_chs as fun_method_chs,
			pf.fun_method_eng as fun_method_eng,
			pf.fun_note as fun_note,
			pf.spell_code as spell_code,
			pf.wbx_code as wbx_code,
			pf.is_stop as is_stop,
			pf.is_pre as is_pre,
			pf.is_rec as is_rec,
			pft.type_name as type_name,
			pf.prc_name,
			pf.fun_sql,
			pf.pkg_name
FROM prm_fun pf
left join prm_fun_type pft on pf.type_code = pft.type_code 
       and pf.group_id = pft.group_id and pf.hos_id = pft.hos_id and pf.copy_code= pft.copy_code

		WHERE 
		pf.group_id = #{group_id}   and 
		pf.hos_id = #{hos_id}   and 
		pf.copy_code = #{copy_code}   and 
		pf.fun_code = #{fun_code} 
	
	</select>
	
	
	<select id="queryPrmFunByPrcName" resultType="com.chd.hrp.prm.entity.PrmFun" parameterType="string" >
	
		SELECT 
			pf.group_id,
			pf.hos_id,
			pf.copy_code,
			pf.fun_code as fun_code,
			pf.fun_name as fun_name,
			pf.type_code as type_code,
			pf.fun_method_chs as fun_method_chs,
			pf.fun_method_eng as fun_method_eng,
			pf.fun_note as fun_note,
			pf.spell_code as spell_code,
			pf.wbx_code as wbx_code,
			pf.is_stop as is_stop,
			pf.is_pre as is_pre,
			pf.is_rec as is_rec,
			pft.type_name as type_name,
			pf.prc_name,
			pf.fun_sql,
			pf.pkg_name
FROM prm_fun pf
left join prm_fun_type pft on pf.type_code = pft.type_code 
       and pf.group_id = pft.group_id and pf.hos_id = pft.hos_id and pf.copy_code= pft.copy_code

		WHERE 
		pf.group_id = #{group_id}   and 
		pf.hos_id = #{hos_id}   and 
		pf.copy_code = #{copy_code}   and 
		pf.prc_name = #{prc_name} 
	
	</select>
	
	
	<select id="queryPrmFunComtype" resultType="com.chd.hrp.prm.entity.PrmFun" parameterType="string" >
	
		SELECT 
		pf.group_id,
		pf.hos_id,
		pf.copy_code,
		pf.fun_code,
		pf.fun_name,
		pf.type_code,
   	    pft.type_name,
		pf.fun_method_chs,
		pf.fun_method_eng,
		pf.fun_note,
		pf.spell_code,
		pf.wbx_code,
		pf.is_pre,
		pf.is_rec,
		pf.is_stop,
		pf.prc_name,
		pf.fun_sql,
		pf.pkg_name
		FROM prm_fun pf 
    left join prm_fun_type pft on pf.type_code=pft.type_code 
		WHERE 
		pf.group_id = #{group_id}   and 
		pf.hos_id = #{hos_id}   and 
		pf.copy_code = #{copy_code}   and 
		pf.fun_code = #{fun_code} 
	
	</select>
	<insert id="createPrmFun" parameterType="java.util.Map">
    	${prm_fun_sql}
    </insert>
    
    <select id="collectPro"  statementType="CALLABLE" parameterType="java.util.Map" resultMap="collect" flushCache="true">
			<![CDATA[ 
				{call ${funSql},
				#{prm_appcode,mode=OUT,jdbcType=VARCHAR},
				#{prm_errtxt,mode=OUT,jdbcType=VARCHAR}
				)}
			]]>
	</select>
    
    <select id="collectFun"  statementType="CALLABLE" parameterType="java.util.Map" resultMap="collect" flushCache="true">
			<![CDATA[ 
				{call ${funSql},
				#{prm_result,mode=OUT,jdbcType=DOUBLE},
				#{prm_appcode,mode=OUT,jdbcType=VARCHAR},
				#{prm_errtxt,mode=OUT,jdbcType=VARCHAR}
				)}
			]]>
	</select>
    
</mapper>

