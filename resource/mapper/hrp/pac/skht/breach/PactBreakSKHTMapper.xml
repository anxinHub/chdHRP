<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.pac.dao.skht.breach.PactBreakSKHTMapper">
	<resultMap id="pactBreakSKHT"
		type="com.chd.hrp.pac.entity.skht.breach.PactBreakSKHTEntity">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="break_code" column="break_code" />
		<result property="pact_code" column="pact_code" />
		<result property="sign_date" column="sign_date" />
		<result property="cus_no" column="cus_no" />
		<result property="cus_id" column="cus_id" />
		<result property="first_man" column="first_man" />
		<result property="second_man" column="second_man" />
		<result property="party" column="party" />
		<result property="break_money" column="break_money" />
		<result property="start_date" column="start_date" />
		<result property="end_date" column="end_date" />
		<result property="note" column="note" />
		<result property="break_reason" column="break_reason" />
		<result property="break_process" column="break_process" />
		<result property="break_result" column="break_result" />
		<result property="state" column="state" />
		<result property="maker" column="maker" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="confirmer" column="confirmer" />
		<result property="confirm_date" column="confirm_date" />
		
		<result property="cus_name" column="cus_name" />
		<result property="pact_name" column="pact_name" />
		<result property="party_name" column="party_name" />
		<result property="state_name" column="state_name" />
		<result property="maker_name" column="maker_name" />
		<result property="checker_name" column="checker_name" />
		<result property="confirmer_name" column="confirmer_name" />
	</resultMap>

	<select id="query" parameterType="java.util.Map"
		resultMap="pactBreakSKHT">
		SELECT
			pbf.BREAK_CODE,
			pbf.SIGN_DATE,
			hs.cus_NAME,
			pbf.PACT_CODE,
			mf.PACT_NAME,
			pbf.BREAK_MONEY,
			dd2.VALUE_NAME AS party_name,
			pbf.STATE,
			dd.VALUE_NAME AS state_name,
			pbf.START_DATE,
			pbf.END_DATE,
			he.USER_NAME AS maker_name,
			he1.USER_NAME AS checker_name,
			he2.USER_NAME AS confirmer_name
		FROM
			PACT_BREAK_SKHT pbf
			LEFT JOIN PACT_MAIN_SKHT mf ON pbf.GROUP_ID = mf.GROUP_ID AND pbf.HOS_ID = mf.HOS_ID AND pbf.COPY_CODE = mf.COPY_CODE AND pbf.PACT_CODE = mf.PACT_CODE
			LEFT JOIN HOS_CUS_DICT hs ON hs.GROUP_ID = pbf.GROUP_ID AND hs.HOS_ID = pbf.HOS_ID AND hs.CUS_NO = pbf.CUS_NO
			LEFT JOIN sys_user he ON he.GROUP_ID = pbf.GROUP_ID AND he.HOS_ID = pbf.HOS_ID AND he.USER_ID = pbf.MAKER
			LEFT JOIN sys_user he1 ON he1.GROUP_ID = pbf.GROUP_ID AND he1.HOS_ID = pbf.HOS_ID AND he1.USER_ID = pbf.CHECKER
			LEFT JOIN sys_user he2 ON he2.GROUP_ID = pbf.GROUP_ID AND he2.HOS_ID = pbf.HOS_ID AND he2.USER_ID = pbf.CONFIRMER
			LEFT JOIN PACT_DICT_DATA dd ON dd.VALUE_CODE = pbf.STATE AND dd.F_CODE = 'STATE'
			LEFT JOIN PACT_DICT_DATA dd2 ON dd2.VALUE_CODE = pbf.PARTY AND dd2.F_CODE = 'PARTY'
		<where>
			pbf.GROUP_ID=#{group_id,jdbcType=NUMERIC}
			and pbf.HOS_ID=#{hos_id,jdbcType=NUMERIC}
			and pbf.COPY_CODE=#{copy_code,jdbcType=VARCHAR}
			<if test="state != null and state != ''">
				and pbf.STATE=#{state,jdbcType=VARCHAR}
			</if>
			<if test="party != null and party != ''">
				and pbf.party=#{party,jdbcType=VARCHAR}
			</if>
			<if test="first_man != null and first_man != ''">
				and pbf.FIRST_MAN=#{first_man,jdbcType=NUMERIC}
			</if>
			<if test="break_reason != null and break_reason != ''">
				and pbf.BREAK_REASON like '%'||#{break_reason,jdbcType=VARCHAR}||'%'
			</if>
			<if test="pact_name != null and pact_name != ''">
				and mf.pact_name like '%'||#{pact_name,jdbcType=VARCHAR}||'%'
			</if>
			<if test="pact_code != null and pact_code != ''">
				and pbf.pact_code like upper(#{pact_code,jdbcType=VARCHAR})||'%'
			</if>
			<if test="pact_type_code != null and pact_type_code != ''">
				and mf.pact_type_code=#{pact_type_code,jdbcType=VARCHAR}
			</if>
			<if test="cus_no != null and cus_no != ''">
				and pbf.cus_no=#{cus_no,jdbcType=VARCHAR}
			</if>
			<if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
				and pbf.SIGN_DATE BETWEEN to_date(#{start_date,jdbcType=TIMESTAMP},'yyyy-MM-dd') AND to_date(#{end_date,jdbcType=TIMESTAMP},'yyyy-MM-dd')
			</if>
		</where>
	</select>
	<select id="queryForPrint" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
			pbf.BREAK_CODE,
			pbf.SIGN_DATE,
			hs.cus_NAME,
			pbf.PACT_CODE,
			mf.PACT_NAME,
			pbf.BREAK_MONEY,
			dd2.VALUE_NAME AS party_name,
			pbf.STATE,
			dd.VALUE_NAME AS state_name,
			pbf.START_DATE,
			pbf.END_DATE,
			he.USER_NAME AS maker_name,
			he1.USER_NAME AS checker_name,
			he2.USER_NAME AS confirmer_name
		FROM
			PACT_BREAK_SKHT pbf
			LEFT JOIN PACT_MAIN_SKHT mf ON pbf.GROUP_ID = mf.GROUP_ID AND pbf.HOS_ID = mf.HOS_ID AND pbf.COPY_CODE = mf.COPY_CODE AND pbf.PACT_CODE = mf.PACT_CODE
			LEFT JOIN HOS_CUS_DICT hs ON hs.GROUP_ID = pbf.GROUP_ID AND hs.HOS_ID = pbf.HOS_ID AND hs.CUS_NO = pbf.CUS_NO
			LEFT JOIN sys_user he ON he.GROUP_ID = pbf.GROUP_ID AND he.HOS_ID = pbf.HOS_ID AND he.USER_ID = pbf.MAKER
			LEFT JOIN sys_user he1 ON he1.GROUP_ID = pbf.GROUP_ID AND he1.HOS_ID = pbf.HOS_ID AND he1.USER_ID = pbf.CHECKER
			LEFT JOIN sys_user he2 ON he2.GROUP_ID = pbf.GROUP_ID AND he2.HOS_ID = pbf.HOS_ID AND he2.USER_ID = pbf.CONFIRMER
			LEFT JOIN PACT_DICT_DATA dd ON dd.VALUE_CODE = pbf.STATE AND dd.F_CODE = 'STATE'
			LEFT JOIN PACT_DICT_DATA dd2 ON dd2.VALUE_CODE = pbf.PARTY AND dd2.F_CODE = 'PARTY'
		<where>
			pbf.GROUP_ID=#{group_id,jdbcType=NUMERIC}
			and pbf.HOS_ID=#{hos_id,jdbcType=NUMERIC}
			and pbf.COPY_CODE=#{copy_code,jdbcType=VARCHAR}
			<if test="state != null and state != ''">
				and pbf.STATE=#{state,jdbcType=VARCHAR}
			</if>
			<if test="party != null and party != ''">
				and pbf.party=#{party,jdbcType=VARCHAR}
			</if>
			<if test="first_man != null and first_man != ''">
				and pbf.FIRST_MAN=#{first_man,jdbcType=NUMERIC}
			</if>
			<if test="break_reason != null and break_reason != ''">
				and pbf.BREAK_REASON like '%'||#{break_reason,jdbcType=VARCHAR}||'%'
			</if>
			<if test="pact_name != null and pact_name != ''">
				and mf.pact_name like '%'||#{pact_name,jdbcType=VARCHAR}||'%'
			</if>
			<if test="pact_code != null and pact_code != ''">
				and pbf.pact_code like upper(#{pact_code,jdbcType=VARCHAR})||'%'
			</if>
			<if test="pact_type_code != null and pact_type_code != ''">
				and mf.pact_type_code=#{pact_type_code,jdbcType=VARCHAR}
			</if>
			<if test="cus_no != null and cus_no != ''">
				and pbf.cus_no=#{cus_no,jdbcType=VARCHAR}
			</if>
			<if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
				and pbf.SIGN_DATE BETWEEN to_date(#{start_date,jdbcType=TIMESTAMP},'yyyy-MM-dd') AND to_date(#{end_date,jdbcType=TIMESTAMP},'yyyy-MM-dd')
			</if>
		</where>
	</select>
 
	<select id="queryByCode" parameterType="java.util.Map"
		resultMap="pactBreakSKHT">
		SELECT
		pbf.break_code ,
		pbf.cus_no ,
		hs.cus_name,
		pbf.pact_code ,
		mf.pact_name,
		pbf.sign_date,
		pbf.party ,
		pbf.break_money ,
		pbf.first_man ,
		pbf.second_man ,
		pbf.note,
		pbf.start_date,
		pbf.end_date ,
		pbf.state ,
		pbf.break_reason ,
		pbf.break_process ,
		pbf.break_result
		FROM
		PACT_BREAK_SKHT pbf
		LEFT JOIN PACT_MAIN_SKHT mf ON pbf.GROUP_ID = mf.GROUP_ID AND pbf.HOS_ID = mf.HOS_ID AND pbf.COPY_CODE = mf.COPY_CODE AND pbf.PACT_CODE = mf.PACT_CODE
		LEFT JOIN HOS_CUS_DICT hs ON hs.GROUP_ID = pbf.GROUP_ID AND hs.HOS_ID = pbf.HOS_ID AND hs.CUS_NO = pbf.CUS_NO
		WHERE
		pbf.group_id=#{group_id,jdbcType=NUMERIC}
		and pbf.hos_id=#{hos_id,jdbcType=NUMERIC}
		and pbf.copy_code=#{copy_code,jdbcType=VARCHAR}
		and pbf.break_code = #{break_code,jdbcType=VARCHAR}
		and pbf.pact_code = #{pact_code,jdbcType=VARCHAR}
	</select>

	<insert id="add" parameterType="java.util.Map">
		INSERT INTO PACT_BREAK_SKHT (
		group_id ,
		hos_id ,
		copy_code ,
		break_code,
		pact_code ,
		sign_date ,
		cus_no ,
		cus_id ,
		first_man ,
		second_man ,
		party ,
		break_money ,
		start_date ,
		end_date ,
		note ,
		break_reason ,
		break_process ,
		break_result ,
		state ,
		maker ,
		make_date ,
		checker ,
		check_date ,
		confirmer ,
		confirm_date
		)
		VALUES(
		#{group_id,jdbcType=NUMERIC},
		#{hos_id,jdbcType=NUMERIC},
		#{copy_code,jdbcType=VARCHAR},
		#{break_code,jdbcType=VARCHAR},
		#{pact_code,jdbcType=VARCHAR},
		to_timestamp(#{sign_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		#{cus_no,jdbcType= NUMERIC},
		#{cus_id,jdbcType=NUMERIC},
		#{first_man,jdbcType=NUMERIC},
		#{second_man,jdbcType= VARCHAR},
		#{party,jdbcType= VARCHAR},
		#{break_money,jdbcType= NUMERIC},
		to_timestamp(#{start_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		to_timestamp(#{end_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		#{note,jdbcType=VARCHAR},
		#{break_reason,jdbcType=VARCHAR},
		#{break_process,jdbcType=VARCHAR},
		#{break_result,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR},
		#{maker,jdbcType=NUMERIC},
		to_timestamp(#{make_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		#{checker,jdbcType=NUMERIC},
		#{check_date,jdbcType=TIMESTAMP},
		#{confirmer,jdbcType=NUMERIC},
		#{confirm_date,jdbcType=TIMESTAMP}
		)
	</insert>


	<update id="updateState" parameterType="java.util.Map">
		UPDATE PACT_BREAK_SKHT SET
		<if test="state == '03'">
			confirmer=#{confirmer,jdbcType=NUMERIC},
			confirm_date=#{confirm_date,jdbcType=TIMESTAMP},
		</if>
		<if test="state == '02'">
			<if test="checker != null and checker != ''">
				checker=#{checker,jdbcType=NUMERIC},
				check_date=#{check_date,jdbcType=TIMESTAMP},
			</if>
			confirmer=#{confirmer,jdbcType=NUMERIC},
			confirm_date=#{confirm_date,jdbcType=TIMESTAMP},
		</if>
		<if test="state == '01'">
			checker=#{checker,jdbcType=NUMERIC},
			check_date=#{check_date,jdbcType=TIMESTAMP},
		</if>
		state=#{state,jdbcType=NUMERIC}
		WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		AND HOS_ID =#{hos_id,jdbcType=NUMERIC} 
		AND COPY_CODE = #{copy_code,jdbcType=VARCHAR} and
		<foreach collection="list" item="item" index="index" separator="or">
			pact_code = #{item.pact_code,jdbcType=VARCHAR}
			AND break_code = #{item.break_code,jdbcType=VARCHAR}
		</foreach>
	</update>


	<update id="update" parameterType="java.util.Map">
		UPDATE PACT_BREAK_SKHT SET
		sign_date=to_timestamp(#{sign_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		party=#{party,jdbcType=VARCHAR},
		break_money=#{break_money,jdbcType=NUMERIC},
		first_man=#{first_man,jdbcType=VARCHAR},
		second_man=#{second_man,jdbcType=VARCHAR},
		note=#{note,jdbcType=NUMERIC},
		start_date=to_timestamp(#{start_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		end_date=to_timestamp(#{end_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		break_reason=#{break_reason,jdbcType=VARCHAR},
		break_process=#{break_process,jdbcType=VARCHAR},
		break_result=#{break_result,jdbcType=VARCHAR}
		WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		AND HOS_ID =#{hos_id,jdbcType=NUMERIC}
		AND COPY_CODE = #{copy_code,jdbcType=VARCHAR}
		AND break_code = #{break_code,jdbcType=VARCHAR}
		and	pact_code=#{pact_code,jdbcType=VARCHAR}
	</update>


	<delete id="deleteAllbatch">
		DELETE FROM PACT_BREAK_SKHT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				GROUP_ID = #{item.group_id,jdbcType=NUMERIC}
				and HOS_ID = #{item.hos_id,jdbcType=NUMERIC}
				AND COPY_CODE = #{item.copy_code,jdbcType=VARCHAR}
				AND pact_code = #{item.pact_code,jdbcType=VARCHAR}
				AND break_code = #{item.break_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteByPactCodeList">
		DELETE FROM PACT_BREAK_SKHT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				GROUP_ID = #{item.group_id,jdbcType=NUMERIC}
				and HOS_ID = #{item.hos_id,jdbcType=NUMERIC}
				AND COPY_CODE = #{item.copy_code,jdbcType=VARCHAR}
				AND pact_code = #{item.pact_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteByPactCode" parameterType="java.util.Map">
		DELETE FROM
		PACT_BREAK_SKHT WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		and HOS_ID = #{hos_id,jdbcType=NUMERIC}
		AND COPY_CODE = #{copy_code,jdbcType=VARCHAR}
		AND pact_code = #{pact_code,jdbcType=VARCHAR}
	</delete>
</mapper>