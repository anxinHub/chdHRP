<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.pac.dao.skht.guarantee.PactLetterSKHTMapper">
	<resultMap id="pactDepRetSKHT"
		type="com.chd.hrp.pac.entity.skht.guarantee.PactLetterSKHTEntity">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="letter_code" column="letter_code" />
		<result property="pact_code" column="pact_code" />
		<result property="sign_date" column="sign_date" />
		<result property="bank_name" column="bank_name" />
		<result property="bank_code" column="bank_code" />
		<result property="bank_man" column="bank_man" />
		<result property="bank_tel" column="bank_tel" />
		<result property="bank_no" column="bank_no" />
		<result property="cus_id" column="cus_id" />
		<result property="cus_no" column="cus_no" />
		<result property="cus_name" column="cus_name" />
		<result property="money" column="money" />
		<result property="start_date" column="start_date" />
		<result property="end_date" column="end_date" />
		<result property="sp_cond" column="sp_cond" />
		<result property="content" column="content" />
		<result property="note" column="note" />
		<result property="letter_state" column="letter_state" />
		<result property="maker" column="maker" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="confirmer" column="confirmer" />
		<result property="confirm_date" column="confirm_date" />
		<result property="disabler" column="disabler" />
		<result property="disable_date" column="disable_date" />
		<result property="sup_name" column="sup_name" />
		<result property="pact_name" column="pact_name" />
		<result property="maker_name" column="maker_name" />
		<result property="checker_name" column="checker_name" />
		<result property="confirmer_name" column="confirmer_name" />
		<result property="disabler_name" column="disabler_name" />
	</resultMap>

	<resultMap type="java.util.Map" id="bankMap">
		<result property="phone" column="phone" />
		<result property="bank_zh" column="bank_zh" />
	</resultMap>

	<select id="query" parameterType="java.util.Map"
		resultMap="pactDepRetSKHT">
		select plf.LETTER_CODE, plf.SIGN_DATE, plf.cus_no, plf.PACT_CODE, mf.PACT_NAME
		, plf.MONEY, plf.START_DATE, plf.END_DATE, plf.NOTE, hs.cus_name
		, dd.VALUE_NAME as letter_state, dd2.VALUE_NAME as sp_cond, he.USER_NAME as maker_name, he1.USER_NAME as checker_name, he2.USER_NAME as confirmer_name
		, he3.USER_NAME as disabler_name ,ab.BANK_NAME 
		from PACT_LETTER_SKHT plf
		left join PACT_MAIN_SKHT mf on plf.GROUP_ID = mf.GROUP_ID and plf.HOS_ID = mf.HOS_ID and plf.COPY_CODE = mf.COPY_CODE and plf.PACT_CODE = mf.PACT_CODE 
		left join HOS_CUS_DICT hs on hs.GROUP_ID = plf.GROUP_ID and hs.HOS_ID = plf.HOS_ID and hs.cus_no = plf.cus_no 
		left join sys_user he on he.GROUP_ID = plf.GROUP_ID and he.HOS_ID = plf.HOS_ID and he.USER_ID = plf.MAKER 
		left join sys_user he1 on he1.GROUP_ID = plf.GROUP_ID and he1.HOS_ID = plf.HOS_ID and he1.USER_ID = plf.CHECKER 
		left join sys_user he2 on he2.GROUP_ID = plf.GROUP_ID and he2.HOS_ID = plf.HOS_ID and he2.USER_ID = plf.CONFIRMER 
		left join sys_user he3 on he3.GROUP_ID = plf.GROUP_ID and he3.HOS_ID = plf.HOS_ID and he3.USER_ID = plf.DISABLER 
		left join PACT_DICT_DATA dd on dd.VALUE_CODE = plf.LETTER_STATE and dd.F_CODE = 'LETTER_STATE' 
		left join PACT_DICT_DATA dd2 on dd2.VALUE_CODE = plf.SP_COND and dd2.F_CODE = 'SP_COND' 
		LEFT JOIN ACC_BANK ab ON plf.group_id = ab.group_id AND plf.hos_id = ab.hos_id and plf.bank_code = ab.BANK_NUMBER
		<where>
			plf.group_id=#{group_id,jdbcType=NUMERIC}
			and
			plf.hos_id=#{hos_id,jdbcType=NUMERIC}
			and
			plf.copy_code=#{copy_code,jdbcType=VARCHAR}
			<if test="letter_state != null and letter_state != ''">
				and plf.letter_state=#{letter_state,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
				and plf.note like '%'||#{note,jdbcType=VARCHAR}||'%'
			</if>
			<if test="cus_no != null and cus_no != ''">
				and plf.cus_no=#{cus_no,jdbcType=VARCHAR}
			</if>
			<if test="letter_code != null and letter_code != ''">
				and plf.letter_code like upper(#{letter_code,jdbcType=VARCHAR})||'%'
			</if>
			<if test="pact_name != null and pact_name != ''">
				and mf.pact_name like '%'||#{pact_name,jdbcType=VARCHAR}||'%'
			</if>
			<if test="pact_code != null and pact_code != ''">
				and plf.pact_code like upper(#{pact_code,jdbcType=VARCHAR})||'%'
			</if>
			<if test="pact_type_code != null and pact_type_code != ''">
				and mf.pact_type_code=#{pact_type_code,jdbcType=VARCHAR}
			</if>
			<if test="sp_cond != null and sp_cond != ''">
				and plf.sp_cond=#{sp_cond,jdbcType=VARCHAR}
			</if>
			<if test="bank_code != null and bank_code != ''">
				and plf.bank_code=#{bank_code,jdbcType=VARCHAR}
			</if>
			<if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
				and plf.SIGN_DATE BETWEEN to_date(#{start_date,jdbcType=TIMESTAMP},'yyyy-MM-dd') AND to_date(#{end_date,jdbcType=TIMESTAMP},'yyyy-MM-dd')
			</if>
			<if test="min_money != null and min_money != '' and max_money != null and max_money != ''">
				and plf.money BETWEEN #{min_money,jdbcType=NUMERIC} AND #{max_money,jdbcType=NUMERIC}
			</if>
			<if test="max_money != null and max_money != ''">
				and #{max_money,jdbcType=NUMERIC} >= plf.money
			</if>
			<if test="min_money != null and min_money != ''">
				and plf.money >= #{min_money,jdbcType=NUMERIC} 
			</if>
		</where>
	</select>
	<select id="queryForPrint" parameterType="java.util.Map"
		resultType="java.util.Map">
				select plf.LETTER_CODE, plf.SIGN_DATE, plf.cus_no, plf.PACT_CODE, mf.PACT_NAME
		, plf.MONEY, plf.START_DATE, plf.END_DATE, plf.NOTE, hs.cus_name
		, dd.VALUE_NAME as letter_state, dd2.VALUE_NAME as sp_cond, he.USER_NAME as maker_name, he1.USER_NAME as checker_name, he2.USER_NAME as confirmer_name
		, he3.USER_NAME as disabler_name ,ab.BANK_NAME 
		from PACT_LETTER_SKHT plf
		left join PACT_MAIN_SKHT mf on plf.GROUP_ID = mf.GROUP_ID and plf.HOS_ID = mf.HOS_ID and plf.COPY_CODE = mf.COPY_CODE and plf.PACT_CODE = mf.PACT_CODE 
		left join HOS_CUS_DICT hs on hs.GROUP_ID = plf.GROUP_ID and hs.HOS_ID = plf.HOS_ID and hs.cus_no = plf.cus_no 
		left join sys_user he on he.GROUP_ID = plf.GROUP_ID and he.HOS_ID = plf.HOS_ID and he.USER_ID = plf.MAKER 
		left join sys_user he1 on he1.GROUP_ID = plf.GROUP_ID and he1.HOS_ID = plf.HOS_ID and he1.USER_ID = plf.CHECKER 
		left join sys_user he2 on he2.GROUP_ID = plf.GROUP_ID and he2.HOS_ID = plf.HOS_ID and he2.USER_ID = plf.CONFIRMER 
		left join sys_user he3 on he3.GROUP_ID = plf.GROUP_ID and he3.HOS_ID = plf.HOS_ID and he3.USER_ID = plf.DISABLER 
		left join PACT_DICT_DATA dd on dd.VALUE_CODE = plf.LETTER_STATE and dd.F_CODE = 'LETTER_STATE' 
		left join PACT_DICT_DATA dd2 on dd2.VALUE_CODE = plf.SP_COND and dd2.F_CODE = 'SP_COND' 
		LEFT JOIN ACC_BANK ab ON plf.group_id = ab.group_id AND plf.hos_id = ab.hos_id and plf.bank_code = ab.BANK_NUMBER
		<where>
			plf.group_id=#{group_id,jdbcType=NUMERIC}
			and plf.hos_id=#{hos_id,jdbcType=NUMERIC}
			and plf.copy_code=#{copy_code,jdbcType=VARCHAR}
			<if test="letter_state != null and letter_state != ''">
				and plf.letter_state=#{letter_state,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
				and plf.note like '%'||#{note,jdbcType=VARCHAR}||'%'
			</if>
			<if test="cus_no != null and cus_no != ''">
				and plf.cus_no=#{cus_no,jdbcType=VARCHAR}
			</if>
			<if test="letter_code != null and letter_code != ''">
				and plf.letter_code like upper(#{letter_code,jdbcType=VARCHAR})||'%'
			</if>
			<if test="pact_name != null and pact_name != ''">
				and mf.pact_name like '%'||#{pact_name,jdbcType=VARCHAR}||'%'
			</if>
			<if test="pact_code != null and pact_code != ''">
				and plf.pact_code like upper(#{pact_code,jdbcType=VARCHAR})||'%'
			</if>
			<if test="pact_type_code != null and pact_type_code != ''">
				and mf.pact_type_code=#{pact_type_code,jdbcType=VARCHAR}
			</if>
			<if test="sp_cond != null and sp_cond != ''">
				and plf.sp_cond=#{sp_cond,jdbcType=VARCHAR}
			</if>
			<if test="bank_code != null and bank_code != ''">
				and plf.bank_code=#{bank_code,jdbcType=VARCHAR}
			</if>
			<if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
				and plf.SIGN_DATE BETWEEN to_date(#{start_date,jdbcType=TIMESTAMP},'yyyy-MM-dd') AND to_date(#{end_date,jdbcType=TIMESTAMP},'yyyy-MM-dd')
			</if>
			<if test="min_money != null and min_money != '' and max_money != null and max_money != ''">
				and plf.money BETWEEN #{min_money,jdbcType=NUMERIC} AND #{max_money,jdbcType=NUMERIC}
			</if>
			<if test="max_money != null and max_money != ''">
				and #{max_money,jdbcType=NUMERIC} >= plf.money
			</if>
			<if test="min_money != null and min_money != ''">
				and plf.money >= #{min_money,jdbcType=NUMERIC} 
			</if>
		</where>
	</select>

	<select id="queryByCode" parameterType="java.util.Map"
		resultMap="pactDepRetSKHT">
	SELECT
			pls.pact_code,
			pls.letter_code,
			pls.sign_date,
			pls.bank_code,
			pls.bank_man,
			pls.bank_tel,
			pls.bank_no,
			pls.hospital_man,
			pls.hospital_tel,
			pls.cus_id,
			pls.cus_no,
			pls.money,
			pls.start_date,
			pls.end_date,
			pls.sp_cond,
			pls.content,
			pls.note,
			pls.letter_state,
			pms.PACT_NAME,hs.cus_name
		FROM
		PACT_LETTER_SKHT pls
		LEFT JOIN PACT_MAIN_SKHT pms on pls.GROUP_ID = pms.GROUP_ID and pls.HOS_ID = pms.HOS_ID and pls.COPY_CODE = pms.COPY_CODE and pls.PACT_CODE = pms.PACT_CODE
		left join HOS_CUS_DICT hs on hs.GROUP_ID = pls.GROUP_ID and hs.HOS_ID = pls.HOS_ID and hs.cus_no = pls.cus_no 
		WHERE
		pls.group_id=#{group_id,jdbcType=NUMERIC}
		and pls.hos_id=#{hos_id,jdbcType=NUMERIC}
		and pls.copy_code=#{copy_code,jdbcType=VARCHAR}
		and pls.letter_code = #{letter_code,jdbcType=VARCHAR}
		and pls.pact_code = #{pact_code,jdbcType=VARCHAR}
	</select>

	<insert id="add" parameterType="java.util.Map">
		INSERT INTO PACT_LETTER_SKHT (
			group_id,
			hos_id,
			copy_code,
			pact_code,
			letter_code,
			sign_date,
			bank_code,
			bank_man,
			bank_tel,
			bank_no,
			hospital_man,
			hospital_tel,
			cus_id,
			cus_no,
			money,
			start_date,
			end_date,
			sp_cond,
			content,
			note,
			letter_state,
			maker,
			make_date 
		)
		VALUES(
		#{group_id,jdbcType=NUMERIC},
		#{hos_id,jdbcType=NUMERIC},
		#{copy_code,jdbcType=VARCHAR},
		#{pact_code,jdbcType=VARCHAR},
		#{letter_code,jdbcType=VARCHAR},
		to_date(#{sign_date},'yyyy-mm--dd'),
		#{bank_code,jdbcType=VARCHAR},
		#{bank_man,jdbcType=VARCHAR},
		#{bank_tel,jdbcType=VARCHAR},
		#{bank_no,jdbcType=VARCHAR},
		#{hospital_man,jdbcType=VARCHAR},
		#{hospital_tel,jdbcType=VARCHAR},
		#{cus_id,jdbcType= NUMERIC},
		#{cus_no,jdbcType=NUMERIC},
		#{money,jdbcType= NUMERIC},
		to_date(#{start_date,jdbcType=DATE},'yyyy-mm--dd'),
		to_date(#{end_date,jdbcType=DATE},'yyyy-mm--dd'),
		#{sp_cond,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{note,jdbcType=VARCHAR},
		#{letter_state,jdbcType=VARCHAR},
		#{maker,jdbcType=NUMERIC},
		to_date(#{make_date,jdbcType=DATE},'yyyy-mm--dd')
		)
	</insert>


	<update id="updateState" parameterType="java.util.Map">
		UPDATE PACT_LETTER_SKHT SET
		<if test="letter_state == '04'">
			disabler=#{disabler,jdbcType=NUMERIC},
			disable_date=#{disable_date,jdbcType=TIMESTAMP},
		</if>
		<if test="letter_state == '03'">
			<if test="confirmer != null and confirmer != ''">
				confirmer=#{confirmer,jdbcType=NUMERIC},
				confirm_date=#{confirm_date,jdbcType=TIMESTAMP},
			</if>
			disabler=#{disabler,jdbcType=NUMERIC},
			disable_date=#{disable_date,jdbcType=TIMESTAMP},
		</if>
		<if test="letter_state == '02'">
			<if test="checker != null and checker != ''">
				checker=#{checker,jdbcType=NUMERIC},
				check_date=#{check_date,jdbcType=TIMESTAMP},
			</if>
			confirmer=#{confirmer,jdbcType=NUMERIC},
			confirm_date=#{confirm_date,jdbcType=TIMESTAMP},
		</if>
		<if test="letter_state == '01'">
			checker=#{checker,jdbcType=NUMERIC},
			check_date=#{check_date,jdbcType=TIMESTAMP},
		</if>
		letter_state=#{letter_state,jdbcType=NUMERIC}
		WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		AND HOS_ID =#{hos_id,jdbcType=NUMERIC} 
		AND COPY_CODE = #{copy_code,jdbcType=VARCHAR} and
		<foreach collection="list" item="item" index="index" separator="or">
			pact_code = #{item.pact_code,jdbcType=VARCHAR}
			AND letter_code = #{item.letter_code,jdbcType=VARCHAR}
		</foreach>
	</update>


	<update id="update" parameterType="java.util.Map">
		UPDATE PACT_LETTER_SKHT SET
		sign_date=to_timestamp(#{sign_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		bank_code=#{bank_code,jdbcType=VARCHAR},
		bank_man=#{bank_man,jdbcType=VARCHAR},
		bank_tel=#{bank_tel,jdbcType=VARCHAR},
		bank_no=#{bank_no,jdbcType=VARCHAR},
		cus_id=#{cus_id,jdbcType=NUMERIC},
		cus_no=#{cus_no,jdbcType=NUMERIC},
		money=#{money,jdbcType=NUMERIC},
		start_date=to_timestamp(#{start_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		end_date=to_timestamp(#{end_date,jdbcType=TIMESTAMP},'yyyy-mm--dd hh24:mi:ss.ff'),
		sp_cond=#{sp_cond,jdbcType=VARCHAR},
		content=#{content,jdbcType=VARCHAR},
		note=#{note,jdbcType=VARCHAR},
		hospital_man=#{hospital_man,jdbcType=VARCHAR},
		hospital_tel=#{hospital_tel,jdbcType=VARCHAR}
		WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		AND HOS_ID =#{hos_id,jdbcType=NUMERIC}
		AND COPY_CODE = #{copy_code,jdbcType=VARCHAR}
		AND letter_code = #{letter_code,jdbcType=VARCHAR}
		and	pact_code=#{pact_code,jdbcType=VARCHAR}
	</update>


	<delete id="deleteAllBatch">
		DELETE FROM PACT_LETTER_SKHT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				GROUP_ID = #{item.group_id,jdbcType=NUMERIC}
				and HOS_ID = #{item.hos_id,jdbcType=NUMERIC}
				AND COPY_CODE = #{item.copy_code,jdbcType=VARCHAR}
				AND pact_code = #{item.pact_code,jdbcType=VARCHAR}
				AND letter_code = #{item.letter_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	<delete id="deleteByPactCodeList">
		DELETE FROM PACT_LETTER_SKHT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				GROUP_ID = #{item.group_id,jdbcType=NUMERIC}
				and HOS_ID = #{item.hos_id,jdbcType=NUMERIC}
				AND COPY_CODE = #{item.copy_code,jdbcType=VARCHAR}
				AND pact_code = #{item.pact_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	<delete id="deleteByPactCode" parameterType="java.util.Map">
		DELETE FROM
		PACT_LETTER_SKHT WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		and HOS_ID = #{hos_id,jdbcType=NUMERIC}
		AND COPY_CODE = #{copy_code,jdbcType=VARCHAR}
		AND pact_code = #{pact_code,jdbcType=VARCHAR}
	</delete>

	<select id="queryPactBankDetailInfo"
		parameterType="java.util.Map" resultMap="bankMap">
		SELECT PHONE,BANK_ZH FROM
		ACC_BANK WHERE
		GROUP_ID = #{group_id,jdbcType=NUMERIC}
		and HOS_ID = #{hos_id,jdbcType=NUMERIC}
		and BANK_NUMBER = #{bank_code,jdbcType=NUMERIC}
	</select>
</mapper>