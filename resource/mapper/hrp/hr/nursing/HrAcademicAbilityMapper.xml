<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.nursing.HrAcademicAbilityMapper">

	<resultMap id="hrAcademic" type="com.chd.hrp.hr.entity.nursing.HrAcademicAbility">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="year" column="year"/>
		<result property="emp_code" column="emp_code"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_name" column="emp_name"/>
		<result property="duty_code" column="duty_code"/>
		<result property="title_code" column="title_code"/>
		<result property="level_code" column="level_code"/>
		<result property="book_report" column="book_report"/>
		<result property="case_analy" column="case_analy"/>
		<result property="special_case_analy" column="special_case_analy"/>
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
		<result property="note" column="note"/>
	</resultMap>
	<resultMap id="hrAcademicMap" type="java.util.Map">
	  <result property="emp_code" column="emp_code" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_name" column="dept_name" />
		<result property="title_code" column="title_code" />
		<result property="title_name" column="title_name" />
		<result property="kind_code" column="kind_code" />
		<result property="kind_name" column="kind_name" />
		<result property="level_code" column="level_code" />
		<result property="level_name" column="level_name" />
		<result property="duty_code" column="duty_code" />
		<result property="duty_name" column="duty_name" />
		<result property="mobile" column="mobile" />
		<result property="photo" column="photo" />
	
	</resultMap>
	<insert id="addStoreCondition" parameterType="java.util.List" >
		INSERT INTO HR_ACADEMIC (
			group_id,
			hos_id,
			year,
			emp_id,
			duty_code,
			title_code,
			level_code,
			book_report,
			case_analy,
			special_case_analy,
			state,
			note
		) (
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.year,jdbcType=VARCHAR},
				#{item.emp_id,jdbcType=INTEGER},
				#{item.duty_code,jdbcType=VARCHAR},
				#{item.title_code,jdbcType=VARCHAR},
				#{item.level_code,jdbcType=VARCHAR},
				#{item.book_report,jdbcType=INTEGER},
				#{item.case_analy,jdbcType=INTEGER},
				#{item.special_case_analy,jdbcType=INTEGER},
				#{item.state,jdbcType=INTEGER},
				#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)
	</insert>
<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_ACADEMIC (
		group_id,
		hos_id,
		year,
		emp_id,
		duty_code,
		title_code,
		level_code,
		book_report,
		case_analy,
		special_case_analy,
		state,
		note
		) (
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.year,jdbcType=VARCHAR},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.duty_code,jdbcType=VARCHAR},
			#{item.title_code,jdbcType=VARCHAR},
			#{item.level_code,jdbcType=VARCHAR},
			#{item.book_report,jdbcType=INTEGER},
			#{item.case_analy,jdbcType=INTEGER},
			#{item.special_case_analy,jdbcType=INTEGER},
			#{item.state,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)
	</insert>
	<select id="query" parameterType="java.util.Map" resultMap="hrAcademic" >
	
		SELECT 
			ha.group_id,
			ha.hos_id,
			ha.year,
			he.emp_code,
			ha.emp_id,
			he.emp_name,
			ha.duty_code,
			ha.title_code,
			ha.level_code,
			ha.book_report,
			ha.case_analy,
			ha.special_case_analy,
			ha.state,
			case when ha.state = 0 then '新建' when ha.state = 1 then '提交' else '' end state_name ,
			ha.note
		FROM HR_ACADEMIC ha
		left join hos_emp he on ha.emp_id=he.emp_id and ha.group_id = he.group_id and ha.hos_id =he.hos_id
		left join hos_dept_dict hd on he.dept_no=hd.dept_no and he.group_id = hd.group_id and he.hos_id =hd.hos_id
		<where>                     
					ha.group_id = #{group_id,jdbcType=INTEGER}
				and ha.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="year != null and year != ''">
				AND ha.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND ha.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="duty_code != null and duty_code != ''">
				AND ha.duty_code = #{duty_code,jdbcType=VARCHAR}
			</if>
			<if test="title_code != null and title_code != ''">
				AND ha.title_code = #{title_code,jdbcType=VARCHAR}
			</if>
			<if test="level_code != null and level_code != ''">
				AND ha.level_code = #{level_code,jdbcType=VARCHAR}
			</if>
			<if test="book_report != null and book_report != ''">
				AND ha.book_report = #{book_report,jdbcType=INTEGER}
			</if>
			<if test="case_analy != null and case_analy != ''">
				AND ha.case_analy = #{case_analy,jdbcType=INTEGER}
			</if>
			<if test="special_case_analy != null and special_case_analy != ''">
				AND ha.special_case_analy = #{special_case_analy,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				AND ha.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="note != null and note != ''">
				AND ha.note = #{note,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hd.dept_id = #{dept_id,jdbcType=VARCHAR} 
			</if>
			<if test="emp_name != null and emp_name != ''">
				AND he.emp_name like '%${emp_name}%'
			</if>
			<if test="emp_code != null and emp_code != ''">
				AND he.emp_code like '%${emp_code}%'
			</if>
		</where>   
		order by he.emp_code , ha.year desc
	</select>
	<select id="queryByCode" resultMap="hrAcademic"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		year,
		emp_id,
		duty_code,
		title_code,
		level_code,
		book_report,
		case_analy,
		special_case_analy,
		state,
		note
		FROM hr_academic 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		emp_id = #{emp_id,jdbcType=INTEGER} 
	
	</select>
	<delete id="deleteAcademicAbility" parameterType="java.util.Map">
		DELETE FROM hr_academic 
		where    	group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND year = #{year,jdbcType=VARCHAR}
				AND emp_id = #{emp_id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteBatchStoreCondition" parameterType="java.util.List">
		
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			DELETE FROM hr_academic 
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<!-- 提交（单条） -->
	<update id="addPromotionEvaluate" parameterType="java.util.Map">
	    UPDATE hr_promotion_evaluate set 
		    book_report = #{book_report,jdbcType=INTEGER},
			case_analy = #{case_analy,jdbcType=INTEGER},
			special_case_analy = #{special_case_analy,jdbcType=INTEGER}
		<where>                     
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND year = #{year,jdbcType=VARCHAR}
			AND emp_id = #{emp_id,jdbcType=INTEGER}
		</where>  
	</update>
	<update id="confirmAcademicAbility" parameterType="java.util.Map">
		update HR_ACADEMIC set state= #{state,jdbcType=INTEGER}
		<where>
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND year = #{year,jdbcType=VARCHAR}
			AND emp_id = #{emp_id,jdbcType=INTEGER}
		</where>  
	</update>
	
	<!-- 提交（批量） -->
	<update id="addPromotionEvaluateBatch">
		<foreach collection="list" item="item" open="begin" separator=";" close=";end;">
		    UPDATE hr_promotion_evaluate set 
			    book_report = #{item.book_report,jdbcType=INTEGER},
				case_analy = #{item.case_analy,jdbcType=INTEGER},
				special_case_analy = #{item.special_case_analy,jdbcType=INTEGER}
			<where>                     
					group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			</where>  
		</foreach>
	</update>
	<update id="confirmAcademicAbilityBatch">
		<foreach collection="list" item="item" open="begin" separator=";" close=";end;">
			update HR_ACADEMIC set state= #{item.state,jdbcType=INTEGER}
			<where>
					group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			</where>
		</foreach>
	</update>
	
	<!--撤回  -->
	<update id="reConfirmPromotionEvaluate" parameterType="java.util.Map">

		UPDATE hr_promotion_evaluate set  book_report = null, case_analy = null, special_case_analy = null
		<where>                     
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND year = #{year,jdbcType=VARCHAR}
			AND emp_id = #{emp_id,jdbcType=INTEGER}
		</where>  
	</update>
	<!--撤回（批量）  -->
	<update id="reConfirmPromotionEvaluateBatch">
		<foreach collection="list" item="item" open="begin" separator=";" close=";end;">
			UPDATE hr_promotion_evaluate set  book_report = null, case_analy = null, special_case_analy = null
			<where>                     
					group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			</where>
		</foreach>
	</update>
	
	<select id="queryAcademicAbilityByEmpId" parameterType="java.util.List" resultType="java.util.Map" >
		 with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.year,jdbcType=VARCHAR} as year,
					#{item.emp_id,jdbcType=INTEGER} as emp_id
				from dual
			</foreach>
		)
		select a.group_id,a.hos_id,a.year,a.emp_id,c.emp_code,c.emp_name
		from list_temp a
		join hr_academic b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.year=b.year and a.emp_id=b.emp_id
		left join hos_emp c on b.group_id=c.group_id and b.hos_id=c.hos_id and b.emp_id=c.emp_id and c.is_stop = 0
	</select>
	<select id="queryEmp" parameterType="java.util.Map" resultMap="hrAcademicMap">
	select hrt.TITLE_LEVEL_NAME as title_name,hrt.title_level_code as title_code,
     		hep.level_code as level_code, hf2.field_col_name as level_name, hd.duty_code,hd.duty_name,he.emp_id, he.emp_name,he.emp_code
     	from hos_emp he
     	left join HR_HOS_DUTY hhd on he.emp_id =hhd.emp_id and he.group_id=hhd.group_id and he.hos_id=hhd.hos_id
     	left join hos_duty hd on hhd.duty_code=hd.duty_code and hhd.group_id=hd.group_id and hhd.hos_id=hd.hos_id
     	left join HR_EMP_PROMOTION hep on hep.emp_id = he.emp_id 
     	left join HR_FIIED_DATA hf2 on hf2.field_tab_code = 'DIC_LEVEL'
     		and hf2.field_col_code = hep.level_code and hf2.group_id = hep.group_id and hf2.hos_id = hep.hos_id 
     	left join HR_EMP_TECHNOLOGY_TITLE hett on hett.emp_id = he.emp_id
     		and hett.group_id = he.group_id and hett.hos_id = he.hos_id 
     	left join HR_TITLE_LEVEL hrt on hrt.TITLE_LEVEL_CODE = hett.TITLE_CODE
     		and hrt.group_id = hett.group_id and hrt.hos_id = hett.hos_id
		<where>
			<if test="group_id != null and group_id != ''">
			 	he.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and he.hos_id = #{hos_id}
			</if>
			<if test="emp_id !=null and emp_id !=''">
		 		and he.emp_code = #{emp_id} 
			</if>
			<if test="key != null and key != ''">
				and (
					he.emp_name like '%'||#{key}||'%' or
					he.emp_id like '%'||#{key}||'%' or
					he.emp_code like '%'||#{key}||'%' or
					he.spell_code like '%'||upper(#{key})||'%' or
					he.wbx_code like '%'||upper(#{key})||'%'
				)
			</if>
		</where>
		group by hrt.TITLE_LEVEL_NAME , hrt.title_level_code , hep.level_code , hf2.field_col_name ,hd.duty_code,hd.duty_name, he.emp_id, he.emp_name,he.emp_code
	</select>
</mapper>