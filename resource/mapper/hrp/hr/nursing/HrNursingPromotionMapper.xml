<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.nursing.HrNursingPromotionMapper">
	<resultMap id="hrPromotionApply"
		type="com.chd.hrp.hr.entity.nursing.HrNursingPromotion">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="year" column="year" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="degree_code" column="degree_code" />
		<result property="degree_name" column="degree_name" />
		<result property="graduation_date" column="graduation_date" />
		<result property="max_degree_code" column="max_degree_code" />
		<result property="max_degree_name" column="max_degree_name" />
		<result property="max_graduation_date" column="max_graduation_date" />
		<result property="birthday" column="birthday" />
		<result property="cur_level_code" column="cur_level_code" />
		<result property="cur_level_name" column="cur_level_name" />
		<result property="cur_get_date" column="cur_get_date" />
		<result property="cur_title_code" column="cur_title_code" />
		<result property="cur_title_name" column="cur_title_name" />
		<result property="cur_title_date" column="cur_title_date" />
		<result property="apply_level_code" column="apply_level_code" />
		<result property="apply_level_name" column="apply_level_name" />
		<result property="worktime" column="worktime" />
		<result property="apply_date" column="apply_date" />
		<result property="audit_date" column="audit_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap id="hrPromotionApplyMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="year" column="year" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
		<result property="field_col_code" column="field_col_code" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="degree_code" column="degree_code" />
		<result property="degree_name" column="degree_name" />
		<result property="graduation_date" column="graduation_date" />
		<result property="max_degree_code" column="max_degree_code" />
		<result property="max_degree_name" column="max_degree_name" />
		<result property="max_graduation_date" column="max_graduation_date" />
		<result property="birthday" column="birthday" />
		<result property="cur_level_code" column="cur_level_code" />
		<result property="cur_level_name" column="cur_level_name" />
		<result property="cur_get_date" column="cur_get_date" />
		<result property="cur_title_code" column="cur_title_code" />
		<result property="cur_title_name" column="cur_title_name" />
		<result property="cur_title_date" column="cur_title_date" />
		<result property="apply_level_code" column="apply_level_code" />
		<result property="apply_level_name" column="apply_level_name" />
		<result property="worktime" column="worktime" />
		<result property="apply_date" column="apply_date" />
		<result property="audit_date" column="audit_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap type="java.util.Map" id="hrSelectMap">
		<result property="id" column="id" />
		<result property="text" column="text" />
		<result property="name" column="name" />
		<result property="label" column="label" />
		<result property="type" column="type" />
		<result property="is_write" column="is_write" />
	</resultMap>
	<resultMap type="java.util.Map" id="attendMap">
		<result property="work_year" column="work_year" />
		<result property="sick" column="sick" />
		<result property="maternity" column="maternity" />
		<result property="casual" column="casual" />
	</resultMap>


	<!-- 添加护理晋级申请 -->
	<insert id="add" useGeneratedKeys="true">

		INSERT INTO HR_PROMOTION_APPLY (
		<trim suffix="" suffixOverrides=",">
			group_id,
			hos_id,
			year,
			emp_id,
			dept_id,
			dept_no,
			degree_code,
			graduation_date,
			max_degree_code,
			max_graduation_date,
			birthday,
			cur_level_code,
			cur_get_date,
			cur_title_code,
			cur_title_date,
			apply_level_code,
			worktime,
			apply_date,
			audit_date,
			state,
			note,
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{year,jdbcType=VARCHAR},
			#{emp_id,jdbcType=INTEGER},
			#{dept_id,jdbcType=INTEGER},
			#{dept_no,jdbcType=INTEGER},
			#{degree_code,jdbcType=VARCHAR},
			to_date(#{graduation_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
			#{max_degree_code,jdbcType=VARCHAR},
			to_date(#{max_graduation_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
			to_char(#{birthday}),
			#{cur_level_code,jdbcType=VARCHAR},
			to_date(#{cur_get_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
			#{cur_title_code,jdbcType=VARCHAR},
			to_date(#{cur_title_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
			#{apply_level_code,jdbcType=VARCHAR},
			to_char(#{worktime}),
			to_date(#{apply_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
			to_date(#{audit_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
			#{state,jdbcType=INTEGER},
			#{note,jdbcType=VARCHAR}
		</trim>
		)

	</insert>



	<!--添加近三年资料 -->
	<insert id="addaddNursingPromotion" parameterType="java.util.List">

		INSERT INTO HR_PROMOTION_LEAVE (
		group_id,
		hos_id,
		year,
		emp_id,
		work_year,
		sick,
		maternity,
		casual
		) (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.year,jdbcType=VARCHAR},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.work_year,jdbcType=VARCHAR},
			#{item.sick,jdbcType=INTEGER},
			#{item.maternity,jdbcType=INTEGER},
			#{item.casual,jdbcType=INTEGER}
			from dual
		</foreach>
		)
	</insert>

	<!-- 查询所有 -->
	<select id="queryNursingPromotion" parameterType="java.util.Map" resultMap="hrPromotionApply">

		SELECT
		hra.group_id,
		hra.hos_id,
		hra.year,
		hra.emp_id,
		hoe.emp_code,
		hoe.emp_name,
		hra.dept_id,
		hra.dept_no,
		hd.dept_name,
		hra.degree_code,
		hra.graduation_date,
		hra.max_degree_code,
		hra.max_graduation_date,
		hra.birthday,
		hra.cur_level_code,
		hf2.field_col_name as cur_level_name,
		hra.cur_get_date,
		hra.cur_title_code,
		hrt.title_level_name as
		cur_title_name,
		hra.cur_title_date,
		hra.apply_level_code,
		hf1.field_col_name as
		apply_level_name,
		hra.worktime,
		hra.apply_date,
		hra.audit_date,
		hra.state,
		case when hra.state = 0 then '新建' when hra.state = 1
		then '提交' else '' end state_name ,
		hra.note
		FROM HR_PROMOTION_APPLY hra
		left join hos_emp hoe on hra.emp_id= hoe.emp_id
		and hoe.group_id =
		hra.group_id
		and hoe.hos_id = hra.hos_id
		left join hos_dept_dict hd on
		hra.dept_id=hd.dept_id and
		hra.dept_no=hd.dept_no and
		hra.group_id=hd.group_id and
		hra.hos_id=hd.hos_id
		left join HR_TITLE_LEVEL hrt on
		hrt.TITLE_LEVEL_CODE = hra.CUR_TITLE_CODE
		and hrt.group_id =
		hra.group_id
		and hrt.hos_id = hra.hos_id
		left join HR_FIIED_DATA hf2 on
		hf2.field_tab_code = 'DIC_LEVEL'
		and hf2.field_col_code =
		hra.cur_level_code
		and hf2.group_id = hra.group_id
		and hf2.hos_id =
		hra.hos_id
		left join HR_FIIED_DATA hf1 on hf1.field_tab_code =
		'DIC_LEVEL'
		and hf1.field_col_code = hra.apply_level_code
		and
		hf1.group_id = hra.group_id
		and hf1.hos_id = hra.hos_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND hra.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hra.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="year != null and year != ''">
				AND hra.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND hra.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hra.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="degree_code != null and degree_code != ''">
				AND hra.degree_code = #{degree_code,jdbcType=VARCHAR}
			</if>
			<if test="graduation_date != null and graduation_date != ''">
				AND hra.graduation_date =
				#{graduation_date,jdbcType=DATE}
			</if>
			<if test="max_degree_code != null and max_degree_code != ''">
				AND hra.max_degree_code =
				#{max_degree_code,jdbcType=VARCHAR}
			</if>
			<if test="max_graduation_date != null and max_graduation_date != ''">
				AND hra.max_graduation_date =
				#{max_graduation_date,jdbcType=DATE}
			</if>
			<if test="birthday != null and birthday != ''">
				AND hra.birthday = #{birthday,jdbcType=VARCHAR}
			</if>
			<if test="cur_level_code != null and cur_level_code != ''">
				AND hra.cur_level_code =
				#{cur_level_code,jdbcType=VARCHAR}
			</if>
			<if test="cur_get_date != null and cur_get_date != ''">
				AND hra.cur_get_date = #{cur_get_date,jdbcType=DATE}
			</if>
			<if test="cur_title_code != null and cur_title_code != ''">
				AND hra.cur_title_code =
				#{cur_title_code,jdbcType=VARCHAR}
			</if>
			<if test="cur_title_date != null and cur_title_date != ''">
				AND hra.cur_title_date = #{cur_title_date,jdbcType=DATE}
			</if>
			<if test="apply_level_code != null and apply_level_code != ''">
				AND hra.apply_level_code =
				#{apply_level_code,jdbcType=VARCHAR}
			</if>
			<if test="worktime != null and worktime != ''">
				AND hra.worktime = #{worktime,jdbcType=VARCHAR}
			</if>
			<if test="apply_date != null and apply_date != ''">
				AND hra.apply_date = #{apply_date,jdbcType=DATE}
			</if>
			<if test="audit_date != null and audit_date != ''">
				AND hra.audit_date = #{audit_date,jdbcType=DATE}
			</if>
			<if test="state != null and state != ''">
				AND hra.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="note != null and note != ''">
				AND hra.note = #{note,jdbcType=VARCHAR}
			</if>
		</where>
		order by hoe.emp_code asc
	</select>




	<!-- 修改页跳转 -->
	<select id="queryByCode" resultMap="hrPromotionApply"
		parameterType="java.util.Map">

		select hra.group_id, hra.hos_id, hra.year, hra.emp_id, hoe.emp_name
		, hra.dept_id, hra.dept_no, hd.dept_name, hf.field_col_name
		degree_name,hra.degree_code, hra.graduation_date
		, hra.max_degree_code, hf1.field_col_name
		max_degree_name,hra.max_graduation_date, hra.birthday,
		hra.cur_level_code, hf2.field_col_name as cur_level_name
		, hra.cur_get_date, hra.cur_title_code, hrt.title_level_name as
		cur_title_name, hra.cur_title_date, hra.apply_level_code
		, hra.worktime, hra.apply_date, hra.audit_date, hra.state
		, hra.note
		from HR_PROMOTION_APPLY hra
		left join hos_emp hoe on hra.emp_id = hoe.emp_id
		and hoe.group_id = hra.group_id
		and hoe.hos_id = hra.hos_id


		left join hos_dept_dict hd on hra.dept_no = hd.dept_no
		and hra.group_id = hd.group_id
		and hra.hos_id = hd.hos_id
		left join HR_FIIED_DATA
		hf on hf.field_tab_code='DIC_EDUCATION' and
		hra.degree_code= hf.field_col_code and hf.group_id=hra.group_id and
		hf.hos_id=hra.hos_id
		left join HR_FIIED_DATA
		hf1 on
		hf1.field_tab_code='DIC_EDUCATION' and
		hf1.field_col_code =
		hra.max_degree_code and hf1.group_id=hra.group_id
		and
		hf1.hos_id=hra.hos_id
		left join HR_EMP_PROMOTION hep on
		hep.emp_id=hra.emp_id
		left join
		HR_FIIED_DATA hf2 on
		hf2.field_tab_code='DIC_LEVEL' and
		hf2.field_col_code = hep.level_code
		and hf2.group_id=hep.group_id and   hf2.hos_id=hep.hos_id
		left join HR_EMP_TECHNOLOGY_TITLE
		hett on hett.emp_id =hra.emp_id and
		hett.group_id=hra.group_id and
		hett.hos_id=hra.hos_id
		left join
		HR_TITLE_LEVEL hrt on
		hrt.TITLE_LEVEL_CODE =hett.TITLE_CODE and
		hrt.group_id=hett.group_id
		and hrt.hos_id=hett.hos_id
		WHERE
		hra.group_id
		= #{group_id,jdbcType=INTEGER} and
		hra.hos_id =
		#{hos_id,jdbcType=INTEGER} and
		hra.year = #{year,jdbcType=VARCHAR} and
		hra.emp_id = #{emp_id,jdbcType=INTEGER}
		<!-- and hra.apply_level_code=#{apply_level_code,jdbcType=INTEGER} -->
	</select>



	<select id="queryNursingPromotionById" resultMap="hrPromotionApply"
		parameterType="java.util.Map">
		SELECT
		hra.group_id,
		hra.hos_id,
		hra.year,
		hra.emp_id,
		hoe.emp_name,
		hra.dept_id,
		hra.dept_no,
		hra.degree_code,
		hra.graduation_date,
		hra.max_degree_code,
		hra.max_graduation_date,
		hra.birthday,
		hra.cur_level_code,
		hra.cur_get_date,
		hra.cur_title_code,
		hra.cur_title_date,
		hra.apply_level_code,
		hra.worktime,
		hra.apply_date,
		hra.audit_date,
		hra.state,
		hra.note
		FROM HR_PROMOTION_APPLY hra
		left join
		hos_emp hoe on
		hra.emp_id= hoe.emp_id
		and hoe.group_id =
		hra.group_id
		and
		hoe.hos_id =
		hra.hos_id

		<where>
			<if test="group_id != null and group_id != ''">
				AND hra.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hra.hos_id = #{hos_id}
			</if>

			AND hra.emp_id = #{user_code} and hra.year = #{year} 

		</where>
	</select>
	<!-- 删除晋级申请 -->
	<delete id="deleteNursingPromotion" parameterType="java.util.List">
		DELETE FROM hr_promotion_apply
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.year != null and item.year != ''">
					AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.emp_id != null and item.emp_id != ''">
					AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
	</delete>





	<!-- 删除近三年资料 -->
	<delete id="deletePromotionLeave" parameterType="java.util.List">
		DELETE FROM hr_promotion_leave
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.year != null and item.year != ''">
					AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.emp_id != null and item.emp_id != ''">
					AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>

			</foreach>
		</where>
	</delete>
	
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE hr_promotion_apply 
		<trim prefix="SET"  suffixOverrides=","> 
		apply_level_code = #{apply_level_code,jdbcType=VARCHAR},
		apply_date = to_date(#{apply_date,jdbcType=VARCHAR},'YYYY-MM-DD'),
		audit_date = #{audit_date,jdbcType=DATE},
		</trim>
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</where>  
	</update>
	
	
	
    <!-- 修改近三年资料 -->
    	<update id="UpdateAttend" parameterType="java.util.Map">
	
		UPDATE hr_promotion_leave 
		<trim prefix="SET"  suffixOverrides=","> 
		sick = #{sick,jdbcType=INTEGER},
		maternity = #{maternity,jdbcType=INTEGER},
		casual = #{casual,jdbcType=INTEGER},
		</trim>
		<where>                     
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND work_year = #{work_year,jdbcType=VARCHAR}
		</where>  
	</update>
	<!--提交晋级申请 (单条)-->
	<update id="confirmNursingPromotion" parameterType="java.util.Map">
			UPDATE hr_promotion_apply
			<trim prefix="SET" suffixOverrides=",">
				state = #{state,jdbcType=INTEGER}
			</trim>
			<where>
				AND group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND year = #{year,jdbcType=VARCHAR}
				AND emp_id = #{emp_id,jdbcType=INTEGER}
			</where>
	</update>
	<!--修改晋级申请提交状态 (批量)-->
	<update id="confirmNursingPromotionBatch">
		<foreach collection="list" item="item" open="begin" close=";end;" separator=";">
			UPDATE hr_promotion_apply
			<trim prefix="SET" suffixOverrides=",">
				state = #{item.state,jdbcType=INTEGER}
			</trim>
			<where>
					group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			</where>
		</foreach>
	</update>
	<!--提交晋级申请 -->
	<update id="reConfirmNursingPromotion" parameterType="java.util.Map">
		
			UPDATE hr_promotion_apply
			<trim prefix="SET" suffixOverrides=",">

				state = #{state,jdbcType=INTEGER}
			</trim>
			<where>
				AND group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND year = #{year,jdbcType=VARCHAR}
				AND emp_id = #{emp_id,jdbcType=INTEGER}
			</where>
	
	</update>
	<!-- 查询人员具体信息 -->
	<select id="queryHosEmpDetail" parameterType="java.util.Map"
		resultMap="hrPromotionApplyMap">
		<!-- select hrt.TITLE_LEVEL_NAME cur_title_name,
		hrt.title_level_code cur_title_code , to_char(hett.get_date ,
		'yyyy-MM-dd') cur_title_date,hep.level_code
		cur_level_code,
		hf2.field_col_name cur_level_name, to_char(hep.get_date ,
		'yyyy-mm-dd') cur_get_date, to_char(t1.graduation_date , 'yyyy-mm-dd')
		max_graduation_date,
		t1.education_code
		max_degree_code,hf1.field_col_name max_degree_name,
		to_char(t.graduation_date , 'yyyy-mm-dd')
		graduation_date,hf.field_col_code degree_code,hf.field_col_name
		degree_name,he.emp_id
		,he.emp_name, to_char(he.worktime , 'yyyy-mm')
		worktime, to_char(he.birthday , 'yyyy-mm') birthday
		from hos_emp he
		left join HR_EMP_DEGREE t on t.emp_id =he.emp_id and
		t.group_id=he.group_id and t.hos_id=he.hos_id
		left join HR_FIIED_DATA
		hf on hf.field_tab_code='DIC_EDUCATION' and
		hf.field_col_code =
		t.education_code
		and hf.group_id=t.group_id and hf.hos_id=t.hos_id
		left
		join HR_EMP_DEGREE t1 on t1.emp_id =he.emp_id and
		hf.group_id=t.group_id and hf.hos_id=t.hos_id
		left join HR_FIIED_DATA
		hf1 on hf1.field_tab_code='DIC_EDUCATION' and
		hf1.field_col_code =t1.education_code and hf1.group_id=t1.group_id
		and hf1.hos_id=t1.hos_id
		left join HR_EMP_PROMOTION hep on hep.emp_id=he.emp_id
		left join
		HR_FIIED_DATA hf2 on hf2.field_tab_code='DIC_LEVEL' and
		hf2.field_col_code = hep.level_code
		left join HR_EMP_TECHNOLOGY_TITLE
		hett on hett.emp_id =he.emp_id and
		hett.group_id=he.group_id and
		hett.hos_id=he.hos_id
		left join HR_TITLE_LEVEL hrt on
		hrt.TITLE_LEVEL_CODE =hett.TITLE_CODE and
		hrt.group_id=hett.group_id
		and hrt.hos_id=hett.hos_id
		where he.emp_id=
		#{user_code,jdbcType=INTEGER}
		and t.graduation_school is not null and
		hf.field_col_code = (
		select max(hed.education_code) from HR_EMP_DEGREE
		hed where
		hed.graduation_school is not null )
		and hf1.field_col_code = (
		select max(hed1.education_code) from HR_EMP_DEGREE hed1 )
		group by
		hrt.TITLE_LEVEL_NAME,title_level_code,hett.get_date,
		hep.level_code,hf2.field_col_name,hep.get_date,
		t1.graduation_date,t1.education_code,
		hf1.field_col_name,t.graduation_date,
		t.education_code,
		hf.field_col_name,hf.
		field_col_code,hf.field_col_name,
		he.emp_id
		,he.emp_name,he.worktime,he.birthday -->
		select ti.title_name as cur_title_name,
       		   ti.title_code as cur_title_code,
		       to_char(hett.get_date, 'yyyy-MM-dd') as cur_title_date,
		       hep.level_code as cur_level_code,
		       hf2.field_col_name as cur_level_name,
		       to_char(hep.get_date, 'yyyy-mm-dd') as cur_get_date,
		       to_char(t1.graduation_date, 'yyyy-mm-dd') as max_graduation_date,
		       t1.education_code as max_degree_code,
		       hf1.field_col_name as max_degree_name,
		       to_char(t.graduation_date, 'yyyy-mm-dd') as graduation_date,
		       hf.field_col_code as degree_code,
		       hf.field_col_name as degree_name,
		       he.emp_id,
		       he.emp_name,
		       to_char(he.worktime, 'yyyy-mm') as worktime,
		       to_char(he.birthday, 'yyyy-mm') as birthday
		  from hos_emp he
		  
		  left join (select ed.group_id,ed.hos_id,ed.emp_id,ed.education_code,ed.graduation_date
		               from HR_EMP_DEGREE ed
		              where ed.education_code =
		                    (select min(ed2.education_code)
		                       from HR_EMP_DEGREE ed2
		                      where ed.group_id = ed2.group_id
		                        and ed.hos_id = ed2.hos_id
		                        and ed.emp_id = ed2.emp_id
		                        and ed2.graduation_school is not null
		                      group by ed2.group_id, ed2.hos_id, ed2.emp_id)) t
		    on he.group_id = t.group_id
		   and he.hos_id = t.hos_id
		   and he.emp_id = t.emp_id
		  left join HR_FIIED_DATA hf
		    on hf.field_tab_code = 'DIC_EDUCATION'
		   and hf.field_col_code = t.education_code
		   and hf.group_id = #{group_id,jdbcType=INTEGER}
		   and hf.hos_id = #{hos_id,jdbcType=INTEGER}
		   
		  left join (select ed.group_id,ed.hos_id,ed.emp_id,ed.education_code,ed.graduation_date
		               from HR_EMP_DEGREE ed
		              where ed.education_code =
		                    (select min(ed2.education_code)
		                       from HR_EMP_DEGREE ed2
		                      where ed.group_id = ed2.group_id
		                        and ed.hos_id = ed2.hos_id
		                        and ed.emp_id = ed2.emp_id
		                      group by ed2.group_id, ed2.hos_id, ed2.emp_id)) t1
		    on he.group_id = t1.group_id
		   and he.hos_id = t1.hos_id
		   and he.emp_id = t1.emp_id
		  left join HR_FIIED_DATA hf1
		    on hf1.field_tab_code = 'DIC_EDUCATION'
		   and hf1.field_col_code = t1.education_code
		   and hf1.group_id = #{group_id,jdbcType=INTEGER}
		   and hf1.hos_id = #{hos_id,jdbcType=INTEGER}
		   
		  left join (select ep.group_id, ep.hos_id, ep.emp_id, ep.level_code, ep.get_date
		               from HR_EMP_PROMOTION ep
		              where ep.get_date =
		                    (select max(ep2.get_date)
		                       from HR_EMP_PROMOTION ep2
		                      where ep2.group_id = ep.group_id
		                        and ep2.hos_id = ep.hos_id
		                        and ep2.emp_id = ep.emp_id
		                      group by ep2.group_id, ep2.hos_id, ep2.emp_id)
		             
		             ) hep
		    on he.group_id = hep.group_id
		   and he.hos_id = hep.hos_id
		   and he.emp_id = hep.emp_id
		  left join HR_FIIED_DATA hf2
		    on hf2.field_tab_code = 'DIC_LEVEL'
		   and hf2.field_col_code = hep.level_code
		   
		  left join (select ett.group_id, ett.hos_id, ett.emp_id, ett.title_code, ett.get_date
		               from HR_EMP_TECHNOLOGY_TITLE ett
		              where ett.get_date =
		                    (select max(ett2.get_date)
		                       from HR_EMP_TECHNOLOGY_TITLE ett2
		                      where ett2.group_id = ett.group_id
		                        and ett2.hos_id = ett.hos_id
		                        and ett2.emp_id = ett.emp_id
		                      group by ett2.group_id, ett2.hos_id, ett2.emp_id)) hett
		    on he.group_id = hett.group_id
		   and he.hos_id = hett.hos_id
		   and he.emp_id = hett.emp_id
		  left join hr_title ti
		    on hett.group_id = ti.group_id
		   and hett.hos_id = ti.hos_id
		   and hett.title_code = ti.title_code
		 where he.emp_id = #{user_code,jdbcType=INTEGER}
		   and he.group_id = #{group_id,jdbcType=INTEGER}
		   and he.hos_id = #{hos_id,jdbcType=INTEGER}
		   group by ti.title_name , ti.title_code , hett.get_date, hep.level_code , hf2.field_col_name , hep.get_date, t1.graduation_date, t1.education_code , hf1.field_col_name ,t.graduation_date , hf.field_col_code ,
 hf.field_col_name , he.emp_id, he.emp_name, he.worktime, he.birthday
	</select>



	<!-- 查询阶别 -->
	<select id="queryLevel" parameterType="java.util.Map" resultMap="hrSelectMap">
		select t.field_col_code id,t.field_col_code ||' '|| t.field_col_name
		text from
		HR_FIIED_DATA t
		<where>
			t.field_tab_code='DIC_LEVEL'
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
		</where>
		order by t.field_col_code
	</select>


	<!-- 查询近三年资料 -->
	<select id="queryAttend" parameterType="java.util.Map"
		resultMap="attendMap">
		select tt.year work_year ,tt.sick,tt.maternity,tt.casual
		from (select
		t.*,rownum rownu from HR_EMP_ATTEND t where
		t.emp_id=#{user_code,jdbcType=INTEGER} and t.year &lt;
		=#{year,jdbcType=DATE} and
		rownum&lt;=3 order by t.year desc) tt
	</select>
	
	<!-- 提交护理晋级申请  申请表写数据 （单条）-->
	<insert id="addPromotionEvaluate">
			INSERT INTO HR_PROMOTION_EVALUATE (
		<trim suffix="" suffixOverrides=",">
		group_id,
		hos_id,
		year,
		emp_id,
		dept_id,
		dept_no,
		cur_level_code,
		apply_level_code
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{year,jdbcType=VARCHAR},
		#{emp_id,jdbcType=INTEGER},
		#{dept_id,jdbcType=INTEGER},
		#{dept_no,jdbcType=INTEGER},
		#{cur_level_code,jdbcType=VARCHAR},
		#{apply_level_code,jdbcType=VARCHAR}
		</trim>		
		)
	</insert>
	<!-- 提交护理晋级申请  申请表写数据(批量) -->
	<insert id="addPromotionEvaluateBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" open="begin" close=";end;" separator=";">
			INSERT INTO HR_PROMOTION_EVALUATE (
			<trim suffix="" suffixOverrides=",">
				group_id, hos_id, year, emp_id, dept_id, dept_no, cur_level_code, apply_level_code
			</trim>
			) VALUES (
			<trim suffix="" suffixOverrides=",">
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.year,jdbcType=VARCHAR},
				#{item.emp_id,jdbcType=INTEGER},
				#{item.dept_id,jdbcType=INTEGER},
				#{item.dept_no,jdbcType=INTEGER},
				#{item.cur_level_code,jdbcType=VARCHAR},
				#{item.apply_level_code,jdbcType=VARCHAR}
			</trim>		
			)
		</foreach>
	</insert>
	
	<delete id="reConfirmPromotionEvaluate" parameterType="java.util.Map">
	
		DELETE FROM hr_promotion_evaluate 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</where>  
	</delete>
	
	<delete id="reConfirmPromotionEvaluateBatch">
		<foreach collection="list" item="item" open="begin" close=";end;" separator=";">
			DELETE FROM hr_promotion_evaluate 
			<where>                     
					group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			</where>  
		</foreach>
	</delete>
	
	<select id="queryNursingPromotionByPrint" parameterType="java.util.Map" resultType="java.util.Map">

		SELECT
			hra.group_id,
			hra.hos_id,
			hra.year,
			hra.emp_id,
			hoe.emp_name,
			hra.dept_id,
			hra.dept_no,
			hd.dept_name,
			hra.degree_code,
			hra.graduation_date,
			hra.max_degree_code,
			hra.max_graduation_date,
			hra.birthday,
			hra.cur_level_code,
			hf2.field_col_name as cur_level_name,
			hra.cur_get_date,
			hra.cur_title_code,
			hrt.title_level_name as
			cur_title_name,
			hra.cur_title_date,
			hra.apply_level_code,
			hf1.field_col_name as
			apply_level_name,
			hra.worktime,
			hra.apply_date,
			hra.audit_date,
			hra.state,
			case when hra.state = 0 then '新建' when hra.state = 1 then '提交' else '' end state_name ,
			hra.note
		FROM HR_PROMOTION_APPLY hra
		left join hos_emp hoe on hra.emp_id= hoe.emp_id and hoe.group_id = hra.group_id and hoe.hos_id = hra.hos_id
		left join hos_dept_dict hd on hra.dept_id=hd.dept_id and hra.dept_no=hd.dept_no and hra.group_id=hd.group_id and hra.hos_id=hd.hos_id
		left join hr_title_level hrt on hrt.title_level_code = hra.cur_title_code and hrt.group_id = hra.group_id and hrt.hos_id = hra.hos_id
		left join hr_fiied_data hf2 on hf2.field_tab_code = 'DIC_LEVEL' and hf2.field_col_code = hra.cur_level_code and hf2.group_id = hra.group_id
			and hf2.hos_id = hra.hos_id
		left join hr_fiied_data hf1 on hf1.field_tab_code = 'DIC_LEVEL' and hf1.field_col_code = hra.apply_level_code and hf1.group_id = hra.group_id
			and hf1.hos_id = hra.hos_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND hra.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hra.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="year != null and year != ''">
				AND hra.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND hra.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND hra.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="degree_code != null and degree_code != ''">
				AND hra.degree_code = #{degree_code,jdbcType=VARCHAR}
			</if>
			<if test="graduation_date != null and graduation_date != ''">
				AND hra.graduation_date = #{graduation_date,jdbcType=DATE}
			</if>
			<if test="max_degree_code != null and max_degree_code != ''">
				AND hra.max_degree_code = #{max_degree_code,jdbcType=VARCHAR}
			</if>
			<if test="max_graduation_date != null and max_graduation_date != ''">
				AND hra.max_graduation_date = #{max_graduation_date,jdbcType=DATE}
			</if>
			<if test="birthday != null and birthday != ''">
				AND hra.birthday = #{birthday,jdbcType=VARCHAR}
			</if>
			<if test="cur_level_code != null and cur_level_code != ''">
				AND hra.cur_level_code = #{cur_level_code,jdbcType=VARCHAR}
			</if>
			<if test="cur_get_date != null and cur_get_date != ''">
				AND hra.cur_get_date = #{cur_get_date,jdbcType=DATE}
			</if>
			<if test="cur_title_code != null and cur_title_code != ''">
				AND hra.cur_title_code = #{cur_title_code,jdbcType=VARCHAR}
			</if>
			<if test="cur_title_date != null and cur_title_date != ''">
				AND hra.cur_title_date = #{cur_title_date,jdbcType=DATE}
			</if>
			<if test="apply_level_code != null and apply_level_code != ''">
				AND hra.apply_level_code = #{apply_level_code,jdbcType=VARCHAR}
			</if>
			<if test="worktime != null and worktime != ''">
				AND hra.worktime = #{worktime,jdbcType=VARCHAR}
			</if>
			<if test="apply_date != null and apply_date != ''">
				AND hra.apply_date = #{apply_date,jdbcType=DATE}
			</if>
			<if test="audit_date != null and audit_date != ''">
				AND hra.audit_date = #{audit_date,jdbcType=DATE}
			</if>
			<if test="state != null and state != ''">
				AND hra.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="note != null and note != ''">
				AND hra.note = #{note,jdbcType=VARCHAR}
			</if>
		</where>
		order by hra.emp_id asc
		
	</select>
</mapper>