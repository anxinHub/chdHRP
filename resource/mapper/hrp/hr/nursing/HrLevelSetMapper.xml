<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.nursing.HrLevelSetMapper">
	
	<resultMap id="hrLevelSet" type="com.chd.hrp.hr.entity.nursing.HrLevelSet">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="year" column="year"/>
	<result property="level_code" column="level_code"/>
	<result property="level_name" column="level_name"/>
	<result property="education" column="education"/>
	<result property="book_report" column="book_report"/>
	<result property="case_analy" column="case_analy"/>
	<result property="special_case_analy" column="special_case_analy"/>
	<result property="cpr_score" column="cpr_score"/>
	<result property="peer_score" column="peer_score"/>
	<result property="write_score" column="write_score"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hrLevelSetMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="year" column="year"/>
	<result property="level_code" column="level_code"/>
	<result property="level_name" column="level_name"/>
	<result property="education" column="education"/>
	<result property="book_report" column="book_report"/>
	<result property="case_analy" column="case_analy"/>
	<result property="special_case_analy" column="special_case_analy"/>
	<result property="cpr_score" column="cpr_score"/>
	<result property="peer_score" column="peer_score"/>
	<result property="write_score" column="write_score"/>
	<result property="note" column="note"/>
	</resultMap>
	
	
	
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_LEVEL_SET (
		group_id,
		hos_id,
		year,
		level_code,
		education,
		book_report,
		case_analy,
		special_case_analy,
		cpr_score,
		peer_score,
		write_score,
		note
		) (
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.year,jdbcType=VARCHAR},
			#{item.level_code,jdbcType=VARCHAR},
			#{item.education,jdbcType=INTEGER},
			#{item.book_report,jdbcType=INTEGER},
			#{item.case_analy,jdbcType=INTEGER},
			#{item.special_case_analy,jdbcType=INTEGER},
			#{item.cpr_score,jdbcType=INTEGER},
			#{item.peer_score,jdbcType=INTEGER},
			#{item.write_score,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)
	</insert>
	
	
	
	<delete id="deleteHLevelSet" parameterType="java.util.Map">
	
		DELETE FROM hr_level_set  where
	<if test="group_id != null and group_id != ''">
				group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="year != null and year != ''">
				AND year = #{year,jdbcType=VARCHAR}
				</if>
				<if test="level_code != null and level_code != ''">
				AND level_code = #{level_code,jdbcType=VARCHAR}
				</if>
	</delete>
	<delete id="deleteLevelSet" parameterType="java.util.List">
		DELETE FROM hr_level_set 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.level_code != null and item.level_code != ''">
				AND level_code = #{item.level_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hrLevelSet" >
	
		SELECT 
		hls.group_id,
		hls.hos_id,
		hls.year,
		hls.level_code,
		t.field_col_name level_name ,
		hls.education,
		hls.book_report,
		hls.case_analy,
		hls.special_case_analy,
		hls.cpr_score,
		hls.peer_score,
		hls.write_score,
		hls.note
		FROM HR_LEVEL_SET hls 
	    left join hr_fiied_data t on hls.level_code =t.field_col_code and
		t.field_tab_code = 'DIC_LEVEL' and t.group_id=hls.group_id and   t.hos_id=hls.hos_id
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND hls.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hls.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND hls.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="level_code != null and level_code != ''">
		AND hls.level_code = #{level_code,jdbcType=VARCHAR}
		</if>
		<if test="education != null and education != ''">
		AND hls.education = #{education,jdbcType=INTEGER}
		</if>
		<if test="book_report != null and book_report != ''">
		AND hls.book_report = #{book_report,jdbcType=INTEGER}
		</if>
		<if test="case_analy != null and case_analy != ''">
		AND hls.case_analy = #{case_analy,jdbcType=INTEGER}
		</if>
		<if test="special_case_analy != null and special_case_analy != ''">
		AND hls.special_case_analy = #{special_case_analy,jdbcType=INTEGER}
		</if>
		<if test="cpr_score != null and cpr_score != ''">
		AND hls.cpr_score = #{cpr_score,jdbcType=INTEGER}
		</if>
		<if test="peer_score != null and peer_score != ''">
		AND hls.peer_score = #{peer_score,jdbcType=INTEGER}
		</if>
		<if test="write_score != null and write_score != ''">
		AND hls.write_score = #{write_score,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND hls.note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by hls.year asc
	</select>
	
	<select id="queryByCodeLevelSet" parameterType="java.util.Map" resultMap="hrLevelSet" >
	SELECT 
		hls.group_id,
		hls.hos_id,
		hls.year,
		hls.level_code,
		t.field_col_name level_name ,
		hls.education,
		hls.book_report,
		hls.case_analy,
		hls.special_case_analy,
		hls.cpr_score,
		hls.peer_score,
		hls.write_score,
		hls.note
		FROM HR_LEVEL_SET hls 
	    left join hr_fiied_data t on hls.level_code =t.field_col_code and
		t.field_tab_code = 'DIC_LEVEL' and t.group_id=hls.group_id and   t.hos_id=hls.hos_id
		where                     
		 hls.group_id = #{group_id,jdbcType=INTEGER}
		AND hls.hos_id = #{hos_id,jdbcType=INTEGER}
		AND hls.year = (select extract(year from sysdate)-1 from dual)
		
		</select>
	<select id="queryByCode" parameterType="java.util.Map" resultMap="hrLevelSet" >
	SELECT 
		hls.group_id,
		hls.hos_id,
		hls.year,
		hls.level_code,
		t.field_col_name level_name ,
		hls.education,
		hls.book_report,
		hls.case_analy,
		hls.special_case_analy,
		hls.cpr_score,
		hls.peer_score,
		hls.write_score,
		hls.note
		FROM HR_LEVEL_SET hls 
	    left join hr_fiied_data t on hls.level_code =t.field_col_code and
		t.field_tab_code = 'DIC_LEVEL' and t.group_id=hls.group_id and   t.hos_id=hls.hos_id
		where                     
		 hls.group_id = #{group_id,jdbcType=INTEGER}
		AND hls.hos_id = #{hos_id,jdbcType=INTEGER}
		AND hls.year = (select extract(year from sysdate)-1 from dual)
		
		</select>
	<select id="generateLevelSet" parameterType="java.util.Map" resultMap="hrLevelSet">
	select t.field_col_code LEVEL_CODE, t.field_col_name level_name, 
	(select extract(year from sysdate) from dual) year  from hr_fiied_data t 
	where	t.field_tab_code = 'DIC_LEVEL' 
<if test="group_id != null and group_id != ''">
		AND t.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND t.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
	</select>
	<insert id="copyLevelSet" parameterType="java.util.List"  >
	insert into HR_LEVEL_SET( select hls.group_id, hls.hos_id
	, (
		select extract(year from sysdate)from dual
	) as year, hls.level_code,  hls.education, hls.book_report
	, hls.case_analy, hls.special_case_analy, hls.cpr_score, hls.peer_score, hls.write_score
  , hls.note
  from HR_LEVEL_SET hls
  left join hr_fiied_data t on hls.level_code = t.field_col_code
  and t.field_tab_code = 'DIC_LEVEL' and t.group_id=hls.group_id and   t.hos_id=hls.hos_id
  WHERE 
       hls.group_id = #{group_id,jdbcType=INTEGER}
        AND hls.hos_id = #{hos_id,jdbcType=INTEGER}
        
	    AND hls.year =(select extract(year from sysdate)-1 from dual)
)
	</insert>
</mapper>

