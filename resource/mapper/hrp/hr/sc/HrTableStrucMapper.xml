<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.sc.HrTableStrucMapper">
	
	<resultMap id="hrTableStruc" type="com.chd.hrp.hr.entity.sc.HrTableStruc">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
		<result property="type_tab_code" column="type_tab_code"/>
		<result property="tab_col" column="tab_col"/>
		<result property="tab_sql" column="tab_sql"/>
		<result property="tab_view_col" column="tab_view_col"/>
		<result property="tab_view_page" column="tab_view_page"/>
		<result property="tab_query_col" column="tab_query_col"/>
		<result property="tab_query_page" column="tab_query_page"/>
		<result property="is_innr" column="is_innr"/>
		<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hrTableStrucMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
		<result property="type_tab_code" column="type_tab_code"/>
		<result property="tab_col" column="tab_col"/>
		<result property="tab_sql" column="tab_sql"/>
		<result property="tab_view_col" column="tab_view_col"/>
		<result property="tab_view_page" column="tab_view_page"/>
		<result property="tab_query_col" column="tab_query_col"/>
		<result property="tab_query_page" column="tab_query_page"/>
		<result property="is_innr" column="is_innr"/>
		<result property="note" column="note"/>
	</resultMap>
	
	<select id="queryHrTabCodeSeq" resultType="java.lang.String" useCache="false" flushCache="true">
		select 'HR_'||HR_TAB_CODE_SEQ.nextval from dual
	</select>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO hr_table_struc (
			group_id,hos_id,tab_code,tab_name,type_tab_code,is_innr,note,sort
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			upper(#{tab_code,jdbcType=VARCHAR}),
			#{tab_name,jdbcType=VARCHAR},
			#{type_tab_code,jdbcType=VARCHAR},
			#{is_innr,jdbcType=INTEGER},
			#{note,jdbcType=VARCHAR},
			HR_TAB_CODE_SEQ.nextval
		)
	
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
		    MERGE INTO hr_table_struc t1 
			USING (select #{item.group_id} group_id, #{item.hos_id} hos_id, #{item.tab_code} tab_code, #{item.type_tab_code} type_tab_code from dual) t2
			ON (t1.group_id = t2.group_id and t1.hos_id = t2.hos_id and t1.tab_code = t2.tab_code and t1.type_tab_code = t2.type_tab_code)  
			WHEN NOT MATCHED THEN 
			INSERT (
				group_id,
				hos_id,
				tab_code,
				tab_name,
				type_tab_code
				<if test="item.tab_col != null ">,tab_col</if>
				<if test="item.tab_sql != null ">,tab_sql</if>
				<if test="item.tab_view_col != null ">,tab_view_col</if>
				<if test="item.tab_view_page != null ">,tab_view_page</if>
				<if test="item.tab_query_col != null ">,tab_query_col</if>
				<if test="item.tab_query_page != null ">,tab_query_page</if>
				<if test="item.is_innr != null ">,is_innr</if>
				<if test="item.sort != null ">,sort</if>
				<if test="item.note != null ">,note</if>
				<if test="item.is_stop != null ">,is_stop</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.tab_code,jdbcType=VARCHAR},
				#{item.tab_name,jdbcType=VARCHAR},
				#{item.type_tab_code,jdbcType=VARCHAR}
				<if test="item.tab_col != null ">,#{item.tab_col,jdbcType=CLOB}</if>
				<if test="item.tab_sql != null ">,#{item.tab_sql,jdbcType=CLOB}</if>
				<if test="item.tab_view_col != null ">,#{item.tab_view_col,jdbcType=VARCHAR}</if>
				<if test="item.tab_view_page != null ">,#{item.tab_view_page,jdbcType=VARCHAR}</if>
				<if test="item.tab_query_col != null ">,#{item.tab_query_col,jdbcType=VARCHAR}</if>
				<if test="item.tab_query_page != null ">,#{item.tab_query_page,jdbcType=VARCHAR}</if>
				<if test="item.is_innr != null ">,#{item.is_innr,jdbcType=INTEGER}</if>
				<if test="item.sort != null ">,#{item.sort,jdbcType=INTEGER}</if>
				<if test="item.note != null ">,#{item.note,jdbcType=INTEGER}</if>
				<if test="item.is_stop != null ">,#{item.is_stop,jdbcType=INTEGER}</if>
			)
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE hr_table_struc SET
			tab_name = #{tab_name,jdbcType=VARCHAR},
			type_tab_code = #{type_tab_code,jdbcType=VARCHAR},
			is_innr = #{is_innr,jdbcType=INTEGER},
			note = #{note,jdbcType=VARCHAR}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND tab_code = #{tab_code,jdbcType=VARCHAR}
		
	</update>
	
	<update id="updateHrTableStrucIsStop" parameterType="java.util.Map">
	
		UPDATE hr_table_struc SET
			is_stop = #{is_stop,jdbcType=INTEGER}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND tab_code = #{tab_code,jdbcType=VARCHAR}
		
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM hr_table_struc 
		 where group_id = #{group_id,jdbcType=INTEGER}
		   AND hos_id = #{hos_id,jdbcType=INTEGER}
		   <choose>
		      <when test="type_tab_code != null and type_tab_code != ''">
		          AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
		      </when>
		      <otherwise>
		          AND tab_code = #{tab_code,jdbcType=VARCHAR}
		      </otherwise>
		   </choose>
		   
	</delete>
	
<!-- 	<insert id="addSysPermData">
		INSERT INTO SYS_PERM_DATA (
			MOD_CODE,TABLE_CODE,TABLE_NAME,COLUMN_ID,COLUMN_CODE,COLUMN_NAME,IS_GROUP,IS_HOS,IS_COPY,IS_ACC_YEAR,IS_EXTENDS
		) VALUES (
			'06',
			upper(#{tab_code,jdbcType=VARCHAR}),
			#{tab_name,jdbcType=VARCHAR},
			'null',
			'null',
			'null',
			1,
			1,
			1,
			0,
			0
		)
	</insert> -->
	
<!-- 	<delete id="deleteSysPermData" parameterType="java.util.Map">
		DELETE FROM SYS_PERM_DATA 
		 where MOD_CODE = '06'
		   and TABLE_CODE = #{tab_code,jdbcType=VARCHAR}
	</delete> -->
	
	<select id="queryTabColsByCode" parameterType="java.util.Map" resultMap="hrTableStruc" useCache="false" flushCache="true">
		SELECT t.group_id,
		       t.hos_id,
		       t.tab_code,
		       t.tab_name,
		       t.type_tab_code,
		       t.is_innr,
		       t.tab_col
		  FROM hr_table_struc t
		 WHERE t.group_id = #{group_id,jdbcType=INTEGER} 
		   and t.hos_id = #{hos_id,jdbcType=INTEGER} 
		   and t.tab_code = #{tab_code,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryTabStrucByCodes" parameterType="java.util.Map" resultMap="hrTableStruc" useCache="false" flushCache="true">
		SELECT t.tab_code,
		       t.tab_name,
		       t.tab_col
		  FROM hr_table_struc t
		 WHERE t.group_id = #{group_id,jdbcType=INTEGER} 
		   and t.hos_id = #{hos_id,jdbcType=INTEGER} 
		   and t.tab_code in (
		   	<foreach collection="tab_codes.split(',')" item="item" separator=",">
		   		#{item, jdbcType=VARCHAR}
		   	</foreach>
		   ) 
	</select>
	
	<select id="queryTabSqlsByCode" parameterType="java.util.Map" resultMap="hrTableStruc" useCache="false" flushCache="true">
		SELECT t.group_id,
		       t.hos_id,
		       t.tab_code,
		       t.tab_name,
		       t.type_tab_code,
		       t.is_innr,
		       t.tab_sql
		  FROM hr_table_struc t
		 WHERE t.group_id = #{group_id,jdbcType=INTEGER} 
		   and t.hos_id = #{hos_id,jdbcType=INTEGER} 
		   and t.tab_code = #{tab_code,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryColSetByCode" parameterType="java.util.Map" resultMap="hrTableStruc" useCache="false" flushCache="true">
		SELECT t.group_id,
		       t.hos_id,
		       t.tab_code,
		       t.tab_name,
		       t.type_tab_code,
		       t.is_innr,
		       t.tab_col,
		       t.tab_view_col
		  FROM hr_table_struc t
		 WHERE t.group_id = #{group_id,jdbcType=INTEGER} 
		   and t.hos_id = #{hos_id,jdbcType=INTEGER} 
		   and t.tab_code = #{tab_code,jdbcType=VARCHAR} 
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="hrTableStruc"  useCache="false" flushCache="true">
	
		SELECT 
		group_id,
		hos_id,
		tab_code,
		tab_name,
		type_tab_code,
		tab_col,
		is_innr,
		note,
		tab_col,
        tab_sql,
        tab_view_col
		FROM hr_table_struc 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="tab_code != null and tab_code != ''">
		AND tab_code = #{tab_code,jdbcType=VARCHAR}
		</if>
		<if test="tab_name != null and tab_name != ''">
		AND tab_name LIKE '%' || #{tab_name,jdbcType=VARCHAR} || '%'
		</if>
		<if test="type_tab_code != null and type_tab_code != ''">
		AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
		</if>
		<if test="is_innr != null and is_innr != ''">
		AND is_innr = #{is_innr,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="queryByCode" resultMap="hrTableStruc"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
		group_id,
		hos_id,
		tab_code,
		tab_name,
		type_tab_code,
		is_innr,
		note,
		tab_col,
		tab_sql,
        tab_view_col
		FROM hr_table_struc 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		tab_code = #{tab_code,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryByName" resultMap="hrTableStruc"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
		group_id,
		hos_id,
		tab_code,
		tab_name,
		type_tab_code,
		is_innr,
		note
		FROM hr_table_struc 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		tab_name = #{tab_name,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryByCodeOrName" resultType="int"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT count(0)
		FROM hr_table_struc 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER} 
		and hos_id = #{hos_id,jdbcType=INTEGER} 
		and (tab_code = #{tab_code,jdbcType=VARCHAR} or tab_name = #{tab_name,jdbcType=VARCHAR} )
	
	</select>
	
	<select id="queryByUniqueness" resultMap="hrTableStruc"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
		group_id,
		hos_id,
		tab_code,
		tab_name,
		type_tab_code,
		is_innr,
		note
		FROM hr_table_struc 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="tab_code != null and tab_code != ''">
		AND tab_code = #{tab_code,jdbcType=VARCHAR}
		</if>
		<if test="tab_name != null and tab_name != ''">
		AND tab_name = #{tab_name,jdbcType=VARCHAR}
		</if>
		<if test="type_tab_code != null and type_tab_code != ''">
		AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
		</if>
		<if test="is_innr != null and is_innr != ''">
		AND is_innr = #{is_innr,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrTableStruc"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
		group_id,
		hos_id,
		tab_code,
		tab_name,
		type_tab_code,
		is_innr,
		note
		FROM hr_table_struc 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="tab_code != null and tab_code != ''">
		AND tab_code = #{tab_code,jdbcType=VARCHAR}
		</if>
		<if test="tab_name != null and tab_name != ''">
		AND tab_name = #{tab_name,jdbcType=VARCHAR}
		</if>
		<if test="type_tab_code != null and type_tab_code != ''">
		AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
		</if>
		<if test="is_innr != null and is_innr != ''">
		AND is_innr = #{is_innr,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<resultMap type="java.util.Map" id="treeMap">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="pId" column="pId"/>
		<result property="is_innr" column="is_innr"/>
		<result property="is_stop" column="is_stop"/>
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
		<result property="tab_col" column="tab_col"/>
	</resultMap>
	<select id="queryHrTableStrucTree" parameterType="java.util.Map" resultMap="treeMap"  useCache="false" flushCache="true">
	    select * from (
			select ty.type_tab_code as id, ty.type_tab_name as name, null as pId, null as is_innr, 
				table_sort as sort, null as is_stop, null as tab_code, type_tab_name as tab_name
			  from hr_table_type ty
			  where exists (
                select 1 from hr_table_struc ts where ts.type_tab_code = ty.type_tab_code
              )
			union all
			select ts.tab_code as id, 
			       case when is_innr = 1 then 
			       ts.tab_name||'【'||ts.tab_code||'】(内置)'
			       else
				   ts.tab_name||'【'||ts.tab_code||'】' end as name, 
				   ts.type_tab_code as pId,
			       ts.is_innr, ts.sort, ts.is_stop,
			       ts.tab_code, ts.tab_name
			  from hr_table_struc ts
			 where ts.group_id = #{group_id}
			   and ts.hos_id = #{hos_id}
			   <if test="is_stop == null or is_stop == 'false'">
	     		and ts.is_stop = 0 
	     	   </if>
	     ) t
	     <where>
	     	<if test="key != null and key != ''">
	     		t.name like '%'||#{key}||'%' 
	     		or t.id like '%'||#{key}||'%' 
	     	</if>
	     </where>
		 order by t.sort asc nulls last
	</select>
	
	<update id="updateTabColByTabCode" parameterType="java.util.Map">
	
		UPDATE hr_table_struc SET
			tab_col = #{tab_col,jdbcType=VARCHAR}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND tab_code = #{tab_code,jdbcType=VARCHAR}
		
	</update>
	
	<update id="updateTabSqlByTabCode" parameterType="java.util.Map">
	
		UPDATE hr_table_struc SET
			tab_sql = #{tab_sql,jdbcType=VARCHAR}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND tab_code = #{tab_code,jdbcType=VARCHAR}
		
	</update>
	
	<update id="updateColSetByTabCode" parameterType="java.util.Map">
	
		UPDATE hr_table_struc SET
			tab_view_col = #{tab_view_col,jdbcType=VARCHAR}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND tab_code = #{tab_code,jdbcType=VARCHAR}
		
	</update>
	
	<select id="queryHrTableStrucExport" parameterType="java.util.Map" resultMap="hrTableStruc"  useCache="false" flushCache="true">
	
		SELECT 
		group_id,
		hos_id,
		tab_code,
		tab_name,
		type_tab_code,
		tab_col,
		tab_sql,
		tab_view_col,
		tab_view_page,
		tab_query_col,
		tab_query_page,
		is_innr,
		sort,
		note,
		is_stop
		FROM hr_table_struc 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="tab_code != null and tab_code != ''">
		AND tab_code = #{tab_code,jdbcType=VARCHAR}
		</if>
		<if test="type_tab_code != null and type_tab_code != ''">
		AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
		</if>
	</select>
	
	<insert id="copyTableTypeByOld" parameterType="map">
		insert into hr_table_type t
		  select *
		    from hr_table_type t2
		   where not exists (select 1
		            from hr_table_type t3
		           where t2.type_tab_code = t3.type_tab_code) 
	</insert>
	
	<select id="queryOldTableStruc" parameterType="map" resultType="map">
		select 
		 	t.group_id as "group_id",
		    t.hos_id as "hos_id",
		    t.tab_code as "tab_code",
		    t.tab_name as "tab_name",
		    'pf' as "type_tab_code",
		    t.is_innr as "is_innr",
		    t.sort as "sort",
		    t.note as "note"
		  from hr_tab_struc t
		 where group_id = #{group_id,jdbcType=INTEGER}
		   and hos_id = #{hos_id,jdbcType=INTEGER} 
		   and not exists (select 1
		            from hr_table_struc t2
		           where t.group_id = t2.group_id
		             and t.hos_id = t2.hos_id
		             and t.tab_code = t2.tab_code) 
	</select>
	
	<select id="queryOldColumnByTabCode" parameterType="map" resultType="map">
		select 
			t.tab_code as "tab_code",
			t.col_code as "col_code",
			t.col_name as "col_name",
			t.data_type as "data_type_code",
			case when t.prec is null or t.prec = 0 then to_char(t.length) else to_char(t.length) || ',' || to_char(t.prec) end as "filed_length",
			t.is_pk as "is_pk",
			case when t.is_pk = 1 then '是' else '否' end as "is_pk_text",
			t.is_innr as "is_innr",
			case when t.is_innr = 1 then '是' else '否' end as "is_innr_text",
			t.is_unique as "is_unique",
			case when t.is_unique = 1 then '是' else '否' end as "is_unique_text",
			t.field_tab_code as "field_tab_code",
			t.sort as "sort",
			t.note as "note",
			c.data_type_name as "data_type_name",
			f.field_tab_name as "field_tab_name"
		  from hr_col_struc t
		  left join hr_col_data_type c
		    on t.data_type = c.data_type_code
		  left join hr_fiied_tab_struc f
		    on t.group_id = f.group_id
		   and t.hos_id = f.hos_id
		   and t.field_tab_code = f.field_tab_code
		 where t.group_id = #{group_id,jdbcType=INTEGER}
		   and t.hos_id = #{hos_id,jdbcType=INTEGER}
		   and t.tab_code = #{tab_code}
	</select>
	
	<resultMap type="java.util.Map" id="filedTableStrucMap">
		<result property="field_tab_code" column="field_tab_code" />
		<result property="field_tab_name" column="field_tab_name" />
		<result property="type_filed_name" column="type_filed_name" />
	</resultMap>
	<select id="queryHrFiledTableStruc" parameterType="java.util.Map"
		resultMap="filedTableStrucMap">
		select t.field_tab_code, t.field_tab_name, ftt.TYPE_TAB_NAME
        from HR_FILED_TABLE_STRUC t
        left join hr_tab_type ftt
        on t.group_id = ftt.group_id
        and t.hos_id = ftt.hos_id
        and t.type_tab_code = ftt.type_tab_code
		<where>
			t.group_id = #{group_id}
			and t.hos_id = #{hos_id}
			<if test="field_tab_code != null and field_tab_code != ''">
				t.field_tab_code = '${field_tab_code}'
			</if>
			<if test=" key != null and key != ''">
				and ( t.field_tab_code like '%'||UPPER('${key}')||'%' or
				t.field_tab_name like '%${key}%' )
			</if>
		</where>
	</select>
	
	<resultMap type="com.chd.hrp.hr.entity.sc.HrTableColumn" id="hrTableColumnMap">
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
		<result property="col_code" column="col_code"/>
		<result property="col_name" column="col_name"/>
	</resultMap>
	<select id="queryDBTableColByCodes" parameterType="java.util.Map" resultMap="hrTableColumnMap">
		select t.TABLE_NAME as tab_code,
		       case when tcom.comments is null then t.TABLE_NAME else tcom.comments end as tab_name,
		       c.COLUMN_NAME as col_code,
		       case when ccom.comments is null then c.COLUMN_NAME else ccom.comments end as col_name
		  from user_tables t
		  left join user_tab_comments tcom
		    on t.TABLE_NAME = tcom.table_name
		  left join user_tab_columns c
		    on t.TABLE_NAME = c.TABLE_NAME
		  left join user_col_comments ccom
		    on t.TABLE_NAME = ccom.table_name
		   and c.COLUMN_NAME = ccom.column_name
		 where t.TABLE_NAME in (
		   	<foreach collection="tab_codes.split(',')" item="item" separator=",">
		   		#{item, jdbcType=VARCHAR}
		   	</foreach>
		   ) 
		  and not exists (select 1 from hr_table_struc ts where ts.tab_code = t.TABLE_NAME)
	</select>
</mapper>

