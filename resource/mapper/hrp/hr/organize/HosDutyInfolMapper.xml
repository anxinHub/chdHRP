<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.organize.HosDutyInfoMapper">
	
	<resultMap id="hrDuty" type="com.chd.hrp.hr.entity.orangnize.HosDuty">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="duty_code" column="duty_code"/>
		<result property="duty_name" column="duty_name"/>
		<result property="kind_code" column="kind_code"/>
		<result property="kind_name" column="kind_name"/>
		<result property="duty_level_code" column="duty_level_code"/>
		<result property="duty_level_code_name" column="duty_level_code_name"/>
		<result property="is_stop" column="is_stop"/>
		<result property="is_stop_name" column="is_stop_name" />
		<result property="spell_code" column="spell_code"/>
		<result property="wbx_code" column="wbx_code" />
		<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
		INSERT INTO hos_duty (
			group_id		,
			hos_id		,
			duty_code		,
			duty_name		
			<if test="kind_code !=null and kind_code !=''">
				,kind_code
			</if>
			<if test="duty_level_code !=null and duty_level_code !=''">
				,duty_level_code	
			</if>
			<if test="is_stop!=null and is_stop!=''">
				,is_stop		
			</if>
			<if test="spell_code!=null and spell_code!=''">
				,spell_code		
			</if>
			<if test="wbx_code!=null and wbx_code!=''">
				,wbx_code		
			</if>
			<if test="note !=null ">
				,note
			</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER}		,
			#{hos_id,jdbcType=INTEGER}		,
			#{duty_code,jdbcType=VARCHAR}		,
			#{duty_name,jdbcType=VARCHAR}		
			<if test="kind_code !=null and kind_code !=''">
				,#{kind_code,jdbcType=VARCHAR}		
			</if>
			<if test="duty_level_code !=null and duty_level_code !=''">
				,#{duty_level_code,jdbcType=VARCHAR}		
			</if>
			<if test="is_stop != null and is_stop != ''">
				,#{is_stop,jdbcType=INTEGER}		
			</if>
			<if test="spell_code != null and spell_code != ''">
				,#{spell_code,jdbcType=VARCHAR}		
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				,#{wbx_code,jdbcType=VARCHAR}		
			</if>
			<if test="note != null ">
				,#{note,jdbcType=VARCHAR}	
			</if>	
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO hos_duty (
				group_id		,
				hos_id		,
				duty_code,
				duty_name
				<if test="item.kind_code !=null and item.kind_code !=''">
					,kind_code
				</if>
				<if test="item.duty_level_code !=null and item.duty_level_code !=''">
					,duty_level_code
				</if>
				<if test="item.is_stop!=null and item.is_stop!=''">
					,is_stop
				</if>
				<if test="item.spell_code!=null and item.spell_code!=''">
					,spell_code		
				</if>
				<if test="item.wbx_code!=null and item.wbx_code!=''">
					,wbx_code		
				</if>
				<if test="item.note !=null ">
					,note
				</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER}		,
				#{item.hos_id,jdbcType=INTEGER}		,
				#{item.duty_code,jdbcType=VARCHAR}		,
				#{item.duty_name,jdbcType=VARCHAR}	
				<if test="item.kind_code !=null and item.kind_code !=''">
					,#{item.kind_code,jdbcType=VARCHAR}		
				</if>
				<if test="item.duty_level_code !=null and item.duty_level_code !=''">
					,#{item.duty_level_code,jdbcType=VARCHAR}		
				</if>	
				<if test="item.is_stop!=null and item.is_stop!=''">
					,#{item.is_stop,jdbcType=INTEGER}		
				</if>
				<if test="item.spell_code != null and item.spell_code != ''">
					,#{item.spell_code,jdbcType=VARCHAR}		
				</if>
				<if test="item.wbx_code != null and item.wbx_code != ''">
					,#{item.wbx_code,jdbcType=VARCHAR}		
				</if>
				<if test="item.note !=null ">
					,#{item.note,jdbcType=VARCHAR}	
				</if>	
			)
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE hos_duty set
			duty_name = #{duty_name,jdbcType=VARCHAR}		,
			kind_code = #{kind_code,jdbcType=VARCHAR}		,
			duty_level_code = #{duty_level_code,jdbcType=VARCHAR}		,
			is_stop = #{is_stop,jdbcType=INTEGER}
			<if test="spell_code!=null">
				,spell_code = #{spell_code,jdbcType=VARCHAR}
			</if>
			<if test="wbx_code!=null">
				,wbx_code = #{wbx_code,jdbcType=VARCHAR}
			</if>		
			<if test="note!=null">
				,note = #{note,jdbcType=VARCHAR}
			</if>	
		<where>                     
			 	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND duty_code = #{duty_code,jdbcType=VARCHAR}
		</where>  
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE hos_duty set
				duty_name = #{item.duty_name,jdbcType=VARCHAR}		,
				kind_code = #{item.kind_code,jdbcType=VARCHAR}		,
				duty_level_code = #{item.duty_level_code,jdbcType=VARCHAR}		,
				is_stop = #{item.is_stop,jdbcType=INTEGER}
				<if test="item.spell_code!=null">
					,spell_code = #{item.spell_code,jdbcType=VARCHAR}
				</if>
				<if test="item.wbx_code!=null">
					,wbx_code = #{item.wbx_code,jdbcType=VARCHAR}
				</if>	
				<if test="item.note!=null">
					,note = #{item.note,jdbcType=VARCHAR}
				</if>	
			<where>                     
				 	group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND duty_code = #{item.duty_code,jdbcType=VARCHAR}
			</where>  
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM hos_duty 
		<where>                     
			 	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND duty_code = #{duty_code,jdbcType=VARCHAR}
		</where>  
	</delete>
	
	<delete id="deleteBatchHrDuty" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			DELETE FROM hos_duty 
			<where>                     
				 	group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND duty_code = #{item.duty_code,jdbcType=VARCHAR}
			</where>  
		</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="hrDuty" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.duty_code,
			a.duty_name,
			b.kind_code,
			b.kind_name,
			a.spell_code,
			a.wbx_code,
			c.duty_level_code duty_level_code,
			c.duty_level_name duty_level_name,
			case when a.is_stop = 0 then '否' when a.is_stop = 1 then '是'  else '' end is_stop_name ,
			a.note
		FROM hos_duty a
		left join hos_duty_kind b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.kind_code=b.kind_code
			and b.is_stop = 0
		left join hos_duty_level c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.duty_level_code=c.duty_level_code
			<!-- and c.is_stop = 0 -->
		<where>                     
			 	a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="duty_code != null and duty_code != ''">
				AND a.duty_code like '%${duty_code}%'
			</if>
			<if test="duty_name != null and duty_name != ''">
				AND a.duty_name like '%${duty_name}%'
			</if>
			<if test="key != null and key !='' ">
				AND (
					   a.duty_code like '%${key}%'
					or a.duty_name like '%${key}%'
					<!-- or a.duty_level_code like '%${key}%'
					or a.kind_code like '%${key}%' -->
				)
			</if>
		</where>   
		order by a.duty_code asc
	</select>
	
	<select id="queryByCode" resultMap="hrDuty"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			duty_code,
			duty_name,
			kind_code,
			duty_level_code,
			is_stop,
			spell_code,
			wbx_code,
			note
		FROM hos_duty a
		where
				group_id = #{group_id}
			and hos_id = #{hos_id}
			and duty_code = #{duty_code}	
	</select>
	
	
	<select id="queryDutyByCode" resultMap="hrDuty"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			duty_code,
			duty_name,
			kind_code,
			duty_level_code,
			spell_code,
			wbx_code,
			is_stop,
			note
		FROM hos_duty a
		where
				group_id = #{group_id}
			and hos_id = #{hos_id}
			and ( duty_code = #{duty_code} or duty_name=#{duty_name} )
	</select>
	
	<select id="queryDutyByName" resultMap="hrDuty"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			duty_code,
			duty_name,
			kind_code,
			duty_level_code,
			spell_code,wbx_code,
			is_stop,
			note
		FROM hos_duty a
		where
				group_id = #{group_id}
			and hos_id = #{hos_id}
			and duty_name = #{duty_name}
	</select>
	
	<select id="queryByUniqueness" resultMap="hrDuty"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			duty_code,
			duty_name,
			is_stop,
			spell_code,wbx_code,
			note
		FROM hos_duty 
		<where>                     
				group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND duty_code = #{duty_code,jdbcType=VARCHAR}
		</where>   
		order by duty_code asc
	</select>
	
	<select id="queryExists" resultMap="hrDuty"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			duty_code,
			duty_name,
			kind_code,
			duty_level_code,
			spell_code,
			wbx_code,
			is_stop,
			note
		FROM hos_duty 
		<where>                     
				group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="duty_code != null and duty_code != ''">
			AND duty_code = #{duty_code,jdbcType=VARCHAR}
			</if>
			<if test="duty_name != null and duty_name != ''">
			AND duty_name = #{duty_name,jdbcType=VARCHAR}
			</if>
		</where>   
		order by duty_code asc
	</select>
	
	<select id="queryHrDutyPrint" resultType="java.util.Map"  parameterType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.duty_code,
			a.duty_name,
			b.kind_code,
			b.kind_name,
			a.spell_code,
			a.wbx_code,
			c.duty_level_code duty_level_code,
			c.duty_level_name duty_level_name,
			case when a.is_stop = 0 then '否' when a.is_stop = 1 then '是'  else '' end is_stop_name ,
			a.note
		FROM hos_duty a
		left join hos_duty_kind b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.kind_code=b.kind_code
			and b.is_stop = 0
		left join hos_duty_level c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.duty_level_code=c.duty_level_code
			and c.is_stop = 0
		<where>                     
			 	a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="duty_code != null and duty_code != ''">
				AND a.duty_code like '%${duty_code}%'
			</if>
			<if test="duty_name != null and duty_name != ''">
				AND a.duty_name like '%${duty_name}%'
			</if>
			<if test="key != null and key !='' ">
				AND (
					   a.duty_code like '%${key}%'
					or a.duty_name like '%${key}%'
					<!-- or a.duty_level_code like '%${key}%'
					or a.kind_code like '%${key}%' -->
				)
			</if>
		</where>   
		order by a.duty_code asc
	</select>
	
		
		<resultMap type="java.util.Map" id="hrSelectMap">
		<result property="id" column="id" />
		<result property="text" column="text" />
		<result property="name" column="name" />
		<result property="label" column="label" />
		<result property="type" column="type" />
		<result property="is_write" column="is_write" />
	</resultMap>
<select id="queryDutyCode" resultMap="hrSelectMap" parameterType="java.util.Map">
			select duty_code as id, duty_name as text
			from hos_duty
			where group_id = #{group_id}
				and hos_id = #{hos_id}
			order by duty_code
		</select>
</mapper>

