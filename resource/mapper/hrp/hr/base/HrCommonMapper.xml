<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.base.HrCommonMapper">

	<resultMap id="hrTableInfoMap" type="com.chd.hrp.hr.entity.sysstruc.HrTabStruc">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
		<result property="type_tab_code" column="type_tab_code"/>
		<result property="is_innr" column="is_innr"/>
		<result property="note" column="note"/>
		<collection property="hrColStrucList" ofType="com.chd.hrp.hr.entity.sysstruc.HrColStruc">
			<result property="group_id" column="group_id"/>
			<result property="hos_id" column="hos_id"/>
			<result property="tab_code" column="tab_code"/>
			<result property="col_code" column="col_code"/>
			<result property="col_name" column="col_name"/>
			<result property="data_type" column="data_type"/>
			<result property="data_type_name" column="data_type_name"/>
			<result property="filed_length" column="length"/>
			<result property="prec" column="prec"/>
			<result property="is_pk" column="is_pk"/>
			<result property="is_pk_text" column="is_pk_text"/>
			<result property="is_m" column="is_m"/>
			<result property="is_m_text" column="is_m_text"/>
			<result property="is_innr" column="is_innr"/>
			<result property="is_innr_text" column="is_innr_text"/>
			<result property="is_unique" column="is_unique"/>
			<result property="is_unique_text" column="is_unique_text"/>
			<result property="field_tab_code" column="field_tab_code"/>
			<result property="field_tab_name" column="field_tab_name"/>
			<result property="note" column="note"/>
			<result property="sort" column="sort"/>
			<association property="hrStoreColSet" javaType="com.chd.hrp.hr.entity.sysstruc.HrStoreColSet">
				<result property="group_id" column="group_id"/>
				<result property="hos_id" column="hos_id"/>
				<result property="store_type_code" column="store_type_code"/>
				<result property="tab_code" column="tab_code"/>
				<result property="col_name" column="col_name"/>
				<result property="col_code" column="col_code"/>
				<result property="col_name_show" column="col_name_show"/>
				<result property="com_type_code" column="com_type_code"/>
				<result property="com_type_name" column="com_type_name"/>
				<result property="seq_no" column="seq_no"/>
				<result property="col_width" column="col_width"/>
				<result property="is_view" column="is_view"/>
				<result property="is_view_tab" column="is_view_tab"/>
				<result property="text_align" column="text_align"/>
				<result property="field_width" column="field_width"/>
				<result property="is_verify" column="is_verify"/>
				<result property="is_pk" column="s_is_pk"/>
				<result property="is_auto" column="is_auto"/>
				<result property="is_read" column="is_read"/>
				<result property="is_default" column="is_default"/>
				<result property="default_value" column="default_value"/>
				<result property="default_text" column="default_text"/>
				<result property="is_change" column="is_change"/>
				<result property="change_col_code" column="change_col_code"/>
			</association>
			<association property="hrStoreQueSet" javaType="com.chd.hrp.hr.entity.sysstruc.HrStoreQueSet">
				<result property="group_id" column="group_id"/>
				<result property="hos_id" column="hos_id"/>
				<result property="store_type_code" column="store_type_code"/>
				<result property="tab_code" column="tab_code"/>
				<result property="col_code" column="col_code"/>
				<result property="col_name" column="col_name"/>
				<result property="col_name_show" column="q_col_name_show"/>
				<result property="com_type_code" column="q_com_type_code"/>
				<result property="com_type_name" column="q_com_type_name"/>
				<result property="seq_no" column="q_seq_no"/>
				<result property="is_view" column="q_is_view"/>
				<result property="text_align" column="q_text_align"/>
				<result property="field_width" column="q_field_width"/>
				<result property="con_sign_code" column="q_con_sign_code"/>
				<result property="con_sign_name" column="q_con_sign_name"/>
				<result property="is_section" column="q_is_section"/>
				<result property="is_change" column="q_is_change"/>
				<result property="change_col_code" column="q_change_col_code"/>
				<result property="is_default" column="q_is_default"/>
				<result property="default_value" column="q_default_value"/>
				<result property="default_text" column="q_default_text"/>
			</association>
		</collection>
	</resultMap>
	
	<resultMap id="columnsMap" type="com.chd.hrp.hr.entity.base.HrColumn">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="tab_code" column="tab_code"/>
		<result property="col_code" column="col_code"/>
		<result property="col_name" column="col_name"/>
		<result property="data_type" column="data_type"/>
		<result property="data_type_name" column="data_type_name"/>
		<result property="filed_length" column="length"/>
		<result property="prec" column="prec"/>
		<result property="is_pk" column="is_pk"/>
		<result property="is_pk_text" column="is_pk_text"/>
		<result property="is_m" column="is_m"/>
		<result property="is_m_text" column="is_m_text"/>
		<result property="is_innr" column="is_innr"/>
		<result property="is_innr_text" column="is_innr_text"/>
		<result property="field_tab_code" column="field_tab_code"/>
		<result property="field_tab_name" column="field_tab_name"/>
		<result property="note" column="note"/>
		<result property="sort" column="sort"/>
		<result property="store_type_code" column="store_type_code"/>
		<result property="col_name_show" column="col_name_show"/>
		<result property="com_type_code" column="com_type_code"/>
		<result property="seq_no" column="seq_no"/>
		<result property="col_width" column="col_width"/>
		<result property="is_view" column="is_view"/>
		<result property="is_view_tab" column="is_view_tab"/>
		<result property="text_align" column="text_align"/>
		<result property="field_width" column="field_width"/>
		<result property="is_verify" column="is_verify"/>
		<result property="is_pk" column="s_is_pk"/>
		<result property="is_auto" column="is_auto"/>
		<result property="is_read" column="is_read"/>
		<result property="is_default" column="is_default"/>
		<result property="default_value" column="default_value"/>
		<result property="default_text" column="default_text"/>
		<result property="is_change" column="is_change"/>
		<result property="change_col_code" column="change_col_code"/>
		<result property="con_sign_code" column="con_sign_code"/>
		<result property="is_section" column="is_section"/>
		
	</resultMap>
	<resultMap id="hrFiiedView" type="com.chd.hrp.hr.entity.sysstruc.HrFiiedView">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="col_code" column="col_code"/>
	<result property="field_tab_code" column="field_tab_code"/>
	<result property="cite_sql" column="cite_sql" jdbcType="CLOB" typeHandler="com.chd.hrp.hr.util.ClobTypeHandler"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<select id="queryTableInfoByCode" parameterType="java.util.Map" resultMap="hrTableInfoMap" useCache="false" flushCache="true">
		SELECT m.group_id,
		       m.hos_id,
		       m.tab_code,
		       m.tab_name,
		       m.type_tab_code,
		       m.is_innr,
		       t.col_code,
		       t.col_name,
		       t.data_type,
		       t.length,
		       t.prec,
		       t.is_pk,
		       t.is_m,
		       t.is_innr,
		       t.field_tab_code,
		       t.note,
		       t.sort,
		       t.is_unique,
		       se.store_type_code,
		       case
		         when se.col_name_show is null then
		          t.col_name
		         else
		          se.col_name_show
		       end col_name_show,
		       se.com_type_code,
		       ct.com_type_name,
		       se.seq_no,
		       se.col_width,
		       se.is_view,
		       se.is_view_tab,
		       se.text_align,
		       se.field_width,
		       se.is_verify,
		       se.is_pk s_is_pk,
		       se.is_auto,
		       se.is_read,
		       se.is_default,
		       se.default_value,
		       se.default_text,
		       se.is_change,
		       se.change_col_code,
		       
		       case
		         when qs.col_name_show is null then
		          t.col_name
		         else
		          qs.col_name_show
		       end q_col_name_show,
		       qs.com_type_code   q_com_type_code,
		       qct.com_type_name  q_com_type_name,
		       qs.seq_no          q_seq_no,
		       qs.is_view         q_is_view,
		       qs.text_align      q_text_align,
		       qs.field_width     q_field_width,
		       qs.con_sign_code   q_con_sign_code,
		       cs.con_sign_name   q_con_sign_name,
		       qs.is_section      q_is_section,
		       qs.is_change       q_is_change,
		       qs.change_col_code q_change_col_code,
		       qs.is_default      q_is_default,
		       qs.default_value   q_default_value,
		       qs.default_text    q_default_value
		  FROM hr_tab_struc m
		  left join hr_col_struc t
		    on m.group_id = t.group_id
		   and m.hos_id = t.hos_id
		   and m.tab_code = t.tab_code
		  left join HR_STORE_COL_SET se
		    on t.group_id = se.group_id
		   and t.hos_id = se.hos_id
		   and t.tab_code = se.tab_code
		   and t.col_code = se.col_code
		   and se.store_type_code = #{store_type_code}
		
		  left join HR_STORE_QUE_SET qs
		    on t.group_id = qs.group_id
		   and t.hos_id = qs.hos_id
		   and t.tab_code = qs.tab_code
		   and t.col_code = qs.col_code
		   and qs.store_type_code = #{store_type_code}
		
		  left join HR_COL_DATA_TYPE dt
		    on t.data_type = dt.data_type_code
		
		  left join HR_COM_TYPE ct
		    on se.com_type_code = ct.com_type_code
		
		  left join HR_COM_TYPE qct
		    on qs.com_type_code = qct.com_type_code
		
		  left join HR_CON_SIGN cs
		    on qs.con_sign_code = cs.con_sign_code
		
		 WHERE m.group_id = #{group_id,jdbcType=INTEGER} 
		   and m.hos_id = #{hos_id,jdbcType=INTEGER} 
		   and m.tab_code = #{tab_code,jdbcType=VARCHAR} 
		   
		 order by se.seq_no ,qs.seq_no ,t.sort
	</select>
	
	<select id="queryColJoinSetList" parameterType="java.util.Map" resultMap="columnsMap" useCache="false" flushCache="true">
		select t.group_id,
		       t.hos_id,
		       t.tab_code,
		       t.col_code,
		       t.col_name,
		       t.field_tab_code,
		       se.store_type_code,
		       case when se.col_name_show is null then t.col_name else se.col_name_show end col_name_show,
		       se.com_type_code,
		       ct.com_type_name,
		       se.seq_no,
		       se.col_width,
		       se.is_view,
		       se.is_view_tab,
		       se.text_align,
		       se.field_width,
		       se.is_verify,
		       se.is_pk,
		       se.is_auto,
		       se.is_read,
		       se.is_default,
		       se.default_value,
		       se.default_text,
		       se.is_change,
		       se.change_col_code
		  from hr_col_struc t
		
		  left join HR_STORE_COL_SET se
		    on t.group_id = se.group_id
		   and t.hos_id = se.hos_id
		   and t.tab_code = se.tab_code
		   and t.col_code = se.col_code
		   and se.store_type_code = #{store_type_code}
		   
		  left join HR_COM_TYPE ct
   			on se.com_type_code = ct.com_type_code
   		
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.tab_code = #{tab_code}
		   <if test="is_view != null and is_view != ''">
		   and se.is_view = #{is_view}
		   </if>
		   <if test="is_view_tab != null and is_view_tab != ''">
		   and se.is_view_tab = #{is_view_tab}
		   </if>
		   
		 order by se.seq_no,t.sort
	</select>
	
	<select id="queryColJoinQueSetList" parameterType="java.util.Map" resultMap="columnsMap"  useCache="false" flushCache="true">
		select t.group_id,
		       t.hos_id,
		       t.tab_code,
		       t.col_code,
		       t.col_name,
		       t.data_type,
		       t.field_tab_code,
		       se.store_type_code,
			   case when se.col_name_show is null then t.col_name else se.col_name_show end col_name_show,
			   se.com_type_code,
			   ct.com_type_name,
			   se.seq_no,
			   se.is_view,
			   se.text_align,
			   se.field_width,
			   se.con_sign_code,
			   cs.con_sign_name,
			   se.is_section,
			   se.is_change,
			   se.change_col_code,
			   se.is_default,
			   se.default_value,
			   se.default_text
		  from hr_col_struc t
		
		  left join HR_STORE_QUE_SET se
		    on t.group_id = se.group_id
		   and t.hos_id = se.hos_id
		   and t.tab_code = se.tab_code
		   and t.col_code = se.col_code
		   and se.store_type_code = #{store_type_code}
		   
		  left join HR_COM_TYPE ct
   			on se.com_type_code = ct.com_type_code
   	      
   	      left join HR_CON_SIGN cs
	        on se.con_sign_code = cs.con_sign_code
		
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.tab_code in( #{tab_code} , #{child_code})
		   <if test="is_view != null and is_view != ''">
		   and se.is_view = #{is_view}
		   </if>
		   
		 order by t.tab_code,se.seq_no,t.sort
	</select>

	
	<select id="queryChildDeptById" parameterType="java.util.Map" resultType="java.lang.String" useCache="false" flushCache="true">
		select t.dept_id ||'@'|| t.dept_no
		  from hos_dept_dict t
		 where t.group_id =#{group_id}
		   and t.hos_id = #{hos_id}
		   and t.is_stop = 0
		   and t.is_disable = 0
		 start with t.dept_code = #{DEPT_CODE}
       connect by t.super_code = prior t.dept_code
	</select>
	
	<resultMap type="java.util.Map" id="hrStoreTabStrucMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
	</resultMap>
	<select id="queryHrStoreTabStrucByStoreType" parameterType="java.util.Map" resultMap="hrStoreTabStrucMap" useCache="false" flushCache="true">
		select t.group_id, t.hos_id, t.tab_code, ts.tab_name
		  from HR_STORE_TAB_STRUC t
		  left join hr_tab_struc ts
            on t.tab_code = ts.tab_code and t.group_id = ts.group_id
           and t.hos_id = ts.hos_id
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.store_type_code = #{store_type_code}
		 order by ts.sort
	</select>
	
	<select id="queryColumnsByStatisticSet" parameterType="java.util.Map" resultMap="columnsMap" useCache="false" flushCache="true">
		select t.group_id,
		       t.hos_id,
		       t.statistic_code,
		       t.tab_code,
		       t.col_code,
		       t.sort,
		       cs.col_name,
		       cs.field_tab_code,
		       se.store_type_code,
		       case when se.col_name_show is null then cs.col_name else se.col_name_show end col_name_show,
		       se.com_type_code,
		       ct.com_type_name,
		       se.seq_no,
		       se.col_width,
		       se.is_view,
		       se.is_view_tab,
		       se.text_align,
		       se.field_width,
		       se.is_verify,
		       se.is_pk,
		       se.is_auto,
		       se.is_read,
		       se.is_default,
		       se.default_value,
		       se.default_text,
		       se.is_change,
		       se.change_col_code
		  from HR_STATISTIC_TAB_STRUC t
		  left join HR_COL_STRUC cs
			on t.group_id = cs.group_id
		   and t.hos_id = cs.hos_id
		   and t.tab_code = cs.tab_code
		   and t.col_code = cs.col_code
		   
		  left join HR_STORE_COL_SET se
		    on t.group_id = se.group_id
		   and t.hos_id = se.hos_id
		   and cs.tab_code = se.tab_code
		   and cs.col_code = se.col_code
		   and se.store_type_code = #{store_type_code}
		   
		  left join HR_COM_TYPE ct
   			on se.com_type_code = ct.com_type_code
   		
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   <if test="statistic_code != null and statistic_code != ''">
		   and t.statistic_code = #{statistic_code}
		   </if>
		 order by t.sort 
	</select>
	
	<select id="queryColumnsByStatisticQueSet" parameterType="java.util.Map" resultMap="columnsMap" useCache="false" flushCache="true">
		select t.group_id,
		       t.hos_id,
		       t.statistic_code,
		       t.tab_code,
		       t.col_code,
		       t.sort,
		       cs.col_name,
		       cs.field_tab_code,
		       cs.data_type,
		       se.store_type_code,
		       case
		         when se.col_name_show is null then
		          cs.col_name
		         else
		          se.col_name_show
		       end col_name_show,
		       se.com_type_code,
		       ct.com_type_name,
		       se.seq_no,
		       se.is_view,
		       se.text_align,
		       se.field_width,
		       se.con_sign_code,
		       cs.con_sign_name,
		       se.is_section,
		       se.is_change,
		       se.change_col_code,
		       se.is_default,
		       se.default_value,
		       se.default_text
		  from HR_STATISTIC_TAB_STRUC t
		  left join HR_COL_STRUC cs
		    on t.group_id = cs.group_id
		   and t.hos_id = cs.hos_id
		   and t.tab_code = cs.tab_code
		   and t.col_code = cs.col_code
		
		  left join HR_STORE_QUE_SET se
		    on t.group_id = se.group_id
		   and t.hos_id = se.hos_id
		   and cs.tab_code = se.tab_code
		   and cs.col_code = se.col_code
		   and se.store_type_code = #{store_type_code}
		
		  left join HR_COM_TYPE ct
		    on se.com_type_code = ct.com_type_code
		
		  left join HR_CON_SIGN cs
		    on se.con_sign_code = cs.con_sign_code
   		
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   <if test="statistic_code != null and statistic_code != ''">
		   and t.statistic_code = #{statistic_code}
		   </if>
		   <if test="is_view != null and is_view != ''">
		   and se.is_view = #{is_view}
		   </if>
		 order by t.sort 
	</select>
	
	<!-- 查询用户权限 -->
	<select id="queryHrUserPermByUserId" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.table_code "table_code", t.is_read "is_read", t.is_write "is_write"
		  from SYS_USER_PERM_DATA t
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.user_id = #{user_id}
		   and t.mod_code = '06'
		   <if test="table_code != null and table_code !=''">
		   and t.table_code = 'HR_TAB_STRUC'
		   and t.perm_code = #{table_code}
		   </if>
	</select>
	
	<!-- 查询角色权限 -->
	<select id="queryHrRolePermByRoleId" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.table_code "table_code", t.is_read "is_read", t.is_write "is_write"
		  from SYS_ROLE_PERM_DATA t
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.role_id = #{role_id}
		   and t.mod_code = '06'
		   <if test="table_code != null and table_code !=''">
		   and t.table_code = #{table_code}
		   </if>
	</select>
	
	<select id="queryDeptByCode" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.dept_id, t.dept_no
		  from hos_dept_dict t
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.dept_code = #{dept_code}
		   and t.is_disable = 0
		   and t.is_stop = 0
	</select>
	<select id="queryDeptAll" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.dept_id||'@'||t.dept_no as id ,t.dept_name
		  from hos_dept_dict t
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.is_disable = 0
		   and t.is_stop = 0
	</select>
	<select id="queryHosDeptData" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.dept_code,t.dept_id||'@'||t.dept_no as dept_id
		  from hos_dept_dict t
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.is_disable = 0
		   and t.is_stop = 0
	</select>
	
	<select id="querySelectData"  resultType="java.util.Map"  parameterType="java.util.Map" useCache="false" flushCache="true">
	select fd.field_col_code,fd.field_col_name,hcs.col_code  from HR_FIIED_DATA fd
		left join HR_COL_STRUC hcs 
		on fd.group_id = hcs.group_id
		and fd.hos_id = hcs.hos_id
		and hcs.field_tab_code = fd.field_tab_code
		where fd.group_id = #{group_id}
		and fd.hos_id = #{hos_id}
		and hcs.col_code = #{col_code}
		
	</select>
	<select id="queryHrConSignByCode" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.con_sign_code as "con_sign_code" ,t.con_sign_name as "con_sign_name" from HR_CON_SIGN t
	</select>
	
	<select id="queryFiiedView" resultMap="hrFiiedView" parameterType="java.util.Map" useCache="false" flushCache="true">
				select b.group_id,b.hos_id,a.col_code ,b.field_tab_code,b.cite_sql,b.note 
				from HR_COL_STRUC a
				left join HR_FIIED_VIEW b
				 on a.group_id = b.group_id
		        and a.hos_id = b.hos_id
		        AND  a.field_tab_code = b.field_tab_code
				 where a.group_id = #{group_id}
				 and a.hos_id = #{hos_id}
		       <if test="col_code != '' and col_code !=null ">
			 and a.col_code in(${col_code}) 
			   </if>
			
				 and a.tab_code=#{tab_code}
	</select>
	
	<select id="queryHosEmpData" resultType="java.util.Map" parameterType="java.util.Map" useCache="false" flushCache="true">
		select a.emp_id||'@'||a.emp_no as emp_id, a.emp_code, a.emp_name
		  from hos_emp_dict a
		 where a.group_id = #{group_id}
		   and a.hos_id = #{hos_id}
		   and a.is_stop = 0
	</select>
	
	<select id="queryHosEmpMaxId" parameterType="java.util.Map" resultType="int" useCache="false" flushCache="true">
		select nvl(max(emp_id),0)+1 as emp_id from hos_emp 
		where group_id = #{group_id}
			and hos_id= #{hos_id}
	</select>
	<select id="queryEmpDataMap" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select col_code ,data_type from hr_col_struc 
		where group_id = #{group_id}
			and hos_id= #{hos_id}
			and tab_code = #{tab_code}
	</select>
	
	<insert id="addEmpBatch"  parameterType="java.util.Map" >
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;" >
		insert into ${tab_code} (
			<foreach collection="item" index="key" separator=",">
				${key}	
			</foreach>	
		) values (
			<foreach collection="item" item="value" separator=",">
				#{value}			
			</foreach>	
		)
		</foreach>
	</insert>
	
	<insert id="addHosEmpDictBatch"  parameterType="java.util.Map" >
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;" >
			insert into hos_emp_dict
			  (emp_no,
			   group_id,
			   hos_id,
			   emp_id,
			   emp_code,
			   emp_name,
			   dept_no,
			   dept_id,
			    <if test="item.KIND_CODE != '' and item.KIND_CODE !=null ">
			   kind_code,
			   </if>
			   sort_code,
			    <if test="item.NOTE != '' and item.NOTE !=null ">
			   note,
			   </if>
			   spell_code,
			   wbx_code,
			   user_code,
			   create_date,
			   dlog,
			   is_stop,
			   is_disable
			   )
			values
			  (#{item.EMP_ID},
			   #{item.GROUP_ID},
			   #{item.HOS_ID},
			   #{item.EMP_ID},
			   #{item.EMP_CODE},
			   #{item.EMP_NAME},
			   #{item.DEPT_NO},
			   #{item.DEPT_ID},
			    <if test="item.KIND_CODE != '' and item.KIND_CODE !=null ">
			   #{item.KIND_CODE},
			   </if>
			   #{item.EMP_ID},
			    <if test="item.NOTE != '' and item.NOTE !=null ">
			   #{item.NOTE},
			   </if>
			   #{item.SPELL_CODE},
			   #{item.WBX_CODE},
			   #{item.USERID},
			   sysdate,
			   '添加',
			   0,
			   #{item.IS_STOP}
			   )
		</foreach>
	</insert>
	<update id="updateEmpBatch"	 parameterType="java.util.Map" >
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;" >
		update ${tab_code} set 
			<foreach collection="item" index="key" item="value" separator=",">
			<if test="value != '' and value !=null">
				${key}	=#{value}	
			</if>
			
			</foreach>	
				where group_id = #{item.GROUP_ID}
				and hos_id= #{item.HOS_ID}
				and emp_id = #{item.EMP_ID}
		</foreach>
	</update>
	<update id="updateHosEmpDictBatch"	 parameterType="java.util.Map" >
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;" >
		<!-- delete  hos_emp_dict  
				where group_id = #{item.GROUP_ID}
				and hos_id= #{item.HOS_ID}
				and emp_id = #{item.EMP_ID}
				and is_stop = 0  ; -->
			update HOS_EMP_DICT
			set is_stop = 1 ,
				is_disable = #{item.IS_STOP}
			where
			  	group_id = #{item.GROUP_ID}
				and hos_id= #{item.HOS_ID}
				and emp_id = #{item.EMP_ID}
			  	 and is_stop = 0 ;	
		insert into hos_emp_dict
			  (emp_no,
			   group_id,
			   hos_id,
			   emp_id,
			   emp_code,
			   emp_name,
			   dept_no,
			   dept_id,
			    <if test="item.KIND_CODE != '' and item.KIND_CODE !=null ">
			   kind_code,
			   </if>
			   sort_code,
			   <if test="item.NOTE != '' and item.NOTE !=null ">
			   note,
			   </if>
			   spell_code,
			   wbx_code,
			   user_code,
			   create_date,
			   dlog,
			   is_stop,
			   is_disable
			   )
			values
			  (
			   hos_emp_dict_seq.nextval,
			   #{item.GROUP_ID},
			   #{item.HOS_ID},
			   #{item.EMP_ID},
			   #{item.EMP_CODE},
			   #{item.EMP_NAME},
			   #{item.DEPT_NO},
			   #{item.DEPT_ID},
			    <if test="item.KIND_CODE != '' and item.KIND_CODE !=null ">
			   #{item.KIND_CODE},
			   </if>
			   #{item.EMP_ID},
			    <if test="item.NOTE != '' and item.NOTE !=null ">
			   #{item.NOTE},
			   </if>
			   #{item.SPELL_CODE},
			   #{item.WBX_CODE},
			   #{item.USERID},
			   sysdate,
			   '修改',
			   0,
			   #{item.IS_STOP}
			   )
		</foreach>
	</update>
	
	<select id="queryExcelColumn" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
			with sf as
			 (select  
		       t.col_code as id,
		       case se.com_type_code
		         when '01' then
		            case 
		              when se.col_name_show is null 
		              then 
		              case  instr(t.col_name, '编码')
		                when 0 then
		                 t.col_name || '(编码)'
		                else
		                 replace(t.col_name, '编码', '(编码)')
		              end
		              else 
		                case  instr(se.col_name_show, '编码')
		                  when 0 then
		                   se.col_name_show || '(编码)'
		                  else
		                   replace(se.col_name_show, '编码', '(编码)')
		                end
		            end 
		         else
		         case 
		          when se.col_name_show is null 
		            then t.col_name
		          else se.col_name_show
		        end 
		        end as name,
		       case  when  se.is_verify =1 
		       then 'true' else 'false' end as required,
		       se.com_type_code as type ,
		       t.tab_code as tab_code,
		       t.field_tab_code,
		       c.is_cite,
		       se.is_change,
		       se.change_col_code,
		       t.is_pk
		  from hr_col_struc t
		  left join HR_STORE_COL_SET se
		    on t.group_id = se.group_id
		   and t.hos_id = se.hos_id
		   and t.tab_code = se.tab_code
		   and t.col_code = se.col_code
		   and se.store_type_code = #{store_type_code}
	   left join hr_fiied_tab_struc c 
	    on t.group_id = c.group_id
		   and t.hos_id = c.hos_id
		   and t.field_tab_code = c.field_tab_code
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.tab_code = #{tab_code}
		   and t.col_code not in (
			   select CHANGE_COL_CODE 
			   from  HR_STORE_COL_SET 
			   where group_id = #{group_id}
				   and hos_id = #{hos_id} 
				   and tab_code = #{tab_code}
				   and store_type_code = #{store_type_code}
				   and CHANGE_COL_CODE is not null
			   union all 
			   select 
			   'GROUP_ID'
			   from dual
			   union all 
			   select 'HOS_ID'
			   from dual 
			   <if test="tab_code == 'HOS_EMP'">
			   union all 
			   select 'EMP_ID' from dual
			   </if>
		   )
		   order by se.SEQ_NO,t.sort)
	select id,
       case instr(name, 'ID')
                 when 0 then name else replace(name, 'ID', '')  end name ,
       required,
       type,
       tab_code,
       field_tab_code,
       is_cite,
       is_change,
       change_col_code,
       is_pk
  from sf
	</select>

	<select id="queryTabExistsData" parameterType="java.util.Map" resultType="int" useCache="false" flushCache="true">
<if test="_parameter!= null and _parameter!= ''">
		${sql}
	</if>
	</select>

	<!-- HrFiied -->
	<select id="queryHrFiied" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select hfts.GROUP_ID,
		       hfts.HOS_ID,
		       hfts.FIELD_TAB_CODE,
		       hfts.TYPE_FILED_CODE,
		       hfts.FIELD_TAB_NAME,
		       hfts.IS_INNR,
		       hfts.IS_CITE,
		       hftt.TYPE_FILED_NAME,
		       to_char(hfv.CITE_SQL) as CITE_SQL
		  from HR_FIIED_TAB_STRUC hfts
		  left join HR_FIIED_TAB_TYPE hftt
		    on hfts.type_filed_code = hftt.type_filed_code
		   and hfts.group_id = hftt.group_id
		   and hfts.hos_id = hftt.hos_id
		  left join HR_FIIED_VIEW hfv
		    on hfts.field_tab_code = hfv.field_tab_code
		   and hfts.group_id = hfv.group_id
		   and hfts.hos_id = hfv.hos_id
		 where hfts.group_id = #{group_id}
		   and hfts.hos_id = #{hos_id}
		 order by hfts.field_tab_code
	</select>
	<select id="queryHrFiiedData" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select GROUP_ID,
	       HOS_ID,
	       FIELD_TAB_CODE,
	       FIELD_COL_CODE,
	       FIELD_COL_NAME,
	       SUPER_COL_CODE,
	       SPELL_CODE,
	       WBX_CODE,
	       IS_INNR,
	       IS_STOP,
	       IS_LAST
	  from hr_fiied_data
	  where group_id = #{group_id} and hos_id = #{hos_id}
	  order by FIELD_TAB_CODE
	</select>
	<select id="queryHrFiiedSql" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		${tmpHrFiiedSql}
	</select>
	<!-- HrFiied -->
	
	<!-- HR_STORE_CONDITION -->
	<select id="queryHrStoreCondition" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select hsc.GROUP_ID,
	       hsc.HOS_ID,
	       hsc.STORE_TYPE_CODE,
	       hsc.LINE_NO,
	       hsc.L_BRACKET,
	       hsc.TAB_CODE,
	       hsc.COL_CODE,
	       hsc.CON_SIGN_CODE,
	       hsc.COL_VALUE,
	       hsc.R_BRACKET,
	       hsc.JOIN_SIGN_CODE,
	       hcs.CON_SIGN_NAME,
	       hcs.CON_SIGN_NOTE,
	       hjs.JOIN_SIGN_NAME,
	       hjs.JOIN_SIGN_NOTE
	  from HR_STORE_CONDITION hsc
	  left join hr_con_sign hcs
	    on hsc.con_sign_code = hcs.con_sign_code
	  left join hr_join_sign hjs
	    on hsc.join_sign_code = hjs.join_sign_code
	  where group_id = #{group_id} and hos_id = #{hos_id}
		   <if test="store_type_code != null and store_type_code != ''">
		   and hsc.store_type_code = #{store_type_code}
		   </if>
	  order by hsc.LINE_NO
	</select>
	<!-- HR_STORE_CONDITION -->
	
	<!-- HR_TAB_STRUC -->
	<select id="queryHrTabStruc" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select hts.GROUP_ID,
	       hts.HOS_ID,
	       hts.TAB_CODE,
	       hts.TAB_NAME,
	       hts.TYPE_TAB_CODE,
	       hts.IS_INNR,
	       hts.SORT,
	       hsts.STORE_TYPE_CODE
	  from HR_TAB_STRUC hts
	  left join HR_STORE_TAB_STRUC hsts
	    on hts.tab_code = hsts.tab_code
	   and hts.group_id = hsts.group_id
	   and hts.hos_id = hsts.hos_id
	  where hts.group_id = #{group_id} and hts.hos_id = #{hos_id}
		   <if test="store_type_code != null and store_type_code != ''">
		   and hts.store_type_code = #{store_type_code}
		   </if>
		   <if test="type_tab_code != null and type_tab_code != ''">
		   and hts.type_tab_code = #{type_tab_code}
		   </if>
		   <if test="tab_code != null and tab_code != ''">
		   and hsts.tab_code = #{tab_code}
		   </if>
		   
	  order by hts.SORT
	</select>
	<!-- HR_TAB_STRUC -->
	<!-- HR_store_col_set -->
	<select id="queryHrStoreColSet" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select hscs.GROUP_ID,
		       hscs.HOS_ID,
		       hscs.STORE_TYPE_CODE,
		       hscs.TAB_CODE,
		       hscs.COL_CODE,
		       hscs.COL_NAME_SHOW,
		       hscs.COM_TYPE_CODE,
		       hscs.SEQ_NO,
		       hcs.SORT,
		       hscs.COL_WIDTH,
		       hscs.IS_VIEW,
		       hscs.IS_VIEW_TAB,
		       hscs.TEXT_ALIGN,
		       hscs.FIELD_WIDTH,
		       hscs.IS_VERIFY,
		       hcs.is_pk,
		       hscs.IS_AUTO,
		       hscs.IS_READ,
		       hscs.IS_DEFAULT,
		       hscs.DEFAULT_VALUE,
		       hscs.DEFAULT_TEXT,
		       hscs.IS_CHANGE,
		       hscs.CHANGE_COL_CODE,
		       hcs.COL_NAME,
		       hcs.DATA_TYPE,
		       hcs.LENGTH,
		       hcs.PREC,
		       hcs.IS_M,
		       hcs.IS_INNR,
		       hcs.IS_UNIQUE,
		       hcs.FIELD_TAB_CODE,
		       hts.tab_name
		  from HR_STORE_COL_SET hscs
		  left join HR_COL_STRUC hcs
		    on hscs.tab_code = hcs.tab_code
		   and hscs.col_code = hcs.col_code
		   and hscs.group_id = hcs.group_id
		   and hscs.hos_id = hcs.hos_id
		  left join HR_TAB_STRUC hts on hscs.tab_code = hts.tab_code and hscs.group_id = hts.group_id and hscs.hos_id = hts.hos_id
		 where hcs.group_id = #{group_id}
		   and hcs.hos_id = #{hos_id}
		   and hscs.store_type_code = #{store_type_code}
		   <if test="tab_code != null and tab_code != ''">
		   and hcs.tab_code = #{tab_code}
		   </if>
		   	<if test="is_read  != null and is_read != ''">
		   AND exists (
	        SELECT 1 FROM SYS_USER_PERM_DATA a
	        WHERE a.group_id = #{group_id}
	        AND a.hos_id = #{hos_id}
	        AND a.user_id = #{user_id}
	        AND a.mod_code = '06'
	        AND a.table_code = 'HR_TAB_STRUC'
	        AND a.perm_code = hcs.tab_code
	      AND a.is_read = 1
	        <!--   AND a.is_write = 1 -->
	      )
	      </if>
		 order by hts.sort,hscs.seq_no,hcs.sort
	</select>
	<!-- HR_store_col_set -->
	<!-- HR_store_que_set -->
	<select id="queryHrStoreQueSet" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select
		 hsqs.GROUP_ID,
		 hsqs.HOS_ID,
		 hsqs.STORE_TYPE_CODE,
		 hsqs.TAB_CODE,
		 hsqs.COL_CODE,
		 hsqs.COL_NAME_SHOW,
		 hsqs.COM_TYPE_CODE,
		 hsqs.SEQ_NO,
		 hsqs.IS_VIEW,
		 hsqs.TEXT_ALIGN,
		 hsqs.FIELD_WIDTH,
		 hsqs.CON_SIGN_CODE,
		 hsqs.IS_SECTION,
		 hsqs.IS_CHANGE,
		 hsqs.CHANGE_COL_CODE,
		 hsqs.IS_DEFAULT,
		 hsqs.DEFAULT_VALUE,
		 hsqs.DEFAULT_TEXT,
		 hsqs.RE_URL,
		 hsqs.IS_VERIFY,
		 hcs.SORT,
		 hcs.COL_NAME,
		 hcs.DATA_TYPE,
		 hcs.LENGTH,
		 hcs.PREC,
		 hcs.IS_M,
		 hcs.IS_INNR,
		 hcs.IS_UNIQUE,
		 hcs.FIELD_TAB_CODE,
		 hts.tab_name
		  from HR_STORE_QUE_SET hsqs
		  left join HR_COL_STRUC hcs
		    on hsqs.tab_code = hcs.tab_code
		   and hsqs.col_code = hcs.col_code
		   and hsqs.group_id = hcs.group_id
		   and hsqs.hos_id = hcs.hos_id
		  left join HR_TAB_STRUC hts
		    on hsqs.tab_code = hts.tab_code
		   and hsqs.group_id = hts.group_id
		   and hsqs.hos_id = hts.hos_id
		 where hsqs.group_id = #{group_id}
		   and hsqs.hos_id = #{hos_id}
		   and hsqs.store_type_code = #{store_type_code}
		   <if test="tab_code != null and tab_code != ''">
		   and hsqs.tab_code = #{tab_code}
		   </if>
		   	<if test="is_read  != null and is_read != ''">
		   AND exists (
		        SELECT 1 FROM SYS_USER_PERM_DATA a
		        WHERE a.group_id = #{group_id}
		        AND a.hos_id = #{hos_id}
		        AND a.user_id = #{user_id}
		        AND a.mod_code = '06'
		        AND a.table_code = 'HR_TAB_STRUC'
		        AND a.perm_code = hcs.tab_code
		        AND a.is_read = 1
		       <!--  AND a.is_write = 1 -->
	      )
	      </if>
		 order by hts.sort, hsqs.seq_no, hcs.sort
	</select>
	<!-- HR_store_que_set -->
	<!-- hr_statistic_tab_struc -->
	<select id="queryHrStatisticTabStruc" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		select 
			group_id, 
			hos_id, 
			statistic_code, 
			tab_code, 
			col_code, 
			sort
		from hr_statistic_tab_struc
		where group_id = #{group_id}
			and hos_id = #{hos_id}
		   <if test="statistic_code != null and statistic_code != ''">
		   and statistic_code = #{statistic_code}
		   </if>
		    	<if test="is_read  != null and is_read != ''">
		   AND exists (
		        SELECT 1 FROM SYS_USER_PERM_DATA a
		        WHERE a.group_id = #{group_id}
		        AND a.hos_id = #{hos_id}
		        AND a.user_id = #{user_id}
		        AND a.mod_code = '06'
		        AND a.table_code = 'HR_TAB_STRUC'
		        AND a.perm_code = tab_code
		        AND a.is_read = 1
		    <!--     AND a.is_write = 1 -->
	      )
	      </if>
		 order by sort
	</select>
	<select id="queryTabeData" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
	${sql}
	</select>
	<!-- hr_statistic_tab_struc -->
	
	<!-- hr_statistic_condition -->
	<select id="queryHrStatisticCondition" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
	 select hs.group_id,
         hs.hos_id,
         hs.statistic_code,
         hs.line_no,
         hs.l_bracket,
         hs.tab_code,
         hs.col_code,
         hs.con_sign_code,
         hc.con_sign_name,
         hs.col_value,
         hs.r_bracket,
         hs.join_sign_code,
         hjs.join_sign_name
    from hr_statistic_condition hs
    left join  HR_CON_SIGN hc on hs.con_sign_code=hc.con_sign_code
	left join hr_join_sign hjs on hs.join_sign_code = hjs.join_sign_code

		where hs.group_id = #{group_id}
			and hs.hos_id = #{hos_id}
		   <if test="statistic_code != null and statistic_code != ''">
		   and hs.statistic_code = #{statistic_code}
		   </if>
		   
		 order by line_no
	</select>
	<!-- hr_statistic_condition -->

	<select id="queryQuerySQL" parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
		${tmpQuerySql}
	</select>
	<select id="queryRepeat" parameterType="java.util.Map" resultType="int" useCache="false" flushCache="true">
	select count(1) from ${tab_code} 
		where 
		<foreach collection="tablePkMap" index="key" item="value" separator=" and ">
				${key}=#{value}	
			</foreach>	
	
	</select>
<select id="queryHrHosSelectCite"  parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
	<if test="_parameter!= null and _parameter!= ''">
		${sql}
	</if>
	</select>
	
			<select id="queryHrHosSelect"  parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
select * from (	select fd.group_id,
		       fd.hos_id,
		       fd.field_tab_code,
		       fd.field_col_code,
		       fd.field_col_name
		     
		  from hr_fiied_data fd 
		    where fd.group_id=#{group_id}
		   and  fd.hos_id=#{hos_id}
		   and fd.field_tab_code = #{table_code}
		   <if test=" key != null and key != ''">
				and ( fd.field_col_code like '%'||UPPER('${key}')||'%' or
				fd.field_col_name like '%${key}%' )
			</if>
		   		) where rownum &lt; 100
	</select>
	
			<select id="queryHrHosSelectLeft"  parameterType="java.util.Map" resultType="java.util.LinkedHashMap" useCache="false" flushCache="true">
	select fd.group_id,
		       fd.hos_id,
		       fd.field_tab_code,
		       fd.field_col_code,
		       fd.field_col_name
		     
		  from hr_fiied_data fd 
		    where fd.group_id=#{group_id}
		   and  fd.hos_id=#{hos_id}
		   and fd.field_tab_code = #{table_code}
		   <if test=" key != null and key != ''">
				and ( fd.field_col_code like '%'||UPPER('${key}')||'%' or
				fd.field_col_name like '%${key}%' )
			</if>
		   	
	</select>
</mapper> 
