<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.nursingtraining.HrEmpYearHnurseMapper">
	
	<resultMap id="hrEmpYearHnurse" type="com.chd.hrp.hr.entity.nursingtraining.HrEmpYearHnurse">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="emp_id" column="emp_id"/>
	<result property="emp_code" column="emp_code"/>
	<result property="emp_name" column="emp_name"/>
	<result property="year" column="year"/>
	<result property="resteach" column="resteach"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hrEmpYearHnurseMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="emp_id" column="emp_id"/>
	<result property="year" column="year"/>
	<result property="resteach" column="resteach"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO HR_EMP_YEAR_HNURSE (
		<trim suffix="" suffixOverrides=",">
		group_id,
		hos_id,
		emp_id,
		year,
		resteach,
		note,
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{emp_id,jdbcType=INTEGER},
		#{year,jdbcType=VARCHAR},
		#{resteach,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_EMP_YEAR_HNURSE (
		group_id,
		hos_id,
		emp_id,
		year,
		resteach,
		note
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.year,jdbcType=VARCHAR},
			#{item.resteach,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE hr_emp_year_hnurse 
		<trim prefix="SET"  suffixOverrides=","> 
		resteach = #{resteach,jdbcType=INTEGER},
		note = #{note,jdbcType=VARCHAR},
		</trim>
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE hr_emp_year_hnurse 
			<trim prefix="SET"  suffixOverrides=","> 
			resteach = #{item.resteach,jdbcType=INTEGER},
			note = #{item.note,jdbcType=VARCHAR},
			</trim>
			<where>                     
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			AND year = #{item.year,jdbcType=VARCHAR}
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM hr_emp_year_hnurse 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		</where>  
	</delete>
	
	<delete id="deleteHrEmpYearHnurse" parameterType="java.util.List">
		DELETE FROM hr_emp_year_hnurse 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	
	<select id="queryHrEmpYearHnurse" parameterType="java.util.Map" resultMap="hrEmpYearHnurse" >
	
		select eyh.group_id, eyh.hos_id, eyh.emp_id, he.emp_code, he.emp_name
  , eyh.year, eyh.resteach, eyh.note
from HR_EMP_YEAR_HNURSE eyh
left join hos_emp he on eyh.group_id = he.group_id
and eyh.hos_id = he.hos_id
and eyh.emp_id = he.emp_id 
		<where>                     
		eyh.group_id = #{group_id,jdbcType=INTEGER}
		AND eyh.hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="emp_id != null and emp_id != ''">
		AND eyh.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND eyh.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="emp_code != null and emp_code != ''">
		AND he.emp_code like '%'||#{emp_code}||'%'
		</if>
		<if test="emp_name != null and emp_name != ''">
		AND he.emp_name like '%'||#{emp_name}||'%'
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND he.dept_id = #{dept_id}
		</if>
		<if test="duty_code != null and duty_code != ''">
		AND hd.duty_code = #{duty_code}	
		</if>
		<if test="title_code != null and title_code != ''">
		AND ett.title_code = #{title_code}
		</if>
		<if test="level_code != null and level_code != ''">
		AND ep.level_code = #{level_code}
		</if>
		</where>   
		order by eyh.year
	</select>
	<select id="queryByCode" resultMap="hrEmpYearHnurse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		resteach,
		note
		FROM hr_emp_year_hnurse 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		emp_id = #{emp_id,jdbcType=INTEGER}   and 
		year = #{year,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="hrEmpYearHnurse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		resteach,
		note
		FROM HR_EMP_YEAR_HNURSE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="resteach != null and resteach != ''">
		AND resteach = #{resteach,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrEmpYearHnurse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		resteach,
		note
		FROM HR_EMP_YEAR_HNURSE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="resteach != null and resteach != ''">
		AND resteach = #{resteach,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
		<select id="queryYearHNurseByPrint" parameterType="java.util.Map"  resultType="java.util.Map">
		
		SELECT 
		eyh.group_id,
		eyh.hos_id,
		eyh.emp_id,
		he.emp_code,
		he.emp_name,
		eyh.year,
		eyh.resteach,
		eyh.note
		FROM HR_EMP_YEAR_HNURSE eyh
		
		left join hos_emp he
		  on eyh.group_id = he.group_id
		 and eyh.hos_id = he.hos_id
		 and eyh.emp_id = he.emp_id
		
		left join (select hd.group_id, hd.hos_id, hd.emp_id, hd.duty_code
	               from HR_HOS_DUTY hd
	              where hd.engage_date =
	                    (select max(hd2.engage_date)
	                       from HR_HOS_DUTY hd2
	                      where hd2.group_id = hd.group_id
	                        and hd2.hos_id = hd.hos_id
	                        and hd2.emp_id = hd.emp_id
	                      group by hd2.group_id, hd2.hos_id, hd2.emp_id)) hd
	      on he.group_id = hd.group_id
	     and he.hos_id = hd.hos_id
	     and he.emp_id = hd.emp_id
	     
	     left join (select ett.group_id, ett.hos_id, ett.emp_id, ett.title_code
	               from HR_EMP_TECHNOLOGY_TITLE ett
	              where ett.get_date =
	                    (select max(ett2.get_date)
	                       from HR_EMP_TECHNOLOGY_TITLE ett2
	                      where ett2.group_id = ett.group_id
	                        and ett2.hos_id = ett.hos_id
	                        and ett2.emp_id = ett.emp_id
	                      group by ett2.group_id, ett2.hos_id, ett2.emp_id)) ett
	      on he.group_id = ett.group_id
	     and he.hos_id = ett.hos_id
	     and he.emp_id = ett.emp_id
	     
	    left join (select ep.group_id, ep.hos_id, ep.emp_id, ep.level_code
	               from HR_EMP_PROMOTION ep
	              where ep.get_date =
	                    (select max(ep2.get_date)
	                       from HR_EMP_PROMOTION ep2
	                      where ep2.group_id = ep.group_id
	                        and ep2.hos_id = ep.hos_id
	                        and ep2.emp_id = ep.emp_id
	                      group by ep2.group_id, ep2.hos_id, ep2.emp_id)
	             
	             ) ep
	      on he.group_id = ep.group_id
	     and he.hos_id = ep.hos_id
	     and he.emp_id = ep.emp_id
		<where>                     
		eyh.group_id = #{group_id,jdbcType=INTEGER}
		AND eyh.hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="emp_id != null and emp_id != ''">
		AND eyh.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND eyh.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="emp_code != null and emp_code != ''">
		AND he.emp_code like '%'||#{emp_code}||'%'
		</if>
		<if test="emp_name != null and emp_name != ''">
		AND he.emp_name like '%'||#{emp_name}||'%'
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND he.dept_no||'@'||he.dept_id = #{dept_id}
		</if>
		<if test="duty_code != null and duty_code != ''">
		AND hd.duty_code = #{duty_code}	
		</if>
		<if test="title_code != null and title_code != ''">
		AND ett.title_code = #{title_code}
		</if>
		<if test="level_code != null and level_code != ''">
		AND ep.level_code = #{level_code}
		</if>
		</where>   
		order by eyh.year
		
		</select>
</mapper>

