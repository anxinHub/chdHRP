<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.medicalmanagement.HrHeartDocWorkMapper">
	
	<resultMap id="hrHeartDocWork" type="com.chd.hrp.hr.entity.medicalmanagement.HrHeartDocWork">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="emp_id" column="emp_id"/>
	<result property="emp_name" column="emp_name"/>
	<result property="year_month" column="year_month"/>
	<result property="gen_ecg" column="gen_ecg"/>
	<result property="bed_ecg" column="bed_ecg"/>
	<result property="dyn_ecg" column="dyn_ecg"/>
	<result property="dyn_blood" column="dyn_blood"/>
	<result property="bed_ecg_variate" column="bed_ecg_variate"/>
	<result property="move_ecg" column="move_ecg"/>
	<result property="heart_vector" column="heart_vector"/>
	<result property="atrial_pcting" column="atrial_pcting"/>
	<result property="heart_money" column="heart_money"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hrHeartDocWorkMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="emp_id" column="emp_id"/>
	<result property="emp_name" column="emp_name"/>
	<result property="year_month" column="year_month"/>
	<result property="gen_ecg" column="gen_ecg"/>
	<result property="bed_ecg" column="bed_ecg"/>
	<result property="dyn_ecg" column="dyn_ecg"/>
	<result property="dyn_blood" column="dyn_blood"/>
	<result property="bed_ecg_variate" column="bed_ecg_variate"/>
	<result property="move_ecg" column="move_ecg"/>
	<result property="heart_vector" column="heart_vector"/>
	<result property="atrial_pcting" column="atrial_pcting"/>
	<result property="heart_money" column="heart_money"/>
	<result property="note" column="note"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO HR_HEART_DOC_WORK (
		<trim suffix="" suffixOverrides=",">
		group_id,
		hos_id,
		dept_id,
		emp_id,
		year_month,
		gen_ecg,
		bed_ecg,
		dyn_ecg,
		dyn_blood,
		bed_ecg_variate,
		move_ecg,
		heart_vector,
		atrial_pcting,
		heart_money,
		note,
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{dept_id,jdbcType=INTEGER},
		#{emp_id,jdbcType=INTEGER},
		#{year_month,jdbcType=VARCHAR},
		#{gen_ecg,jdbcType=INTEGER},
		#{bed_ecg,jdbcType=INTEGER},
		#{dyn_ecg,jdbcType=INTEGER},
		#{dyn_blood,jdbcType=INTEGER},
		#{bed_ecg_variate,jdbcType=INTEGER},
		#{move_ecg,jdbcType=INTEGER},
		#{heart_vector,jdbcType=INTEGER},
		#{atrial_pcting,jdbcType=INTEGER},
		#{heart_money,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_HEART_DOC_WORK (
		group_id,
		hos_id,
		dept_id,
		emp_id,
		year_month,
		gen_ecg,
		bed_ecg,
		dyn_ecg,
		dyn_blood,
		bed_ecg_variate,
		move_ecg,
		heart_vector,
		atrial_pcting,
		heart_money,
		note
		)(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.year_month,jdbcType=VARCHAR},
			#{item.gen_ecg,jdbcType=INTEGER},
			#{item.bed_ecg,jdbcType=INTEGER},
			#{item.dyn_ecg,jdbcType=INTEGER},
			#{item.dyn_blood,jdbcType=INTEGER},
			#{item.bed_ecg_variate,jdbcType=INTEGER},
			#{item.move_ecg,jdbcType=INTEGER},
			#{item.heart_vector,jdbcType=INTEGER},
			#{item.atrial_pcting,jdbcType=INTEGER},
			#{item.heart_money,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)
	</insert>
	<insert id="addBatchHeartDocWorkload" parameterType="java.util.List" >
	
		INSERT INTO HR_HEART_DOC_WORK (
		group_id,
		hos_id,
		dept_id,
		emp_id,
		year_month,
		gen_ecg,
		bed_ecg,
		dyn_ecg,
		dyn_blood,
		bed_ecg_variate,
		move_ecg,
		heart_vector,
		atrial_pcting,
		heart_money,
		note
		)(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{map.group_id,jdbcType=INTEGER},
			#{map.hos_id,jdbcType=INTEGER},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.year_month,jdbcType=VARCHAR},
			#{item.gen_ecg,jdbcType=INTEGER},
			#{item.bed_ecg,jdbcType=INTEGER},
			#{item.dyn_ecg,jdbcType=INTEGER},
			#{item.dyn_blood,jdbcType=INTEGER},
			#{item.bed_ecg_variate,jdbcType=INTEGER},
			#{item.move_ecg,jdbcType=INTEGER},
			#{item.heart_vector,jdbcType=INTEGER},
			#{item.atrial_pcting,jdbcType=INTEGER},
			#{item.heart_money,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)
	</insert>
		<select id="queryByCodeHeartDocWork" resultMap="hrHeartDocWork"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		dept_id,
		emp_id,
		year_month,
		gen_ecg,
		bed_ecg,
		dyn_ecg,
		dyn_blood,
		bed_ecg_variate,
		move_ecg,
		heart_vector,
		atrial_pcting,
		heart_money,
		note
		FROM hr_heart_doc_work 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		dept_id = #{dept_id,jdbcType=INTEGER}   and 
		emp_id = #{emp_id,jdbcType=INTEGER}   and 
		year_month = #{year_month,jdbcType=VARCHAR} 
	
	</select>

	
	<delete id="deletehrHeartDocWork" parameterType="java.util.Map">
	
		DELETE FROM hr_heart_doc_work 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
	<!-- 	AND dept_id = #{dept_id,jdbcType=INTEGER}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND year_month = #{year_month,jdbcType=VARCHAR} -->
		</where>  
	</delete>
	<delete id="deleteHeartDocWorkload" parameterType="java.util.List">
		DELETE FROM hr_heart_doc_work 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				
				group_id = #{map.group_id,jdbcType=INTEGER}
		
				AND hos_id = #{map.hos_id,jdbcType=INTEGER}
				
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.emp_id != null and item.emp_id != ''">
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>
				<if test="item.year_month != null and item.year_month != ''">
				AND year_month = #{item.year_month,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hrHeartDocWork" >
	
		SELECT 
		hc.group_id,
		hc.hos_id,
		hc.dept_id,
		hd.dept_name,
		hc.emp_id,
		he.emp_name,
		hc.year_month,
		hc.gen_ecg,
		hc.bed_ecg,
		hc.dyn_ecg,
		hc.dyn_blood,
		hc.bed_ecg_variate,
		hc.move_ecg,
		hc.heart_vector,
		hc.atrial_pcting,
		hc.heart_money,
		hc.note
		FROM HR_HEART_DOC_WORK  hc left join hos_emp he on hc.emp_id=he.emp_id
    and hc.group_id=he.group_id and hc.hos_id=he.hos_id
    and he.is_stop=0 
    left join hos_dept_dict hd on hc.dept_id=hd.dept_id 
    and  hc.group_id=hd.group_id and hc.hos_id=hd.hos_id 
    and hd.is_stop=0
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND hc.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hc.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND hc.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND hc.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year_month != null and year_month != ''">
		AND hc.year_month = #{year_month,jdbcType=VARCHAR}
		</if>
		<if test="gen_ecg != null and gen_ecg != ''">
		AND hc.gen_ecg = #{gen_ecg,jdbcType=INTEGER}
		</if>
		<if test="bed_ecg != null and bed_ecg != ''">
		AND hc.bed_ecg = #{bed_ecg,jdbcType=INTEGER}
		</if>
		<if test="dyn_ecg != null and dyn_ecg != ''">
		AND hc.dyn_ecg = #{dyn_ecg,jdbcType=INTEGER}
		</if>
		<if test="dyn_blood != null and dyn_blood != ''">
		AND hc.dyn_blood = #{dyn_blood,jdbcType=INTEGER}
		</if>
		<if test="bed_ecg_variate != null and bed_ecg_variate != ''">
		AND hc.bed_ecg_variate = #{bed_ecg_variate,jdbcType=INTEGER}
		</if>
		<if test="move_ecg != null and move_ecg != ''">
		AND hc.move_ecg = #{move_ecg,jdbcType=INTEGER}
		</if>
		<if test="heart_vector != null and heart_vector != ''">
		AND hc.heart_vector = #{heart_vector,jdbcType=INTEGER}
		</if>
		<if test="atrial_pcting != null and atrial_pcting != ''">
		AND hc.atrial_pcting = #{atrial_pcting,jdbcType=INTEGER}
		</if>
		<if test="heart_money != null and heart_money != ''">
		AND hc.heart_money = #{heart_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND hc.note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by <!-- hc.group_id, hc.emp_id, -->hc.year_month asc
	</select>
	
</mapper>

