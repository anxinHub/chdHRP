<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.training.HrTrainExamineMapper">
	<resultMap id="hrExam" type="com.chd.hrp.hr.entity.training.exam.HrExam">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_id" column="plan_id"/>
		<result property="train_date" column="train_date"/>
		<result property="train_date_str" column="train_date_str"/>
		<result property="time_begin" column="time_begin"/>
		<result property="time_end" column="time_end"/>
		<result property="train_site" column="train_site"/>
		<result property="exam_way_code" column="exam_way_code"/>
		<result property="note" column="note"/>
	</resultMap>
	<resultMap id="hrBukao" type="com.chd.hrp.hr.entity.training.exam.HrBukao">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_id" column="plan_id"/>
		<result property="exam_date" column="exam_date"/>
		<result property="exam_date_str" column="exam_date_str"/>
		<result property="time_begin" column="time_begin"/>
		<result property="time_end" column="time_end"/>
		<result property="exam_site" column="exam_site"/>
		<result property="exam_way_code" column="exam_way_code"/>
		<result property="emp_num" column="emp_num"/>
	</resultMap>
	<resultMap id="hrTrainCert" type="com.chd.hrp.hr.entity.training.exam.HrTrainCert">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_id" column="plan_id"/>
		<result property="cert_date" column="cert_date"/>
		<result property="cert_date_str" column="cert_date_str"/>
		<result property="cert_name" column="cert_name"/>
		<result property="cert_unit" column="cert_unit"/>
	</resultMap>
	
	<resultMap id="hrExamResult" type="com.chd.hrp.hr.entity.training.exam.HrExamResult">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_id" column="plan_id"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_code" column="emp_code"/>
		<result property="emp_name" column="emp_name"/>
		<result property="kind_name" column="kind_name"/>
		<result property="dept_name" column="dept_name"/>
		<result property="score" column="score"/>
		<result property="is_pass" column="is_pass"/>
		<result property="is_pass_name" column="is_pass_name"/>
		<result property="paper_path" column="paper_path"/>
		<result property="paper_name" column="paper_name"/>
	</resultMap>
	<resultMap id="hrTrainEmpCert" type="com.chd.hrp.hr.entity.training.exam.HrTrainEmpCert">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_id" column="plan_id"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_code" column="emp_code"/>
		<result property="emp_name" column="emp_name"/>
		<result property="kind_name" column="kind_name"/>
		<result property="dept_name" column="dept_name"/>
		<result property="is_give" column="is_give"/>
		<result property="is_give_name" column="is_give_name"/>
		<result property="cert_name" column="cert_name"/>
		<result property="cert_file_name" column="cert_file_name"/>
		<result property="cert_code" column="cert_code"/>
	</resultMap>

	<select id="queryExamByPK" parameterType="java.util.Map" resultMap="hrExam">
		select group_id,
			   hos_id,
			   plan_id,
			   train_date,
			   to_char(train_date, 'yyyy-mm-dd') train_date_str,
			   time_begin,
			   time_end,
			   train_site,
			   exam_way_code,
			   note
		from hr_exam
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</select>

	<select id="queryBukaoByPK" parameterType="java.util.Map" resultMap="hrBukao">
		select group_id,
			   hos_id,
			   plan_id,
			   exam_date,
			   to_char(exam_date, 'yyyy-mm-dd') exam_date_str,
			   time_begin,
			   time_end,
			   exam_site,
			   exam_way_code,
			   nvl(emp_num, 0) emp_num
		from hr_bukao
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</select>
	
	<select id="queryTrainCertByPK" parameterType="java.util.Map" resultMap="hrTrainCert">
		select group_id,
			   hos_id,
			   plan_id,
			   cert_date,
			   to_char(cert_date, 'yyyy-mm-dd') cert_date_str,
			   cert_name,
			   cert_unit
		from HR_TRAIN_CERT
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</select>
	
	<select id="queryExamResult" parameterType="java.util.Map" resultMap="hrExamResult">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t2.emp_name,
			   t3.kind_name,
			   t4.dept_name,
			   t1.score,
			   t1.is_pass,
			   case when t1.is_pass = 1 then '是'
			        when t1.is_pass = 2 then '否'
			   else '' end as is_pass_name,
			   t1.paper_path
		from hr_exam_result t1 
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_emp_kind t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.kind_code = t2.kind_code
		left join hos_dept t4
			   on t4.group_id = t2.group_id
			  and t4.hos_id = t2.hos_id
			  and t4.dept_id = t2.dept_id
		<where>
			<if test="group_id != null and group_id != ''">
				and t1.group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and t1.hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="plan_id != null and plan_id != ''">
				and t1.plan_id = #{plan_id, jdbcType=INTEGER}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and t1.emp_id = #{emp_id, jdbcType=INTEGER}
			</if>
			<if test="kind_code != null and kind_code != ''">
				and t3.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and t4.dept_id = #{dept_id, jdbcType=INTEGER}
			</if>
			<if test="is_pass != null and is_pass != ''">
				and t1.is_pass = #{is_pass, jdbcType=INTEGER}
			</if>
		</where>
		order by t2.emp_code
	</select>
	
	<select id="queryExamResultEmpData" parameterType="java.util.Map" resultMap="hrExamResult">
		select t3.emp_id,
		       t4.emp_code,
		       t4.emp_name,
		       t5.dept_name,
		       t6.kind_name
		from (
		select t1.group_id,
		       t1.hos_id,
		       t1.plan_id,
		       t1.emp_id
		from hr_train_object t1
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		  and t1.emp_id not in (
		      select emp_id from hr_exam_result
		      where group_id = #{group_id, jdbcType=INTEGER}
		        and hos_id = #{hos_id, jdbcType=INTEGER}
		        and plan_id = #{plan_id, jdbcType=INTEGER}
		  )
		union all
		select t2.group_id,
		       t2.hos_id,
		       t2.plan_id,
		       t2.emp_id
		from hr_exam_result t2
		where t2.group_id = #{group_id, jdbcType=INTEGER}
		  and t2.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t2.plan_id = #{plan_id, jdbcType=INTEGER}
		  <if test="is_pass != null and is_pass != ''">
		      and t2.is_pass = #{is_pass, jdbcType=INTEGER}
		  </if>
		  ) t3
		left join hos_emp t4
		       on t4.group_id = t3.group_id
		      and t4.hos_id = t3.hos_id
		      and t4.emp_id = t3.emp_id
		left join hos_dept t5
		       on t5.group_id = t4.group_id
		      and t5.hos_id = t4.hos_id
		      and t5.dept_id = t4.dept_id
		left join hos_emp_kind t6
		       on t6.group_id = t5.group_id
		      and t6.hos_id = t5.hos_id
		      and t6.kind_code = t4.kind_code
		<where>
			<if test="not_in_bukao != null and not_in_bukao != ''">
				<choose>
					<when test="not_in_bukao == 1 or not_in_bukao == '1'">
						and t4.emp_id not in (
							select t0.emp_id from hr_bukao_emp t0
							where t0.group_id = #{group_id, jdbcType=INTEGER}
							  and t0.hos_id = #{hos_id, jdbcType=INTEGER}
							  and t0.plan_id = #{plan_id, jdbcType=INTEGER}
						)
					</when>
				</choose>
			</if>
			<if test="key != null and key != ''">
				and (
					   t4.emp_code like '%' || #{key} || '%'
					or t4.emp_name like '%' || #{key} || '%'
					or t4.spell_code like '%' || upper(#{key}) || '%'
					or t4.wbx_code like '%' || upper(#{key}) || '%'
				)
			</if>
		</where>
		order by t4.emp_code
	</select>
	
	<select id="queryExamBukaoResultEmpData" parameterType="java.util.Map" resultMap="hrExamResult">
		select t.emp_id,
		       t2.emp_code,
		       t2.emp_name,
		       t3.kind_name,
		       t4.dept_name
		from (select t0.* from (
								select t1.group_id,
								       t1.hos_id,
								       t1.plan_id,
								       t1.emp_id
								from hr_exam_result t1 
								where t1.group_id = #{group_id, jdbcType=INTEGER}
								  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
								  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
								  and t1.is_pass = #{is_pass, jdbcType=INTEGER}
								union all
								select t2.group_id,
								       t2.hos_id,
								       t2.plan_id,
								       t2.emp_id
								from hr_bukao_emp t2 
								where t2.group_id = #{group_id, jdbcType=INTEGER}
								  and t2.hos_id = #{hos_id, jdbcType=INTEGER}
								  and t2.plan_id = #{plan_id, jdbcType=INTEGER}
								  and t2.is_pass = #{is_pass, jdbcType=INTEGER}
								) t0
								<where>
									<if test="is_give_cert != null and is_give_cert != ''">
										<choose>
											<when test="is_give_cert == 1 or is_give_cert == '1'">
												t0.emp_id not in (
													select emp_id from hr_train_emp_cert
													where group_id = #{group_id, jdbcType=INTEGER}
													  and hos_id = #{hos_id, jdbcType=INTEGER}
													  and plan_id = #{plan_id, jdbcType=INTEGER}
												)
											</when>
										</choose>
									</if>
								</where>
								group by t0.group_id, t0.hos_id, t0.plan_id, t0.emp_id
			 ) t
		left join hos_emp t2
		       on t2.group_id = t.group_id
		      and t2.hos_id = t.hos_id
		      and t2.emp_id = t.emp_id
		left join hos_emp_kind t3
		       on t3.group_id = t2.group_id
		      and t3.hos_id = t2.hos_id
		      and t3.kind_code = t2.kind_code
		left join hos_dept t4
		       on t4.group_id = t2.group_id
		      and t4.hos_id = t2.hos_id
		      and t4.dept_id = t2.dept_id
		<where>
			<if test="key != null and key != ''">
				and (
					   t2.emp_code like '%' || #{key} || '%'
					or t2.emp_name like '%' || #{key} || '%'
					or t2.spell_code like '%' || upper(#{key}) || '%'
					or t2.wbx_code like '%' || upper(#{key}) || '%'
				)
			</if>
		</where>
		order by t2.emp_code
	</select>
	
	<select id="queryExamResultByPKList" parameterType="java.util.Map" resultMap="hrExamResult">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t2.emp_name,
			   t3.kind_name,
			   t4.dept_name,
			   t1.score,
			   t1.is_pass,
			   case when t1.is_pass = 1 then '是'
			        when t1.is_pass = 2 then '否'
			   else '' end as is_pass_name,
			   t1.paper_path
		from hr_exam_result t1 
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_emp_kind t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.kind_code = t2.kind_code
		left join hos_dept t4
			   on t4.group_id = t2.group_id
			  and t4.hos_id = t2.hos_id
			  and t4.dept_id = t2.dept_id
		<where>
			<foreach collection="list" item="item" separator=" or ">
				(
						t1.group_id = #{item.group_id, jdbcType=INTEGER}
					and t1.hos_id = #{item.hos_id, jdbcType=INTEGER}
					and t1.plan_id = #{item.plan_id, jdbcType=INTEGER}
					and t1.emp_id = #{item.emp_id, jdbcType=INTEGER}
				)
			</foreach>
		</where>
		order by t2.emp_code
	</select>

	<delete id="deleteTrainExam" parameterType="java.util.Map">
		delete from hr_exam
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</delete>

	<insert id="insertTrainExam" parameterType="java.util.Map">
		insert into hr_exam(
			group_id,
			hos_id,
			plan_id,
			train_date,
			time_begin,
			time_end,
			train_site,
			exam_way_code,
			note
		) values (
			#{group_id, jdbcType=INTEGER},
			#{hos_id, jdbcType=INTEGER},
			#{plan_id, jdbcType=INTEGER},
			<choose>
				<when test="train_date != null">
					#{train_date, jdbcType=DATE},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			<choose>
				<when test="time_begin != null and time_begin != ''">
					#{time_begin, jdbcType=VARCHAR},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			<choose>
				<when test="time_end != null and time_end != ''">
					#{time_end, jdbcType=VARCHAR},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			<choose>
				<when test="train_site != null and train_site != ''">
					#{train_site, jdbcType=VARCHAR},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			#{exam_way_code, jdbcType=VARCHAR},
			<choose>
				<when test="note != null and note != ''">
					#{note, jdbcType=VARCHAR}
				</when>
				<otherwise> null </otherwise>
			</choose>
		)
	</insert>
	
	<insert id="insertExamResultBatch" parameterType="java.util.List">
		insert into hr_exam_result(
			group_id,
			hos_id,
			plan_id,
			emp_id,
			score,
			is_pass,
			paper_path
		)
		<foreach collection="list" item="item" separator=" union all ">
			select #{item.group_id, jdbcType=INTEGER},
				   #{item.hos_id, jdbcType=INTEGER},
				   #{item.plan_id, jdbcType=INTEGER},
				   #{item.emp_id, jdbcType=INTEGER},
				   <choose>
				       <when test="item.score != null and item.score != '' or item.score == 0">
				           #{item.score, jdbcType=NUMERIC},
				       </when>
				       <otherwise> null, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.is_pass != null and item.is_pass != ''">
				   			#{item.is_pass, jdbcType=INTEGER},
				       </when>
				       <otherwise> null, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.paper_path != null and item.paper_path != ''">
				           #{item.paper_path, jdbcType=NUMERIC}
				       </when>
				       <otherwise> null </otherwise>
				   </choose>
			from dual
		</foreach>
	</insert>
	
	<delete id="deleteExamResultBatch" parameterType="java.util.Map">
		delete from hr_exam_result
		where
		<foreach collection="list" item="item" separator=" or ">
			(
					group_id = #{item.group_id, jdbcType=INTEGER}
				and hos_id = #{item.hos_id, jdbcType=INTEGER}
				and plan_id = #{item.plan_id, jdbcType=INTEGER}
				and emp_id = #{item.emp_id, jdbcType=INTEGER}
			)
		</foreach>
	</delete>
	
	<update id="updateExamResult" parameterType="java.util.Map">
		update hr_exam_result
		<trim prefix="SET" suffixOverrides=","> 
			<if test="score != null and score != '' or score == 0">
				score = #{score, jdbcType=NUMERIC},
			</if>
			<if test="is_pass != null and is_pass != ''">
				is_pass = #{is_pass, jdbcType=INTEGER},
			</if>
			<if test="paper_path != null and paper_path != ''">
				paper_path = #{paper_path, jdbcType=VARCHAR},
			</if>
		</trim>
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
		  and emp_id = #{emp_id, jdbcType=INTEGER}
	</update>
	
	<update id="updateExamResultBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" open="begin" close=";end;" separator=";">
			update hr_exam_result
			<trim prefix="SET" suffixOverrides=","> 
				<if test="item.score != null and item.score != '' or item.score == 0">
					score = #{item.score, jdbcType=NUMERIC},
				</if>
				<if test="item.is_pass != null and item.is_pass != ''">
					is_pass = #{item.is_pass, jdbcType=INTEGER},
				</if>
				<if test="item.paper_path != null and item.paper_path != ''">
					paper_path = #{item.paper_path, jdbcType=VARCHAR},
				</if>
			</trim>
			where group_id = #{item.group_id, jdbcType=INTEGER}
			  and hos_id = #{item.hos_id, jdbcType=INTEGER}
			  and plan_id = #{item.plan_id, jdbcType=INTEGER}
			  and emp_id = #{item.emp_id, jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="updateBukaoEmp" parameterType="java.util.Map">
		update hr_bukao_emp
		<trim prefix="SET" suffixOverrides=","> 
			<if test="score != null and score != '' or score == 0">
				score = #{score, jdbcType=NUMERIC},
			</if>
			<if test="is_pass != null and is_pass != ''">
				is_pass = #{is_pass, jdbcType=INTEGER},
			</if>
			<if test="paper_path != null and paper_path != ''">
				paper_path = #{paper_path, jdbcType=VARCHAR},
			</if>
		</trim>
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
		  and emp_id = #{emp_id, jdbcType=INTEGER}
	</update>
	
	<update id="updateBukaoEmpBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" open="begin" close=";end;" separator=";">
			update hr_bukao_emp
			<trim prefix="SET" suffixOverrides=","> 
				<if test="item.score != null and item.score != '' or item.score == 0">
					score = #{item.score, jdbcType=NUMERIC},
				</if>
				<if test="item.is_pass != null and item.is_pass != ''">
					is_pass = #{item.is_pass, jdbcType=INTEGER},
				</if>
				<if test="item.paper_path != null and item.paper_path != ''">
					paper_path = #{item.paper_path, jdbcType=VARCHAR},
				</if>
			</trim>
			where group_id = #{item.group_id, jdbcType=INTEGER}
			  and hos_id = #{item.hos_id, jdbcType=INTEGER}
			  and plan_id = #{item.plan_id, jdbcType=INTEGER}
			  and emp_id = #{item.emp_id, jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="updateTrainEmpCert" parameterType="java.util.Map">
		update hr_train_emp_cert
		<trim prefix="SET" suffixOverrides=","> 
			<if test="is_give != null and is_give != '' or is_give == 0">
				is_give = #{is_give, jdbcType=INTEGER},
			</if>
			<if test="cert_path != null and cert_path != ''">
				cert_path = #{cert_path, jdbcType=VARCHAR},
			</if>
			<if test="cert_code != null and cert_code != ''">
				cert_code = #{cert_code, jdbcType=VARCHAR},
			</if>
		</trim>
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
		  and emp_id = #{emp_id, jdbcType=INTEGER}
	</update>
	
	<update id="updateTrainEmpCertBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" open="begin" close=";end;" separator=";">
			update hr_train_emp_cert
			<trim prefix="SET" suffixOverrides=","> 
					plan_id = #{item.plan_id, jdbcType=INTEGER},
				<if test="item.is_give != null and item.is_give != '' or item.is_give == 0">
					is_give = #{item.is_give, jdbcType=INTEGER},
				</if>
				<if test="item.cert_path != null and item.cert_path != ''">
					cert_path = #{item.cert_path, jdbcType=VARCHAR},
				</if>
				<if test="item.cert_code != null and item.cert_code != ''">
					cert_code = #{item.cert_code, jdbcType=VARCHAR},
				</if>
			</trim>
			where group_id = #{item.group_id, jdbcType=INTEGER}
			  and hos_id = #{item.hos_id, jdbcType=INTEGER}
			  and plan_id = #{item.plan_id, jdbcType=INTEGER}
			  and emp_id = #{item.emp_id, jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="deleteTrainBukao" parameterType="java.util.Map">
		delete from hr_bukao
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</delete>
	<insert id="insertTrainBukao" parameterType="java.util.Map">
		insert into hr_bukao(
			group_id,
			hos_id,
			plan_id,
			exam_date,
			time_begin,
			time_end,
			exam_site,
			exam_way_code,
			emp_num
		) values (
			#{group_id, jdbcType=INTEGER},
			#{hos_id, jdbcType=INTEGER},
			#{plan_id, jdbcType=INTEGER},
			#{exam_date, jdbcType=DATE},
			<choose>
				<when test="time_begin != null and time_begin != ''">
					#{time_begin, jdbcType=VARCHAR},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			<choose>
				<when test="time_end != null and time_end != ''">
					#{time_end, jdbcType=VARCHAR},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			<choose>
				<when test="exam_site != null and exam_site != ''">
					#{exam_site, jdbcType=VARCHAR},
				</when>
				<otherwise> null, </otherwise>
			</choose>
			#{exam_way_code, jdbcType=VARCHAR},
			<choose>
				<when test="emp_num != null and emp_num != ''">
					#{emp_num, jdbcType=INTEGER}
				</when>
				<otherwise> null </otherwise>
			</choose>
		)
	</insert>
	
	<select id="queryBukaoEmp" parameterType="java.util.Map" resultMap="hrExamResult">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t2.emp_name,
			   t3.kind_name,
			   t4.dept_name,
			   t1.score,
			   t1.is_pass,
			   case when t1.is_pass = 1 then '是'
			        when t1.is_pass = 2 then '否'
			   else '' end as is_pass_name,
			   t1.paper_path
		from hr_bukao_emp t1 
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_emp_kind t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.kind_code = t2.kind_code
		left join hos_dept t4
			   on t4.group_id = t2.group_id
			  and t4.hos_id = t2.hos_id
			  and t4.dept_id = t2.dept_id
		<where>
			<if test="group_id != null and group_id != ''">
				and t1.group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and t1.hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="plan_id != null and plan_id != ''">
				and t1.plan_id = #{plan_id, jdbcType=INTEGER}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and t1.emp_id = #{emp_id, jdbcType=INTEGER}
			</if>
			<if test="is_pass != null and is_pass != ''">
				and t1.is_pass = #{is_pass, jdbcType=INTEGER}
			</if>
			<if test="kind_code != null and kind_code != ''">
				and t3.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and t4.dept_id = #{dept_id, jdbcType=INTEGER}
			</if>
		</where>
		order by t2.emp_code
	</select>
	
	<delete id="deleteBukaoEmpBatch" parameterType="java.util.List">
		delete from hr_bukao_emp
		where 
		<foreach collection="list" item="item" separator=" or ">
			(
					group_id = #{item.group_id, jdbcType=INTEGER}
				and hos_id = #{item.hos_id, jdbcType=INTEGER}
				and plan_id = #{item.plan_id, jdbcType=INTEGER}
				and emp_id = #{item.emp_id, jdbcType=INTEGER}
			)
		</foreach>
	</delete>
	
	<insert id="insertBukaoEmpBatch" parameterType="java.util.List">
		insert into hr_bukao_emp(
			group_id, hos_id, plan_id, emp_id, score, is_pass, paper_path
		)
		<foreach collection="list" item="item" separator=" union all ">
			select #{item.group_id, jdbcType=INTEGER},
				   #{item.hos_id, jdbcType=INTEGER},
				   #{item.plan_id, jdbcType=INTEGER},
				   #{item.emp_id, jdbcType=INTEGER},
				   <choose>
				       <when test="item.score != null and item.score != '' or item.score == 0">
				           #{item.score, jdbcType=NUMERIC},
				       </when>
				       <otherwise> null, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.is_pass != null and item.is_pass != ''">
						   #{item.is_pass, jdbcType=INTEGER},
				       </when>
				       <otherwise> null, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.paper_path != null and item.paper_path != ''">
				           #{item.paper_path, jdbcType=VARCHAR}
				       </when>
				       <otherwise> null </otherwise>
				   </choose>
			from dual
		</foreach>
	</insert>
	
	<insert id="insertTrainCert" parameterType="java.util.Map">
		insert into hr_train_cert(
			group_id,
			hos_id,
			plan_id,
			cert_date,
			cert_name,
			cert_unit
		) values (
			#{group_id, jdbcType=INTEGER},
			#{hos_id, jdbcType=INTEGER},
			#{plan_id, jdbcType=INTEGER},
			#{cert_date, jdbcType=DATE},
			#{cert_name, jdbcType=VARCHAR},
			#{cert_unit, jdbcType=VARCHAR}
		)
	</insert>
	
	<delete id="deleteTrainCert" parameterType="java.util.Map">
		delete from hr_train_cert
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</delete>
	
	<select id="queryTrainEmpCert" parameterType="java.util.Map" resultMap="hrTrainEmpCert">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t2.emp_name,
			   t3.kind_name,
			   t4.dept_name,
			   t1.cert_path,
			   t1.is_give,
			   case when t1.is_give = 1 then '是'
			        when t1.is_give = 0 then '否'
			   else '' end as is_give_name,
			   t5.cert_name,
			   t1.cert_code
		from hr_train_emp_cert t1
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_emp_kind t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.kind_code = t2.kind_code
		left join hos_dept t4
			   on t4.group_id = t2.group_id
			  and t4.hos_id = t2.hos_id
			  and t4.dept_id = t2.dept_id
		left join hr_train_cert t5
			   on t5.group_id = t1.group_id
			  and t5.hos_id = t1.hos_id
			  and t5.plan_id = t1.plan_id
		<where>
			<if test="group_id != null and group_id != ''">
				and t1.group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and t1.hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="plan_id != null and plan_id != ''">
				and t1.plan_id = #{plan_id, jdbcType=INTEGER}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and t1.emp_id = #{emp_id, jdbcType=INTEGER}
			</if>
			<if test="kind_code != null and kind_code != ''">
				and t2.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and t4.dept_id = #{dept_id, jdbcType=INTEGER}
			</if>
			<if test="is_give != null and is_give != ''">
				and t1.is_give = #{is_give, jdbcType=INTEGER}
			</if>
		</where>
		order by t2.emp_code
	</select>
	
	<insert id="insertTrainEmpCertBatch" parameterType="java.util.List">
		insert into hr_train_emp_cert(
			group_id,
			hos_id,
			plan_id,
			emp_id,
			cert_path,
			is_give,
			cert_code
		) 
		<foreach collection="list" item="item" separator=" union all ">
			select #{item.group_id, jdbcType=INTEGER} groupd_id,
				   #{item.hos_id, jdbcType=INTEGER} hos_id,
				   #{item.plan_id, jdbcType=INTEGER} plan_id,
				   #{item.emp_id, jdbcType=INTEGER} emp_id,
				   <choose>
				       <when test="item.cert_path != null and item.cert_path != ''">
						   #{item.cert_path, jdbcType=VARCHAR} cert_path,
				       </when>
				       <otherwise> null cert_path, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.is_give != null and item.is_give != '' or item.is_give == 0">
						   #{item.is_give, jdbcType=INTEGER} is_give,
				       </when>
				       <otherwise> null is_give, </otherwise>
				   </choose>
				   <choose>
				       <when test="item.cert_code != null and item.cert_code != ''">
						   #{item.cert_code, jdbcType=VARCHAR} cert_code
				       </when>
				       <otherwise> null cert_code </otherwise>
				   </choose>
			from dual
		</foreach>
	</insert>
	
	<delete id="deleteTrainEmpCertBatch" parameterType="java.util.List">
		delete from hr_train_emp_cert
		where 
		<foreach collection="list" item="item" separator=" or ">
			(
					group_id = #{item.group_id, jdbcType=INTEGER}
				and hos_id = #{item.hos_id, jdbcType=INTEGER}
				and plan_id = #{item.plan_id, jdbcType=INTEGER}
				and emp_id = #{item.emp_id, jdbcType=INTEGER}
			)
		</foreach>
	</delete>

	<select id="queryTrainObjByEmpCode" parameterType="java.util.Map" resultType="java.util.Map">
		select t1.emp_id
		from hr_train_object t1
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		  and ltrim(t2.emp_code, '0') = ltrim(#{emp_code, jdbcType=VARCHAR}, '0')
	</select>
	
	<insert id="generateTrainExamCert" parameterType="java.util.Map">
		insert into hr_train_emp_cert(
			group_id,
			hos_id,
			plan_id,
			emp_id,
			is_give
		)
		select t.group_id, 
			   t.hos_id, 
			   t.plan_id, 
			   t.emp_id, 
			   0 is_give
		from (
			select t0.* from (
				select t1.group_id,
					   t1.hos_id,
					   t1.plan_id,
					   t1.emp_id
				from hr_exam_result t1 
				where t1.group_id = #{group_id, jdbcType=INTEGER}
				  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
				  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
				  and t1.is_pass = 1
				union all
				      select t2.group_id,
				             t2.hos_id,
				             t2.plan_id,
				             t2.emp_id
				      from hr_bukao_emp t2 
				      where t2.group_id = #{group_id, jdbcType=INTEGER}
				        and t2.hos_id = #{hos_id, jdbcType=INTEGER}
				        and t2.plan_id = #{plan_id, jdbcType=INTEGER}
				        and t2.is_pass = 1
    		) t0
    		group by t0.group_id, t0.hos_id, t0.plan_id, t0.emp_id
    	) t
	    where t.emp_id not in (select t3.emp_id from hr_train_emp_cert t3 
	    					   where t3.group_id = #{group_id, jdbcType=INTEGER}
          						 and t3.hos_id = #{hos_id, jdbcType=INTEGER}
          						 and t3.plan_id = #{plan_id, jdbcType=INTEGER})
	</insert>
	
	<update id="updateTrainBukao" parameterType="java.util.Map">
		update hr_bukao
		<trim prefix="SET" suffixOverrides=","> 
			<if test="exam_date != null">
				exam_date = #{exam_date, jdbcType=DATE},
			</if>
			<if test="time_begin != null and time_begin != ''">
				time_begin = #{time_begin, jdbcType=VARCHAR},
			</if>
			<if test="time_end != null and time_end != ''">
				time_end = #{time_end, jdbcType=VARCHAR},
			</if>
			<if test="exam_site != null and exam_site != ''">
				exam_site = #{exam_site, jdbcType=VARCHAR},
			</if>
			<if test="exam_way_code != null and exam_way_code != ''">
				exam_way_code = #{exam_way_code, jdbcType=VARCHAR},
			</if>
			<if test="emp_num != null and emp_num != ''">
				emp_num = #{emp_num, jdbcType=INTEGER},
			</if>
		</trim>
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_id = #{plan_id, jdbcType=INTEGER}
	</update>
	
	<insert id="generateBukaoEmpBatch" parameterType="java.util.Map">
		insert into hr_bukao_emp (
			group_id, hos_id, plan_id, emp_id
		)
		select t0.* from (
			select t1.group_id,
				   t1.hos_id,
				   t1.plan_id,
				   t1.emp_id
			from hr_train_object t1
			where t1.group_id = #{group_id, jdbcType=INTEGER}
		      and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		      and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		      and t1.emp_id not in (
		          select t2.emp_id from hr_exam_result t2
		          where t2.group_id = #{group_id, jdbcType=INTEGER}
			        and t2.hos_id = #{hos_id, jdbcType=INTEGER}
			        and t2.plan_id = #{plan_id, jdbcType=INTEGER}
		      )
			union all
			select t3.group_id,
				   t3.hos_id,
				   t3.plan_id,
				   t3.emp_id
			from hr_exam_result t3
			where t3.group_id = #{group_id, jdbcType=INTEGER}
			  and t3.hos_id = #{hos_id, jdbcType=INTEGER}
			  and t3.plan_id = #{plan_id, jdbcType=INTEGER}
			  and t3.is_pass = 2
		) t0
		where t0.emp_id not in (select t4.emp_id from hr_bukao_emp t4
								where t4.group_id = #{group_id, jdbcType=INTEGER}
								  and t4.hos_id = #{hos_id, jdbcType=INTEGER}
								  and t4.plan_id = #{plan_id, jdbcType=INTEGER}
								)
	</insert>
	
	<select id="getTrainEmpCert" parameterType="java.util.Map" resultMap="hrTrainEmpCert">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t2.emp_name,
			   t3.kind_name,
			   t4.dept_name,
			   t1.cert_path,
			   t1.is_give,
			   case when t1.is_give = 1 then '是'
			        when t1.is_give = 0 then '否'
			   else '' end as is_give_name,
			   t5.cert_name,
			   t1.cert_code
		from hr_train_emp_cert t1
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_emp_kind t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.kind_code = t2.kind_code
		left join hos_dept t4
			   on t4.group_id = t2.group_id
			  and t4.hos_id = t2.hos_id
			  and t4.dept_id = t2.dept_id
		left join hr_train_cert t5
			   on t5.group_id = t1.group_id
			  and t5.hos_id = t1.hos_id
			  and t5.plan_id = t1.plan_id
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		  and t1.emp_id = #{emp_id, jdbcType=INTEGER}
	</select>
	
	<select id="getTrainEmpCertMapDZB" parameterType="java.util.Map" resultType="java.util.Map">
		select t2.emp_id as id,
			   t5.train_title,
			   t6.dept_name train_dept,
			   t4.cert_name,
			   t4.cert_unit,
			   to_char(t4.cert_date, 'yyyy-mm-dd') cert_date,
			   t2.emp_name,
			   t3.dept_name emp_dept,
			   t1.cert_code,
			   case 
			       when t8.emp_id is null then to_char(t7.train_date, 'yyyy')
			   else to_char(t9.exam_date, 'yyyy') end exam_date_y,
			   case 
			       when t8.emp_id is null then to_char(t7.train_date, 'mm')
			   else to_char(t9.exam_date, 'mm') end exam_date_m,
			   to_char(t4.cert_date, 'yyyy') cert_date_y,
			   to_char(t4.cert_date, 'mm') cert_date_m
		from hr_train_emp_cert t1
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_dept t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.dept_id = t2.dept_id
		left join hr_train_cert t4
			   on t4.group_id = t1.group_id
			  and t4.hos_id = t1.hos_id
			  and t4.plan_id = t1.plan_id
		left join hr_train_plan t5
			   on t5.group_id = t1.group_id
			  and t5.hos_id = t1.hos_id
			  and t5.plan_id = t1.plan_id
		left join hos_dept t6
			   on t6.group_id = t5.group_id
			  and t6.hos_id = t5.hos_id
			  and t6.dept_id = t5.dept_id
		left join hr_exam t7
			   on t7.group_id = t1.group_id
			  and t7.hos_id = t1.hos_id
			  and t7.plan_id = t1.plan_id
		left join hr_bukao_emp t8
			   on t8.group_id = t1.group_id
			  and t8.hos_id = t1.hos_id
			  and t8.plan_id = t1.plan_id
			  and t8.emp_id = t1.emp_id
		left join hr_bukao t9
	           on t9.group_id = t1.group_id
	          and t9.hos_id = t1.hos_id
	          and t9.plan_id = t1.plan_id
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		  and t1.emp_id in (${emp_ids})
	</select>
	
	<select id="queryTrainEmpCertExistsCertPath" parameterType="java.util.Map" resultMap="hrTrainEmpCert">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t2.emp_name,
			   t3.kind_name,
			   t4.dept_name,
			   t1.cert_path,
			   t1.is_give,
			   case when t1.is_give = 1 then '是'
			        when t1.is_give = 0 then '否'
			   else '' end as is_give_name,
			   t5.cert_name,
			   t1.cert_code
		from hr_train_emp_cert t1
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		left join hos_emp_kind t3
			   on t3.group_id = t2.group_id
			  and t3.hos_id = t2.hos_id
			  and t3.kind_code = t2.kind_code
		left join hos_dept t4
			   on t4.group_id = t2.group_id
			  and t4.hos_id = t2.hos_id
			  and t4.dept_id = t2.dept_id
		left join hr_train_cert t5
			   on t5.group_id = t1.group_id
			  and t5.hos_id = t1.hos_id
			  and t5.plan_id = t1.plan_id
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		  and t1.cert_path is not null
	</select>
	
	<select id="queryMaxCertCode" parameterType="java.util.Map" resultType="java.util.Map">
		select * from (
			select t1.cert_code
			from hr_train_emp_cert t1
			where t1.group_id = #{group_id, jdbcType=INTEGER}
			  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
			  and t1.cert_code is not null
			  and t1.plan_id in (
			  					select t3.plan_id from hr_train_plan t3
			  					where t3.group_id = #{group_id, jdbcType=INTEGER}
			  					  and t3.hos_id = #{hos_id, jdbcType=INTEGER}
			  					  and t3.train_type_code = (
										  					select t2.train_type_code from hr_train_plan t2
										  					where t2.group_id = #{group_id, jdbcType=INTEGER}
										  					  and t2.hos_id = #{hos_id, jdbcType=INTEGER}
										  					  and t2.plan_id = #{plan_id, jdbcType=INTEGER}
			  					  							)
			  					)
			 order by t1.cert_code desc
		) where rownum = 1
	</select>
	
	<select id="queryNotCertCodeData" parameterType="java.util.Map" resultMap="hrTrainEmpCert">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id,
			   t2.emp_code,
			   t1.cert_path,
			   t1.is_give,
			   t1.cert_code
		from hr_train_emp_cert t1
		left join hos_emp t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.emp_id = t1.emp_id
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_id = #{plan_id, jdbcType=INTEGER}
		  and t1.cert_code is null
		order by t2.emp_code
	</select>
	
	<select id="queryTrainObjEmpData" parameterType="java.util.Map" resultMap="hrExamResult">
		select t1.emp_id,
		       t1.emp_code,
		       t1.emp_name,
		       t2.dept_name,
		       t3.kind_code
		from hr_train_object t0
		left join hos_emp t1
		       on t1.group_id = t0.group_id
		      and t1.hos_id = t0.hos_id
		      and t1.emp_id = t0.emp_id
		left join hos_dept t2
		       on t2.group_id = t0.group_id
		      and t2.hos_id = t0.hos_id
		      and t2.dept_id = t1.dept_id
		left join hos_emp_kind t3
		       on t3.group_id = t0.group_id
		      and t3.hos_id = t0.hos_id
		      and t3.kind_code = t1.kind_code
		where t0.group_id = #{group_id, jdbcType=INTEGER}
		  and t0.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t0.plan_id = #{plan_id, jdbcType=INTEGER}
		  <if test="not_in_exam_res != null and not_in_exam_res != ''">
		      <choose>
		          <when test="not_in_exam_res == 1 or not_in_exam_res == '1'">
		              and t0.emp_id not in (
		                  select emp_id from hr_exam_result
		                  where group_id = #{group_id, jdbcType=INTEGER}
						    and hos_id = #{hos_id, jdbcType=INTEGER}
						    and plan_id = #{plan_id, jdbcType=INTEGER}
		              )
		          </when>
		      </choose>
		  </if>
		  <if test="key != null and key != ''">
		      and (
		             t1.emp_code like '%' || #{key} || '%'
		          or t1.emp_name like '%' || #{key} || '%'
		          or t1.spell_code like '%' || upper(#{key}) || '%'
		          or t1.wbx_code like '%' || upper(#{key}) || '%'
		      )
		  </if>
	</select>
	
	<insert id="generateExamResult" parameterType="java.util.Map">
		insert into hr_exam_result (
			group_id,
			hos_id,
			plan_id,
			emp_id
		)
		select t1.group_id, 
			   t1.hos_id, 
			   t1.plan_id, 
			   t1.emp_id
		from hr_train_object t1
		where t1.group_id = #{group_id, jdbcType=INTEGER}
	      and t1.hos_id = #{hos_id, jdbcType=INTEGER}
	      and t1.plan_id = #{plan_id, jdbcType=INTEGER}
	      and t1.emp_id not in (
	          select t2.emp_id from hr_exam_result t2
	          where t2.group_id = #{group_id, jdbcType=INTEGER}
		        and t2.hos_id = #{hos_id, jdbcType=INTEGER}
		        and t2.plan_id = #{plan_id, jdbcType=INTEGER}
	      )
	</insert>
	
	<select id="queryNoPassAndNoExamEmpData" parameterType="java.util.Map" resultMap="hrExamResult">
		select t1.group_id,
			   t1.hos_id,
			   t1.plan_id,
			   t1.emp_id
		from hr_train_object t1
		where t1.group_id = #{group_id, jdbcType=INTEGER}
	      and t1.hos_id = #{hos_id, jdbcType=INTEGER}
	      and t1.plan_id = #{plan_id, jdbcType=INTEGER}
	      and t1.emp_id not in (
	          select t2.emp_id from hr_exam_result t2
	          where t2.group_id = #{group_id, jdbcType=INTEGER}
		        and t2.hos_id = #{hos_id, jdbcType=INTEGER}
		        and t2.plan_id = #{plan_id, jdbcType=INTEGER}
	      )
		union all
		select t3.group_id,
			   t3.hos_id,
			   t3.plan_id,
			   t3.emp_id
		from hr_exam_result t3
		where t3.group_id = #{group_id, jdbcType=INTEGER}
		  and t3.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t3.plan_id = #{plan_id, jdbcType=INTEGER}
		  and t3.is_pass = 2
	</select>
</mapper>