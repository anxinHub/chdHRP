<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.attendancemanagement.scheduling.HrAttendAreaMapper">
<resultMap id="hrAttendArea" type="com.chd.hrp.hr.entity.attendancemanagement.scheduling.HrAttendArea">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_areacode" column="attend_areacode" />
		<result property="attend_area_name" column="attend_area_name" />
		<result property="attend_class_typecode" column="attend_class_typecode"/>
		<result property="attend_class_typename" column="attend_class_typename"/>
		<result property="dept_id" column="dept_id" />
		<result property="dept_name" column="dept_name" />
</resultMap>
<resultMap id="hrAttendAreaMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_areacode" column="attend_areacode" />
		<result property="attend_area_name" column="attend_area_name" />
		<result property="attend_class_typecode" column="attend_class_typecode"/>
		<result property="attend_class_typename" column="attend_class_typename"/>
		<result property="dept_id" column="dept_id" />
		<result property="dept_name" column="dept_name" />
		<result property="pb_gz" column="pb_gz" />
		<result property="db_gz" column="db_gz" />
		<result property="yh_code" column="yh_code" />
</resultMap>
<resultMap id="hrAttendClassMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_classcode" column="attend_classcode" />
		<result property="attend_areacode" column="attend_areacode" />
		<result property="attend_area_name" column="attend_area_name" />
		<result property="attend_areacode" column="attend_areacode" />
		<result property="attend_code" column="attend_code" />
		<result property="attend_name" column="attend_name" />
		<result property="attend_classname" column="attend_classname" />
		<result property="attend_classsname" column="attend_classsname" />
		<result property="attend_class_typecode" column="attend_class_typecode"/>
		<result property="attend_class_typename" column="attend_class_typename"/>
		<result property="attend_begtime1" column="attend_begtime1" />
		<result property="attend_endtime1" column="attend_endtime1" />
		<result property="attend_begtime2" column="attend_begtime2" />
		<result property="attend_endtime2" column="attend_endtime2" />
		<result property="attend_begtime3" column="attend_begtime3" />
		<result property="attend_endtime3" column="attend_endtime3" />
		<result property="attend_days" column="attend_days" />
</resultMap>
<!--增加 -->
	<insert id="add" useGeneratedKeys="true">
		INSERT INTO HR_ATTEND_AREA (
		<trim suffix="" suffixOverrides=",">
			group_id,
			hos_id,
			attend_areacode,
			attend_area_name,
			attend_class_typecode,
			YH_CODE,
			PB_GZ,
			DB_GZ
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{attend_areacode,jdbcType=VARCHAR},
			#{attend_area_name,jdbcType=VARCHAR},
			#{attend_class_typecode,jdbcType=VARCHAR},
			#{field_col_code,jdbcType=VARCHAR},
			#{attend_pbrule,jdbcType=INTEGER},
			#{db_gz,jdbcType=INTEGER}
		</trim>
		)
	</insert>
	<insert id="addBatchDateil" parameterType="java.util.List" >
	
		INSERT INTO HR_ATTEND_AREA_DEPT (
		group_id,
		hos_id,
		attend_areacode,
		dept_id
	
		)(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{map.group_id,jdbcType=INTEGER},
			#{map.hos_id,jdbcType=INTEGER},
			#{map.attend_areacode,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)</insert>
	<select id="queryByCode" resultMap="hrAttendArea" parameterType="java.util.Map">
	select haa.group_id,haa.hos_id,haa.attend_areacode,haa.attend_class_typecode,haa.attend_area_name,pb_gz,db_gz,yh_code from HR_ATTEND_AREA haa 
		<where>                     
	
		AND haa.group_id = #{group_id,jdbcType=INTEGER}
	
		AND haa.hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND haa.attend_areacode =  #{attend_areacode,jdbcType=VARCHAR}
	
		</where>  
	
	</select>
	<select id="queryByCodeArea" resultMap="hrAttendArea" parameterType="java.util.Map">
	select haa.group_id,haa.hos_id,haa.attend_areacode,haa.attend_class_typecode,haa.attend_area_name from HR_ATTEND_AREA haa 
		<where>                     
	
		AND haa.group_id = #{group_id,jdbcType=INTEGER}
	
		AND haa.hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND (haa.attend_areacode =  #{attend_areacode,jdbcType=VARCHAR}
		or  attend_area_name = #{attend_area_name,jdbcType=VARCHAR} )
		</where>  
	</select>
	
	
		<select id="queryByCodeAreaByName" resultMap="hrAttendArea" parameterType="java.util.Map">
	select haa.group_id,haa.hos_id,haa.attend_areacode,haa.attend_class_typecode,haa.attend_area_name from HR_ATTEND_AREA haa 
		<where>                     
	
		AND haa.group_id = #{group_id,jdbcType=INTEGER}
	
		AND haa.hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND haa.attend_areacode !=  #{attend_areacode,jdbcType=VARCHAR}
	    AND  attend_area_name = #{attend_area_name,jdbcType=VARCHAR} 
		</where>  
	</select>
	<update id="update" parameterType="java.util.Map">
		update HR_ATTEND_AREA

		<trim prefix="SET" suffixOverrides=",">
		    attend_areacode=#{attend_areacode,jdbcType=VARCHAR},
			attend_area_name = #{attend_area_name,jdbcType=VARCHAR},
			attend_class_typecode= #{attend_class_typecode,jdbcType=VARCHAR},
			PB_GZ = #{attend_pbrule,jdbcType=INTEGER},
			DB_GZ = #{db_gz,jdbcType=INTEGER},
			YH_CODE = #{field_col_code,jdbcType=VARCHAR},
		</trim>
		<where>
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =
			#{hos_id,jdbcType=INTEGER}
			AND attend_areacode =
			#{old_attend_areacode,jdbcType=VARCHAR}

		</where></update>
	<delete id="deleteAttendArea" parameterType="java.util.List">
			<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
	
		DELETE FROM HR_ATTEND_AREA_DEPT 
		where
	
				 group_id = #{item.group_id}
			
				and hos_id = #{item.hos_id}
		
				and attend_areacode = #{item.attend_areacode}
		
		
		</foreach>
	
	</delete>
	<delete id="deleteBatchAttendArea"  parameterType="java.util.List">
			<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
	
		DELETE FROM HR_ATTEND_AREA_DEPT 
		where
	
				 group_id = #{map.group_id}
			
				and hos_id = #{map.hos_id}
		
				and attend_areacode = #{map.attend_areacode}
		
		
		</foreach></delete>
	
	<delete id="deleteBatchArea"  parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
		separator=";" close=";end;">
	DELETE FROM HR_ATTEND_AREA
	where
	group_id = #{item.group_id}
	and hos_id = #{item.hos_id}
	and attend_areacode = #{item.attend_areacode}
			</foreach>
		</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hrAttendArea">
	select haa.attend_areacode,haa.attend_area_name,had.attend_class_typename
	from HR_ATTEND_AREA haa
	left join HR_ATTEND_CLASS_TYPE had on
	haa.attend_class_typecode=had.attend_class_typecode
	and haa.group_id=had.group_id 
	and haa.hos_id=had.hos_id
	left join HR_ATTEND_AREA_DEPT haad on
	haa.attend_areacode=haad.attend_areacode
	and haa.group_id=haad.group_id 
	and haa.hos_id=haad.hos_id
	<where>
	<if test="group_id != null and group_id != ''">
		AND haa.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND haa.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="attend_areacode != null and attend_areacode != ''">
			and (
		   			haa.attend_area_name like '%${attend_areacode}%'
		   			or haa.attend_areacode like '%${attend_areacode}%'
		   		)
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND haad.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
	
	</where>
group by haa.attend_areacode, haa.attend_area_name, had.attend_class_typename
order by haa.attend_areacode
	</select>
	
	<select id="queryAttendAreaByPrint" parameterType="java.util.Map" resultType="java.util.Map">
	select haa.attend_areacode,haa.attend_area_name,had.attend_class_typename
	from HR_ATTEND_AREA haa
	left join HR_ATTEND_CLASS_TYPE had on
	haa.attend_class_typecode=had.attend_class_typecode
	and haa.group_id=had.group_id 
	and haa.hos_id=had.hos_id
	left join HR_ATTEND_AREA_DEPT haad on
	haa.attend_areacode=haad.attend_areacode
	and haa.group_id=haad.group_id 
	and haa.hos_id=haad.hos_id
	<where>
	<if test="group_id != null and group_id != ''">
		AND haa.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND haa.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="attend_areacode != null and attend_areacode != ''">
			and (
		   			haa.attend_area_name like '%${attend_areacode}%'
		   			or haa.attend_areacode like '%${attend_areacode}%'
		   		)
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND haad.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
	
	</where>
group by haa.attend_areacode, haa.attend_area_name, had.attend_class_typename
order by haa.attend_areacode
	</select>
		<resultMap type="java.util.Map" id="hrpDeptSelectMap">
		<result property="id" column="id" />
		<result property="name" column="text" />
		<result property="pId" column="pId" />
	</resultMap>
	<!-- 部门分类快速查询(cjc) -->
	<select id="queryAreaDept" resultMap="hrpDeptSelectMap">
		select *
		from (
		select t1.DEPT_id dept_id, t1.dept_code id, t1.is_last,t1.DEPT_LEVEL,
		<!-- 树形结构不需要前置的空格 -->
		<!-- lpad(chr(41377), 2 * DEPT_LEVEL - 2, chr(41377)) || -->
		t1.DEPT_code || ' ' || t1.DEPT_NAME as text,
		nvl(t1.super_code, '0') as pId
		from HR_ATTEND_AREA_dept hat
		<if test="dept_source == 1">
		left join HR_DEPT t1
		on hat.dept_id=t1.dept_id
		and hat.group_id=t1.group_id
		and hat.hos_id=t1.hos_id
		</if>
		<if test="dept_source == 2">
		left join HOS_DEPT t1
		on hat.dept_id=t1.dept_id
		and hat.group_id=t1.group_id
		and hat.hos_id=t1.hos_id
		</if>
		where
		hat.group_id = #{group_id}
		and hat.hos_id = #{hos_id}
		<if test="attend_areacode!=null and attend_areacode != ''">
			and hat.attend_areacode=#{attend_areacode}

		</if>
		) t
		<!-- where t.is_last =1 -->
		order by t.dept_id
	</select>
		<select id="queryAreaDeptCheck" resultMap="hrpDeptSelectMap">
		select *
		from (
		select t1.DEPT_id dept_id, t1.dept_code id, t1.is_last,
		<!-- 树形结构不需要前置的空格 -->
		<!-- lpad(chr(41377), 2 * DEPT_LEVEL - 2, chr(41377)) || -->
		t1.DEPT_code || ' ' || t1.DEPT_NAME as text,
		nvl(t1.super_code, '0') as pId
		from HR_ATTEND_AREA_dept hat
		<if test="dept_source == 1">
		left join HR_DEPT_dict t1
		on hat.dept_id=t1.dept_id
		and hat.group_id=t1.group_id
		and hat.hos_id=t1.hos_id
		</if>
		<if test="dept_source == 2">
		left join HOS_DEPT_dict t1
		on hat.dept_id=t1.dept_id
		and hat.group_id=t1.group_id
		and hat.hos_id=t1.hos_id
		</if>
		where
		hat.group_id = #{group_id}
		and hat.hos_id = #{hos_id}
		<if test="attend_areacode!=null and attend_areacode != ''">
			and hat.attend_areacode!=#{attend_areacode}

		</if>
		) t
	</select>
	<select id="queryAreacode" resultType="java.lang.Integer">
		select count(*) from HR_PB ha where
		ha.attend_areacode=#{attend_areacode} and ha.group_id = #{group_id}
		and ha.hos_id = #{hos_id}
	</select>
	<select id="queryAttendArea" parameterType="java.util.Map" resultType="string">
		select distinct a.attend_areacode||'：'||c.attend_area_name from HR_ATTEND_AREA_DEPT a 
		left join HR_ATTEND_AREA c on a.ATTEND_AREACODE=c.ATTEND_AREACODE and a.group_id=c.group_id and a.hos_id=c.hos_id
		where a.group_id = #{map.group_id,jdbcType=INTEGER}  and a.hos_id = #{map.hos_id,jdbcType=INTEGER}
		and a.attend_areacode!=#{map.attend_areacode,jdbcType=VARCHAR}
		AND a.dept_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
				
				<if test="item.dept_id != null and item.dept_id != ''">
				 #{item.dept_id,jdbcType=INTEGER}
				</if>
			</foreach>
	</select>
</mapper>