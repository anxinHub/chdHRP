<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.attendancemanagement.leave.HrTerminateleaveMapper">
	<resultMap id="hrTerminateleave"	type="com.chd.hrp.hr.entity.attendancemanagement.leave.HrTerminateleave">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_xjapply_code" column="attend_xjapply_code" />
		<result property="attend_xxjapply_code" column="attend_xxjapply_code" />
		<result property="attend_xxj_backtime" column="attend_xxj_backtime" />
		<result property="attend_xxjdays" column="attend_xxjdays" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
		<result property="attend_xxjreg_date" column="attend_xxjreg_date"/>
	    <result property="dept_name" column="dept_name"/>
		<result property="attend_xxjbegdate_ampm" column="attend_xxjbegdate_ampm" />
		<result property="attend_xjreg_date" column="attend_xjreg_date" />
		<result property="attend_xjstate" column="attend_xjstate" />
		<result property="attend_xxjstate_name" column="attend_xxjstate_name" />
		<result property="attend_xjloginer" column="attend_xjloginer" />
		<result property="attend_xjloginer_name" column="attend_xjloginer_name" />
		<result property="attend_xxjreg_operdate" column="attend_xxjreg_operdate" />
		<result property="attend_xxj_note" column="attend_xxj_note" />
		<collection property="hrApplyingLeaves" ofType="com.chd.hrp.hr.entity.attendancemanagement.leave.HrApplyingLeaves">
			<result property="group_id" column="group_id" />
			<result property="hos_id" column="hos_id" />
			<result property="attend_xjapply_code" column="attend_xjapply_code" />
			<result property="attend_code" column="attend_code" />
			<result property="attend_name" column="attend_name" />
			<result property="attend_xjreg_date" column="attend_xjreg_date" />
			<result property="emp_id" column="emp_id" />
			<result property="emp_name" column="emp_name" />
			<result property="dept_name" column="dept_name"/>
			<result property="attend_year" column="attend_year" />
			<result property="attend_xjbegdate" column="attend_xjbegdate" />
			<result property="attend_xjenddate" column="attend_xjenddate" />
			<result property="attend_xjdays" column="attend_xjdays" />
			<result property="attend_xjstate" column="attend_xjstate" />
			<result property="attend_xjstate_name" column="attend_xjstate_name" />
			<result property="attend_xjloginer" column="attend_xjloginer" />
			<result property="attend_xjloginer_name" column="attend_xjloginer_name" />
			<result property="attend_xjreg_operdate" column="attend_xjreg_operdate" />
			<result property="attend_xjreviewer" column="attend_xjreviewer" />
			<result property="attend_xjreviewer_name" column="attend_xjreviewer_name" />
			<result property="attend_xjreg_reviewdate" column="attend_xjreg_reviewdate" />
			<result property="attend_xj_reason" column="attend_xj_reason" />
			<result property="attend_xjcheck_state" column="attend_xjcheck_state" />
			<result property="attend_xjcheck_state_name" column="attend_xjcheck_state_name" />
			<result property="attend_xjchecker" column="attend_xjchecker" />
			<result property="attend_xjchecker_name" column="attend_xjchecker_name" />
			<result property="attend_xjcheckdate" column="attend_xjcheckdate" />
			<result property="attend_xj_add" column="attend_xj_add" />
			<result property="attend_xj_add_name" column="attend_xj_add_name" />
		</collection>
	</resultMap>

	<resultMap id="hrTerminateleaveMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_xxjapply_code" column="attend_xxjapply_code" />
		<result property="attend_xxj_backtime" column="attend_xxj_backtime" />
		<result property="attend_xxjreg_date" column="attend_xxjreg_date"/>
		<result property="attend_xjenddate_ampm" column="attend_xjenddate_ampm"/>
		<result property="attend_xjbegdate_ampm" column="attend_xjbegdate_ampm"/>  
		<result property="attend_xjenddate_ampm_name" column="attend_xjenddate_ampm_name"/>
		<result property="attend_xjbegdate_ampm_name" column="attend_xjbegdate_ampm_name"/>  
		<result property="residue_days" column="residue_days"/>
		<result property="xjdays" column="xjdays"/>
		<result property="attend_xxjdays" column="attend_xxjdays" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
	   <result property="dept_name" column="dept_name"/>
       <result property="sex_name" column="sex_name"/>
		<result property="duty_name" column="duty_name"/>
		<result property="birthplace" column="birthplace"/>
		<result property="birthday" column="birthday"/>
		<result property="attend_ed" column="attend_ed"/>
		<result property="attend_ed_is" column="attend_ed_is"/>
		<result property="photo" column="photo"/>
		<result property="workage" column="workage"/>
		<result property="worktime" column="worktime"/>
		<result property="attend_xxjreg_date" column="attend_xxjreg_date" />
		<result property="attend_xxjstate_name" column="attend_xxjstate_name" />
		<result property="attend_xxjreg_operdate" column="attend_xxjreg_operdate" />
		<result property="attend_xxj_note" column="attend_xxj_note" />
		<result property="attend_xjapply_code" column="attend_xjapply_code" />
		<result property="attend_code" column="attend_code" />
		<result property="attend_name" column="attend_name" />
		<result property="attend_xjreg_date" column="attend_xjreg_date" />
		<result property="attend_year" column="attend_year" />
		<result property="attend_xjbegdate" column="attend_xjbegdate" />
		<result property="attend_xjenddate" column="attend_xjenddate" />
		<result property="attend_xjdays" column="attend_xjdays" />
		<result property="attend_xjstate" column="attend_xjstate" />
		<result property="attend_xjstate_name" column="attend_xjstate_name" />
		<result property="attend_xjloginer" column="attend_xjloginer" />
		<result property="attend_xjloginer_name" column="attend_xjloginer_name" />
		<result property="attend_xjreg_operdate" column="attend_xjreg_operdate" />
		<result property="attend_xjreviewer" column="attend_xjreviewer" />
		<result property="attend_xjreviewer_name" column="attend_xjreviewer_name" />
		<result property="attend_xjreg_reviewdate" column="attend_xjreg_reviewdate" />
		<result property="attend_xj_reason" column="attend_xj_reason" />
		<result property="attend_xjcheck_state" column="attend_xjcheck_state" />
		<result property="attend_xjcheck_state_name" column="attend_xjcheck_state_name" />
		<result property="attend_xjchecker" column="attend_xjchecker" />
		<result property="attend_xjchecker_name" column="attend_xjchecker_name" />
		<result property="attend_xjcheckdate" column="attend_xjcheckdate" />
		<result property="attend_xj_add" column="attend_xj_add" />
		<result property="attend_xxjbegdate_ampm" column="attend_xxjbegdate_ampm" />
		<result property="attend_xj_add_name" column="attend_xj_add_name" />
		
	</resultMap>
	
	<resultMap id="hrApplyingLeaves" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_xjapply_code" column="attend_xjapply_code" />
		<result property="attend_code" column="attend_code" />
		<result property="attend_name" column="attend_name" />
		<result property="attend_xjreg_date" column="attend_xjreg_date" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
		<result property="dept_name" column="dept_name"/>
		<result property="sex_name" column="sex_name"/>
		<result property="duty_name" column="duty_name"/>
		<result property="birthplace" column="birthplace"/>
		<result property="birthday" column="birthday"/>
		<result property="attend_ed" column="attend_ed"/>
		<result property="attend_ed_is" column="attend_ed_is"/>
		<result property="photo" column="photo"/>
		<result property="workage" column="workage"/>
		<result property="worktime" column="worktime"/>
		<result property="xjdays" column="xjdays"/>
		<result property="residue_days" column="residue_days"/>
		<result property="attend_xjbegdate_ampm" column="attend_xjbegdate_ampm"/>
		<result property="attend_xjenddate_ampm_name" column="attend_xjenddate_ampm_name"/>
		<result property="attend_xjenddate_ampm" column="attend_xjenddate_ampm"/>
		<result property="attend_xjbegdate_ampm_name" column="attend_xjbegdate_ampm_name"/>
		<result property="attend_year" column="attend_year" />
		<result property="attend_xjbegdate" column="attend_xjbegdate" />
		<result property="attend_xjenddate" column="attend_xjenddate" />
		<result property="attend_xjdays" column="attend_xjdays" />
		<result property="attend_xjstate" column="attend_xjstate" />
		<result property="attend_xjstate_name" column="attend_xjstate_name" />
		<result property="attend_xjloginer" column="attend_xjloginer" />
		<result property="attend_xjloginer_name" column="attend_xjloginer_name" />
		<result property="attend_xjreg_operdate" column="attend_xjreg_operdate" />
		<result property="attend_xjreviewer" column="attend_xjreviewer" />
		<result property="attend_xjreviewer_name" column="attend_xjreviewer_name" />
		<result property="attend_xjreg_reviewdate" column="attend_xjreg_reviewdate" />
		<result property="attend_xj_reason" column="attend_xj_reason" />
		<result property="attend_xjcheck_state" column="attend_xjcheck_state" />
		<result property="attend_xjcheck_state_name" column="attend_xjcheck_state_name" />
		<result property="attend_xjchecker" column="attend_xjchecker" />
		<result property="attend_xjchecker_name" column="attend_xjchecker_name" />
		<result property="attend_xjcheckdate" column="attend_xjcheckdate" />
		<result property="attend_xj_add2" column="attend_xj_add2" />
		<result property="attend_xj_add2_name" column="attend_xj_add2_name" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="hrSelectMap">
		<result property="id" column="id" />
		<result property="text" column="text" />
		<result property="name" column="name" />
		<result property="label" column="label" />
		<result property="type" column="type" />
		<result property="is_write" column="is_write" />
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true">
		INSERT INTO HR_ATTEND_XXJAPPLY (
			group_id,
			hos_id,
			attend_xxjapply_code,
			attend_xjapply_code
			<if test="attend_xxj_backtime != null and attend_xxj_backtime !='' ">
				,attend_xxj_backtime
			</if>
			<if test="attend_xxjdays != null and attend_xxjdays !='' ">
				,attend_xxjdays
			</if>
			<if test="attend_xxjbegdate_ampm != null and attend_xxjbegdate_ampm !='' ">
				,attend_xxjbegdate_ampm
			</if>
			<if test="attend_xxjreg_date != null and attend_xxjreg_date !='' ">
				,attend_xxjreg_date
			</if>
			<if test="attend_xjstate != null ">
				,attend_xjstate
			</if>
			<if test="attend_xjloginer != null and attend_xjloginer != '' ">
				,attend_xjloginer
			</if>
			<if test="attend_xjreg_operdate != null and attend_xjreg_operdate != '' ">
				,attend_xjreg_operdate
			</if>
			<if test="attend_xxj_note != null  ">
				,attend_xxj_note
			</if>
		    <if test="checker != null and checker !='' ">
				,checker
			</if>
			<if test="check_date != null and check_date !='' ">
				,check_date
			</if>
			<if test="confirmer != null and confirmer !='' ">
				,confirmer
			</if>
			<if test="confirm_date != null and confirm_date !='' ">
				,confirm_date
			</if>
			<if test="back_reason != null">
				,back_reason
			</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{attend_xxjapply_code,jdbcType=VARCHAR},
			#{attend_xjapply_code,jdbcType=VARCHAR}
			<if test="attend_xxj_backtime != null and attend_xxj_backtime !='' ">
				,to_date(#{attend_xxj_backtime},'YYYY/MM/DD')
			</if>
			<if test="attend_xxjdays != null and attend_xxjdays !='' ">
				,#{attend_xxjdays,jdbcType=INTEGER}
			</if>
			<if test="attend_xxjbegdate_ampm != null and attend_xxjbegdate_ampm !='' ">
				,#{attend_xxjbegdate_ampm,jdbcType=INTEGER}
			</if>
			<if test="attend_xxjreg_date != null and attend_xxjreg_date !='' ">
				,to_date(#{attend_xxjreg_date},'YYYY/MM/DD')
			</if>
			<if test="attend_xjstate != null  ">
				,#{attend_xjstate,jdbcType=INTEGER}
			</if>
			<if test="attend_xjloginer != null and attend_xjloginer != '' ">
				,#{attend_xjloginer,jdbcType=INTEGER}
			</if>
			<if test="attend_xjreg_operdate != null and attend_xjreg_operdate != '' ">
				,to_date(#{attend_xjreg_operdate},'YYYY/MM/DD')
			</if>
			<if test="attend_xxj_note != null ">
				,#{attend_xxj_note,jdbcType=VARCHAR}
			</if>
		    <if test="checker != null and checker !='' ">
				,#{checker,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date !='' ">
				,#{check_date,jdbcType=DATE}
			</if>
			<if test="confirmer != null and confirmer !='' ">
				,#{confirmer,jdbcType=INTEGER}
			</if>
			<if test="confirm_date != null and confirm_date !='' ">
				,#{confirm_date,jdbcType=DATE}
			</if>
			<if test="back_reason != null  ">
				,#{back_reason,jdbcType=VARCHAR}
			</if>
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO HR_ATTEND_XXJAPPLY (
				group_id,
				hos_id,
				attend_xxjapply_code,
				attend_xjapply_code
				<if test="item.attend_xxj_backtime != null and item.attend_xxj_backtime !='' ">
					,attend_xxj_backtime
				</if>
				<if test="item.attend_xxjdays != null and item.attend_xxjdays !='' ">
					,attend_xxjdays
				</if>
				<if test="item.attend_xxjbegdate_ampm != null and item.attend_xxjbegdate_ampm !='' ">
					,attend_xxjbegdate_ampm
				</if>
				<if test="item.attend_xxjreg_date != null and item.attend_xxjreg_date !='' ">
					,attend_xxjreg_date
				</if>
				<if test="item.attend_xjstate != null  ">
					,attend_xjstate
				</if>
				<if test="item.attend_xjloginer != null and item.attend_xjloginer != '' ">
					,attend_xjloginer
				</if>
				<if test="item.attend_xjreg_operdate != null and item.attend_xjreg_operdate != '' ">
					,attend_xjreg_operdate
				</if>
				<if test="item.attend_xxj_note != null  ">
					,attend_xxj_note
				</if>
			    <if test="item.checker != null and item.checker !='' ">
					,checker
				</if>
				<if test="item.check_date != null and item.check_date !='' ">
					,check_date
				</if>
				<if test="item.confirmer != null and item.confirmer !='' ">
					,confirmer
				</if>
				<if test="item.confirm_date != null and item.confirm_date !='' ">
					,confirm_date
				</if>
				<if test="item.back_reason != null  ">
					,back_reason
				</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.attend_xxjapply_code,jdbcType=VARCHAR},
				#{item.attend_xjapply_code,jdbcType=VARCHAR}
				<if test="item.attend_xxj_backtime != null and item.attend_xxj_backtime !='' ">
					,to_date(#{item.attend_xxj_backtime},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xxjdays != null and item.attend_xxjdays !='' ">
					,#{item.attend_xxjdays,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xxjbegdate_ampm != null and item.attend_xxjbegdate_ampm !='' ">
					,#{item.attend_xxjbegdate_ampm,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xxjreg_date != null and item.attend_xxjreg_date !='' ">
					,to_date(#{item.attend_xxjreg_date},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xjstate != null  ">
					,#{item.attend_xjstate,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjloginer != null and item.attend_xjloginer != '' ">
					,#{item.attend_xjloginer,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjreg_operdate != null and item.attend_xjreg_operdate != '' ">
					,to_date(#{item.attend_xjreg_operdate},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xxj_note != null ">
					,#{item.attend_xxj_note,jdbcType=VARCHAR}
				</if>
			    <if test="item.checker != null and item.checker !='' ">
					,#{item.checker,jdbcType=INTEGER}
				</if>
				<if test="item.check_date != null and item.check_date !='' ">
					,#{item.check_date,jdbcType=DATE}
				</if>
				<if test="item.confirmer != null and item.confirmer !='' ">
					,#{confirmer,jdbcType=INTEGER}
				</if>
				<if test="item.confirm_date != null and item.confirm_date !='' ">
					,#{item.confirm_date,jdbcType=DATE}
				</if>
				<if test="item.back_reason != null  ">
					,#{item.back_reason,jdbcType=VARCHAR}
				</if>
			)
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		update HR_ATTEND_XXJAPPLY set 
			attend_xjapply_code = #{attend_xjapply_code,jdbcType=INTEGER}
			<if test="attend_xxj_backtime != null and attend_xxj_backtime !='' ">
				,attend_xxj_backtime = to_date(#{attend_xxj_backtime},'YYYY/MM/DD')
			</if>
			<if test="attend_xxjdays != null and attend_xxjdays !='' ">
				,attend_xxjdays = #{attend_xxjdays,jdbcType=INTEGER}
			</if>
			<if test="attend_xxjbegdate_ampm != null and attend_xxjbegdate_ampm !='' ">
				,attend_xxjbegdate_ampm = #{attend_xxjbegdate_ampm,jdbcType=INTEGER}
			</if>
			<if test="attend_xxjreg_date != null and attend_xxjreg_date !='' ">
				,attend_xxjreg_date = to_date(#{attend_xxjreg_date},'YYYY/MM/DD')
			</if>
			<if test="attend_xjstate != null ">
				,attend_xjstate = #{attend_xjstate,jdbcType=INTEGER}
			</if>
			<if test="attend_xjloginer != null and attend_xjloginer != '' ">
				,attend_xjloginer = #{attend_xjloginer,jdbcType=INTEGER}
			</if>
			<if test="attend_xjreg_operdate != null and attend_xjreg_operdate != '' ">
				,attend_xjreg_operdate = to_date(#{attend_xjreg_operdate},'YYYY/MM/DD')
			</if>
			<if test="attend_xxj_note != null ">
				,attend_xxj_note = #{attend_xxj_note,jdbcType=VARCHAR}
			</if>
		    <if test="checker != null and checker !='' ">
				,checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date !='' ">
				,check_date = #{check_date,jdbcType=DATE}
			</if>
			<if test="confirmer != null and confirmer !='' ">
				, confirmer = #{confirmer,jdbcType=INTEGER}
			</if>
			<if test="confirm_date != null and confirm_date !='' ">
				,confirm_date = #{confirm_date,jdbcType=DATE}
			</if>
			<if test="back_reason != null  ">
				,back_reason = #{back_reason,jdbcType=VARCHAR}
			</if>
		<where>
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND attend_xxjapply_code = #{attend_xxjapply_code,jdbcType=VARCHAR}
		</where>
	</update>
	
	<update id="updateBatch"  parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update HR_ATTEND_XXJAPPLY set 
				attend_xjapply_code = #{item.attend_xjapply_code,jdbcType=INTEGER}
				<if test="item.attend_xxj_backtime != null and item.attend_xxj_backtime !='' ">
					,attend_xxj_backtime = to_date(#{item.attend_xxj_backtime},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xxjdays != null and item.attend_xxjdays !='' ">
					,attend_xxjdays = #{item.attend_xxjdays,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xxjbegdate_ampm != null and item.attend_xxjbegdate_ampm !='' ">
					,attend_xxjbegdate_ampm = #{item.attend_xxjbegdate_ampm,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xxjreg_date != null and item.attend_xxjreg_date !='' ">
					,attend_xxjreg_date = to_date(#{item.attend_xxjreg_date},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xjstate != null">
					,attend_xjstate = #{item.attend_xjstate,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjloginer != null and item.attend_xjloginer != '' ">
					,attend_xjloginer = #{item.attend_xjloginer,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjreg_operdate != null and item.attend_xjreg_operdate != '' ">
					,attend_xjreg_operdate = to_date(#{item.attend_xjreg_operdate},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xxj_note != null ">
					,attend_xxj_note = #{item.attend_xxj_note,jdbcType=VARCHAR}
				</if>
			    <if test="item.checker != null and item.checker !='' ">
					,checker = #{item.checker,jdbcType=INTEGER}
				</if>
				<if test="item.check_date != null and item.check_date !='' ">
					,check_date = #{item.check_date,jdbcType=DATE}
				</if>
				<if test="item.confirmer != null and item.confirmer !='' ">
					, confirmer = #{item.confirmer,jdbcType=INTEGER}
				</if>
				<if test="item.confirm_date != null and item.confirm_date !='' ">
					,confirm_date = #{item.confirm_date,jdbcType=DATE}
				</if>
				<if test="item.back_reason != null  ">
					,back_reason = #{item.back_reason,jdbcType=VARCHAR}
				</if>
			<where>
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND attend_xxjapply_code = #{item.attend_xxjapply_code,jdbcType=VARCHAR}
			</where>
		</foreach>
	</update>
	
	
	<select id="query" resultType="java.util.Map" parameterType="java.util.Map">
	 	select hax.attend_xjapply_code, hax.attend_xxjapply_code, he.emp_id, he.emp_code,he.emp_name, hd.dept_name,
  		 	hax.attend_xxj_backtime, ha.attend_xjdays, hax.attend_xxjdays, hax.attend_xxjreg_date, hax.attend_xjstate state,hax.attend_xjreg_operdate, 
  		 	ha.attend_xjenddate,ha.attend_year,
  		 	case 
			    when hax.attend_xjstate = 0 then '新建'
			    when hax.attend_xjstate = 1 then '已提交'
			    when hax.attend_xjstate = 2 then '已审核'
			    when hax.attend_xjstate = 3 then '已核定'
    		else ' '
  			end as state_name, 
  			su.user_name attend_xjloginer_name, hax.attend_xxj_note, hax.attend_xxjreg_date, 
  			he2.user_name as checker_name, he2.user_id as checker,hax.check_date,
  			he3.user_name as confirmer_name, he3.user_id as confirmer,hax.confirm_date,
  			hax.back_reason,ha.attend_code,ha.attend_xjbegdate,ha.attend_xjdays,hi.attend_name
		from hr_attend_xxjapply hax
		left join hr_attend_xjapply ha on hax.attend_xjapply_code = ha.attend_xjapply_code
			and hax.group_id = ha.group_id
			and hax.hos_id = ha.hos_id 
		left join hos_emp he on ha.emp_id = he.emp_id
			and ha.group_id = he.group_id
			and ha.hos_id = he.hos_id 
			and he.is_attend = 1 
		<if test="dept_source == 1">
		left join hr_dept hd on he.dept_id = hd.dept_id
			and he.group_id = hd.group_id
			and he.hos_id = ha.hos_id 
		</if>
		<if test="dept_source == 2">
		left join hos_dept hd on he.dept_id = hd.dept_id
			and he.group_id = hd.group_id
			and he.hos_id = ha.hos_id 
		</if>
		left join sys_user su on su.user_id = hax.attend_xjloginer
			and su.group_id = hax.group_id
			and su.hos_id = hax.hos_id 
		left join sys_user he2 on he2.user_id = hax.checker
			and he2.group_id = hax.group_id
			and he2.hos_id = hax.hos_id 
		left join sys_user he3 on he3.user_id = hax.confirmer
			and he3.group_id = hax.group_id
			and he3.hos_id = hax.hos_id
		left join hr_attend_item hi on hi.group_id=ha.group_id and hi.hos_id=ha.hos_id and hi.attend_code=ha.attend_code 
		<where>
			AND hax.group_id = #{group_id,jdbcType=INTEGER}
			AND hax.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
				AND hax.attend_xjapply_code like '%${attend_xjapply_code}%'
			</if>
			<if test="attend_xxjapply_code != null and attend_xxjapply_code != ''">
				AND hax.attend_xxjapply_code like '%${attend_xxjapply_code}%'
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND he.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND he.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="xxjreg_begin_date != null and xxjreg_begin_date != '' and xxjreg_end_date != null and xxjreg_end_date !='' ">
				AND hax.attend_xxjreg_date between to_date(#{xxjreg_begin_date},'YYYY/MM/DD') and to_date(#{xxjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="xjreg_begin_date != null and xjreg_begin_date != '' and xjreg_end_date != null and xjreg_end_date !='' ">
				AND hax.attend_xxjreg_date between to_date(#{xjreg_begin_date},'YYYY/MM/DD') and to_date(#{xjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="state != null and state != ''">
				AND hax.attend_xjstate = #{state,jdbcType=INTEGER}
			</if>
			<if test="audit == 1 ">
				AND hax.attend_xjstate &gt;= 1
			</if>
			and exists (
			select 1
			from sys_user_perm_data b
			where he.group_id = b.group_id
			and he.hos_id = b.hos_id
			and to_char(he.dept_id) = b.perm_code
			and user_id =#{user_id,jdbcType=VARCHAR}
			<if test="dept_source == 1">
			and TABLE_CODE = 'HR_DEPT_DICT'
			</if>
			<if test="dept_source == 2">
			and TABLE_CODE = 'HOS_DEPT_DICT'
			</if>
			and (b.is_read = 1 or b.is_write = 1)
		)
			and he.is_attend = 1 
		</where>
		order by hax.attend_xxjapply_code asc
	</select>
	
	<!-- 此sql用于【考勤管理-休假管理-审核】页面查询,休假申请编号与销假申请编号列的别名做了颠倒
	    yangyunfei
	 -->
	<select id="query2" resultType="java.util.Map" parameterType="java.util.Map">
	 	select hax.attend_xjapply_code as attend_xxjapply_code, hax.attend_xxjapply_code as attend_xjapply_code, he.emp_id, he.emp_code,he.emp_name, hd.dept_name,
  		 	hax.attend_xxj_backtime, ha.attend_xjdays, hax.attend_xxjdays, hax.attend_xxjreg_date, hax.attend_xjstate state,hax.attend_xjreg_operdate, 
  		<!--  	ha.attend_xjenddate, -->
  		 	case 
			    when hax.attend_xjstate = 0 then '新建'
			    when hax.attend_xjstate = 1 then '已提交'
			    when hax.attend_xjstate = 2 then '已审核'
			    when hax.attend_xjstate = 3 then '已核定'
    		else ' '
  			end as state_name, 
  			su.user_name attend_xjloginer_name, hax.attend_xxj_note, hax.attend_xxjreg_date, 
  			he2.user_name as checker_name, he2.user_id as checker,hax.check_date,
  			he3.user_name as confirmer_name, he3.user_id as confirmer,hax.confirm_date,
  			hax.back_reason,ha.attend_code,ha.attend_xjbegdate,ha.attend_xjdays,hi.attend_name
		from hr_attend_xxjapply hax
		left join hr_attend_xjapply ha on hax.attend_xjapply_code = ha.attend_xjapply_code
			and hax.group_id = ha.group_id
			and hax.hos_id = ha.hos_id 
		left join hos_emp he on ha.emp_id = he.emp_id
			and ha.group_id = he.group_id
			and ha.hos_id = he.hos_id 
		left join hos_dept hd on he.dept_id = hd.dept_id
			and he.group_id = hd.group_id
			and he.hos_id = ha.hos_id 
		left join sys_user su on su.user_id = hax.attend_xjloginer
			and su.group_id = hax.group_id
			and su.hos_id = hax.hos_id 
		left join sys_user he2 on he2.user_id = hax.checker
			and he2.group_id = hax.group_id
			and he2.hos_id = hax.hos_id 
		left join sys_user he3 on he3.user_id = hax.confirmer
			and he3.group_id = hax.group_id
			and he3.hos_id = hax.hos_id
		left join hr_attend_item hi on hi.group_id=ha.group_id and hi.hos_id=ha.hos_id and hi.attend_code=ha.attend_code 
		<where>
			AND hax.group_id = #{group_id,jdbcType=INTEGER}
			AND hax.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
				AND hax.attend_xxjapply_code like '%${attend_xjapply_code}%'
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND he.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND he.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="xxjreg_begin_date != null and xxjreg_begin_date != '' and xxjreg_end_date != null and xxjreg_end_date !='' ">
				AND hax.attend_xxjreg_date between to_date(#{xxjreg_begin_date},'YYYY/MM/DD') and to_date(#{xxjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="xjreg_begin_date != null and xjreg_begin_date != '' and xjreg_end_date != null and xjreg_end_date !='' ">
				AND hax.attend_xxjreg_date between to_date(#{xjreg_begin_date},'YYYY/MM/DD') and to_date(#{xjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="state != null and state != ''">
				AND hax.attend_xjstate = #{state,jdbcType=INTEGER}
			</if>
			<if test="audit == 1 ">
				AND hax.attend_xjstate &gt;= 1
			</if>
		</where>
		order by hax.attend_xxjapply_code asc
	</select>
	
	
	<select id="queryByCode" parameterType="java.util.Map" resultMap="hrTerminateleave">
		select haxx.attend_xxjapply_code,
	       haxx.attend_xjapply_code,
	       hx.attend_xjdays,
	       hek.kind_code as kin_code,
	       hek.kind_name as kind_name,
	       t.field_col_code as level_code,
	       t.field_col_name as level_name,
	       t1.field_col_code as sex_code,
	       t1.field_col_name as sex_name,
	       ht.title_code as title_code,
	       ht.title_name as title_name,
	       hd.duty_code as duty_code,
	       hd.duty_name as duty_name,
	       he.photo,
	       he.birthplace,
	       haxx.attend_xjstate
  		from HR_ATTEND_XXJAPPLY haxx
  		left join HR_ATTEND_XJAPPLY hx on haxx.attend_xjapply_code = hx.attend_xjapply_code
   			and haxx.group_id = hx.group_id
   			and haxx.hos_id = hx.hos_id
  		left join hos_emp he on he.emp_id = hx.emp_id
   			and he.group_id = hx.group_id
   			and he.hos_id = hx.hos_id
   		 <if test="dept_source == 1">
   		left join hr_dept hde on he.dept_id = hde.dept_id
   			and he.group_id = hde.group_id
   			and he.hos_id = hde.hos_id
   		</if>
   		 <if test="dept_source == 2">
   		left join hos_dept hde on he.dept_id = hde.dept_id
   			and he.group_id = hde.group_id
   			and he.hos_id = hde.hos_id
   		</if>
  		left join hos_emp he1 on he1.emp_id = hx.ATTEND_XJLOGINER
   			and he1.group_id = hx.group_id
   			and he1.hos_id = hx.hos_id
  		left join HR_ATTEND_ITEM ha on ha.attend_code = hx.attend_code
   			and ha.group_id = hx.group_id
   			and ha.hos_id = hx.hos_id
  		left join HR_HOS_DUTY hhd on he.emp_id = hhd.emp_id
   			and he.group_id = hhd.group_id
   			and he.hos_id = hhd.hos_id
  		left join hos_duty hd on hhd.duty_code = hd.duty_code and hd.group_id = hhd.group_id
   			and hd.hos_id = hhd.hos_id
  		left join HR_EMP_TECHNOLOGY_TITLE het on he.emp_id = het.emp_id
   			and he.group_id = het.group_id
   			and he.hos_id = het.hos_id
  		left join HR_TITLE ht on het.title_code = ht.title_code
   			and ht.group_id = het.group_id
   			and ht.hos_id = het.hos_id
  		left join HR_EMP_PROMOTION hep on he.emp_id = hep.emp_id
   			and he.group_id = hep.group_id
   			and he.hos_id = hep.hos_id
  		left join hr_fiied_data t on hep.level_code = t.field_col_code
		   and t.field_tab_code = 'DIC_LEVEL'
		   and t.group_id = hep.group_id
		   and t.hos_id = hep.hos_id
  		left join HOS_EMP_KIND hek on he.kind_code = hek.kind_code
		   and he.group_id = hek.group_id
		   and he.hos_id = hek.hos_id
  		left join hr_fiied_data t1 on he.sex_code = t1.field_col_code
		   and t1.field_tab_code = 'DIC_SEX'
		   and t1.group_id = he.group_id
		   and t1.hos_id = he.hos_id
  		left join hr_attend_xjed haxj on haxj.attend_code = hx.attend_code
    		and haxj.emp_id=hx.emp_id
   			and haxj.group_id = hx.group_id
   			and haxj.hos_id = hx.hos_id
  		left join HR_ATTEND_XJAPPLY hax on haxj.emp_id = hax.emp_id
   			and haxj.group_id = hax.group_id
   			and haxj.hos_id = hax.hos_id
		<where>                     
			AND haxx.group_id = #{group_id,jdbcType=INTEGER}
			AND haxx.hos_id = #{hos_id,jdbcType=INTEGER}
			AND haxx.attend_xjapply_code =  #{attend_xjapply_code,jdbcType=VARCHAR}
		</where>   
 		group by haxx.attend_xxjapply_code, haxx.attend_xjapply_code,haxx.attend_xxj_note,
 			haxx.attend_xxjbegdate_ampm,haxx.attend_xxjdays, haxx.attend_xxj_backtime, hx.attend_xjapply_code, 
 			hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id, hx.attend_year, hx.ATTEND_XJ_REASON,
  			he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE, hx.attend_xjenddate, hx.attend_xjdays, hx.ATTEND_XJ_REASON,
   			hx.ATTEND_XJBEGDATE_AMPM, hx.ATTEND_XJENDDATE_AMPM, hek.kind_code, hek.kind_name, t.field_col_code, t.field_col_name, 
   			t1.field_col_code, t1.field_col_name, ht.title_code, ht.title_name, hd.duty_code, hd.duty_name, he.photo, he.birthplace, 
   			he.birthday, he.workage, he.worktime, haxj.attend_ed,haxx.attend_xjstate
	</select>
	
	<select id="queryByCodeTerminateleave" parameterType="java.util.Map" resultMap="hrTerminateleaveMap">
		select haxx.attend_xxjapply_code,
			haxx.attend_xjapply_code, 
			to_char(haxx.attend_xxj_backtime, 'yyyy-mm-dd') as attend_xxj_backtime,
       		haxx.attend_xxj_note, 
       		haxx.attend_xxjbegdate_ampm, 
       		haxx.attend_xxjdays, 
       		hx.attend_xjapply_code,
       		hx.attend_code, 
       		ha.attend_name, 
       		to_char(hx.attend_xjreg_date, 'yyyy-mm-dd') as attend_xjreg_date,
       		hx.emp_id, 
       		hx.attend_year, 
       		hx.attend_xj_reason, 
       		hx.attend_xjbegdate_ampm,
       		case
         		when hx.attend_xjbegdate_ampm = 0 then '上午'
         		when hx.attend_xjbegdate_ampm = 1 then '下午'
         	else ' ' 
         	end as attend_xjbegdate_ampm_name,
       		hx.attend_xjenddate_ampm,
       		case 
       			when hx.attend_xjenddate_ampm = 0 then '上午'
         		when hx.attend_xjenddate_ampm = 1 then '下午'
         	else ' ' 
         	end as attend_xjenddate_ampm_name,
       		he.emp_name, hde.dept_name,
	       	to_char(hx.attend_xjbegdate, 'yyyy-mm-dd') as attend_xjbegdate,
	       	to_char(hx.attend_xjenddate, 'yyyy-mm-dd') as attend_xjenddate,
       		hx.attend_xjdays, 
       		hek.kind_code as kin_code, 
       		hek.kind_name as kind_name, 
       		t.field_col_code as level_code,
       		t.field_col_name as level_name, 
       		t1.field_col_code as sex_code, 
       		t1.field_col_name as sex_name,
       		ht.title_code as title_code, 
       		ht.title_name as title_name, 
       		hd.duty_code as duty_code,
       		hd.duty_name as duty_name,
	       	he.photo,
	       	he.birthplace,
	       	to_char(he.birthday, 'yyyy-mm-dd') as birthday,
	       	he.workage,
	       	to_char(he.worktime, 'yyyy-mm-dd') as worktime,
	       	haxj.attend_ed,
       		nvl((
       			select havb.dec_amt + nvl((select sum(h2.attend_xjdays) from hr_attend_xjapply h2
										   where h2.group_id = haxx.group_id
										     and h2.hos_id = haxx.hos_id
										     and h2.attend_code = hx.attend_code
										     and h2.emp_id = hx.emp_id
										     and h2.attend_xjstate in (0, 1, 2)
										     and h2.attend_xjapply_code != haxx.attend_xjapply_code
       									 ), 0) 
				from hr_attend_vacal_balance havb
				where havb.group_id = haxx.group_id
				  and havb.hos_id = haxx.hos_id
				  and havb.emp_id = hx.emp_id
				  and havb.attend_code = hx.attend_code
				  and havb.attend_year = hx.attend_year
				), '0') as xjdays,
			nvl(haxj.attend_ed - nvl((
					       			select havb.dec_amt + nvl((select sum(h2.attend_xjdays) from hr_attend_xjapply h2
															   where h2.group_id = haxx.group_id
															     and h2.hos_id = haxx.hos_id
															     and h2.attend_code = hx.attend_code
															     and h2.emp_id = hx.emp_id
															     and h2.attend_xjstate in (0, 1, 2)
															     and h2.attend_xjapply_code != haxx.attend_xjapply_code
					       									 ), 0) - nvl((
					       									 	select h4.attend_xjdays from hr_attend_xjapply h4
					       									 	where h4.group_id = haxx.group_id
					       									 	  and h4.hos_id = haxx.hos_id
					       									 	  and h4.attend_code = hx.attend_code
					       									 	  and h4.emp_id = hx.emp_id
					       									 	  and h4.attend_xjapply_code = haxx.attend_xjapply_code
					       									 ), 0) + nvl((haxx.attend_xxjdays), 0)
									from hr_attend_vacal_balance havb
									where havb.group_id = haxx.group_id
									  and havb.hos_id = haxx.hos_id
									  and havb.emp_id = hx.emp_id
									  and havb.attend_code = hx.attend_code
									  and havb.attend_year = hx.attend_year
									), '0'), '0') as residue_days,
				haxx.attend_xjstate,
				ha.attend_ed_is
			from HR_ATTEND_XXJAPPLY haxx
			left join HR_ATTEND_XJAPPLY hx
				   on haxx.attend_xjapply_code = hx.attend_xjapply_code
				  and haxx.group_id = hx.group_id
				  and haxx.hos_id = hx.hos_id
			left join hos_emp he
				   on he.emp_id = hx.emp_id
				  and he.group_id = hx.group_id
				  and he.hos_id = hx.hos_id
		 	<if test="dept_source == 1">	  
			left join hr_dept hde
				   on he.dept_id = hde.dept_id
				  and he.group_id = hde.group_id
				  and he.hos_id = hde.hos_id
			 </if>
			 <if test="dept_source == 2">	  
			left join hos_dept hde
				   on he.dept_id = hde.dept_id
				  and he.group_id = hde.group_id
				  and he.hos_id = hde.hos_id
			 </if>
			left join hos_emp he1
				   on he1.emp_id = hx.ATTEND_XJLOGINER
				  and he1.group_id = hx.group_id
				  and he1.hos_id = hx.hos_id
			left join HR_ATTEND_ITEM ha
				   on ha.attend_code = hx.attend_code
				  and ha.group_id = hx.group_id
				  and ha.hos_id = hx.hos_id
			left join hr_attend_xjed haxj
				   on haxj.attend_code = ha.attend_code
				  and haxj.emp_id=hx.emp_id
				  and haxj.group_id = hx.group_id
				  and haxj.hos_id = hx.hos_id
				  and ha.attend_ed_is = 1
			left join HR_HOS_DUTY hhd
				   on he.emp_id = hhd.emp_id
				  and he.group_id = hhd.group_id
				  and he.hos_id = hhd.hos_id
			left join hos_duty hd
				   on hhd.duty_code = hd.duty_code
				  and hd.group_id = hhd.group_id
				  and hd.hos_id = hhd.hos_id
			left join HR_EMP_TECHNOLOGY_TITLE het
				   on he.emp_id = het.emp_id
				  and he.group_id = het.group_id
				  and he.hos_id = het.hos_id
			left join HR_TITLE ht
				   on het.title_code = ht.title_code
				  and ht.group_id = het.group_id
				  and ht.hos_id = het.hos_id
			left join HR_EMP_PROMOTION hep
				   on he.emp_id = hep.emp_id
				  and he.group_id = hep.group_id
				  and he.hos_id = hep.hos_id
			left join hr_fiied_data t
				   on hep.level_code = t.field_col_code
				  and t.field_tab_code = 'DIC_LEVEL'
				  and t.group_id = hep.group_id
				  and t.hos_id = hep.hos_id
			left join HOS_EMP_KIND hek
				   on he.kind_code = hek.kind_code
				  and he.group_id = hek.group_id
				  and he.hos_id = hek.hos_id
			left join hr_fiied_data t1
				   on he.sex_code = t1.field_col_code
				  and t1.field_tab_code = 'DIC_SEX'
				  and t1.group_id = he.group_id
				  and t1.hos_id = he.hos_id
			left join HR_ATTEND_XJAPPLY hax
				   on haxj.emp_id = hax.emp_id
				  and haxj.group_id = hax.group_id
				  and haxj.hos_id = hax.hos_id
		<where>                     
				haxx.group_id = #{group_id,jdbcType=INTEGER}
			AND haxx.hos_id = #{hos_id,jdbcType=INTEGER}
			AND haxx.attend_xxjapply_code =  #{attend_xxjapply_code,jdbcType=VARCHAR}
		</where>   
	 	group by haxx.attend_xxjapply_code, haxx.attend_xjapply_code,haxx.attend_xxj_note,
	 		haxx.attend_xxjbegdate_ampm, haxx.attend_xxjdays, haxx.attend_xxj_backtime, hx.attend_xjapply_code, 
	 		hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id, hx.attend_year, hx.ATTEND_XJ_REASON,
	  		he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE, hx.attend_xjenddate, hx.attend_xjdays,
	  		hx.ATTEND_XJ_REASON, hx.ATTEND_XJBEGDATE_AMPM, hx.ATTEND_XJENDDATE_AMPM, hek.kind_code, hek.kind_name,
	  		t.field_col_code, t.field_col_name, t1.field_col_code, t1.field_col_name, ht.title_code,
	  		ht.title_name, hd.duty_code, hd.duty_name, he.photo, he.birthplace, he.birthday, he.workage,
	  		he.worktime, haxj.attend_ed,haxx.attend_xjstate, haxx.group_id, haxx.hos_id, ha.attend_ed_is
	</select>
	
	<select id="queryApplyCode" parameterType="java.util.Map" resultMap="hrSelectMap">
		select t.attend_xjapply_code as id , t.attend_xjapply_code as text 
		from HR_ATTEND_XJAPPLY t
		where t.group_id = #{group_id}
		   	and t.hos_id = #{hos_id}
		   	and t.attend_xjstate = 3
		   	and not exists (
		   		select 1 from hr_attend_xxjapply t2
		   		where t2.group_id = t.group_id
		   		  and t2.hos_id = t.hos_id
		   		  and t2.attend_xjapply_code = t.attend_xjapply_code
		   		  <if test="attend_xjapply_code != null and attend_xjapply_code != ''">
		   		      and t2.attend_xjapply_code != #{attend_xjapply_code}
		   		  </if>
		   	)
		 order by t.attend_xjapply_code
	</select>
		 
	<select id="queryApplying" resultMap="hrApplyingLeaves" parameterType="java.util.Map">
		select 
			hx.attend_xjapply_code,
			hx.attend_code,
			ha.attend_name,
			to_char(hx.attend_xjreg_date, 'yyyy-mm-dd') as attend_xjreg_date,
			hx.emp_id,
			hx.attend_year,
			hx.attend_xj_reason,
			hx.attend_xjbegdate_ampm,
			case
				when hx.attend_xjbegdate_ampm = 0 then '上午'
				when hx.attend_xjbegdate_ampm = 1 then '下午'
				else ' ' end as attend_xjbegdate_ampm_name,
			hx.attend_xjenddate_ampm,
			case
				when hx.attend_xjenddate_ampm = 0 then '上午'
				when hx.attend_xjenddate_ampm = 1 then '下午'
				else ' ' end as attend_xjenddate_ampm_name,
				he.emp_name,
				hde.dept_name,
			to_char(hx.attend_xjbegdate, 'yyyy-mm-dd') as attend_xjbegdate,
			to_char(hx.attend_xjenddate, 'yyyy-mm-dd') as attend_xjenddate,
			hx.attend_xjdays,
			hek.kind_code as kin_code,
			hek.kind_name as kind_name,
			t.field_col_code as level_code,
			t.field_col_name as level_name,
			t1.field_col_code as sex_code,
			t1.field_col_name as sex_name,
			ht.title_code as title_code,
			ht.title_name as title_name,
			hd.duty_code as duty_code,
			hd.duty_name as duty_name,
			he.photo,
			he.birthplace,
			to_char(he.birthday, 'yyyy-mm-dd') as birthday,
			he.workage,
			to_char(he.worktime, 'yyyy-mm-dd') as worktime,
			haxj.attend_ed,
			nvl((
				select havb.dec_amt - nvl((select sum(h2.attend_xjdays) from HR_ATTEND_XJAPPLY h2
									       where h2.group_id = hx.group_id
									         and h2.hos_id = hx.hos_id
									         and h2.attend_code = hx.attend_code
									         and h2.emp_id = hx.emp_id
									         and h2.attend_xjapply_code != hx.attend_xjapply_code), 0)
				from hr_attend_vacal_balance havb
				where havb.group_id = hx.group_id
				  and havb.hos_id = hx.hos_id
				  and havb.emp_id = hx.emp_id
				  and havb.attend_code = hx.attend_code
				  and havb.attend_year = hx.attend_year
			), '0') as xjdays,<!-- xjdays:已休天数 -->
			nvl(haxj.attend_ed - nvl((
									select havb.dec_amt - nvl((select sum(h2.attend_xjdays) from HR_ATTEND_XJAPPLY h2
														   where h2.group_id = hx.group_id
															 and h2.hos_id = hx.hos_id
															 and h2.attend_code = hx.attend_code
															 and h2.emp_id = hx.emp_id
															 and h2.attend_xjapply_code != hx.attend_xjapply_code), 0)
									from hr_attend_vacal_balance havb
									where havb.group_id = hx.group_id
									  and havb.hos_id = hx.hos_id
									  and havb.emp_id = hx.emp_id
									  and havb.attend_code = hx.attend_code
									  and havb.attend_year = hx.attend_year
									), '0'), '0') as residue_days, <!-- 休假余额 -->
			ha.attend_ed_is
		from HR_ATTEND_XJAPPLY hx
		left join hos_emp he
			   on he.emp_id = hx.emp_id
			  and he.group_id = hx.group_id
			  and he.hos_id = hx.hos_id
		 <if test="dept_source == 1">	  
		left join hr_dept hde
			   on he.dept_id = hde.dept_id
			  and he.group_id = hde.group_id
			  and he.hos_id = hde.hos_id
		</if>
		 <if test="dept_source == 2">	  
		left join hos_dept hde
			   on he.dept_id = hde.dept_id
			  and he.group_id = hde.group_id
			  and he.hos_id = hde.hos_id
		</if>
		left join hos_emp he1
			   on he1.emp_id = hx.ATTEND_XJLOGINER
			  and he1.group_id = hx.group_id
			  and he1.hos_id = hx.hos_id
		left join HR_ATTEND_ITEM ha
			   on ha.attend_code = hx.attend_code
			  and ha.group_id = hx.group_id
			  and ha.hos_id = hx.hos_id
		left join hr_attend_xjed haxj
			   on haxj.attend_code = hx.attend_code
			  and haxj.group_id = hx.group_id
			  and haxj.hos_id = hx.hos_id
			  and haxj.emp_id = hx.emp_id
			  and ha.attend_ed_is = 1
		left join HR_HOS_DUTY hhd
			   on he.emp_id = hhd.emp_id
			  and he.group_id = hhd.group_id
			  and he.hos_id = hhd.hos_id
		left join hos_duty hd
			   on hhd.duty_code = hd.duty_code
			  and hd.group_id = hhd.group_id
			  and hd.hos_id = hhd.hos_id
		left join HR_EMP_TECHNOLOGY_TITLE het
			   on het.emp_id = hx.emp_id
			  and het.group_id = hx.group_id
			  and het.hos_id = hx.hos_id
		left join HR_TITLE ht
			   on het.title_code = ht.title_code
			  and ht.group_id = het.group_id
			  and ht.hos_id = het.hos_id
		left join HR_EMP_PROMOTION hep
			   on he.emp_id = hep.emp_id
			  and he.group_id = hep.group_id
			  and he.hos_id = hep.hos_id
		left join hr_fiied_data t
			   on hep.level_code = t.field_col_code
			  and t.field_tab_code = 'DIC_LEVEL'
			  and t.group_id = hep.group_id
			  and t.hos_id = hep.hos_id
		left join HOS_EMP_KIND hek
			   on he.kind_code = hek.kind_code
			  and he.group_id = hek.group_id
			  and he.hos_id = hek.hos_id
		left join hr_fiied_data t1
			   on he.sex_code = t1.field_col_code
			  and t1.field_tab_code = 'DIC_SEX'
			  and t1.group_id = he.group_id
			  and t1.hos_id = he.hos_id
		<where>                     
				hx.group_id = #{group_id,jdbcType=INTEGER}
			AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
			AND hx.attend_xjapply_code =  #{attend_xjapply_code}
		</where>   
		group by hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id,
	          hx.attend_year, hx.ATTEND_XJ_REASON, he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE,
	          hx.attend_xjenddate, hx.attend_xjdays, hx.ATTEND_XJ_REASON, hx.ATTEND_XJBEGDATE_AMPM, 
	          hx.ATTEND_XJENDDATE_AMPM, hek.kind_code, hek.kind_name, t.field_col_code, t.field_col_name,
	          t1.field_col_code, t1.field_col_name, ht.title_code, ht.title_name, hd.duty_code, hd.duty_name,
	          he.photo, he.birthplace, he.birthday, he.workage, he.worktime, haxj.attend_ed, hx.group_id,
	          hx.hos_id, ha.attend_ed_is
	</select>
		
		<!-- 提交 取消提交 -->
		<update id="confirmTerminateleave"  parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
		UPDATE HR_ATTEND_XXJAPPLY SET
		attend_xjstate = #{item.attend_xjstate,jdbcType=INTEGER},
	  attend_xjloginer=#{item.attend_xjloginer,jdbcType=INTEGER},
	    attend_xjreg_operdate=#{item.attend_xjreg_operdate,jdbcType=DATE}
		where                    
		 group_id = #{item.group_id,jdbcType=INTEGER}
		AND hos_id = #{item.hos_id,jdbcType=INTEGER}
		AND attend_xxjapply_code = #{item.attend_xxjapply_code,jdbcType=VARCHAR}
		AND attend_xjapply_code = #{item.attend_xjapply_code,jdbcType=VARCHAR}
		</foreach>
		</update>
		
		<update id="auditTerminateleave" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE HR_ATTEND_XXJAPPLY SET
			attend_xjstate =#{item.attend_xjstate,jdbcType=INTEGER}
			where
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				<if
				test="item.attend_xxjapply_code != null and item.attend_xxjapply_code != '' ">
				and attend_xxjapply_code = #{item.attend_xxjapply_code}
			</if>
		</foreach>

	</update>
	
		<!-- 更新状态 -->
		<update id="updateXJState" parameterType="java.util.List">
			UPDATE HR_ATTEND_XXJAPPLY SET
					attend_xjstate =#{attend_xjstate,jdbcType=INTEGER}
				<if test="attend_xjloginer !=null ">
					,attend_xjloginer = #{attend_xjloginer,jdbcType=INTEGER}
				</if>
				<if test="attend_xjreg_operdate !=null  ">
					,attend_xjreg_operdate = #{attend_xjreg_operdate,jdbcType=DATE}
				</if>
				<if test="checker !=null ">
					,checker = #{checker,jdbcType=INTEGER}
				</if>
				<if test="check_date !=null  ">
					,check_date = #{check_date,jdbcType=DATE}
				</if>
				<if test="confirmer !=null ">
					,confirmer = #{confirmer,jdbcType=INTEGER}
				</if>
				<if test="confirm_date !=null  ">
					,confirm_date = #{confirm_date,jdbcType=DATE}
				</if>
				<if test="back_reason !=null  ">
					,back_reason = #{back_reason,jdbcType=VARCHAR}
				</if>
				<where>
						group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					and attend_xxjapply_code in (${attend_xxjapply_codes})
				</where>
		</update>
		
	<!-- 休假管理表增加销假数据 -->
	<update id="updateBatchXJHrEmpHoliday" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update hr_emp_holiday set 
				attend_xxjapply_code = #{item.attend_xxjapply_code,jdbcType=VARCHAR},
				attend_xxj_backtime = #{item.attend_xxj_backtime,jdbcType=DATE},
				attend_xxjdays = #{item.attend_xxjdays,jdbcType=INTEGER},
				attend_left_ed = #{item.attend_left_ed,jdbcType=INTEGER}
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and attend_xjapply_code = #{item.attend_xjapply_code,jdbcType=VARCHAR}
			and emp_id = #{item.emp_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="updateXJHrEmpHoliday" parameterType="java.util.Map">
			update hr_emp_holiday set 
				attend_xxjapply_code = #{attend_xxjapply_code,jdbcType=VARCHAR},
				attend_xxj_backtime = #{attend_xxj_backtime,jdbcType=DATE},
				attend_xxjdays = #{attend_xxjdays,jdbcType=INTEGER},
				attend_left_ed = #{attend_left_ed,jdbcType=INTEGER}
			where
				group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and attend_xxjapply_code in (${attend_xxjapply_codes})
	</update>
	
	<!-- 查询剩余休假额度 -->
	<select id="queryXJHrEmpHoliday" parameterType="java.util.Map" resultType="java.util.Map">
		select a.group_id,a.hos_id,b.emp_id,a.attend_xjapply_code,a.attend_xxjapply_code,
			a.attend_xxj_backtime,a.attend_xxjdays,nvl(c.attend_ed,0)-nvl(a.attend_xxjdays,0) as attend_left_ed
		from hr_attend_xxjapply a
		join hr_attend_xjapply b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.attend_xjapply_code=b.attend_xjapply_code
  		left join hr_attend_xjed c on b.group_id = c.group_id and b.hos_id = c.hos_id and b.attend_year = c.attend_year
			and b.emp_id = c.emp_id and b.attend_code = c.attend_code 
		<where>
			and a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.attend_xxjapply_code in (${attend_xxjapply_codes})
		</where>
	</select>
	
	<!-- 休假管理表删除销假数据 -->
	<delete id="deleteXJHrEmpHoliday" parameterType="java.util.Map" >
		delete from hr_emp_holiday
		where group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and attend_xjapply_code in (${attend_xjapply_codes})
	</delete>
	
	<delete id="deleteTerminateleave" parameterType="java.util.Map" >
		delete from hr_attend_xxjapply 
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and attend_xxjapply_code in (${attend_xxjapply_codes})
	</delete>
	
	<!-- 打印 -->
	<select id="queryTerminateleaveByPrint" parameterType="java.util.Map"  resultType="java.util.Map">
		select hax.attend_xjapply_code, hax.attend_xxjapply_code, he.emp_id, he.emp_code,he.emp_name, hd.dept_name,
  		 	hax.attend_xxj_backtime, hax.attend_xxjdays, hax.attend_xxjreg_date, hax.attend_xjstate state,hax.attend_xjreg_operdate, 
  		 	ha.attend_xjenddate,
  		 	case 
			    when hax.attend_xjstate = 0 then '新建'
			    when hax.attend_xjstate = 1 then '已提交'
			    when hax.attend_xjstate = 2 then '已审核'
			    when hax.attend_xjstate = 3 then '已核定'
    		else ' '
  			end as state_name, 
  			su.user_name attend_xjloginer_name, hax.attend_xxj_note, hax.attend_xxjreg_date, 
  			he2.user_name as checker_name, he2.user_id as checker,hax.check_date,
  			he3.user_name as confirmer_name, he3.user_id as confirmer,hax.confirm_date,
  			hax.back_reason,ha.attend_code,ha.attend_xjbegdate,ha.attend_xjdays,hi.attend_name
		from hr_attend_xxjapply hax
		left join hr_attend_xjapply ha on hax.attend_xjapply_code = ha.attend_xjapply_code
			and hax.group_id = ha.group_id
			and hax.hos_id = ha.hos_id 
		left join hos_emp he on ha.emp_id = he.emp_id
			and ha.group_id = he.group_id
			and ha.hos_id = he.hos_id 
		 <if test="dept_source == 1">
		left join hr_dept hd on he.dept_id = hd.dept_id
			and he.group_id = hd.group_id
			and he.hos_id = ha.hos_id 
		</if>
		 <if test="dept_source == 2">
		left join hos_dept hd on he.dept_id = hd.dept_id
			and he.group_id = hd.group_id
			and he.hos_id = ha.hos_id 
		</if>
		left join sys_user su on su.user_id = hax.attend_xjloginer
			and su.group_id = hax.group_id
			and su.hos_id = hax.hos_id 
		left join sys_user he2 on he2.user_id = hax.checker
			and he2.group_id = hax.group_id
			and he2.hos_id = hax.hos_id 
		left join sys_user he3 on he3.user_id = hax.confirmer
			and he3.group_id = hax.group_id
			and he3.hos_id = hax.hos_id
		left join hr_attend_item hi on hi.group_id=ha.group_id and hi.hos_id=ha.hos_id and hi.attend_code=ha.attend_code 
		<where>
			AND hax.group_id = #{group_id,jdbcType=INTEGER}
			AND hax.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
				AND hax.attend_xjapply_code like '%${attend_xjapply_code}%'
			</if>
			<if test="attend_xxjapply_code != null and attend_xxjapply_code != ''">
				AND hax.attend_xxjapply_code like '%${attend_xxjapply_code}%'
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND he.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND he.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="xxjreg_begin_date != null and xxjreg_begin_date != '' and xxjreg_end_date != null and xxjreg_end_date !='' ">
				AND hax.attend_xxjreg_date between to_date(#{xxjreg_begin_date},'YYYY/MM/DD') and to_date(#{xxjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="xjreg_begin_date != null and xjreg_begin_date != '' and xjreg_end_date != null and xjreg_end_date !='' ">
				AND hax.attend_xxjreg_date between to_date(#{xjreg_begin_date},'YYYY/MM/DD') and to_date(#{xjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="state != null and state != ''">
				AND hax.attend_xjstate = #{state,jdbcType=INTEGER}
			</if>
			<if test="audit == 1 ">
				AND hax.attend_xjstate &gt;= 1
			</if>
		</where>
		order by hax.attend_xjapply_code asc
	</select>
	
	<!-- 核定组装结存表数据 -->
	<select id="queryXXjInfo" parameterType="java.util.Map"  resultType="java.util.Map">
		 select b.attend_year attend_year,b.emp_id,b.attend_code,
				(nvl(b.attend_xjdays,0)-nvl(a.attend_xxjdays,0))  dec_amt
			from hr_attend_xxjapply a
			left join hr_attend_xjapply b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.attend_xjapply_code = b.attend_xjapply_code
			where a.group_id = #{group_id,jdbcType=INTEGER}
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.attend_xxjapply_code in (${attend_xxjapply_codes})
				and b.attend_xjstate = 3
	</select>
	
	<!-- 查休假申请的销假申请记录 -->
	<select id="queryXxjapplyByXjapplyCode" resultMap="hrTerminateleaveMap">
		select attend_xjapply_code from hr_attend_xxjapply
		where group_id = #{map.group_id} and hos_id = #{map.hos_id}
		  and (
		      <foreach collection="list" item="item" separator=" or ">
		          attend_xjapply_code = #{item}
		      </foreach>
		  )
	</select>
</mapper>