<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.attendancemanagement.leave.HrApplyingLeavesMapper">

	<resultMap id="hrApplyingLeaves"
		type="com.chd.hrp.hr.entity.attendancemanagement.leave.HrApplyingLeaves">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_xjapply_code" column="attend_xjapply_code" />
		<result property="attend_code" column="attend_code" />
		<result property="attend_name" column="attend_name" />
		<result property="attend_xjreg_date" column="attend_xjreg_date" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
		<result property="dept_name" column="dept_name"/>
		<result property="attend_year" column="attend_year" />
		<result property="attend_ed" column="attend_ed" />
		<result property="attend_ed_is" column="attend_ed_is" />
		<result property="attend_xjbegdate" column="attend_xjbegdate" />
		<result property="attend_xjenddate" column="attend_xjenddate" />
		<result property="attend_xjdays" column="attend_xjdays" />
		<result property="attend_xjstate" column="attend_xjstate" />
		<result property="attend_xjstate_name" column="attend_xjstate_name" />
		<result property="attend_xjloginer" column="attend_xjloginer" />
		<result property="attend_xjloginer_name" column="attend_xjloginer_name" />
		<result property="attend_xjreg_operdate" column="attend_xjreg_operdate" />
		<result property="attend_xjreviewer" column="attend_xjreviewer" />
		<result property="attend_xjreviewer_name" column="attend_xjreviewer_name" />
		<result property="attend_xjreg_reviewdate" column="attend_xjreg_reviewdate" />
		<result property="attend_xj_reason" column="attend_xj_reason" />
		<result property="attend_xjcheck_state" column="attend_xjcheck_state" />
		<result property="attend_xjcheck_state_name" column="attend_xjcheck_state_name" />
		<result property="attend_xjchecker" column="attend_xjchecker" />
		<result property="attend_xjchecker_name" column="attend_xjchecker_name" />
		<result property="attend_xjcheckdate" column="attend_xjcheckdate" />
		<result property="attend_xj_add" column="attend_xj_add" />
		<result property="attend_xj_add_name" column="attend_xj_add_name" />
		<result property="xjdays" column="xjdays" />
	</resultMap>

	<resultMap id="hrApplyingLeavesMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_xjapply_code" column="attend_xjapply_code" />
		<result property="attend_code" column="attend_code" />
		<result property="attend_name" column="attend_name" />
		<result property="attend_xjreg_date" column="attend_xjreg_date" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_name" column="emp_name" />
	   	<result property="dept_name" column="dept_name"/>
		<result property="attend_year" column="attend_year" />
		<result property="attend_ed" column="attend_ed" />
		<result property="attend_xjbegdate" column="attend_xjbegdate" />
		<result property="attend_xjenddate" column="attend_xjenddate" />
		<result property="attend_xjdays" column="attend_xjdays" />
		<result property="attend_xjstate" column="attend_xjstate" />
		<result property="attend_xjstate_name" column="attend_xjstate_name" />
		<result property="attend_xjloginer" column="attend_xjloginer" />
		<result property="attend_xjloginer_name" column="attend_xjloginer_name" />
		<result property="attend_xjreg_operdate" column="attend_xjreg_operdate" />
		<result property="attend_xjreviewer" column="attend_xjreviewer" />
		<result property="attend_xjreviewer_name" column="attend_xjreviewer_name" />
		<result property="attend_xjreg_reviewdate" column="attend_xjreg_reviewdate" />
		<result property="attend_xj_reason" column="attend_xj_reason" />
	    <result property="attend_xjcheck_state" column="attend_xjcheck_state" />
		<result property="attend_xjcheck_state_name" column="attend_xjcheck_state_name" />
		<result property="attend_xjchecker" column="attend_xjchecker" />
		<result property="attend_xjchecker_name" column="attend_xjchecker_name" />
		<result property="attend_xjcheckdate" column="attend_xjcheckdate" />
		<result property="attend_xj_add" column="attend_xj_add" />
		<result property="attend_xj_add_name" column="attend_xj_add_name" />
	</resultMap>

	<!--增加 -->
	<insert id="add" useGeneratedKeys="true">
		INSERT INTO HR_ATTEND_XJAPPLY (
			group_id,
			hos_id,
			attend_xjapply_code,
			emp_id,
			attend_year,
			attend_code
			<if test="attend_xjbegdate !=null and attend_xjbegdate !='' ">
				,attend_xjbegdate
			</if>
			<if test="attend_xjbegdate_ampm !=null ">
				,attend_xjbegdate_ampm
			</if>
			<if test="attend_xjenddate !=null and attend_xjenddate !='' ">
				,attend_xjenddate
			</if>
			<if test="attend_xjenddate_ampm != null  ">
				,attend_xjenddate_ampm
			</if>
			<if test="attend_xjdays != null and attend_xjdays !='' ">
				,attend_xjdays
			</if>
			<if test="attend_xjreg_date != null and attend_xjreg_date !='' ">
				,attend_xjreg_date
			</if>
			<if test="attend_xjstate != null ">
				,attend_xjstate
			</if>
			<if test="attend_xjloginer != null and attend_xjloginer !='' ">
				,attend_xjloginer
			</if>
			<if test="attend_xjreg_operdate != null and attend_xjreg_operdate !='' ">
				,attend_xjreg_operdate
			</if>
			<if test="attend_xj_reason != null and attend_xj_reason !='' ">
				,attend_xj_reason
			</if>
			<if test="attend_xj_add != null and attend_xj_add !='' ">
				,attend_xj_add
			</if>
			<if test="checker != null and checker !='' ">
				,checker
			</if>
			<if test="check_date != null and check_date !='' ">
				,check_date
			</if>
			<if test="confirmer != null and confirmer !='' ">
				,confirmer
			</if>
			<if test="confirm_date != null and confirm_date !='' ">
				,confirm_date
			</if>
			<if test="back_reason != null and back_reason !='' ">
				,back_reason
			</if>
			<if test="cancel_date != null and cancel_date !='' ">
				,cancel_date
			</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{attend_xjapply_code,jdbcType=VARCHAR},
			#{emp_id,jdbcType=INTEGER},
			#{attend_year,jdbcType=VARCHAR},
			#{attend_code,jdbcType=VARCHAR}
			<if test="attend_xjbegdate !=null and attend_xjbegdate !='' ">
				,to_date(#{attend_xjbegdate},'YYYY/MM/DD')
			</if>
			<if test="attend_xjbegdate_ampm != null ">
				,#{attend_xjbegdate_ampm,jdbcType=INTEGER} 
			</if>
			<if test="attend_xjenddate !=null and attend_xjenddate !='' ">
				,to_date(#{attend_xjenddate},'YYYY/MM/DD') 
			</if>
			<if test="attend_xjenddate_ampm != null ">
				,#{attend_xjenddate_ampm,jdbcType=INTEGER}
			</if>
			<if test="attend_xjdays != null and attend_xjdays !='' ">
				,#{attend_xjdays,jdbcType=INTEGER}
			</if>
			<if test="attend_xjreg_date != null and attend_xjreg_date !='' ">
				,to_date(#{attend_xjreg_date},'YYYY/MM/DD') 
			</if>
			<if test="attend_xjstate != null ">
				,#{attend_xjstate,jdbcType=INTEGER}
			</if>
			<if test="attend_xjloginer != null and attend_xjloginer !='' ">
				,#{attend_xjloginer,jdbcType=INTEGER}
			</if>
			<if test="attend_xjreg_operdate != null and attend_xjreg_operdate !='' ">
				,to_date(#{attend_xjreg_operdate},'YYYY/MM/DD') 
			</if>
			<if test="attend_xj_reason != null and attend_xj_reason !='' ">
				,#{attend_xj_reason,jdbcType=VARCHAR}
			</if>
			<if test="attend_xj_add != null and attend_xj_add !='' ">
				,#{attend_xj_add,jdbcType=INTEGER}
			</if>
			<if test="checker != null and checker !='' ">
				,#{checker,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date !='' ">
				,#{check_date,jdbcType=DATE}
			</if>
			<if test="confirmer != null and confirmer !='' ">
				,#{confirmer,jdbcType=INTEGER}
			</if>
			<if test="confirm_date != null and confirm_date !='' ">
				,#{confirm_date,jdbcType=DATE}
			</if>
			<if test="back_reason != null and back_reason !='' ">
				,#{back_reason,jdbcType=VARCHAR}
			</if>
			<if test="cancel_date != null and cancel_date !='' ">
				,#{cancel_date,jdbcType=DATE}
			</if>
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO HR_ATTEND_XJAPPLY (
				group_id,
				hos_id,
				attend_xjapply_code,
				emp_id,
				attend_year,
				attend_code
				<if test="item.attend_xjbegdate !=null and item.attend_xjbegdate !='' ">
					,attend_xjbegdate
				</if>
				<if test="item.attend_xjbegdate_ampm !=null and item.attend_xjbegdate_ampm !='' ">
					,attend_xjbegdate_ampm
				</if>
				<if test="item.attend_xjenddate !=null and item.attend_xjenddate !='' ">
					,attend_xjenddate
				</if>
				<if test="item.attend_xjenddate_ampm != null and item.attend_xjenddate_ampm !='' ">
					,attend_xjenddate_ampm
				</if>
				<if test="item.attend_xjdays != null and item.attend_xjdays !='' ">
					,attend_xjdays
				</if>
				<if test="item.attend_xjreg_date != null and item.attend_xjreg_date !='' ">
					,attend_xjreg_date
				</if>
				<if test="item.attend_xjstate != null ">
					,attend_xjstate
				</if>
				<if test="item.attend_xjloginer != null and item.attend_xjloginer !='' ">
					,attend_xjloginer
				</if>
				<if test="item.attend_xjreg_operdate != null and item.attend_xjreg_operdate !='' ">
					,attend_xjreg_operdate
				</if>
				<if test="item.attend_xj_reason != null and item.attend_xj_reason !='' ">
					,attend_xj_reason
				</if>
				<if test="item.attend_xj_add != null and item.attend_xj_add !='' ">
					,attend_xj_add
				</if>
				<if test="item.checker != null and item.checker !='' ">
					,checker
				</if>
				<if test="item.check_date != null and item.check_date !='' ">
					,check_date
				</if>
				<if test="item.confirmer != null and item.confirmer !='' ">
					,confirmer
				</if>
				<if test="item.confirm_date != null and item.confirm_date !='' ">
					,confirm_date
				</if>
				<if test="item.back_reason != null and item.back_reason !='' ">
					,back_reason
				</if>
				<if test="item.cancel_date != null and item.cancel_date !='' ">
					,cancel_date
				</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.attend_xjapply_code,jdbcType=VARCHAR},
				#{item.emp_id,jdbcType=INTEGER},
				#{item.attend_year,jdbcType=VARCHAR},
				#{item.attend_code,jdbcType=VARCHAR}
				<if test="item.attend_xjbegdate !=null and item.attend_xjbegdate !='' ">
					,to_date(#{item.attend_xjreg_date},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xjbegdate_ampm !=null and item.attend_xjbegdate_ampm !='' ">
					,#{item.attend_xjbegdate_ampm,jdbcType=INTEGER} 
				</if>
				<if test="item.attend_xjenddate !=null and item.attend_xjenddate !='' ">
					,to_date(#{item.attend_xjenddate},'YYYY/MM/DD') 
				</if>
				<if test="item.attend_xjenddate_ampm != null and item.attend_xjenddate_ampm !='' ">
					,#{item.attend_xjenddate_ampm,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjdays != null and item.attend_xjdays !='' ">
					,#{item.attend_xjdays,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjreg_date != null and item.attend_xjreg_date !='' ">
					,to_date(#{item.attend_xjreg_date},'YYYY/MM/DD') 
				</if>
				<if test="item.attend_xjstate != null ">
					,#{item.attend_xjstate,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjloginer != null and item.attend_xjloginer !='' ">
					,#{item.attend_xjloginer,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjreg_operdate != null and item.attend_xjreg_operdate !='' ">
					,to_date(#{item.attend_xjreg_operdate},'YYYY/MM/DD') 
				</if>
				<if test="item.attend_xj_reason != null and item.attend_xj_reason !='' ">
					,#{item.attend_xj_reason,jdbcType=VARCHAR}
				</if>
				<if test="item.attend_xj_add != null and item.attend_xj_add !='' ">
					,#{item.attend_xj_add,jdbcType=INTEGER}
				</if>
				<if test="item.checker != null and item.checker !='' ">
					,#{item.checker,jdbcType=INTEGER}
				</if>
				<if test="item.check_date != null and item.check_date !='' ">
					,#{item.check_date,jdbcType=DATE}
				</if>
				<if test="item.confirmer != null and item.confirmer !='' ">
					,#{item.confirmer,jdbcType=INTEGER}
				</if>
				<if test="item.confirm_date != null and item.confirm_date !='' ">
					,#{item.confirm_date,jdbcType=DATE}
				</if>
				<if test="item.back_reason != null and item.back_reason !='' ">
					,#{item.back_reason,jdbcType=VARCHAR}
				</if>
				<if test="item.cancel_date != null and item.cancel_date !='' ">
					,#{item.cancel_date,jdbcType=DATE}
				</if>
			)
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		update HR_ATTEND_XJAPPLY set 
			emp_id = #{emp_id,jdbcType=INTEGER},
			attend_year = #{attend_year,jdbcType=VARCHAR},
			attend_code = #{attend_code,jdbcType=VARCHAR}
			<if test="attend_xjbegdate !=null and attend_xjbegdate !='' ">
				,attend_xjbegdate =to_date(#{attend_xjbegdate},'YYYY/MM/DD')
			</if>
			<if test="attend_xjbegdate_ampm !=null and attend_xjbegdate_ampm !='' ">
				,attend_xjbegdate_ampm = #{attend_xjbegdate_ampm,jdbcType=INTEGER} 
			</if>
			<if test="attend_xjenddate !=null and attend_xjenddate !='' ">
				,attend_xjenddate = to_date(#{attend_xjenddate},'YYYY/MM/DD') 
			</if>
			<if test="attend_xjenddate_ampm != null and attend_xjenddate_ampm !='' ">
				,attend_xjenddate_ampm = #{attend_xjenddate_ampm,jdbcType=INTEGER}
			</if>
			<if test="attend_xjdays != null and attend_xjdays !='' ">
				,attend_xjdays=#{attend_xjdays,jdbcType=INTEGER}
			</if>
			<if test="attend_xjreg_date != null and attend_xjreg_date !='' ">
				,attend_xjreg_date = to_date(#{attend_xjreg_date},'YYYY/MM/DD') 
			</if>
			<if test="attend_xjstate != null and attend_xjstate != ''">
				,attend_xjstate = #{attend_xjstate,jdbcType=INTEGER}
			</if>
			<if test="attend_xjloginer != null and attend_xjloginer !='' ">
				,attend_xjloginer = #{attend_xjloginer,jdbcType=INTEGER}
			</if>
			<if test="attend_xjreg_operdate != null and attend_xjreg_operdate !='' ">
				,attend_xjreg_operdate = to_date(#{attend_xjreg_operdate},'YYYY/MM/DD') 
			</if>
			,attend_xj_reason = #{attend_xj_reason,jdbcType=VARCHAR}<!-- 休假原因可以为空 -->
			<if test="attend_xj_add != null and attend_xj_add !='' ">
				,attend_xj_add = #{attend_xj_add,jdbcType=INTEGER}
			</if>
			<if test="checker != null and checker !='' ">
				, checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date !='' ">
				,check_date = #{check_date,jdbcType=DATE}
			</if>
			<if test="confirmer != null and confirmer !='' ">
				,confirmer = #{confirmer,jdbcType=INTEGER}
			</if>
			<if test="confirm_date != null and confirm_date !='' ">
				,confirm_date = #{confirm_date,jdbcType=DATE}
			</if>
			<if test="back_reason != null and back_reason !='' ">
				,back_reason = #{back_reason,jdbcType=VARCHAR}
			</if>
			<if test="cancel_date != null and cancel_date !='' ">
				,cancel_date = #{cancel_date,jdbcType=DATE}
			</if>
		<where>
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND attend_xjapply_code = #{attend_xjapply_code,jdbcType=VARCHAR}
		</where>
	</update>
	
	<update id="updateBatch"  parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update HR_ATTEND_XJAPPLY set 
				emp_id = #{item.emp_id,jdbcType=INTEGER},
				attend_year = #{item.attend_year,jdbcType=VARCHAR},
				attend_code = #{item.attend_code,jdbcType=VARCHAR}
				<if test="item.attend_xjbegdate !=null and item.attend_xjbegdate !='' ">
					,attend_xjbegdate =to_date(#{item.attend_xjbegdate},'YYYY/MM/DD')
				</if>
				<if test="item.attend_xjbegdate_ampm !=null and item.attend_xjbegdate_ampm !='' ">
					,attend_xjbegdate_ampm = #{item.attend_xjbegdate_ampm,jdbcType=INTEGER} 
				</if>
				<if test="item.attend_xjenddate !=null and item.attend_xjenddate !='' ">
					,attend_xjenddate = to_date(#{item.attend_xjenddate},'YYYY/MM/DD') 
				</if>
				<if test="item.attend_xjenddate_ampm != null and item.attend_xjenddate_ampm !='' ">
					,attend_xjenddate_ampm = #{attend_xjenddate_ampm,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjdays != null and item.attend_xjdays !='' ">
					,attend_xjdays=#{item.attend_xjdays,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjreg_date != null and item.attend_xjreg_date !='' ">
					,attend_xjreg_date = to_date(#{item.attend_xjreg_date},'YYYY/MM/DD') 
				</if>
				<if test="item.attend_xjstate != null  ">
					,attend_xjstate = #{item.attend_xjstate,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjloginer != null and item.attend_xjloginer !='' ">
					,attend_xjloginer = #{item.attend_xjloginer,jdbcType=INTEGER}
				</if>
				<if test="item.attend_xjreg_operdate != null and item.attend_xjreg_operdate !='' ">
					,attend_xjreg_operdate = to_date(#{item.attend_xjreg_operdate},'YYYY/MM/DD') 
				</if>
				<if test="item.attend_xj_reason != null and item.attend_xj_reason !='' ">
					,attend_xj_reason = #{item.attend_xj_reason,jdbcType=VARCHAR}
				</if>
				<if test="item.attend_xj_add != null and item.attend_xj_add !='' ">
					,attend_xj_add = #{item.attend_xj_add,jdbcType=INTEGER}
				</if>
				<if test="item.checker != null and item.checker !='' ">
					, checker = #{item.checker,jdbcType=INTEGER}
				</if>
				<if test="item.check_date != null and item.check_date !='' ">
					,check_date = #{item.check_date,jdbcType=DATE}
				</if>
				<if test="item.confirmer != null and item.confirmer !='' ">
					,confirmer = #{item.confirmer,jdbcType=INTEGER}
				</if>
				<if test="item.confirm_date != null and item.confirm_date !='' ">
					,confirm_date = #{item.confirm_date,jdbcType=DATE}
				</if>
				<if test="item.back_reason != null and item.back_reason !='' ">
					,back_reason = #{item.back_reason,jdbcType=VARCHAR}
				</if>
				<if test="item.cancel_date != null and item.cancel_date !='' ">
					,cancel_date = #{item.cancel_date,jdbcType=DATE}
				</if>
			<where>
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND attend_xjapply_code = #{item.attend_xjapply_code,jdbcType=VARCHAR}
			</where>
		</foreach>
	</update>
	
	<!-- 提交 取消提交 -->
	<update id="confirmApplyingLeaves"  parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE HR_ATTEND_XJAPPLY SET
				attend_xjstate = #{item.attend_xjstate,jdbcType=INTEGER},
	    		attend_xjloginer=#{item.attend_xjloginer,jdbcType=INTEGER},
	    		attend_xjreg_operdate=#{item.attend_xjreg_operdate,jdbcType=DATE}
			where  group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND attend_xjapply_code = #{item.attend_xjapply_code,jdbcType=VARCHAR}
		</foreach>
	</update>
		
	<select id="query" resultType="java.util.Map" parameterType="java.util.Map">
		select hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.attend_xjreg_date, hx.emp_id,
  		 	he.emp_code,he.emp_name, hd.dept_name, hx.attend_xjbegdate, hx.attend_xjenddate, 
  		 	hx.attend_xjdays, hax.attend_xxjdays,<!--  hx.attend_xjstate, -->
  		 	case 
			    when hx.attend_xjstate = 0 then '新建'
			    when hx.attend_xjstate = 1 then '已提交'
			    when hx.attend_xjstate = 2 then '已审核'
			    when hx.attend_xjstate = 3 then '已核定'
			    when hx.attend_xjstate = 4 then '已作废'
    		else ' '
  			end as state_name, hx.attend_xjstate state,
	  		hx.attend_xjloginer, he1.user_name as attend_xjloginer_name, hx.attend_xjreg_operdate, 
	  		hx.checker,he2.user_name as checker_name, hx.check_date, 
	   		hx.confirmer,he3.user_name as confirmer_name,hx.confirm_date, hx.attend_xj_add,
   			case 
	    		when hx.attend_xj_add = 0 then '否'
	    		when hx.attend_xj_add = 1 then '是'
	    		else ' '
  			end as attend_xj_add_name,hx.back_reason
		from hr_attend_xjapply hx
		left join hr_attend_xxjapply hax
			   on hax.attend_xjapply_code = hx.attend_xjapply_code
			  and hax.group_id = hx.group_id
			  and hax.hos_id = hx.hos_id
		left join hos_emp he
			   on he.emp_id = hx.emp_id
			  and he.group_id = hx.group_id
			  and he.hos_id = hx.hos_id 
			  and he.is_attend = 1 
		<if test="dept_source == 1">	  
		left join hr_dept hd
			   on he.dept_id = hd.dept_id
			  and he.group_id = hd.group_id
			  and he.hos_id = hd.hos_id
		</if> 
		<if test="dept_source == 2">	  
		left join hos_dept hd
			   on he.dept_id = hd.dept_id
			  and he.group_id = hd.group_id
			  and he.hos_id = hd.hos_id
		</if> 
		left join sys_user he1
			   on he1.user_id = hx.attend_xjloginer
			  and he1.group_id = hx.group_id
			  and he1.hos_id = hx.hos_id 
		left join sys_user he2
			   on he2.user_id = hx.checker
			  and he2.group_id = hx.group_id
			  and he2.hos_id = hx.hos_id 
		left join sys_user he3
			   on he3.user_id = hx.confirmer
			  and he3.group_id = hx.group_id
			  and he3.hos_id = hx.hos_id 
		left join HR_ATTEND_ITEM ha
			   on ha.attend_code = hx.attend_code
			  and ha.group_id = hx.group_id
			  and ha.hos_id = hx.hos_id 
		<where>                     
				hx.group_id = #{group_id,jdbcType=INTEGER}
			AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
				AND hx.attend_xjapply_code like '%${attend_xjapply_code}%'
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND hx.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND he.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="attend_code != null and attend_code != ''">
				AND hx.attend_code = #{attend_code,jdbcType=INTEGER}
			</if>
			and he.is_attend = 1 
			<if test="state != null and state != ''">
				AND hx.attend_xjstate = #{state,jdbcType=INTEGER}
			</if>
			<if test="xjreg_begin_date != null and xjreg_begin_date != ''">
				AND hx.attend_xjreg_date between to_date(#{xjreg_begin_date},'YYYY/MM/DD')
				and to_date(#{xjreg_end_date},'YYYY/MM/DD')
			</if>
			<if test="note != null and note != ''">
				AND hx.note = #{note,jdbcType=VARCHAR}
			</if>
			<if test="audit == 1 ">
				AND hx.attend_xjstate &gt;= 1 
				and hx.attend_xjstate != 4
			</if>
			and exists (
			select 1
			from sys_user_perm_data b
			where he.group_id = b.group_id
			and he.hos_id = b.hos_id
			and to_char(he.dept_id) = b.perm_code
			and user_id =#{user_id,jdbcType=VARCHAR}
			<if test="dept_source == 1">
			and TABLE_CODE = 'HR_DEPT_DICT'
			</if>
			<if test="dept_source == 2">
			and TABLE_CODE = 'HOS_DEPT_DICT'
			</if>
			and (b.is_read = 1 or b.is_write = 1)
		)
		</where>   
		order by hx.attend_xjapply_code asc
	</select>
	
	<select id="queryByCode" resultMap="hrApplyingLeaves" parameterType="java.util.Map">
		select hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id,
			hx.attend_year, hx.ATTEND_XJ_REASON, hx.ATTEND_XJBEGDATE_AMPM, hx.ATTEND_XJENDDATE_AMPM, 
  			he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE, hx.attend_xjenddate, hx.attend_xjdays,
			hek.kind_code as kin_code, hek.kind_name as kind_name, t.field_col_code as level_code, 
			t.field_col_name as level_name, t1.field_col_code as sex_code, t1.field_col_name as sex_name, 
			ht.title_code as title_code, ht.title_name as title_name, hd.duty_code as duty_code, 
			hd.duty_name as duty_name, he.photo, he.birthplace, to_char(he.birthday, 'yyyy-mm-dd') as birthday,
			he.workage, to_char(he.worktime, 'yyyy-mm-dd') as worktime, haxj.attend_ed,
			nvl(
				(select havb.dec_amt + nvl((select sum(t1.attend_xjdays) from HR_ATTEND_XJAPPLY t1
										 where t1.group_id = hx.group_id
										   and t1.hos_id = hx.hos_id
										   and t1.emp_id = hx.emp_id
										   and t1.attend_code = hx.attend_code
										   and t1.attend_xjstate in (0, 1, 2)
										   and t1.attend_xjapply_code != hx.attend_xjapply_code
										), 0)
				 from hr_attend_vacal_balance havb
				 where havb.group_id = hx.group_id
				   and havb.hos_id = hx.hos_id
				   and havb.emp_id = hx.emp_id
				   and havb.attend_code = hx.attend_code
				   and havb.attend_year = hx.attend_year), '0') xjdays,<!-- 已休天数（不包含本条结果的休假天数） -->
			nvl((haxj.attend_ed - nvl(
				(select havb.dec_amt + nvl((select sum(t1.attend_xjdays) from HR_ATTEND_XJAPPLY t1
										    where t1.group_id = hx.group_id
										      and t1.hos_id = hx.hos_id
										      and t1.emp_id = hx.emp_id
										      and t1.attend_xjstate in (0, 1, 2)
										      and t1.attend_xjapply_code != hx.attend_xjapply_code
										), 0)
				 from hr_attend_vacal_balance havb
				 where havb.group_id = hx.group_id
				   and havb.hos_id = hx.hos_id
				   and havb.emp_id = hx.emp_id
				   and havb.attend_code = hx.attend_code
				   and havb.attend_year = hx.attend_year), '0')), '0') as residue_days,
 			hx.attend_xjstate,
 			ha.attend_ed_is
 		from HR_ATTEND_XJAPPLY hx
		left join hos_emp he 
		       on he.emp_id = hx.emp_id
			  and he.group_id = hx.group_id
			  and he.hos_id = hx.hos_id 
		<if test="dept_source == 1">	  
		left join hr_dept hde 
		       on he.dept_id = hde.dept_id
			  and he.group_id = hde.group_id
			  and he.hos_id = hde.hos_id 
		 </if>
		 <if test="dept_source == 2">	  
		left join hos_dept hde 
		       on he.dept_id = hde.dept_id
			  and he.group_id = hde.group_id
			  and he.hos_id = hde.hos_id 
		 </if>
		left join hos_emp he1 
		       on he1.emp_id = hx.ATTEND_XJLOGINER
			  and he1.group_id = hx.group_id
			  and he1.hos_id = hx.hos_id 
  		left join HR_ATTEND_ITEM ha 
  		       on ha.attend_code = hx.attend_code
			  and ha.group_id = hx.group_id
			  and ha.hos_id = hx.hos_id 
		left join hr_attend_xjed haxj 
			   on haxj.attend_code=ha.attend_code    
			  and haxj.emp_id=hx.emp_id 
			  and haxj.group_id=hx.group_id 
			  and haxj.hos_id=hx.hos_id 
			  and ha.attend_ed_is = 1
		left join HR_HOS_DUTY hhd 
		       on he.emp_id = hhd.emp_id
			  and he.group_id = hhd.group_id
			  and he.hos_id = hhd.hos_id 
		left join hos_duty hd 
		       on hhd.duty_code = hd.duty_code
			  and hd.group_id = hhd.group_id
			  and hd.hos_id = hhd.hos_id 
		left join HR_EMP_TECHNOLOGY_TITLE het 
		       on he.emp_id = het.emp_id
			  and he.group_id = het.group_id
			  and he.hos_id = het.hos_id 
		left join HR_TITLE ht 
		      on het.title_code = ht.title_code
			  and ht.group_id = het.group_id
			  and ht.hos_id = het.hos_id 
		left join HR_EMP_PROMOTION hep 
		       on he.emp_id = hep.emp_id
			  and he.group_id = hep.group_id
			  and he.hos_id = hep.hos_id 
  		left join hr_fiied_data t 
  		       on hep.level_code = t.field_col_code
			  and t.field_tab_code = 'DIC_LEVEL'
			  and t.group_id = hep.group_id
			  and t.hos_id = hep.hos_id 
		left join HOS_EMP_KIND hek 
		       on he.kind_code=hek.kind_code 
			  and he.group_id = hek.group_id
			  and he.hos_id = hek.hos_id 
 		left join hr_fiied_data t1 
 		       on he.sex_code= t1.field_col_code
			  and t1.field_tab_code = 'DIC_SEX'
			  and t1.group_id = he.group_id
			  and t1.hos_id = he.hos_id
		<where>                     
				hx.group_id = #{group_id,jdbcType=INTEGER}
			AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
			AND hx.attend_xjapply_code =  #{attend_xjapply_code,jdbcType=VARCHAR}
		</where>   
	  	group by hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, 
	  		hx.emp_id,hx.attend_year, hx.ATTEND_XJ_REASON, he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE, 
	  		hx.attend_xjenddate, hx.attend_xjdays, hx.ATTEND_XJ_REASON, hx.ATTEND_XJBEGDATE_AMPM,
	  		hx.ATTEND_XJENDDATE_AMPM, hek.kind_code,hek.kind_name, t.field_col_code, t.field_col_name,
	  		t1.field_col_code, t1.field_col_name, ht.title_code, ht.title_name, hd.duty_code, hd.duty_name,
	  		he.photo, he.birthplace, he.birthday, he.workage, he.worktime,haxj.attend_ed, hx.attend_xjstate,
	  		hx.group_id, hx.hos_id, ha.attend_ed_is
	</select>
		
	<select id="queryByCodeLeaves"  resultMap="hrApplyingLeaves" parameterType="java.util.Map">
select hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id,
	hx.attend_year, hx.ATTEND_XJ_REASON,hx.ATTEND_XJBEGDATE_AMPM,hx.ATTEND_XJENDDATE_AMPM
  , he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE, hx.attend_xjenddate, hx.attend_xjdays
,hek.kind_code as kin_code ,hek.kind_name as kind_name ,t.field_col_code as level_code, 
t.field_col_name as level_name, t1.field_col_code as sex_code , t1.field_col_name as sex_name, 
ht.title_code as title_code, ht.title_name as title_name, hd.duty_code as duty_code, hd.duty_name as duty_name ,
 he.photo,he.birthplace,to_char(he.birthday, 'yyyy-mm-dd') as birthday ,he.workage,to_char(he.worktime, 'yyyy-mm-dd') as worktime,
 haxj.attend_ed ,nvl(sum(hx.attend_xjdays),'0') xjdays
		,(haxj.attend_ed-nvl(sum(hx.attend_xjdays),'0')) as residue_days
 from HR_ATTEND_XJAPPLY hx
left join hos_emp he on he.emp_id = hx.emp_id
and he.group_id = hx.group_id
and he.hos_id = hx.hos_id 
<if test="dept_source == 1">
left join hr_dept hde on he.dept_id = hde.dept_id
and he.group_id = hde.group_id
and he.hos_id = hde.hos_id 
</if>
<if test="dept_source == 2">
left join hos_dept hde on he.dept_id = hde.dept_id
and he.group_id = hde.group_id
and he.hos_id = hde.hos_id 
</if>
left join hos_emp he1 on he1.emp_id = hx.ATTEND_XJLOGINER
and he1.group_id = hx.group_id
and he1.hos_id = hx.hos_id 
  left join HR_ATTEND_ITEM ha on ha.attend_code = hx.attend_code
and ha.group_id = hx.group_id
and ha.hos_id = hx.hos_id 
left join HR_HOS_DUTY hhd on he.emp_id = hhd.emp_id
and he.group_id = hhd.group_id
and he.hos_id = hhd.hos_id 
left join hos_duty hd on hhd.duty_code = hd.duty_code
and hd.group_id = hhd.group_id
and hd.hos_id = hhd.hos_id 
left join HR_EMP_TECHNOLOGY_TITLE het on he.emp_id = het.emp_id
and he.group_id = het.group_id
and he.hos_id = het.hos_id 
left join HR_TITLE ht on het.title_code = ht.title_code
and ht.group_id = het.group_id
and ht.hos_id = het.hos_id 
left join HR_EMP_PROMOTION hep on he.emp_id = hep.emp_id
and he.group_id = hep.group_id
and he.hos_id = hep.hos_id 
  left join hr_fiied_data t on hep.level_code = t.field_col_code
and t.field_tab_code = 'DIC_LEVEL'
and t.group_id = hep.group_id
and t.hos_id = hep.hos_id 
left join HOS_EMP_KIND hek on he.kind_code=hek.kind_code 
and he.group_id = hek.group_id
and he.hos_id = hek.hos_id 
 left join hr_fiied_data t1 on he.sex_code= t1.field_col_code
and t1.field_tab_code = 'DIC_SEX'
and t1.group_id = he.group_id
and t1.hos_id = he.hos_id 

left join hr_attend_xjed haxj on
    haxj.attend_code=hx.attend_code    and haxj.emp_id=hx.emp_id and haxj.group_id=hx.group_id and
    haxj.hos_id=hx.hos_id 
   
		<where>                     
	
		AND hx.group_id = #{group_id,jdbcType=INTEGER}
	
		AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
		and hx.emp_id =#{emp_id,jdbcType=INTEGER}
		and (hx.attend_xjbegdate=to_date(#{attend_xjbegdate},'YYYY/MM/DD')
	    or hx.attend_xjenddate=to_date(#{attend_xjenddate},'YYYY/MM/DD'))
		</where>   
	  group by  hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id,hx.attend_year, hx.ATTEND_XJ_REASON
  , he.emp_name, hde.dept_name, hx.ATTEND_XJBEGDATE, hx.attend_xjenddate, hx.attend_xjdays,hx.ATTEND_XJ_REASON,hx.ATTEND_XJBEGDATE_AMPM,hx.ATTEND_XJENDDATE_AMPM
,hek.kind_code,hek.kind_name  ,t.field_col_code , 
t.field_col_name , t1.field_col_code  , t1.field_col_name , 
ht.title_code , ht.title_name , hd.duty_code, hd.duty_name  ,he.photo,he.birthplace,he.birthday ,he.workage,he.worktime,
 haxj.attend_ed
  </select>
 
	<select id="queryHistroy" resultMap="hrApplyingLeaves" parameterType="java.util.Map">
		select
			hx.attend_xjapply_code,hx.attend_code,ha.attend_name,hx.ATTEND_XJREG_DATE,
			hx.ATTEND_XJBEGDATE,hx.attend_xjenddate,hx.attend_xjdays
		from
			HR_ATTEND_XJAPPLY hx
		left join HR_ATTEND_ITEM ha
			on ha.attend_code = hx.attend_code
		   and ha.group_id = hx.group_id
		   and ha.hos_id = hx.hos_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND hx.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
	
			<if test="emp_id != null and emp_id != ''">
				AND hx.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
				and attend_xjapply_code != #{attend_xjapply_code, jdbcType=VARCHAR}
			</if>
		</where>
		order by hx.attend_xjapply_code asc
	</select>
		
	<resultMap type="java.util.Map" id="AttendSumMap">
		<result property="attend_ed" column="attend_ed" />
		<result property="xjdays" column="xjdays" />
		<result property="residue_days" column="residue_days" />
		<result property="attend_ed_is" column="attend_ed_is" />
	</resultMap>
	
	<select id="queryAttendSum" resultMap="AttendSumMap" parameterType="java.util.Map">
		select 
			hai.attend_ed_is,
			ha.emp_id,
			nvl(
				(select havb.dec_amt + nvl((select sum(h1.ATTEND_XJDAYS) from HR_ATTEND_XJAPPLY h1 
									    where h1.attend_code=#{attend_code,jdbcType=INTEGER} 
									      and h1.emp_id=#{emp_id,jdbcType=INTEGER} 
									      and h1.group_id = #{group_id,jdbcType=INTEGER}
									      and h1.hos_id = #{hos_id,jdbcType=INTEGER}
									      and h1.attend_xjstate in (0, 1, 2)), 0)
				 from hr_attend_vacal_balance havb
				 where havb.group_id = #{group_id, jdbcType=INTEGER}
				   and havb.hos_id = #{hos_id,jdbcType=INTEGER}
				   and havb.emp_id = #{emp_id,jdbcType=INTEGER}
				   and havb.attend_code = #{attend_code, jdbcType=INTEGER}
				   and havb.attend_year = #{attend_year, jdbcType=VARCHAR}), 0) as xjdays,
			hax.attend_code,
			case 
				when hai.attend_ed_is = 1 then hax.attend_ed
				else null 
			end as attend_ed,
			case
				when hai.attend_ed_is = 1 
				then hax.attend_ed - (nvl(
				(select havb.dec_amt + nvl((select sum(h1.ATTEND_XJDAYS) from HR_ATTEND_XJAPPLY h1 
									    where h1.attend_code=#{attend_code,jdbcType=INTEGER} 
									      and h1.emp_id=#{emp_id,jdbcType=INTEGER} 
									      and h1.group_id = #{group_id,jdbcType=INTEGER}
									      and h1.hos_id = #{hos_id,jdbcType=INTEGER}
									      and h1.attend_xjstate in (0, 1, 2)), 0)
				 from hr_attend_vacal_balance havb
				 where havb.group_id = #{group_id, jdbcType=INTEGER}
				   and havb.hos_id = #{hos_id,jdbcType=INTEGER}
				   and havb.emp_id = #{emp_id,jdbcType=INTEGER}
				   and havb.attend_code = #{attend_code, jdbcType=INTEGER}
				   and havb.attend_year = #{attend_year, jdbcType=VARCHAR}), 0))
				else null
			end as residue_days
		from HR_ATTEND_XJED hax 
		left join HR_ATTEND_XJAPPLY ha 
			   on hax.emp_id = ha.emp_id
			  and ha.group_id = hax.group_id
			  and ha.hos_id = hax.hos_id 
		left join HR_ATTEND_ITEM hai 
			   on hai.attend_code=hax.attend_code
			  and hai.group_id = hax.group_id
			  and hai.hos_id = hax.hos_id  
		where hax.emp_id=#{emp_id,jdbcType=INTEGER} 
		  and hax.attend_year=#{attend_year,jdbcType=VARCHAR}
		  and hax.attend_code=#{attend_code,jdbcType=INTEGER}
		  and hax.group_id = #{group_id,jdbcType=INTEGER}
		  and hax.hos_id = #{hos_id,jdbcType=INTEGER}
		group by hai.attend_ed_is,ha.emp_id,hax.attend_code, hax.attend_ed
	</select>
	<select id="queryAttendSumByJX" resultMap="AttendSumMap" parameterType="java.util.Map">
	select nvl(havb.dec_amt, 0) + nvl((
        select sum(h1.ATTEND_XJDAYS)
        from HR_ATTEND_XJAPPLY h1
        where h1.attend_code = '010'
          and h1.emp_id = '7977'
          and h1.group_id = '28'
          and h1.hos_id = '34'
          and h1.attend_xjstate in (0, 1, 2)
      ), 0)  as xjdays
    from hr_attend_vacal_balance havb
     where havb.group_id = #{group_id, jdbcType=INTEGER}
				   and havb.hos_id = #{hos_id,jdbcType=INTEGER}
				   and havb.emp_id = #{emp_id,jdbcType=INTEGER}
				   and havb.attend_code = #{attend_code, jdbcType=INTEGER}
				   and havb.attend_year = #{attend_year, jdbcType=VARCHAR}
	</select>
	<resultMap type="java.util.Map" id="NonworkMap">
		<result property="attend_date" column="attend_date" />
		<result property="attend_date_state" column="attend_date_state" />

	</resultMap>
	<select id="queryNonwork" resultMap="NonworkMap" parameterType="java.util.Map">
		select to_char(ha.attend_date,'yyyy-mm-dd') attend_date from
		HR_ATTEND_NONWORKDAYS ha where
		to_char(ha.attend_date,'yyyy')=#{year,jdbcType=VARCHAR}
		and ha.group_id = #{group_id,jdbcType=INTEGER}
		and ha.hos_id = #{hos_id,jdbcType=INTEGER}
		and ha.ATTEND_DATE_STATE = 0

	</select>
	<!-- 审核查询 -->
	<select id="queryCompensatoryLeave" resultMap="hrApplyingLeaves" parameterType="java.util.Map">

	  select hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.ATTEND_XJREG_DATE, hx.emp_id
  , he.emp_name, hd.dept_name, hx.ATTEND_XJBEGDATE, hx.attend_xjenddate, hx.attend_xjdays
  , hx.attend_xjstate
  , case 
    when hx.attend_xjstate = 0 then '新建'
    when hx.attend_xjstate = 1 then '已提交'
    when hx.attend_xjstate = 2 then '审核通过'
    when hx.attend_xjstate = 3 then '审核未通过'
      when hx.attend_xjstate = 4 then '已核定'
    else ' '
  end as attend_xjstate_name, hx.ATTEND_XJLOGINER, he1.user_name as attend_xjloginer_name, hx.Attend_Xjreg_Operdate, hx.Attend_Xjreviewer
  , he2.user_name as attend_xjreviewer_name, hx.Attend_Xjreg_Reviewdate, hx.Attend_Xjcheck_State
  , case 
    when hx.Attend_Xjcheck_State = 0 then '未核定'
    when hx.Attend_Xjcheck_State = 1 then '已核定'
    else ' '
  end as attend_xjcheck_state_name, hx.Attend_Xjchecker, he3.user_name as attend_xjchecker_name, hx.Attend_Xjcheckdate, hx.attend_xj_add
  , case 
    when hx.attend_xj_add = 0 then '是'
    when hx.attend_xj_add = 1 then '否'
    else ' '
  end as attend_xj_add_name
from HR_ATTEND_XJAPPLY hx
left join hos_emp he on he.emp_id = hx.emp_id
and he.group_id = hx.group_id
and he.hos_id = hx.hos_id 
left join hos_dept hd on he.dept_id = hd.dept_id
and he.group_id = hd.group_id
and he.hos_id = hd.hos_id 
left join sys_user he1 on he1.user_id = hx.ATTEND_XJLOGINER
and he1.group_id = hx.group_id
and he1.hos_id = hx.hos_id 
left join sys_user he2 on he2.user_id = hx.ATTEND_XJREVIEWER
and he2.group_id = hx.group_id
and he2.hos_id = hx.hos_id 
left join sys_user he3 on he3.user_id = hx.ATTEND_XJCHECKER
and he3.group_id = hx.group_id
and he3.hos_id = hx.hos_id 
  left join HR_ATTEND_ITEM ha on ha.attend_code = hx.attend_code
and ha.group_id = hx.group_id
and ha.hos_id = hx.hos_id 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND hx.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
		AND hx.attend_xjapply_code like '%${attend_xjapply_code}%'
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND hx.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND he.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="attend_code != null and attend_code != ''">
		AND hx.attend_code = #{attend_code,jdbcType=INTEGER}
		</if>
		<if test="attend_xjstate != null and attend_xjstate != ''">
		AND hx.attend_xjstate = #{attend_xjstate,jdbcType=INTEGER}
		</if>
		<if test="attend_xjreg_date != null and attend_xjreg_date != ''">
		AND hx.attend_xjreg_date =to_date(#{attend_xjreg_date},'YYYY/MM/DD')<!--  #{attend_xjreg_date,jdbcType=DATE} -->
		</if>
		<if test="note != null and note != ''">
		AND hx.note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by hx.attend_xjapply_code asc
		</select>

	<update id="auditHrApplyingLeaves" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE HR_ATTEND_XJAPPLY SET
			attend_xjstate =#{item.attend_xjstate,jdbcType=INTEGER}
			where
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			<if
				test="item.attend_xjapply_code != null and item.attend_xjapply_code != '' ">
				and attend_xjapply_code = #{item.attend_xjapply_code}
			</if>
		</foreach>

	</update>
	
	<!-- 修改状态 -->
	<update id="updateApplyState" parameterType="java.util.Map">
			UPDATE HR_ATTEND_XJAPPLY SET
					attend_xjstate =#{attend_xjstate,jdbcType=INTEGER}
				<if test="attend_xjloginer !=null ">
					,attend_xjloginer = #{attend_xjloginer,jdbcType=INTEGER}
				</if>
				<if test="attend_xjreg_operdate !=null  ">
					,attend_xjreg_operdate = #{attend_xjreg_operdate,jdbcType=DATE}
				</if>
				<if test="checker !=null ">
					,checker = #{checker,jdbcType=INTEGER}
				</if>
				<if test="check_date !=null  ">
					,check_date = #{check_date,jdbcType=DATE}
				</if>
				<if test="confirmer !=null ">
					,confirmer = #{confirmer,jdbcType=INTEGER}
				</if>
				<if test="confirm_date !=null  ">
					,confirm_date = #{confirm_date,jdbcType=DATE}
				</if>
				<if test="back_reason !=null  ">
					,back_reason = #{back_reason,jdbcType=VARCHAR}
				</if>
				<if test="cancel_date !=null  ">
					,cancel_date = #{cancel_date,jdbcType=DATE}
				</if>
			<where>
						group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
				<if test="attend_xjapply_codes != null">
					and attend_xjapply_code in (${attend_xjapply_codes})
				</if>
			</where>
	</update>
	
	<!-- 休假管理表增加休假申请数据 -->
	<insert id="insertApplyHrEmpHoliday" parameterType="java.util.Map" >
		insert into hr_emp_holiday(
			group_id,hos_id,emp_id,attend_xjapply_code,attend_code,
			attend_xjyear,attend_xjbegdate,attend_xjenddate,attend_xjdays,attend_ed
		)
		select a.group_id,a.hos_id,a.emp_id,a.attend_xjapply_code,a.attend_code,
			a.attend_year,a.attend_xjbegdate,a.attend_xjenddate,a.attend_xjdays,
			b.attend_ed
		from hr_attend_xjapply a
		left join hr_attend_xjed b on a.group_id=b.group_id and a.hos_id=b.hos_id 
			and a.attend_year = b.attend_year and a.emp_id=b.emp_id and a.attend_code=b.attend_code
		<where>
			and a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.attend_xjapply_code in (${attend_xjapply_codes})
		</where>
	</insert>
	
	<!-- 休假管理表删除休假申请数据 -->
	<delete id="deleteApplyHrEmpHoliday" parameterType="java.util.Map" >
		delete from hr_emp_holiday
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and attend_xjapply_code in (${attend_xjapply_codes})
		<!-- 	and attend_year = #{attend_year,jdbcType=VARCHAR} -->
	</delete>
	
	<!-- 删除 -->
	<delete id="deleteApplyingLeaves" parameterType="java.util.Map" >
		delete from hr_attend_xjapply
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and attend_xjapply_code in (${attend_xjapply_codes})
	</delete>
	
	<!-- 打印 -->
	<select id="queryApplyingLeavesByPrint" resultType="java.util.Map" parameterType="java.util.Map">
		select hx.attend_xjapply_code, hx.attend_code, ha.attend_name, hx.attend_xjreg_date, hx.emp_id,
  		 	he.emp_code,he.emp_name, hd.dept_name, hx.attend_xjbegdate, hx.attend_xjenddate, hx.attend_xjdays,
  		 	hx.attend_xjstate,
  		 	case 
			    when hx.attend_xjstate = 0 then '新建'
			    when hx.attend_xjstate = 1 then '已提交'
			    when hx.attend_xjstate = 2 then '已审核'
			    when hx.attend_xjstate = 3 then '已核定'
			    when hx.attend_xjstate = 4 then '已作废'
    		else ' '
  			end as state_name, hx.attend_xjstate state,
	  		hx.attend_xjloginer, he1.user_name as attend_xjloginer_name, hx.attend_xjreg_operdate, 
	  		hx.checker,he2.user_name as checker_name, hx.check_date, 
	   		hx.confirmer,he3.user_name as confirmer_name,hx.confirm_date, hx.attend_xj_add,
   			case 
	    		when hx.attend_xj_add = 0 then '是'
	    		when hx.attend_xj_add = 1 then '否'
	    		else ' '
  			end as attend_xj_add_name,hx.back_reason
			from hr_attend_xjapply hx
			left join hos_emp he on he.emp_id = hx.emp_id
				and he.group_id = hx.group_id
				and he.hos_id = hx.hos_id 
			<if test="dept_source == 1">
			left join hr_dept hd on he.dept_id = hd.dept_id
				and he.group_id = hd.group_id
				and he.hos_id = hd.hos_id 
			</if>
			<if test="dept_source == 2">
			left join hos_dept hd on he.dept_id = hd.dept_id
				and he.group_id = hd.group_id
				and he.hos_id = hd.hos_id 
			</if>
			left join sys_user he1 on he1.user_id = hx.attend_xjloginer
				and he1.group_id = hx.group_id
				and he1.hos_id = hx.hos_id 
			left join sys_user he2 on he2.user_id = hx.checker
				and he2.group_id = hx.group_id
				and he2.hos_id = hx.hos_id 
			left join sys_user he3 on he3.user_id = hx.confirmer
				and he3.group_id = hx.group_id
				and he3.hos_id = hx.hos_id 
			left join HR_ATTEND_ITEM ha on ha.attend_code = hx.attend_code
				and ha.group_id = hx.group_id
				and ha.hos_id = hx.hos_id 
			<where>                     
				AND hx.group_id = #{group_id,jdbcType=INTEGER}
				AND hx.hos_id = #{hos_id,jdbcType=INTEGER}
				<if test="attend_xjapply_code != null and attend_xjapply_code != ''">
					AND hx.attend_xjapply_code like '%${attend_xjapply_code}%'
				</if>
				<if test="emp_id != null and emp_id != ''">
					AND hx.emp_id = #{emp_id,jdbcType=INTEGER}
				</if>
				<if test="dept_id != null and dept_id != ''">
					AND he.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="attend_code != null and attend_code != ''">
					AND hx.attend_code = #{attend_code,jdbcType=INTEGER}
				</if>
				<if test="state != null and state != ''">
					AND hx.attend_xjstate = #{state,jdbcType=INTEGER}
				</if>
				<if test="xjreg_begin_date != null and xjreg_begin_date != ''">
					AND hx.attend_xjreg_date between to_date(#{xjreg_begin_date},'YYYY/MM/DD') and to_date(#{xjreg_end_date},'YYYY/MM/DD')
				</if>
				<if test="note != null and note != ''">
					AND hx.note = #{note,jdbcType=VARCHAR}
				</if>
				<if test="audit == 1 ">
					AND hx.attend_xjstate &gt;= 1 
					and hx.attend_xjstate != 4
				</if>
			</where>   
			order by hx.attend_xjapply_code asc
	</select>
	<select id="queryXjApplication" resultType="java.util.Map" parameterType="java.util.Map">
		select  
	       a.attend_code,
	       a.attend_xjapply_code,
	       a.emp_id,
	       a.attend_year,
	       a.attend_xjdays 	       
		from hr_attend_xjapply a
		<where>
				a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}			 
			and a.attend_xjapply_code in (${attend_xjapply_codes})
			<if test="attend_xjstate11 != null and attend_xjstate11 != ''">
				and a.attend_xjstate=${attend_xjstate}
			</if>
		</where>
	</select>
	<!-- 核定 组装核算表数据 -->
	<select id="queryXjInfo" resultType="java.util.Map" parameterType="java.util.Map">
		select a.group_id,
	       a.hos_id,
	       a.attend_code,
	       a.emp_id,
	       a.attend_year,
	       b.limit,b.add_valid_amt,b.add_invalid_amt,
	       nvl(b.dec_amt,0) ${op} sum(nvl(attend_xjdays,0)) dec_amt ,
	       b.limit +b.add_valid_amt  ${op}  (nvl(b.dec_amt,0)  ${op} sum(nvl(attend_xjdays,0)))*(-1)  bala_amt
		from hr_attend_xjapply a
  		left join hr_attend_vacal_balance b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.attend_code=b.attend_code 
       		and a.attend_year = b.attend_year and a.emp_id=b.emp_id
		<where>
				a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.attend_year = #{attend_year,jdbcType=VARCHAR}
			and a.attend_xjapply_code in (${attend_xjapply_codes})
		</where>
		group by a.group_id, a.hos_id, a.attend_code, a.emp_id, a.attend_year, b.limit,b.add_invalid_amt,
			b.add_valid_amt,b.dec_amt,b.bala_amt
	</select>
	
	<!--作废 组装核算数据 -->
	<select id="queryCancleXXjInfo" resultType="java.util.Map" parameterType="java.util.Map">
		select aa.group_id,aa.hos_id,aa.attend_year,aa.emp_id,aa.attend_code,
       		nvl(bb.limit,0) limit,
       		nvl(bb.add_valid_amt,0) add_valid_amt, 
       		nvl(bb.dec_amt,0) + aa.dec_amt dec_amt, 
       		(nvl(bb.limit,0) + nvl(bb.add_valid_amt,0) - (nvl(bb.dec_amt,0)+aa.dec_amt)) bala_amt
		from (
			select a.group_id,a.hos_id,a.attend_code,a.emp_id,sum((-1)*(nvl(b.attend_xxjdays,0))) dec_amt,a.attend_year
			from hr_attend_xjapply a
			left join hr_attend_xxjapply b on a.group_id = b.group_id and a.hos_id=b.hos_id and a.attend_xjapply_code = b.attend_xjapply_code
			<where>
					a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.attend_year = #{attend_year,jdbcType=VARCHAR}
				and a.attend_xjapply_code in (${attend_xjapply_codes})
				<!-- and b.attend_xjstate = 3
				and a.attend_xjstate = 3 -->
			</where> 	
			group by a.group_id,a.hos_id,a.attend_code,a.emp_id,a.attend_year
		) aa
		left join hr_attend_vacal_balance bb on aa.group_id=bb.group_id and aa.hos_id=bb.hos_id and aa.attend_code=bb.attend_code   
     		and aa.emp_id=bb.emp_id and aa.attend_year = bb.attend_year
	</select>
	
	<!-- 作废 休假数据 -->
	<select id="queryCancleXjInfo" resultType="java.util.Map" parameterType="java.util.Map">
		select aa.group_id,aa.hos_id,aa.attend_year,aa.emp_id,aa.attend_code,
       		nvl(bb.limit,0) limit,
       		nvl(bb.add_valid_amt,0) add_valid_amt, 
       		nvl(bb.dec_amt,0) + aa.dec_amt dec_amt, 
       		(nvl(bb.limit,0) + nvl(bb.add_valid_amt,0) - (nvl(bb.dec_amt,0)+aa.dec_amt)) bala_amt
		from (
			select a.group_id,a.hos_id,a.attend_code,a.emp_id,sum((-1)*(nvl(a.attend_xjdays,0))) dec_amt,a.attend_year
			from hr_attend_xjapply a
			<where>
					a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.attend_year = #{attend_year,jdbcType=VARCHAR}
				and a.attend_xjapply_code in (${attend_xjapply_codes})
				and a.attend_xjstate = 3
			</where> 	
			group by a.group_id,a.hos_id,a.attend_code,a.emp_id,a.attend_year
		) aa
		left join hr_attend_vacal_balance bb on aa.group_id=bb.group_id and aa.hos_id=bb.hos_id and aa.attend_code=bb.attend_code   
     		and aa.emp_id=bb.emp_id and aa.attend_year = bb.attend_year
	</select>
	
</mapper>