<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.htc.dao.task.cost.deptcost.HtcTaskDeptCostMapper">

	<resultMap id="htcDeptCost" type="com.chd.hrp.htc.entity.task.cost.deptcost.HtcTaskDeptCost">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="acc_month" column="acc_month" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="cost_item_id" column="cost_item_id" /> 
	    <result property="cost_item_no" column="cost_item_id" /> 
		<result property="cost_item_code" column="cost_item_code" />
		<result property="cost_item_name" column="cost_item_name" />
		<result property="source_id" column="source_id" />
		<result property="source_code" column="source_code" />
		<result property="source_name" column="source_name" /> 
		<result property="tot_amount" column="tot_amount" />
		<result property="prime_amount" column="prime_amount" />
		<result property="pub_amount" column="pub_amount" />
		<result property="man_amount" column="man_amount" />
		<result property="ass_amount" column="ass_amount" />
	</resultMap>
	
	<resultMap id="htcDeptCostAmountMap" type="java.util.Map">
	    <result property="cost_item_code" column="cost_item_code" />
	    <result property="cost_item_name" column="cost_item_name" />
	    <result property="tsum" column="tsum" />
	    <result property="t1" column="t1" />
	    <result property="t2" column="t2" />
	    <result property="t3" column="t3" />
	    <result property="t4" column="t4" />
	</resultMap>
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="addHtcTaskDeptCost" useGeneratedKeys="true">

		insert into htc_dept_cost_data
					  (group_id,
					   hos_id,
					   copy_code,
					   acc_year,
					   acc_month,
					   dept_id,
					   dept_no,
					   cost_item_id,
					   cost_item_no,
					   source_id,
					   tot_amount,
					   prime_amount,
					   pub_amount,
					   man_amount,
					   ass_amount)
					values
					  (#{group_id},
					   #{hos_id},
					   #{copy_code},
					   #{acc_year},
					   #{acc_month},
					   #{dept_id},
					   #{dept_no},
					   #{cost_item_id},
					   #{cost_item_no},
					   #{source_id},
					   #{tot_amount},
					   #{prime_amount},
					   #{pub_amount},
					   #{man_amount},
					   #{ass_amount})
	</insert>
	
	
	<insert id="addBatchHtcTaskDeptCost" parameterType="java.util.List">

			insert into  htc_dept_cost_data
			  (group_id,
			   hos_id,
			   copy_code,
			   acc_year,
			   acc_month,
			   dept_id,
			   dept_no,
			   cost_item_id,
			   cost_item_no,
			   source_id,
			   tot_amount,
			   prime_amount,
			   pub_amount,
			   man_amount,
			   ass_amount)
		 <foreach collection="list" item="item" index="index" separator=" union all " >
			  select 	
			   #{item.group_id},
			   #{item.hos_id},
			   #{item.copy_code},
			   #{item.acc_year},
			   #{item.acc_month},
			   #{item.dept_id},
			   #{item.dept_no},
			   #{item.cost_item_id},
			   #{item.cost_item_no},
			   #{item.source_id},
			   #{item.tot_amount},
			   #{item.prime_amount},
			   #{item.pub_amount},
			   #{item.man_amount},
			   #{item.ass_amount}
			  from dual 
		</foreach>
		
	</insert>


	<delete id="deleteHtcTaskDeptCost" parameterType="java.util.Map">

	   delete htc_dept_cost_data
			 where group_id = #{group_id}
			   and hos_id = #{hos_id}
			   and copy_code = #{copy_code}
			   and acc_year = #{acc_year}
			   and acc_month = #{acc_month}
			   and dept_id = #{dept_id}
			   and cost_item_id = #{cost_item_id}
			   and source = #{source}


	</delete>

	<delete id="deleteBatchHtcTaskDeptCost" parameterType="java.util.List">

		   delete htc_dept_cost_data where 
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				       group_id = #{item.group_id}
				   and hos_id = #{item.hos_id}
				   and copy_code = #{item.copy_code}
				   and acc_year = #{item.acc_year}
				   and acc_month = #{item.acc_month}
				   and dept_id = #{item.dept_id}
			</foreach>

	</delete>
 
	<select id="queryHtcTaskDeptCostByCode" resultMap="htcDeptCost"
		parameterType="java.util.Map">

		  select   hdcd.group_id,
			       hdcd.hos_id,
			       hdcd.copy_code,
			       hdcd.acc_year,
			       hdcd.acc_month,
			       hdcd.dept_id,
			       hdcd.dept_no,
				   hdd.dept_code,
				   hdd.dept_name,
			       hdcd.cost_item_id,
			       hdcd.cost_item_no,
				   cidn.cost_item_code,
				   cidn.cost_item_name,
			       hdcd.source_id,
				   hs.source_code,
				   hs.source_name,
			       hdcd.tot_amount,
			       hdcd.prime_amount,
			       hdcd.pub_amount,
			       hdcd.man_amount,
			       hdcd.ass_amount
			  from htc_dept_cost_data hdcd
				left join hos_dept_dict hdd
				on hdcd.group_id = hdd.group_id
				and hdcd.hos_id = hdd.hos_id
				and hdcd.dept_id = hdd.dept_id
				left join cost_item_dict_no cidn
				on cidn.group_id = hdcd.group_id
				and cidn.hos_id = hdcd.hos_id
				and cidn.copy_code = hdcd.copy_code
				and cidn.cost_item_id = hdcd.cost_item_id
				left join hos_source hs
				on hs.group_id = hdcd.group_id
				and hs.hos_id = hdcd.hos_id
				and hs.source_id = hdcd.source_id
				where hdcd.group_id = #{group_id}
				and hdcd.hos_id = #{hos_id}
				and hdcd.copy_code = #{copy_code}
				and hdcd.acc_year = #{acc_year}
			    and hdcd.acc_month = #{acc_month}
			    and hdcd.dept_id = #{dept_id}
			    and hdcd.cost_item_id = #{cost_item_id}
			    and hdcd.source_id = #{source_id}
				and hdd.is_stop = 0
				and cidn.is_stop = 0
			 

	</select>
	<select id="queryHtcTaskDeptCost" parameterType="java.util.Map"  resultMap="htcDeptCost">
		       
		                  
       select  hdcd.group_id,
               hdcd.hos_id,
               hdcd.copy_code,
			   decode(grouping(hdcd.acc_year),1,'合',acc_year) acc_year,
			   decode(grouping(hdcd.acc_month),1,'计',acc_month) acc_month,
               hdcd.dept_id,
               hdcd.dept_no,
			   hdd.dept_code,
			   hdd.dept_name,
               sum(hdcd.tot_amount) tot_amount,
               sum(hdcd.prime_amount) prime_amount,
               sum(hdcd.pub_amount) pub_amount,
               sum(hdcd.man_amount) man_amount,
               sum(hdcd.ass_amount) ass_amount
          from htc_dept_cost_data hdcd
		  left join hos_dept_dict hdd
		  on hdd.group_id = hdcd.group_id
		  and hdd.hos_id = hdcd.hos_id
		  and hdd.dept_id = hdcd.dept_id
		  where hdcd.group_id = #{group_id}
		  and hdcd.hos_id = #{hos_id}
		  and hdcd.copy_code = #{copy_code}
		  and hdd.is_stop = '0'
		  and hdcd.acc_year || hdcd.acc_month = #{year_month}
		  group by rollup((hdcd.group_id,hdcd.hos_id,hdcd.copy_code,hdcd.acc_year,hdcd.acc_month,
		  hdcd.dept_id,hdcd.dept_no, hdd.dept_code,hdd.dept_name))
		  order by  hdcd.group_id,hdcd.hos_id,hdcd.copy_code,hdcd.acc_year, hdcd.acc_month,hdd.dept_code
	</select>

  

	<select id="queryHtcTaskDeptCostTotAmount" parameterType="java.util.Map"
		resultMap="htcDeptCostAmountMap">
			   with temp as( 
		              select     
					   hddc.group_id,
		               hddc.hos_id,
		               hddc.copy_code,
		               hddc.acc_year,
		               hddc.acc_month,
		               hddc.dept_id,
		               hdd.dept_code,
		               hdd.dept_name,
		               hddc.cost_item_id,
		               cidn.cost_item_code,
		               cidn.cost_item_name,
		               hddc.source_id,
		               hddc.tot_amount
		              from htc_dept_cost_data hddc
		              left join hos_dept_dict hdd
		              on hddc.group_id = hdd.group_id
		              and hddc.hos_id = hdd.hos_id
		              and hddc.dept_id = hdd.dept_id
		              left join cost_item_dict_no cidn
		              on hddc.group_id = cidn.group_id
		              and hddc.hos_id = cidn.hos_id
		              and hddc.copy_code = cidn.copy_code
		              and hddc.cost_item_id = cidn.cost_item_id
		              where hddc.group_id = #{group_id}
		               and hddc.hos_id = #{hos_id}
		               and hddc.copy_code = #{copy_code}
		               and hddc.acc_year = #{acc_year}
		               and hddc.acc_month = #{acc_month}
		               and hddc.dept_id = #{dept_id}
					   and hdd.is_stop = 0
					   and cidn.is_stop = 0
		    )select 
				 cost_item_code,
				 decode(grouping(cost_item_name),1,'合计',cost_item_name) cost_item_name,
				 sum(nvl(t1, 0) + nvl(t2, 0) + nvl(t3, 0) + nvl(t4, 0)) as tsum,
				 sum(nvl(t1, 0)) as t1,
				 sum(nvl(t2, 0)) as t2,
				 sum(nvl(t3, 0)) as t3,
				 sum(nvl(t4, 0)) as t4
           from temp
           pivot (sum(tot_amount) for source_id in ('1' as t1, '2' as t2, '3' as t3, '4' as t4))
		   group by rollup((cost_item_code, cost_item_name))
		   order by cost_item_code
				 
					  
	 
	</select>
	<select id="queryHtcTaskDeptCostPrimeAmount" parameterType="java.util.Map"
		resultMap="htcDeptCostAmountMap">
		
		  with temp as( 
		              select     
					   hddc.group_id,
		               hddc.hos_id,
		               hddc.copy_code,
		               hddc.acc_year,
		               hddc.acc_month,
		               hddc.dept_id,
		               hdd.dept_code,
		               hdd.dept_name,
		               hddc.cost_item_id,
		               cidn.cost_item_code,
		               cidn.cost_item_name,
		               hddc.source_id,
		               hddc.prime_amount
		              from htc_dept_cost_data hddc
		              left join hos_dept_dict hdd
		              on hddc.group_id = hdd.group_id
		              and hddc.hos_id = hdd.hos_id
		              and hddc.dept_id = hdd.dept_id
		              left join cost_item_dict_no cidn
		              on hddc.group_id = cidn.group_id
		              and hddc.hos_id = cidn.hos_id
		              and hddc.copy_code = cidn.copy_code
		              and hddc.cost_item_id = cidn.cost_item_id
		              where hddc.group_id = #{group_id}
		               and hddc.hos_id = #{hos_id}
		               and hddc.copy_code = #{copy_code}
		               and hddc.acc_year = #{acc_year}
		               and hddc.acc_month = #{acc_month}
		               and hddc.dept_id = #{dept_id}
					   and hdd.is_stop = 0
					   and cidn.is_stop = 0
		    )select 
				 cost_item_code,
				 decode(grouping(cost_item_name),1,'合计',cost_item_name) cost_item_name,
				 sum(nvl(t1, 0) + nvl(t2, 0) + nvl(t3, 0) + nvl(t4, 0)) as tsum,
				 sum(nvl(t1, 0)) as t1,
				 sum(nvl(t2, 0)) as t2,
				 sum(nvl(t3, 0)) as t3,
				 sum(nvl(t4, 0)) as t4
           from temp
           pivot (sum(prime_amount) for source_id in ('1' as t1, '2' as t2, '3' as t3, '4' as t4))
		   group by rollup((cost_item_code, cost_item_name))
		   order by cost_item_code
	</select>
	<select id="queryHtcTaskDeptCostPubAmount" parameterType="java.util.Map"
		resultMap="htcDeptCostAmountMap">
		      with temp as( 
		              select     
					   hddc.group_id,
		               hddc.hos_id,
		               hddc.copy_code,
		               hddc.acc_year,
		               hddc.acc_month,
		               hddc.dept_id,
		               hdd.dept_code,
		               hdd.dept_name,
		               hddc.cost_item_id,
		               cidn.cost_item_code,
		               cidn.cost_item_name,
		               hddc.source_id,
		               hddc.pub_amount
		              from htc_dept_cost_data hddc
		              left join hos_dept_dict hdd
		              on hddc.group_id = hdd.group_id
		              and hddc.hos_id = hdd.hos_id
		              and hddc.dept_id = hdd.dept_id
		              left join cost_item_dict_no cidn
		              on hddc.group_id = cidn.group_id
		              and hddc.hos_id = cidn.hos_id
		              and hddc.copy_code = cidn.copy_code
		              and hddc.cost_item_id = cidn.cost_item_id
		              where hddc.group_id = #{group_id}
		               and hddc.hos_id = #{hos_id}
		               and hddc.copy_code = #{copy_code}
		               and hddc.acc_year = #{acc_year}
		               and hddc.acc_month = #{acc_month}
		               and hddc.dept_id = #{dept_id}
					   and hdd.is_stop = 0
					   and cidn.is_stop = 0
		    )select 
				 cost_item_code,
				 decode(grouping(cost_item_name),1,'合计',cost_item_name) cost_item_name,
				 sum(nvl(t1, 0) + nvl(t2, 0) + nvl(t3, 0) + nvl(t4, 0)) as tsum,
				 sum(nvl(t1, 0)) as t1,
				 sum(nvl(t2, 0)) as t2,
				 sum(nvl(t3, 0)) as t3,
				 sum(nvl(t4, 0)) as t4
           from temp
           pivot (sum(pub_amount) for source_id in ('1' as t1, '2' as t2, '3' as t3, '4' as t4))
		   group by rollup((cost_item_code, cost_item_name))
		   order by cost_item_code
	</select>
	<select id="queryHtcTaskDeptCostManAmount" parameterType="java.util.Map"
		resultMap="htcDeptCostAmountMap">
		     with temp as( 
		              select     
					   hddc.group_id,
		               hddc.hos_id,
		               hddc.copy_code,
		               hddc.acc_year,
		               hddc.acc_month,
		               hddc.dept_id,
		               hdd.dept_code,
		               hdd.dept_name,
		               hddc.cost_item_id,
		               cidn.cost_item_code,
		               cidn.cost_item_name,
		               hddc.source_id,
		               hddc.man_amount
		              from htc_dept_cost_data hddc
		              left join hos_dept_dict hdd
		              on hddc.group_id = hdd.group_id
		              and hddc.hos_id = hdd.hos_id
		              and hddc.dept_id = hdd.dept_id
		              left join cost_item_dict_no cidn
		              on hddc.group_id = cidn.group_id
		              and hddc.hos_id = cidn.hos_id
		              and hddc.copy_code = cidn.copy_code
		              and hddc.cost_item_id = cidn.cost_item_id
		              where hddc.group_id = #{group_id}
		               and hddc.hos_id = #{hos_id}
		               and hddc.copy_code = #{copy_code}
		               and hddc.acc_year = #{acc_year}
		               and hddc.acc_month = #{acc_month}
		               and hddc.dept_id = #{dept_id}
					   and hdd.is_stop = 0
					   and cidn.is_stop = 0
		    )select 
				 cost_item_code,
				 decode(grouping(cost_item_name),1,'合计',cost_item_name) cost_item_name,
				 sum(nvl(t1, 0) + nvl(t2, 0) + nvl(t3, 0) + nvl(t4, 0)) as tsum,
				 sum(nvl(t1, 0)) as t1,
				 sum(nvl(t2, 0)) as t2,
				 sum(nvl(t3, 0)) as t3,
				 sum(nvl(t4, 0)) as t4
           from temp
           pivot (sum(man_amount) for source_id in ('1' as t1, '2' as t2, '3' as t3, '4' as t4))
		   group by rollup((cost_item_code, cost_item_name))
		   order by cost_item_code
	</select>
	<select id="queryHtcTaskDeptCostAssAmount" parameterType="java.util.Map"
		resultMap="htcDeptCostAmountMap">
		        with temp as( 
		              select     
					   hddc.group_id,
		               hddc.hos_id,
		               hddc.copy_code,
		               hddc.acc_year,
		               hddc.acc_month,
		               hddc.dept_id,
		               hdd.dept_code,
		               hdd.dept_name,
		               hddc.cost_item_id,
		               cidn.cost_item_code,
		               cidn.cost_item_name,
		               hddc.source_id,
		               hddc.ass_amount
		              from htc_dept_cost_data hddc
		              left join hos_dept_dict hdd
		              on hddc.group_id = hdd.group_id
		              and hddc.hos_id = hdd.hos_id
		              and hddc.dept_id = hdd.dept_id
		              left join cost_item_dict_no cidn
		              on hddc.group_id = cidn.group_id
		              and hddc.hos_id = cidn.hos_id
		              and hddc.copy_code = cidn.copy_code
		              and hddc.cost_item_id = cidn.cost_item_id
		              where hddc.group_id = #{group_id}
		               and hddc.hos_id = #{hos_id}
		               and hddc.copy_code = #{copy_code}
		               and hddc.acc_year = #{acc_year}
		               and hddc.acc_month = #{acc_month}
		               and hddc.dept_id = #{dept_id}
					   and hdd.is_stop = 0
					   and cidn.is_stop = 0
		    )select 
				 cost_item_code,
				 decode(grouping(cost_item_name),1,'合计',cost_item_name) cost_item_name,
				 sum(nvl(t1, 0) + nvl(t2, 0) + nvl(t3, 0) + nvl(t4, 0)) as tsum,
				 sum(nvl(t1, 0)) as t1,
				 sum(nvl(t2, 0)) as t2,
				 sum(nvl(t3, 0)) as t3,
				 sum(nvl(t4, 0)) as t4
           from temp
           pivot (sum(ass_amount) for source_id in ('1' as t1, '2' as t2, '3' as t3, '4' as t4))
		   group by rollup((cost_item_code, cost_item_name))
		   order by cost_item_code
		     
	</select>
</mapper>

