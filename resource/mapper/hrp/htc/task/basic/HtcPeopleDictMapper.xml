<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.htc.dao.task.basic.HtcPeopleDictMapper">
	<resultMap id="htcPeopleDict" type="com.chd.hrp.htc.entity.task.basic.HtcPeopleDict">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="people_code" column="people_code" />
		<result property="people_name" column="people_name" />
		<result property="title_code" column="title_code" />
		<result property="title_name" column="title_name" />
		<result property="people_type_code" column="people_type_code" />
		<result property="people_type_name" column="people_type_name" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="is_stop" column="is_stop" />
		<result property="people_note" column="people_note" />
	</resultMap>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="addHtcPeopleDict" useGeneratedKeys="true">

		insert into htc_people_dict
          (group_id,
		   hos_id,
		   copy_code,
		   people_code,
		   people_name,
		   title_code,
		   people_type_code,
		   dept_no,
		   dept_id,
		   spell_code,
		   wbx_code,
		   is_stop,
		   people_note
         ) values (
			#{group_id},
			#{hos_id} ,
			#{copy_code},
			#{people_code},
			#{people_name},
			#{title_code},
			#{people_type_code},
			#{dept_no},
			#{dept_id},
			#{spell_code},
			#{wbx_code},
			#{is_stop},
			#{people_note}
		)		

	</insert>
	
	<insert id="addBatchHtcPeopleDict" parameterType="java.util.List">
         		
	        insert into htc_people_dict
	          (group_id,
			   hos_id,
			   copy_code,
			   people_code,
			   people_name,
			   title_code,
			   people_type_code,
			   dept_no,
			   dept_id,
			   spell_code,
			   wbx_code,
			   is_stop,
			   people_note
	         )
	     <foreach collection="list" item="item" index="index" separator=" union all " >
			   select 		
					#{item.group_id},
					#{item.hos_id} ,
					#{item.copy_code},
					#{item.people_code},
					#{item.people_name},
					#{item.title_code},
					#{item.people_type_code},
					#{item.dept_no},
					#{item.dept_id},
					#{item.spell_code},
					#{item.wbx_code},
					#{item.is_stop},
					#{item.people_note}
			  from dual 
		</foreach>
    </insert>

	<update id="updateHtcPeopleDict" parameterType="java.util.Map">
		     update htc_people_dict
			   set people_name = #{people_name},
			       title_code = #{title_code},
			       people_type_code = #{people_type_code},
			       dept_no = #{dept_no},
			       dept_id = #{dept_id},
			       spell_code = #{spell_code},
			       wbx_code = #{wbx_code},
			       is_stop = #{is_stop},
			       people_note = #{people_note}
			 where group_id = #{group_id}
			   and hos_id = #{hos_id}
			   and copy_code = #{copy_code}
			   and people_code = #{people_code}
	</update>

	<delete id="deleteHtcPeopleDict" parameterType="java.util.Map">

		 delete htc_people_dict
		 where group_id =  #{group_id}
		   and hos_id =  #{hos_id}
		   and copy_code =  #{copy_code}
		   and people_code =  #{people_code}

	
	</delete>

	<delete id="deleteBatchHtcPeopleDict" parameterType="java.util.List">

		delete from htc_people_dict where
		<foreach collection="list" index="index" item="item" separator="or" >
		(
			group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and people_code = #{item.people_code}
		)
		</foreach>
	</delete>

	<select id="queryHtcPeopleDictByCode" parameterType="java.util.Map" resultMap="htcPeopleDict">

		select hpd.group_id,
		       hpd.hos_id,
		       hpd.copy_code,
		       hpd.people_code,
		       hpd.people_name,
		       hpd.title_code,
			   hptdd.title_name,
		       hpd.people_type_code,
			   hptd.peop_type_name people_type_name,
			   hpd.dept_no,
		       hpd.dept_id,
			   hdd.dept_code,
			   hdd.dept_name,
		       hpd.spell_code,
		       hpd.wbx_code,
		       hpd.is_stop,
		       hpd.people_note
		  from htc_people_dict hpd
			left join htc_people_type_dict hptd
			on hpd.group_id = hptd.group_id
			and hpd.hos_id = hptd.hos_id
			and hpd.copy_code = hptd.copy_code
			and hpd.people_type_code = hptd.peop_type_code
			left join htc_people_title_dict hptdd
			on hpd.group_id = hptdd.group_id
			and hpd.hos_id = hptdd.hos_id
			and hpd.copy_code = hptdd.copy_code
			and hpd.title_code = hptdd.title_code
			left join hos_dept_dict hdd
			on hpd.group_id = hdd.group_id
			and hpd.hos_id = hdd.hos_id
			and hpd.dept_id = hdd.dept_id
			where  hpd.group_id =  #{group_id}
			   and hpd.hos_id =  #{hos_id}
			   and hpd.copy_code =  #{copy_code}
			   and hdd.is_stop = '0'
			   and hdd.is_last = '1'
			   and hpd.people_code = #{people_code}

	</select>

	<select id="queryHtcPeopleDict" parameterType="java.util.Map" resultMap="htcPeopleDict">
		select hpd.group_id,
		       hpd.hos_id,
		       hpd.copy_code,
		       hpd.people_code,
		       hpd.people_name,
		       hpd.title_code,
			   hptdd.title_name,
		       hpd.people_type_code,
			   hptd.peop_type_name people_type_name,
			   hpd.dept_no,
		       hpd.dept_id,
			   hdd.dept_code,
			   hdd.dept_name,
		       hpd.spell_code,
		       hpd.wbx_code,
		       hpd.is_stop,
		       hpd.people_note
		  from htc_people_dict hpd
			left join htc_people_type_dict hptd
			on hpd.group_id = hptd.group_id
			and hpd.hos_id = hptd.hos_id
			and hpd.copy_code = hptd.copy_code
			and hpd.people_type_code = hptd.peop_type_code
			left join htc_people_title_dict hptdd
			on hpd.group_id = hptdd.group_id
			and hpd.hos_id = hptdd.hos_id
			and hpd.copy_code = hptdd.copy_code
			and hpd.title_code = hptdd.title_code
			left join hos_dept_dict hdd
			on hpd.group_id = hdd.group_id
			and hpd.hos_id = hdd.hos_id
			and hpd.dept_id = hdd.dept_id
			where  hpd.group_id =  #{group_id}
			   and hpd.hos_id =  #{hos_id}
			   and hpd.copy_code =  #{copy_code}
			   and hdd.is_stop = '0'
			   and hdd.is_last = '1'
			 <if test="people_code != null and people_code != ''">
		          and hpd.people_code like '%'||#{people_code}||'%'
		     </if>
		      <if test="title_code != null and title_code != ''">
		          and hpd.title_code = #{title_code}
		     </if>
		      <if test="people_type_code != null and people_type_code != ''">
		          and hpd.people_type_code = #{people_type_code}
		     </if>
			order by hpd.group_id,hpd.hos_id,hpd.copy_code,hpd.people_code
	</select>
	
	 <insert id="synchroHtcPeopleDict" parameterType="java.util.Map">
    
		insert into htc_people_dict
          (group_id,
		   hos_id,
		   copy_code,
		   people_code,
		   people_name,
		   title_code,
		   people_type_code,
		   dept_no,
		   dept_id,
		   spell_code,
		   wbx_code,
		   is_stop,
		   people_note
          )		
			select 
			group_id,
			hos_id,
			#{copy_code},
			emp_code,
			emp_name,
			null,
			kind_code,
			dept_no,
			dept_id,
			spell_code,
			wbx_code,
			is_stop,
			note
			from hos_emp he
			where he.group_id = #{group_id}
			and he.hos_id = #{hos_id}
			and not exists (
			  select 1 from htc_people_dict hpd
			  where he.group_id = hpd.group_id
				and he.hos_id = hpd.hos_id
				and he.emp_code = hpd.people_code
			)
    </insert> 
</mapper>

