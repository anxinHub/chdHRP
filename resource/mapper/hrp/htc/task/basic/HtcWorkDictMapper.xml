<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.htc.dao.task.basic.HtcWorkDictMapper">
	<resultMap id="workDict" type="com.chd.hrp.htc.entity.task.basic.HtcWorkDict">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="work_code" column="work_code"/>
        <result property="work_name" column="work_name"/>
        <result property="work_type_code" column="work_type_code"/>
        <result property="work_type_name" column="work_type_name"/>
        <result property="work_remark" column="work_remark"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
        <result property="is_people" column="is_people"/>
        <result property="is_material" column="is_material"/>
        <result property="is_asset" column="is_asset"/>
	</resultMap>
     <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="addHtcWorkDict" useGeneratedKeys="true" >
       insert into htc_work_dict
				  (group_id,
				   hos_id,
				   copy_code,
				   work_code,
				   work_name,
				   work_type_code,
				   work_remark,
				   spell_code,
				   wbx_code,
				   is_people,
				   is_material,
				   is_asset)
				values
				  (#{group_id},
				   #{hos_id},
				   #{copy_code},
				   #{work_code},
				   #{work_name},
				   #{work_type_code},
				   #{work_remark},
				   #{spell_code},
				   #{wbx_code},
				   #{is_people},
				   #{is_material},
				   #{is_asset})
    </insert>
    
    <insert id="addBatchHtcWorkDict" parameterType="java.util.List" >
         insert into htc_work_dict
				  (group_id,
				   hos_id,
				   copy_code,
				   work_code,
				   work_name,
				   work_type_code,
				   work_remark,
				   spell_code,
				   wbx_code,
				   is_people,
				   is_material,
				   is_asset)
    <foreach collection="list" item="item" separator="union all">
		      select 
		           #{group_id},
				   #{hos_id},
				   #{copy_code},
				   #{work_code},
				   #{work_name},
				   #{work_type_code},
				   #{work_remark},
				   #{spell_code},
				   #{wbx_code},
				   #{is_people},
				   #{is_material},
				   #{is_asset}
			  from dual
		</foreach>
    </insert>

	<update id="updateHtcWorkDict" parameterType="java.util.Map">
       update htc_work_dict
	   set work_name = #{work_name},
	       work_type_code = #{work_type_code},
	       work_remark = #{work_remark},
	       spell_code = #{spell_code},
	       wbx_code = #{wbx_code},
	       is_people = #{is_people},
	       is_material = #{is_material},
	       is_asset = #{is_asset}
	 where group_id = #{group_id}
	   and hos_id = #{hos_id}
	   and copy_code = #{copy_code}
	   and work_code = #{work_code}
	</update>

    <delete id="deleteHtcWorkDict" parameterType="java.util.Map">
         delete htc_work_dict
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}
		   and work_code = #{work_code}
    </delete>

    <delete id="deleteBatchHtcWorkDict" parameterType="java.util.List">
       delete htc_work_dict where
		<foreach collection="list" index="index" item="item" separator="or" >
		(
			    group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and work_code = #{item.work_code}
		)
		</foreach>
    </delete>
    <select id="queryHtcWorkDictByCode" parameterType="java.util.Map" resultMap="workDict" >
	                select hwd.group_id,
					       hwd.hos_id,
					       hwd.copy_code,
					       hwd.work_code,
					       hwd.work_name,
					       hwd.work_type_code,
						   hwt.work_type_name,
					       hwd.work_remark,
					       hwd.spell_code,
					       hwd.wbx_code,
					       hwd.is_people,
					       hwd.is_material,
					       hwd.is_asset
					  from htc_work_dict hwd
						left join htc_work_type hwt
						on hwd.group_id = hwt.group_id
						and hwd.hos_id = hwt.hos_id
						and hwd.copy_code = hwt.copy_code
						and hwd.work_type_code = hwt.work_type_code
						where hwd.group_id = #{group_id}
					    and hwd.hos_id = #{hos_id}
					    and hwd.copy_code = #{copy_code}
					    and hwd.work_code = #{work_code}
	</select>
	<select id="queryHtcWorkDict" parameterType="java.util.Map" resultMap="workDict" >
                    select hwd.group_id,
					       hwd.hos_id,
					       hwd.copy_code,
					       hwd.work_code,
					       hwd.work_name,
					       hwd.work_type_code,
						   hwt.work_type_name,
					       hwd.work_remark,
					       hwd.spell_code,
					       hwd.wbx_code,
					       hwd.is_people,
					       hwd.is_material,
					       hwd.is_asset
					  from htc_work_dict hwd
						left join htc_work_type hwt
						on hwd.group_id = hwt.group_id
						and hwd.hos_id = hwt.hos_id
						and hwd.copy_code = hwt.copy_code
						and hwd.work_type_code = hwt.work_type_code
                <where>     hwd.group_id = #{group_id}
					    and hwd.hos_id = #{hos_id}
					    and hwd.copy_code = #{copy_code}
			    <if test="work_code != null and work_code != ''">
                    and  (   hwd.work_code like '%'||#{work_code}||'%'
                          or hwd.work_name like '%'||#{work_code}||'%'
                        )
               </if>
			    <if test="work_type_code != null and work_type_code != ''">
                    and hwd.work_type_code = #{work_type_code}
               </if>
			    <if test="is_people != null and is_people != ''">
                    and hwd.is_people = #{is_people}
               </if>
			    <if test="is_material != null and is_material != ''">
                    and hwd.is_material = #{is_material}
               </if>
			    <if test="is_asset != null and is_asset != ''">
                    and hwd.is_asset = #{is_asset}
               </if>
        </where>   
				order by hwd.group_id,hwd.hos_id,hwd.copy_code,hwd.work_code
    </select>
	
</mapper>

