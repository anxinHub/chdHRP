<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.htc.dao.task.basic.HtcResCauseDictMapper">

	<resultMap id="resCauseDict" type="com.chd.hrp.htc.entity.task.basic.HtcResCauseDict">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id" />
        <result property="copy_code" column="copy_code"/>
        <result property="res_cause_code" column="res_cause_code"/>
        <result property="res_cause_name" column="res_cause_name"/>
        <result property="res_remark" column="res_remark"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
         <result property="fun_value" column="fun_value"/>
	</resultMap>
	
	  <insert id="addHtcResCauseDict" useGeneratedKeys="true" >
	        insert into htc_res_cause_dict
						  (group_id,
						   hos_id,
						   copy_code,
						   res_cause_code,
						   res_cause_name,
						   res_remark,
						   spell_code,
						   wbx_code,
						   fun_value)
						values
						  (#{group_id},
						   #{hos_id},
						   #{copy_code},
						   #{res_cause_code},
						   #{res_cause_name},
						   #{res_remark},
						   #{spell_code},
						   #{wbx_code},
						   #{fun_value})
	
	    </insert> 
    
    
	<insert id="addBatchHtcResCauseDict"  parameterType="java.util.List" >
	    
	        insert into htc_res_cause_dict
						  (group_id,
						   hos_id,
						   copy_code,
						   res_cause_code,
						   res_cause_name,
						   res_remark,
						   spell_code,
						   wbx_code,
						   fun_value)
	    <foreach collection="list" item="item" separator="union all">
	               select 
	                      #{group_id},
						   #{hos_id},
						   #{copy_code},
						   #{res_cause_code},
						   #{res_cause_name},
						   #{res_remark},
						   #{spell_code},
						   #{wbx_code},
						   #{fun_value}
				   from dual
	    </foreach>
	    </insert>
	    
	<update id="updateHtcResCauseDict" parameterType="java.util.Map">
         update htc_res_cause_dict
		   set res_cause_name = #{res_cause_name},
		       res_remark = #{res_remark},
		       spell_code = #{spell_code},
		       wbx_code = #{wbx_code},
		       fun_value = #{fun_value}
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}
		   and res_cause_code = #{res_cause_code}
	</update>

 
    <delete id="deleteBatchHtcResCauseDict" parameterType="java.util.Map">
   
       delete from htc_res_cause_dict where 
       <foreach collection="list" index="index" item="item" separator="or" >
		(
			group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and res_cause_code = #{item.res_cause_code}
		)
		</foreach>
    </delete>
    
    <select id="queryHtcResCauseDictByCode" parameterType="java.util.Map" resultMap="resCauseDict"  >
	       select group_id,
			       hos_id,
			       copy_code,
			       res_cause_code,
			       res_cause_name,
			       res_remark,
			       spell_code,
			       wbx_code,
			       fun_value
			  from htc_res_cause_dict
			   where group_id = #{group_id}
			   and hos_id = #{hos_id}
			   and copy_code = #{copy_code}
			   and res_cause_code = #{res_cause_code}
	</select>
	<select id="queryHtcResCauseDict" parameterType="java.util.Map" resultMap="resCauseDict" >            
            select group_id,
			       hos_id,
			       copy_code,
			       res_cause_code,
			       res_cause_name,
			       res_remark,
			       spell_code,
			       wbx_code,
			       fun_value
			  from htc_res_cause_dict
            <where>  group_id = #{group_id}
			   and hos_id = #{hos_id}
			   and copy_code = #{copy_code}
            	<if test="res_cause_code != null and res_cause_code != ''">
            		and res_cause_code = #{res_cause_code}
            	</if>                   
        </where>   
				order by group_id,hos_id,copy_code,res_cause_code
    </select>
</mapper>

