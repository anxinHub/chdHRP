<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.storage.special.MatSpecialMapper">
		 
	<resultMap id="matInMain" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="special_id" column="special_id"/>
		<result property="special_no" column="special_no"/> 
		<result property="in_id" column="in_id"/>
		<result property="in_no" column="in_no"/>
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_code" column="sup_code"/>
		<result property="sup_name" column="sup_name"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="dept_emp" column="dept_emp"/>
		<result property="emp_code" column="emp_code"/>
		<result property="dept_emp_name" column="dept_emp_name"/>
		<result property="brief" column="brief"/>
		<result property="stocker" column="stocker"/>
		<result property="stocker_name" column="stocker_name"/>
		<result property="stock_type_code" column="stock_type_code"/>
		<result property="stock_type_name" column="stock_type_name"/>
		<result property="is_org" column="is_org"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="make_date" column="make_date"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
		<result property="is_pay" column="is_pay"/>
		<result property="pay_date" column="pay_date"/>
		<result property="invoice_no" column="invoice_no"/>
		<result property="pay_money" column="pay_money"/>
		<result property="is_pay_all" column="is_pay_all"/>
		<result property="company" column="company"/>
		<result property="ctrl_type_code" column="ctrl_type_code"/>
		<result property="pay_name" column="pay_name"/>
		<result property="check_code" column="check_code"/>
		<result property="protocol_id" column="protocol_id"/>
		<result property="protocol_code" column="protocol_code"/>
		<result property="protocol_name" column="protocol_name"/>
		<result property="amount_money" column="amount_money"/>
		<result property="money_sum" column="money_sum"/>
		<result property="proj_id" column="proj_id"/>
		<result property="proj_code" column="proj_code"/>
		<result property="proj_name" column="proj_name"/>
		<result property="is_dir" column="is_dir"/>
		<result property="source_id" column="source_id"/>
		<result property="source_money" column="source_money"/>
		<result property="out_date" column="out_date"/>
		<result property="come_from" column="come_from"/>
		<result property="bill_date" column="bill_date"/>
		<result property="bill_no" column="bill_no"/>
		<result property="bill_state" column="bill_state"/>
		<result property="patient_name" column="patient_name"/>
		<result property="hospital_no" column="hospital_no"/>
		<result property="beds_no" column="beds_no"/>
		<result property="patient_sex" column="patient_sex"/>
		<result property="patient_age" column="patient_age"/>
		<result property="physician" column="physician"/>
		<result property="execution_dept" column="execution_dept"/>
		<result property="advice_class" column="advice_class"/>
		<result property="examiner" column="examiner"/>
		<result property="examiner_name" column="examiner_name"/>
		
	</resultMap>
	
	<resultMap id="matCommonInOrder" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="order_id" column="order_id"/>
		<result property="order_code" column="order_code"/>
		<result property="order_date" column="order_date"/>
		<result property="pur_type" column="pur_type"/>
		<result property="pur_type_name" column="pur_type_name"/>
		<result property="order_type" column="order_type"/>
		<result property="order_type_name" column="order_type_name"/>
		<result property="brif" column="brif"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_name" column="sup_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_name" column="dept_name"/>
		<result property="stocker" column="stocker"/>
		<result property="stocker_name" column="stocker_name"/>
		<result property="pur_hos_id" column="pur_hos_id"/>
		<result property="pur_hos_name" column="pur_hos_name"/>
		<result property="take_hos_id" column="take_hos_id"/>
		<result property="take_hos_name" column="take_hos_name"/>
		<result property="pay_hos_id" column="pay_hos_id"/>
		<result property="pay_hos_name" column="pay_hos_name"/>
		<result property="stock_type_code" column="stock_type_code"/>
		<result property="stock_type_name" column="stock_type_name"/>
		<result property="pay_code" column="pay_code"/>
		<result property="pay_name" column="pay_name"/>
		<result property="arr_address" column="arr_address"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="make_date" column="make_date"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="state" column="state"/>
		<result property="is_notice" column="is_notice"/>
		<result property="notice_date" column="notice_date"/>
		<result property="note" column="note"/>
	</resultMap>
	
       	
		
	<resultMap id="matInDetailCommon" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="in_id" column="in_id"/>
		<result property="in_detail_id" column="in_detail_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="bid_code" column="bid_code"/>
		<result property="left_amount" column="left_amount"/>
		<result property="left_money" column="left_money"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="batch_no" column="batch_no"/>
		<result property="batch_sn" column="batch_sn"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="amount_money" column="amount_money"/>
		
		<result property="sell_price" column="sell_price"/>
		<result property="sell_money" column="sell_money"/>
		<result property="sale_price" column="sale_price"/>
		<result property="sale_money" column="sale_money"/>
		<result property="allot_price" column="allot_price"/>
		<result property="allot_money" column="allot_money"/>
		<result property="pack_code" column="pack_code"/>
		<result property="pack_name" column="pack_name"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="pack_price" column="pack_price"/>
		<result property="num" column="num"/>
		<result property="bar_code" column="bar_code"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="sn" column="sn"/>
		
		<result property="brief" column="brief"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_code" column="sup_code"/>
		<result property="sup_name" column="sup_name"/>
		<result property="dept_emp" column="dept_emp"/>
		<result property="dept_emp_name" column="dept_emp_name"/>
		<result property="out_date" column="out_date"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="state" column="state"/>
		
		<result property="inva_date" column="inva_date"/>
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="detail_id" column="detail_id"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_name" column="store_name"/>
		<result property="disinfect_date" column="disinfect_date"/>
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		<result property="order_rela" column="order_rela"/>
		<result property="note" column="note"/>
		<result property="fac_id" column="fac_id"/>
		<result property="fac_code" column="fac_code"/>
		<result property="fac_name" column="fac_name"/>
		<result property="out_detail_id" column="out_detail_id" />
		<result property="cert_id" column="cert_id" />
		<result property="cert_code" column="cert_code" />
		<result property="start_date" column="start_date" />
		<result property="end_date" column="end_date" />
		<result property="fac_date" column="fac_date" />
		<result property="serial_no" column="serial_no" />
		<result property="location_new_id" column="location_new_id" />
		<result property="location_new_name" column="location_new_name" />
		<result property="location_new_code" column="location_new_code" />
		<result property="affi_out_no" column="affi_out_no" />
		<result property="is_highvalue" column="is_highvalue" />
		<result property="special_no" column="special_no" />
		
	</resultMap>
	
	
	<!-- 结存 、结余表 Map -->
	<resultMap id="balanceMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="store_id" column="store_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="batch_no" column="batch_no"/>
		 
		<result property="batch_sn" column="batch_sn"/>
		<result property="bar_code" column="bar_code"/>
		<result property="price" column="price"/>
		<result property="in_amount" column="in_amount"/>
		<result property="in_money" column="in_money"/>
		<result property="out_amount" column="out_amount"/>
		<result property="out_money" column="out_money"/>
		<result property="begin_amount" column="begin_amount"/>
		<result property="begin_money" column="begin_money"/>
		<result property="y_in_amount" column="y_in_amount"/>
		<result property="y_in_money" column="y_in_money"/>
		<result property="y_out_amount" column="y_out_amount"/>
		<result property="y_out_money" column="y_out_money"/>
		<result property="remove_zero_error" column="remove_zero_error"/>
		<result property="location_id" column="location_id"/>
		<result property="sale_price" column="sale_price"/>
		<result property="begin_sale_money" column="begin_sale_money"/>
		<result property="in_sale_money" column="in_sale_money"/>
		<result property="out_sale_money" column="out_sale_money"/>
		<result property="y_in_sale_money" column="y_in_sale_money"/>
		<result property="y_out_sale_money" column="y_out_sale_money"/>
		<result property="sale_zero_error" column="sale_zero_error"/>
		<result property="end_amount" column="end_amount"/>
		<result property="end_money" column="end_money"/>
		<result property="end_sale_money" column="end_sale_money"/>
		<result property="left_amount" column="left_amount"/>
		<result property="left_money" column="left_money"/>
		<result property="imme_amount" column="imme_amount"/>
		<result property="cur_amount" column="cur_amount"/>
		<result property="cur_money" column="cur_money"/>
	</resultMap>
	
	<resultMap id="matSpecialDetailMapping" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="special_id" column="special_id"/>
		<result property="special_no" column="special_no"/>
		<result property="in_id" column="in_id"/>
		<result property="in_no" column="in_no"/>
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="brief" column="brief"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_name" column="store_name"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_name" column="sup_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="stocker" column="stocker"/>
		<result property="stocker_name" column="stocker_name"/>
		<result property="amount_money" column="amount_money"/>
		<result property="make_date" column="make_date"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
		<result property="come_from" column="come_from"/>
		<result property="bill_no" column="bill_no"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_name" column="unit_name"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="bar_code" column="bar_code"/>
		<result property="batch_no" column="batch_no"/>
		<result property="fac_name" column="fac_name"/>
		<result property="mat_type_id" column="mat_type_id"/>
		<result property="mat_type_name" column="mat_type_name"/>
		<result property="cert_code" column="cert_code"/>
		<result property="examiner" column="examiner"/>
		<result property="examiner_name" column="examiner_name"/>
		<result property="inva_date" column="inva_date"/>
		<result property="fac_date" column="fac_date"/>
	</resultMap>
	
	<resultMap id="matSpecailInvDetail" type="java.util.Map">
		<result property="inv_code" column="group_id"/>
		<result property="inv_name" column="hos_id"/>
		<result property="batch_no" column="batch_no"/>
		<result property="bill_no" column="bill_no"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="inva_date" column="inva_date"/>
		<result property="special_id" column="special_id"/>
		
	</resultMap>
	
	<!-- 新增专购品入库主表数据-->
	<insert id="addInMain" parameterType="java.util.Map">
		INSERT INTO MAT_IN_MAIN (
			group_id, hos_id, copy_code, in_id, in_no, year, month, bus_type_code, 
			store_id, store_no, in_date, brief, maker, state, amount_money 
			<if test="sup_no != null and sup_no != ''">, sup_no</if>
			<if test="sup_id != null and sup_id != ''">, sup_id</if>
			<if test="stocker != null and stocker != ''">, stocker</if>
			<if test="checker != null and checker != ''">, checker</if>
			<if test="check_date != null and check_date != ''">, check_date</if>
			<if test="confirmer != null and confirmer != ''">, confirmer</if>
			<if test="confirm_date != null and confirm_date != ''">, confirm_date</if>
			<if test="protocol_code != null and protocol_code != ''">, protocol_code</if>
			<if test="app_dept != null and app_dept != ''">, app_dept</if>
			<if test="proj_id != null and proj_id != ''">, proj_id</if>
			<if test="is_dir != null and is_dir != ''">, is_dir</if>
			<if test="bill_date != null and bill_date != ''">, bill_date</if>
			<if test="bill_no != null and bill_no != ''">, bill_no</if>
			
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{in_id,jdbcType=INTEGER},
			#{in_no,jdbcType=VARCHAR},
			#{year,jdbcType=VARCHAR},
			#{month,jdbcType=VARCHAR},
			#{bus_type_code_in,jdbcType=VARCHAR},
			#{store_id,jdbcType=INTEGER},
			#{store_no,jdbcType=INTEGER},
			#{in_date,jdbcType=DATE},
			#{brief,jdbcType=VARCHAR},
			#{maker,jdbcType=INTEGER},
			1, 
			#{amount_money,jdbcType=FLOAT}
			<if test="sup_no != null and sup_no != ''">, #{sup_no,jdbcType=INTEGER}</if>
			<if test="sup_id != null and sup_id != ''">, #{sup_id,jdbcType=INTEGER}</if>
			<if test="stocker != null and stocker != ''">, #{stocker,jdbcType=VARCHAR}</if>
			<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
			<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
			<if test="confirmer != null and confirmer != ''">, #{confirmer,jdbcType=INTEGER}</if>
			<if test="confirm_date != null and confirm_date != ''">, #{confirm_date,jdbcType=DATE}</if>
			<if test="protocol_code != null and protocol_code != ''">, #{protocol_code,jdbcType=VARCHAR}</if>
			<if test="app_dept != null and app_dept != ''">, #{app_dept,jdbcType=INTEGER}</if>
			<if test="proj_id != null and proj_id != ''">, #{proj_id,jdbcType=INTEGER}</if>
			<if test="is_dir != null and is_dir != ''">, #{is_dir,jdbcType=INTEGER}</if>
			<if test="bill_date != null and bill_date != ''">, #{bill_date,jdbcType=DATE}</if>
			<if test="bill_no != null and bill_no != ''">, #{bill_no,jdbcType=VARCHAR}</if>
			
		)
	</insert>
	
		<!-- 新增专购品出库主表数据-->
	<insert id="addOutMain" parameterType="java.util.Map">
		INSERT INTO MAT_OUT_MAIN (
			group_id, hos_id, copy_code, out_id, out_no, year, month, bus_type_code, 
			store_id, store_no, dept_id , dept_no , dept_emp , maker, out_date, state, amount_money
			<if test="brief != null and brief != ''">, brief</if>
			<if test="checker != null and checker != ''">, checker</if>
			<if test="check_date != null and check_date != ''">, check_date</if>
			<if test="confirmer != null and confirmer != ''">, confirmer</if>
			<if test="confirm_date != null and confirm_date != ''">, confirm_date</if>
			<if test="is_dir != null and is_dir != ''">, is_dir</if>
			<if test="his_flag != null and his_flag != ''">, his_flag</if>
			<if test="proj_id != null and proj_id != ''">, proj_id</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{out_id,jdbcType=INTEGER},
			#{out_no,jdbcType=VARCHAR},
			#{year,jdbcType=VARCHAR},
			#{month,jdbcType=VARCHAR},
			#{bus_type_code_out,jdbcType=VARCHAR},
			#{store_id,jdbcType=INTEGER},
			#{store_no,jdbcType=INTEGER},
			#{dept_id,jdbcType=INTEGER},
			#{dept_no,jdbcType=INTEGER},
			#{dept_emp,jdbcType=INTEGER},
			#{maker,jdbcType=INTEGER},
			#{out_date,jdbcType=DATE},
			1, 
			#{amount_money,jdbcType=FLOAT}
			<if test="brief != null and brief != ''">, #{brief,jdbcType=VARCHAR}</if>
			<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
			<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
			<if test="confirmer != null and confirmer != ''">, #{confirmer,jdbcType=INTEGER}</if>
			<if test="confirm_date != null and confirm_date != ''">,#{confirm_date,jdbcType=DATE}</if>
			<if test="is_dir != null and is_dir != ''">, #{is_dir,jdbcType=VARCHAR}</if>
			<if test="his_flag != null and his_flag != ''">, #{his_flag,jdbcType=INTEGER}</if>
			<if test="proj_id != null and proj_id != ''">, #{proj_id,jdbcType=INTEGER}</if>
		)
	</insert>
	
	<!-- 专购品 主查询 -->
	<select id="queryMatSpecial" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT temp.* FROM (
				select null as group_id, null as hos_id, null as copy_code, null as special_id, to_char('合计') as special_no
				, null as in_id, null as in_no, null as out_id, null as out_no, null as year
				, null as month, null as brief, null as store_id, null as store_no, null as store_name
				, null as bus_type_code, null as bus_type_name,null as sup_id, null as sup_no, null as sup_name, null as dept_id
				, null as dept_no, null as dept_code, null as dept_name, null as stocker, null as stocker_name
				, sum(t.amount_money) as amount_money, null as make_date, null as maker, null as maker_name, null as checker
				, null as checker_name, null as check_date, null as confirm_date, null as confirmer, null as confirmer_name
				, null as state, null as state_name ,null as come_from, null as bill_no, null as bill_state ,
				null as examiner , null as examiner_name
			FROM MAT_SPECIAL_MAIN msm
			LEFT JOIN (
			     SELECT special_id, SUM(amount_money) AS amount_money
			     FROM mat_special_detail
			     WHERE group_id = #{group_id}
			     AND hos_id = #{hos_id}
			     AND copy_code = #{copy_code}
			     GROUP BY special_id
			) t ON msm.special_id = t.special_id
			
			LEFT JOIN MAT_SPECIAL_RELA msr
			ON
				msm.group_id = msr.group_id
				and msm.hos_id = msr.hos_id
				and msm.copy_code = msr.copy_code
				and msm.special_id = msr.special_id
				and msm.special_no = msr.special_no
			LEFT JOIN (
				SELECT distinct in_id FROM mat_bill_detail 
				WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER} 
					AND copy_code = #{copy_code,jdbcType=VARCHAR} 
			) mbdt
				ON msr.in_id = mbdt.in_id 
			
			<!-- <if test="bus_type_flag == 1">
				LEFT JOIN MAT_IN_MAIN mim
				ON
					msr.group_id = mim.group_id
					and msr.hos_id = mim.hos_id
					and msr.copy_code = mim.copy_code
					and msr.in_id = mim.in_id
			</if>
			
			<if test="bus_type_flag == 2">
				LEFT JOIN MAT_OUT_MAIN mom
				ON
					msr.group_id = mom.group_id
					and msr.hos_id = mom.hos_id
					and msr.copy_code = mom.copy_code
					and msr.out_id = mom.out_id
			</if> -->
			
			<where>
				msm.group_id = #{group_id,jdbcType=INTEGER}
				AND msm.hos_id = #{hos_id,jdbcType=INTEGER}
				AND msm.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="begin_in_date != null and begin_in_date != '' and end_in_date != null and end_in_date != '' ">
					AND msm.make_date between #{begin_in_date,jdbcType=DATE} and  #{end_in_date,jdbcType=DATE}
				</if>
				<if test="begin_confirm_date != null and begin_confirm_date != '' and end_confirm_date != null and end_confirm_date != '' ">
					AND msm.confirm_date between #{begin_confirm_date,jdbcType=DATE} and  #{end_confirm_date,jdbcType=DATE}
				</if>
				<if test="state != null and state != ''">
					AND msm.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					AND msm.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="store_id == null or store_id == '' ">
					AND to_char(msm.store_id) in (
						select perm_code from v_user_data_perm
						where group_id = ${group_id}
							and hos_id = ${hos_id} 
							and user_id = ${user_id} 
							and table_code = 'HOS_STORE_DICT' 
							and is_read = 1  
							and is_write = 1
					)
				</if>
				<if test="sup_id != null and sup_id != ''">
					AND msm.sup_id = #{sup_id,jdbcType=INTEGER}
				</if>
				<if test="come_from != null and come_from != ''">
					AND msm.come_from = #{come_from,jdbcType=INTEGER}
				</if>
				<if test="special_no != null and special_no != ''">
					AND msm.special_no like '%${special_no}%'
				</if>
				<if test="dept_id != null and dept_id != ''">
					AND msm.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="bill_no != null and bill_no != ''">
					AND msm.bill_no like '%${bill_no}%'
				</if>
				<if test="not_bill != null and not_bill == 1">
					AND nvl(msm.bill_no, '空') = '空'
				</if>
				<if test="brief != null and brief != ''">
					AND  msm.brief like '%${brief}%'
				</if>
				<if test="bill_state != null and bill_state != ''">
					AND (
						(${bill_state} = 1 and nvl(mbdt.in_id, 0) &lt;&gt; 0)
						or
						(${bill_state} = 0 and nvl(mbdt.in_id, 0) = 0)
					)
				</if>
				<if test="examiner != null and examiner != ''">
					AND  msm.examiner =  #{examiner,jdbcType=INTEGER}
				</if>
				<if test="bus_type == 47 and bus_type == '47' ">
				    and t.amount_money  &gt; 0
				</if>
			    <if test="bus_type == 50 and bus_type == '50' ">
				    and t.amount_money  &lt; 0
				</if>
				<!-- <if test="bus_type_flag == 1 and bus_type_code != null and bus_type_code != '' ">
					AND mim.bus_type_code = #{bus_type_code}
				</if>
				
				<if test="bus_type_flag == 2 and bus_type_code != null and bus_type_code != '' ">
					AND mom.bus_type_code = #{bus_type_code}
				</if> -->
				
			</where>  
			UNION ALL
			SELECT 
				msm.group_id, msm.hos_id, msm.copy_code, msm.special_id, to_char(msm.special_no) special_no, msr.in_id ,msr.in_no , msr.out_id, 
				msr.out_no, msm.year ,msm.month ,msm.brief, msm.store_id, msm.store_no, hsc.store_name,	msm. bus_type_code,
              case when msm.bus_type_code = 01 then '正常'
			else '冲账' end bus_type_name,
				msm.sup_id, msm.sup_no, hsd.sup_name, msm.dept_id, msm.dept_no, hdd.dept_code,hdd.dept_name, msm.stocker, 
				he.emp_name as stocker_name,t.amount_money, msm.make_date, msm.maker, su.user_name as maker_name, msm.checker,
				syu.user_name as checker_name ,msm.check_date,msm.confirm_date, msm.confirmer , 
				sysu.user_name as confirmer_name, msm.state,
        case when msm.state = 0 then '验收'
			when msm.state = 1 then '未审核'
        when msm.state = 2 then '审核'
         when msm.state = 3 then '入库确认'
		
			else '财务记账' end state_name,
				mdd.field_desc come_from, msm.bill_no, 
				case when nvl(mbdt.in_id, 0) = 0 then 0 else 1 end bill_state ,
				msm.examiner, hemp.emp_name as examiner_name
			FROM MAT_SPECIAL_MAIN  msm
			LEFT JOIN (select special_id , sum(amount_money) as amount_money from mat_special_detail 
							where group_id = #{group_id} and hos_id = #{hos_id} and 
							copy_code  = #{copy_code}  group by special_id 
			) t ON msm.special_id = t.special_id
			LEFT JOIN MAT_SPECIAL_RELA msr
				ON
					msm.group_id = msr.group_id
					and msm.hos_id = msr.hos_id
					and msm.copy_code = msr.copy_code
					and msm.special_id = msr.special_id
					and msm.special_no = msr.special_no
			LEFT JOIN (
				SELECT distinct in_id FROM mat_bill_detail 
				WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER} 
					AND copy_code = #{copy_code,jdbcType=VARCHAR} 
			) mbdt
				ON msr.in_id = mbdt.in_id 
			LEFT JOIN HOS_DEPT_DICT hdd
				ON 
					msm.group_id = hdd.group_id
					and msm.hos_id = hdd.hos_id
					and msm.dept_id = hdd.dept_id
					and msm.dept_no = hdd.dept_no
					and hdd.is_stop = 0
			LEFT JOIN hos_store_dict hsc
				on msm.group_id = hsc.group_id
				and msm.hos_id = hsc.hos_id
				and msm.store_no = hsc.store_no
			LEFT JOIN sys_user su
				on msm.group_id = su.group_id
				and msm.hos_id = su.hos_id
				and msm.maker = su.user_id
			LEFT JOIN sys_user syu
				on msm.group_id = syu.group_id
				and msm.hos_id = syu.hos_id
				and msm.checker = syu.user_id
			LEFT JOIN sys_user sysu
				on msm.group_id = sysu.group_id
				and msm.hos_id = sysu.hos_id
				and msm.confirmer = sysu.user_id
			LEFT JOIN hos_sup_dict hsd
				on msm.group_id = hsd.group_id
				and msm.hos_id = hsd.hos_id
				and msm.sup_id = hsd.sup_id
				and msm.sup_no = hsd.sup_no
			LEFT JOIN hos_emp he
				on msm.group_id = he.group_id
				and msm.hos_id = he.hos_id
				and msm.stocker = he.emp_id
			LEFT JOIN hos_emp hemp
				on msm.group_id = hemp.group_id
				and msm.hos_id = hemp.hos_id
				and msm.examiner = hemp.emp_id
			left join mat_data_dict mdd on mdd.data_code='04013'
				and mdd.field_value = msm.come_from
				
			<!-- <if test="bus_type_flag == 1">
				LEFT JOIN MAT_IN_MAIN mim
				ON
					msr.group_id = mim.group_id
					and msr.hos_id = mim.hos_id
					and msr.copy_code = mim.copy_code
					and msr.in_id = mim.in_id
			</if>
			
			<if test="bus_type_flag == 2">
				LEFT JOIN MAT_OUT_MAIN mom
				ON
					msr.group_id = mom.group_id
					and msr.hos_id = mom.hos_id
					and msr.copy_code = mom.copy_code
					and msr.out_id = mom.out_id
			</if> -->
			
			<where>
				msm.group_id = #{group_id,jdbcType=INTEGER}
				AND msm.hos_id = #{hos_id,jdbcType=INTEGER}
				AND msm.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="begin_in_date != null and begin_in_date != '' and end_in_date != null and end_in_date != '' ">
					AND msm.make_date between #{begin_in_date,jdbcType=DATE} and  #{end_in_date,jdbcType=DATE}
				</if>
				<if test="begin_confirm_date != null and begin_confirm_date != '' and end_confirm_date != null and end_confirm_date != '' ">
					AND msm.confirm_date between #{begin_confirm_date,jdbcType=DATE} and  #{end_confirm_date,jdbcType=DATE}
				</if>
				<if test="state != null and state != ''">
					AND msm.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					AND msm.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="store_id == null or store_id == '' ">
					AND to_char(msm.store_id) in (
						select perm_code from v_user_data_perm
						where group_id = ${group_id}
							and hos_id = ${hos_id} 
							and user_id = ${user_id} 
							and table_code = 'HOS_STORE_DICT' 
							and is_read = 1  
							and is_write = 1
					)
				</if>
				<if test="sup_id != null and sup_id != ''">
					AND msm.sup_id = #{sup_id,jdbcType=INTEGER}
				</if>
				<if test="come_from != null and come_from != ''">
					AND msm.come_from = #{come_from,jdbcType=INTEGER}
				</if>
				<if test="special_no != null and special_no != ''">
					AND msm.special_no like '%${special_no}%'
				</if>
				<if test="dept_id != null and dept_id != ''">
					AND msm.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="bill_no != null and bill_no != ''">
					AND msm.bill_no like '%${bill_no}%'
				</if>
				<if test="not_bill != null and not_bill == 1">
					AND nvl(msm.bill_no, '空') = '空'
				</if>
				<if test="brief != null and brief != ''">
					AND  msm.brief like '%${brief}%'
				</if>
				
				<if test="bus_type_flag == 1 and bus_type_code != null and bus_type_code != '' ">
					AND mim.bus_type_code = #{bus_type_code}
				</if>
				
				<if test="bus_type_flag == 2 and bus_type_code != null and bus_type_code != '' ">
					AND mom.bus_type_code = #{bus_type_code}
				</if>
				<if test="bill_state != null and bill_state != ''">
					AND (
						(${bill_state} = 1 and nvl(mbdt.in_id, 0) &lt;&gt; 0)
						or
						(${bill_state} = 0 and nvl(mbdt.in_id, 0) = 0)
					)
				</if>
				<if test="examiner != null and examiner != ''">
					AND  msm.examiner =  #{examiner,jdbcType=INTEGER}
				</if>
				 <if test="bus_type == 47 and bus_type == '47' ">
				    and t.amount_money  &gt; 0
				</if>
			    <if test="bus_type == 50 and bus_type == '50' ">
				    and t.amount_money  &lt; 0
				</if>
			</where>   
		) temp ORDER BY temp.special_id DESC
	</select>
	<!-- 代销生成专购品 查询  -->
	<select id="queryMatAffiSpecial" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT 
			msm.group_id, msm.hos_id, msm.copy_code, msm.special_id, msm.special_no, msr.in_id ,msr.in_no , msr.out_id, 
			msr.out_no, msm.year ,msm.month ,msm.brief, msm.store_id, msm.store_no, hsc.store_name,	msm. bus_type_code,
			msm.sup_id, msm.sup_no, hsd.sup_name, msm.dept_id, msm.dept_no, hdd.dept_code,hdd.dept_name, msm.stocker, 
			he.emp_name as stocker_name,t.amount_money, msm.make_date, msm.maker, su.user_name as maker_name, msm.checker,
			syu.user_name as checker_name ,msm.check_date,msm.confirm_date, msm.confirmer , 
			sysu.user_name as confirmer_name, msm.state,mdd.field_desc come_from
		FROM MAT_SPECIAL_MAIN  msm
		LEFT JOIN (select special_id , sum(amount_money) as amount_money from mat_special_detail 
						where group_id = #{group_id} and hos_id = #{hos_id} and 
						copy_code  = #{copy_code}  group by special_id 
		) t ON msm.special_id = t.special_id
		LEFT JOIN MAT_SPECIAL_RELA msr
			ON
				msm.group_id = msr.group_id
				and msm.hos_id = msr.hos_id
				and msm.copy_code = msr.copy_code
				and msm.special_id = msr.special_id
				and msm.special_no = msr.special_no
		LEFT JOIN HOS_DEPT_DICT hdd
			ON 
				msm.group_id = hdd.group_id
				and msm.hos_id = hdd.hos_id
				and msm.dept_id = hdd.dept_id
				and msm.dept_no = hdd.dept_no
				and hdd.is_stop = 0
		LEFT JOIN hos_store_dict hsc
			on msm.group_id = hsc.group_id
			and msm.hos_id = hsc.hos_id
			and msm.store_no = hsc.store_no
		LEFT JOIN sys_user su
			on msm.group_id = su.group_id
			and msm.hos_id = su.hos_id
			and msm.maker = su.user_id
		LEFT JOIN sys_user syu
			on msm.group_id = syu.group_id
			and msm.hos_id = syu.hos_id
			and msm.checker = syu.user_id
		LEFT JOIN sys_user sysu
			on msm.group_id = sysu.group_id
			and msm.hos_id = sysu.hos_id
			and msm.confirmer = sysu.user_id
		LEFT JOIN hos_sup_dict hsd
			on msm.group_id = hsd.group_id
			and msm.hos_id = hsd.hos_id
			and msm.sup_id = hsd.sup_id
			and msm.sup_no = hsd.sup_no
		LEFT JOIN hos_emp he
			on msm.group_id = he.group_id
			and msm.hos_id = he.hos_id
			and msm.stocker = he.emp_id
		left join mat_data_dict mdd on mdd.data_code = '04013'
			and mdd.field_value = msm.come_from
		<where>
			msm.group_id = #{group_id,jdbcType=INTEGER}
			AND msm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND msm.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="state != null and state != ''">
				AND msm.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				AND msm.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND msm.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND msm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			and msm.come_from = 2
		</where>   
		order by msm.special_id
	
	</select>
	<!-- 根据 ID 查询 专购品主表 MAT_SPECIAL_MAIN 数据 -->
	<select id="queryMatSpecialById" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT 
			group_id, hos_id, copy_code, special_id, special_no, year, month , bus_type_code, sup_id, sup_no, store_id, 
			store_no, dept_id, dept_no, dept_emp, brief, stocker, stock_type_code, maker, make_date,checker, check_date,
			confirmer, confirm_date, state, protocol_code , proj_id,come_from, bill_date, bill_no
		FROM MAT_SPECIAL_MAIN
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="special_id != null and special_id != ''">
				AND special_id = #{special_id,jdbcType=INTEGER}
			</if>
			<if test="special_no != null and special_no != ''">
				AND special_no = #{special_no , jdbcType=VARCHAR}
			</if>
		</where>   
		order by special_id
	</select>
	
	<!-- 根据 ID 查询 专购品入库主表 MAT_IN_MAIN 数据 -->
	<select id="queryInMainDataById" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT 
			group_id, hos_id, copy_code, in_id, in_no, year, month , bus_type_code, sup_id, sup_no, store_id, 
			store_no,  brief, stocker, stock_type_code, maker, in_date, checker, check_date, confirmer, confirm_date, 
			state, protocol_code , app_dept, proj_id, is_dir, amount_money, come_from
		FROM MAT_IN_MAIN  
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="in_id != null and in_id != ''">
				AND in_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="in_no != null and in_no != ''">
				AND in_no = #{in_no , jdbcType=VARCHAR}
			</if>
		</where>   
		order by in_id
	</select>
	
	<!-- 根据 ID 查询 专购品出库主表 MAT_OUT_MAIN 数据 -->
	<select id="queryMatOutMainByCode" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT 
			group_id, hos_id, copy_code, out_id, out_no, year, month , bus_type_code, store_id,	store_no,  brief,
			dept_id, dept_no, dept_emp, use_code, maker, out_date, checker, check_date,	confirmer, confirm_date, 
			state, is_dir, his_flag, proj_id, amount_money
		FROM MAT_OUT_MAIN  
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="out_id != null and out_id != ''">
				AND out_id = #{out_id,jdbcType=INTEGER}
			</if>
			<if test="out_no != null and out_no != ''">
				AND out_no = #{out_no , jdbcType=VARCHAR}
			</if>
		</where>   
		order by out_id
	</select>
	<!-- 根据主键Id获取 专购品入库明细表List -->
	<select id="queryMatInDetailById" parameterType="java.util.Map" resultMap="matInDetailCommon" >
		SELECT group_id, hos_id, copy_code, in_id, in_no, in_detail_id, inv_id, inv_no, batch_no, batch_sn, 
			price, amount, amount_money, sell_price, sell_money, sale_price, sale_money, allot_price, 
			allot_money, pack_code, num_exchange, pack_price, num, sn, bar_code, inva_date, 
			disinfect_date, location_id, note
		FROM MAT_IN_DETAIL 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id  =#{in_id,jdbcType=INTEGER}
			AND in_no  =#{in_no,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据主键Id获取    专购品出库明细表List -->
	<select id="queryMatOutDetailById" parameterType="java.util.Map" resultMap="matInDetailCommon" >
		SELECT group_id, hos_id, copy_code, out_id, out_no, out_detail_id, inv_id, inv_no, batch_no, batch_sn, 
			price, amount, amount_money, sell_price, sell_money, sale_price, sale_money, allot_price, 
			allot_money, pack_code, num_exchange, pack_price, num, bar_code, inva_date, 
			disinfect_date, location_id, note
		FROM MAT_OUT_DETAIL 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND out_id  =#{out_id,jdbcType=INTEGER}
			AND out_no  =#{out_no,jdbcType=VARCHAR}
	</select>
	<!-- 入库确认 -->
	<select id="confirmCommonIn" statementType="CALLABLE" parameterType="java.util.Map" resultType="java.lang.String">
		<![CDATA[
			{call mat_in_confirm(#{group_id,jdbcType=INTEGER}, #{hos_id,jdbcType=INTEGER}, 
				#{copy_code,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, #{in_ids,jdbcType=VARCHAR}, 
				#{msg, mode=OUT, jdbcType=VARCHAR})}
		]]>
	</select>
	
	<!-- 入库单复制主表 -->
	<insert id="insertCopyMain" useGeneratedKeys="true" parameterType="java.util.Map" >
		<selectKey resultType="java.lang.Long" order="BEFORE"  keyProperty="new_in_id">
			SELECT MAT_IN_MAIN_SEQ.nextval as new_in_id FROM DUAL
		</selectKey> 
		INSERT INTO MAT_IN_MAIN(
			in_id, group_id, hos_id, copy_code, in_no, year, month, bus_type_code, store_id, store_no, 
			in_date, brief, maker, make_date, state, sup_no, sup_id, stocker, stock_type_code, is_org, 
			ctrl_type_code, company, protocol_code, dept_id, dept_no, app_dept)
		SELECT #{new_in_id,jdbcType=INTEGER}, group_id, hos_id, copy_code, #{in_no,jdbcType=VARCHAR}, 
			#{year,jdbcType=VARCHAR}, #{month,jdbcType=VARCHAR}, bus_type_code, store_id, store_no, 
			#{in_date,jdbcType=DATE}, '复制'||in_no||'入库单', #{maker,jdbcType=INTEGER}, 
			#{make_date,jdbcType=DATE}, 1, sup_no, sup_id, stocker, stock_type_code, is_org, 
			ctrl_type_code, company, protocol_code, dept_id, dept_no, app_dept
		FROM MAT_IN_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</insert>
	
	<!-- 用于专购品  更新页面加载 -->
	<select id="queryMatSpecialMainUpdate" resultMap="matInMain" parameterType="java.util.Map" >
		SELECT 	msm.group_id, msm.hos_id, msm.copy_code, msm.special_id, msm.special_no, msr.in_id ,msr.in_no , msr.out_id,
			msr.out_no, msm.year, msm.month ,msm.brief, msm.store_id, msm.store_no, hsc.store_name,	msm. bus_type_code,
			msm.sup_id, msm.sup_no, hsd.sup_name, msm.dept_id, msm.dept_no, hdd.dept_code,hdd.dept_name,
			 msm.dept_emp,hemp.emp_code, hemp.emp_name dept_emp_name,	msm.stocker, he.emp_name stocker_name,t.amount_money,
			 msm.make_date, msm.maker , su.user_name as maker_name,	msm.confirm_date, msm.confirmer , 
			 sysu.user_name as confirmer_name,	msm.state,
             msm.protocol_code, 
            (
            select sum(pmf.IS_PRICE_CONT)
            from PACT_MAIN_FKXY pmf 
            where pmf.group_id =msm.group_id and pmf.hos_id =msm.hos_id and pmf.copy_code =msm.copy_code
               and pmf.pact_code in (
                 SELECT REGEXP_SUBSTR (msm.protocol_code, '[^,]+', 1,rownum) out_id
                from dual connect by rownum &lt;=LENGTH (msm.protocol_code) - LENGTH (regexp_replace(msm.protocol_code, ',', ''))+1
               )
            ) protocol_id,
            (
            select sum(pmf.IS_TOTAL_CONT)
            from PACT_MAIN_FKXY pmf 
            where pmf.group_id =msm.group_id and pmf.hos_id =msm.hos_id and pmf.copy_code =msm.copy_code
               and pmf.pact_code in (
                 SELECT REGEXP_SUBSTR (msm.protocol_code, '[^,]+', 1,rownum) out_id
                from dual connect by rownum &lt;=LENGTH (msm.protocol_code) - LENGTH (regexp_replace(msm.protocol_code, ',', ''))+1
               )
            ) protocol_name,
			 msm.proj_id , hpd.proj_code , hpd.proj_name ,msm.stock_type_code , mst.stock_type_name, msm.bill_date, msm.bill_no
			 ,msm.checker,csu.user_name as checker_name,msm.patient_name,msm.hospital_no,msm.beds_no,msm.patient_sex,
            msm.patient_age,msm.physician,msm.execution_dept,msm.advice_class , msm.examiner
		FROM MAT_SPECIAL_MAIN  msm
		LEFT JOIN (select special_id , sum(amount_money) amount_money from mat_special_detail 
						where group_id = #{group_id} and hos_id = #{hos_id} and 
						copy_code  = #{copy_code}  group by special_id ) t
			ON
				msm.special_id = t.special_id
		LEFT JOIN MAT_SPECIAL_RELA msr
			ON
				msm.group_id = msr.group_id
				and msm.hos_id = msr.hos_id
				and msm.copy_code = msr.copy_code
				and msm.special_id = msr.special_id
				and msm.special_no = msr.special_no
		LEFT JOIN HOS_DEPT_DICT hdd
			ON 
				msm.group_id = hdd.group_id
				and msm.hos_id = hdd.hos_id
				and msm.dept_id = hdd.dept_id
				<!-- and msm.dept_no = hdd.dept_no -->
				and hdd.is_stop = 0
		LEFT JOIN hos_store_dict hsc
			on msm.group_id = hsc.group_id
			and msm.hos_id = hsc.hos_id
			and msm.store_no = hsc.store_no
		LEFT JOIN sys_user su
			on msm.group_id = su.group_id
			and msm.hos_id = su.hos_id
			and msm.maker = su.user_id
		LEFT JOIN sys_user sysu
			on msm.group_id = sysu.group_id
			and msm.hos_id = sysu.hos_id
			and msm.confirmer = sysu.user_id
		left join sys_user csu on msm.group_id = csu.group_id
			and msm.hos_id = csu.hos_id
			and msm.checker = csu.user_id 
		LEFT JOIN hos_sup_dict hsd
			on msm.group_id = hsd.group_id
			and msm.hos_id = hsd.hos_id
			and msm.sup_id = hsd.sup_id
			<!-- and msm.sup_no = hsd.sup_no -->
			and hsd.is_stop  = 0
		LEFT JOIN hos_emp he
			on msm.group_id = he.group_id
			and msm.hos_id = he.hos_id
			and msm.stocker = he.emp_id
		LEFT JOIN hos_emp hemp
			on msm.group_id = hemp.group_id
			and msm.hos_id = hemp.hos_id
			and msm.dept_emp = hemp.emp_id
		
		left join hos_proj_dict  hpd
			ON
				msm.group_id  = hpd.group_id and  
				msm.hos_id = hpd.hos_id and 
				msm.proj_id = hpd.proj_id
				and hpd.is_stop = 0
		left join mat_stock_type  mst
			ON
				msm.group_id  = mst.group_id and  
				msm.hos_id = mst.hos_id and 
				msm.copy_code = mst.copy_code and 
				msm.stock_type_code = mst.stock_type_code
				and mst.is_stop = 0 
		WHERE msm.group_id = #{group_id,jdbcType=INTEGER}
			AND msm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND msm.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND msm.special_id = #{special_id,jdbcType=INTEGER}
			<!-- AND msm.special_no = #{special_no,jdbcType=VARCHAR}   -->
	</select>
	<!-- 入库单复制明细表 -->
	<insert id="insertCopyDetail" parameterType="java.util.Map" >
		INSERT INTO MAT_IN_DETAIL(
			in_id, in_detail_id, group_id, hos_id, copy_code, inv_id, inv_no, amount, price, amount_money, 
			batch_no, batch_sn, sn, bar_code, sell_price, sell_money, allot_price, allot_money, pack_code, 
			num_exchange, pack_price, num, is_per_bar, inva_date, disinfect_date, location_id, note)
		SELECT #{new_in_id,jdbcType=INTEGER}, MAT_IN_DETAIL_SEQ.nextval, group_id, hos_id, copy_code, 
			inv_id, inv_no, amount, price, amount_money, batch_no, batch_sn, sn, bar_code, sell_price, 
			sell_money, allot_price, allot_money, pack_code, num_exchange, pack_price, num, is_per_bar, 
			inva_date, disinfect_date, location_id, note
		FROM MAT_IN_DETAIL mid
		LEFT JOIN MAT_IN_MAIN mim
			ON mid.group_id = mim.group_id
			AND mid.hos_id = mim.hos_id
			AND mid.copy_code = mim.copy_code
			AND mid.in_id = mim.in_id
		WHERE mid.group_id = #{group_id,jdbcType=INTEGER}
			AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mim.in_id = #{in_id,jdbcType=INTEGER}
	</insert>
	
	<!-- 冲账主表 -->
	<insert id="insertOffsetMain" useGeneratedKeys="true" parameterType="java.util.Map" >
		<selectKey resultType="java.lang.Long" order="BEFORE"  keyProperty="new_in_id">
			SELECT MAT_IN_MAIN_SEQ.nextval as in_id FROM DUAL
		</selectKey> 
		INSERT INTO MAT_IN_MAIN(
			in_id, group_id, hos_id, copy_code, in_no, year, month, bus_type_code, store_id, store_no, 
			in_date, brief, maker, make_date, state, sup_no, sup_id, stocker, stock_type_code, is_org, checker, 
			sup_no, confirmer, confirm_date, invoice_no, invoice_date, ctrl_type_code, company, protocol_code, 
			dept_id, dept_no, app_dept)
		SELECT #{new_in_id,jdbcType=INTEGER}, group_id, hos_id, copy_code, in_no, year, month, bus_type_code, 
			store_id, store_no, in_date, brief, maker, make_date, state, sup_no, sup_id, stocker, stock_type_code, 
			is_org, checker, sup_no, confirmer, confirm_date, invoice_no, invoice_date, ctrl_type_code, company, 
			protocol_code, dept_id, dept_no, app_dept
		FROM MAT_IN_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</insert>
	
	<!-- 冲账明细表 -->
	<insert id="insertOffsetDetail" parameterType="java.util.Map" >
		INSERT INTO MAT_IN_DETAIL(
			in_id, in_detail_id, group_id, hos_id, copy_code, inv_id, inv_no, amount, price, amount_money, 
			batch_no, batch_sn, sn, bar_code, sell_price, sell_money, allot_price, allot_money, pack_code, 
			num_exchange, pack_price, num, is_per_bar, inva_date, disinfect_date, location_id, note)
		SELECT #{new_in_id,jdbcType=INTEGER}, MAT_IN_DETAIL_SEQ.nextval, group_id, hos_id, copy_code, 
			inv_id, inv_no, amount, price, amount_money, batch_no, batch_sn, sn, bar_code, sell_price, 
			sell_money, allot_price, allot_money, pack_code, num_exchange, pack_price, num, is_per_bar, 
			inva_date, disinfect_date, location_id, note
		FROM MAT_IN_DETAIL mid
		LEFT JOIN MAT_IN_MAIN mim
			ON mid.group_id = mim.group_id
			AND mid.hos_id = mim.hos_id
			AND mid.copy_code = mim.copy_code
			AND mid.in_id = mim.in_id
		WHERE mid.group_id = #{group_id,jdbcType=INTEGER}
			AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mim.in_id = #{in_id,jdbcType=INTEGER}
	</insert>
	
	<!-- 维护入库单订单对应关系 -->
	<insert id="insertOrderRela" parameterType="java.util.List" >
		insert into mat_in_order_rela(group_id, hos_id, copy_code,order_id , order_detail_id , in_id,  in_detail_id, in_amount, order_amount)
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.order_id,jdbcType=INTEGER},
				#{item.order_detail_id,jdbcType=INTEGER},
				#{item.in_id,jdbcType=INTEGER},
				#{item.in_detail_id,jdbcType=INTEGER},
				#{item.in_amount,jdbcType=FLOAT},
				#{item.order_amount,jdbcType=FLOAT}
			from dual
		</foreach>
		)t
	</insert>
	
	<!-- 维护  专购品订单对应关系 -->
	<insert id="addSpecialOrderRelaBatch" parameterType="java.util.List" >
		insert into mat_special_order_rela(group_id, hos_id, copy_code,order_id , order_detail_id , special_id,  sp_detail_id, special_amount, order_amount)
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.order_id,jdbcType=INTEGER},
				#{item.order_detail_id,jdbcType=INTEGER},
				#{item.special_id,jdbcType=INTEGER},
				#{item.sp_detail_id,jdbcType=INTEGER},
				#{item.special_amount,jdbcType=FLOAT},
				#{item.order_amount,jdbcType=FLOAT}
			from dual
		</foreach>
		)t
	</insert>
	
	<!-- 删除入库单订单对应关系 -->
	<delete id="deleteOrderRela" parameterType="java.util.Map" >
		DELETE mat_in_order_rela
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</delete>
	
	<!-- 删除专购品订单对应关系 -->
	<delete id="deleteSpecialOrderRela" parameterType="java.util.Map" >
		DELETE mat_special_order_rela
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND special_id = #{special_id,jdbcType=INTEGER}
	</delete>
	
	<!-- 专购品主表 审核或消审 -->
	<update id="updateStateSpecial" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_special_main set 
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and special_id = #{item.special_id,jdbcType=INTEGER}
				and special_no = #{item.special_no,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 专购品入库单 审核或消审 -->
	<update id="updateStateIn" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_in_main set 
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and in_id = #{item.in_id,jdbcType=INTEGER}
				and in_no = #{item.in_no,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 专购品出库单 审核或消审 -->
	<update id="updateStateOut" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_out_main set 
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and out_id = #{item.out_id,jdbcType=INTEGER}
				and out_no = #{item.out_no,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 专购品  确认 (批量)-->
	<update id="confirmMatSpecial" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_special_main set 
				year = #{item.year,jdbcType=VARCHAR}, 
				month = #{item.month,jdbcType=VARCHAR}, 
				state = #{item.state,jdbcType=INTEGER},
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				confirm_date = fun_date_same_year_month(make_date, sysdate)
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and special_id = #{item.special_id,jdbcType=INTEGER}
		</foreach>
	</update>
	<!-- 专购品入库单 确认-->
	<update id="confirmMatSpecialIn" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_in_main set 
				year = #{item.year,jdbcType=VARCHAR}, 
				month = #{item.month,jdbcType=VARCHAR}, 
				state = #{item.state,jdbcType=INTEGER},
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				confirm_date = to_date(#{item.confirm_date,jdbcType=DATE},'yyyy/mm/dd')
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 专购品出库单 确认 -->
	<update id="confirmMatSpecialOut" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_out_main set 
				year = #{item.year,jdbcType=VARCHAR}, 
				month = #{item.month,jdbcType=VARCHAR}, 
				state = #{item.state,jdbcType=INTEGER},
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				confirm_date = to_date(#{item.confirm_date,jdbcType=DATE},'yyyy/mm/dd')
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and out_id = #{item.out_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 订单导入主查询 -->
	<select id="queryOrder" parameterType="java.util.Map" resultMap="matCommonInOrder" >
		select  distinct
			mom.group_id,
			mom.hos_id,
			mom.copy_code,
			mom.order_id,
			mom.order_code, --订单号
			mom.brif, --摘要
			hsd.sup_name, --供应商
			hc.hos_name pur_hos_name,--采购单位
			hc1.hos_name take_hos_name,--收货单位
			hc2.hos_name pay_hos_name,--付款单位
			su.user_name maker_name, --制单人
			mom.order_date, --编制日期
			mom.state--状态
		from mat_order_main mom
		left join hos_sup_dict hsd 
			on mom.sup_id = hsd.sup_id 
			and mom.sup_no = hsd.sup_no 
			and mom.hos_id = hsd.hos_id
			and mom.group_id = hsd.group_id
		left join hos_info hc 
			on hc.hos_id = mom.pur_hos_id
			and hc.group_id = mom.group_id
			and hc.is_stop = 0
		left join hos_info hc1 
			on hc1.hos_id = mom.take_hos_id
			and hc1.group_id = mom.group_id
			and hc1.is_stop = 0
		left join hos_info hc2 
			on hc2.hos_id = mom.pay_hos_id
			and hc2.group_id = mom.group_id
			and hc2.is_stop = 0
		left join sys_user su
			on mom.group_id = su.group_id
			and mom.hos_id = su.hos_id
			and mom.maker = su.user_id
		left join mat_order_detail mod
			on mom.group_id = mod.group_id
			and mom.hos_id = mod.hos_id
			and mom.copy_code = mod.copy_code
			and mom.order_id = mod.order_id
		left join mat_in_order_rela mior 
			on mod.group_id = mior.group_id
			and mod.hos_id = mior.hos_id
			and mod.copy_code = mior.copy_code
			and mod.order_id = mior.order_id
			and mod.order_detail_id = mior.order_detail_id
			and mior.in_amount &lt;&gt; mior.order_amount
		<if test="inv_code != null and inv_code !=''">
			left join mat_inv_dict mid
				on mod.group_id = mid.group_id
				and mod.hos_id = mid.hos_id
				and mod.copy_code = mid.copy_code
				and mod.inv_id = mid.inv_id
				and mod.inv_no = mid.inv_no
		</if>
		where mom.group_id = #{group_id,jdbcType=INTEGER}
			and mom.hos_id = #{hos_id,jdbcType=INTEGER}
			and mom.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mior.in_id is null --该材料如果入库完成则不为null
			<if test="begin_order_date != null and begin_order_date != ''">
				AND mom.order_date &gt;= #{begin_order_date}
			</if>
			<if test="end_order_date != null and end_order_date != ''">
				AND mom.order_date &lt;= #{end_order_date}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND mom.sup_id =#{sup_id,jdbcType=INTEGER}
			</if>
			<if test="sup_no != null and sup_no != ''">
				AND mom.sup_no =#{sup_no,jdbcType=INTEGER}
			</if>
			<if test="stocker != null and stocker != ''">
				AND mom.stocker =#{stocker,jdbcType=INTEGER}
			</if>
			<if test="order_code != null and order_code != ''">
				AND mom.order_code like '%'||#{order_code,jdbcType=VARCHAR}||'%'
			</if>
			<if test="brif != null and brif != ''">
				AND mom.brif like '%${brif}%'
			</if>
			<if test="inv_code != null and inv_code !=''">
				AND (mid.inv_code like '${inv_code}%' or mid.inv_name like '%${inv_code}%')
			</if>
		order by mom.order_id
	</select>
	
	<!-- 订单导入查询选中的材料 -->
	<select id="queryOrderDetail" resultMap="matInDetailCommon" parameterType="java.util.Map" >
		select rela.order_rela,--材料订单对应关系
		    mod.inv_no,
		    mod.inv_id,
		    mid.inv_code,
		    mid.inv_name,
		    mid.inv_model,
		    mid.unit_code,
		    hu.unit_name,
		    sum(nvl(mod.amount, 0)) amount,--数量
		    mod.price,--单价
		    sum(nvl(mod.num,0)*nvl(mod.price,0)) amount_money--金额
		    --,mod.pack_code,
        	--hp.pack_name,
		    --sum(nvl(mod.num, 0)) num,--包装数量
		    --mod.num_exchange,--包装换算量
		from mat_order_detail mod
		left join mat_inv_dict mid 
			on mod.inv_no = mid.inv_no
			and mod.inv_id = mid.inv_id
			and mod.group_id = mid.group_id
			and mod.hos_id = mid.hos_id
			and mod.copy_code = mid.copy_code
		left join hos_unit hu 
			on mid.unit_code = hu.unit_code
			and mid.group_id = hu.group_id
			and mid.hos_id = hu.hos_id
		left join hos_package hp
			on mod.group_id = hp.group_id
			and mod.hos_id = hp.hos_id
			and mod.pack_code = hp.pack_code
		left join (
			select inv_id, '['||to_char(wm_concat('{"order_id":'||order_id||',"order_detail_id":'||order_detail_id||',"in_amount":'||amount||',"order_amount":'||amount||'}'))||']' order_rela 
			from mat_order_detail
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and order_id in (${order_ids})
			group by inv_id
			) rela
		on mod.inv_id = rela.inv_id
		where mod.group_id = #{group_id,jdbcType=INTEGER} 
			and mod.hos_id = #{hos_id,jdbcType=INTEGER} 
			and mod.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mod.order_id in (${order_ids})
		group by rela.order_rela, mod.inv_no, mod.inv_id, mid.inv_code, mid.inv_name, mid.inv_model,
		    mid.unit_code, hu.unit_name, mod.price, mod.pack_code, hp.pack_name, mod.num_exchange
		order by inv_id
	</select>
	
	<!-- 查询MAT_AFFI_OUT 没有引用过的代销出库单-->
	<select id="queryAffiOut" parameterType="java.util.Map" resultType="java.util.Map">
		select maod.group_id,maod.hos_id,maod.copy_code,maod.out_id,mao.out_no,hsd.sup_id,hsd.sup_no,
			hsd.sup_name,mao.out_date,mao.maker,su.user_name as maker_name,mao.dept_id,mao.dept_no,
			hdd.dept_code,hdd.dept_name,mao.store_id,mao.store_no,mao.bus_type_code,mao.year,mao.month,
			mao.dept_emp,maod.inv_id,maod.inv_no,mid.inv_code,mid.inv_name,maod.batch_no, maod.bar_code,
			maod.price,maod.amount,maod.amount_money,maod.inva_date,maod.detail_id,micr.cert_id,mic.cert_code,
			mao.brief, maid.fac_date, maid.serial_no
		from mat_affi_out_detail maod
		left join (
			select group_id,hos_id,copy_code,max(cert_id) as cert_id,inv_id
			from mat_prod_cert_inv
			WHERE group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			group by group_id,hos_id,copy_code, inv_id
		) micr 
			on micr.inv_id=maod.inv_id
		left join mat_prod_cert mic 
			on micr.group_id = mic.group_id
			and micr.hos_id = mic.hos_id
			and micr.copy_code = mic.copy_code
			and micr.cert_id=mic.cert_id 
		left join mat_inv_dict mid 
			on maod.group_id = mid.group_id and maod.hos_id = mid.hos_id 
			and maod.copy_code = mid.copy_code and maod.inv_id = mid.inv_id 
			and maod.inv_no = mid.inv_no <!-- and mid.use_state = 1 -->
		left join mat_affi_out mao 
			on maod.group_id = mao.group_id and maod.hos_id = mao.hos_id 
			and maod.copy_code = mao.copy_code and maod.out_id = mao.out_id
		left join sys_user su 
			on mao.group_id = su.group_id and mao.hos_id = su.hos_id 
			and mao.maker = su.user_id
		left join hos_dept_dict hdd 
			on mao.group_id = hdd.group_id and mao.hos_id = hdd.hos_id 
			and mao.dept_id = hdd.dept_id and mao.dept_no = hdd.dept_no
		left join mat_inv_sup mis 
			on mid.group_id = mis.group_id and mid.hos_id = mis.hos_id 
			and mid.copy_code = mis.copy_code and mid.inv_id = mis.inv_id 
			and mis.is_default = 1
		left join hos_sup_dict hsd 
			on maod.group_id = hsd.group_id and maod.hos_id = hsd.hos_id 
			<if test="by_inv_sup != null and by_inv_sup == 1">
				and mis.sup_id = hsd.sup_id and hsd.is_stop = 0
			</if>
			<if test="by_inv_sup == null or by_inv_sup == '' or by_inv_sup == 0">
				and maod.sup_id = hsd.sup_id and maod.sup_no = hsd.sup_no 
			</if>
		left join (
			SELECT ai.store_id, aid.inv_id, aid.batch_no, aid.batch_sn, aid.bar_code, 
				max(aid.fac_date) fac_date, max(aid.serial_no) serial_no 
			FROM mat_affi_in ai 
			LEFT JOIN mat_affi_in_detail aid 
				ON ai.group_id = aid.group_id
				AND ai.hos_id = aid.hos_id 
				AND ai.copy_code = aid.copy_code 
				AND ai.in_id = aid.in_id 
			WHERE ai.group_id = #{group_id,jdbcType=INTEGER}
				AND ai.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ai.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ai.bus_type_code = 27
			GROUP BY ai.store_id, aid.inv_id, aid.batch_no, aid.batch_sn, aid.bar_code
		) maid
			ON mao.store_id = maid.store_id 
			and maod.inv_id = maid.inv_id 
			and maod.batch_no = maid.batch_no 
			and maod.batch_sn = maid.batch_sn 
			and maod.bar_code = maid.bar_code 
		WHERE mao.group_id = #{group_id,jdbcType=INTEGER}
			AND mao.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mao.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_out_date != null and begin_out_date != '' and end_out_date != null and end_out_date != ''">
				AND mao.out_date between to_date(#{begin_out_date,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{end_out_date,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND (
							 mid.inv_code like '%${inv_code}%'
							or upper(mid.inv_name) like '%${inv_code}%'
							or upper(mid.inv_model) like '%${inv_code}%'
							or upper(mid.spell_code) like '%${inv_code}%'
							or upper(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.spell_code) like '%${inv_code}%'
							or lower(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.inv_name) like '%${inv_code}%'
						
				)
			</if>
			<if test="store_id != null and store_id != ''">
				AND mao.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND mao.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND hsd.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="maker != null and maker != ''">
				AND mao.maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != ''">
				AND mao.brief like '%${brief}%'
			</if>
			and mao.bus_type_code in ('28','30')
			and mao.state = 3
			and maod.detail_id not in (
				select distinct affi_detail_id from mat_special_affi_out_rela
				<where>
					<if test="group_id != null and group_id != ''">
						and group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id != null and hos_id != ''">
						and hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code != ''">
						and copy_code = #{copy_code,jdbcType=VARCHAR}
					</if>
				</where> 
			)
		order by mao.out_id,mao.out_no,maod.inv_no desc,maod.detail_id asc
	</select>
	
	<select id="queryMatAffiOutDetail" parameterType="java.util.Map" resultType="java.util.Map">
		select maod.group_id,maod.hos_id,maod.copy_code,maod.out_id,maod.detail_id,
			maod.inv_id,maod.inv_no,maod.batch_no,maod.batch_sn,maod.price,maod.amount_money,
      		maod.sale_price,maod.sale_money,maod.sell_price,maod.sell_money,maod.allot_price,maod.allot_money,
      		maod.pack_code,maod.num_exchange,maod.num,maod.bar_code,maod.inva_date,maod.disinfect_date,
      		maod.location_id,maod.note
		from mat_affi_out_detail maod
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			and detail_id in (${detailIds})
		</where>
	</select>
	
	<select id="queryMatAffiDetail" parameterType="java.util.Map" resultMap="matInDetailCommon">
		select 	
			maod.group_id, 
			maod.hos_id, 
			maod.copy_code, 
			maod.out_id,
			maod.inv_id, 
			maod.inv_no,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			mid.unit_code,
			hu.unit_name ,
			maf.sup_id ,
			hsd.sup_no ,
			hsd.sup_code ,
			hsd.sup_name ,
			mid.fac_id, 
			hfd.fac_name ,
			maod.price,
			maod.amount,
			maod.amount_money,
			maod.batch_no, 
			maod.batch_sn,
			maod.sell_price, 
			maod.sell_money, 
			maod.pack_code, 
			maod.num_exchange, 
			maod.num,
			maod.pack_price,
			maod.bar_code,
			maod.inva_date, 
			maod.disinfect_date, 
			maod.location_id, 
			maod.note
		FROM mat_affi_out_detail maod
			left  join mat_affi_fifo maf
				ON
					maod.group_id  = maf.group_id  and
					maod.hos_id  = maf.hos_id  and
					maod.copy_code  = maf.copy_code  and
					maod.inv_id  = maf.inv_id  and
					maod.batch_sn  = maf.batch_sn  and 
					maod.batch_no  = maf.batch_no  and
					maod.bar_code  = maf.bar_code  and 
					maf.store_id = #{store_id}
			left join hos_sup_dict hsd
				on 
					maf.group_id  = hsd.group_id  and
					maf.hos_id  = hsd.hos_id  and
					maf.sup_id  = hsd.sup_id  and 
					hsd.is_stop = 0
			left join MAT_INV_DICT mid
				ON 
					maod.group_id  = mid.group_id  and
					maod.hos_id  = mid.hos_id  and
					maod.copy_code  = mid.copy_code  and
					maod.inv_id  = mid.inv_id  and 
					mid.use_state = 1
			left join hos_unit hu
				on 
					mid.group_id  = hu.group_id  and
					mid.hos_id  = hu.hos_id  and
					mid.unit_code  = hu.unit_code  and 
					hu.is_stop = 0
			left join hos_fac_dict  hfd
				on 
					mid.group_id  = hfd.group_id  and
					mid.hos_id  = hfd.hos_id  and
					mid.fac_id  = hfd.fac_id  and 
					mid.fac_no = hfd.fac_no
			WHERE maod.group_id = #{group_id,jdbcType=INTEGER} 
				AND maod.hos_id = #{hos_id,jdbcType=INTEGER} 
				AND maod.copy_code = #{copy_code,jdbcType=VARCHAR} 
				AND maod.out_id = #{out_id,jdbcType=INTEGER} 
			order by maod.out_id,maod.detail_id
	</select>
	
	<!-- 查询所有配套表-->
	<select id="queryProtocol" parameterType="java.util.Map" resultMap="matInDetailCommon" >
        select b.inv_id, b.inv_no, b.inv_code, b.inv_name, b.inv_model, b.unit_code, c.unit_name, a.price 
           
        from pact_det_fkxy a
        left join mat_inv_dict b
            on a.group_id = b.group_id
            and a.hos_id = b.hos_id
            and a.copy_code = b.copy_code
            and a.subject_id = b.inv_id    
            and b.use_state = 1
            and b.is_stop = 0
        left join hos_unit c
            on b.group_id = c.group_id
            and b.hos_id = c.hos_id
            and b.unit_code = c.unit_code
        WHERE a.group_id = #{group_id,jdbcType=INTEGER}
            AND a.hos_id = #{hos_id,jdbcType=INTEGER}
            AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
            and a.pact_code in (
                SELECT REGEXP_SUBSTR (#{protocol_id,jdbcType=VARCHAR}, '[^,]+', 1,rownum) out_id
                from dual connect by rownum &lt;=LENGTH (#{protocol_id,jdbcType=VARCHAR}) - LENGTH (regexp_replace(#{protocol_id,jdbcType=VARCHAR}, ',', ''))+1
            )          
        ORDER BY a.detail_id

	</select>
	
	<!-- 维护专购品与出入库对应关系 -->
	<insert id="addMatSpecialRela" parameterType="java.util.Map" >
	
		INSERT INTO MAT_SPECIAL_RELA (
		group_id
		,
		hos_id
		,
		copy_code
		,
		special_id
		,
		special_no
		,
		out_id
		,
		out_no
		,
		in_id
		,
		in_no
		
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{special_id,jdbcType=INTEGER},
		#{special_no,jdbcType=VARCHAR},
		#{out_id,jdbcType=INTEGER},
		#{out_no,jdbcType=VARCHAR},
		#{in_id,jdbcType=INTEGER},
		#{in_no,jdbcType=VARCHAR}
		)
	
	</insert>
	
	<!-- 批量维护专购品与出入库对应关系 -->
	<insert id="addMatSpecialRelaBatch" parameterType="java.util.List" >
		INSERT INTO MAT_SPECIAL_RELA (
			group_id, hos_id, copy_code, special_id, special_no, out_id, out_no, in_id, in_no
		) 
		<foreach collection="list" item="item" index="index" separator="union all" >		
			SELECT 
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.special_id,jdbcType=INTEGER},
				#{item.special_no,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=VARCHAR},
				#{item.in_id,jdbcType=INTEGER},
				#{item.in_no,jdbcType=VARCHAR}
			FROM dual 
		</foreach>
	</insert>
	
	<!-- 专购品出库单明细表添加（批量） -->
	<insert id="addMatOutDetailBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MAT_OUT_DETAIL (
				out_detail_id, group_id, hos_id, copy_code, out_id, out_no , inv_id, inv_no, 
				batch_sn, batch_no, price, amount,  amount_money  
				<if test="item.sale_price != null and item.sale_price != ''">, sale_price</if>
				<if test="item.sale_money != null and item.sale_money != ''">, sale_money</if>
				<if test="item.sell_price != null and item.sell_price != ''">, sell_price</if>
				<if test="item.sell_money != null and item.sell_money != ''">, sell_money</if>
				<if test="item.allot_price != null and item.allot_price != ''">, allot_price</if>
				<if test="item.allot_money != null and item.allot_money != ''">, allot_money</if>
					<if test="item.pack_code != null and item.pack_code != ''">, pack_code</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, num_exchange</if>
				<if test="item.num != null and item.num != ''">, num</if>
				<if test="item.bar_code != null and item.bar_code != ''">, bar_code</if>
				<if test="item.inva_date != null and item.inva_date != ''">, inva_date</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, disinfect_date</if>
				<if test="item.location_id != null">, location_id</if>
				<if test="item.note != null and item.note != ''">, note</if>
			) 
			values( #{item.out_detail_id,jdbcType=INTEGER},  
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.batch_sn,jdbcType=INTEGER},
				#{item.batch_no,jdbcType=VARCHAR},
				#{item.price,jdbcType=FLOAT}, 
				#{item.amount,jdbcType=FLOAT},
				#{item.amount_money,jdbcType=FLOAT}
				
				<if test="item.sale_price != null and item.sale_price != ''">, #{item.sale_price,jdbcType=FLOAT}</if>
				<if test="item.sale_money != null and item.sale_money != ''">, #{item.sale_money,jdbcType=FLOAT}</if>
				<if test="item.sell_price != null and item.sell_price != ''">, #{item.sell_price,jdbcType=FLOAT}</if>
				<if test="item.sell_money != null and item.sell_money != ''">, #{item.sell_money,jdbcType=FLOAT}</if>
				<if test="item.allot_price != null and item.allot_price != ''">, #{item.allot_money,jdbcType=FLOAT}</if>
				<if test="item.allot_money != null and item.allot_money != ''">, #{item.allot_money,jdbcType=FLOAT}</if>
				<if test="item.pack_code != null and item.pack_code != ''">, #{item.pack_code,jdbcType=VARCHAR}</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, #{item.num_exchange,jdbcType=INTEGER}</if>
				<if test="item.num != null and item.num != ''">, #{item.num,jdbcType=INTEGER}</if>
				<if test="item.bar_code != null and item.bar_code != ''">, #{item.bar_code,jdbcType=VARCHAR}</if>
				<if test="item.inva_date != null and item.inva_date != ''">, #{item.inva_date,jdbcType=DATE}</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, #{item.disinfect_date,jdbcType=DATE}</if>
				<if test="item.location_id != null">, #{item.location_id,jdbcType=INTEGER}</if>
				<if test="item.note != null and item.note != ''">, #{item.note,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	<!-- 根据专购品主表ID 查询专购品  出入库单Id、出入库单号 -->
	<select id="queryMatInOutData" parameterType="java.util.Map" resultMap="matInMain">
		select group_id , hos_id , copy_code, in_id , in_no , out_id , out_no   from mat_special_rela
		<where>
			<if test="group_id != null and group_id != '' ">
			    AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="special_id != null and special_id != '' ">
			    AND special_id = #{special_id,jdbcType=INTEGER}
			</if>
			<if test="special_no != null and special_no != '' ">
			    AND special_no = #{special_no,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<!-- 删除专购品明细数据  -->
	<delete id="deleteSpecialDetail" parameterType="java.util.Map">
		DELETE FROM mat_special_detail
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and special_id = #{special_id,jdbcType=INTEGER}
			and special_no = #{special_no,jdbcType=VARCHAR}
			<if test=" detial_id != null and detial_id != ''">
				and detial_id = #{detial_id,jdbcType=INTEGER}
			</if>
			<if test=" inv_id != null and inv_id != ''">
				and inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test=" inv_no != null and inv_no != ''">
				and inv_no = #{inv_no,jdbcType=INTEGER}
			</if>
			<if test=" batch_sn != null and item.batch_sn != ''">
				and batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test=" batch_no != null and batch_no != ''">
				and batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
		</where>
	</delete>
	<!-- 批量删除专购品明细数据  -->
	<delete id="deleteSpecialDetailBatch" parameterType="java.util.List">
		DELETE FROM mat_special_detail
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and special_id = #{item.special_id,jdbcType=INTEGER}
			and special_no = #{item.special_no,jdbcType=VARCHAR}
			<if test=" item.detial_id != null and item.detial_id != ''">
				and detial_id = #{item.detial_id,jdbcType=INTEGER}
			</if>
			<if test=" item.inv_id != null and item.inv_id != ''">
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
			</if>
			<if test=" item.inv_no != null and item.inv_no != ''">
				and inv_no = #{item.inv_no,jdbcType=INTEGER}
			</if>
			<if test=" item.batch_sn != null and item.batch_sn != ''">
				and batch_sn = #{item.batch_sn,jdbcType=INTEGER}
			</if>
			<if test=" item.batch_no != null and item.batch_no != ''">
				and batch_no = #{item.batch_no,jdbcType=VARCHAR}
			</if>
		</foreach> 
		
		</where>
	</delete>
	
	<!-- 批量删除专购品主表数据  -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM mat_special_main
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and special_id = #{item.special_id,jdbcType=INTEGER}
			and special_no = #{item.special_no,jdbcType=VARCHAR}
		</foreach> 
		</where>
	</delete>
	
	<!-- 批量删除专购品订单对应关系  -->
	<delete id="deleteSpecialOrderRelaBatch" parameterType="java.util.List">
		DELETE FROM mat_special_order_rela
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and special_id = #{item.special_id,jdbcType=INTEGER}
		</foreach> 
	</delete>
	
	
	<!-- 批量删除专购品入库单订单对应关系  -->
	<delete id="deleteInOrderRelaBatch" parameterType="java.util.List">
		DELETE FROM mat_in_order_rela
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach> 
	</delete>
	<!-- 批量删除专购品出入库对应关系  -->
	<delete id="deleteBatchSpecialRela" parameterType="java.util.List">
		DELETE FROM mat_special_rela
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and special_id = #{item.special_id,jdbcType=INTEGER}
			and special_no = #{item.special_no,jdbcType=VARCHAR}
		</foreach> 
	</delete>
	
	<!-- 批量删除 入库单资金来源表  -->
	<delete id="deleteMatInSourceBatch" parameterType="java.util.List">
		DELETE FROM MAT_IN_RESOURCE
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach> 
	</delete>
	
	<!-- 批量删除 出库单资金来源表  -->
	<delete id="deleteMatOutSourceBatch" parameterType="java.util.List">
		DELETE FROM MAT_OUT_RESOURCE
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and out_id = #{item.out_id,jdbcType=INTEGER}
		</foreach> 
	</delete>
	<!-- 查询 对应的 专购品明细数据  -->
	<select id="querySpecialDetail" parameterType="java.util.Map" resultMap="matInDetailCommon" >
		select group_id , hos_id , copy_code , special_id ,special_no , detail_id , inv_id  , inv_no , batch_sn ,
		 batch_no , price ,amount , amount_money ,sale_price, sale_money, sell_price, sell_money, allot_price, 
		 allot_money, pack_code, num_exchange, pack_price, num , sn , bar_code , inva_date , disinfect_date ,
		 location_id , note ,cert_id,cert_code
		from mat_special_detail
		<where>
			<if test="group_id != null and group_id != '' ">
			    AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="special_id != null and special_id != '' ">
			    AND special_id = #{special_id,jdbcType=INTEGER}
			</if>
			<if test="special_no != null and special_no != '' ">
			    AND special_no = #{special_no,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="existsMatSpecialStateForConfrim" parameterType="java.util.List" resultType="java.lang.Integer" >
		select count(1)
		from mat_special_main
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and special_id = #{item.special_id,jdbcType=INTEGER}
			and state = 3
		</foreach> 
	</select>
	
	<select id="querySpecialDetailForConfrim" parameterType="java.util.List" resultType="java.util.Map" >
		select a.group_id, a.hos_id, a.copy_code, a.year, a.month, a.special_id, a.special_no, a.store_id, b.detail_id, 
			b.inv_id, b.inv_no, b.batch_sn, b.batch_no, b.bar_code, b.price, b.amount, b.amount_money, 
			nvl(b.sale_price, 0) sale_price, nvl(b.sale_money, 0) sale_money, b.inva_date, b.disinfect_date,
			nvl(b.location_id, 0) location_id, c.is_quality, c.is_disinfect
		from mat_special_main a 
		left join mat_special_detail b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.special_id = b.special_id
		left join mat_inv_dict c
			on b.group_id = c.group_id and b.hos_id = c.hos_id
			and b.copy_code = c.copy_code and b.inv_id = c.inv_id
			and b.inv_no = c.inv_no
		WHERE (
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				a.group_id = #{item.group_id,jdbcType=INTEGER}
				and a.hos_id = #{item.hos_id,jdbcType=INTEGER}
				and a.copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and a.special_id = #{item.special_id,jdbcType=INTEGER}
			</foreach> 
			)
			and a.state &lt;&gt; 3
	</select>
	
	<!-- 查询 出入库结存表 MAT_FIFO_BALANCE 是否存在该记录（存在则修改该记录 否则就添加） -->
	<select id="queryFifoExists" parameterType="java.util.Map" resultType="java.util.Map" >
		select group_id, hos_id, copy_code, store_id, inv_id, batch_no, batch_sn, bar_code, 
			nvl(price, 0) as price, nvl(sale_price, 0) as sale_price, nvl(in_amount, 0) as in_amount, 
			nvl(in_money, 0) as in_money, nvl(in_sale_money, 0) as in_sale_money, 
			nvl(out_amount, 0) as out_amount, nvl(out_money, 0) as out_money, 
			nvl(out_sale_money, 0) as out_sale_money, nvl(left_amount, 0) as left_amount, 
			nvl(left_money, 0) as left_money, nvl(left_sale_money, 0) as left_sale_money, 
			nvl(remove_zero_error, 0) as remove_zero_error, nvl(sale_zero_error, 0) as sale_zero_error, 
			nvl(location_id, 0) location_id
		from mat_fifo_balance
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC}
			AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			AND batch_no = #{batch_no,jdbcType=VARCHAR}
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			AND nvl(location_id, 0) = #{location_id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询 物资材料结余表MAT_INV_BALANCE 是否存在该记录（存在则修改该记录 否则就添加 -->
	<select id="queryInvExists" parameterType="java.util.Map" resultMap="balanceMap" >
		select 	group_id , hos_id , copy_code , year , month , store_id , inv_id , begin_amount ,
				begin_money , in_amount , in_money 	, out_amount , out_money , 	y_in_amount ,
				y_in_money 	, y_out_amount , y_out_money , location_id , remove_zero_error ,
				begin_sale_money , in_sale_money , out_sale_money , y_in_sale_money ,
				y_out_sale_money , sale_zero_error , end_amount , end_money , end_sale_money 
		from mat_inv_balance
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND nvl(location_id, 0) = #{location_id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询 物资材料结余表 MAT_BATCH_BALANCE 是否存在该记录（存在则修改该记录 否则就添加 -->
	<select id="queryBatchExists" parameterType="java.util.Map" resultMap="balanceMap" >
		select 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			inv_id,
			store_id,
			batch_sn,
			batch_no,
			bar_code,
			price,
			sale_price,
			end_amount,
			end_money,
			end_sale_money,
			begin_amount,
			begin_money,
			begin_sale_money,
			in_amount,
			in_money,
			in_sale_money,
			out_amount,
			out_money,
			out_sale_money,
			y_in_amount,
			y_in_money,
			y_in_sale_money,
			y_out_amount,
			y_out_money,
			y_out_sale_money,
			sale_zero_error,
			location_id
		from mat_batch_balance
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC}
			AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			AND batch_no = #{batch_no,jdbcType=VARCHAR}
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			AND nvl(location_id, 0) = #{location_id,jdbcType=INTEGER}
	</select>
	<!-- 查询 物资材料结存表 MAT_INV_HOLD 是否存在该记录（存在则不修改 否则就添加 -->
	<select id="queryInvHoldExists" parameterType="java.util.Map" resultType="java.lang.Long" >
		select count(inv_id)
		from mat_inv_hold
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND nvl(location_id, 0) = #{location_id,jdbcType=INTEGER}
	</select>
	
	<!-- 冲账 批量添加 专购品出库单  -->
	<insert id="addOutMainBatch" parameterType="java.util.List" >
	
		INSERT INTO MAT_OUT_MAIN (

		out_id, group_id, hos_id, copy_code, out_no, year, month, bus_type_code, store_id, store_no, brief, 
		dept_id, dept_no, dept_emp, use_code, maker, out_date, checker, check_date, confirmer, confirm_date, 
		state, is_dir, his_flag , proj_id
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.out_id,jdbcType=INTEGER}
			,
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.out_no,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.bus_type_code,jdbcType=VARCHAR}
			,
			#{item.store_id,jdbcType=INTEGER}
			,
			#{item.store_no,jdbcType=INTEGER}
			,
			#{item.brief,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.dept_no,jdbcType=INTEGER}
			,
			#{item.dept_emp,jdbcType=INTEGER}
			,
			#{item.use_code,jdbcType=VARCHAR}
			,
			#{item.maker,jdbcType=INTEGER}
			,
			#{item.out_date,jdbcType=DATE}
			,
			#{item.checker,jdbcType=INTEGER}
			,
			#{item.check_date,jdbcType=DATE}
			,
			#{item.confirmer,jdbcType=INTEGER}
			,
			#{item.confirm_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.is_dir,jdbcType=INTEGER}
			,
			#{item.his_flag,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	<!-- 批量新增 专购品出入库对应关系 数据 -->
	<insert id="addSpecialRelaBatch" parameterType="java.util.List" >
	
		INSERT INTO MAT_SPECIAL_RELA (
		group_id
		,
		hos_id
		,
		copy_code
		,
		special_id
		,
		special_no
		,
		in_id
		,
		in_no
		,
		out_id
		,
		out_no
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.special_id,jdbcType=INTEGER},
			#{item.special_no,jdbcType=VARCHAR},
			#{item.in_id,jdbcType=INTEGER},
			#{item.in_no,jdbcType=VARCHAR},
			#{item.out_id,jdbcType=INTEGER},
			#{item.out_no,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
		
	</insert>
	
	<select id="queryOutDetial" parameterType="java.util.Map" resultMap="matInDetailCommon" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		out_id,
		out_detail_id,
		inv_id,
		inv_no,
		batch_sn,
		batch_no,
		price,
		amount,
		sell_price,
		sell_money,
		allot_price,
		allot_money,
		amount_money,
		num_exchange,
		pack_price,
		num,
		bar_code,
		is_per_bar,
		sn,
		inva_date,
		disinfect_date,
		location_id,
		note,
		pack_code
		FROM MAT_OUT_DETAIL 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="out_id != null and out_id != ''">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_detail_id != null and out_detail_id != ''">
		AND out_detail_id = #{out_detail_id,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
		AND inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="batch_sn != null and batch_sn != ''">
		AND batch_sn = #{batch_sn,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
		AND batch_no = #{batch_no,jdbcType=VARCHAR}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
		<if test="amount != null and amount != ''">
		AND amount = #{amount,jdbcType=INTEGER}
		</if>
		<if test="sell_price != null and sell_price != ''">
		AND sell_price = #{sell_price,jdbcType=INTEGER}
		</if>
		<if test="sell_money != null and sell_money != ''">
		AND sell_money = #{sell_money,jdbcType=INTEGER}
		</if>
		<if test="allot_price != null and allot_price != ''">
		AND allot_price = #{allot_price,jdbcType=INTEGER}
		</if>
		<if test="allot_money != null and allot_money != ''">
		AND allot_money = #{allot_money,jdbcType=INTEGER}
		</if>
		<if test="amount_money != null and amount_money != ''">
		AND amount_money = #{amount_money,jdbcType=INTEGER}
		</if>
		<if test="num_exchange != null and num_exchange != ''">
		AND num_exchange = #{num_exchange,jdbcType=INTEGER}
		</if>
		<if test="pack_price != null and pack_price != ''">
		AND pack_price = #{pack_price,jdbcType=INTEGER}
		</if>
		<if test="num != null and num != ''">
		AND num = #{num,jdbcType=INTEGER}
		</if>
		<if test="bar_code != null and bar_code != ''">
		AND bar_code = #{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="is_per_bar != null and is_per_bar != ''">
		AND is_per_bar = #{is_per_bar,jdbcType=INTEGER}
		</if>
		<if test="sn != null and sn != ''">
		AND sn = #{sn,jdbcType=VARCHAR}
		</if>
		<if test="inva_date != null and inva_date != ''">
		AND inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
		AND disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null and location_id != ''">
		AND location_id = #{location_id,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="pack_code != null and pack_code != ''">
		AND pack_code = #{pack_code,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 根据业务类型编码 查询其业务类型标志 -->
	<select id="queryTypeFlag" parameterType="java.util.Map" resultType="java.lang.String" >
	
		SELECT type_flag
		FROM MAT_BUS_TYPE 
		<where>                     
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		</where>   
	</select>
	
	<!-- (添加时)查询 专购品主表  要插入的ID -->
	<select id="queryMatSpecialNextval"  resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MAT_SPECIAL_MAIN_SEQ.nextval  FROM DUAL
	</select>
	
	<!-- (添加时)查询 专购品 出库明细表  要插入的ID -->
	<select id="queryMatOutDetailSeq"  resultType="java.lang.Long" useCache="false" flushCache="true" >
		SELECT MAT_OUT_DETAIL_SEQ.nextval  FROM DUAL
	</select>
	
	<!-- (添加时)查询 专购品明细表  要插入的ID -->
	<select id="queryMatSpecialDetailSeq"  resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MAT_SPECIAL_DETAIL_SEQ.nextval  FROM DUAL
	</select>
	
	<!-- 新增专购品主表数据-->
	<insert id="addSpecialMain" parameterType="java.util.Map">
		INSERT INTO MAT_SPECIAL_MAIN (
			group_id, hos_id, copy_code, special_id, special_no, year, month, bus_type_code, sup_id, sup_no ,store_id, store_no, 
			dept_id , dept_no ,  stocker ,  maker, make_date, state
			<if test="dept_emp != null and dept_emp != ''">, dept_emp</if>
			<if test="stock_type_code != null and stock_type_code != ''">, stock_type_code</if>
			<if test="brief != null and brief != ''">, brief</if>
			<if test="checker != null and checker != ''">, checker</if>
			<if test="check_date != null and check_date != ''">, check_date</if>
			<if test="confirmer != null and confirmer != ''">, confirmer</if>
			<if test="confirm_date != null and confirm_date != ''">, confirm_date</if>
			<if test="protocol_code != null and protocol_code != ''">, protocol_code</if>
			<if test="proj_id != null and proj_id != ''">, proj_id</if>
			<if test="come_from != null and come_from != ''">, come_from</if>
			<if test="bill_date != null and bill_date != ''">, bill_date</if>
			<if test="bill_no != null and bill_no != ''">, bill_no</if>
			<if test="patient_name != null and patient_name != ''">, patient_name</if>
			<if test="hospital_no != null and hospital_no != ''">, hospital_no</if>
			<if test="beds_no != null and beds_no != ''">, beds_no</if>
			<if test="patient_sex != null and patient_sex != ''">, patient_sex</if>
			<if test="patient_age != null and patient_age != ''">, patient_age</if>
			<if test="physician != null and physician != ''">, physician</if>
			<if test="execution_dept != null and execution_dept != ''">, execution_dept</if>
			<if test="advice_class != null and advice_class != ''">, advice_class</if>
			<if test="examiner != null and examiner != ''">, examiner</if>
			
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{special_id,jdbcType=INTEGER},
			#{special_no,jdbcType=VARCHAR},
			#{year,jdbcType=VARCHAR},
			#{month,jdbcType=VARCHAR},
			#{bus_type_code_sepcial,jdbcType=VARCHAR},
			#{sup_id,jdbcType=INTEGER},
			#{sup_no,jdbcType=INTEGER},
			#{store_id,jdbcType=INTEGER},
			#{store_no,jdbcType=INTEGER},
			#{dept_id,jdbcType=INTEGER},
			#{dept_no,jdbcType=INTEGER},
			#{stocker,jdbcType=INTEGER},
			#{maker,jdbcType=INTEGER},
			#{make_date,jdbcType=DATE},
			1
			<if test="dept_emp != null and dept_emp != ''">, #{dept_emp,jdbcType=INTEGER}</if>
			<if test="stock_type_code != null and stock_type_code != ''">, #{stock_type_code,jdbcType=VARCHAR}</if>
			<if test="brief != null and brief != ''">, #{brief,jdbcType=VARCHAR}</if>
			<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
			<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
			<if test="confirmer != null and confirmer != ''">, #{confirmer,jdbcType=INTEGER}</if>
			<if test="confirm_date != null and confirm_date != ''">, #{confirm_date,jdbcType=DATE}</if>
			<if test="protocol_code != null and protocol_code != ''">, #{protocol_code,jdbcType=VARCHAR}</if>
			<if test="proj_id != null and proj_id != ''">, #{proj_id,jdbcType=INTEGER}</if>
			<if test="come_from != null and come_from != ''">, #{come_from,jdbcType=INTEGER}</if>
			<if test="bill_date != null and bill_date != ''">, #{bill_date,jdbcType=DATE}</if>
			<if test="bill_no != null and bill_no != ''">, #{bill_no,jdbcType=VARCHAR}</if>
			<if test="patient_name != null and patient_name != ''">, #{patient_name,jdbcType=VARCHAR}</if>
			<if test="hospital_no != null and hospital_no != ''">, #{hospital_no,jdbcType=INTEGER}</if>
			<if test="beds_no != null and beds_no != ''">, #{beds_no,jdbcType=INTEGER}</if>
			<if test="patient_sex != null and patient_sex != ''">, #{patient_sex,jdbcType=VARCHAR}</if>
			<if test="patient_age != null and patient_age != ''">,  #{patient_age,jdbcType=INTEGER}</if>
			<if test="physician != null and physician != ''">, #{physician,jdbcType=VARCHAR}</if>
			<if test="execution_dept != null and execution_dept != ''">, #{execution_dept,jdbcType=VARCHAR}</if>
			<if test="advice_class != null and advice_class != ''">, #{advice_class,jdbcType=VARCHAR}</if>
			<if test="examiner != null and examiner != ''">, #{examiner,jdbcType=VARCHAR}</if>
			
		)
	</insert>
	
	<!-- 批量 新增专购品主表数据-->
	<insert id="addMatSpecialMainBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MAT_SPECIAL_MAIN (
				group_id, hos_id, copy_code, special_id, special_no, year, month, bus_type_code, sup_id, sup_no ,
				store_id, store_no, dept_id , dept_no , stocker ,  maker, make_date, state
				<if test="item.dept_emp != null and item.dept_emp != ''">, dept_emp</if>
				<if test="item.stock_type_code != null and item.stock_type_code != ''">, stock_type_code</if>
				<if test="item.brief != null and item.brief != ''">, brief</if>
				<if test="item.checker != null and item.checker != ''">, checker</if>
				<if test="item.check_date != null and item.check_date != ''">, check_date</if>
				<if test="item.confirmer != null and item.confirmer != ''">, confirmer</if>
				<if test="item.confirm_date != null and item.confirm_date != ''">, confirm_date</if>
				<if test="item.protocol_code != null and item.protocol_code != ''">, protocol_code</if>
				<if test="item.proj_id != null and item.proj_id != ''">, proj_id</if>
				<if test="item.come_from != null and item.come_from != ''">, come_from</if>
				<if test="item.bill_date != null and item.bill_date != ''">, bill_date</if>
				<if test="item.bill_no != null and item.bill_no != ''">, bill_no</if>
				<if test="item.patient_name != null and item.patient_name != ''">, patient_name</if>
				<if test="item.hospital_no != null and item.hospital_no != ''">, hospital_no</if>
				<if test="item.beds_no != null and item.beds_no != ''">, beds_no</if>
				<if test="item.patient_sex != null and item.patient_sex != ''">, patient_sex</if>
				<if test="item.patient_age != null and item.patient_age != ''">, patient_age</if>
				<if test="item.physician != null and item.physician != ''">, physician</if>
				<if test="item.execution_dept != null and item.execution_dept != ''">, execution_dept</if>
				<if test="item.advice_class != null and item.advice_class != ''">, advice_class</if>
				<if test="item.examiner != null and item.examiner != ''">, examiner</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.special_id,jdbcType=INTEGER},
				#{item.special_no,jdbcType=VARCHAR},
				#{item.year,jdbcType=VARCHAR},
				#{item.month,jdbcType=VARCHAR},
				#{item.bus_type_code,jdbcType=VARCHAR},
				#{item.sup_id,jdbcType=INTEGER},
				#{item.sup_no,jdbcType=INTEGER},
				#{item.store_id,jdbcType=INTEGER},
				#{item.store_no,jdbcType=INTEGER},
				#{item.dept_id,jdbcType=INTEGER},
				#{item.dept_no,jdbcType=INTEGER},
				#{item.stocker,jdbcType=INTEGER},
				#{item.maker,jdbcType=INTEGER},
				#{item.make_date,jdbcType=DATE},
				#{item.state,jdbcType=INTEGER}
				<if test="item.dept_emp != null and item.dept_emp != ''">, #{item.dept_emp,jdbcType=INTEGER}</if>
				<if test="item.stock_type_code != null and item.stock_type_code != ''">, #{item.stock_type_code,jdbcType=VARCHAR}</if>
				<if test="item.brief != null and item.brief != ''">, #{item.brief,jdbcType=VARCHAR}</if>
				<if test="item.checker != null and item.checker != ''">, #{item.checker,jdbcType=INTEGER}</if>
				<if test="item.check_date != null and item.check_date != ''">, #{item.check_date,jdbcType=DATE}</if>
				<if test="item.confirmer != null and item.confirmer != ''">, #{item.confirmer,jdbcType=INTEGER}</if>
				<if test="item.confirm_date != null and item.confirm_date != ''">, #{item.confirm_date,jdbcType=DATE}</if>
				<if test="item.protocol_code != null and item.protocol_code != ''">, #{item.protocol_code,jdbcType=VARCHAR}</if>
				<if test="item.proj_id != null and item.proj_id != ''">, #{item.proj_id,jdbcType=INTEGER}</if>
				<if test="item.come_from != null and item.come_from != ''">, #{item.come_from,jdbcType=INTEGER}</if>
				<if test="item.bill_date != null and item.bill_date != ''">, #{item.bill_date,jdbcType=DATE}</if>
				<if test="item.bill_no != null and item.bill_no != ''">, #{item.bill_no,jdbcType=VARCHAR}</if>
				<if test="item.patient_name != null and item.patient_name != ''">, #{item.patient_name,jdbcType=VARCHAR}</if>
				<if test="item.hospital_no != null and item.hospital_no != ''">, #{item.hospital_no,jdbcType=INTEGER}</if>
				<if test="item.beds_no != null and item.beds_no != ''">, #{item.beds_no,jdbcType=INTEGER}</if>
				<if test="item.patient_sex != null and item.patient_sex != ''">, #{item.patient_sex,jdbcType=VARCHAR}</if>
				<if test="item.patient_age != null and item.patient_age != ''">,  #{item.patient_age,jdbcType=INTEGER}</if>
				<if test="item.physician != null and item.physician != ''">, #{item.physician,jdbcType=VARCHAR}</if>
				<if test="item.execution_dept != null and item.execution_dept != ''">, #{item.execution_dept,jdbcType=VARCHAR}</if>
				<if test="item.advice_class != null and item.advice_class != ''">, #{item.advice_class,jdbcType=VARCHAR}</if>
				<if test="item.examiner != null and item.examiner != ''">, #{item.examiner,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	
	<!-- 批量添加  专购品明细表数据 -->
	<insert id="addMatSpecialDetailBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MAT_SPECIAL_DETAIL (
				group_id, hos_id, copy_code, special_id, special_no, detail_id, inv_id, inv_no, batch_sn, batch_no, price, amount, amount_money  
				
				<if test="item.sale_price != null and item.sale_price != ''">, sale_price</if>
				<if test="item.sale_money != null and item.sale_money != ''">, sale_money</if>
				<if test="item.sell_price != null and item.sell_price != ''">, sell_price</if>
				<if test="item.sell_money != null and item.sell_money != ''">, sell_money</if>
				<if test="item.allot_price != null and item.allot_price != ''">, allot_price</if>
				<if test="item.allot_money != null and item.allot_money != ''">, allot_money</if>
				<if test="item.pack_code != null and item.pack_code != ''">, pack_code</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, num_exchange</if>
				<if test="item.pack_price != null and item.pack_price != ''">, pack_price</if>
				<if test="item.num != null and item.num != ''">, num</if>
				<if test="item.sn!= null and item.sn != ''">, sn</if>
				<if test="item.bar_code != null and item.bar_code != ''">, bar_code</if>
				<if test="item.inva_date != null and item.inva_date != ''">, inva_date</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, disinfect_date</if>
				<if test="item.location_id != null">, location_id</if>
				<if test="item.note != null and item.note != ''">, note</if>
				<if test="item.cert_id != null and item.cert_id != ''">, cert_id</if>
				<if test="item.cert_code != null and item.cert_code != ''">, cert_code</if>
				<if test="item.fac_date != null and item.fac_date != ''">, fac_date</if>
				<if test="item.serial_no != null and item.serial_no != ''">,serial_no</if>
			) 
			values(
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.special_id,jdbcType=INTEGER},
				#{item.special_no,jdbcType=VARCHAR},
				#{item.detail_id,jdbcType=INTEGER}, 
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.batch_sn,jdbcType=INTEGER},
				#{item.batch_no,jdbcType=VARCHAR},
				#{item.price,jdbcType=FLOAT},
				#{item.amount,jdbcType=FLOAT},
				#{item.amount_money,jdbcType=FLOAT}
				
				<if test="item.sale_price != null and item.sale_price != ''">, #{item.sale_price,jdbcType=FLOAT}</if>
				<if test="item.sale_money != null and item.sale_money != ''">, #{item.sale_money,jdbcType=FLOAT}</if>
				<if test="item.sell_price != null and item.sell_price != ''">, #{item.sell_price,jdbcType=FLOAT}</if>
				<if test="item.sell_money != null and item.sell_money != ''">, #{item.sell_money,jdbcType=FLOAT}</if>
				<if test="item.allot_price != null and item.allot_price != ''">, #{item.allot_price,jdbcType=FLOAT}</if>
				<if test="item.allot_money != null and item.allot_money != ''">, #{item.allot_money,jdbcType=FLOAT}</if>
				<if test="item.pack_code != null and item.pack_code != ''">, #{item.pack_code,jdbcType=VARCHAR}</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, #{item.num_exchange,jdbcType=INTEGER}</if>
				<if test="item.pack_price != null and item.pack_price != ''">, #{item.pack_price,jdbcType=INTEGER}</if>
				<if test="item.num != null and item.num != ''">, #{item.num,jdbcType=INTEGER}</if>
				<if test="item.sn != null and item.sn != ''">, #{item.sn,jdbcType=VARCHAR}</if>
				<if test="item.bar_code != null and item.bar_code != ''">, #{item.bar_code,jdbcType=VARCHAR}</if>
				<if test="item.inva_date != null and item.inva_date != ''">, #{item.inva_date,jdbcType=DATE}</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, #{item.disinfect_date,jdbcType=DATE}</if>
				<if test="item.location_id != null">, #{item.location_id,jdbcType=INTEGER}</if>
				<if test="item.note != null and item.note != ''">, #{item.note,jdbcType=VARCHAR}</if>
				<if test="item.cert_id != null and item.cert_id != ''">, #{item.cert_id,jdbcType=INTEGER}</if>
				<if test="item.cert_code != null and item.cert_code != ''">, #{item.cert_code,jdbcType=INTEGER}</if>
				<if test="item.fac_date != null and item.fac_date != ''">, #{item.fac_date,jdbcType=DATE}</if>
				<if test="item.serial_no != null and item.serial_no != ''">, #{item.serial_no,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	
	<!-- 修改  专购品主表数据 -->
	<update id="updateSpecialMain" parameterType="java.util.Map">
		update mat_special_main
			set
			
				sup_id = #{sup_id,jdbcType=INTEGER},
			
				sup_no = #{sup_no,jdbcType=INTEGER},
			
				store_id = #{store_id,jdbcType=INTEGER},
			
				store_no = #{store_no,jdbcType=INTEGER},
				
				dept_id = #{dept_id,jdbcType=INTEGER},
				
				dept_no = #{dept_no,jdbcType=INTEGER},
				
				dept_emp = #{dept_emp,jdbcType=INTEGER},
			
				brief = #{brief,jdbcType=VARCHAR},
			
				stocker = #{stocker,jdbcType=INTEGER},
			
				stock_type_code = #{stock_type_code,jdbcType=INTEGER},
				
				make_date = #{make_date,jdbcType=DATE},
			
				protocol_code = #{protocol_code,jdbcType=VARCHAR},
		
				proj_id = #{proj_id,jdbcType=INTEGER},
			
				bill_date = #{bill_date,jdbcType=DATE},
		
				bill_no = #{bill_no,jdbcType=VARCHAR},
				
				patient_name = #{patient_name,jdbcType=VARCHAR},
				
				hospital_no = #{hospital_no,jdbcType=VARCHAR},
				
				beds_no = #{beds_no,jdbcType=VARCHAR},
				
				patient_sex = #{patient_sex,jdbcType=VARCHAR},
				
				patient_age = #{patient_age,jdbcType=VARCHAR},
				
				physician = #{physician,jdbcType=VARCHAR},
				
				execution_dept = #{execution_dept,jdbcType=VARCHAR},
				
				advice_class = #{advice_class,jdbcType=VARCHAR} ,
				
				examiner = #{examiner,jdbcType=INTEGER}
				
			
			WHERE
				group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and special_id = #{special_id,jdbcType=INTEGER}
				and special_no = #{special_no,jdbcType=VARCHAR}
	</update>
	
	<update id="updateMatOutMain" parameterType="java.util.Map">
	
		UPDATE mat_out_main 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="year != null and year != ''">year = #{year,jdbcType=VARCHAR},</if>
		<if test="month != null and month != ''">month = #{month,jdbcType=VARCHAR},</if>
		<if test="bus_type_code != null and bus_type_code != ''">bus_type_code = #{bus_type_code,jdbcType=VARCHAR},</if>
		<if test="store_id != null ">store_id = #{store_id,jdbcType=INTEGER},</if>
		<if test="store_no != null ">store_no = #{store_no,jdbcType=INTEGER},</if>
		<if test="brief != null and brief != ''">brief = #{brief,jdbcType=VARCHAR},</if>
		<if test="dept_id != null ">dept_id = #{dept_id,jdbcType=INTEGER},</if>
		<if test="dept_no != null ">dept_no = #{dept_no,jdbcType=INTEGER},</if>
		<if test="dept_emp != null ">dept_emp = #{dept_emp,jdbcType=INTEGER},</if>
		<if test="use_code != null and use_code != ''">use_code = #{use_code,jdbcType=VARCHAR},</if>
		<if test="proj_id != null and proj_id != ''">proj_id = #{proj_id,jdbcType=INTEGER},</if>
		<if test="maker != null and maker != ''">maker = #{maker,jdbcType=INTEGER},</if>
		<if test="out_date != null and out_date != ''">out_date =#{out_date,jdbcType=DATE},</if>
		<if test="checker != null and checker != ''">checker = #{checker,jdbcType=INTEGER},</if>
		<if test="check_date != null and check_date != ''">check_date = #{check_date,jdbcType=DATE},</if>
		<if test="confirmer != null and confirmer != ''">confirmer = #{confirmer,jdbcType=INTEGER},</if>
		<if test="confirm_date != null and confirm_date != ''">confirm_date = #{confirm_date,jdbcType=DATE},</if>
		<if test="state != null ">state = #{state,jdbcType=INTEGER},</if>
		<if test="is_dir != null ">is_dir = #{is_dir,jdbcType=INTEGER},</if>
		<if test="his_flag != null and his_flag != ''">his_flag = #{his_flag,jdbcType=VARCHAR},</if>
		<if test="amount_money != null and amount_money != ''">amount_money = #{amount_money,jdbcType=FLOAT},</if>
		</trim>
		<where>                     
		<if test="group_id != null ">AND group_id = #{group_id,jdbcType=INTEGER}</if>
		<if test="hos_id != null ">AND hos_id = #{hos_id,jdbcType=INTEGER}</if>
		<if test="copy_code != null and copy_code != ''">AND copy_code = #{copy_code,jdbcType=VARCHAR}</if>
		<if test="out_id != null ">AND out_id = #{out_id,jdbcType=INTEGER}</if>
		</where>  
	</update>
		<!-- 用于 专购品明细表加载 -->
	<select id="queryMatSpecialDetailByCode" resultMap="matInDetailCommon" parameterType="java.util.Map" >
		select a.group_id, a.hos_id, a.copy_code, a.special_id, a.special_no
			, a.detail_id, a.inv_id, a.inv_no, b.inv_code, b.inv_name
			, b.bid_code, b.inv_model, b.unit_code, c.unit_name, a.amount
			, a.price, a.amount_money, a.pack_code, e.pack_name, a.num_exchange
			, a.pack_price, a.num, a.batch_no, a.batch_sn, a.sn
			, a.bar_code, a.sell_price, a.sell_money, a.sale_price, a.sale_money
			, a.allot_price, a.allot_money, a.inva_date, a.disinfect_date, msi.location_id  location_new_id
			, d.location_name location_new_name, a.note, f.order_rela, b.is_highvalue, b.is_batch
			, b.is_bar, b.is_per_bar, b.is_quality, b.is_single_ven, b.is_disinfect
			, hfd.fac_name, a.cert_id, a.cert_code, mic.start_date, mic.end_date
			, a.fac_date, a.serial_no, i.affi_out_no
		from mat_special_detail a
		left join mat_inv_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no
		left join hos_unit c
			on b.group_id = c.group_id
			and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
		left join mat_store_inv msi on a.group_id = msi.group_id
			and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
			and a.inv_id = msi.inv_id
			and msi.store_id = #{store_id,jdbcType=INTEGER} 
			left join mat_location_dict d on msi.group_id = d.group_id
			and msi.hos_id = d.hos_id
			and msi.copy_code = d.copy_code
			and msi.location_id = d.location_id 
			and msi.store_id = d.store_id
			and d.is_stop = 0
		left join hos_package e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.pack_code = e.pack_code
		left join hos_fac_dict hfd 
			on hfd.group_id = b.group_id
			and hfd.hos_id = b.hos_id
			and hfd.fac_id = b.fac_id
			and hfd.fac_no = b.fac_no
		<!-- left join mat_prod_cert_inv ia 
			on a.group_id = ia.group_id and a.hos_id = ia.hos_id 
			and a.copy_code = ia.copy_code and a.inv_id = ia.inv_id 
			and a.cert_id = ia.cert_id -->
		left join mat_prod_cert mic 
			on mic.group_id = a.group_id and mic.hos_id = a.hos_id 
			and mic.cert_id = a.cert_id and mic.check_state = 2
		left join (
			select sp_detail_id, '['||to_char(wm_concat('{"order_id":'||order_id||',"order_detail_id":'||order_detail_id||',"in_amount":'||special_amount||',"order_amount":'||order_amount||'}'))||']' order_rela 
			from mat_special_order_rela
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and special_id = #{special_id,jdbcType=INTEGER} 
			group by sp_detail_id
		)f
			on a.detail_id = f.sp_detail_id
		left join (
			select g.sp_detail_id, to_char(wm_concat(h.out_no)) affi_out_no 
			from mat_special_affi_out_rela g
			left join mat_affi_out h 
				on g.group_id = h.group_id 
				and g.hos_id = h.hos_id 
				and g.copy_code = h.copy_code 
				and g.affi_out_id = h.out_id  
			where g.group_id = #{group_id,jdbcType=INTEGER} 
				and g.hos_id = #{hos_id,jdbcType=INTEGER} 
				and g.copy_code = #{copy_code,jdbcType=VARCHAR}
				and g.special_id = #{special_id,jdbcType=INTEGER} 
			group by g.sp_detail_id
		)i
			on a.detail_id = i.sp_detail_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and a.special_id = #{special_id,jdbcType=INTEGER} 
		order by a.detail_id 
	</select>
	
	<!-- 修改保存时删除页面中不存在的明细数据 -->
	<delete id="deleteMatSpecialDetailForUpdate" parameterType="java.util.Map">
		DELETE FROM mat_special_detail 
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and special_id = #{special_id,jdbcType=INTEGER} 
			and detail_id not in (${detail_ids})
	</delete>
	
	<!-- 专购品明细表修改（批量） -->
	<update id="updateMatSpecialDetailBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_special_detail 
			<set>
				<trim suffix="" suffixOverrides=",">
					<if test="item.inv_id != null and item.inv_id != ''">
						inv_id = #{item.inv_id,jdbcType=INTEGER},
					</if>
					<if test="item.inv_no != null and item.inv_no != ''">
						inv_no = #{item.inv_no,jdbcType=INTEGER},
					</if>
					<if test="item.batch_no != null and item.batch_no != ''">
						batch_no = #{item.batch_no,jdbcType=VARCHAR},
					</if>
					<if test="item.batch_sn != null and item.batch_sn != ''">
						batch_sn = #{item.batch_sn,jdbcType=INTEGER},
					</if>
					<if test="item.price != null and item.price != ''">
						price = #{item.price,jdbcType=FLOAT},
					</if>
					<if test="item.amount != null and item.amount != ''">
						amount = #{item.amount,jdbcType=INTEGER},
					</if>
					<if test="item.amount_money != null and item.amount_money != ''">
						amount_money = #{item.amount_money,jdbcType=FLOAT},
					</if>
					<if test="item.sell_price != null and item.sell_price != ''">
						sell_price = #{item.sell_price,jdbcType=FLOAT},
					</if>
					<if test="item.sell_money != null and item.sell_money != ''">
						sell_money = #{item.sell_money,jdbcType=FLOAT},
					</if>
					<if test="item.sale_price != null and item.sale_price != ''">
						sale_price = #{item.sale_price,jdbcType=FLOAT},
					</if>
					<if test="item.sale_money != null and item.sale_money != ''">
						sale_money = #{item.sale_money,jdbcType=FLOAT},
					</if>
					<if test="item.allot_price != null and item.allot_price != ''">
						allot_price = #{item.allot_price,jdbcType=FLOAT},
					</if>
					<if test="item.allot_money != null and item.allot_money != ''">
						allot_money = #{item.allot_money,jdbcType=FLOAT},
					</if>
					<if test="item.pack_code != null and item.pack_code != ''">
						pack_code = #{item.pack_code,jdbcType=VARCHAR},
					</if>
					<if test="item.num_exchange!= null and item.num_exchange != ''">
						num_exchange = #{item.num_exchange,jdbcType=INTEGER},
					</if>
					<if test="item.pack_price != null and item.pack_price != ''">
						pack_price = #{item.pack_price,jdbcType=FLOAT},
					</if>
					<if test="item.num != null and item.num != ''">
						num = #{item.num,jdbcType=INTEGER},
					</if>
					<if test="item.sn != null and item.sn != ''">
						sn = #{item.sn,jdbcType=VARCHAR},
					</if>
					<if test="item.bar_code != null and item.bar_code != ''">
						bar_code = #{item.bar_code,jdbcType=VARCHAR},
					</if>
					<if test="item.inva_date != null and item.inva_date != ''">
						inva_date = #{item.inva_date,jdbcType=DATE},
					</if>
					<if test="item.disinfect_date != null and item.disinfect_date != ''">
						disinfect_date = #{item.disinfect_date,jdbcType=DATE},
					</if>
					<if test="item.location_id != null">
						location_id = #{item.location_id,jdbcType=INTEGER},
					</if>
					<if test="item.note != null">
						note = #{item.note,jdbcType=VARCHAR},
					</if>
					<if test="item.cert_id != null and item.cert_id != ''">
						cert_id = #{item.cert_id,jdbcType=INTEGER},
					</if>
					<if test="item.cert_code != null and item.cert_code != ''">
						cert_code = #{item.cert_code,jdbcType=INTEGER},
					</if>
					<if test="item.fac_date != null and item.fac_date != ''">
						fac_date = #{item.fac_date,jdbcType=DATE},
					</if>
					<if test="item.serial_no != null ">
						serial_no = #{item.serial_no,jdbcType=INTEGER},
					</if>
				</trim>
			</set>
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and special_id = #{item.special_id,jdbcType=INTEGER}
				and detail_id = #{item.detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 修改出库资金来源表  -->
	<update id="updateMatOutResource" parameterType="java.util.Map">
		UPDATE mat_out_resource set

		source_money = #{money_sum,jdbcType=INTEGER}

		<where>                     
		<if test="group_id != null and group_id != ''">AND group_id = #{group_id,jdbcType=INTEGER}</if>
		<if test="hos_id != null and hos_id != ''">AND hos_id = #{hos_id,jdbcType=INTEGER}</if>
		<if test="copy_code != null and copy_code != ''">AND copy_code = #{copy_code,jdbcType=VARCHAR}</if>
		<if test="out_id != null and out_id != ''">AND out_id = #{out_id,jdbcType=INTEGER}</if>
		<if test="source_id != null and source_id != ''">AND source_id = #{source_id,jdbcType=INTEGER}</if>
		</where>  
	</update>
	
	<!-- 查询 材料灭菌日期表  MAT_BATCH_DISINFECT 是否存在该记录（存在则不修改 否则就添加 -->
	<select id="queryDisinfectExists" parameterType="java.util.Map" resultType="java.lang.Long" >
		select count(inv_id)
		from MAT_BATCH_DISINFECT
		<where>
			<if test="group_id != null and group_id != '' ">
			    AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != '' ">
			    AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != '' ">
			    AND batch_no = #{batch_no,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<!-- 查询 材料期效表 MAT_BATCH_VALIDITY 是否存在该记录（存在则不修改 否则就添加 -->
	<select id="queryValidityExists" parameterType="java.util.Map" resultType="java.lang.Long" >
		select count(inv_id)
		from MAT_BATCH_VALIDITY
		<where>
			<if test="group_id != null and group_id != '' ">
			    AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != '' ">
			    AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != '' ">
			    AND batch_no = #{batch_no,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<!-- 批量添加  材料灭菌日期表  MAT_BATCH_DISINFECT -->
	<insert id="addBatchDisinfect" parameterType="java.util.List" >
		insert into MAT_BATCH_DiSINFECT (group_id, hos_id, copy_code,inv_id , batch_no ,disinfect_date )
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.batch_no,jdbcType=VARCHAR},
				#{item.disinfect_date,jdbcType=DATE}
			from dual
		</foreach>
		)t
	</insert>
	
	<!-- 批量添加 材料期效表  MAT_BATCH_VALIDITY -->
	<insert id="addBatchValidity" parameterType="java.util.List" >
		insert into MAT_BATCH_VALIDITY (group_id, hos_id, copy_code,inv_id , batch_no ,inva_date )
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.batch_no,jdbcType=VARCHAR},
				#{item.inva_date,jdbcType=DATE}
			from dual
		</foreach>
		)t
	</insert>
	<!-- 查询入库资金来源 -->
	<select id="queryMatInResource" parameterType="java.util.Map" resultMap="matInMain" >
		select group_id , hos_id , copy_code , in_id , source_id , source_money
		from MAT_IN_RESOURCE 
		<where>
			<if test="group_id != null and group_id != '' ">
			    AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != '' ">
			    AND in_id = #{in_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<!-- 查询出库资金来源 -->
	<select id="queryMatOutResource" parameterType="java.util.Map" resultMap="matInMain" >
		select group_id , hos_id , copy_code , out_id , source_id , source_money
		from MAT_OUT_RESOURCE 
		<where>
			<if test="group_id != null and group_id != '' ">
			    AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="out_id != null and out_id != '' ">
			    AND out_id = #{out_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<!-- 批量新增 专购品入库 资金来源 数据 -->
	<insert id="addInResourceBatch" parameterType="java.util.List" >
		insert into MAT_IN_RESOURCE(group_id, hos_id, copy_code,in_id , source_id, source_money)
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.in_id,jdbcType=INTEGER},
				#{item.source_id,jdbcType=INTEGER},
				#{item.source_money,jdbcType=INTEGER}
			from dual
		</foreach>
		)t
	</insert>
	
	<!-- 批量新增 专购品出库 资金来源 数据 -->
	<insert id="addOutResourceBatch" parameterType="java.util.List" >
		insert into MAT_OUT_RESOURCE(group_id, hos_id, copy_code, out_id, source_id, source_money)
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.source_id,jdbcType=INTEGER},
				#{item.source_money,jdbcType=INTEGER}
			from dual
		</foreach>
		)t
	</insert>
	<!-- 查询 专购品上一张 单据数据 -->
	<select id="queryMatSpecialBefore" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT  special_id , special_no
		FROM MAT_SPECIAL_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
			AND special_id = (
				SELECT MAX(special_id) FROM MAT_SPECIAL_MAIN
				WHERE group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
					AND special_id &lt; #{special_id,jdbcType=INTEGER}
			) 
	</select>
	
	<!-- 查询 专购品下一张 单据数据 -->
	<select id="queryMatSpecialNext" parameterType="java.util.Map" resultMap="matInMain" >
		SELECT special_id , special_no 
		FROM MAT_SPECIAL_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
			AND special_id =( 
				SELECT MIN(special_id) 	FROM MAT_SPECIAL_MAIN
				WHERE group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
					AND special_id &gt; #{special_id,jdbcType=INTEGER}
			)
	</select>
	
	<!-- 更改代销出库单  是否已生成专购品  状态  -->
	<update id="updateAffiOutState" parameterType="java.util.Map">
		UPDATE mat_affi_out set

		use_state = #{use_state,jdbcType=INTEGER}

		<where>                     
		<if test="group_id != null and group_id != ''">AND group_id = #{group_id,jdbcType=INTEGER}</if>
		<if test="hos_id != null and hos_id != ''">AND hos_id = #{hos_id,jdbcType=INTEGER}</if>
		<if test="copy_code != null and copy_code != ''">AND copy_code = #{copy_code,jdbcType=VARCHAR}</if>
		<if test="out_id != null and out_id != ''">AND out_id = #{affi_out_id,jdbcType=INTEGER}</if>
		</where>  
	</update>
	
	<!-- 入库主表模板打印 -->
	<select id="queryMatSpecialPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			msm.group_id, msm.hos_id, msm.copy_code, msm.special_id, msm.special_no, msr.in_id ,msr.in_no , msr.out_id, 
			msr.out_no, msm.year ,msm.month ,msm.brief, msm.store_id, msm.store_no, hsc.store_name,	msm. bus_type_code,
			msm.sup_id, msm.sup_no, hsd.sup_name, msm.dept_id, msm.dept_no, hdd.dept_code,hdd.dept_name, msm.stocker, 
			he.emp_name as stocker_name, t.amount_money as money_sum, t.amount_money as money_sum_upper, 
			to_char(msm.make_date, 'yyyy-MM-dd hh24:mi:ss') in_date, 
			msm.maker, su.user_name as maker_name, syu.user_name as checker,
			to_char(msm.check_date, 'yyyy-MM-dd hh24:mi:ss') check_date,
			to_char(msm.confirm_date, 'yyyy-MM-dd hh24:mi:ss') confirm_date, 
			sysu.user_name as confirmer, msm.state, he1.emp_name as dept_emp, 
			to_char(msm.bill_date, 'yyyy-MM-dd hh24:mi:ss') bill_date, msm.bill_no,mst.stock_type_name as stock_type_name,
            hpd.proj_code, hpd.proj_name,
            he2.emp_name as examiner_name
		FROM MAT_SPECIAL_MAIN  msm
		LEFT JOIN (
			select special_id , SUM(amount_money) as amount_money 
			from mat_special_detail 
			where group_id = #{group_id,jdbcType=NUMERIC} 
				and hos_id = #{hos_id,jdbcType=NUMERIC} 
				and copy_code  = #{copy_code,jdbcType=VARCHAR} 
				and special_id=#{special_id,jdbcType=NUMERIC} 
			group by special_id 
		) t
			ON
				msm.special_id = t.special_id
		LEFT JOIN MAT_SPECIAL_RELA msr
			ON
				msm.group_id = msr.group_id
				and msm.hos_id = msr.hos_id
				and msm.copy_code = msr.copy_code
				and msm.special_id = msr.special_id
				and msm.special_no = msr.special_no
		LEFT JOIN HOS_DEPT_DICT hdd
			ON 
				msm.group_id = hdd.group_id
				and msm.hos_id = hdd.hos_id
				and msm.dept_id = hdd.dept_id
				and msm.dept_no = hdd.dept_no
		LEFT JOIN hos_store_dict hsc
			on msm.group_id = hsc.group_id
			and msm.hos_id = hsc.hos_id
			and msm.store_id = hsc.store_id
			and msm.store_no = hsc.store_no
		LEFT JOIN sys_user su
			on msm.group_id = su.group_id
			and msm.hos_id = su.hos_id
			and msm.maker = su.user_id 
		LEFT JOIN sys_user syu
			on msm.group_id = syu.group_id
			and msm.hos_id = syu.hos_id
			and msm.checker = syu.user_id
		LEFT JOIN sys_user sysu
			on msm.group_id = sysu.group_id
			and msm.hos_id = sysu.hos_id
			and msm.confirmer = sysu.user_id
		LEFT JOIN hos_sup_dict hsd
			on msm.group_id = hsd.group_id
			and msm.hos_id = hsd.hos_id
			and msm.sup_id = hsd.sup_id
			and msm.sup_no = hsd.sup_no
		LEFT JOIN hos_emp he
			on msm.group_id = he.group_id
			and msm.hos_id = he.hos_id
			and msm.stocker = he.emp_id
		LEFT JOIN hos_emp he1
			on msm.group_id = he1.group_id
			and msm.hos_id = he1.hos_id
			and msm.dept_emp = he1.emp_id
        LEFT JOIN hos_emp he2 on msm.examiner = he2.emp_id
            and msm.hos_id = he2.hos_id
            and msm.group_id = he2.group_id
	    LEFT JOIN mat_stock_type mst 
	    	on msm.group_id = mst.group_id
			and msm.hos_id = mst.hos_id 
			and msm.copy_code = mst.copy_code
			and msm.stock_type_code = mst.stock_type_code
        left join hos_proj_dict hpd on msm.group_id = hpd.group_id
            and msm.hos_id = hpd.hos_id
            and msm.proj_id = hpd.proj_id
            and hpd.is_stop = 0 
		where msm.group_id = #{group_id,jdbcType=NUMERIC}
			and msm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and msm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and msm.special_id=#{special_id,jdbcType=NUMERIC}
	</select>
	
	<!-- 入库主表模板打印 -->
	<select id="queryMatSpecialPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			msm.special_id id, msm.group_id, msm.hos_id, msm.copy_code, msm.special_id, msm.special_no, msr.in_id ,msr.in_no , msr.out_id, 
			msr.out_no, msm.year ,msm.month ,msm.brief, msm.store_id, msm.store_no, hsc.store_name,	msm. bus_type_code,
			msm.sup_id, msm.sup_no, hsd.sup_name, msm.dept_id, msm.dept_no, hdd.dept_code,hdd.dept_name, msm.stocker, 
			he.emp_name as stocker_name, t.amount_money as money_sum, t.amount_money as money_sum_upper, 
			to_char(msm.make_date, 'yyyy-MM-dd hh24:mi:ss') in_date, 
			msm.maker, su.user_name as maker_name, syu.user_name as checker,
			to_char(msm.check_date, 'yyyy-MM-dd hh24:mi:ss') check_date,
			to_char(msm.confirm_date, 'yyyy-MM-dd hh24:mi:ss') confirm_date, 
			sysu.user_name as confirmer, msm.state, he1.emp_name as dept_emp, 
			to_char(msm.bill_date, 'yyyy-MM-dd hh24:mi:ss') bill_date, msm.bill_no, he2.emp_name as examiner_name, msm.stock_type_code,mst.stock_type_name,
            hpd.proj_code, hpd.proj_name
		FROM MAT_SPECIAL_MAIN  msm
		LEFT JOIN (
			select special_id , SUM(amount_money) as amount_money 
			from mat_special_detail 
			where group_id = #{group_id,jdbcType=NUMERIC} 
				and hos_id = #{hos_id,jdbcType=NUMERIC} 
				and copy_code  = #{copy_code,jdbcType=VARCHAR} 
				and special_id in (${paraId})
			group by special_id 
		) t
			ON
				msm.special_id = t.special_id
		LEFT JOIN MAT_SPECIAL_RELA msr
			ON
				msm.group_id = msr.group_id
				and msm.hos_id = msr.hos_id
				and msm.copy_code = msr.copy_code
				and msm.special_id = msr.special_id
				and msm.special_no = msr.special_no
		LEFT JOIN HOS_DEPT_DICT hdd
			ON 
				msm.group_id = hdd.group_id
				and msm.hos_id = hdd.hos_id
				and msm.dept_id = hdd.dept_id
				and msm.dept_no = hdd.dept_no
		LEFT JOIN hos_store_dict hsc
			on msm.group_id = hsc.group_id
			and msm.hos_id = hsc.hos_id
			and msm.store_id = hsc.store_id
			and msm.store_no = hsc.store_no
		LEFT JOIN sys_user su
			on msm.group_id = su.group_id
			and msm.hos_id = su.hos_id
			and msm.maker = su.user_id
		LEFT JOIN sys_user syu
			on msm.group_id = syu.group_id
			and msm.hos_id = syu.hos_id
			and msm.checker = syu.user_id
		LEFT JOIN sys_user sysu
			on msm.group_id = sysu.group_id
			and msm.hos_id = sysu.hos_id
			and msm.confirmer = sysu.user_id
		LEFT JOIN hos_sup_dict hsd
			on msm.group_id = hsd.group_id
			and msm.hos_id = hsd.hos_id
			and msm.sup_id = hsd.sup_id
			and msm.sup_no = hsd.sup_no
		LEFT JOIN hos_emp he
			on msm.group_id = he.group_id
			and msm.hos_id = he.hos_id
			and msm.stocker = he.emp_id
		LEFT JOIN hos_emp he1
			on msm.group_id = he1.group_id
			and msm.hos_id = he1.hos_id
			and msm.dept_emp = he1.emp_id
		LEFT JOIN hos_emp he2 on msm.examiner = he2.emp_id
			and msm.hos_id = he2.hos_id
			and msm.group_id = he2.group_id		
		left join mat_stock_type mst on msm.group_id=mst.group_id
			and msm.hos_id=mst.hos_id and msm.copy_code=mst.copy_code
			and msm.stock_type_code=mst.stock_type_code
        left join hos_proj_dict hpd on msm.group_id = hpd.group_id
            and msm.hos_id = hpd.hos_id
            and msm.proj_id = hpd.proj_id
            and hpd.is_stop = 0 
		where msm.group_id = #{group_id,jdbcType=NUMERIC}
			and msm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and msm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and msm.special_id in (${paraId})
		order by msm.special_id
	</select>
	
	<!-- 入库明细表模板打印 -->
	<select id="queryMatSpecialPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.special_id id, a.group_id, a.hos_id, a.copy_code, a.special_id  ,a.detail_id, a.inv_id, a.inv_no, b.inv_code, b.inv_name, 
			b.bid_code, b.inv_model, b.unit_code, c.unit_name, a.amount, a.price, a.amount_money money, a.pack_code, e.pack_name, 
			a.num_exchange, a.pack_price, a.num, a.batch_no, a.batch_sn, a.sn, a.bar_code, a.sell_price, a.sell_money, 
			a.sale_price, a.sale_money, a.allot_price, a.allot_money, to_char(a.inva_date, 'yyyy-MM-dd') inva_date, to_char(a.disinfect_date, 'yyyy-MM-dd') disinfect_date, a.location_id, 
			d.location_name, a.note, b.is_highvalue, b.is_batch, b.is_bar, b.is_per_bar, b.is_quality, b.is_single_ven, 
			b.is_disinfect, hfd.fac_name, a.cert_id, a.cert_code, to_char(mic.start_date, 'yyyy-MM-dd') start_date, 
			to_char(mic.end_date, 'yyyy-MM-dd') end_date, to_char(a.fac_date, 'yyyy-MM-dd') fac_date,a.serial_no, mtd.mat_type_name,i.affi_out_no
		FROM mat_special_detail a
		left join mat_inv_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no
		left join mat_type_dict mtd
			on b.group_id = mtd.group_id
			and b.hos_id = mtd.hos_id
			and b.copy_code = mtd.copy_code
			and b.mat_type_id = mtd.mat_type_id
			and b.mat_type_no = mtd.mat_type_no
		left join hos_unit c
			on b.group_id = c.group_id
			and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
		left join mat_location_dict d
			on a.group_id = d.group_id 
			and a.hos_id = d.hos_id
			and a.copy_code = d.copy_code
			and a.location_id = d.location_id
			and d.is_stop = 0
		left join hos_package e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.pack_code = e.pack_code
		left join hos_fac_dict hfd 
			on hfd.group_id = b.group_id
			and hfd.hos_id = b.hos_id
			and hfd.fac_id = b.fac_id
			and hfd.fac_no = b.fac_no
		<!-- left join mat_prod_cert_inv ia
			on a.group_id = ia.group_id and a.hos_id = ia.hos_id 
			and a.copy_code = ia.copy_code and a.inv_id = ia.inv_id 
			and a.cert_id = ia.cert_id -->
		left join mat_prod_cert mic 
			on mic.group_id = a.group_id and mic.hos_id = a.hos_id 
			and mic.cert_id = a.cert_id and mic.cert_state = 1
		left join (
			select g.sp_detail_id, to_char(wm_concat(h.out_no)) as affi_out_no
			from mat_special_affi_out_rela g
				left join mat_affi_out h on g.group_id = h.group_id
			and g.hos_id = h.hos_id
			and g.copy_code = h.copy_code
			and g.affi_out_id = h.out_id 
			where g.group_id = '10'
				and g.hos_id = '15'
				and g.copy_code = '001'
				and g.special_id = '192236'
			group by g.sp_detail_id
		) i on a.detail_id = i.sp_detail_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test="p_num != null and p_num ==1">
				and a.special_id in (${paraId})
			</if>
			<if test="p_num == null or p_num == 0">
				and a.special_id = #{special_id,jdbcType=NUMERIC}
			</if>	
		order by a.detail_id
	</select>
	
	<!-- 入库明细表模板打印 -->
	<select id="queryMatSpecialPrintTemlateByDetailCollect" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.special_id id, a.group_id, a.hos_id, a.copy_code, a.special_id, a.inv_id, a.inv_no, 
			b.inv_code, b.inv_name, b.bid_code, b.inv_model, b.unit_code, c.unit_name, sum(a.amount) amount, 
			a.price, sum(a.amount_money) money, a.pack_code, e.pack_name, a.num_exchange, a.pack_price, 
			sum(a.num) num, a.batch_no, a.sell_price, sum(a.sell_money) sell_money, a.sale_price, 
			sum(a.sale_money) sale_money, a.allot_price, sum(a.allot_money) allot_money, 
			to_char(a.inva_date, 'yyyy-MM-dd') inva_date, to_char(a.disinfect_date, 'yyyy-MM-dd') disinfect_date, 
			a.location_id, d.location_name, a.note, b.is_highvalue, b.is_batch, b.is_bar, b.is_per_bar, b.is_quality, 
			b.is_single_ven, b.is_disinfect, hfd.fac_name, a.cert_id, a.cert_code, 
			to_char(mic.start_date, 'yyyy-MM-dd') start_date, to_char(mic.end_date, 'yyyy-MM-dd') end_date, 
			to_char(a.fac_date, 'yyyy-MM-dd') fac_date,a.serial_no, mtd.mat_type_name
		FROM mat_special_detail a
		left join mat_inv_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no
		left join mat_type_dict mtd
			on b.group_id = mtd.group_id
			and b.hos_id = mtd.hos_id
			and b.copy_code = mtd.copy_code
			and b.mat_type_id = mtd.mat_type_id
			and b.mat_type_no = mtd.mat_type_no
		left join hos_unit c
			on b.group_id = c.group_id
			and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
		left join mat_location_dict d
			on a.group_id = d.group_id 
			and a.hos_id = d.hos_id
			and a.copy_code = d.copy_code
			and a.location_id = d.location_id
			and d.is_stop = 0
		left join hos_package e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.pack_code = e.pack_code
		left join hos_fac_dict hfd 
			on hfd.group_id = b.group_id
			and hfd.hos_id = b.hos_id
			and hfd.fac_id = b.fac_id
			and hfd.fac_no = b.fac_no
		<!-- left join mat_prod_cert_inv ia
			on a.group_id = ia.group_id and a.hos_id = ia.hos_id 
			and a.copy_code = ia.copy_code and a.inv_id = ia.inv_id 
			and a.cert_id = ia.cert_id -->
		left join mat_prod_cert mic 
			on mic.group_id = a.group_id and mic.hos_id = a.hos_id 
			and mic.cert_id = a.cert_id and mic.check_state = 2
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test="p_num != null and p_num ==1">
				and a.special_id in (${paraId})
			</if>
			<if test="p_num == null or p_num == 0">
				and a.special_id = #{special_id,jdbcType=NUMERIC}
			</if>
		group by a.special_id, a.group_id, a.hos_id, a.copy_code, a.special_id, a.inv_id, a.inv_no, 
			b.inv_code, b.inv_name, b.bid_code, b.inv_model, b.unit_code, c.unit_name, a.price, a.pack_code, 
			e.pack_name, a.num_exchange, a.pack_price, a.batch_no, a.sell_price, a.sale_price, a.allot_price, 
			to_char(a.inva_date, 'yyyy-MM-dd'), to_char(a.disinfect_date, 'yyyy-MM-dd'), 
			a.location_id, d.location_name, a.note, b.is_highvalue, b.is_batch, b.is_bar, b.is_per_bar, b.is_quality, 
			b.is_single_ven, b.is_disinfect, hfd.fac_name, a.cert_id, a.cert_code, 
			to_char(mic.start_date, 'yyyy-MM-dd'), to_char(mic.end_date, 'yyyy-MM-dd'), 
			to_char(a.fac_date, 'yyyy-MM-dd'), a.serial_no, mtd.mat_type_name 
		order by a.inv_id
	</select>
	
	<!-- 根据页面所选数据查询结果集用于生成专购品 -->
	<select id="queryAffiForAdd" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.out_id, hsd.sup_id, hsd.sup_no,b.dept_id, b.dept_no, 
			<!-- 前台页面如选择了入库仓库则优先按入库仓库生成专购品单据 -->
			case when d.store_id is null then b.store_id else d.store_id end store_id, 
			case when d.store_id is null then b.store_no else d.store_no end store_no,
			case when d.store_id is null then c.stock_emp else e.stock_emp end stocker,
			b.dept_emp, b.use_code, b.proj_id, b.brief, a.detail_id, a.inv_id, a.inv_no, 
			a.batch_no, a.batch_sn, a.bar_code, a.price, a.amount, a.amount_money, 
			nvl(a.sell_price, 0) sell_price, nvl(a.sell_money, 0) sell_money, 
			nvl(a.sale_price, 0) sale_price, nvl(a.sale_money, 0) sale_money, 
			nvl(a.allot_price, 0) allot_price, nvl(a.allot_money, 0) allot_money, 
			a.inva_date, a.disinfect_date, a.location_id, a.note ,micr.cert_id, 
			mic.cert_code,b.brief, maid.serial_no, maid.fac_date
		FROM mat_affi_out_detail a 
		LEFT JOIN mat_affi_out b 
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code AND a.out_id = b.out_id 
		LEFT JOIN mat_store c 
			ON b.group_id = c.group_id AND b.hos_id = c.hos_id 
			AND b.store_id = c.store_id 
		LEFT JOIN hos_store_dict d 
			ON d.group_id = #{group_id,jdbcType=INTEGER} 
			AND d.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND d.store_id = #{in_store_id,jdbcType=INTEGER} 
			AND d.is_stop = 0
		LEFT JOIN mat_store e 
			ON d.group_id = e.group_id AND d.hos_id = e.hos_id 
			AND d.store_id = e.store_id 
		LEFT JOIN (
			SELECT max(cert_id) as cert_id, inv_id
			FROM mat_prod_cert_inv
			WHERE group_id =#{group_id,jdbcType=INTEGER} 
				AND hos_id = #{hos_id,jdbcType=INTEGER} 
				AND copy_code =#{copy_code,jdbcType=VARCHAR} 
			group by inv_id
		) micr 
			ON micr.inv_id = a.inv_id
		LEFT JOIN mat_prod_cert mic 
			ON a.group_id = mic.group_id 
			AND a.hos_id = mic.hos_id 
			AND a.copy_code = mic.copy_code 
			AND micr.cert_id = mic.cert_id 
		left join mat_inv_sup mis 
			on a.group_id = mis.group_id and a.hos_id = mis.hos_id 
			and a.copy_code = mis.copy_code and a.inv_id = mis.inv_id 
			and mis.is_default = 1
		left join hos_sup_dict hsd 
			on a.group_id = hsd.group_id and a.hos_id = hsd.hos_id 
			<if test="by_inv_sup != null and by_inv_sup == 1">
				and mis.sup_id = hsd.sup_id and hsd.is_stop = 0
			</if> 
			<if test="by_inv_sup == null or by_inv_sup == '' or by_inv_sup == 0">
				and a.sup_id = hsd.sup_id and a.sup_no = hsd.sup_no 
			</if>
		LEFT JOIN (
			SELECT ai.store_id, aid.inv_id, aid.batch_no, aid.batch_sn, aid.bar_code, 
				max(aid.fac_date) fac_date, max(aid.serial_no) serial_no 
			FROM mat_affi_in ai 
			LEFT JOIN mat_affi_in_detail aid 
				ON ai.group_id = aid.group_id
				AND ai.hos_id = aid.hos_id 
				AND ai.copy_code = aid.copy_code 
				AND ai.in_id = aid.in_id 
			WHERE ai.group_id = #{group_id,jdbcType=INTEGER}
				AND ai.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ai.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ai.bus_type_code = 27
			GROUP BY ai.store_id, aid.inv_id, aid.batch_no, aid.batch_sn, aid.bar_code
		) maid
			ON b.store_id = maid.store_id 
			and a.inv_id = maid.inv_id 
			and a.batch_no = maid.batch_no 
			and a.batch_sn = maid.batch_sn 
			and a.bar_code = maid.bar_code 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			AND a.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND a.detail_id in (${detail_ids}) 
	</select>
	
	<!-- 更新发票号 -->
	<update id="updateMatSpecialInvoice" parameterType="java.util.Map" >
		UPDATE MAT_SPECIAL_MAIN
		SET bill_date = #{bill_date,jdbcType=DATE},
			bill_no = #{bill_no,jdbcType=VARCHAR}
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND special_id = #{special_id,jdbcType=INTEGER}
	</update>
	
	
	<!-- 批量添加选择材料 -->
	<select id="queryMatSpecailInvBatch" parameterType="java.util.Map" resultMap="matInDetailCommon"  >
		select mid.group_id,mid.hos_id,mid.copy_code,mid.inv_id,mid.inv_no,mid.inv_code,mid.inv_name,
       		mid.inv_model,mid.unit_code,hu.unit_name,mid.plan_price as price,hfd.fac_code,hfd.fac_name,
       		g.pack_code,g.pack_name,mid.is_per_bar,mic.cert_code,mic.cert_id,mid.bid_code
		from mat_inv_dict mid
		left join hos_unit hu on mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code=hu.unit_code
		left join mat_inv_unit_map mim on mid.group_id =mim.group_id and mid.hos_id = mim.hos_id and mid.copy_code = mim.copy_code
		      and mid.inv_id =mim.inv_id
		left join hos_package g on mim.group_id = g.group_id and mim.hos_id = g.hos_id and mim.pack_code = g.pack_code
		left join mat_store_inv msi on mid.group_id=msi.group_id and mid.hos_id=msi.hos_id and mid.copy_code=msi.copy_code
		     and mid.inv_id=msi.inv_id 
<!-- 		     and msi.is_apply=1 -->
		left join mat_inv_sup mis on mid.group_id=mis.group_id and mid.hos_id=msi.hos_id and mid.copy_code=mis.copy_code
		     and mid.inv_id=mis.inv_id and mis.is_default=1
		left join hos_fac_dict hfd on mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no=hfd.fac_no
		left join mat_location_inv mli on mid.group_id = mli.group_id and mid.hos_id = mli.hos_id and mid.copy_code = mli.copy_code
		      and mid.inv_id = mli.inv_id
		left join mat_location_dict mld on mli.group_id = mld.group_id and mli.hos_id = mld.hos_id and mli.copy_code = mld.copy_code
		      and mli.location_id = mld.location_id and mld.is_stop = 0
		left join (
			select group_id,hos_id,copy_code,inv_id,max(cert_id) cert_id
			from mat_prod_cert_inv
			<where>
				<if test="group_id != null and group_id !='' "> 
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id !='' "> 
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code !='' "> 
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
			</where>
			group by group_id,hos_id,copy_code,inv_id
		) micr on mid.group_id=micr.group_id and mid.hos_id=micr.hos_id and mid.copy_code=micr.copy_code
		     and mid.inv_id=micr.inv_id 
		left join mat_prod_cert mic  on micr.group_id = mic.group_id and micr.hos_id = mic.hos_id and micr.copy_code = mic.copy_code
		     and micr.cert_id = mic.cert_id and mic.check_state = 2
		<where>
			<if test="group_id != null and group_id !='' "> 
				and mid.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' "> 
				and mid.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' "> 
				and mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id !='' "> 
				and msi.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id !='' "> 
				and mis.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
						mid.inv_code like '%${inv_code}%'
						or upper(mid.inv_name) like '%${inv_code}%'
				     or upper(mid.spell_code) like '%${inv_code}%'
				     or upper(mid.wbx_code) like '%${inv_code}%'
				     or upper(mid.bid_code) like '%${inv_code}%'
				     or lower(mid.spell_code) like '%${inv_code}%'
				     or lower(mid.wbx_code) like '%${inv_code}%'
				     or lower(mid.inv_name) like '%${inv_code}%'
				     or lower(mid.bid_code) like '%${inv_code}%')
			</if>
			and mid.use_state = 1
		</where>
		order by mid.inv_code
	</select>
	
	<!-- 批量选择材料生成入库单 --> 
	<select id="queryMatSpecailInvDetail" parameterType="java.util.List" resultType="java.util.Map">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.store_id != null or item.store_id != ''">
						#{item.store_id,jdbcType=INTEGER} as store_id,
					</if>
					<if test="item.sup_id != null or item.sup_id != ''">
						#{item.sup_id,jdbcType=INTEGER} as sup_id,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		)
		select lt.group_id,lt.hos_id,lt.copy_code,lt.inv_id,lt.inv_no,
      		mid.inv_code,mid.inv_name,mid.inv_model,mid.unit_code,hu.unit_name,
      		mid.plan_price as price,hfd.fac_code,hfd.fac_name,mid.sell_price,
          	g.pack_code,g.pack_name pack_name, f.map_amount num_exchange,
          	mic.cert_code,mic.cert_id,mld.location_id,mld.location_name,
          	mid.is_batch,mid.is_bar,mid.is_per_bar,mid.is_quality,mid.is_disinfect,mid.is_highvalue
		from list_temp lt
		left join mat_inv_dict mid on lt.group_id=mid.group_id and lt.hos_id=mid.hos_id and lt.copy_code=mid.copy_code
			and lt.inv_id=mid.inv_id and lt.inv_no=mid.inv_no
		left join hos_unit hu on mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code=hu.unit_code
		left join mat_inv_unit_map mim on mid.group_id =mim.group_id and mid.hos_id = mim.hos_id and mid.copy_code = mim.copy_code
		      and mid.inv_id =mim.inv_id
		left join hos_package g on mim.group_id = g.group_id and mim.hos_id = g.hos_id and mim.pack_code = g.pack_code
		left join mat_inv_unit_map f on lt.group_id = f.group_id and lt.hos_id = f.hos_id and lt.copy_code = f.copy_code 
			  and lt.inv_id = f.inv_id
		left join mat_store_inv msi on mid.group_id=msi.group_id and mid.hos_id=msi.hos_id and mid.copy_code=msi.copy_code
		     and mid.inv_id=msi.inv_id and lt.store_id=msi.store_id and msi.is_apply=1
		left join mat_inv_sup mis on mid.group_id=mis.group_id and mid.hos_id=msi.hos_id and mid.copy_code=mis.copy_code
		     and mid.inv_id=mis.inv_id and lt.sup_id=mis.sup_id and mis.is_default=1
		left join hos_fac_dict hfd on mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no = hfd.fac_no
		left join mat_location_inv mli on mid.group_id = mli.group_id and mid.hos_id = mli.hos_id and mid.copy_code = mli.copy_code
		      and mid.inv_id = mli.inv_id
		left join mat_location_dict mld on mli.group_id = mld.group_id and mli.hos_id = mld.hos_id and mli.copy_code = mld.copy_code
		      and mli.location_id = mld.location_id and mld.is_stop = 0
		left join (
			select a.group_id,a.hos_id,a.copy_code,a.inv_id,max(cert_id) cert_id
			from mat_prod_cert_inv a
			left join list_temp b on a.group_id=b.hos_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
			group by a.group_id,a.hos_id,a.copy_code,a.inv_id
		) micr on mid.group_id=micr.group_id and mid.hos_id=micr.hos_id and mid.copy_code=micr.copy_code
		     and mid.inv_id=micr.inv_id 
		left join mat_prod_cert mic  on micr.group_id = mic.group_id and micr.hos_id = mic.hos_id and micr.copy_code = mic.copy_code
		     and micr.cert_id = mic.cert_id and mic.check_state = 2
		where mid.use_state = 1
		order by mid.inv_code 
	</select>
	
	<!-- 明细查询 -->
	<select id="queryMatSpecialDetail" parameterType="java.util.Map" resultMap="matSpecialDetailMapping" >
		with d_tmp as (
			SELECT 
				msm.group_id, msm.hos_id, msm.copy_code, msm.special_id, to_char(msm.special_no) special_no, msr.in_id ,to_char(msr.in_no) in_no , msr.out_id, 
				to_char(msr.out_no) out_no, msm.year ,msm.month ,msm.brief, msm.store_id, msm.store_no, hsc.store_name,	msm. bus_type_code,
				msm.sup_id, msm.sup_no, hsd.sup_name, msm.dept_id, msm.dept_no, hdd.dept_code,hdd.dept_name, msm.stocker, 
				he.emp_name as stocker_name,mpd.amount_money, msm.make_date, msm.maker, su.user_name as maker_name, msm.checker,
				syu.user_name as checker_name ,msm.check_date,msm.confirm_date, msm.confirmer , 
				sysu.user_name as confirmer_name, msm.state, msm.examiner , hemp.emp_name as examiner_name ,
        case when msm.state = 0 then '验收'
			when msm.state = 1 then '未审核'
        when msm.state = 2 then '审核'
         when msm.state = 3 then '入库确认'
			else '财务记账' end state_name,
				mdd.field_desc come_from, msm.bill_no,
				mid.inv_id,mid.inv_no,mid.inv_code,mid.inv_name,mid.inv_model,hu.unit_name,mpd.price,mpd.amount,
				mpd.bar_code,mpd.batch_no,hfd.fac_name,mid.mat_type_id,mtd.mat_type_name,mpd.cert_code,mpd.inva_date,mpd.fac_date
			FROM mat_special_detail  mpd
		    left join mat_inv_dict mid on mpd.group_id=mid.group_id and mpd.hos_id=mid.hos_id and mpd.copy_code=mid.copy_code
		        and mpd.inv_id=mid.inv_id and mpd.inv_no=mid.inv_no
		     left join mat_type_dict mtd on mtd.group_id = mid.group_id
				and mtd.hos_id = mid.hos_id
				and mtd.copy_code = mid.copy_code
				and mtd.mat_type_id = mid.mat_type_id
				and mtd.mat_type_no = mid.mat_type_no 
		    left join hos_unit hu on mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code=hu.unit_code and hu.is_stop=0
		    left join hos_fac_dict hfd on mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no=hfd.fac_no
			left join MAT_SPECIAL_MAIN  msm 
				on mpd.group_id=msm.group_id 
				and mpd.hos_id=msm.hos_id
           		and mpd.copy_code=msm.copy_code 
           		and mpd.special_id=msm.special_id
           	LEFT JOIN hos_emp hemp
				on msm.group_id = hemp.group_id
				and msm.hos_id = hemp.hos_id
				and msm.examiner = hemp.emp_id
			LEFT JOIN MAT_SPECIAL_RELA msr
				ON
					msm.group_id = msr.group_id
					and msm.hos_id = msr.hos_id
					and msm.copy_code = msr.copy_code
					and msm.special_id = msr.special_id
					and msm.special_no = msr.special_no
			LEFT JOIN HOS_DEPT_DICT hdd ON  msm.group_id = hdd.group_id
					and msm.hos_id = hdd.hos_id
					and msm.dept_id = hdd.dept_id
					and msm.dept_no = hdd.dept_no
					and hdd.is_stop = 0
			LEFT JOIN hos_store_dict hsc
				on msm.group_id = hsc.group_id
				and msm.hos_id = hsc.hos_id
				and msm.store_no = hsc.store_no
			LEFT JOIN sys_user su
				on msm.group_id = su.group_id
				and msm.hos_id = su.hos_id
				and msm.maker = su.user_id
			LEFT JOIN sys_user syu
				on msm.group_id = syu.group_id
				and msm.hos_id = syu.hos_id
				and msm.checker = syu.user_id
			LEFT JOIN sys_user sysu
				on msm.group_id = sysu.group_id
				and msm.hos_id = sysu.hos_id
				and msm.confirmer = sysu.user_id
			LEFT JOIN hos_sup_dict hsd
				on msm.group_id = hsd.group_id
				and msm.hos_id = hsd.hos_id
				and msm.sup_id = hsd.sup_id
				and msm.sup_no = hsd.sup_no
			LEFT JOIN hos_emp he
				on msm.group_id = he.group_id
				and msm.hos_id = he.hos_id
				and msm.stocker = he.emp_id
			left join mat_data_dict mdd on mdd.data_code='04013'
				and mdd.field_value = msm.come_from
			<where>
				msm.group_id = #{group_id,jdbcType=INTEGER}
				AND msm.hos_id = #{hos_id,jdbcType=INTEGER}
				AND msm.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="begin_in_date != null and begin_in_date != '' and end_in_date != null and end_in_date != '' ">
					AND msm.make_date between #{begin_in_date,jdbcType=DATE} and  #{end_in_date,jdbcType=DATE}
				</if>
				<if test="begin_confirm_date != null and begin_confirm_date != '' and end_confirm_date != null and end_confirm_date != '' ">
					AND msm.confirm_date between #{begin_confirm_date,jdbcType=DATE} and  #{end_confirm_date,jdbcType=DATE}
				</if>
				<if test="state != null and state != ''">
					AND msm.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					AND msm.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="sup_id != null and sup_id != ''">
					AND msm.sup_id = #{sup_id,jdbcType=INTEGER}
				</if>
				<if test="come_from != null and come_from != ''">
					AND msm.come_from = #{come_from,jdbcType=INTEGER}
				</if>
				<if test="special_no != null and special_no != ''">
					AND msm.special_no like '%${special_no}%'
				</if>
				<if test="dept_id != null and dept_id != ''">
					AND msm.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="bill_no != null and bill_no != ''">
					AND msm.bill_no like '%${bill_no}%'
				</if>
				<if test="not_bill != null and not_bill == 1">
					AND nvl(msm.bill_no, '空') = '空'
				</if>
				<if test="brief != null and brief != ''">
					AND  msm.brief like '${brief}%'
				</if>
				<if test="fac_id != null and fac_id != ''">
					AND  mid.fac_id = #{fac_id}
				</if>
				<if test="mat_type_code != null and mat_type_code != ''">
					AND mtd.mat_type_code like '${mat_type_code}%'
				</if>
				<if test="inv_code != null and inv_code != ''">
					AND (
							 mid.inv_code like '%${inv_code}%'
							or upper(mid.inv_name) like '%${inv_code}%'
							or upper(mid.inv_model) like '%${inv_code}%'
							or upper(mid.spell_code) like '%${inv_code}%'
							or upper(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.spell_code) like '%${inv_code}%'
							or lower(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.inv_name) like '%${inv_code}%'
						
					)						
				</if>
				<if test="bus_type == 47 and bus_type == '47'">
				    and mpd.amount_money  &gt; 0
				</if>
			    <if test="bus_type == 50 and bus_type == '50'">
				    and mpd.amount_money  &lt; 0
				</if>
			</where> 
		),s_tmp as (
			select null as group_id, null as hos_id, null as copy_code, null as special_id, '合计' as special_no
		        , null as in_id, null as in_no, null as out_id, null as out_no, null as year
		        , null as month, null as brief, null as store_id, null as store_no, null as store_name
		        , null as bus_type_code, null as sup_id, null as sup_no, null as sup_name, null as dept_id
		        , null as dept_no, null as dept_code, null as dept_name, null as stocker, null as stocker_name
		        , sum(amount_money) as amount_money, null as make_date, null as maker, null as maker_name, null as checker
		        , null as checker_name, null as check_date, null as confirm_date, null as confirmer, null as confirmer_name
		        , null as state, null as state_name, null as come_from, null as bill_no, null as inv_id, null as inv_no
		        , null as inv_code, null as inv_name, null as inv_model, null as unit_name, null as price
		        , sum(amount) as amount, null as bar_code, null as batch_no, null as fac_name,null as mat_type_id,null as mat_type_name,null as cert_code,
		       	null as examiner , null  as examiner_name ,null as inva_date,null as fac_date
        	from d_tmp
		)
		
		select group_id,  hos_id,  copy_code,  special_id, special_no
	        ,  in_id,  in_no,  out_id,  out_no,  year
	        ,  month,  brief,  store_id,  store_no,  store_name
	        ,  bus_type_code,  sup_id,  sup_no,  sup_name,  dept_id
	        ,  dept_no,  dept_code,  dept_name,  stocker,  stocker_name
	        ,  amount_money,  make_date,  maker,  maker_name,  checker
	        ,  checker_name,  check_date,  confirm_date,  confirmer,  confirmer_name
	        ,  state, state_name, come_from,  bill_no,  inv_id,  inv_no
	        ,  inv_code,  inv_name,  inv_model,  unit_name,  price
	        ,  amount,  bar_code,  batch_no,  fac_name,mat_type_id,mat_type_name,cert_code ,examiner ,examiner_name,inva_date,fac_date
        from d_tmp
        union all
        select  group_id,  hos_id,  copy_code,  special_id, special_no
	        ,  in_id,  in_no,  out_id,  out_no,  year
	        ,  month,  brief,  store_id,  store_no,  store_name
	        ,  bus_type_code,  sup_id,  sup_no,  sup_name,  dept_id
	        ,  dept_no,  dept_code,  dept_name,  stocker,  stocker_name
	        ,  amount_money,  make_date,  maker,  maker_name,  checker
	        ,  checker_name,  check_date,  confirm_date,  confirmer,  confirmer_name
	        ,  state, state_name, come_from,  bill_no,  inv_id,  inv_no
	        ,  inv_code,  inv_name,  inv_model,  unit_name,  price
	        ,  amount,  bar_code,  batch_no,  fac_name,mat_type_id,mat_type_name,cert_code , examiner ,examiner_name,inva_date,fac_date
        from s_tmp
        order by special_id desc,special_no,inv_code
	</select>
	
	<!-- 出库单主表批量添加 -->
	<insert id="addMatOutMainBySpecialBatch" parameterType="java.util.Map">
		INSERT INTO MAT_OUT_MAIN (
			group_id, hos_id, copy_code, out_id, out_no, year, month, bus_type_code, store_id, store_no, 
			out_date, dept_id, dept_no, dept_emp, use_code, proj_id, brief, maker, state 
		) 
		<foreach collection="list" item="item" index="index" separator="union all" >		
			SELECT
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=VARCHAR},
				#{item.year,jdbcType=VARCHAR},
				#{item.month,jdbcType=VARCHAR},
				#{item.bus_type_code,jdbcType=VARCHAR},
				#{item.store_id,jdbcType=INTEGER},
				#{item.store_no,jdbcType=INTEGER},
				#{item.out_date,jdbcType=DATE},
				#{item.dept_id,jdbcType=INTEGER},
				#{item.dept_no,jdbcType=INTEGER},
				#{item.dept_emp,jdbcType=INTEGER},
				#{item.use_code,jdbcType=VARCHAR},
				#{item.proj_id,jdbcType=INTEGER},
				#{item.brief,jdbcType=VARCHAR},
				#{item.maker,jdbcType=INTEGER},
				#{item.state,jdbcType=INTEGER}
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 出库单明细表添加 -->
	<insert id="addMatOutDetailBySpecialBatch" parameterType="java.util.List">
		INSERT INTO MAT_OUT_DETAIL (
			group_id, hos_id, copy_code, out_id, out_no, out_detail_id, inv_id, inv_no, batch_no, batch_sn, bar_code, location_id, 
			price, sale_price, sell_price, amount, amount_money, sale_money, sell_money, inva_date, disinfect_date, note
		) 
		<foreach collection="list" item="item" index="index" separator="union all" >		
			SELECT
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=VARCHAR},
				#{item.out_detail_id,jdbcType=INTEGER},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.batch_no,jdbcType=VARCHAR},
				#{item.batch_sn,jdbcType=INTEGER},
				#{item.bar_code,jdbcType=VARCHAR},
				#{item.location_id,jdbcType=INTEGER},
				#{item.price,jdbcType=NUMERIC},
				#{item.sale_price,jdbcType=NUMERIC},
				#{item.sell_price,jdbcType=NUMERIC},
				#{item.amount,jdbcType=NUMERIC},
				#{item.amount_money,jdbcType=NUMERIC},
				#{item.sale_money,jdbcType=NUMERIC},
				#{item.sell_money,jdbcType=NUMERIC},
				#{item.inva_date,jdbcType=DATE},
				#{item.disinfect_date,jdbcType=DATE},
				#{item.note,jdbcType=VARCHAR}
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 代銷使用生產手動加对应关系 -->
	<insert id="addAffiRelaBatch" parameterType="java.util.List" >
		INSERT INTO mat_special_affi_out_rela (
			group_id, hos_id, copy_code, affi_out_id, affi_detail_id, special_id, sp_detail_id, special_amount, out_amount
		) 
		<foreach collection="list" item="item" index="index" separator="union all" >		
			SELECT 
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.affi_out_id,jdbcType=INTEGER},
				#{item.affi_detail_id,jdbcType=INTEGER},
				#{item.special_id,jdbcType=INTEGER},
				#{item.sp_detail_id,jdbcType=INTEGER},
				#{item.special_amount,jdbcType=NUMERIC},
				#{item.out_amount,jdbcType=NUMERIC}
			FROM dual 
		</foreach>
	</insert>
	
	<!-- 根据主键Ids获取主表List -->
	<select id="queryMatSpecialMainByIds" parameterType="java.util.Map"
		resultMap="matInMain">
		select 
		 group_id ,hos_id ,copy_code ,special_id ,special_no ,year,month ,bus_type_code ,
		 sup_no,sup_id ,store_id ,store_no ,dept_id ,dept_no,dept_emp,brief  ,
		 stocker,stock_type_code ,maker ,make_date,checker ,check_date,confirmer ,confirm_date,state,
		 protocol_code ,proj_id , come_from ,bill_date ,bill_no,patient_name,hospital_no ,beds_no ,patient_sex ,
		 patient_age ,physician, execution_dept ,advice_class ,examiner 
		 from mat_special_main
		WHERE group_id =
		#{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND special_id in (${in_ids})
	</select>

	<!-- 根据主键Ids获取明细表List -->
	<select id="queryMatSpecialDetailByIds" parameterType="java.util.Map"
		resultMap="matInDetailCommon">
		select 
		a.group_id, a.hos_id, a.copy_code, a.special_id, a.special_no, a.detail_id, a.inv_id, a.inv_no, a.batch_sn, a.batch_no, a.price
		, a.amount, a.amount_money , a.sale_price, a.sale_money, a.sell_price, a.sell_money, a.allot_price, a.allot_money
		, a.pack_code, a.num_exchange, a.pack_price, a.num, a.sn, a.bar_code, a.inva_date, a.disinfect_date
		, a.location_id, a.note, a.cert_id, a.cert_code, a.fac_date,a.serial_no, b.is_per_bar, b.is_highvalue
		from mat_special_detail a
		LEFT JOIN MAT_INV_DICT b
		ON a.group_id = b.group_id AND a.hos_id = b.hos_id
		AND a.copy_code = b.copy_code AND a.inv_id = b.inv_id
		AND b.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.special_id in (${in_ids})
	</select>
	
	
	<!-- 根据主键Ids获取明细表List -->
	<select id="queryMatSpecailInvDetailByIds" parameterType="java.util.Map"
		resultMap="matSpecailInvDetail">
		select  
	      mid.INV_CODE,
	      mid.INV_NAME,
	      a.BATCH_NO,
	      b.BILL_NO,
	      a.PRICE,
	      a.AMOUNT,
	      a.INVA_DATE,
	      a.SPECIAL_ID
		 from mat_special_detail a
		left join MAT_SPECIAL_MAIN b on 
		a.group_id=b.group_id
		and a.hos_id=b.hos_id
		and a.copy_code=b.copy_code
		and a.SPECIAL_ID=b.SPECIAL_ID
		and a.SPECIAL_NO=b.SPECIAL_NO
		left join mat_inv_dict mid on a.group_id = mid.group_id
		and a.hos_id = mid.hos_id
		and a.copy_code = mid.copy_code
		and a.inv_id = mid.inv_id
		and a.inv_no = mid.inv_no 
		left join mat_type mtd on mtd.group_id = mid.group_id
		and mtd.hos_id = mid.hos_id
		and mtd.copy_code = mid.copy_code
		and mtd.mat_type_id = mid.mat_type_id
	WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		and a.special_id in (${in_ids})
		and mtd.mat_type_code in (2012,2004)   
	</select>
	
</mapper>

