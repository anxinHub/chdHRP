<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.info.basic.MatInvImpowerRelaMapper">
	
	<resultMap id="matInvImpowerRela" type="com.chd.hrp.mat.entity.MatInvImpowerRela">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="impower_id" column="impower_id"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_name" column="fac_name"/>
	<result property="impower_code" column="impower_code"/>
	</resultMap>
	
	<resultMap id="matInvImpowerRelaMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="impower_id" column="impower_id"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_name" column="fac_name"/>
	<result property="impower_code" column="impower_code"/>
	</resultMap>
	
	<resultMap id="invMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="inv_id" column="inv_id"/>
	</resultMap>
	
	<select id="queryMaxImpowerId" parameterType="java.util.Map" resultMap="matInvImpowerRelaMap">
		select max(impower_id) impower_id
		from mat_inv_impower_rela 
		WHERE
		group_id =#{group_id,jdbcType=INTEGER}
		and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
	</select>
	
	
	<insert id="addMatInvImpowerRela" useGeneratedKeys="true" >
	
		INSERT INTO MAT_INV_IMPOWER_RELA (
		group_id
		,
		hos_id
		,
		copy_code
		,
		impower_id
		,
		inv_id
		,
		impower_code
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{impower_id,jdbcType=INTEGER}
		,
		#{inv_id,jdbcType=INTEGER}
		,
		#{impower_code,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatchMatInvImpowerRela" parameterType="java.util.List" >
	
		INSERT INTO MAT_INV_IMPOWER_RELA (
		group_id
		,
		hos_id
		,
		copy_code
		,
		impower_id
		,
		inv_id
		,
		impower_code
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.impower_id,jdbcType=INTEGER}
			,
			#{item.inv_id,jdbcType=INTEGER}
			,
			#{item.impower_code,jdbcType=VARCHAR}
				from dual
		</foreach>
	</insert>
	
	<update id="updateMatInvCertRela" parameterType="java.util.Map">
	
		UPDATE mat_inv_cert_rela SET
		cert_code = #{cert_code,jdbcType=VARCHAR}
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
				 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
				 and 
		cert_id =#{cert_id,jdbcType=INTEGER}
				 and 
		inv_id =#{inv_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMatInvCertRela" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE mat_inv_cert_rela SET
			cert_code = #{cert_code,jdbcType=VARCHAR}
			WHERE 
			group_id = #{group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{copy_code,jdbcType=VARCHAR}
			 and 
			cert_id = #{cert_id,jdbcType=INTEGER}
			 and 
			inv_id = #{inv_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatInvCertRela" parameterType="java.util.Map">
		DELETE FROM mat_inv_cert_rela 
		WHERE group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test=" cert_id != null and cert_id !=''">  
			and cert_id = #{cert_id,jdbcType=INTEGER}
			</if>
			<if test=" inv_id != null and inv_id !=''">
			and inv_id = #{inv_id,jdbcType=INTEGER} 
			</if>   
	</delete>
	
	<delete id="deleteBatchMatInvImpowerRela" parameterType="java.util.List">
		DELETE FROM mat_inv_impower_rela 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and impower_id = #{item.impower_id,jdbcType=INTEGER}
				<if test=" item.inv_id != null and item.inv_id != '' ">
					and inv_id = #{item.inv_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
	</delete>
	
	<select id="queryMatInvCertRela" parameterType="java.util.Map" resultMap="matInvImpowerRela" >
	
		SELECT 
			mi.group_id,
			mi.hos_id,
			mi.copy_code,
			micr.cert_id,
			mi.inv_id,
			mi.inv_code,
			mi.inv_name,
			mi.inv_model,
			mi.fac_id,
			hfd.fac_name,
			micr.cert_code	
		FROM  MAT_INV_CERT_RELA micr 
		left join  MAT_INV_DICT  mi
			ON
				micr.group_id = mi.group_id and 
				micr.hos_id = mi.hos_id		and
				micr.copy_code = mi.copy_code	and
				micr.inv_id = mi.inv_id	
		left join HOS_FAC_DICT hfd 
			ON
				mi.group_id = hfd.group_id  and
				mi.hos_id = hfd.hos_id  and
				mi.fac_id = hfd.fac_id  and
				mi.fac_no = hfd.fac_no
		<where> 
			<if test="group_id != null and group_id != ''">
				AND micr.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND micr.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND micr.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND mi.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="mat_type_id != null and mat_type_id != ''">
				AND mi.mat_type_id = #{mat_type_id,jdbcType=INTEGER}
			</if>
			<if test="fac_id != null and fac_id != ''">
				AND mi.fac_id = #{fac_id,jdbcType=INTEGER}
			</if>
			<if test="cert_id != null and cert_id != ''">
				AND micr.cert_id = #{cert_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND ( mi.inv_code like '${inv_code}%' or
					mi.inv_name like '%${inv_code}%' or
					mi.spell_code like '%${inv_code}%' or
					mi.wbx_code like '%${inv_code}%'
					)
			</if>
			<if test="inv_model != null and inv_model != ''">
				AND mi.inv_model like '%${inv_model}%'
			</if>
			and mi.use_state = 1
		</where>   
		order by mi.inv_code asc
	</select>
	
	<select id="queryMatInvCertRelaByCode" resultType="com.chd.hrp.mat.entity.MatInvImpowerRela" parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			cert_id,
			inv_id
		FROM mat_inv_cert_rela 
		<where>
			<if test="group_id !=null and group_id !='' ">
				group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="cert_id !=null and cert_id !='' ">
				and cert_id = #{cert_id,jdbcType=INTEGER}
			</if>
			<if test="inv_id !=null and inv_id !='' ">
				and inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<select id="queryMatInvCertRelaByUniqueness" resultType="com.chd.hrp.mat.entity.MatInvImpowerRela" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		cert_id,
		inv_id
		FROM MAT_INV_CERT_RELA 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="cert_id != null and cert_id != ''">
		AND cert_id = #{cert_id,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 查询所有的 在用材料信息 -->
	<select id="queryInvId" parameterType="java.util.Map" resultMap="invMap" >
	
		SELECT 
		group_id, hos_id, copy_code, inv_id 
		from mat_inv
		<where> 
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			and use_state = 1
		</where>   
		order by inv_code asc
	</select>
	
	<select id="queryIsExist" parameterType="java.util.Map" resultType="java.lang.Integer" >
	
		SELECT count(inv_id) from MAT_INV_CERT_RELA
		<where> 
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="cert_id != null and cert_id != ''">
			AND cert_id = #{cert_id,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<select id="queryMatInvImpowerDetail" parameterType="java.util.Map" resultType="java.util.TreeMap">
		select mipr.group_id, mipr.hos_id, mipr.copy_code, mid.inv_id, mid.inv_no
      , mid.inv_code, mid.inv_name, mid.inv_model, hu.unit_code, hu.unit_name
      , hfd.fac_id, hfd.fac_name, hsd.sup_name, mipr.impower_id, mid.inv_id as invid
      , mid.bid_code, mid.plan_price
    from MAT_INV_IMPOWER_RELA mipr
    left join mat_inv_dict mid on mipr.group_id = mid.group_id
    and mipr.hos_id = mid.hos_id
    and mipr.copy_code = mid.copy_code
    and mipr.inv_id = mid.inv_id
    and mid.is_stop = 0 
    left join hos_unit hu on hu.group_id = mid.group_id
    and hu.hos_id = mid.hos_id
    and hu.unit_code = mid.unit_code
    and hu.is_stop = 0 
    left join hos_fac_dict hfd on hfd.group_id = mid.group_id
    and hfd.hos_id = mid.hos_id
    and hfd.fac_id = mid.fac_id
    and hfd.fac_no = mid.fac_no 
    left join mat_inv_sup mis on mis.group_id = mid.group_id
    and mis.hos_id = mid.hos_id
    and mis.copy_code = mid.copy_code
    and mis.inv_id = mid.inv_id
    and mis.is_default = 1 
      left join hos_sup_dict hsd on hsd.group_id = mid.group_id
    and hsd.hos_id = mid.hos_id
    and hsd.sup_id = mis.sup_id
    and hsd.is_stop = 0 
	    <where>
	    	<if test="group_id != null and group_id != ''">
	    		AND mipr.group_id = #{group_id,jdbcType=INTEGER}
	    	</if>
	    	<if test="hos_id != null and hos_id != ''">
	    		AND mipr.hos_id = #{hos_id,jdbcType=INTEGER}
	    	</if>
	    	<if test="copy_code != null and copy_code != ''">
	    		AND mipr.copy_code = #{copy_code,jdbcType=VARCHAR}
	    	</if>
	    	<if test="impower_id != null and impower_id != ''">
	    		AND mipr.impower_id = #{impower_id,jdbcType=INTEGER}
	    	</if>
	    </where>
	</select>
	
	<!-- 判断添加的材料是否在该对应关系中 -->
	<select id="existsMatInvInCert" resultType="String" parameterType="java.util.Map" >
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
			SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
			FROM DUAL
			CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}', ',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
			ON b.group_id = #{group_id,jdbcType=INTEGER} 
			AND b.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND b.copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND b.is_stop = 0
			AND a.inv_id = b.inv_id
		WHERE  EXISTS (
			SELECT 1 FROM mat_inv_cert_rela 
			WHERE group_id = #{group_id,jdbcType=INTEGER} 
				AND hos_id = #{hos_id,jdbcType=INTEGER} 
				AND copy_code = #{copy_code,jdbcType=VARCHAR} 
				AND cert_id = #{cert_id,jdbcType=INTEGER} 
				AND inv_id = a.inv_id
			)
			<![CDATA[AND rownum <= 50]]>
	</select>
	
	<!-- 2017-03-24 根据材料 删除材料证件对应关系 -->
	<delete id="deleteBatchMatInvCertRelaByInv" parameterType="java.util.List">
		DELETE FROM mat_inv_cert_rela 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
			</foreach>
		</where>
	</delete>
	
<!-- 	供应商录入 -->
	<insert id="addBatchMatInvCertSupRela" parameterType="java.util.List" >
	
		INSERT INTO MAT_INV_CERT_RELA (
		group_id
		,
		hos_id
		,
		copy_code
		,
		cert_id
		,
		inv_id
		,
		cert_code
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.sup_cert_id,jdbcType=INTEGER}
			,
			#{item.inv_id,jdbcType=INTEGER}
			,
			#{item.sup_cert_code,jdbcType=VARCHAR}
				from dual
		</foreach>
	</insert>
	
		<delete id="deleteMatInvCertSupRela" parameterType="java.util.Map">
		DELETE FROM mat_inv_cert_rela 
		WHERE group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test=" sup_cert_id != null and sup_cert_id !=''">  
			and cert_id = #{sup_cert_id,jdbcType=INTEGER}
			</if>
			<if test=" inv_id != null and inv_id !=''">
			and inv_id = #{inv_id,jdbcType=INTEGER} 
			</if>   
	</delete>
	
	<delete id="deleteBatchMatInvCertSupRela" parameterType="java.util.List">
		DELETE FROM mat_inv_cert_rela 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and cert_id = #{item.sup_cert_id,jdbcType=INTEGER}
				<if test=" item.inv_id != null and item.inv_id != '' ">
					and inv_id = #{item.inv_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
	</delete>
	
	<select id="queryMatInvCertSupDetail" parameterType="java.util.Map" resultType="java.util.TreeMap">
		select 
			micr.group_id ,
			micr.hos_id,
			micr.copy_code,
			mid.inv_id,
			mid.inv_no,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			hu.unit_code,
			hu.unit_name,
			hfd.fac_id,
			hfd.fac_name,
			hsd.sup_name,
			micr.cert_id,
			mid.inv_id as invid
			,mid.bid_code,mid.plan_price
		from MAT_INV_CERT_RELA micr
		left join mat_inv_dict mid on  micr.group_id = mid.group_id
			and micr.hos_id = mid.hos_id
			and micr.copy_code = mid.copy_code
			and micr.inv_id = mid.inv_id
			and mid.is_stop=0
		left join hos_unit hu on hu.group_id = mid.group_id
			and hu.hos_id = mid.hos_id
			and hu.unit_code = mid.unit_code
			and hu.is_stop = 0
		left join hos_fac_dict hfd on hfd.group_id = mid.group_id
			and hfd.hos_id = mid.hos_id
			and hfd.fac_id = mid.fac_id
	        and hfd.fac_no = mid.fac_no
		left join mat_inv_sup mis 
      	   on mis.group_id = mid.group_id
           and mis.hos_id = mid.hos_id
           and mis.copy_code = mid.copy_code
           and mis.inv_id = mid.inv_id
           and mis.is_default = 1
		left join hos_sup_dict hsd 
			on hsd.group_id = mid.group_id
			and hsd.hos_id = mid.hos_id
			and hsd.sup_id = mis.sup_id
			and hsd.is_stop = 0
	    <where>
	    	<if test="group_id != null and group_id != ''">
	    		AND micr.group_id = #{group_id,jdbcType=INTEGER}
	    	</if>
	    	<if test="hos_id != null and hos_id != ''">
	    		AND micr.hos_id = #{hos_id,jdbcType=INTEGER}
	    	</if>
	    	<if test="copy_code != null and copy_code != ''">
	    		AND micr.copy_code = #{copy_code,jdbcType=VARCHAR}
	    	</if>
	    	<if test="sup_cert_id != null and sup_cert_id != ''">
	    		AND micr.cert_id = #{sup_cert_id,jdbcType=INTEGER}
	    	</if>
	    </where>
	</select>
	
</mapper>

