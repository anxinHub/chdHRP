<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.info.basic.MatInvUnitMapMapper">
	
	<resultMap id="matInvUnitMap" type="com.chd.hrp.mat.entity.MatInvUnitMap">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="inv_id" column="inv_id"/>
	<result property="pack_code" column="pack_code"/>
	<result property="unit_code" column="unit_code"/>
	<result property="map_amount" column="map_amount"/>
	</resultMap>
	
	<resultMap id="unitMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="inv_model" column="inv_model"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_name" column="sup_name"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_name" column="fac_name"/>
	<result property="pack_code" column="pack_code"/>
	<result property="pack_name" column="pack_name"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="map_amount" column="map_amount"/>
	</resultMap>
	
	<insert id="addMatInvUnitMap" useGeneratedKeys="true" >
	
		INSERT INTO MAT_INV_UNIT_MAP (
		group_id
		,
		hos_id
		,
		copy_code
		,
		inv_id
		,
		pack_code
		,
		unit_code
		,
		map_amount
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{inv_id,jdbcType=INTEGER}
		,
		#{pack_code,jdbcType=VARCHAR}
		,
		#{unit_code,jdbcType=VARCHAR}
		,
		#{map_amount,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatchMatInvUnitMap" parameterType="java.util.List" >
	
		INSERT INTO MAT_INV_UNIT_MAP (
		group_id
		,
		hos_id
		,
		copy_code
		,
		inv_id
		,
		pack_code
		,
		unit_code
		,
		map_amount
		
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.inv_id,jdbcType=INTEGER}
			,
			#{item.pack_code,jdbcType=VARCHAR}
			,
			#{item.unit_code,jdbcType=VARCHAR}
			,
			#{item.map_amount,jdbcType=INTEGER}
				from dual	
		</foreach>
	</insert>
	
	<update id="updateMatInvUnitMap" parameterType="java.util.Map">
	
		UPDATE mat_inv_unit_map SET
		unit_code = #{unit_code,jdbcType=VARCHAR}
		,
		map_amount = #{map_amount,jdbcType=INTEGER}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
				 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
				 and 
		inv_id =#{inv_id,jdbcType=INTEGER}
				 and 
		pack_code =#{pack_code,jdbcType=VARCHAR}
		
	
	</update>
	<update id="updateBatchMatInvUnitMap" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_inv_unit_map SET
			unit_code = #{item.unit_code,jdbcType=VARCHAR}
			,
			map_amount = #{item.map_amount,jdbcType=INTEGER}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			inv_id = #{item.inv_id,jdbcType=INTEGER}
			 and 
			pack_code = #{item.pack_code,jdbcType=VARCHAR}
			
		</foreach>
	</update>
	<update id="updateBatchMatInvUnitMapNew" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_inv_unit_map 
			SET
			
			unit_code = #{item.unit_code,jdbcType=VARCHAR}
			,
			map_amount = #{item.map_amount,jdbcType=INTEGER}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			inv_id = #{item.inv_id,jdbcType=INTEGER}
			 and 
			pack_code = #{item.pack_code,jdbcType=VARCHAR}
			
		</foreach>
	</update>
	<delete id="deleteMatInvUnitMap" parameterType="java.util.Map">
	
		DELETE FROM mat_inv_unit_map WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		inv_id = #{inv_id,jdbcType=INTEGER}   and 
		pack_code = #{pack_code,jdbcType=VARCHAR} 
	
	</delete>
	<delete id="deleteBatchMatInvUnitMap" parameterType="java.util.List">
		DELETE FROM mat_inv_unit_map WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				inv_id = #{item.inv_id,jdbcType=INTEGER}
				 and 
				pack_code = #{item.pack_code,jdbcType=VARCHAR}
				
			</foreach>
	
	</delete>
	<select id="queryMatInvUnitMap" parameterType="java.util.Map" resultMap="matInvUnitMap" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		inv_id,
		pack_code,
		unit_code,
		map_amount
		FROM MAT_INV_UNIT_MAP 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="pack_code != null and pack_code != ''">
		AND pack_code = #{pack_code,jdbcType=VARCHAR}
		</if>
		<if test="unit_code != null and unit_code != ''">
		AND unit_code = #{unit_code,jdbcType=VARCHAR}
		</if>
		<if test="map_amount != null and map_amount != ''">
		AND map_amount = #{map_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryMatInvUnitMapByCode" resultType="com.chd.hrp.mat.entity.MatInvUnitMap" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		inv_id,
		pack_code,
		unit_code,
		map_amount
		FROM mat_inv_unit_map 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		inv_id = #{inv_id,jdbcType=INTEGER}   and 
		pack_code = #{pack_code,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryMatInvUnitMapByID" resultMap="unitMap" parameterType="java.util.Map" >
	
		SELECT 
		mium.group_id,
		mium.hos_id,
		mium.copy_code,
		mium.inv_id,
		mi.inv_code,
		mium.pack_code,
		hp.pack_name,
		mium.unit_code,
		mium.map_amount
		FROM mat_inv_unit_map mium left  join MAT_INV mi 
			ON
				mium.group_id = mi.group_id   and 
				mium.hos_id = mi.hos_id   and
				mium.copy_code = mi.copy_code   and
				mium.inv_id = mi.inv_id  
		left join HOS_PACKAGE hp
			ON
				mium.group_id = hp.group_id and 
				mium.hos_id = hp.hos_id and
				mium.pack_code = hp.pack_code 
		<where>
			<if test="group_id != null and group_id != ''">
			AND mium.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mium.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mium.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != ''">
			AND mium.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="pack_code != null and pack_code != ''">
			AND mium.pack_code = #{pack_code,jdbcType=VARCHAR}
			</if> 
		</where>
	</select>
	<select id="queryMatInvUnitMapByUniqueness" resultType="com.chd.hrp.mat.entity.MatInvUnitMap" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		inv_id,
		pack_code,
		unit_code,
		map_amount
		FROM MAT_INV_UNIT_MAP 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="pack_code != null and pack_code != ''">
		AND pack_code = #{pack_code,jdbcType=VARCHAR}
		</if>
		<if test="unit_code != null and unit_code != ''">
		AND unit_code = #{unit_code,jdbcType=VARCHAR}
		</if>
		<if test="map_amount != null and map_amount != ''">
		AND map_amount = #{map_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 多表联合查询 材料包装单位关系记录 -->
	<select id="queryMatInvUnitMapNew" parameterType="java.util.Map" resultMap="unitMap" >
	
		SELECT 
		mium.group_id,
		mium.hos_id,
		mium.copy_code,
		mium.inv_id,
		t.inv_code,
		t.inv_name,
		t.spell_code,
		t.wbx_code,
		t.inv_model,
		t.fac_id,
		t.fac_name,
		mium.pack_code,
		hp.pack_name,
		mium.unit_code,
		hu.unit_name,
		mium.map_amount
		FROM MAT_INV_UNIT_MAP  mium left join 
			( select mi.group_id,mi.hos_id, mi.copy_code , mi.inv_id ,mi.inv_code, mi.inv_name, mi.inv_model,
			 mi.fac_id ,hfd.fac_name,hfd.is_stop, mi.spell_code , mi.wbx_code from MAT_INV mi left join HOS_FAC_DICT hfd on 
				hfd.group_id = mi.group_id and
      			hfd.hos_id = mi.hos_id and 
      			hfd.fac_id = mi.fac_id and 
      			hfd.is_stop = 0 ) t
			ON
				mium.group_id = t.group_id  and
				mium.hos_id = t.hos_id  and
				mium.copy_code = t.copy_code  and
				mium.inv_id = t.inv_id 
		left join HOS_UNIT hu
			ON
				mium.group_id = hu.group_id and 
				mium.hos_id = hu.hos_id and
				mium.unit_code = hu.unit_code 
		left join HOS_PACKAGE hp
			ON
				mium.group_id = hp.group_id and 
				mium.hos_id = hp.hos_id and
				mium.pack_code = hp.pack_code
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mium.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mium.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mium.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null and inv_id != ''">
					 and (mium.inv_id  like  #{inv_id}||'%'
					 or upper(t.inv_code) like  #{inv_id}||'%'
					 or upper(t.inv_name) like '%'||#{inv_id}||'%'
				     or upper(t.spell_code) like '%'||#{inv_id}||'%'
				     or upper(t.wbx_code) like '%'||#{inv_id}||'%'
				     or lower(t.spell_code) like '%'||#{inv_id}||'%'
				     or lower(t.wbx_code) like '%'||#{inv_id}||'%')
		</if>
		<if test="pack_code != null and pack_code != ''">
		AND mium.pack_code = #{pack_code,jdbcType=VARCHAR}
		</if>
		<if test="unit_code != null and unit_code != ''">
		AND mium.unit_code = #{unit_code,jdbcType=VARCHAR}
		</if>
		<if test="map_amount != null and map_amount != ''">
		AND mium.map_amount = #{map_amount,jdbcType=INTEGER}
		</if>
		<if test="inv_model != null and inv_model != ''">
					and (t.inv_model like #{inv_model}||'%'
				     or upper(t.spell_code) like '%'||#{inv_model}||'%'
				     or upper(t.wbx_code) like '%'||#{inv_model}||'%'
				     or lower(t.spell_code) like '%'||#{inv_model}||'%'
				     or lower(t.wbx_code) like '%'||#{inv_model}||'%')
			</if>
		</where>   
		order by mium.inv_id asc
	</select>
	<!-- 弹出选择材料页面，根据查询条件查询出物资材料结果集（MAT_INV中IS_STOP=0） -->
	<select id="queryMatInv" parameterType="java.util.Map" resultMap="unitMap" >
	
		SELECT 
			mi.group_id,
			mi.hos_id, 
			mi.copy_code, 
			mi.inv_id, 
			mi.inv_code, 
			mi.inv_name,
			mi.inv_model,
			mi.fac_id,
			hf.fac_name,
			mi.unit_code,
			hu.unit_name
		from mat_inv mi
			left join hos_fac hf
				on mi.group_id = hf.group_id
				and mi.hos_id = hf.hos_id
				and mi.fac_id = hf.fac_id
			left join hos_unit hu
				on mi.group_id = hu.group_id
				and mi.hos_id = hu.hos_id
				and mi.unit_code = hu.unit_code
		<where>                     
			<if test="group_id != null and group_id != ''">
				AND mi.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND mi.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mi.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND (   mi.inv_code like '${inv_code}%' or
						mi.inv_name like '${inv_code}%' or
						mi.spell_code like '${inv_code}%' or
						mi.wbx_code like '${inv_code}%' 
				)
			</if>
			<if test="mat_type_code != null and mat_type_code != ''">
				AND mi.mat_type_id 
				in  (select mat_type_id from mat_type 
                where mat_type_code like '${mat_type_code}%'
                   and  is_last=1 
            <if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
)
				
				
			</if>
				AND mi.use_state = 1
		</where>   
		order by mi.inv_code 
	</select>
</mapper>

