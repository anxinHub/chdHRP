<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.info.basic.MatLocationDictMapper">
	
	<resultMap id="matLocationDict" type="com.chd.hrp.mat.entity.MatLocationDict">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="location_id" column="location_id"/>
	<result property="location_code" column="location_code"/>
	<result property="location_name" column="location_name"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="grid_no" column="grid_no"/>
	<result property="location_store_id" column="location_store_id"/>
	<result property="location_type_id" column="location_type_id"/>
	<result property="location_type_code" column="location_type_code"/>
	<result property="store_id" column="store_id"/>
	<result property="store_name" column="store_name"/>
	<result property="location_nature" column="location_nature"/>
	<result property="ctrl_type" column="ctrl_type"/>
	<result property="picker" column="picker"/>
	<result property="picker_name" column="picker_name"/>
	<result property="is_stop" column="is_stop"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO MAT_LOCATION_DICT (
			group_id		,
			hos_id		,
			copy_code		,
			location_id		,
			location_code		,
			location_name		,
			spell_code		,
			wbx_code		,
			grid_no		,
			location_type_id		,
			store_id		,
			location_nature		,
			ctrl_type		,
			picker		,
			is_stop		,
			note		
		) VALUES (
			#{group_id}		,
			#{hos_id}		,
			#{copy_code}		,
			MAT_LOCATION_DICT_SEQ.nextval,
			#{location_code}		,
			#{location_name}		,
			#{spell_code}		,
			#{wbx_code}		,
			#{grid_no}		,
			#{location_type_id}		,
			#{store_id}		,
			#{location_nature}		,
			#{ctrl_type}		,
			#{picker}		,
			#{is_stop}		,
			#{note}		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO MAT_LOCATION_DICT (
		location_id	,
		group_id	,
		hos_id	,
		copy_code	,
		location_code	,
		location_name		,
		spell_code		,
		wbx_code		,
		grid_no		,
		location_type_id		,
		store_id		,
		location_nature		,
		ctrl_type		,
		picker		,
		is_stop		,
		note		
		) 
		select MAT_LOCATION_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 	
			#{item.group_id,jdbcType=INTEGER}			,       
			#{item.hos_id,jdbcType=INTEGER}			,
			#{item.copy_code,jdbcType=VARCHAR}			,
			#{item.location_code,jdbcType=VARCHAR}			,
			#{item.location_name,jdbcType=VARCHAR}			,
			#{item.spell_code,jdbcType=VARCHAR}			,
			#{item.wbx_code,jdbcType=VARCHAR}			,
			#{item.grid_no,jdbcType=VARCHAR}			,
			#{item.location_type_id,jdbcType=INTEGER}			,
			#{item.store_id,jdbcType=VARCHAR}			,   
			#{item.location_nature,jdbcType=VARCHAR}			,
			#{item.ctrl_type,jdbcType=VARCHAR}			,
			#{item.picker,jdbcType=VARCHAR}			,
			#{item.is_stop,jdbcType=INTEGER}			,
			#{item.note,jdbcType=VARCHAR}
           from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE mat_location_dict SET
			location_code = #{location_code}		,
			location_name = #{location_name}		,
			spell_code = #{spell_code}		,
			wbx_code = #{wbx_code}		,
			grid_no = #{grid_no}		,
			location_type_id = #{location_type_id}		,
			store_id = #{store_id}		,
			location_nature = #{location_nature}		,
			ctrl_type = #{ctrl_type}		,
			picker = #{picker}		,
			is_stop = #{is_stop}		,		
			note = #{note}
		WHERE 	group_id =#{group_id}		 
			and hos_id =#{hos_id}
		 	and copy_code =#{copy_code}
		 	and location_id =#{location_id}
		
	
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE mat_location_dict SET
			location_code = #{location_code,jdbcType=VARCHAR}
			,
			location_name = #{location_name,jdbcType=VARCHAR}
			,
			spell_code = #{spell_code,jdbcType=VARCHAR}
			,
			wbx_code = #{wbx_code,jdbcType=VARCHAR}
			,
			grid_no = #{grid_no,jdbcType=VARCHAR}
			,
			location_type_id = #{location_type_id,jdbcType=INTEGER}
			,
			store_id = #{store_id,jdbcType=VARCHAR}
			,
			location_nature = #{location_nature,jdbcType=VARCHAR}
			,
			ctrl_type = #{ctrl_type,jdbcType=VARCHAR}
			,
			picker = #{picker,jdbcType=VARCHAR}
			,
			is_stop = #{is_stop,jdbcType=INTEGER}
			,
			note = #{note,jdbcType=VARCHAR}
			
			WHERE 
			group_id = #{group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{copy_code,jdbcType=VARCHAR}
			 and 
			location_id = #{location_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM mat_location_dict WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		location_id = #{location_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM mat_location_dict WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and location_id = #{item.location_id}
				
			</foreach>
	
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="matLocationDict" >
	
		SELECT 
			a.location_id,
			location_code,
			location_name,
			b.store_id location_store_id,
    		b.store_code||' '||b.store_name store_name,
			grid_no,
			c.location_type_name location_type_code,
    		case when location_nature=0 then '0 固定货位'  when location_nature=1 then '1 自由货位' else '' end location_nature,
    		a.is_stop,
    		a.note
	    FROM MAT_LOCATION_DICT a
	    left join hos_store_dict b on a.store_id = b.store_id 
	    	and a.group_id = b.group_id 
	    	and a.hos_id = b.hos_id
	    left join mat_location_type  c on a.location_type_id = c.location_type_id 
	    	and a.group_id = c.group_id 
	    	and a.hos_id = c.hos_id 
            and a.copy_code =c.copy_code
		<where> 
			b.is_stop = 0                     
			<if test="group_id != null and group_id != ''">
				and a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
                AND a.copy_code = #{copy_code}
            </if>
			<if test="location_id != null and location_id != ''">
				AND location_id = #{location_id}
			</if>
			<if test="location_code != null and location_code != ''">
				and location_code like #{location_code}||'%'
			</if>
			<if test="location_name != null and location_name != ''">
				   and (a.location_name like '%'||#{location_name}||'%'
				     or upper(a.spell_code) like '%'||#{location_name}||'%'
				     or upper(a.wbx_code) like '%'||#{location_name}||'%'
				     or lower(a.spell_code) like '%'||#{location_name}||'%'
				     or lower(a.wbx_code) like '%'||#{location_name}||'%')
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
			<if test="grid_no != null and grid_no != ''">
				AND grid_no = #{grid_no}
			</if>
			<if test="location_type_id != null and location_type_id != ''">
				AND a.location_type_id = #{location_type_id}
			</if>
			<if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id}
			</if>
			<if test="location_nature != null and location_nature != ''">
				AND location_nature = #{location_nature}
			</if>
			<if test="ctrl_type != null and ctrl_type != ''">
				AND ctrl_type = #{ctrl_type}
			</if>
			<if test="picker != null and picker != ''">
				AND picker = #{picker}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND a.is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND a.note = #{note}
			</if>
		</where>   
		order by location_code
	</select>
	<select id="queryByCode" resultType="com.chd.hrp.mat.entity.MatLocationDict" parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.location_id,
			a.location_code,
			a.location_name,
			a.spell_code,
			a.wbx_code,
			a.grid_no,
			c.location_type_id location_type_id,
			c.location_type_code||' '||c.location_type_name location_type_code,
			b.store_id store_id,
			b.store_code||' '||b.store_name store_name,
			location_nature,
			ctrl_type,
			d.emp_id picker,
			d.emp_code||' '||d.emp_name picker_name,
			a.is_stop,
			a.note
		FROM mat_location_dict a
	    left join hos_store_dict b on a.store_id = b.store_id 
	    	and a.group_id = b.group_id 
	    	and a.hos_id = b.hos_id
	    left join mat_location_type  c on a.location_type_id = c.location_type_id 
	    	and a.group_id = c.group_id 
	    	and a.hos_id = c.hos_id 
	    left join hos_emp_dict d on a.picker = d.emp_id 	
	    	and a.hos_id = d.hos_id
	    	and a.group_id = d.group_id
	    	and d.is_stop = 0
		WHERE 
			a.group_id = #{group_id}   
			and a.hos_id = #{hos_id}   
			and a.copy_code = #{copy_code}   
			and location_code = #{location_code} 
			and b.store_id = #{location_store_id} 
	
	</select>
	<select id="queryByUniqueness" resultType="com.chd.hrp.mat.entity.MatLocationDict" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		location_id,
		location_code,
		location_name,
		spell_code,
		wbx_code,
		grid_no,
		location_type_id,
		store_id,
		location_nature,
		ctrl_type,
		picker,
		is_stop,
		note
		FROM MAT_LOCATION_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="location_id != null and location_id != ''">
		AND location_id = #{location_id,jdbcType=INTEGER}
		</if>
		<if test="location_code != null and location_code != ''">
		AND location_code = #{location_code,jdbcType=VARCHAR}
		</if>
		<if test="location_name != null and location_name != ''">
		AND location_name = #{location_name,jdbcType=VARCHAR}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		<if test="grid_no != null and grid_no != ''">
		AND grid_no = #{grid_no,jdbcType=VARCHAR}
		</if>
		<if test="location_type_id != null and location_type_id != ''">
		AND location_type_id = #{location_type_id,jdbcType=INTEGER}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=VARCHAR}
		</if>
		<if test="location_nature != null and location_nature != ''">
		AND location_nature = #{location_nature,jdbcType=VARCHAR}
		</if>
		<if test="ctrl_type != null and ctrl_type != ''">
		AND ctrl_type = #{ctrl_type,jdbcType=VARCHAR}
		</if>
		<if test="picker != null and picker != ''">
		AND picker = #{picker,jdbcType=VARCHAR}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>

</mapper>

