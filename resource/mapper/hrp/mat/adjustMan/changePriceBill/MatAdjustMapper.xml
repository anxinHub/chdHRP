<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.adjustMan.changePriceBill.MatAdjustMapper">
	<resultMap id="matAdjust" type="java.util.Map">
		<result property="group_id" column="group_id"/><!-- 集团ID -->
		<result property="hos_id" column="hos_id"/><!-- 医院ID -->
		<result property="copy_code" column="copy_code"/><!-- 账套编码 -->	
		<result property="adjust_id" column="adjust_id"/><!-- 调价单ID -->	
		<result property="adjust_code" column="adjust_code"/><!-- 调价单编码 -->	
		<result property="create_date" column="create_date"/><!-- 编制日期 -->	  
		<result property="note" column="note"/>	<!-- 备注 -->
		<result property="maker" column="maker"/><!-- 制单人ID -->	
		<result property="make_name" column="make_name"/><!-- 制单人名称 -->	
		<result property="make_date" column="make_date"/><!-- 制单日期 -->	
		<result property="checker" column="checker"/><!-- 审核人ID -->	
		<result property="checker_name" column="checker_name"/><!-- 审核人名称 -->
		<result property="adjust_date" column="adjust_date"/><!-- 审核日期 -->
		<result property="state" column="state"/><!-- 状态 -->
		
		<result property="new_price" column="new_price"/>	<!-- 新计划价 -->	
		<result property="old_price" column="old_price"/><!-- 原计划价 -->
		<result property="new_sell_price" column="new_sell_price"/>	<!-- 调价明细新零售价 -->	
		<result property="old_sell_price" column="old_sell_price"/><!-- 调价明细原零售价 -->
		<result property="inv_id" column="inv_id"/><!-- 材料ID -->				
		<result property="inv_no" column="inv_no"/><!-- 材料变更号 -->
		<result property="inv_code" column="inv_code"/><!-- 材料编码 -->
		<result property="inv_name" column="inv_name"/><!-- 材料名称 -->
		<result property="inv_model" column="inv_model"/><!-- 规格型号 -->
		<result property="unit_code" column="unit_code"/><!-- 计量单位编码 -->
		<result property="unit_name" column="unit_name"/><!-- 计量单位名称 -->
		
		<result property="mat_type_id" column="mat_type_id"/>
		<result property="mat_type_name" column="mat_type_name"/>
		<result property="is_com" column="is_com"/>
		<result property="is_highvalue" column="is_highvalue"/>
		<result property="is_batch" column="is_batch"/> 
		<result property="is_bar" column="is_bar"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="is_quality" column="is_quality"/>
		<result property="is_single_ven" column="is_single_ven"/>
		
		<result property="is_disinfect" column="is_disinfect"/>
		<result property="pack_code" column="pack_code"/>
		<result property="pack_name" column="pack_name"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="plan_price" column="plan_price"/>
		<result property="sell_price" column="sell_price"/>
		<result property="price" column="price"/>
		<result property="brand_name" column="brand_name"/>
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		
		<result property="fac_id" column="fac_id"/><!-- 厂商ID -->
		<result property="fac_no" column="fac_no"/><!-- 厂商变更号 -->
		<result property="fac_name" column="fac_name"/><!-- 厂商名称 -->
		<result property="sup_id" column="sup_id"/><!-- 供应商ID -->
		<result property="sup_name" column="sup_name"/><!-- 供应商名称 -->
		<result property="adjust_reason" column="adjust_reason"/><!-- 调价原因 -->
	</resultMap>
	
	<!-- 查询 调价单主表 -->
	<select id="query" parameterType="java.util.Map"
		resultMap="matAdjust">
		SELECT
		  mam.group_id,
		  mam.hos_id,
		  mam.copy_code,
		  mam.adjust_id,
		  mam.adjust_code,
		  to_char(mam.create_date,'yyyy-MM-dd') as create_date,
		  mam.note,
		  mam.maker,
		  su.user_name as make_name,
		  to_char(mam.make_date,'yyyy-MM-dd') as make_date,
		  mam.checker,
		  sus.user_name as checker_name,
		  to_char(mam.adjust_date,'yyyy-MM-dd') as adjust_date,
		  mam.state
		FROM MAT_ADJUST_MAIN  mam
		LEFT JOIN SYS_USER su
		ON
		     mam.group_id = su.group_id
		     AND mam.hos_id = su.hos_id
		     AND mam.copy_code = su.copy_code
		     AND mam.maker = su.user_id
		LEFT JOIN SYS_USER sus 
		ON
		     mam.group_id = sus.group_id
		     AND mam.hos_id = sus.hos_id
		     AND mam.copy_code = sus.copy_code
		     AND mam.checker = sus.user_id
		<where>
			<if test="group_id != null and group_id != '' ">
			     mam.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			     AND mam.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			     AND mam.copy_code = #{copy_code}
			</if>
			<if test="creBegin_date != null and creBegin_date != '' and creEnd_date != null and creEnd_date != '' ">
		     	 AND mam.create_date between to_date(#{creBegin_date},'yyyy-MM-dd') and to_date(#{creEnd_date},'yyyy-MM-dd')
			</if>
			<if test="adjust_code != null and adjust_code != '' ">
			     AND mam.adjust_code like '%${adjust_code}%'
			</if>
			<if test="state != null and state != '' ">
			     AND mam.state = #{state}
			</if>
			<if test="adjBegin_date != null and adjBegin_date != '' and adjEnd_date != null and adjEnd_date != '' ">
			     AND mam.adjust_date between to_date(#{adjBegin_date},'yyyy-MM-dd') and to_date(#{adjEnd_date},'yyyy-MM-dd')
			</if>
			<if test="note != null and note != '' ">
			     AND mam.note like '%${note}%'
			</if>
			 ORDER BY mam.adjust_id,mam.adjust_code
		</where>     
	</select>
	
	<!-- 按调价单ID查询主表 -->
	<select id="queryByCode" parameterType="java.util.Map"
		resultMap="matAdjust">
		SELECT
		       mam.group_id,
		       mam.hos_id,
		       mam.copy_code,
		       mam.adjust_id,
		       mam.adjust_code,
		       to_char(mam.create_date,'yyyy-MM-dd') as create_date,
		       mam.note,
		       mam.maker,
		       to_char(mam.make_date,'yyyy-MM-dd') as make_date,
		       mam.checker,
		       to_char(mam.adjust_date,'yyyy-MM-dd') as adjust_date,
		       mam.state    
		FROM MAT_ADJUST_MAIN mam
		<where>
			<if test="group_id != null and group_id != '' ">
			     group_id = #{group_id}
			</if>
			
			<if test="hos_id != null and hos_id != '' ">
			     and hos_id = #{hos_id}
			</if>
			
			<if test="copy_code != null and copy_code != '' ">
			     and copy_code = #{copy_code}
			</if>
			
			<if test="adjust_id != null and adjust_id != '' ">
			     and adjust_id = #{adjust_id}
			</if>
		</where>
	</select>
	
	<!-- 按调价单主表ID查询明细 -->
	<select id="queryMatAdjustDetailByCode" parameterType="java.util.Map" 
		resultMap="matAdjust">
			SELECT
			   	  mad.group_id,
				  mad.hos_id,
				  mad.copy_code,
				  mad.adjust_id,
				  mad.adjust_detail_id,
				  mad.inv_id,
				  mad.inv_no,
				  mid.inv_code,
				  mid.inv_name,
				  mid.inv_model,
				  mid.unit_code,
				  hu.unit_name,
				  mid.fac_id,
				  mid.fac_no,
				  hfd.fac_name,
				  hsd.sup_name,
				  mad.old_price,
				  mad.new_price,
				  mad.old_sell_price,
				  mad.new_sell_price,
				  mad.adjust_reason
			FROM MAT_ADJUST_DETAIL mad
			LEFT JOIN MAT_INV_DICT mid
			ON
			     mad.group_id = mid.group_id
			     and mad.hos_id = mid.hos_id
			     and mad.copy_code = mid.copy_code
			     and mad.inv_id = mid.inv_id
			     and mad.inv_no = mid.inv_no
			     <!-- and mid.is_stop = 0 -->
			LEFT JOIN HOS_UNIT hu
			ON
				 mid.group_id = hu.group_id
				 and mid.hos_id = hu.hos_id
			     and mid.unit_code = hu.unit_code
			     and hu.is_stop = 0
			LEFT JOIN HOS_FAC_DICT hfd
			ON
				 mid.group_id = hfd.group_id
				 and mid.hos_id = hfd.hos_id
				 and mid.fac_id = hfd.fac_id
			     and mid.fac_no = hfd.fac_no
			left join mat_inv_sup mis on mid.group_id=mis.group_id
                 and mid.hos_id=mis.hos_id
                 and mid.copy_code=mis.copy_code
                 and mid.inv_id=mis.inv_id
                 and mis.is_default = 1 
            left join hos_sup_dict hsd on mis.group_id=hsd.group_id
                 and mis.hos_id=hsd.hos_id
                 and mis.sup_id=hsd.sup_id
                 and hsd.is_stop = 0 
			WHERE
			     mad.group_id = #{group_id}
			     and mad.hos_id = #{hos_id}
			     and mad.copy_code = #{copy_code}
			     and mad.adjust_id = #{adjust_id}
			group by  mad.group_id, mad.hos_id, mad.copy_code, mad.adjust_id, mad.adjust_detail_id
      , mad.inv_id, mad.inv_no, mid.inv_code, mid.inv_name, mid.inv_model
      , mid.unit_code, hu.unit_name, mid.fac_id, mid.fac_no, hfd.fac_name
      , hsd.sup_name, mad.old_price, mad.new_price, mad.old_sell_price, mad.new_sell_price
      , mad.adjust_reason
       order by mad.adjust_id, mad.adjust_detail_id
	</select>
	
	<!-- 按调价单主表ID 批量查询明细 -->
	<select id="queryBatchMatAdjustDetailByCode" parameterType="java.util.List" 
		resultMap="matAdjust">
			SELECT
			   	  mad.group_id,
				  mad.hos_id,
				  mad.copy_code,
				  mad.adjust_id,
				  mad.adjust_detail_id,
				  mad.inv_id,
				  mad.inv_no,
				  mid.inv_code,
				  mid.inv_name,
				  mid.inv_model,
				  mid.unit_code,
				  hu.unit_name,
				  mid.fac_id,
				  mid.fac_no,
				  hfd.fac_name,
				  mad.old_price,
				  mad.new_price,
				  mad.old_sell_price,
				  mad.new_sell_price,
				  mad.adjust_reason
			FROM MAT_ADJUST_DETAIL mad
			LEFT JOIN MAT_INV_DICT mid ON mad.group_id = mid.group_id
			     and mad.hos_id = mid.hos_id
			     and mad.copy_code = mid.copy_code
			     and mad.inv_id = mid.inv_id
			     and mad.inv_no = mid.inv_no
			LEFT JOIN HOS_UNIT hu ON mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code = hu.unit_code 
			LEFT JOIN HOS_FAC_DICT hfd ON mid.fac_id = hfd.fac_id
			     and mid.fac_no = hfd.fac_no
			     and mid.group_id = hfd.group_id
			     and mid.hos_id = hfd.hos_id
			WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
					 mad.group_id = #{item.group_id}
			     and mad.hos_id = #{item.hos_id}
			     and mad.copy_code = #{item.copy_code}
			     and mad.adjust_id = #{item.adjust_id}
			</foreach>
			ORDER BY mad.adjust_id,mad.adjust_detail_id
	</select>
	
	<!-- 添加 调价单主表数据 -->
	<insert id="add" useGeneratedKeys="true">
		<selectKey resultType="java.lang.Integer" order="BEFORE"  keyProperty="adjust_id">
			SELECT MAT_ADJUST_MAIN_SEQ.Nextval as adjust_id FROM DUAL
		</selectKey> 
		INSERT INTO MAT_ADJUST_MAIN(
		     adjust_id,
		     group_id,
		     hos_id,
		     copy_code,
		     adjust_code,
		     create_date,
		     note,
		     maker,
		     make_date,
		     checker,
		     adjust_date,
		     state     
		)VALUES(
		     #{adjust_id,jdbcType=INTEGER},
		     #{group_id,jdbcType=INTEGER},
		     #{hos_id,jdbcType=INTEGER},
		     #{copy_code,jdbcType=VARCHAR},
		     #{adjust_code,jdbcType=VARCHAR},
		     to_date(#{create_date,jdbcType=DATE},'yyyy/MM/dd'),
		     #{note,jdbcType=VARCHAR},
		     #{maker,jdbcType=INTEGER},
		     to_date(#{make_date,jdbcType=DATE},'yyyy/MM/dd'),
		     #{checker,jdbcType=INTEGER},
		     to_date(#{adjust_date,jdbcType=DATE},'yyyy/MM/dd'),
		     #{state}
		)
	</insert>
	
	<!-- 修改调价单主表 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE MAT_ADJUST_MAIN SET
		create_date = to_date(#{create_date},'yyyy/MM/dd'),
		note = #{note}
		where
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and adjust_id = #{adjust_id}
	</update>
	
	<!-- 添加调价单明细 -->
	<insert id="addBatchMatAdjustDetail" parameterType="java.util.List">
		INSERT INTO MAT_ADJUST_DETAIL(
			adjust_detail_id,
			group_id,
			hos_id,
			copy_code,
			adjust_id,
			inv_id,
			inv_no,
			old_price,
			new_price,
			old_sell_price,
			new_sell_price, 
			adjust_reason
		)
		SELECT MAT_ADJUST_DETAIL_SEQ.Nextval,a.* from (
			<foreach collection="list" item="item" index="index" separator="union all" >
				SELECT 
					#{item.group_id},
					#{item.hos_id},
					#{item.copy_code},
					#{item.adjust_id},	 
					#{item.inv_id},
					#{item.inv_no},
					#{item.old_price},
					#{item.new_price},
					#{item.old_sell_price},
					#{item.new_sell_price}, 
					#{item.adjust_reason}
				from dual
			</foreach>
		) a
	</insert>
	
	<!-- 修改材料表零售价 -->
	<update id="updateBatchMatInvSellPrice" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_INV
			<set>
				sell_price = #{item.new_sell_price}
			</set> 
			<where>
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and inv_id = #{item.inv_id}
			</where>
		</foreach>		
	</update>
	
	<!-- 修改材料变更表零售价 -->
	<update id="updateBatchMatInvDictSellPrice" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_INV_DICT
			<set>
				sell_price = #{item.new_sell_price}
			</set> 
			<where>
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and inv_id = #{item.inv_id}
				and inv_no = #{item.inv_no}
			</where>
		</foreach>		
	</update>
	
	<!-- 删除调价单主表数据 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM MAT_ADJUST_MAIN WHERE
			<foreach collection="list" item="item" index="index" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and adjust_id = #{item.adjust_id}
			</foreach>
	</delete>
	
	<!-- 删除调价单明细数据 -->
	<delete id="deleteBatchMatAdjustDetail" parameterType="java.util.List">
		DELETE FROM MAT_ADJUST_DETAIL WHERE
			<foreach collection="list" item="item" index="index" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and adjust_id = #{item.adjust_id}
			</foreach>
	</delete>
	
	<!-- 查看单据号表中是否存在 -->
	<select id="queryIsExists" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(0) from MAT_NO_MANAGE
		where table_code = 'MAT_ADJUST_MAIN'
			and prefixe = 'TJ'
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="create_year != null and create_year != '' ">
				AND year= #{create_year}
			</if>
			<if test="create_month != null and create_month !=''">
				AND month=#{create_month}
			</if>
	</select>
	
	<!-- 查询单据号表中最大单据号 -->
	<select id="queryMaxCode" resultType="java.lang.String" parameterType="java.util.Map">
		select max_no from MAT_NO_MANAGE
		where table_code = 'MAT_ADJUST_MAIN'
			and prefixe = 'TJ'
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="create_year != null and create_year != ''">
				AND year = #{create_year}
			</if>
			<if test="create_month != null and create_month !=''">
				AND month = #{create_month}
			</if>
	</select>
	
	<!-- 更新单据号表中最大单据号 -->
	<update id="updateMatNoMatch" parameterType="java.util.Map">
		update mat_no_manage set max_no = #{max_code}
			where table_code = 'MAT_ADJUST_MAIN'
				AND prefixe = 'TJ'
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			
			<if test="create_year != null and create_year != ''">
				AND year = #{create_year}
			</if>
			<if test="create_month != null and create_month !=''">
				AND month = #{create_month}
			</if>
			
	</update>
	
	<!-- 向单据号表中插入数据 -->
	<insert id="addMatNoMatch" parameterType="java.util.Map">
		insert into mat_no_manage(group_id,hos_id,copy_code,table_code,year,month,max_no,prefixe)
		values(
			#{group_id ,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER} ,
			#{copy_code,jdbcType=VARCHAR},
			#{table_code,jdbcType=VARCHAR},
			#{create_year,jdbcType=VARCHAR},
			#{create_month,jdbcType=VARCHAR},
			#{max_no,jdbcType=INTEGER},
			#{prefixe,jdbcType=VARCHAR}
		)	
	</insert>
	
	<!-- 审核 修改状态 -->
	<update id="updateMatAdjustState" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_ADJUST_MAIN
			<set>
				state = 2,
				checker = #{item.checker},
				adjust_date = to_date(#{item.adjust_date},'yyyy/MM/dd')
			</set> 
			<where>
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and adjust_id = #{item.adjust_id}
				and state = #{item.state}
			</where>
		</foreach>
	</update>
	
	<!-- 审核 修改状态 -->
	<update id="updateCheckMatAdjustState" parameterType="java.util.Map">
			UPDATE MAT_ADJUST_MAIN
			set
				state = 2,
				checker = #{checker},
				adjust_date = to_date(#{adjust_date},'yyyy/MM/dd')
				where
				group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and adjust_id = #{adjust_id}
	</update>
	
	<!-- 业务数据选择物资材料所用 -->
	<select id="queryMatInvList" parameterType="java.util.Map" resultMap="matAdjust">
		SELECT 
			a.group_id, a.hos_id, a.copy_code, a.inv_id, a.inv_no, a.inv_code, a.inv_name, a.mat_type_id, b.mat_type_name, 
			a.inv_model, a.unit_code, c.unit_name, a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar, 
			a.is_quality, a.is_single_ven, a.is_disinfect, f.pack_code, g.pack_name pack_name, f.map_amount num_exchange, 
			a.fac_id, e.fac_no, e.fac_name,hsd.sup_id,hsd.sup_name, a.plan_price, a.sell_price, a.plan_price as price, a.brand_name, 
			mld.location_id, mld.location_code, mld.location_name 
		from mat_inv_dict a
		 left join mat_inv_sup mis on a.group_id=mis.group_id
         	and a.hos_id=mis.hos_id
         	and a.copy_code=mis.copy_code
         	and a.inv_id=mis.inv_id
         	and mis.is_default = 1
         left join hos_sup_dict hsd on mis.group_id=hsd.group_id
         and mis.hos_id=hsd.hos_id
         and mis.sup_id=hsd.sup_id
         and hsd.is_stop=0
		left join mat_type_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.mat_type_id = b.mat_type_id
			and a.mat_type_no = b.mat_type_no
		left join hos_unit c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
		left join hos_fac_dict e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
			and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
			on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.copy_code = f.copy_code
			and a.inv_id = f.inv_id
		left join hos_package g
			on f.group_id = g.group_id
			and f.hos_id = g.hos_id
			and f.pack_code = g.pack_code
		
		<if test="sup_id != null and sup_id != ''">
			inner join mat_inv_sup mis
				on a.group_id = mis.group_id
				and a.hos_id = mis.hos_id
				and a.copy_code = mis.copy_code
				and mis.sup_id = #{sup_id,jdbcType=INTEGER}
				and a.inv_id = mis.inv_id   
		</if>
		left join mat_location_inv mli
			on a.group_id = mli.group_id
			and a.hos_id = mli.hos_id
			and a.copy_code = mli.copy_code
			and a.inv_id = mli.inv_id
		left join mat_location_dict mld
			on mli.group_id = mld.group_id
			and mli.hos_id = mld.hos_id
			and mli.copy_code = mld.copy_code
			and mli.location_id = mld.location_id
			and mld.is_stop = 0
		where a.group_id =#{group_id,jdbcType=INTEGER}
			and a.hos_id =#{hos_id,jdbcType=INTEGER}
			and a.copy_code =#{copy_code,jdbcType=INTEGER}
			and a.use_state = 1
			and a.is_stop = 0
			<if test="is_com != null and is_com != ''">
				and a.is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="key != null and key != ''">
				and (
					a.inv_code like '%${key}%' or 
					a.inv_name like '%${key}%'
					or
					a.spell_code like '%${key}%' or 
					a.wbx_code like '%${key}%'
				)
			</if>
	</select>
	
	<!-- 修改材料变更表计划价 -->
	<update id="updateBatchMatInvDictPlanPrice" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_INV_DICT 
			<set>
				plan_price = #{item.new_price}
			</set> 
			<where>
				group_id = #{item.group_id} 
					and hos_id = #{item.hos_id} 
					and copy_code = #{item.copy_code}
					and inv_id = #{item.inv_id}
					and inv_no = #{item.inv_no} 
					and inv_code = #{item.inv_code}
			</where>
		</foreach>		
	</update>
	
	<!-- 修改材料表计划价 -->
	<update id="updateBatchMatInvPlanPrice" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_INV
			<set>
				plan_price = #{item.new_price}
			</set> 
			<where>
				group_id = #{item.group_id} 
					and hos_id = #{item.hos_id} 
					and copy_code = #{item.copy_code}
					and inv_id = #{item.inv_id}
			</where>
		</foreach>		
	</update>
	
	<select id="queryMatAdjustInvByCode" parameterType="java.util.Map" resultMap="matAdjust">
		SELECT
			inv_id,inv_no
		FROM MAT_INV_DICT
		WHERE
			group_id = #{group_id} 
			and hos_id = #{hos_id} 
			and copy_code = #{copy_code}
			and inv_code = #{inv_code}
            and is_stop = 0
	</select>
	
	<!-- 查看材料是否存在入库单中 -->
	<select id="queryIsExistsInOrder" parameterType="java.util.Map" resultType="String">
			select to_char(wm_concat(order_detail_id)) from (
				select  distinct modd.order_detail_id as order_detail_id
				from mat_in_order_rela  mior
				left join mat_order_detail  modd on mior.group_id=modd.group_id and mior.hos_id=modd.hos_id and mior.copy_code=modd.copy_code
				     and mior.order_id = modd.order_id and mior.order_detail_id = modd.order_detail_id
				left join mat_order_main mom on modd.group_id = mom.group_id  and modd.hos_id = mom.hos_id and modd.copy_code=mom.copy_code
				     and modd.order_id = mom.order_id
				<where>
					<if test="group_id !=null and group_id !=''">
						and modd.group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id != null and hos_id != ''">
						and modd.hos_id =#{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code != ''">
						and modd.copy_code =#{copy_code,jdbcType=VARCHAR}
					</if>
					<if test="inv_id !=null and inv_id !=''">
						and modd.inv_id = #{inv_id,jdbcType=INTEGER}
					</if>
					<!-- <if test="inv_no != null and inv_no != ''">
						and modd.inv_no =#{inv_no,jdbcType=INTEGER}
					</if> -->
					and mom.state not in (0,5)
				</where>
			)
			
	</select>
	
	<update id="updateMatDetailTable" parameterType="java.util.Map">
		update ${table_name}  set ${cloumn_name} = #{new_price}
		<where>
			<if test="group_id !=null and group_id !=''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id !=null and inv_id !=''">
				and inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<!-- <if test="inv_no != null and inv_no != ''">
				and inv_no =#{inv_no,jdbcType=INTEGER}
			</if> -->
			<if test="whereSql != null and whereSql != ''">
				${whereSql}
			</if>
			<if test="orderIds != null and orderIds != ''">
				<if test="type==0">
					and order_detail_id not in (${orderIds})
				</if>
				<if test="type==1">
					and pur_detail_id not in (
						select distinct pur_detail_id 
						from mat_pur_order_rela
						<where>
							<if test="group_id !=null and group_id !=''">
								and group_id = #{group_id,jdbcType=INTEGER}
							</if>
							<if test="hos_id != null and hos_id != ''">
								and hos_id =#{hos_id,jdbcType=INTEGER}
							</if>
							<if test="copy_code != null and copy_code != ''">
								and copy_code =#{copy_code,jdbcType=VARCHAR}
							</if>
							<if test="orderIds != null and orderIds != ''">
								and order_detail_id in (${orderIds})
							</if>
						</where>
					)
				</if>
				<if test="type==2">
					and req_detail_id not in (
						select distinct a.req_detail_id 
						from mat_req_store_pur_rela a
						left join mat_pur_order_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id 
							and a.copy_code=b.copy_code and a.pur_id=b.pur_id 
						<where>
							<if test="group_id !=null and group_id !=''">
								and a.group_id = #{group_id,jdbcType=INTEGER}
							</if>
							<if test="hos_id != null and hos_id != ''">
								and a.hos_id =#{hos_id,jdbcType=INTEGER}
							</if>
							<if test="copy_code != null and copy_code != ''">
								and a.copy_code =#{copy_code,jdbcType=VARCHAR}
							</if>
							<if test="orderIds != null and orderIds != ''">
								and b.order_detail_id in (${orderIds})
							</if>
						</where>
					)
				</if>
				<if test="type==3">
					and req_detail_id not in (
						select distinct req_detail_id 
						from (
							select distinct a.req_detail_id as req_detail_id 
							from mat_req_dept_pur_rela a
							left join mat_pur_order_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id 
								and a.copy_code=b.copy_code and a.pur_id=b.pur_id 
							<where>
								<if test="group_id !=null and group_id !=''">
									and a.group_id = #{group_id,jdbcType=INTEGER}
								</if>
								<if test="hos_id != null and hos_id != ''">
									and a.hos_id =#{hos_id,jdbcType=INTEGER}
								</if>
								<if test="copy_code != null and copy_code != ''">
									and a.copy_code =#{copy_code,jdbcType=VARCHAR}
								</if>
								<if test="orderIds != null and orderIds != ''">
									and b.order_detail_id in (${orderIds})
								</if>
							</where>
							union all
							select distinct a.dept_detail_id as req_detail_id
							from mat_req_store_rela a
							left join mat_req_store_pur_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id 
								and a.copy_code=b.copy_code and a.store_req_id=b.req_id
							left join mat_pur_order_rela c on b.group_id=c.group_id and b.hos_id=c.hos_id 
								and b.copy_code=c.copy_code and b.pur_id=c.pur_id 
							<where>
								<if test="group_id !=null and group_id !=''">
									and a.group_id = #{group_id,jdbcType=INTEGER}
								</if>
								<if test="hos_id != null and hos_id != ''">
									and a.hos_id =#{hos_id,jdbcType=INTEGER}
								</if>
								<if test="copy_code != null and copy_code != ''">
									and a.copy_code =#{copy_code,jdbcType=VARCHAR}
								</if>
								<if test="orderIds != null and orderIds != ''">
									and c.order_detail_id in (${orderIds})
								</if>
							</where>
						)
					)
				</if>
			</if>
		</where>
	</update>
	
	<update id="updateBatchInvIsStop" parameterType="java.util.Map">
		UPDATE mat_inv_dict 
			<trim prefix="SET"  suffixOverrides=","> 
				<if test="is_stop != null and is_stop != ''">
					is_stop = #{is_stop,jdbcType=INTEGER}, 
				</if>
				<if test="change_date != null and change_date != ''">
					change_date = #{change_date,jdbcType=DATE}, 
				</if>
				<if test="change_user != null and change_user != ''">
					change_user = #{change_user,jdbcType=INTEGER}, 
				</if>
				<if test="change_note != null and change_note != ''">
					change_note = #{change_note,jdbcType=VARCHAR}, 
				</if>
			</trim>
		<where>
			<if test="group_id !=null and group_id !=''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_nos != null and inv_nos != ''">
				and inv_no in (${inv_nos})
			</if>
		</where>
	</update> 
	
	<select id="queryDetails" parameterType="java.util.Map" resultMap="matAdjust">
		select mad.group_id, mad.hos_id, mad.copy_code, mad.adjust_id, mad.adjust_detail_id
			, mad.inv_id, mad.inv_no, mid.inv_code, mid.inv_name, mid.inv_model
			, mid.unit_code, hu.unit_name, mid.fac_id, mid.fac_no, hfd.fac_name,hsd.sup_name
			, mad.old_price, mad.new_price, mad.old_sell_price, mad.new_sell_price, mad.adjust_reason
      		,mam.adjust_code,mam.create_date
		from MAT_ADJUST_DETAIL mad
		left join mat_adjust_main mam on mam.group_id=mad.group_id
		   and mam.hos_id=mad.hos_id and mam.copy_code=mad.copy_code
		   and mam.adjust_id=mad.adjust_id
		left join MAT_INV_DICT mid on mad.group_id = mid.group_id
		   and mad.hos_id = mid.hos_id
		   and mad.copy_code = mid.copy_code
		   and mad.inv_id = mid.inv_id
		   and mad.inv_no = mid.inv_no 
		 left join mat_inv_sup mis on mid.group_id=mis.group_id
           and mid.hos_id=mis.hos_id
           and mid.copy_code=mis.copy_code
           and mid.inv_id=mis.inv_id
           and mis.is_default = '0'
         left join hos_sup_dict hsd on mis.group_id=hsd.group_id
           and mis.hos_id=hsd.hos_id
           and mis.sup_id=hsd.sup_id
           and hsd.is_stop = '0'
  		   and hsd.is_disable = '0'	
		left join HOS_UNIT hu on mid.group_id = hu.group_id
		   and mid.hos_id = hu.hos_id
		   and mid.unit_code = hu.unit_code
		   and hu.is_stop = 0 
		left join HOS_FAC_DICT hfd on mid.group_id = hfd.group_id
		   and mid.hos_id = hfd.hos_id
		   and mid.fac_id = hfd.fac_id
		   and mid.fac_no = hfd.fac_no 
		<where>
		     mad.group_id = #{group_id}
		     and mad.hos_id = #{hos_id}
		     and mad.copy_code = #{copy_code}
		     <if test="adjust_id != null and adjust_id != ''">
		     	and mam.adjust_id = #{adjust_id}
		     </if>
		     <if test="adjust_code != null and adjust_code != ''">
		     	and mam.adjust_code = #{adjust_code}
		     </if>
		     <if test="note != null and note != ''">
		     	and mam.note = #{note}
		     </if>
		     <if test="creBegin_date != null and creBegin_date != '' and creEnd_date != null and creEnd_date != '' ">
		     	 AND mam.create_date between to_date(#{creBegin_date},'yyyy-MM-dd') and to_date(#{creEnd_date},'yyyy-MM-dd')
			</if>
			<if test="key != null and key != ''">
				and (
					mid.inv_code like '%${key}%' or 
					mid.bid_code like '%${key}%' or 
					mid.inv_name like '%${key}%'
					or
					mid.spell_code like '%${key}%' or 
					mid.wbx_code like '%${key}%'
				)
			</if>
		</where>
		ORDER BY mad.adjust_id,mad.adjust_detail_id
	</select>
	
	
	
	<select id="queryChoiceInvBySupData" parameterType="java.util.List" resultType="java.util.Map">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.inv_no,jdbcType=INTEGER} as inv_no,
					#{item.sup_id,jdbcType=INTEGER} as sup_id
				from dual
			</foreach>
		)
		select a.group_id,a.hos_id,a.copy_code,dd.bid_code,a.inv_id,a.inv_no,dd.inv_code,dd.inv_name,dd.inv_model,dd.plan_price price,
			dd.unit_code,b.unit_name,d.sup_id,d.sup_no, d.sup_code,d.sup_name,e.fac_id,e.fac_no,e.fac_code,e.fac_name,
			dd.plan_price as old_price,nvl(dd.sell_price,0) as old_sell_price
		from list_temp a
		left join mat_inv_dict dd on a.group_id=dd.group_id and a.hos_id=dd.hos_id and a.copy_code=dd.copy_code
			and a.inv_id=dd.inv_id and a.inv_no=dd.inv_no
		left join hos_unit b on dd.group_id=b.group_id and dd.hos_id=b.hos_id and dd.unit_code=b.unit_code and b.is_stop = 0
		left join mat_inv_sup c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.copy_code=c.copy_code
		     and a.inv_id=c.inv_id and a.sup_id=c.sup_id
		left join hos_sup_dict d on c.group_id=d.group_id and c.hos_id=d.hos_id and c.sup_id=d.sup_id and d.is_stop = 0
		left join hos_fac_dict e on dd.group_id=e.group_id and dd.hos_id=e.hos_id and dd.fac_id=e.fac_id and dd.fac_no=e.fac_no
		 
		order by dd.inv_code
	</select>
	
	
	<!-- 根据供应商查询材料 -->
	<select id="queryMatChoiceInvBySup" parameterType="java.util.Map" resultType="java.util.Map">
		select a.group_id,a.hos_id,a.copy_code,a.inv_id,a.inv_no,a.inv_code,a.inv_name,a.inv_model,a.plan_price price,
	      a.unit_code,b.unit_name,d.sup_id,d.sup_no, d.sup_code,d.sup_name,e.fac_id,e.fac_no,e.fac_code,e.fac_name,
	      f.mat_type_code,f.mat_type_name,f.mat_type_id,f.mat_type_no
	    from mat_inv_dict a
	    left join hos_unit b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.unit_code=b.unit_code and b.is_stop = 0
	    left join mat_inv_sup c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.copy_code=c.copy_code
	         and a.inv_id=c.inv_id
	         and c.is_default = 1
	    left join hos_sup_dict d on c.group_id=d.group_id and c.hos_id=d.hos_id and c.sup_id=d.sup_id and d.is_stop = 0
	    left join hos_fac_dict e on a.group_id=e.group_id and a.hos_id=e.hos_id and a.fac_id=e.fac_id and a.fac_no=e.fac_no
	    left join mat_type_dict f on a.group_id=f.group_id and a.hos_id=f.hos_id and a.copy_code=f.copy_code 
	         and a.mat_type_id=f.mat_type_id and a.mat_type_no=f.mat_type_no
	    <if test="store_id != null and store_id !=''">
	    left join mat_store_inv msi on a.group_id=msi.group_id and a.hos_id=msi.hos_id and a.copy_code=msi.copy_code
     		and a.inv_id=msi.inv_id 
     	</if>
		<where>
				and a.group_id = #{group_id,jdbcType=INTEGER}
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="sup_id != null and sup_id !=''">
				and d.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="mat_type_id != null and mat_type_id !=''">
				and f.mat_type_id = #{mat_type_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id !=''">
				and msi.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				and ( 
					a.inv_code like '%${inv_code}%'
				or upper(a.inv_name) like '%${inv_code}%'
				or upper(a.spell_code) like '%${inv_code}%'
				or upper(a.wbx_code) like '%${inv_code}%'
				or lower(a.spell_code) like '%${inv_code}%'
				or lower(a.wbx_code) like '%${inv_code}%'
				or lower(a.inv_name) like '%${inv_code}%'
				)
			</if>
			<!-- 材料入库添加选择材料界面不需要查询代销材料,调价页面显示包括代销材料 -->
			<if test="is_com !=null and  is_com !=''">
				and a.is_com = #{is_com,VARCHAR}
			</if>
			and a.use_state = 1
			and a.is_stop = 0
		</where>
		order by a.inv_code 
	</select>
	
	
	
</mapper>