<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.dura.balance.MatDuraStoreBarMapper">
	
	<resultMap id="matDuraStoreBar"  type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="store_id" column="store_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="price" column="price"/>
		<result property="bar_code" column="bar_code"/>
		<result property="amount" column="amount"/>
	</resultMap>
	
	<!-- 没有单行操作的业务 -->
	<insert id="add" useGeneratedKeys="true" >
		INSERT INTO MAT_DURA_STORE_BAR (
			group_id, hos_id, copy_code, store_id, inv_id, price, bar_code, amount 
		) VALUES (
			#{group_id,jdbcType=INTEGER}, 
			#{hos_id,jdbcType=INTEGER}, 
			#{copy_code,jdbcType=VARCHAR}, 
			#{store_id,jdbcType=INTEGER}, 
			#{inv_id,jdbcType=INTEGER},
			#{price,jdbcType=NUMERIC}, 
			#{bar_code,jdbcType=VARCHAR}, 
			#{amount,jdbcType=NUMERIC} 
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		INSERT INTO MAT_DURA_STORE_BAR (
			group_id, hos_id, copy_code, store_id, inv_id, price, bar_code, amount 
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}, 
				#{item.hos_id,jdbcType=INTEGER}, 
				#{item.copy_code,jdbcType=VARCHAR}, 
				#{item.store_id,jdbcType=INTEGER}, 
				#{item.inv_id,jdbcType=INTEGER},
				#{item.price,jdbcType=NUMERIC}, 
				#{item.bar_code,jdbcType=VARCHAR}, 
				#{item.amount,jdbcType=NUMERIC} 
		    from dual
		</foreach>
	</insert>
	
	<!-- 没有单行操作的业务 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE MAT_DURA_STORE_BAR 
		SET 
			amount = #{amount,jdbcType=NUMERIC}
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC}
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MAT_DURA_STORE_BAR
			SET
				amount = #{item.amount,jdbcType=NUMERIC} 
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND store_id = #{item.store_id,jdbcType=INTEGER}
				AND inv_id = #{item.inv_id,jdbcType=INTEGER}
				AND price = #{item.price,jdbcType=NUMERIC}
				AND bar_code = #{item.bar_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 没有单行操作的业务 -->
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM MAT_DURA_STORE_BAR 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC}
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
	</delete>
	
	<!-- 删除业务期末结账的存储过程处理 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM MAT_DURA_STORE_BAR 
		WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER} 
			AND hos_id = #{item.hos_id,jdbcType=INTEGER} 
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR} 
			AND store_id = #{item.store_id,jdbcType=INTEGER} 
			AND inv_id = #{item.inv_id,jdbcType=INTEGER}
			AND price = #{item.price,jdbcType=NUMERIC} 
			AND bar_code = #{item.bar_code,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="matDuraStoreBar" >
		SELECT 
			group_id, hos_id, copy_code, store_id, inv_id, price, bar_code, amount 
		FROM MAT_DURA_STORE_BAR 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			<if test="inv_id != null ">
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="price != null ">
			AND price = #{price,jdbcType=NUMERIC}
			</if>
			<if test="bar_code != null ">
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
		order by store_id, inv_id
	</select>
	
	<select id="queryByCode" resultMap="matDuraStoreBar"  parameterType="java.util.Map" >
		SELECT 
			group_id, hos_id, copy_code, store_id, inv_id, price, bar_code, amount 
		FROM MAT_DURA_STORE_BAR 
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			AND hos_id = #{hos_id,jdbcType=INTEGER} 
			AND copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND store_id = #{store_id,jdbcType=INTEGER} 
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC} 
			AND bar_code = #{bar_code,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryExists" resultMap="matDuraStoreBar"  parameterType="java.util.Map" >
		SELECT 
			group_id, hos_id, copy_code, store_id, inv_id, price, bar_code, amount 
		FROM MAT_DURA_STORE_BAR 
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			AND hos_id = #{hos_id,jdbcType=INTEGER} 
			AND copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND store_id = #{store_id,jdbcType=INTEGER} 
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC} 
			AND bar_code = #{bar_code,jdbcType=VARCHAR} 
	</select>
	
	<!-- 根据材料查询表信息 -->
	<select id="queryByInvList" resultMap="matDuraStoreBar"  parameterType="java.util.List" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union" >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,  
					#{item.store_id,jdbcType=INTEGER} as store_id, 
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.price,jdbcType=NUMERIC} as price, 
					#{item.bar_code,jdbcType=VARCHAR} as bar_code
				from dual
			</foreach>
		)
		select a.group_id, a.hos_id, a.copy_code, a.store_id, a.inv_id, a.price, a.bar_code, b.amount 
		from list_temp a
		inner join MAT_DURA_STORE_BAR b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.store_id = b.store_id
			and a.inv_id = b.inv_id and a.price = b.price 
			and a.bar_code = b.bar_code
		order by a.store_id, a.inv_id
	</select>
</mapper>

