<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.base.MatBatchBalanceMapper">
	
	<resultMap id="matBatchBalance"  type="com.chd.hrp.mat.entity.MatBatchBalance">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="inv_id" column="inv_id"/>
		<result property="store_id" column="store_id"/>
		<result property="batch_sn" column="batch_sn"/>
		<result property="batch_no" column="batch_no"/>
		<result property="bar_code" column="bar_code"/>
		<result property="price" column="price"/>
		<result property="sale_price" column="sale_price"/>
		<result property="end_amount" column="end_amount"/>
		<result property="end_money" column="end_money"/>
		<result property="end_sale_money" column="end_sale_money"/>
		<result property="begin_amount" column="begin_amount"/>
		<result property="begin_money" column="begin_money"/>
		<result property="begin_sale_money" column="begin_sale_money"/>
		<result property="in_amount" column="in_amount"/>
		<result property="in_money" column="in_money"/>
		<result property="in_sale_money" column="in_sale_money"/>
		<result property="out_amount" column="out_amount"/>
		<result property="out_money" column="out_money"/>
		<result property="out_sale_money" column="out_sale_money"/>
		<result property="y_in_amount" column="y_in_amount"/>
		<result property="y_in_money" column="y_in_money"/>
		<result property="y_in_sale_money" column="y_in_sale_money"/>
		<result property="y_out_amount" column="y_out_amount"/>
		<result property="y_out_money" column="y_out_money"/>
		<result property="y_out_sale_money" column="y_out_sale_money"/>
		<result property="remove_zero_error" column="remove_zero_error"/>
		<result property="sale_zero_error" column="sale_zero_error"/>
		<result property="location_id" column="location_id"/>
	</resultMap>
	
	<!-- 没有单行操作的业务 -->
	<insert id="add" useGeneratedKeys="true" >
		INSERT INTO MAT_BATCH_BALANCE (
			group_id, hos_id, copy_code, year, month, store_id, inv_id, 
			price, sale_price, batch_sn, batch_no, bar_code,   
			end_amount, end_money, end_sale_money, 
			begin_amount, begin_money, begin_sale_money, 
			in_amount, in_money, in_sale_money, 
			out_amount, out_money, out_sale_money, 
			y_in_amount, y_in_money, y_in_sale_money, 
			y_out_amount, y_out_money, y_out_sale_money, 
			remove_zero_error, sale_zero_error, location_id
		) VALUES (
			#{group_id,jdbcType=INTEGER}, 
			#{hos_id,jdbcType=INTEGER}, 
			#{copy_code,jdbcType=VARCHAR}, 
			#{year,jdbcType=VARCHAR}, 
			#{month,jdbcType=VARCHAR}, 
			#{inv_id,jdbcType=INTEGER}, 
			#{store_id,jdbcType=INTEGER}, 
			#{batch_sn,jdbcType=INTEGER}, 
			#{batch_no,jdbcType=VARCHAR}, 
			#{bar_code,jdbcType=VARCHAR}, 
			#{price,jdbcType=INTEGER}, 
			#{sale_price,jdbcType=INTEGER}, 
			#{end_amount,jdbcType=INTEGER}, 
			#{end_money,jdbcType=INTEGER}, 
			#{end_sale_money,jdbcType=INTEGER}, 
			#{begin_amount,jdbcType=INTEGER}, 
			#{begin_money,jdbcType=INTEGER}, 
			#{begin_sale_money,jdbcType=INTEGER}, 
			#{in_amount,jdbcType=INTEGER}, 
			#{in_money,jdbcType=INTEGER}, 
			#{in_sale_money,jdbcType=INTEGER}, 
			#{out_amount,jdbcType=INTEGER}, 
			#{out_money,jdbcType=INTEGER}, 
			#{out_sale_money,jdbcType=INTEGER}, 
			#{y_in_amount,jdbcType=INTEGER}, 
			#{y_in_money,jdbcType=INTEGER}, 
			#{y_in_sale_money,jdbcType=INTEGER}, 
			#{y_out_amount,jdbcType=INTEGER}, 
			#{y_out_money,jdbcType=INTEGER}, 
			#{y_out_sale_money,jdbcType=INTEGER}, 
			#{remove_zero_error,jdbcType=INTEGER}, 
			#{sale_zero_error,jdbcType=INTEGER}, 
			#{location_id,jdbcType=INTEGER} 
		)
	</insert>
	
	<!-- 批量插入 -->
	<insert id="addBatch" parameterType="java.util.List" >
		INSERT INTO MAT_BATCH_BALANCE (
			group_id, 
			hos_id, 
			copy_code, 
			year, 
			month, 
			inv_id, 
			store_id, 
			batch_sn, 
			batch_no, 
			bar_code, 
			price, 
			sale_price, 
			end_amount, 
			end_money, 
			end_sale_money, 
			begin_amount, 
			begin_money, 
			begin_sale_money, 
			in_amount, 
			in_money, 
			in_sale_money, 
			out_amount, 
			out_money, 
			out_sale_money, 
			y_in_amount, 
			y_in_money, 
			y_in_sale_money, 
			y_out_amount, 
			y_out_money, 
			y_out_sale_money, 
			remove_zero_error, 
			sale_zero_error, 
			location_id
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.year,jdbcType=VARCHAR},
				#{item.month,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.store_id,jdbcType=INTEGER},
				#{item.batch_sn,jdbcType=INTEGER},
				#{item.batch_no,jdbcType=VARCHAR},
				#{item.bar_code,jdbcType=VARCHAR},
				#{item.price,jdbcType=INTEGER},
				#{item.sale_price,jdbcType=INTEGER},
				#{item.end_amount,jdbcType=INTEGER},
				#{item.end_money,jdbcType=INTEGER},
				#{item.end_sale_money,jdbcType=INTEGER},
				#{item.begin_amount,jdbcType=INTEGER},
				#{item.begin_money,jdbcType=INTEGER},
				#{item.begin_sale_money,jdbcType=INTEGER},
				#{item.in_amount,jdbcType=INTEGER},
				#{item.in_money,jdbcType=INTEGER},
				#{item.in_sale_money,jdbcType=INTEGER},
				#{item.out_amount,jdbcType=INTEGER},
				#{item.out_money,jdbcType=INTEGER},
				#{item.out_sale_money,jdbcType=INTEGER},
				#{item.y_in_amount,jdbcType=INTEGER},
				#{item.y_in_money,jdbcType=INTEGER},
				#{item.y_in_sale_money,jdbcType=INTEGER},
				#{item.y_out_amount,jdbcType=INTEGER},
				#{item.y_out_money,jdbcType=INTEGER},
				#{item.y_out_sale_money,jdbcType=INTEGER},
				#{item.remove_zero_error,jdbcType=INTEGER}, 
				#{item.sale_zero_error,jdbcType=INTEGER},
				#{item.location_id,jdbcType=INTEGER}
		    from dual
		</foreach>
	</insert>
	
	<!-- 没有单行操作的业务 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE mat_batch_balance 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="end_amount != null ">
				end_amount = #{end_amount,jdbcType=INTEGER},
			</if>
			<if test="end_money != null ">
				end_money = #{end_money,jdbcType=INTEGER},
			</if>
			<if test="end_sale_money != null ">
				end_sale_money = #{end_sale_money,jdbcType=INTEGER},
			</if>
			<if test="begin_amount != null ">
				begin_amount = #{begin_amount,jdbcType=INTEGER},
			</if>
			<if test="begin_money != null ">
				begin_money = #{begin_money,jdbcType=INTEGER},
			</if>
			<if test="begin_sale_money != null ">
				begin_sale_money = #{begin_sale_money,jdbcType=INTEGER},
			</if>
			<if test="in_amount != null ">
				in_amount = #{in_amount,jdbcType=INTEGER},
			</if>
			<if test="in_money != null ">
				in_money = #{in_money,jdbcType=INTEGER},
			</if>
			<if test="in_sale_money != null ">
				in_sale_money = #{in_sale_money,jdbcType=INTEGER},
			</if>
			<if test="out_amount != null ">
				out_amount = #{out_amount,jdbcType=INTEGER},
			</if>
			<if test="out_money != null ">
				out_money = #{out_money,jdbcType=INTEGER},
			</if>
			<if test="out_sale_money != null ">
				out_sale_money = #{out_sale_money,jdbcType=INTEGER},
			</if>
			<if test="y_in_amount != null ">
				y_in_amount = #{y_in_amount,jdbcType=INTEGER},
			</if>
			<if test="y_in_money != null ">
				y_in_money = #{y_in_money,jdbcType=INTEGER},
			</if>
			<if test="y_in_sale_money != null ">
				y_in_sale_money = #{y_in_sale_money,jdbcType=INTEGER},
			</if>
			<if test="y_out_amount != null ">
				y_out_amount = #{y_out_amount,jdbcType=INTEGER},
			</if>
			<if test="y_out_money != null ">
				y_out_money = #{y_out_money,jdbcType=INTEGER},
			</if>
			<if test="y_out_sale_money != null ">
				y_out_sale_money = #{y_out_sale_money,jdbcType=INTEGER},
			</if>
			<if test="sale_zero_error != null ">
				sale_zero_error = #{sale_zero_error,jdbcType=INTEGER},
			</if>
			<if test="location_id != null ">
				location_id = #{location_id,jdbcType=INTEGER},
			</if>
			</trim>
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=FLOAT}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			AND batch_no = #{batch_no,jdbcType=VARCHAR}
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			AND location_id = #{location_id,jdbcType=INTEGER}
	</update>
	
	<!-- 批量更新 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_batch_balance
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.end_amount != null ">
					end_amount = #{item.end_amount,jdbcType=FLOAT},
				</if>
				<if test="item.end_money != null ">
					end_money = #{item.end_money,jdbcType=FLOAT},
				</if>
				<if test="item.end_sale_money != null ">
					end_sale_money = #{item.end_sale_money,jdbcType=FLOAT},
				</if>
				<if test="item.begin_amount != null ">
					begin_amount = #{item.begin_amount,jdbcType=FLOAT},
				</if>
				<if test="item.begin_money != null ">
					begin_money = #{item.begin_money,jdbcType=FLOAT},
				</if>
				<if test="item.begin_sale_money != null ">
					begin_sale_money = #{item.begin_sale_money,jdbcType=FLOAT},
				</if>
				<if test="item.in_amount != null ">
					in_amount = #{item.in_amount,jdbcType=FLOAT},
				</if>
				<if test="item.in_money != null ">
					in_money = #{item.in_money,jdbcType=FLOAT},
				</if>
				<if test="item.in_sale_money != null ">
					in_sale_money = #{item.in_sale_money,jdbcType=FLOAT},
				</if>
				<if test="item.out_amount != null ">
					out_amount = #{item.out_amount,jdbcType=FLOAT},
				</if>
				<if test="item.out_money != null ">
					out_money = #{item.out_money,jdbcType=FLOAT},
				</if>
				<if test="item.out_sale_money != null ">
					out_sale_money = #{item.out_sale_money,jdbcType=FLOAT},
				</if>
				<if test="item.y_in_amount != null ">
					y_in_amount = #{item.y_in_amount,jdbcType=FLOAT},
				</if>
				<if test="item.y_in_money != null ">
					y_in_money = #{item.y_in_money,jdbcType=FLOAT},
				</if>
				<if test="item.y_in_sale_money != null ">
					y_in_sale_money = #{item.y_in_sale_money,jdbcType=FLOAT},
				</if>
				<if test="item.y_out_amount != null ">
					y_out_amount = #{item.y_out_amount,jdbcType=FLOAT},
				</if>
				<if test="item.y_out_money != null ">
					y_out_money = #{item.y_out_money,jdbcType=FLOAT},
				</if>
				<if test="item.y_out_sale_money != null ">
					y_out_sale_money = #{item.y_out_sale_money,jdbcType=FLOAT},
				</if>
				<if test="item.remove_zero_error != null ">
					remove_zero_error = #{item.remove_zero_error,jdbcType=FLOAT},
				</if>
				<if test="item.sale_zero_error != null ">
					sale_zero_error = #{item.sale_zero_error,jdbcType=FLOAT},
				</if>
			</trim>
			where group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND inv_id = #{item.inv_id,jdbcType=INTEGER}
				AND price = #{item.price,jdbcType=FLOAT}
				AND store_id = #{item.store_id,jdbcType=INTEGER}
				AND batch_sn = #{item.batch_sn,jdbcType=INTEGER}
				AND batch_no = #{item.batch_no,jdbcType=VARCHAR}
				AND bar_code = #{item.bar_code,jdbcType=VARCHAR}
				AND location_id = #{item.location_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 没有单行操作的业务 -->
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM mat_batch_balance 
		<where>                     
		<if test="group_id != null ">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null ">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null ">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="store_id != null ">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="batch_sn != null ">
		AND batch_sn = #{batch_sn,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
		AND batch_no = #{batch_no,jdbcType=VARCHAR}
		</if>
		<if test="bar_code != null and bar_code != ''">
		AND bar_code = #{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="location_id != null ">
		AND location_id = #{location_id,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>
	
	<!-- 删除业务期末结账的存储过程处理 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM mat_batch_balance 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null ">
				AND group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null ">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{year,jdbcType=VARCHAR}
				</if>
				<if test="item.month != null and item.month != ''">
				AND month = #{month,jdbcType=VARCHAR}
				</if>
				<if test="item.inv_id != null ">
				AND inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="item.store_id != null ">
				AND store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="item.batch_sn != null ">
				AND batch_sn = #{batch_sn,jdbcType=INTEGER}
				</if>
				<if test="item.batch_no != null and item.batch_no != ''">
				AND batch_no = #{batch_no,jdbcType=VARCHAR}
				</if>
				<if test="item.bar_code != null and item.bar_code != ''">
				AND bar_code = #{bar_code,jdbcType=VARCHAR}
				</if>
				<if test="item.location_id != null ">
				AND location_id = #{location_id,jdbcType=INTEGER}
				</if>
			</foreach>
	    </where>  
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="matBatchBalance" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			inv_id,
			store_id,
			batch_sn,
			batch_no,
			bar_code,
			price,
			sale_price,
			end_amount,
			end_money,
			end_sale_money,
			begin_amount,
			begin_money,
			begin_sale_money,
			in_amount,
			in_money,
			in_sale_money,
			out_amount,
			out_money,
			out_sale_money,
			y_in_amount,
			y_in_money,
			y_in_sale_money,
			y_out_amount,
			y_out_money,
			y_out_sale_money,
			remove_zero_error,
			sale_zero_error,
			location_id
		FROM MAT_BATCH_BALANCE 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			<if test="batch_sn != null ">
			AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != ''">
			AND batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="bar_code != null and bar_code != ''">
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
			<if test="location_id != null ">
			AND location_id = #{location_id,jdbcType=INTEGER}
			</if>
			<if test="sql != null and sql != ''">
			{$sql}
			</if>
		order by year, month, store_id, inv_id, batch_no, batch_sn
	</select>
	<select id="queryByCode" resultMap="matBatchBalance"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			inv_id,
			store_id,
			batch_sn,
			batch_no,
			bar_code,
			price,
			sale_price,
			end_amount,
			end_money,
			end_sale_money,
			begin_amount,
			begin_money,
			begin_sale_money,
			in_amount,
			in_money,
			in_sale_money,
			out_amount,
			out_money,
			out_sale_money,
			y_in_amount,
			y_in_money,
			y_in_sale_money,
			y_out_amount,
			y_out_money,
			y_out_sale_money,
			remove_zero_error,
			sale_zero_error,
			location_id
		FROM mat_batch_balance 
		WHERE group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR}   
			and year = #{year,jdbcType=VARCHAR}   
			and month = #{month,jdbcType=VARCHAR}   
			and store_id = #{store_id,jdbcType=INTEGER}   
			and inv_id = #{inv_id,jdbcType=INTEGER}   
			and price = #{price,jdbcType=FLOAT}   
			and batch_no = #{batch_no,jdbcType=VARCHAR}   
			and batch_sn = #{batch_sn,jdbcType=INTEGER}   
			and bar_code = #{bar_code,jdbcType=VARCHAR} 
			and location_id = #{location_id,jdbcType=INTEGER} 
	</select>
	<select id="queryByUniqueness" resultMap="matBatchBalance"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			inv_id,
			store_id,
			batch_sn,
			batch_no,
			bar_code,
			price,
			sale_price,
			end_amount,
			end_money,
			end_sale_money,
			begin_amount,
			begin_money,
			begin_sale_money,
			in_amount,
			in_money,
			in_sale_money,
			out_amount,
			out_money,
			out_sale_money,
			y_in_amount,
			y_in_money,
			y_in_sale_money,
			y_out_amount,
			y_out_money,
			y_out_sale_money,
			remove_zero_error,
			sale_zero_error,
			location_id
		FROM MAT_BATCH_BALANCE 
		<where>                     
			<if test="group_id != null ">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null ">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null ">
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null ">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="batch_sn != null ">
			AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != ''">
			AND batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="bar_code != null and bar_code != ''">
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
			<if test="location_id != null ">
			AND location_id = #{location_id,jdbcType=INTEGER}
			</if>
		</where>   
		order by year, month, store_id, inv_id, batch_no, batch_sn
	</select>
	<select id="queryExists" resultMap="matBatchBalance"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			inv_id,
			store_id,
			batch_sn,
			batch_no,
			bar_code,
			price,
			sale_price,
			end_amount,
			end_money,
			end_sale_money,
			begin_amount,
			begin_money,
			begin_sale_money,
			in_amount,
			in_money,
			in_sale_money,
			out_amount,
			out_money,
			out_sale_money,
			y_in_amount,
			y_in_money,
			y_in_sale_money,
			y_out_amount,
			y_out_money,
			y_out_sale_money,
			remove_zero_error,
			sale_zero_error,
			location_id
		FROM MAT_BATCH_BALANCE 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			<if test="store_id != null ">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="inv_id != null ">
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="batch_sn != null ">
			AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null and batch_no != ''">
			AND batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="bar_code != null and bar_code != ''">
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
			<if test="location_id != null ">
			AND location_id = #{location_id,jdbcType=INTEGER}
			</if>
		order by year, month, store_id, inv_id, batch_no, batch_sn
	</select>
	<!-- 根据材料查询表信息 -->
	<select id="queryByInvList" resultMap="matBatchBalance"  parameterType="java.util.List" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union" >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,  
					#{item.year,jdbcType=VARCHAR} as year, 
					#{item.month,jdbcType=VARCHAR} as month, 
					#{item.store_id,jdbcType=INTEGER} as store_id, 
					#{item.inv_id,jdbcType=INTEGER} as inv_id, 
					#{item.price,jdbcType=FLOAT} as price, 
					#{item.batch_no,jdbcType=INTEGER} as batch_no, 
					#{item.batch_sn,jdbcType=INTEGER} as batch_sn, 
					#{item.bar_code,jdbcType=INTEGER} as bar_code, 
					#{item.location_id,jdbcType=INTEGER} as location_id
				from dual
			</foreach>
		)
		select a.group_id, a.hos_id, a.copy_code, a.year, a.month, a.store_id, a.inv_id, a.batch_no, a.batch_sn, 
			a.bar_code, nvl(b.price, 0) as price, nvl(b.sale_price, 0) as sale_price, nvl(b.end_amount, 0) as end_amount, 
			nvl(b.end_money, 0) as end_money, nvl(b.end_sale_money, 0) as end_sale_money, 
			nvl(b.begin_amount, 0) as begin_amount, nvl(b.begin_money, 0) as begin_money, 
			nvl(b.begin_sale_money, 0) as begin_sale_money, nvl(b.in_amount, 0) as in_amount, 
			nvl(b.in_money, 0) as in_money, nvl(b.in_sale_money, 0) as in_sale_money, 
			nvl(b.out_amount, 0) as out_amount, nvl(b.out_money, 0) as out_money, 
			nvl(b.out_sale_money, 0) as out_sale_money, nvl(b.y_in_amount, 0) as y_in_amount, 
			nvl(b.y_in_money, 0) as y_in_money, nvl(b.y_in_sale_money, 0) as y_in_sale_money, 
			nvl(b.y_out_amount, 0) as y_out_amount, nvl(b.y_out_money, 0) as y_out_money, 
			nvl(b.y_out_sale_money, 0) as y_out_sale_money, nvl(remove_zero_error, 0) as remove_zero_error, 
			nvl(sale_zero_error, 0) as sale_zero_error, nvl(b.location_id, 0) as location_id
		from list_temp a
		inner join mat_batch_balance b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.year = b.year
			and a.month = b.month and a.store_id = b.store_id
			and a.inv_id = b.inv_id and a.price = b.price
			and a.batch_no = b.batch_no and a.batch_sn = b.batch_sn 
			and a.bar_code = b.bar_code and nvl(a.location_id, 0) = nvl(b.location_id, 0)
		order by a.year, a.month, a.store_id, a.inv_id, a.batch_no, a.batch_sn
	</select>
</mapper>

