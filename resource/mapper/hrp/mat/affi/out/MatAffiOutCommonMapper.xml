<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.affi.out.MatAffiOutCommonMapper">
	
	<!-- 代销出库主表 -->
	<resultMap id="matAffiOutMain" type="java.util.Map"> 
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		
		<result property="out_idUp" column="out_idUp"/>
		<result property="out_idNext" column="out_idNext"/>
		 
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="brief" column="brief"/>
		<result property="out_date" column="out_date"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="dept_emp" column="dept_emp"/>
		<result property="dept_emp_name" column="dept_emp_name"/>

		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
		<result property="use_state" column="use_state"/>
		<result property="his_flag" column="his_flag"/>
		<result property="is_dir" column="is_dir"/>
		<result property="proj_id" column="proj_id"/>
		<result property="amount_money" column="amount_money"/>
		<result property="state_name" column="state_name"/>
		
	</resultMap>
	
	<!-- 代销出库明细表 -->
	<resultMap id="matAffiOutDetail" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="detail_id" column="detail_id"/>
		<result property="store_id" column="store_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="batch_no" column="batch_no"/>
		<result property="batch_sn" column="batch_sn"/>
		<result property="bar_code" column="bar_code"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="amount_money" column="amount_money"/>
		<result property="pack_code" column="pack_code"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="pack_price" column="pack_price"/>
		<result property="num" column="num"/>
		
		<result property="sale_price" column="sale_price"/>
		<result property="sale_money" column="sale_money"/>
		<result property="sell_price" column="sell_price"/>
		<result property="sell_money" column="sell_money"/>
		<result property="allot_price" column="allot_price"/>
		<result property="allot_money" column="allot_money"/>
		
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		
		<result property="inva_date" column="inva_date"/>
		<result property="disinfect_date" column="disinfect_date"/>
		<result property="note" column="note"/>
		
		<result property="instant_amount" column="instant_amount"/>
		<result property="instant_amount_money" column="instant_amount_money"/>
		<result property="imme_amount" column="imme_amount"/>
		<result property="left_amount" column="left_amount"/>
		<result property="left_money" column="left_money"/>
		
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="sn" column="sn"/>
		
		<result property="store_name" column="store_name"/>
	</resultMap>
	
	<!-- 代销入库表信息 -->
	<resultMap  id="matAffiIn" type="java.util.Map" >
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="in_id" column="in_id"/>
		<result property="in_no" column="in_no"/>
		<result property="brief" column="brief"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_code" column="sup_code"/>
		<result property="sup_name" column="sup_name"/>
		
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
		
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		
		<result property="stocker" column="stocker"/>
		<result property="stocker_name" column="stocker_name"/>
		<result property="stock_type_code" column="stock_type_code"/>
		<result property="stock_type_name" column="stock_type_name"/>
		
		<result property="is_org" column="is_org"/>
		<result property="in_date" column="in_date"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		
		<result property="checker" column="checker"/>
		<result property="check_date" column="check_date"/>
		<result property="checker_name" column="checker_name"/>
		
		<result property="confirmer" column="confirmer"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
		<result property="order_code" column="order_code"/>
		
		<result property="detail_id" column="detail_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="batch_no" column="batch_no"/>
		<result property="batch_sn" column="batch_sn"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="amount_money" column="amount_money"/>
		<result property="sale_price" column="sale_price"/>
		<result property="sale_money" column="sale_money"/>
		<result property="sell_price" column="sell_price"/>
		<result property="sell_money" column="sell_money"/>
		<result property="allot_price" column="allot_price"/>
		<result property="allot_money" column="allot_money"/>
		<result property="pack_code" column="pack_code"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="pack_price" column="pack_price"/>
		<result property="num" column="num"/>
		<result property="bar_code" column="bar_code"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="sn" column="sn"/>
		<result property="inva_date" column="inva_date"/>
		<result property="disinfect_date" column="disinfect_date"/>
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		<result property="note" column="note"/>
		<result property="cur_amount" column="cur_amount"/>
		
		<result property="left_amount" column="left_amount"/>
		<result property="imme_amount" column="imme_amount"/>
	</resultMap>
	
	<select id="query" parameterType="java.util.Map" resultMap="matAffiOutMain" >
		select null group_id, null hos_id,null copy_code, null out_id, '合计' out_no,null brief, 
		      null store_id,null store_no,null store_code,null store_name,null bus_type_code, null bus_type_name,
		      null dept_id,null dept_no,null dept_code,null dept_name,null dept_emp,null  dept_emp_name,
		      sum(mad.amount_money) as amount_money,null out_date, null maker,null maker_name,null checker,
		      null checker_name,null check_date,null confirmer, 
		      null confirmer_name,null confirm_date,null state,null as state_name
		FROM mat_affi_out mao
		    LEFT JOIN mat_affi_out_detail mad  on mao.group_id = mad.group_id
		         and mao.hos_id = mad.hos_id
		         and mao.copy_code = mad.copy_code
		         and mao.out_id = mad.out_id
		    LEFT JOIN hos_store_dict hsd on mao.group_id = hsd.group_id
		         and mao.hos_id = hsd.hos_id
		         and mao.store_id = hsd.store_id
		         <if test="show_history == 1">
					and mao.store_no = hsd.store_no
				</if>
				<if test="show_history == 0">
					and hsd.is_stop = 0
				</if>
		    LEFT JOIN mat_bus_type mbt on mao.bus_type_code = mbt.bus_type_code
		         and mbt.is_stop = 0
		    LEFT JOIN sys_user su on mao.group_id = su.group_id
		         and mao.hos_id = su.hos_id
		         and mao.maker = su.user_id
		    LEFT JOIN sys_user su1 on mao.group_id = su1.group_id
		         and mao.hos_id = su1.hos_id
		         and mao.confirmer = su1.user_id
		    left join hos_dept_dict hdd on hdd.dept_id = mao.dept_id
		         and hdd.group_id = mao.group_id 
		         and hdd.hos_id = mao.hos_id	         
		         <if test="show_history == 1">
					and hdd.dept_no = mao.dept_no
				 </if>
				 <if test="show_history == 0">
					and hdd.is_stop = 0
				 </if>
		    left join hos_emp he on he.emp_id = mao.dept_emp 
		         and he.hos_id = mao.hos_id
		         and he.group_id = mao.group_id
		         and he.is_stop = 0
		    left join sys_user su2 on su2.user_id = mao.checker
		         and su2.hos_id = mao.hos_id
		         and su2.group_id = mao.group_id
			<where>
				<if test="group_id != null and group_id != ''">
					AND mao.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND mao.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mao.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="out_dateB != null and out_dateB != ''">
					AND to_char(mao.out_date) &gt;= to_date(#{out_dateB,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="out_dateE != null and out_dateE != ''">
					AND to_char(mao.out_date) &lt;= to_date(#{out_dateE,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateB != null and confirm_dateB != ''">
					AND to_char(mao.confirm_date) &gt;= to_date(#{confirm_dateB,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateE != null and confirm_dateE != ''">
					AND to_char(mao.confirm_date)  &lt;= to_date(#{confirm_dateE,jdbcType=DATE},'yyyy-MM-dd')
				</if> 
				<if test="store_id != null and store_id != '' ">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="dept_id != null and dept_id != '' ">
					AND mao.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="state != null and state != ''">
					AND mao.state = #{state,jdbcType=INTEGER}
				</if>
				<choose>
					<when test="bus_type_code != null and bus_type_code != ''">
					AND mao.bus_type_code = #{bus_type_code,jdbcType=INTEGER}
					</when>
					<otherwise>
						AND mao.bus_type_code in (5,7,9,28,32,33,34)
					</otherwise>
				</choose>
				<if test="out_no != null and out_no != ''">
					AND mao.out_no like '${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					AND mao.brief like '%${brief}%'
				</if>
				<if test="maker != null and maker != ''">
					AND mao.maker = #{maker}
				</if>	
				and exists  (select 1
				from v_user_data_perm
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and user_id = #{user_id,jdbcType=INTEGER}
					and to_char(mao.store_id)=perm_code
					and table_code = 'HOS_STORE_DICT'
					and is_read = 1
					and is_write = 1)
			
			</where>  
		union all
		SELECT 
		      mao.group_id, mao.hos_id,mao.copy_code, mao.out_id, to_char(mao.out_no) out_no,mao.brief, 
		      mao.store_id,mao.store_no,hsd.store_code,hsd.store_name,mao.bus_type_code, mbt.bus_type_name,
		      mao.dept_id,mao.dept_no,hdd.dept_code,hdd.dept_name,mao.dept_emp,he.emp_name  dept_emp_name,
		      sum(nvl(mad.amount_money,0)) as amount_money,to_char(mao.out_date,'yyyy-MM-dd') out_date, mao.maker,
		      su.user_name as maker_name,mao.checker,su2.user_name checker_name, 
		      to_char(mao.check_date,'yyyy-MM-dd') check_date,mao.confirmer, 
		      su1.user_name as confirmer_name,to_char(mao.confirm_date,'yyyy-MM-dd') confirm_date,mao.state,
		       case 
					when mao.state = 1 then '未审核'
					when mao.state = 2 then '已审核'
          when mao.state = 3 then '已确认'
				end as state_name
		    FROM mat_affi_out mao
		    LEFT JOIN mat_affi_out_detail mad  on mao.group_id = mad.group_id
		         and mao.hos_id = mad.hos_id
		         and mao.copy_code = mad.copy_code
		         and mao.out_id = mad.out_id
		    LEFT JOIN hos_store_dict hsd on mao.group_id = hsd.group_id
		         and mao.hos_id = hsd.hos_id
		         and mao.store_id = hsd.store_id
		         <if test="show_history == 1">
					and mao.store_no = hsd.store_no
				</if>
				<if test="show_history == 0">
					and hsd.is_stop = 0
				</if>
		         
		    LEFT JOIN mat_bus_type mbt on mao.bus_type_code = mbt.bus_type_code
		         and mbt.is_stop = 0
		    LEFT JOIN sys_user su on mao.group_id = su.group_id
		         and mao.hos_id = su.hos_id
		         and mao.maker = su.user_id
		    LEFT JOIN sys_user su1 on mao.group_id = su1.group_id
		         and mao.hos_id = su1.hos_id
		         and mao.confirmer = su1.user_id
		    left join hos_dept_dict hdd on hdd.dept_id = mao.dept_id
		         and hdd.group_id = mao.group_id 
		         and hdd.hos_id = mao.hos_id	         
		         <if test="show_history == 1">
					and hdd.dept_no = mao.dept_no
				 </if>
				 <if test="show_history == 0">
					and hdd.is_stop = 0
				 </if>
		    left join hos_emp he on he.emp_id = mao.dept_emp 
		         and he.hos_id = mao.hos_id
		         and he.group_id = mao.group_id
		         and he.is_stop = 0
		    left join sys_user su2 on su2.user_id = mao.checker
		         and su2.hos_id = mao.hos_id
		         and su2.group_id = mao.group_id
			<where>
				<if test="group_id != null and group_id != ''">
					AND mao.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND mao.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mao.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="out_dateB != null and out_dateB != ''">
					AND to_char(mao.out_date) &gt;= to_date(#{out_dateB,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="out_dateE != null and out_dateE != ''">
					AND to_char(mao.out_date) &lt;= to_date(#{out_dateE,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateB != null and confirm_dateB != ''">
					AND to_char(mao.confirm_date) &gt;= to_date(#{confirm_dateB,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateE != null and confirm_dateE != ''">
					AND to_char(mao.confirm_date)  &lt;= to_date(#{confirm_dateE,jdbcType=DATE},'yyyy-MM-dd')
				</if> 
				<if test="store_id != null and store_id != '' ">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="dept_id != null and dept_id != '' ">
					AND mao.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="state != null and state != ''">
					AND mao.state = #{state,jdbcType=INTEGER}
				</if>
				<choose>
					<when test="bus_type_code != null and bus_type_code != ''">
					AND mao.bus_type_code = #{bus_type_code,jdbcType=INTEGER}
					</when>
					<otherwise>
						AND mao.bus_type_code in (5,7,9,28,32,33,34)
					</otherwise>
				</choose>
				<if test="out_no != null and out_no != ''">
					AND mao.out_no like '${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					AND mao.brief like '%${brief}%'
				</if>
				<if test="maker != null and maker != ''">
					AND mao.maker = #{maker}
				</if>
				and exists  (select 1
				from v_user_data_perm
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and user_id = #{user_id,jdbcType=INTEGER}
					and to_char(mao.store_id)=perm_code
					and table_code = 'HOS_STORE_DICT'
					and is_read = 1
					and is_write = 1)
			
			</where>   
		   group by  mao.group_id,mao.hos_id,mao.copy_code,mao.out_id,mao.out_no,mao.brief, 
		      mao.store_id,mao.store_no,hsd.store_code,hsd.store_name,mao.bus_type_code,mbt.bus_type_name,mao.dept_id,mao.dept_no,
		      hdd.dept_code,hdd.dept_name,he.emp_name,mao.out_date,mao.maker,su.user_name,mao.checker,su2.user_name,mao.check_date,
		      mao.confirmer,su1.user_name,mao.confirm_date,mao.state,mao.dept_emp
		   order by out_id desc, out_no, out_date
		   
		<!-- with detail_list as (
			SELECT 
		      mao.group_id, mao.hos_id,mao.copy_code, mao.out_id, to_char(mao.out_no) out_no,mao.brief, 
		      mao.store_id,mao.store_no,hsd.store_code,hsd.store_name,mao.bus_type_code, mbt.bus_type_name,
		      mao.dept_id,mao.dept_no,hdd.dept_code,hdd.dept_name,mao.dept_emp,he.emp_name  dept_emp_name,
		      sum(nvl(mad.amount_money,0)) as amount_money,to_char(mao.out_date,'yyyy-MM-dd') out_date, mao.maker,
		      su.user_name as maker_name,mao.checker,su2.user_name checker_name, 
		      to_char(mao.check_date,'yyyy-MM-dd') check_date,mao.confirmer, 
		      su1.user_name as confirmer_name,to_char(mao.confirm_date,'yyyy-MM-dd') confirm_date,mao.state,
		       case 
					when mao.state = 1 then '未审核'
					when mao.state = 2 then '已审核'
          when mao.state = 3 then '已确认'
				end as state_name
		    FROM mat_affi_out mao
		    LEFT JOIN mat_affi_out_detail mad  on mao.group_id = mad.group_id
		         and mao.hos_id = mad.hos_id
		         and mao.copy_code = mad.copy_code
		         and mao.out_id = mad.out_id
		    LEFT JOIN hos_store_dict hsd on mao.group_id = hsd.group_id
		         and mao.hos_id = hsd.hos_id
		         and mao.store_id = hsd.store_id
		         <if test="show_history == 1">
					and mao.store_no = hsd.store_no
				</if>
				<if test="show_history == 0">
					and hsd.is_stop = 0
				</if>
		         
		    LEFT JOIN mat_bus_type mbt on mao.bus_type_code = mbt.bus_type_code
		         and mbt.is_stop = 0
		    LEFT JOIN sys_user su on mao.group_id = su.group_id
		         and mao.hos_id = su.hos_id
		         and mao.maker = su.user_id
		    LEFT JOIN sys_user su1 on mao.group_id = su1.group_id
		         and mao.hos_id = su1.hos_id
		         and mao.confirmer = su1.user_id
		    left join hos_dept_dict hdd on hdd.dept_id = mao.dept_id
		         and hdd.group_id = mao.group_id 
		         and hdd.hos_id = mao.hos_id	         
		         <if test="show_history == 1">
					and hdd.dept_no = mao.dept_no
				 </if>
				 <if test="show_history == 0">
					and hdd.is_stop = 0
				 </if>
		    left join hos_emp he on he.emp_id = mao.dept_emp 
		         and he.hos_id = mao.hos_id
		         and he.group_id = mao.group_id
		         and he.is_stop = 0
		    left join sys_user su2 on su2.user_id = mao.checker
		         and su2.hos_id = mao.hos_id
		         and su2.group_id = mao.group_id
			<where>
				<if test="group_id != null and group_id != ''">
					AND mao.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND mao.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mao.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="out_dateB != null and out_dateB != ''">
					AND to_char(mao.out_date) &gt;= to_date(#{out_dateB,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="out_dateE != null and out_dateE != ''">
					AND to_char(mao.out_date) &lt;= to_date(#{out_dateE,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateB != null and confirm_dateB != ''">
					AND to_char(mao.confirm_date) &gt;= to_date(#{confirm_dateB,jdbcType=DATE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateE != null and confirm_dateE != ''">
					AND to_char(mao.confirm_date)  &lt;= to_date(#{confirm_dateE,jdbcType=DATE},'yyyy-MM-dd')
				</if> 
				<if test="store_id != null and store_id != '' ">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="dept_id != null and dept_id != '' ">
					AND mao.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="state != null and state != ''">
					AND mao.state = #{state,jdbcType=INTEGER}
				</if>
				<choose>
					<when test="bus_type_code != null and bus_type_code != ''">
					AND mao.bus_type_code = #{bus_type_code,jdbcType=INTEGER}
					</when>
					<otherwise>
						AND mao.bus_type_code in (5,7,9,28,32,33,34)
					</otherwise>
				</choose>
				<if test="bus_type_code != null and bus_type_code != ''">
					AND mao.bus_type_code = #{bus_type_code,jdbcType=INTEGER}
				</if>
				<if test="out_no != null and out_no != ''">
					AND mao.out_no like '${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					AND mao.brief like '%${brief}%'
				</if>
					
				and exists  (select 1
				from v_user_data_perm
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and user_id = #{user_id,jdbcType=INTEGER}
					and to_char(mao.store_id)=perm_code
					and table_code = 'HOS_STORE_DICT'
					and is_read = 1
					and is_write = 1)
				添加用户数据权限
				and exists (
					select 1 from v_user_data_perm vudp 
					where mao.group_id=vudp.group_id 
					     and mao.hos_id=vudp.hos_id 
						and mao.store_id=vudp.perm_code
						 and vudp.is_read=1 and vudp.is_write = 1
		      			and vudp.table_code='HOS_STORE_DICT'
						and vudp.user_id=#{user_id}
				)
				<if test="dept_id == '00' ">
					and mm.dept_id in ( select perm_code from v_user_data_perm
						where group_id = #{group_id}
							and hos_id = #{hos_id} 
							and user_id = #{user_id} 
							and table_code = 'HOS_DEPT_DICT'
							and is_read = 1 
							and is_write = 1
					)
				</if>
				<if test="store_id == '00' ">
					and mm.store_id in (
						select perm_code from v_user_data_perm
						where group_id = #{group_id}
							and hos_id = #{hos_id} 
							and user_id = #{user_id} 
							and table_code = 'HOS_STORE_DICT'
							and is_read = 1 
							and is_write = 1 
					)
				</if>
			</where>   
		   group by  mao.group_id,mao.hos_id,mao.copy_code,mao.out_id,mao.out_no,mao.brief, 
		      mao.store_id,mao.store_no,hsd.store_code,hsd.store_name,mao.bus_type_code,mbt.bus_type_name,mao.dept_id,mao.dept_no,
		      hdd.dept_code,hdd.dept_name,he.emp_name,mao.out_date,mao.maker,su.user_name,mao.checker,su2.user_name,mao.check_date,
		      mao.confirmer,su1.user_name,mao.confirm_date,mao.state,mao.dept_emp
	   ),sum_list as(
	   	   select null group_id, null hos_id,null copy_code, null out_id, '合计' out_no,null brief, 
		      null store_id,null store_no,null store_code,null store_name,null bus_type_code, null bus_type_name,
		      null dept_id,null dept_no,null dept_code,null dept_name,null dept_emp,null  dept_emp_name,
		      sum(amount_money) as amount_money,null out_date, null maker,null maker_name,null checker,
		      null checker_name,null check_date,null confirmer, 
		      null confirmer_name,null confirm_date,null state,null as state_name
		    from detail_list
	   )
	   select group_id, hos_id, copy_code, out_id,out_no, brief,
		      store_id,store_no,store_code,store_name,bus_type_code, bus_type_name,
		      dept_id,dept_no,dept_code,dept_name,dept_emp,dept_emp_name,
		      amount_money,out_date,maker,maker_name,checker,checker_name, 
		      check_date,confirmer,confirmer_name,confirm_date,state,state_name
		from detail_list
		union all
		select group_id, hos_id, copy_code, out_id,out_no, brief,
		      store_id,store_no,store_code,store_name,bus_type_code, bus_type_name,
		      dept_id,dept_no,dept_code,dept_name,dept_emp,dept_emp_name,
		      amount_money,out_date,maker,maker_name,checker,checker_name, 
		      check_date,confirmer,confirmer_name,confirm_date,state,state_name
		from sum_list
		order by out_id desc, out_no, out_date -->
	</select>
	
	<!-- 配套导入 查询明细 -->
	<select id="queryMatAffiOutMatchDetail" parameterType="java.util.Map" resultMap="matAffiOutDetail">
		SELECT mdm.group_id , 
			mdm.hos_id, 
			mdm.copy_code, 
			mdm.dept_match_id , 
			mdm.dept_match_name , 
			mdmd.inv_id , 
			mid.inv_code , 
			mid.inv_name , 
			mid.inv_model , 
			mid.unit_code ,
			mid.plan_price price, 
			hu.unit_name , 
			mdm.store_id , 
			hsd.store_no, 
			hsd.store_code , 
			hsd.store_name , 
			mdmd.amount 
	    FROM mat_dept_match_detail mdmd
	    LEFT JOIN mat_dept_match mdm ON mdmd.group_id = mdm.group_id
		    AND mdmd.hos_id = mdm.hos_id
		    AND mdmd.copy_code = mdm.copy_code
		    AND mdmd.dept_match_id = mdm.dept_match_id 
	    LEFT JOIN mat_inv_dict mid ON mdmd.group_id = mid.group_id
		    AND mdmd.hos_id = mid.hos_id
		    AND mdmd.copy_code = mid.copy_code
		    AND mdmd.inv_id = mid.inv_id
		    AND mid.is_stop = 0 
	    LEFT JOIN hos_unit hu ON mid.group_id = hu.group_id
		    AND mid.hos_id = hu.hos_id
		    AND mid.unit_code = hu.unit_code 
	    LEFT JOIN hos_store_dict hsd ON mdm.group_id = hsd.group_id
		    AND mdm.hos_id = hsd.hos_id
		    AND mdm.store_id = hsd.store_id
		    AND hsd.is_stop = 0 
		where mdm.dept_match_id = #{store_match_id}
		      and mdm.store_id = #{store_id}
		      and mid.group_id = #{group_id}
		      and mid.hos_id = #{hos_id}
		      and mid.copy_code = #{copy_code}
		      and mid.is_stop = 0
		order by mid.inv_id
	</select>
	
	<!-- 审核 出库单据 -->
	<update id="auditMatAffiOutCommon" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_affi_out 
			SET  state = 2,
				checker = #{item.user_id},
				check_date = SYSDATE
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	out_id =#{item.out_id,jdbcType=INTEGER}
				
		</foreach>
	</update>
	
	<!-- 取消审核 出库单据 -->
	<update id="unAuditMatAffiOutCommon" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_affi_out 
			SET  state = 1,
				checker = '',
				check_date = ''
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	out_id =#{item.out_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 整单出库  查询主表 -->
	<select id="queryAffiInMain" parameterType="java.util.Map" resultMap="matAffiIn">
		with w_mod as(
			select 
				inv_id,
				batch_sn,
				batch_no,
				bar_code,
				sum(amount) as amount
			from(
				--出库未确认单据
				select 
					inv_id as inv_id,
					batch_sn as batch_sn,
					batch_no as batch_no,
					bar_code as bar_code,
					sum(nvl(amount, 0)) as amount
				from mat_affi_out mom 
				left join mat_affi_out_detail matod
					on mom.group_id = matod.group_id and mom.hos_id = matod.hos_id 
					and mom.copy_code = matod.copy_code and mom.out_id = matod.out_id
				where matod.group_id = #{group_id,jdbcType=INTEGER}
					AND matod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND matod.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[ 
					AND mom.state < 3 
					AND mom.bus_type_code <> '30' 
					]]>
				group by inv_id,batch_sn,batch_no,bar_code
				--退货未确认单据
				union all
				select 
					inv_id as inv_id,
					batch_sn as batch_sn,
					batch_no as batch_no,
					bar_code as bar_code,
					sum(nvl(amount, 0)) as amount
				from mat_affi_in mim 
				left join mat_affi_in_detail matid 
					on mim.group_id = matid.group_id and mim.hos_id = matid.hos_id 
					and mim.copy_code = matid.copy_code and mim.in_id = matid.in_id
				where matid.group_id = #{group_id,jdbcType=INTEGER}
					AND matid.hos_id = #{hos_id,jdbcType=INTEGER}
					AND matid.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mim.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[ 
					AND mim.state < 3 
					]]>
					AND mim.bus_type_code = '29'
				group by inv_id,batch_sn,batch_no,bar_code
			)
			group by inv_id, batch_sn, batch_no, bar_code
			order by inv_id asc
		)
		select mai.group_id, 
	       mai.hos_id, 
	       mai.copy_code, 
	       mai.in_id, 
	       mai.in_no, 
	       mai.brief, 
	       hsd.sup_name, 
	       su.user_name as maker_name, 
	       mai.in_date, 
	       suc.user_name as confirmer_name, 
	       mai.confirm_date, 
	       sum(nvl(maf.left_amount, 0) - nvl(w_mod.amount, 0)) as imme_amount
	    from mat_affi_in mai 
	    left join mat_affi_in_detail maid on mai.group_id = maid.group_id 
	         and mai.hos_id = maid.hos_id
	         and mai.copy_code = maid.copy_code 
	         and mai.in_id = maid.in_id
	    left join mat_affi_fifo maf on mai.group_id = maf.group_id 
	         and mai.hos_id = maf.hos_id
	         and mai.copy_code = maf.copy_code 
	         and mai.store_id = maf.store_id
	         and maid.inv_id = maf.inv_id 
	         and maid.batch_no = maf.batch_no
	         and maid.batch_sn = maf.batch_sn 
	         and maid.bar_code = maf.bar_code
	    left join w_mod 
	    	on maid.inv_id = w_mod.inv_id 
	    	and maid.batch_no = w_mod.batch_no
			and maid.batch_sn = w_mod.batch_sn 
			and maid.bar_code = w_mod.bar_code
	    left join hos_sup_dict hsd on mai.group_id = hsd.group_id 
	         and mai.hos_id = hsd.hos_id
	         and mai.sup_id = hsd.sup_id 
	         and hsd.is_stop = 0
	    left join sys_user su on mai.group_id = su.group_id 
	         and su.hos_id = su.hos_id
	         and mai.maker = su.user_id 
	    left join sys_user suc on mai.group_id = suc.group_id 
	         and mai.hos_id = suc.hos_id
	         and mai.confirmer = suc.user_id
		where   mai.group_id = #{group_id,jdbcType=INTEGER}
			AND mai.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mai.copy_code = #{copy_code,jdbcType=VARCHAR}	
			and mai.state = 3	
			<if test="in_no != null and in_no != ''">
				AND mai.in_no like '%${in_no}%'
			</if>
			<if test="begin_date != null and begin_date != ''">
				<![CDATA[AND mai.in_date >= #{begin_date,jdbcType=DATE}]]>
			</if>
			<if test="end_date != null and end_date != ''">
				<![CDATA[AND mai.in_date <= #{end_date,jdbcType=DATE}]]>
			</if>
		group by mai.group_id, mai.hos_id, mai.copy_code, mai.in_id, mai.in_no, mai.brief, hsd.sup_name,
			su.user_name, mai.in_date, suc.user_name, mai.confirm_date
    		having sum(nvl(maf.left_amount, 0) - nvl(w_mod.amount, 0)) > 0
    	order by mai.in_id
	</select>
	
	<!-- 整单出库  查询明细材料 -->
	<select id="queryAffiInInv" parameterType="java.util.Map" resultMap="matAffiIn">
		select mid.detail_id, mid.inv_id, inv.inv_no, inv.inv_code, inv.inv_name, inv.inv_model, mid.batch_no, 
			mid.batch_sn, mid.bar_code, mid.price, sum(nvl(mfb.left_amount, 0) - nvl(modet.amount, 0)) as imme_amount
		from mat_affi_in_detail mid
		left join mat_affi_fifo mfb
			on mid.group_id = mfb.group_id and mid.hos_id = mfb.hos_id
			and mid.copy_code = mfb.copy_code and mfb.store_id = #{store_id,jdbcType=INTEGER}
			and mid.inv_id = mfb.inv_id and mid.batch_no = mfb.batch_no
			and mid.batch_sn = mfb.batch_sn and mid.bar_code = mfb.bar_code
		left join mat_affi_out_detail modet
			on mid.group_id = modet.group_id and mid.hos_id = modet.hos_id
			and mid.copy_code = modet.copy_code and mid.inv_id = modet.inv_id 
			and mid.batch_no = modet.batch_no and mid.batch_sn = modet.batch_sn 
			and mid.bar_code = modet.bar_code
		left join mat_affi_out mom
			on modet.group_id = mom.group_id and modet.hos_id = mom.hos_id
			and modet.copy_code = mom.copy_code and modet.out_id = mom.out_id
			and mom.store_id = #{store_id,jdbcType=INTEGER} <![CDATA[and mom.state < 3]]>
		left join mat_inv_dict inv
			on mid.group_id = inv.group_id and mid.hos_id = inv.hos_id
			and mid.copy_code = inv.copy_code and mid.inv_id = inv.inv_id
			and inv.is_stop = 0
		where mid.group_id = #{group_id,jdbcType=INTEGER}
			and mid.hos_id = #{hos_id,jdbcType=INTEGER}
			and mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mid.in_id = #{in_id,jdbcType=INTEGER}
		group by mid.detail_id, mid.inv_id, inv.inv_no, inv.inv_code, inv.inv_name, inv.inv_model, 
			mid.batch_no, mid.batch_sn, mid.bar_code, mid.price
		<!-- 如果不显示即时库存为0的材料，取消注释 -->
		--having sum(nvl(mfb.left_amount, 0) - nvl(modet.amount, 0)) > 0
		order by mid.detail_id
		
	</select>
	
	<!-- 整单出库  查询要添加的明细材料 -->
	<select id="queryAffiInWholeDetail" parameterType="java.util.Map" resultMap="matAffiIn">
		with w_mod as(
			select inv_id, batch_sn, batch_no, bar_code, sum(amount) as amount
			from(
				select  inv_id , batch_sn , batch_no , bar_code , sum(nvl(amount, 0)) as amount
				from mat_affi_out mom 
				left join mat_affi_out_detail matod on mom.group_id = matod.group_id and mom.hos_id = matod.hos_id 
					and mom.copy_code = matod.copy_code and mom.out_id = matod.out_id
				where matod.group_id = #{group_id,jdbcType=INTEGER}
					AND matod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND matod.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[ 
						AND mom.state < 3 
						AND mom.bus_type_code <> '30' 
					]]>
				group by inv_id,batch_sn,batch_no,bar_code
				union all
				select inv_id , batch_sn , batch_no , bar_code , sum(nvl(amount, 0)) as amount
				from mat_affi_in mim 
				left join mat_affi_in_detail matid on mim.group_id = matid.group_id and mim.hos_id = matid.hos_id 
					and mim.copy_code = matid.copy_code and mim.in_id = matid.in_id
				where matid.group_id = #{group_id,jdbcType=INTEGER}
					AND matid.hos_id = #{hos_id,jdbcType=INTEGER}
					AND matid.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mim.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[ 
						AND mim.state < 3 
					]]>
					AND mim.bus_type_code = '29'
				group by inv_id,batch_sn,batch_no,bar_code
			)
			group by inv_id, batch_sn, batch_no, bar_code
			order by inv_id asc
		), 
		w_midet as(  
			select maid.inv_id, mid.inv_no,  mid.inv_code,mid.inv_name, mtd.mat_type_name, 
	             mid.inv_model,hu.unit_name,maid.batch_no, maid.batch_sn,maid.bar_code,maid.price, 
	             nvl(maid.sale_price, 0) as sale_price, 
	             nvl(maid.sell_price, 0) as sell_price, 
	             maid.inva_date,maid.disinfect_date,hfd.fac_name,maid.location_id,mld.location_code, mld.location_name, 
	             sum(nvl(maf.left_amount, 0)) as cur_amount, 
	             sum(nvl(maf.left_amount, 0) - nvl(w_mod.amount, 0)) as imme_amount, 
	             sum(nvl(maf.left_amount, 0) - nvl(w_mod.amount, 0)) as amount, 
	             hsd.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name
			from mat_affi_in_detail maid
			left join mat_affi_fifo maf on maid.group_id = maf.group_id 
	           and maid.hos_id = maf.hos_id
	           and maid.copy_code = maf.copy_code 
	           and maf.store_id = #{store_id,jdbcType=INTEGER}
	           and maid.inv_id = maf.inv_id 
	           and maid.batch_no = maf.batch_no
	           and maid.batch_sn = maf.batch_sn 
	           and maid.bar_code = maf.bar_code
			left join w_mod on maid.inv_id = w_mod.inv_id 
				and maid.batch_no = w_mod.batch_no
				and maid.batch_sn = w_mod.batch_sn 
				and maid.bar_code = w_mod.bar_code
			left join mat_inv_dict mid on maid.group_id = mid.group_id 
	           and maid.hos_id = mid.hos_id
	           and maid.copy_code = mid.copy_code 
	           and maid.inv_id = mid.inv_id
	           and mid.is_stop = 0
	      left join mat_type_dict mtd on maid.group_id = mtd.group_id 
	           and maid.hos_id = mtd.hos_id
	           and maid.copy_code = mtd.copy_code 
	           and mid.mat_type_id = mtd.mat_type_id
	           and mtd.is_stop = 0
	      left join hos_fac_dict hfd on maid.group_id = hfd.group_id and maid.hos_id = hfd.hos_id
	        and mid.fac_id = hfd.fac_id and mid.fac_no = hfd.fac_no
	      LEFT JOIN hos_unit hu  ON maid.group_id = hu.group_id  and maid.hos_id = hu.hos_id 
	           and mid.unit_code = hu.unit_code
	           and hu.is_stop = 0 
	      LEFT JOIN mat_location_dict mld  on maid.group_id = mld.group_id and maid.hos_id = mld.hos_id 
	           and maid.copy_code = mld.copy_code and maid.location_id = mld.location_id and mld.is_stop=0
	       left join hos_sup_dict  hsd on maid.group_id=hsd.group_id and maid.hos_id=hsd.hos_id
			   and maf.sup_id=hsd.sup_id
			   and hsd.is_stop=0
	      where maid.group_id = #{group_id,jdbcType=INTEGER}
	            and maid.hos_id = #{hos_id,jdbcType=INTEGER}
	            and maid.copy_code = #{copy_code,jdbcType=VARCHAR} 
	            <if test="sql!= null and sql != ''">
	                ${sql}
	            </if>
	      group by maid.inv_id, mid.inv_no, mid.inv_code, mid.inv_name, mtd.mat_type_name, mid.inv_model, 
	      	hu.unit_name, maid.batch_no, maid.batch_sn, maid.bar_code, maid.price, maid.sale_price, 
	        maid.sell_price, maid.inva_date, maid.disinfect_date, hfd.fac_name, maid.location_id, 
	        mld.location_code, mld.location_name, hsd.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name
	      having sum(nvl(maf.left_amount, 0) - nvl(w_mod.amount, 0)) > 0
	      order by mid.inv_code, maid.inva_date, maid.bar_code, maid.batch_sn
	    )
	    select inv_id, 
	    	inv_no, 
	    	inv_code, 
	    	inv_name, 
	    	mat_type_name, 
	    	inv_model, 
	    	unit_name, 
	    	batch_no, 
	      	bar_code, 
	      	price, 
	      	sale_price, 
	      	sell_price, 
	      	inva_date, 
	      	disinfect_date, 
	      	fac_name, 
	      	location_id, 
	      	location_code, 
	      	location_name, 
	      	sum(cur_amount) cur_amount, 
	      	sum(imme_amount) as imme_amount, 
	      	sum(amount) amount, 
	      	sum(amount * price) as amount_money, 
	      	sum(amount * sale_price) as sale_money, 
	      	sum(amount * sell_price) as sell_money, 
	      	sum(amount) sum_amount,
		      '['||to_char(wm_concat('{"inv_id":'||inv_id||',"inv_code":"'||to_char(inv_code)||'","inv_name":"'||to_char(inv_name)
		      ||'","batch_sn":'||batch_sn||',"cur_amount":'||cur_amount
		      ||',"imme_amount":'||imme_amount||',"amount":'||amount
		      ||',"price":'||price||',"amount_money":'||(amount * price)
		      ||',"sale_price":'||sale_price||',"sale_money":'||(amount * sale_price)
		      ||',"sell_price":'||sell_price||',"sell_money":'||(amount * sell_price)
		      ||'}'))||']' inv_detail_data, sup_id,sup_no,sup_code,sup_name
	    from w_midet
	    group by inv_id, inv_no, inv_code, inv_name, mat_type_name, inv_model, unit_name, batch_no, bar_code, 
	    	price, sale_price, sell_price, inva_date, disinfect_date, fac_name, location_id, location_code, 
	    	location_name,sup_id,sup_no,sup_code,sup_name
	</select>
	
	<!--代销出库 查询材料即时库存  -->
	<select id="queryMatAffiOutByInvHold" parameterType="java.util.Map" resultMap="matAffiOutDetail">
		with w_maih as (
		  select distinct
		      maih.group_id,
		      maih.hos_id,
		      maih.copy_code,
		      maih.cur_amount,--当前库存数量
		      maih.cur_money,--当前库存金额
		      maih.inv_id,
		      mid.inv_no,
		      mid.inv_code,
		      mid.inv_name,
		      mid.inv_model,
		      mid.plan_price,--计划价
		      mid.is_charge,
		      mid.fac_id,
		      mid.fac_no,
		      mid.unit_code,
		      hu.unit_name,--计量单位
		      hfd.fac_code,
		      hfd.fac_name
		    from mat_affi_inv_hold maih
		    left join mat_inv_dict mid on maih.group_id = mid.group_id 
		         and maih.hos_id = mid.hos_id 
		         and maih.copy_code = mid.copy_code 
		         and maih.inv_id = mid.inv_id 
		         and mid.is_stop = 0
		    left join hos_unit hu on mid.group_id = hu.group_id 
		         and mid.hos_id = hu.hos_id 
		         and mid.unit_code = hu.unit_code 
		         and hu.is_stop = 0
		    left join hos_fac_dict hfd on mid.group_id = hfd.group_id 
		         and mid.hos_id = hfd.hos_id 
		         and mid.fac_id = hfd.fac_id 
		         and mid.fac_no = hfd.fac_no
		    where maih.group_id = #{group_id,jdbcType=INTEGER}
		          and maih.hos_id = #{group_id,jdbcType=INTEGER}
		          and maih.copy_code = #{copy_code,jdbcType=VARCHAR}
		          <if test="store_id != null and store_id != ''">
					AND maih.store_id = #{store_id,jdbcType=INTEGER}
				  </if>
		          <if test="inv_id != null and inv_id != ''">
					AND maih.inv_id = #{inv_id,jdbcType=INTEGER}
				  </if>
		          <if test="inv_no != null and inv_no != ''">
					AND mid.inv_no = #{inv_no,jdbcType=INTEGER}
				  </if>
				  and mid.is_com = 1
		    order by maih.inv_id asc
		),
		w_maod as (
		    select  inv_id as inv_id,
		    nvl(sum(amount),0) as instant_amount ,--出库未确认的材料数量
		    nvl(sum(amount_money),0) as instant_amount_money
		    from mat_affi_out_detail maod
		    left join mat_affi_out mao on maod.out_id = mao.out_id
		    	and maod.hos_id = mao.hos_id
		    	and maod.group_id = mao.group_id
		    	and maod.copy_code = mao.copy_code
		    	and mao.state &lt; 3
		    where maod.group_id = #{group_id,jdbcType=INTEGER}
		         and maod.hos_id = #{hos_id,jdbcType=INTEGER}
		         and maod.copy_code = #{copy_code,jdbcType=VARCHAR}
		         <if test="store_id != null and store_id != ''">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				 </if>
				 <if test="inv_id != null and inv_id != ''">
					AND maod.inv_id = #{inv_id,jdbcType=INTEGER}
				 </if>
				 <if test="inv_no != null and inv_no != ''">
					AND maod.inv_no = #{inv_no,jdbcType=INTEGER}
				 </if>
		    group by inv_id--,amount,amount_money
		    order by maod.inv_id asc
		)
		
		select 
			w_maih.group_id as group_id,
			w_maih.hos_id as hos_id,
			w_maih.copy_code as copy_code,
			w_maih.cur_amount as left_amount,--当前库存数量
			w_maih.cur_money as left_money,--当前库存金额
			w_maih.inv_no as  inv_no,
			w_maih.inv_code as inv_code,
			w_maih.inv_name as inv_name,
			w_maih.inv_model as inv_model,
			w_maih.plan_price as plan_price,--计划价
			w_maih.is_charge as is_charge,
			w_maih.fac_id as fac_id,
			w_maih.fac_no as fac_no,
			w_maih.unit_code as unit_code,
			w_maih.unit_name as unit_name,--计量单位
			w_maih.fac_code as fac_code,
			w_maih.fac_name as fac_name,
			nvl(w_maih.cur_amount,0) - nvl(w_maod.instant_amount,0) as instant_amount ,--即时库存
			nvl(w_maih.cur_money,0) - nvl(w_maod.instant_amount_money,0) as instant_amount_money,--即时
			w_maih.inv_id as inv_id
		from w_maih w_maih
		left join w_maod w_maod on w_maih.inv_id = w_maod.inv_id
		order by w_maih.inv_id
	</select>
	
	<!-- 代销出库  查询 mat_affi_fifo 查有批次结存表 -->
	<select id="queryMatAffiOutByFifoBalance" parameterType="java.util.Map"  resultMap="matAffiOutDetail">
		with w_maf as (
		    select distinct
		        maf.group_id as group_id,
		        maf.hos_id as hos_id,
		        maf.copy_code as copy_code,
		        maf.left_amount as left_amount,--当前库存数量
		        maf.left_money as left_money,--当前库存金额
		        maf.batch_sn as batch_sn, --批次
		        maf.batch_no as batch_no,--批号
		        maf.bar_code as bar_code,--条形码
		        maf.price as price,--单价
		        maf.inv_id as inv_id,--物资材料ID
		        maf.location_id as location_id,--货位ID
		        mld.location_code as location_code,--货位编码
		        mld.location_name as location_name,--货位名称
		        mid.inv_no as  inv_no,--材料变更号
		        mid.inv_code as inv_code,--材料编码
		        mid.inv_name as inv_name,--材料名称
		        mid.inv_model as inv_model,--规格型号
		        mid.unit_code as unit_code,--计量单位编码
		        mid.sell_price as sell_price,--零售单价
		        hu.unit_name as unit_name,--计量单位名称
		        mbv.inva_date as inva_date--有效期
		    from mat_affi_fifo maf    
		    left join mat_inv_dict mid on maf.group_id = mid.group_id 
		         and maf.hos_id = mid.hos_id 
		         and maf.copy_code = mid.copy_code 
		         and maf.inv_id = mid.inv_id 
		         and mid.is_stop = 0
		    left join mat_location_dict mld on maf.group_id = mld.group_id 
		         and maf.hos_id = mld.hos_id 
		         and maf.copy_code = mld.copy_code 
		         and maf.location_id = mld.location_id 
		         and mld.is_stop = 0
		    left join mat_batch_validity mbv on maf.group_id = mbv.group_id 
		         and maf.hos_id = mbv.hos_id 
		         and maf.copy_code = mbv.copy_code 
		         and maf.inv_id = mbv.inv_id 
		         and maf.batch_no = mbv.batch_no
		    left join hos_unit hu on mid.group_id = hu.group_id 
		         and mid.hos_id = hu.hos_id 
		         and mid.unit_code = hu.unit_code 
		         and hu.is_stop = 0
		    where maf.group_id = #{group_id,jdbcType=INTEGER}
		         and maf.hos_id = #{hos_id,jdbcType=INTEGER}
		         and maf.copy_code = #{copy_code,jdbcType=VARCHAR}
		         and maf.left_amount &gt; 0
		         <if test="store_id != null and store_id != ''">
					AND maf.store_id = #{store_id,jdbcType=INTEGER}
				 </if>
		         <if test="inv_id != null and inv_id != ''">
					AND maf.inv_id = #{inv_id,jdbcType=INTEGER}
				 </if>
		         <if test="inv_no != null and inv_no != ''">
					AND mid.inv_no = #{inv_no,jdbcType=INTEGER}
				 </if>
				 <if test="batch_no != null and batch_no != ''">
					AND maf.batch_no = #{batch_no,jdbcType=VARCHAR}
				 </if>
				 <if test="batch_sn != null and batch_sn != ''">
					AND maf.batch_sn = #{batch_sn,jdbcType=INTEGER}
				 </if>
				 and mid.is_com = 1 
		    order by maf.inv_id asc
		
		),
		w_maod as (
		    select 
		        inv_id as inv_id,
		        batch_sn as batch_sn, --批次
		        batch_no as batch_no,--批号
		        bar_code as bar_code,--条形码
		        sum(nvl(amount,0)) as instant_amount ,--出库未确认的单据
		        sum(nvl(amount_money,0)) as instant_amount_money    
		    from mat_affi_out_detail maod
		    left join mat_affi_out mao on maod.out_id = mao.out_id
		    	and maod.hos_id = mao.hos_id 
		    	and maod.group_id = mao.group_id
		    	and maod.copy_code = mao.copy_code
		    	and mao.state &lt; 3 
		    where  maod.group_id = #{group_id,jdbcType=INTEGER}
		         and maod.hos_id = #{hos_id,jdbcType=INTEGER}
		         and maod.copy_code = #{copy_code,jdbcType=VARCHAR}
		         <if test="store_id != null and store_id != ''">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				 </if>
		         <if test="inv_id != null and inv_id != ''">
					AND maod.inv_id = #{inv_id,jdbcType=INTEGER}
				 </if>
		         <if test="inv_no != null and inv_no != ''">
					AND maod.inv_no = #{inv_no,jdbcType=INTEGER}
				 </if> 
				 <if test="batch_no != null and batch_no != ''">
					AND maod.batch_no = #{batch_no,jdbcType=VARCHAR}
				 </if>
				 <if test="batch_sn != null and batch_sn != ''">
					AND maod.batch_sn = #{batch_sn,jdbcType=INTEGER}
				 </if>     
		    group by inv_id,batch_sn,batch_no,bar_code         
		    order by maod.inv_id asc
		)
		
		  select 
		      w_maf.group_id as group_id,
		      w_maf.hos_id as hos_id,
		      w_maf.copy_code as copy_code,
		      w_maf.left_amount as left_amount,--当前库存数量
		      w_maf.left_money as left_money,--当前库存金额
		      w_maf.batch_sn as batch_sn, --批次
		      w_maf.batch_no as batch_no,--批号
		      w_maf.bar_code as bar_code,--条形码
		      w_maf.price as price,--单价
		      w_maf.inv_id as inv_id,--物资材料ID
		      w_maf.inv_no as  inv_no,--材料变更号
		      w_maf.inv_code as inv_code,--材料编码
		      w_maf.inv_name as inv_name,--材料名称
		      w_maf.inv_model as inv_model,--规格型号
		      w_maf.unit_code as unit_code,--计量单位编码
		      w_maf.unit_name as unit_name,--计量单位名称
		      w_maf.sell_price as sell_price,--零售单价
		      w_maf.inva_date as inva_date,--有效期
		      w_maf.location_id as location_id,--货位ID
		      w_maf.location_code as location_code,--货位编码
		      w_maf.location_name as location_name,--货位名称
		      nvl(w_maf.left_amount,0) - nvl(w_maod.instant_amount,0) as instant_amount ,
		      nvl(w_maf.left_money,0) - nvl(w_maod.instant_amount_money,0) as instant_amount_money
		  from w_maf w_maf
		  left join w_maod w_maod on w_maf.inv_id = w_maod.inv_id 
		       and  w_maf.batch_sn= w_maod.batch_sn 
		       and w_maf.batch_no= w_maod.batch_no 
		       and w_maf.bar_code= w_maod.bar_code
		  order by w_maf.inv_id
	</select>
	
	<!-- 被冲销的主表数据  -->
	<select id="queryMainByCodeOffSet" parameterType="java.util.Map" resultMap="matAffiOutMain">
		select a.group_id,
		       a.hos_id,
		       a.copy_code,
		       a.out_id,
		       a.out_no,
		       a.year,
		       a.month,
		       a.bus_type_code,
		       a.store_id,
		       a.store_no,
		       a.brief,
		       a.dept_id,
		       a.dept_no,
		       a.dept_emp,
		       a.batch_flag,
		       1 state,
		       a.his_flag,
		       a.use_state,
		       a.is_dir
		from mat_affi_out a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		      and a.hos_id = #{hos_id,jdbcType=INTEGER}
		      and a.copy_code = #{copy_code,jdbcType=VARCHAR}
     		  and a.out_id = #{out_id,jdbcType=INTEGER}
			
	</select>
	
	<!-- 被冲销的明细表数据  -->
	<select id="queryDetailByCodeOffSet" parameterType="java.util.Map" resultMap="matAffiOutDetail">
		SELECT 
			maod.group_id, 
			maod.hos_id, 
			maod.copy_code, 
			#{out_idNew,jdbcType=INTEGER} out_id,
			maod.inv_id, 
			maod.inv_no, 
			nvl(maod.amount,0)*(-1) amount, 
			maod.price,
			nvl(maod.amount_money,0)*(-1) amount_money,
			maod.batch_no, 
			maod.batch_sn,
			maod.sell_price, 
			maod.sell_money, 
			maod.pack_code, 
			maod.num_exchange, 
			maod.num,
			maod.pack_price,
			maod.bar_code,
			maod.is_per_bar,
			maod.sn, 
			maod.inva_date, 
			maod.disinfect_date, 
			maod.location_id, 
			maod.note
			FROM mat_affi_out_detail maod
			WHERE maod.group_id = #{group_id,jdbcType=INTEGER} 
				AND maod.hos_id = #{hos_id,jdbcType=INTEGER} 
				AND maod.copy_code = #{copy_code,jdbcType=VARCHAR} 
				AND maod.out_id = #{out_id,jdbcType=INTEGER} 
			order by maod.out_id,maod.detail_id
	</select>
	
	<!-- 下一张单据ID -->
	<select id="queryAffiNextOutId" parameterType="java.util.Map" resultType="java.lang.String">
		select  min(a.out_id) out_idNext
          from mat_affi_out a 
          join (  
               select  mao.group_id,  mao.hos_id,  mao.copy_code,  mao.year,  mao.month, mao.out_id,mao.bus_type_code
               from mat_affi_out mao
               where mao.group_id = #{group_id,jdbcType=INTEGER} 
                 and mao.hos_id = #{hos_id,jdbcType=INTEGER} 
                 and mao.copy_code = #{copy_code,jdbcType=VARCHAR}
                 and mao.out_id = #{out_id,jdbcType=INTEGER}
                 and mao.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
         ) b on a.group_id = b.group_id 
               and a.hos_id = b.hos_id 
               and a.copy_code = b.copy_code 
               and a.year = b.year 
               and a.month = b.month 
               and a.out_id &gt; b.out_id
               and a.bus_type_code = b.bus_type_code
               group by a.group_id ,a.hos_id,a.copy_code,a.year,a.month
	</select>
	
	
	<!-- 上一张单据ID -->
	<select id="queryAffiUpOutId" parameterType="java.util.Map" resultType="java.lang.String">
		select  max(a.out_id) out_idUp
	    from mat_affi_out a 
	    join (
	       select  mao.group_id, mao.hos_id,mao.copy_code,mao.year,mao.month,mao.out_id,mao.bus_type_code
	        from mat_affi_out mao
	       where mao.group_id = #{group_id,jdbcType=INTEGER}   
	       		and mao.hos_id = #{hos_id,jdbcType=INTEGER}  
	       		and mao.copy_code = #{copy_code,jdbcType=VARCHAR}
	       		and mao.out_id = #{out_id,jdbcType=INTEGER}
	       		and mao.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
	    ) b on a.group_id = b.group_id 
	      and a.hos_id = b.hos_id 
	      and a.copy_code = b.copy_code 
	      and a.year = b.year 
	      and a.month = b.month 
	      and a.out_id &lt; b.out_id
	      and a.bus_type_code = b.bus_type_code
	      group by a.group_id ,a.hos_id,a.copy_code,a.year,a.month
	</select>
	
	<!-- 获取所选确认单据中的明细材料 -->
	<select id="queryMatAffiOutDetailForConfirm" parameterType="java.util.List" resultMap="matAffiOutDetail">
		SELECT 
			a.group_id, 
			a.hos_id, 
			a.copy_code,
			<!-- 如果确认日期走编制日期则放开注释
			a.year, 
			a.month, 
			 --> 
			a.store_id, 
			b.inv_id, 
			c.inv_code, 
			c.inv_name, 
			b.price, 
			b.batch_sn, 
			b.batch_no,
			b.price, 
			sum(b.amount) as amount, 
			sum(b.amount_money) as amount_money, 
			nvl(b.sell_price, 0) as sell_price, 
			sum(nvl(b.sell_money, 0)) sell_money, 
			nvl(b.sale_price, 0) as sale_price, 
			sum(nvl(b.sale_money, 0)) as sale_money,
			b.bar_code, 
			b.inva_date, 
			b.disinfect_date, 
			b.location_id
		FROM mat_affi_out a
		LEFT JOIN mat_affi_out_detail b on a.group_id = b.group_id 
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code 
			and a.out_id = b.out_id
		LEFT JOIN mat_inv_dict c on b.group_id = c.group_id 
			and b.hos_id = c.hos_id
			and b.copy_code = c.copy_code 
			and b.inv_id = c.inv_id
			and c.is_stop = 0 
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			a.group_id = #{item.group_id,jdbcType=INTEGER}
			and a.hos_id = #{item.hos_id,jdbcType=INTEGER}
			and a.copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and a.out_id = #{item.out_id,jdbcType=INTEGER}
		</foreach>
		group by a.group_id, a.hos_id, a.copy_code, a.store_id, 
			<!-- 如果确认日期走编制日期则放开注释
			a.year, 
			a.month, 
			 --> 
			b.inv_id, c.inv_code, c.inv_name, b.batch_sn, b.batch_no, b.price, 
			b.sell_price, b.sale_price, b.bar_code, b.inva_date, b.disinfect_date, b.location_id
		order by b.inv_id asc
	</select>
	<!-- 查询材料的及时库存 -->
	<select id="queryAmountByInvId" parameterType="java.util.Map"  resultMap="matAffiOutDetail" >
		select 
			matod.inv_id as inv_id,
			matod.batch_sn as batch_sn,
			matod.batch_no as batch_no,
			matod.bar_code as bar_code,
			sum(nvl(matod.amount,0)) as imme_amount,
			sum(nvl(mfb.left_amount,0)) as left_amount
		from mat_affi_out_detail matod
		left join mat_affi_fifo mfb on matod.group_id = mfb.group_id 
			and matod.copy_code = mfb.copy_code 
			and matod.hos_id = mfb.hos_id
	     	and matod.inv_id = mfb.inv_id 
	     	and matod.batch_sn = mfb.batch_sn 
	     	and matod.batch_no = mfb.batch_no 
	     	and matod.bar_code = mfb.bar_code
		<where>                     
			<if test="group_id != null ">
				AND matod.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null ">
				AND matod.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND matod.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null ">
				AND matod.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="inv_no != null ">
				AND matod.inv_no = #{inv_no,jdbcType=INTEGER}
			</if>
			<if test="batch_sn != null ">
				AND matod.batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="batch_no != null  and batch_no != '' ">
				AND matod.batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="bar_code != null  and bar_code != '' ">
				AND matod.bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
		</where>   
		group by matod.inv_id,matod.batch_sn,matod.batch_no,matod.bar_code
		order by matod.inv_id asc
	</select>
	
	 <!-- 入库主表模板打印 -->
	<select id="queryMatAffiOutPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
			a.out_no as OUT_NO,
			b.bus_type_name as BUS_TYPE_CODE ,
			<!-- c.emp_name as DEPT_NAME,  -->
			d.store_code as STORE_CODE,
			d.store_name as STORE_NAME,
			e.user_name as MAKER,
			to_char(a.out_date, 'yyyy-MM-dd hh24:mi:ss') as OUT_DATE,
			f.user_name as CHECKER,
			to_char(a.check_date, 'yyyy-MM-dd hh24:mi:ss') as CHECK_DATE,
			g.user_name as CONFIRMER,
			to_char(a.confirm_date, 'yyyy-MM-dd hh24:mi:ss') as CONFIRM_DATE,
			a.brief as BRIEF,
			h.dept_code as DEPT_CODE,
			h.dept_name as DEPT_NAME,
			i.proj_name as PROJ_NAME,
			j.use_name as USE_NAME,
			SUM(maod.AMOUNT_MONEY) MONEY_SUM,  --合计金额
			SUM(maod.AMOUNT_MONEY) MONEY_SUM_UPPER,  --合计金额大写
			SUM(nvl(maod.amount,0)) AMOUNT_SUM
		from mat_affi_out a
		left join mat_affi_out_detail maod 
			on a.group_id = maod.group_id and a.hos_id = maod.hos_id 
			and a.copy_code = maod.copy_code and a.out_id = maod.out_id  
		left join mat_bus_type b on a.bus_type_code=b.bus_type_code
		left join hos_emp c on a.dept_emp=c.emp_id and a.group_id=c.group_id and a.hos_id=c.hos_id 
		left join hos_store_dict d on a.store_id=d.store_id and a.store_no=d.store_no and a.group_id=d.group_id and a.hos_id=d.hos_id
		left join sys_user e on a.maker=e.user_id and a.group_id=e.group_id and a.hos_id=e.hos_id 
		left join sys_user f on a.checker=f.user_id and a.group_id=f.group_id and a.hos_id=f.hos_id 
		left join sys_user g on a.confirmer=g.user_id and a.group_id=g.group_id and a.hos_id=g.hos_id 
		left join hos_dept_dict h on a.dept_id=h.dept_id and h.is_Stop=0 and a.group_id=h.group_id and a.hos_id=h.hos_id
		left join hos_proj_dict i on a.proj_id =i.proj_id and i.is_stop=0 and  a.group_id=i.group_id and a.hos_id=i.hos_id
		left join mat_out_use j on a.use_code=j.use_code and  a.group_id=j.group_id and a.hos_id=j.hos_id and a.copy_code=j.copy_code
		
		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.out_id=#{out_id,jdbcType=NUMERIC}
		group by a.out_no, b.bus_type_name, c.emp_name, d.store_code, d.store_name, e.user_name, 
			a.out_date, f.user_name, a.check_date, g.user_name, a.confirm_date, a.brief, h.dept_code, h.dept_name,
			i.proj_name, j.use_name
	</select>
	
	<select id="queryMatAffiOutPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		select a.out_id as id,
      a.out_no as OUT_NO,
      b.bus_type_name as BUS_TYPE_CODE ,
      c.emp_name as DEPT_EMP, 
      d.store_code as STORE_CODE,
      d.store_name as STORE_NAME,
      e.user_name as MAKER,
      to_char(a.out_date, 'yyyy-MM-dd hh24:mi:ss') as OUT_DATE,
      f.user_name as CHECKER,
      to_char(a.check_date, 'yyyy-MM-dd hh24:mi:ss') as CHECK_DATE,
      g.user_name as CONFIRMER,
      to_char(a.confirm_date, 'yyyy-MM-dd hh24:mi:ss') as CONFIRM_DATE,
      a.brief as BRIEF,
      h.dept_code as DEPT_CODE,
      h.dept_name as DEPT_NAME,
      i.proj_name as PROJ_NAME,
      j.use_name as USE_NAME,
     SUM(maod.AMOUNT_MONEY) as MONEY_SUM,  --合计金额
      SUM(maod.AMOUNT_MONEY) MONEY_SUM_UPPER,  --合计金额大写
      sum(nvl(maod.amount,0)) AMOUNT_SUM
    from mat_affi_out a
    left join mat_affi_out_detail maod 
      on a.group_id = maod.group_id and a.hos_id = maod.hos_id 
      and a.copy_code = maod.copy_code and a.out_id = maod.out_id  
    left join mat_bus_type b on a.bus_type_code=b.bus_type_code
    left join hos_emp c on a.dept_emp=c.emp_id and a.group_id=c.group_id and a.hos_id=c.hos_id 
    left join hos_store_dict d on a.store_id=d.store_id and a.store_no=d.store_no and a.group_id=d.group_id and a.hos_id=d.hos_id
    left join sys_user e on a.maker=e.user_id and a.group_id=e.group_id and a.hos_id=e.hos_id 
    left join sys_user f on a.checker=f.user_id and a.group_id=f.group_id and a.hos_id=f.hos_id 
    left join sys_user g on a.confirmer=g.user_id and a.group_id=g.group_id and a.hos_id=g.hos_id 
    left join hos_dept_dict h on a.dept_id=h.dept_id and a.dept_no =h.dept_no and a.group_id=h.group_id and a.hos_id=h.hos_id
    left join hos_proj_dict i on a.proj_id =i.proj_id and i.is_stop=0 and  a.group_id=i.group_id and a.hos_id=i.hos_id
    left join mat_out_use j on a.use_code=j.use_code and  a.group_id=j.group_id and a.hos_id=j.hos_id and a.copy_code=j.copy_code
		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				and a.out_id in  (${paraId})
		group by a.out_id, a.out_no, b.bus_type_name, c.emp_name, d.store_code, d.store_name, e.user_name, 
			a.out_date, f.user_name, a.check_date, g.user_name, a.confirm_date, a.brief, h.dept_code, h.dept_name,
			i.proj_name, j.use_name
		order by a.out_id	
	</select>
	
	
	<!-- 入库明细表模板打印 -->
	<select id="queryMatAffiOutPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		select a.out_id as id,
		b.inv_code as INV_CODE,
		b.inv_name as INV_NAME,
		b.inv_model as INV_MODEL,
		c.unit_name as UNIT_CODE,
		a.price as PRICE,
		a.amount as AMOUNT,
		a.amount_money as MONEY,
		d.fac_name as FAC_NAME,
		a.note as NOTE,
		e.pack_name as PACK_CODE,
		a.num_exchange as NUM_EXCHANGE,
		a.num as NUM ,
		a.batch_sn as BATCH_SN,
		a.BATCH_NO as BATCH_NO,
		a.BAR_CODE as BAR_CODE,
		to_char(a.INVA_DATE,'yyyy-MM-dd') as INVA_DATE,
		ld.LOCATION_NAME as LOCATION_NAME,
		to_char(a.DISINFECT_DATE,'yyyy-MM-dd') as DISINFECT_DATE,
		a.SALE_PRICE as SALE_PRICE,
		a.SALE_MONEY as SALE_MONEY,
		a.SELL_PRICE as SELL_PRICE,
		a.SELL_MONEY as SELL_MONEY,
		a.ALLOT_PRICE as ALLOT_PRICE,
		a.ALLOT_MONEY as ALLOT_MONEY

		 from 
		mat_affi_out_detail a 
		left join mat_inv_dict b on a.inv_id=b.inv_id and a.inv_no=b.inv_no and a.group_id=b.group_id and a.hos_id =b.hos_id and a.copy_code=b.copy_code
		left join hos_unit c on b.unit_code=c.unit_code and a.group_id=c.group_id and a.hos_id =c.hos_id
		left join hos_fac_dict d on b.fac_id=d.fac_id and a.group_id=d.group_id and a.hos_id =d.hos_id and b.fac_no=d.fac_no
		left join hos_package e on a.pack_code=e.pack_code and a.group_id=e.group_id and a.hos_id =e.hos_id
		left JOIN mat_location_dict ld ON a.group_id = ld.group_id AND a.hos_id = ld.hos_id AND a.copy_code = ld.copy_code AND a.location_id = ld.location_id 
		

		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="p_num ==1">
				and a.out_id in (${paraId})
				
			</if>
			<if test="p_num ==0">
				and a.out_id =#{out_id,jdbcType=NUMERIC}
			</if>	
			  	order by a.out_id, a.detail_id desc	

	</select>
	
	
	<!-- 获取材料批次信息 -->
	<select id="queryMatAffiInvBatchList" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		with inv_temp as (
			select 
				a.group_id,
				a.hos_id,
				a.copy_code,
				a.inv_id,  --材料ID
				e.inv_no,  -- 材料变更号
				e.inv_code,  --材料编码
				e.inv_name,  --材料名称
				e.inv_model,  --规格型号
				h.unit_name,  --计量单位
				f.mat_type_name,  --材料类别名称
				g.fac_name,  --生成产商名称
				e.spell_code,  --拼音码
				e.wbx_code,  --五笔码
				a.batch_no,  --批号
				sum(nvl(a.left_amount, 0)) as left_amount,  --当前库存数量
				sum(nvl(a.left_money, 0)) as left_money,  --当前库存数量
				a.price,  --单价
				nvl(a.sale_price, 0) as sale_price,  --批发单价
				nvl(e.sell_price, 0) as sell_price,  --零售单价
				e.alias
			from mat_affi_fifo a
			left join mat_inv_dict e
				on a.group_id = e.group_id and a.hos_id = e.hos_id
				and a.copy_code = e.copy_code and a.inv_id = e.inv_id
				and e.is_stop = 0 
			left join mat_type_dict f
				on a.group_id = f.group_id and a.hos_id = f.hos_id
				and a.copy_code = f.copy_code and e.mat_type_id = f.mat_type_id
				and f.is_stop = 0
			left join hos_fac_dict g
				on a.group_id = g.group_id and a.hos_id = g.hos_id
				and e.fac_id = g.fac_id and e.fac_no=g.fac_no
			left join hos_unit h
				on a.group_id = h.group_id and a.hos_id = h.hos_id
				and e.unit_code = h.unit_code 
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.store_id = #{store_id,jdbcType=INTEGER}
				<if test=" mat_type_code != null and mat_type_code != '' ">
				and f.mat_type_code like '${mat_type_code}%'
				</if>
			group by a.group_id, a.hos_id, a.copy_code, a.inv_id, e.inv_no, e.inv_code, e.inv_name, e.spell_code, e.alias, 
				e.wbx_code, a.batch_no, a.price, a.sale_price, e.sell_price, e.inv_model, f.mat_type_name, g.fac_name, h.unit_name
		),
		out_temp as (  
			select inv_id, batch_no, price, sum(amount) amount
			from(
				--出库未确认
				select 
					b.inv_id,
					b.batch_no,  --批号
					b.price,  --单价
					sum(nvl(b.amount, 0)) as amount   
				from mat_affi_out a
				left join mat_affi_out_detail b 
					on a.group_id = b.group_id and a.hos_id = b.hos_id 
					and a.copy_code = b.copy_code and a.out_id = b.out_id
				where a.group_id = #{group_id,jdbcType=INTEGER}
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND a.store_id = #{store_id,jdbcType=INTEGER}
					AND <![CDATA[ a.state < 3 ]]>
					AND <![CDATA[ a.bus_type_code <> '30' ]]>
				group by b.inv_id, b.batch_no, b.price 
				--退货未确认
				union all
				select 
					b.inv_id,
					b.batch_no,  --批号
					b.price,  --单价
					-1 * sum(nvl(b.amount, 0)) as amount 
				from mat_affi_in a
				left join mat_affi_in_detail b 
					on a.group_id = b.group_id and a.hos_id = b.hos_id 
					and a.copy_code = b.copy_code and a.in_id = b.in_id
				where a.group_id = #{group_id,jdbcType=INTEGER}
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND a.store_id = #{store_id,jdbcType=INTEGER}
					AND <![CDATA[ a.state < 3 ]]>
					AND a.bus_type_code = '29'
				group by b.inv_id, b.batch_no, b.price 
			)
			group by inv_id, batch_no, price  
		),inv_cert_tmp as(
           select a.inv_id,a.group_id,a.hos_id,a.copy_code,min(a.cert_id) cert_id
           from mat_prod_cert_inv a
           where a.group_id = #{group_id,jdbcType=INTEGER}
                 and a.hos_id = #{hos_id,jdbcType=INTEGER}
                 and a.copy_code = #{copy_code,jdbcType=VARCHAR}
           group by a.inv_id,a.group_id,a.hos_id,a.copy_code
       )
		select 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.inv_id,  --材料ID
			a.inv_no,  --材料变更号
			a.inv_code,  --材料编码
			a.inv_name,  --材料名称
			a.inv_model,  --规格型号
			a.unit_name,  --计量单位
			a.mat_type_name,  --材料类别名称
			a.fac_name,  --生成产商名称
			a.batch_no,  --批号
			a.left_amount as cur_amount,  --当前库存数量
			a.left_money as cur_money,  --当前库存金额
			a.price,  --单价
			a.sale_price,  --批发单价
			a.sell_price,  --零售单价
			nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
			mic.cert_id,
			mic.cert_code
		from inv_temp a
		left join out_temp b 
			on a.inv_id = b.inv_id 
			and a.batch_no= b.batch_no 
			and a.price = b.price
		left join inv_cert_tmp ict 	
			on ict.group_id = a.group_id
         	and ict.hos_id = a.hos_id
         	and ict.copy_code = a.copy_code
         	and ict.inv_id = a.inv_id 
    	left join mat_prod_cert mic 
    		on mic.group_id = ict.group_id
         	and mic.hos_id = ict.hos_id
         	and mic.copy_code = ict.copy_code
         	and mic.cert_id = ict.cert_id
         	and mic.check_state = 2
		<where>
			<if test="is_zero != null and is_zero == 0">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
					a.inv_code like '%${inv_code}%' or 
					a.inv_name like '%${inv_code}%'
					or
					a.spell_code like '%${inv_code}%' or 
					a.wbx_code like '%${inv_code}%' or
					a.alias like '%${inv_code}%'
				)
			</if>
		</where>
		order by a.inv_code, a.batch_no 
	</select>
	
	<!-- 显示明细 -->
	<select id="queryDetails" parameterType="java.util.Map" resultType="java.util.Map" >
		with detail_list as (
		     select md.group_id,md.hos_id,md.copy_code,md.out_id,to_char(md.out_no) out_no,to_char(mm.out_date,'yyyy-MM-dd') out_date,
		       mid.inv_code,mid.inv_name,hu.unit_name,mid.inv_model,md.batch_no,md.bar_code,md.price,md.amount,md.amount_money,
		       hfd.fac_name,mbt.bus_type_name as bus_type_name,
		       mm.store_id as store_id, mm.store_no as store_no,  hsd.store_code as store_code,  hsd.store_name as store_name,
		       mm.brief as brief, mm.dept_emp as dept_emp, he.emp_name as emp_name,
		       mm.maker as maker , sumaker.user_name as user_name_make, mm.confirmer as confirmer, suconfirmer.user_name as user_name_confirmer,
		       to_char(mm.confirm_date,'yyyy-MM-dd') as confirm_date, mm.dept_id as dept_id, mm.dept_no as dept_no,
		      hdd.dept_code as dept_code,  hdd.dept_name as dept_name ,mm.state,
          	case when mm.state = 1 then '未审核'
					when mm.state = 2 then '已审核'
       				 when mm.state = 3 then '已确认'
			end state_name,
		      hs.sup_name
		    from mat_affi_out_detail md
		    left join mat_affi_out mm on md.group_id=mm.group_id and md.hos_id=mm.hos_id and md.copy_code=mm.copy_code
		         and md.out_id=mm.out_id
		    left join hos_sup_dict hs on md.group_id=hs.group_id
        		and md.hos_id=hs.hos_id and md.sup_id=hs.sup_id and md.sup_no=hs.sup_no
		    left join mat_inv_dict mid on md.group_id=mid.group_id and md.hos_id=mid.hos_id and md.copy_code=mid.copy_code
		         and md.inv_id=mid.inv_id and md.inv_no=mid.inv_no 
		    left join hos_unit hu on mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code =hu.unit_code and hu.is_stop=0
		    left join hos_fac_dict hfd on mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no=hfd.fac_no
		    left join hos_store_dict hsd on mm.group_id = hsd.group_id and mm.hos_id = hsd.hos_id and mm.store_id = hsd.store_id and mm.store_no = hsd.store_no
		    left join mat_bus_type mbt on mm.bus_type_code = mbt.bus_type_code 
		    left join hos_emp he on mm.group_id = he.group_id and mm.hos_id = he.hos_id  and mm.dept_emp = he.emp_id 
		    <!-- and mm.dept_id = he.dept_id and mm.dept_no = he.dept_no  -->
		    left join sys_user sumaker on mm.group_id = sumaker.group_id and mm.hos_id = sumaker.hos_id and mm.copy_code = sumaker.copy_code and mm.maker = sumaker.user_id
		    left join sys_user suconfirmer on mm.group_id = suconfirmer.group_id and mm.hos_id = suconfirmer.hos_id and mm.copy_code = sumaker.copy_code and mm.confirmer = suconfirmer.user_id 
		    left join hos_dept_dict hdd on mm.group_id = hdd.group_id and mm.hos_id = hdd.hos_id  and mm.dept_id = hdd.dept_id and mm.dept_no = hdd.dept_no
		    <where>             
				<if test="group_id != null ">
					AND mm.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null ">
					AND mm.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mm.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="bus_type_code != null and bus_type_code != ''">
				    AND mm.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
				</if>
				<if test="state != null and state != ''">
					AND mm.state = #{state,jdbcType=INTEGER}
				</if>
				<if test="out_dateB != null and out_dateB != ''">
					AND to_char(mm.out_date) &gt;= to_date(#{out_dateB},'yyyy-MM-dd')
				</if>
				<if test="out_dateE != null and out_dateE != ''">
					AND to_char(mm.out_date) &lt;= to_date(#{out_dateE},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateB != null and confirm_dateB != ''">
					AND to_char(mm.confirm_date) &gt;= to_date(#{confirm_dateB},'yyyy-MM-dd')
				</if>
				<if test="confirm_dateE != null and confirm_dateE != ''">
					AND to_char(mm.confirm_date) &lt;= to_date(#{confirm_dateE},'yyyy-MM-dd')
				</if> 
				<if test="dept_id != null and dept_id != '' ">
					AND mm.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					AND mm.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="sup_id != null and sup_id != ''">
					AND md.sup_id = #{sup_id,jdbcType=INTEGER}
				</if>
				<if test="sup_no != null and sup_no != ''">
					AND md.sup_no = #{sup_no,jdbcType=INTEGER}
				</if>
				<if test="out_no != null and out_no != ''">
					AND mm.out_no like '${out_no}%'
				</if>
				<if test="brief != null and brief != ''">
					and mm.brief like '%${brief}%'
				</if>
				<if test="maker != null and maker != ''">
					and mm.maker  = #{maker}
				</if>
				<if test="batch_no != null and batch_no != ''">
					and md.batch_no like '%${batch_no}%'
				</if>
				<if test="bar_code != null and bar_code != ''">
					AND md.bar_code like '%${bar_code}%'
				</if>
				<!-- <if test="dept_id == '00' ">
					and mm.dept_id in ( select perm_code from v_user_data_perm
						where group_id = #{group_id}
							and hos_id = #{hos_id} 
							and user_id = #{user_id} 
							and table_code = 'HOS_DEPT_DICT'
							and is_read = 1 
							and is_write = 1
					)
				</if>
				<if test="store_id == '00' ">
					and mm.store_id in (
						select perm_code from v_user_data_perm
						where group_id = #{group_id}
							and hos_id = #{hos_id} 
							and user_id = #{user_id} 
							and table_code = 'HOS_STORE_DICT'
							and is_read = 1 
							and is_write = 1 
					)
				</if> -->
				<if test="inv_code != null and inv_code != ''">
					AND (
							 mid.inv_code like '%${inv_code}%'
							or upper(mid.inv_name) like '%${inv_code}%'
							or upper(mid.inv_model) like '%${inv_code}%'
							or upper(mid.spell_code) like '%${inv_code}%'
							or upper(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.spell_code) like '%${inv_code}%'
							or lower(mid.wbx_code) like '%${inv_code}%'
							or lower(mid.inv_name) like '%${inv_code}%'
							or mid.alias like '%${inv_code}%'
					)
				</if>
				<!-- 添加用户数据权限 -->
				and exists (
					select 1 from v_user_data_perm vudp 
					where mm.group_id=vudp.group_id and mm.hos_id=vudp.hos_id 
						and to_char(mm.store_id)=vudp.perm_code and vudp.is_read=1 and vudp.is_write = 1
		      			and vudp.table_code='HOS_STORE_DICT'
						and vudp.user_id=#{user_id}
				)
			</where>    
		),sum_list as (
		   select null group_id,null hos_id,null copy_code,null out_id,'合计' out_no,null out_date,
		       null inv_code,null inv_name,null unit_name,null inv_model,null batch_no, null bar_code,null price,sum(amount) amount,
		       sum(amount_money) amount_money,  null fac_name,null  bus_type_name,
		       null store_id, null store_no,  null store_code,  null store_name,
		       null brief, null dept_emp, null emp_name,
		       null maker , null user_name_make, null confirmer,null user_name_confirmer,
		       null confirm_date, null dept_id, null dept_no, null dept_code,  null dept_name
		       , null as state,null as state_name, null as sup_name
		   from detail_list
		)
		select group_id, hos_id, copy_code, out_id,out_no, out_date,
		        inv_code, inv_name, unit_name, inv_model, batch_no,  bar_code, price,amount,
		        amount_money,   fac_name,  bus_type_name,
		        store_id,  store_no,   store_code,   store_name,
		        brief,  dept_emp,  emp_name,
		        maker ,  user_name_make,  confirmer, user_name_confirmer,
		        confirm_date,  dept_id,  dept_no,  dept_code,   dept_name
		        ,state,state_name, sup_name
		from detail_list
		union all
		select group_id, hos_id, copy_code, out_id,out_no, out_date,
		        inv_code, inv_name, unit_name, inv_model, batch_no,  bar_code, price,amount,
		       amount_money,   fac_name,  bus_type_name,
		        store_id,  store_no,   store_code,   store_name,
		        brief,  dept_emp,  emp_name,
		        maker ,  user_name_make,  confirmer, user_name_confirmer,
		        confirm_date,  dept_id,  dept_no,  dept_code,   dept_name
		        ,state, state_name,sup_name
		from sum_list
		order by out_id desc, out_no, out_date, inv_code
				
		
	</select>
	<!-- 查询对应关系表中的明细 -->
	<select id="queryMatAffiOutRela" parameterType="java.util.Map" resultType="java.util.Map">
		
		select t.group_id,t.hos_id,t.copy_code,t.rela_id,t.rela_detail_id
		from (
		      select a.group_id,a.hos_id,a.copy_code,a.rela_id,a.rela_detail_id
		      from  mat_apply_out_rela  a
		      join  (
		      	select group_id,hos_id,copy_code,out_id,detail_id
		      	from mat_affi_out_detail
		      	<where>
		      			group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND out_id = #{out_id,jdbcType=INTEGER}
		      	</where>
		      ) b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
		      	and a.rela_id=b.out_id
		      where a.rela_type=3
		      minus
		      select group_id,hos_id,to_char(copy_code) copy_code,out_id,detail_id
		      from mat_affi_out_detail 
		      <where>
		      		group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND out_id = #{out_id,jdbcType=INTEGER}
		      </where> 
		)t
		
	</select>
	
	
	<!-- 删除对应关系表中的明细 -->
	<delete id="deleteMatAffiOutRela" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			DELETE FROM mat_apply_out_rela
			<where>
				<if test="item.group_id != null ">
					AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null ">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.rela_id != null ">
					AND rela_id = #{item.rela_id,jdbcType=INTEGER}
				</if>
				<if test="item.rela_detail_id != null ">
					AND rela_detail_id = #{item.rela_detail_id,jdbcType=INTEGER}
				</if>
				and rela_type =3
			</where>
		</foreach>
	</delete>
	<select id="queryMatOutMainIsApply" parameterType="java.util.List" resultType="Integer">
		select count(0) counts
		from mat_apply_out_rela
		<where>
			<if test="group_id != null and group_id !='' ">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' ">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="out_id != null and out_id !='' ">
				AND rela_id = #{out_id,jdbcType=INTEGER}
			</if>
			and rela_type = 3
		</where>
	</select>
</mapper>

