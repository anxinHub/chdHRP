<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.matpay.MatPayMainMapper">
	 
	<resultMap id="matPayMain" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_id" column="pay_id"/>
	<result property="pay_bill_no" column="pay_bill_no"/>
	<result property="pay_date" column="pay_date"/>
	<result property="pay_bill_type" column="pay_bill_type"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_code" column="sup_code"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_type_code" column="pay_type_code"/>
	<result property="pay_name" column="pay_name"/>
	<result property="acct_code" column="acct_code"/>
	<result property="cheq_no" column="cheq_no"/>
	<result property="payable_money" column="payable_money"/>
	<result property="payed_money" column="payed_money"/>
	<result property="pay_money" column="pay_money"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="chk_date" column="chk_date"/>
	<result property="acc_check_state" column="acc_check_state"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="is_init" column="is_init"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<!-- 付款单详细信息Map （修改页面回值用) -->
	<resultMap id="unitPayMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_id" column="pay_id"/>
	<result property="pay_bill_no" column="pay_bill_no"/>
	<result property="pay_date" column="pay_date"/>
	<result property="pay_bill_type" column="pay_bill_type"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_code" column="sup_code"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_term_code" column="pay_term_code"/>
	<result property="pay_term_name" column="pay_term_name"/>
	<result property="pay_type_code" column="pay_type_code"/>
	<result property="pay_name" column="pay_name"/>
	<result property="acct_code" column="acct_code"/>
	<result property="cheq_no" column="cheq_no"/>
	<result property="payable_money" column="payable_money"/>
	<result property="payed_money" column="payed_money"/>
	<result property="pay_money" column="pay_money"/>
	<result property="maker" column="maker"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="chk_date" column="chk_date"/>
	<result property="state" column="state"/>
	<result property="is_init" column="is_init"/>
	<result property="note" column="note"/>
	<result property="pay_dept_id" column="pay_dept_id"/><!-- 付款部门id 用于修改页部门回显 -->
	<result property="dept_no" column="dept_no"/><!-- 付款部门变更号 用于修改页部门回显 -->
	<result property="bank_name" column="bank_name"/>
	<result property="bank_no" column="bank_no"/>
	<result property="acc_check_state" column="acc_check_state"/>
	</resultMap>
	
	<!-- 发票 详细信息Map -->
	<resultMap id="billMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="bill_id" column="bill_id"/>
	<result property="bill_code" column="bill_code"/>
	<result property="bill_no" column="bill_no"/>
	<result property="ori_no" column="ori_no"/>
	<result property="bill_type" column="bill_type"/>
	<result property="stock_type_code" column="stock_type_code"/>
	<result property="bill_date" column="bill_date"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_code" column="sup_code"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_term_code" column="pay_term_code"/>
	<result property="pay_term_name" column="pay_term_name"/>
	<result property="note" column="note"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="chk_date" column="chk_date"/>
	<result property="is_init" column="is_init"/>
	<result property="state" column="state"/>
	<result property="in_money" column="in_money"/>
	<result property="bill_money" column="bill_money"/>
	<result property="payed_money" column="payed_money"/>
	<result property="pay_money" column="pay_money"/>
	<result property="payable_money" column="payable_money"/>
	
	<result property="pay_moneys" column="pay_moneys"/>
	<result property="payable_moneys" column="payable_moneys"/>
	</resultMap>
	<!-- 发票明细  详细信息 Map -->
	<resultMap id="billDetailMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="bill_id" column="bill_id"/>
	<result property="bill_detail_id" column="bill_detail_id"/>
	<result property="in_id" column="in_id"/>
	<result property="pay_id" column="pay_id"/>
	<result property="in_no" column="in_no"/>
	<result property="in_detail_id" column="in_detail_id"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_no" column="inv_no"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="batch_no" column="batch_no"/>
	<result property="sn" column="sn"/>
	<result property="price" column="price"/>
	<result property="amount" column="amount"/>
	<result property="bill_money" column="bill_money"/>
	<result property="payed_money" column="payed_money"/>
	<result property="pay_money" column="pay_money"/>
	<result property="dis_money" column="dis_money"/>
	</resultMap>

	<insert id="addMatPayMain" useGeneratedKeys="true" >
	
		INSERT INTO MAT_PAY_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_id
		,
		pay_bill_no
		,
		pay_date
		,
		pay_bill_type
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		pay_type_code
		,
		acct_code
		,
		cheq_no
		,
		payable_money
		,
		payed_money
		,
		pay_money
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		is_init
		,
		note
		,
		pay_dept_id
		<!-- ,
		bank_no
		,
		bank_name -->
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{pay_id,jdbcType=INTEGER}
		,
		#{pay_bill_no,jdbcType=VARCHAR} 
		,
		to_date(#{pay_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		#{pay_bill_type,jdbcType=VARCHAR}
		,
		#{sup_id,jdbcType=INTEGER}
		,
		#{sup_no,jdbcType=INTEGER}
		,
		#{pay_code,jdbcType=VARCHAR}
		,
		#{pay_type_code,jdbcType=VARCHAR}
		,
		#{acct_code,jdbcType=VARCHAR}
		,
		#{cheq_no,jdbcType=VARCHAR}
		,
		#{payable_money,jdbcType=INTEGER}
		,
		#{payed_money,jdbcType=INTEGER}
		,
		#{pay_money,jdbcType=INTEGER}
		,
		#{maker,jdbcType=INTEGER}
		,
		to_date(#{make_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		#{checker,jdbcType=INTEGER}
		,
		to_date(#{chk_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		#{state,jdbcType=INTEGER}
		,
		#{is_init,jdbcType=INTEGER}
		,
		#{note,jdbcType=VARCHAR}
		,
		#{pay_dept_id,jdbcType=VARCHAR}
		<!-- ,
		#{bank_no,jdbcType=VARCHAR}
		,
		#{bank_name,jdbcType=VARCHAR} -->
		)
	
	</insert>
	<insert id="addBatchMatPayMain" parameterType="java.util.List" >
	
		INSERT INTO MAT_PAY_MAIN (
		pay_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_bill_no
		,
		pay_date
		,
		pay_bill_type
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		pay_type_code
		,
		acct_code
		,
		cheq_no
		,
		payable_money
		,
		payed_money
		,
		pay_money
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		is_init
		,
		note
		
		) select MAT_PAY_MAIN_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.pay_bill_no,jdbcType=VARCHAR}
			,
			to_date(#{item.pay_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			#{item.pay_bill_type,jdbcType=VARCHAR}
			,
			#{item.sup_id,jdbcType=INTEGER}
			,
			#{item.sup_no,jdbcType=INTEGER}
			,
			#{item.pay_code,jdbcType=VARCHAR}
			,
			#{item.pay_type_code,jdbcType=VARCHAR}
			,
			#{item.acct_code,jdbcType=VARCHAR}
			,
			#{item.cheq_no,jdbcType=VARCHAR}
			,
			#{item.payable_money,jdbcType=INTEGER}
			,
			#{item.payed_money,jdbcType=INTEGER}
			,
			#{item.pay_money,jdbcType=INTEGER}
			,
			#{item.maker,jdbcType=INTEGER}
			,
			to_date(#{item.make_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			#{item.checker,jdbcType=INTEGER}
			,
			to_date(#{item.chk_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.is_init,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
				from dual
		</foreach>
			)t
	</insert>
	
	<update id="updateMatPayMain" parameterType="java.util.Map">
	
		UPDATE mat_pay_main SET
		pay_bill_no = #{pay_bill_no,jdbcType=VARCHAR}
		,
		pay_date = to_date(#{pay_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
		,
		sup_id = #{sup_id,jdbcType=INTEGER}
		,
		sup_no = #{sup_no,jdbcType=INTEGER}
		,
		pay_code = #{pay_code,jdbcType=VARCHAR}
		,
		pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
		,
		acct_code = #{acct_code,jdbcType=VARCHAR}
		,
		cheq_no = #{cheq_no,jdbcType=VARCHAR}
		,
		payable_money = #{payable_money,jdbcType=INTEGER}
		,
		payed_money = #{payed_money,jdbcType=INTEGER}
		,
		pay_money = #{pay_money,jdbcType=INTEGER}
		,
		maker = #{maker,jdbcType=INTEGER}
		,
		make_date = to_date(#{make_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		checker = #{checker,jdbcType=INTEGER}
		,
		chk_date = to_date(#{chk_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		state = #{state,jdbcType=INTEGER}
		,
		is_init = #{is_init,jdbcType=INTEGER}
		,
		note = #{note,jdbcType=VARCHAR}
		,
		pay_dept_id = #{pay_dept_id,jdbcType=INTEGER}
		
		<!-- ,
		bank_name = #{bank_name,jdbcType=VARCHAR}
		,
		bank_no = #{bank_no,jdbcType=VARCHAR} -->
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		pay_id =#{pay_id,jdbcType=INTEGER}
	
	</update>
	<update id="updateBatchMatPayMain" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_pay_main SET
			pay_bill_no = #{item.pay_bill_no,jdbcType=VARCHAR}
			,
			pay_date = to_date(#{item.pay_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			pay_bill_type = #{item.pay_bill_type,jdbcType=VARCHAR}
			,
			sup_id = #{item.sup_id,jdbcType=INTEGER}
			,
			sup_no = #{item.sup_no,jdbcType=INTEGER}
			,
			pay_code = #{item.pay_code,jdbcType=VARCHAR}
			,
			pay_type_code = #{item.pay_type_code,jdbcType=VARCHAR}
			,
			acct_code = #{item.acct_code,jdbcType=VARCHAR}
			,
			cheq_no = #{item.cheq_no,jdbcType=VARCHAR}
			,
			payable_money = #{item.payable_money,jdbcType=INTEGER}
			,
			payed_money = #{item.payed_money,jdbcType=INTEGER}
			,
			pay_money = #{item.pay_money,jdbcType=INTEGER}
			,
			maker = #{item.maker,jdbcType=INTEGER}
			,
			make_date = to_date(#{item.make_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			checker = #{item.checker,jdbcType=INTEGER}
			,
			chk_date = to_date(#{item.chk_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			state = #{item.state,jdbcType=INTEGER}
			,
			is_init = #{item.is_init,jdbcType=INTEGER}
			,
			note = #{item.note,jdbcType=VARCHAR}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			pay_id = #{item.pay_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatPayMain" parameterType="java.util.Map">
	
		DELETE FROM mat_pay_main WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		pay_id = #{pay_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMatPayMain" parameterType="java.util.List">
		DELETE FROM mat_pay_main WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				pay_id = #{item.pay_id,jdbcType=INTEGER}
				 and 
				pay_bill_no = #{item.pay_bill_no,jdbcType=VARCHAR}
				
			</foreach>
	
	</delete>
	<select id="queryMatPayMain" parameterType="java.util.Map" resultMap="matPayMain" >

with temp  as (
	select distinct mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pay_id, to_char(mpm.pay_bill_no) as pay_bill_no
      , mpm.pay_date, mpm.pay_bill_type, mpm.sup_id, mpm.sup_no, hsd.sup_code
      , hsd.sup_name, mpm.pay_code, mpm.pay_type_code, mpm.acct_code, mpm.cheq_no
      , mpm.payable_money, mpm.payed_money, mpm.pay_money, mpm.maker, su.user_name as maker_name
      , mpm.make_date, mpm.checker, sysu.user_name as checker_name, mpm.chk_date, mpm.state, mpm.acc_check_state,
      case when mpm.state = 1 then '未审核'
        when mpm.state = 2 then '已审核'
        when mpm.state = '' then ''
      else '记账' end state_name,
      mpm.is_init, mpm.note,apt.pay_name
    from MAT_PAY_MAIN mpm
     left join Mat_Pay_Detail mpd on mpm.group_id = mpd.group_id
      and mpm.hos_id = mpd.hos_id
      and mpm.copy_code = mpd.copy_code
      and mpm.pay_id = mpd.pay_id 
      and mpm.pay_bill_no=mpd.pay_bill_no
     
      
    left join hos_sup_dict hsd on mpm.group_id = hsd.group_id
    and mpm.hos_id = hsd.hos_id
    and mpm.sup_id = hsd.sup_id
    and mpm.sup_no = hsd.sup_no
    <!-- and hsd.is_stop = 0 -->
    left join sys_user su on mpm.group_id = su.group_id
    and mpm.hos_id = su.hos_id
    and mpm.maker = su.user_id 
      left join sys_user sysu on mpm.group_id = sysu.group_id
    and mpm.hos_id = sysu.hos_id
    and mpm.checker = sysu.user_id 
     left join ACC_PAY_TYPE apt on mpm.group_id = apt.group_id
        and mpm.hos_id = apt.hos_id and mpm.copy_code=apt.copy_code
        and mpm.pay_type_code = apt.pay_code
    <where>                     
    <if test="group_id != null and group_id != ''">
    AND mpm.group_id = #{group_id,jdbcType=INTEGER}
    </if>
    <if test="hos_id != null and hos_id != ''">
    AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
    </if>
    <if test="copy_code != null and copy_code != ''">
    AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
    </if>
     
      <if test="set_id != null and set_id != '' ">
       and msd.set_id = #{set_id}
       </if>
    <if test="pay_id != null and pay_id != ''">
    AND mpm.pay_id = #{pay_id,jdbcType=INTEGER}
    </if>
    <if test="pay_bill_no != null and pay_bill_no != ''">
    AND mpm.pay_bill_no like '${pay_bill_no}%'
    </if>
    <if test="beginDate != null and beginDate != '' and endDate !=null and endDate !=''">
    AND mpm.pay_date between to_date(#{beginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{endDate,jdbcType=DATE},'yyyy-MM-dd')
    </if>
    <if test="makeBeginDate != null and makeBeginDate != '' and makeEndDate !=null and makeEndDate !=''">
    AND mpm.make_date between to_date(#{makeBeginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{makeEndDate,jdbcType=DATE},'yyyy-MM-dd')
    </if>
    <if test="pay_bill_type != null and pay_bill_type != ''">
    AND mpm.pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
    </if>
    <if test="sup_id != null and sup_id != ''">
    AND mpm.sup_id = #{sup_id,jdbcType=INTEGER}
    </if>
   <if test="sup_no != null and sup_no != ''">
    AND mpm.sup_no = #{sup_no,jdbcType=INTEGER}
    </if>
    <if test="pay_code != null and pay_code != ''">
    AND mpm.pay_code = #{pay_code,jdbcType=VARCHAR}
    </if>
    <if test="pay_type_code != null and pay_type_code != ''">
    AND mpm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
    </if>
    <if test="acct_code != null and acct_code != ''">
    AND mpm.acct_code = #{acct_code,jdbcType=VARCHAR}
    </if>
    <if test="cheq_no != null and cheq_no != ''">
    AND mpm.cheq_no = #{cheq_no,jdbcType=VARCHAR}
    </if>
    <if test="payable_money != null and payable_money != '' ">
    AND mpm.payable_money = #{payable_money,jdbcType=INTEGER} 
    </if>
    <if test="payed_money != null and payed_money != '' ">
    AND mpm.payed_money = #{payed_money,jdbcType=INTEGER} 
    </if>
    <if test="pay_money != null and pay_money != '' ">
    AND mpm.pay_money = #{pay_money,jdbcType=INTEGER} 
    </if>
    <if test="maker != null and maker != ''">
    AND mpm.maker = #{maker,jdbcType=INTEGER}
    </if>
    <if test="pay_type_code != null and pay_type_code != ''">
    AND mpm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
    </if>
    <if test="checker != null and checker != ''">
    AND mpm.checker = #{checker,jdbcType=INTEGER}
    </if>
    <if test="chk_date != null and chk_date != ''">
    AND mpm.chk_date = #{chk_date,jdbcType=DATE}
    </if>
    <if test="state != null and state != ''">
    AND mpm.state = #{state,jdbcType=INTEGER}
    </if>
    <if test="is_init != null and is_init != ''">
    AND mpm.is_init = #{is_init,jdbcType=INTEGER}
    </if>
    <if test="note != null and note != ''">
    AND mpm.note = #{note,jdbcType=VARCHAR}
    </if>
    and exists(
         select 1 from mat_in_main tt 
         left join mat_in_detail tt1 on tt.group_id = tt1.group_id    
					and tt.hos_id = tt1.hos_id
					and tt.copy_code = tt1.copy_code
					and tt.in_id = tt1.in_id   
        left join MAT_BILL_DETAIL mbd on tt1.group_id = mbd.group_id    
		      and tt1.hos_id = mbd.hos_id
		      and tt1.copy_code = mbd.copy_code
		      and tt1.in_id = mbd.in_id 
		      and tt1.in_detail_id=mbd.in_detail_id
				where tt.group_id=mpm.group_id and tt.hos_id=mpm.hos_id and tt.copy_code=mpm.copy_code
				and mpd.bill_id = mbd.bill_id 
				and mpd.bill_detail_id=mbd.bill_detail_id
				and tt.sup_id=mpm.sup_id 
    <if test="store_id != null and store_id != '' ">
       and tt.store_id = #{store_id}
     </if>
   and exists (
              select 1
              from v_user_data_perm vudp
              where vudp.group_id=#{group_id,jdbcType=INTEGER}
              and vudp.hos_id=#{hos_id,jdbcType=INTEGER}
              and vudp.user_id=#{user_id,jdbcType=INTEGER}
              and vudp.table_code='HOS_STORE_DICT'
              and tt.store_id =vudp.perm_code
              and( vudp.is_read=1 or vudp.is_write=1)
          )
                                 )
    
    </where>   
     
),

	 temp1  as (
	select distinct mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pay_id, to_char(mpm.pay_bill_no) as pay_bill_no
      , mpm.pay_date, mpm.pay_bill_type, mpm.sup_id, mpm.sup_no, hsd.sup_code
      , hsd.sup_name, mpm.pay_code, mpm.pay_type_code, mpm.acct_code, mpm.cheq_no
      , mpm.payable_money, mpm.payed_money, mpm.pay_money, mpm.maker, su.user_name as maker_name
      , mpm.make_date, mpm.checker, sysu.user_name as checker_name, mpm.chk_date, mpm.state, mpm.acc_check_state,
      case when mpm.state = 1 then '未审核'
        when mpm.state = 2 then '已审核'
        when mpm.state = '' then ''
      else '记账' end state_name,
      mpm.is_init, mpm.note,apt.pay_name
    from MAT_PAY_MAIN mpm
     left join Mat_Pay_Detail mpd on mpm.group_id = mpd.group_id
      and mpm.hos_id = mpd.hos_id
      and mpm.copy_code = mpd.copy_code
      and mpm.pay_id = mpd.pay_id 
      and mpm.pay_bill_no=mpd.pay_bill_no
      
        left join MAT_BILL_DETAIL mbd on mpd.group_id = mbd.group_id
      and mpd.hos_id = mpd.hos_id
      and mpd.copy_code = mbd.copy_code
      and mpd.bill_id = mbd.bill_id 
          and mpd.bill_detail_id=mbd.bill_detail_id
      
      <!-- left join MAT_IN_MAIN mim on mbd.group_id = mim.group_id
      and mbd.hos_id = mim.hos_id
      and mbd.copy_code = mim.copy_code
      and mbd.in_id = mim.in_id  -->
      
        left join mat_nopay_deliver_d mndd on mbd.group_id = mndd.group_id
        and mbd.hos_id = mndd.hos_id
        and mbd.copy_code = mndd.copy_code
        and mbd.in_id = mndd.deliver_id
        and mbd.in_detail_id = mndd.detail_id 
        left join mat_nopay_deliver mnd on mnd.group_id = mndd.group_id
        and mnd.hos_id = mndd.hos_id
        and mnd.copy_code = mndd.copy_code
        and mnd.deliver_id = mndd.deliver_id 
        
        
      left join hos_store_dict hs on mnd.group_id = hs.group_id
      and mnd.hos_id = hs.hos_id
      and mnd.store_id = hs.store_id
      and mnd.store_no = hs.store_no 
      
    left join mat_store_detail msd on hs.group_id = msd.group_id
          and hs.hos_id = msd.hos_id
          and hs.store_id = msd.store_id
      
    left join hos_sup_dict hsd on mpm.group_id = hsd.group_id
    and mpm.hos_id = hsd.hos_id
    and mpm.sup_id = hsd.sup_id
    and mpm.sup_no = hsd.sup_no
    <!-- and hsd.is_stop = 0 -->
    left join sys_user su on mpm.group_id = su.group_id
    and mpm.hos_id = su.hos_id
    and mpm.maker = su.user_id 
      left join sys_user sysu on mpm.group_id = sysu.group_id
    and mpm.hos_id = sysu.hos_id
    and mpm.checker = sysu.user_id 
     left join ACC_PAY_TYPE apt on mpm.group_id = apt.group_id
        and mpm.hos_id = apt.hos_id and mpm.copy_code=apt.copy_code
        and mpm.pay_type_code = apt.pay_code
    <where>                     
    <if test="group_id != null and group_id != ''">
    AND mpm.group_id = #{group_id,jdbcType=INTEGER}
    </if>
    <if test="hos_id != null and hos_id != ''">
    AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
    </if>
    <if test="copy_code != null and copy_code != ''">
    AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
    </if>
      <if test="store_id != null and store_id != '' ">
       and hs.store_id = #{store_id}
     </if>
      <if test="set_id != null and set_id != '' ">
       and msd.set_id = #{set_id}
       </if>
    <if test="pay_id != null and pay_id != ''">
    AND mpm.pay_id = #{pay_id,jdbcType=INTEGER}
    </if>
    <if test="pay_bill_no != null and pay_bill_no != ''">
    AND mpm.pay_bill_no like '${pay_bill_no}%'
    </if>
    <if test="beginDate != null and beginDate != '' and endDate !=null and endDate !=''">
    AND mpm.pay_date between to_date(#{beginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{endDate,jdbcType=DATE},'yyyy-MM-dd')
    </if>
    <if test="makeBeginDate != null and makeBeginDate != '' and makeEndDate !=null and makeEndDate !=''">
    AND mpm.make_date between to_date(#{makeBeginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{makeEndDate,jdbcType=DATE},'yyyy-MM-dd')
    </if>
    <if test="pay_bill_type != null and pay_bill_type != ''">
    AND mpm.pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
    </if>
    <if test="sup_id != null and sup_id != ''">
    AND mpm.sup_id = #{sup_id,jdbcType=INTEGER}
    </if>
   <if test="sup_no != null and sup_no != ''">
    AND mpm.sup_no = #{sup_no,jdbcType=INTEGER}
    </if>
    <if test="pay_code != null and pay_code != ''">
    AND mpm.pay_code = #{pay_code,jdbcType=VARCHAR}
    </if>
    <if test="pay_type_code != null and pay_type_code != ''">
    AND mpm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
    </if>
    <if test="acct_code != null and acct_code != ''">
    AND mpm.acct_code = #{acct_code,jdbcType=VARCHAR}
    </if>
    <if test="cheq_no != null and cheq_no != ''">
    AND mpm.cheq_no = #{cheq_no,jdbcType=VARCHAR}
    </if>
    <if test="payable_money != null and payable_money != '' ">
    AND mpm.payable_money = #{payable_money,jdbcType=INTEGER} 
    </if>
    <if test="payed_money != null and payed_money != '' ">
    AND mpm.payed_money = #{payed_money,jdbcType=INTEGER} 
    </if>
    <if test="pay_money != null and pay_money != '' ">
    AND mpm.pay_money = #{pay_money,jdbcType=INTEGER} 
    </if>
    <if test="maker != null and maker != ''">
    AND mpm.maker = #{maker,jdbcType=INTEGER}
    </if>
    <if test="pay_type_code != null and pay_type_code != ''">
    AND mpm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
    </if>
    <if test="checker != null and checker != ''">
    AND mpm.checker = #{checker,jdbcType=INTEGER}
    </if>
    <if test="chk_date != null and chk_date != ''">
    AND mpm.chk_date = #{chk_date,jdbcType=DATE}
    </if>
    <if test="state != null and state != ''">
    AND mpm.state = #{state,jdbcType=INTEGER}
    </if>
    <if test="is_init != null and is_init != ''">
    AND mpm.is_init = #{is_init,jdbcType=INTEGER}
    </if>
    <if test="note != null and note != ''">
    AND mpm.note = #{note,jdbcType=VARCHAR}
    </if>
    
     and exists (
              select 1
              from v_user_data_perm vudp
              where vudp.group_id=#{group_id,jdbcType=INTEGER}
              and vudp.hos_id=#{hos_id,jdbcType=INTEGER}
              and vudp.user_id=#{user_id,jdbcType=INTEGER}
              and vudp.table_code='HOS_STORE_DICT'
              and hs.store_id =vudp.perm_code
              and( vudp.is_read=1 or vudp.is_write=1)
          )
    </where>   
     
)

	select *
	from (   
		select null as group_id, null as hos_id, null as copy_code, null as pay_id, '合计' as pay_bill_no
	      , null as pay_date, null as pay_bill_type, null as sup_id,null as sup_no, null as sup_code
	      , null as sup_name, null as pay_code,null as pay_type_code, null as acct_code, null as cheq_no
	      , null as payable_money, null as payed_money, sum(pay_money) as pay_money, null as maker, null as maker_name
	      , null as make_date, null as checker, null as checker_name, null as chk_date, null as state,null as state_name
	      , null as is_init, null as note,null as pay_name, null as acc_check_state
	    from temp
		union all
		select a.group_id, a.hos_id, a.copy_code, a.pay_id, a.pay_bill_no
	      , a.pay_date, a.pay_bill_type, a.sup_id,a.sup_no, a.sup_code
	      , a.sup_name, a.pay_code,a.pay_type_code, a.acct_code, a.cheq_no
	      , a.payable_money, a.payed_money, a.pay_money, a.maker, a.maker_name
	      , a.make_date, a.checker, a.checker_name, a.chk_date, a.state,a.state_name
	      , a.is_init, a.note,a.pay_name,a.acc_check_state
	    from temp a
	    left join  temp1 b
	     on a.group_id = b.group_id
	    and a.hos_id = b.hos_id
	    and a.copy_code = b.copy_code
	    and a.pay_id = b.pay_id
      	and a.pay_bill_no= b.pay_bill_no
	)
	order by pay_bill_no desc, pay_date desc, make_date desc
	

	</select>
	<select id="queryMatPayMainByCode" resultType="com.chd.hrp.mat.entity.MatPayMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_id
		,
		pay_bill_no
		,
		pay_date
		,
		pay_bill_type
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		pay_type_code
		,
		acct_code
		,
		cheq_no
		,
		payable_money
		,
		payed_money
		,
		pay_money
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		is_init
		,
		note
		FROM mat_pay_main 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		pay_id = #{pay_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryMatPayMainByUniqueness" resultType="com.chd.hrp.mat.entity.MatPayMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_id
		,
		pay_bill_no
		,
		pay_date
		,
		pay_bill_type
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		pay_type_code
		,
		acct_code
		,
		cheq_no
		,
		payable_money
		,
		payed_money
		,
		pay_money
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		is_init
		,
		note
		FROM MAT_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_id != null and pay_id != ''">
		AND pay_id = #{pay_id,jdbcType=INTEGER}
		</if>
		<if test="pay_bill_no != null and pay_bill_no != ''">
		AND pay_bill_no = #{pay_bill_no,jdbcType=VARCHAR}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND pay_date = #{pay_date,jdbcType=DATE}
		</if>
		<if test="pay_bill_type != null and pay_bill_type != ''">
		AND pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND sup_no = #{sup_no,jdbcType=INTEGER}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_type_code != null and pay_type_code != ''">
		AND pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
		</if>
		<if test="acct_code != null and acct_code != ''">
		AND acct_code = #{acct_code,jdbcType=VARCHAR}
		</if>
		<if test="cheq_no != null and cheq_no != ''">
		AND cheq_no = #{cheq_no,jdbcType=VARCHAR}
		</if>
		<if test="payable_money != null and payable_money != ''">
		AND payable_money = #{payable_money,jdbcType=INTEGER}
		</if>
		<if test="payed_money != null and payed_money != ''">
		AND payed_money = #{payed_money,jdbcType=INTEGER}
		</if>
		<if test="pay_money != null and pay_money != ''">
		AND pay_money = #{pay_money,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="chk_date != null and chk_date != ''">
		AND chk_date = #{chk_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="is_init != null and is_init != ''">
		AND is_init = #{is_init,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 根据查询条件查询出全部付款的的发票 -->
	<select id="queryMatBillMain_Pay" resultMap="billMap" parameterType="java.util.Map" >
		with bill_id_pay as (
			select group_id, hos_id , copy_code , bill_id , nvl(sum(pay_money),0) num1 ,
				nvl(sum(nvl(payed_money,0)),0) num4,
				nvl(sum(dis_money),0)as num9, 
				nvl(sum(dis_money),0)as num66
			from mat_pay_detail  
			WHERE group_id = ${group_id}  and hos_id = ${hos_id}  and copy_code = ${copy_code} 
			group by  group_id, hos_id , copy_code , bill_id 
		) , bill_id_pre as (
			select group_id, hos_id , copy_code , in_id , nvl(sum(pre_pay_money),0) num2 
			from mat_pre_pay_detail  
			WHERE group_id = ${group_id}  and hos_id = ${hos_id}  and copy_code = ${copy_code} 
			group by  group_id, hos_id , copy_code , in_id 
		) , bill_id_bill as (
			select group_id, hos_id , copy_code ,bill_id , in_id , nvl(sum(bill_money),0) num3 
			from mat_bill_detail 
			where group_id = ${group_id}  and hos_id = ${hos_id} and copy_code = ${copy_code} 
			group by  group_id, hos_id , copy_code , bill_id ,in_id 
		),store_tmp as (
			<if test="store_id !='' ">
				select group_id,hos_id,store_id,store_no
				from hos_store_dict 
				<where>
					<if test="group_id !=null and group_id !='' ">
						and group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id !=null and hos_id !='' ">
						and hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
						and store_id = #{store_id,jdbcType=INTEGER}
						and is_stop = 0
				</where>
			</if>
			<if test="set_id !='' ">
				select a.group_id,a.hos_id,a.store_id,c.store_no
				from mat_store_detail a
				left join mat_store_set b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.set_id=b.set_id
				left join hos_store_dict c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.store_id=c.store_id and c.is_stop=0
				<where>
					<if test="group_id !=null and group_id !='' ">
						and a.group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id !=null and hos_id !='' ">
						and a.hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
						and a.set_id = #{set_id,jdbcType=INTEGER}
				</where>
			</if>
			<if test="set_id =='' and store_id =='' ">
				select group_id,hos_id,store_id,store_no
				from hos_store_dict
				<where>
					<if test="group_id !=null and group_id !='' ">
						and group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id !=null and hos_id !='' ">
						and hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
						and is_stop=0
				</where>
			</if>
		),  in_date as (
         	select distinct a.group_id, a.hos_id, a.copy_code, a.bill_id
         	from mat_bill_main a
         	left join mat_bill_detail b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
         		and a.bill_id=b.bill_id
         	left join mat_in_main c on b.group_id = c.group_id and b.hos_id = c.hos_id
           		and b.copy_code=c.copy_code and b.in_id=c.in_id
           	join store_tmp hsd on c.group_id=hsd.group_id and c.hos_id=hsd.hos_id and c.store_id=hsd.store_id
           		and c.store_no=hsd.store_no
            where  a.group_id = #{group_id,jdbcType=INTEGER}
          		and  a.hos_id = #{hos_id,jdbcType=INTEGER}
          		and  a.copy_code = #{copy_code,jdbcType=VARCHAR}
          		<if test="beginDate != null and beginDate != '' and endDate !=null and endDate !=''">
					AND c.confirm_date between to_date(#{beginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{endDate,jdbcType=DATE},'yyyy-MM-dd')
		  		</if>
		  		<if test="maker != null and maker !='' ">
		  			and c.maker=  #{maker,jdbcType=INTEGER}
		  		</if>
      	)
			
		SELECT 
			mbm.group_id,
			mbm.hos_id,
			mbm.copy_code,
			mbm.bill_id,
			mbm.bill_code,
			mbm.bill_no,
			mbm.ori_no,
			mbm.bill_type,
			mbm.stock_type_code,
			mbm.bill_date,
			mbm.sup_id,
			mbm.sup_no,
			hsd.sup_code,
			hsd.sup_name,
			mbm.pay_code,
			mpt.pay_term_code,
			mpt.pay_term_name,
			mbm.note,
			mbm.maker,
			su.user_name maker_name ,
			mbm.make_date,
			mbm.checker,
			sysu.user_name checker_name ,
			mbm.chk_date,
			mbm.is_init,
			mbm.state,
			mbm.bill_money payable_money,
			(mbm.bill_money-<!-- bip.num4- -->bip.num9)  payable_moneys  
			<if test="bill_id == null ">
				,(bip.num1 <!-- + bip.num4 --> ) payed_money
				,(bip.num1 <!-- + bip.num4 --> ) payed_moneys
			</if>
			,bip.num9 as dis_money
		
			FROM MAT_BILL_MAIN  mbm 
	 		join(
           		select  group_id, hos_id, copy_code, bill_id
           		from in_date a
      		)s on mbm.bill_id=s.bill_id 
			LEFT JOIN hos_sup_dict  hsd on
					mbm.group_id = hsd.group_id
					and mbm.hos_id = hsd.hos_id
					and mbm.sup_id = hsd.sup_id
					and mbm.sup_no = hsd.sup_no
			<if test="bill_id == null ">
			LEFT JOIN bill_id_pay bip ON
					mbm.group_id = bip.group_id 
					and mbm.hos_id = bip.hos_id
					and mbm.copy_code  = bip.copy_code
					and mbm.bill_id = bip.bill_id
			</if>
			LEFT JOIN MAT_PAY_TERM mpt on
					mbm.group_id = mpt.group_id
					and mbm.hos_id = mpt.hos_id
					and mbm.copy_code = mpt.copy_code
					and mbm.pay_code = mpt.pay_term_id
					and mpt.is_stop = 0
			LEFT JOIN SYS_USER su  ON 
				mbm.group_id = su.group_id
				and mbm.hos_id = su.hos_id
				and mbm.maker = su.user_id
			LEFT JOIN SYS_USER sysu ON 
				mbm.group_id = sysu.group_id
				and mbm.hos_id = sysu.hos_id
				and mbm.checker = sysu.user_id
			<where>
				<if test="group_id != null and group_id != '' ">
					and mbm.group_id = #{group_id,jdbcType=INTEGER}    
				</if>
				<if test="hos_id != null and hos_id != '' ">
					and mbm.hos_id = #{hos_id,jdbcType=INTEGER}    
				</if>
				<if test="copy_code != null and copy_code != '' ">
					and mbm.copy_code = #{copy_code,jdbcType=VARCHAR}    
				</if>
				<if test="bill_id != null and bill_id != '' ">
					and mbm.bill_id = #{bill_id,jdbcType=INTEGER}    
				</if>
				<if test="bill_no != null and bill_no != '' ">
					and mbm.bill_no like '${bill_no}%'    
				</if>
				<if test="maker != null and maker != '' ">
					and mbm.maker = #{maker,jdbcType=INTEGER}    
				</if>
				<if test="sup_id != null and sup_id != '' ">
					and mbm.sup_id = #{sup_id,jdbcType=INTEGER}    
				</if>
				<if test="pay_bill_type == 1 ">
					and mbm.bill_type = 2    
				</if>
				<if test=" is_init != null and is_init != '' ">
					and mbm.is_init = #{is_init,jdbcType=INTEGER}    
				</if>
				<if test="note != null and note != '' ">
					and mbm.note like '%${note}%'  
				</if>
				and  mbm.state = 2
				and  mbm.bill_id not in (
					select bill_id_pay.bill_id  
					from bill_id_pay 
					left join bill_id_bill  on bill_id_pay.group_id = bill_id_bill.group_id 
						and bill_id_pay.hos_id = bill_id_bill.hos_id 
						and bill_id_pay.copy_code = bill_id_bill.copy_code
						and bill_id_pay.bill_id  = bill_id_bill.bill_id 
					left join bill_id_pre  on bill_id_bill.group_id = bill_id_pre.group_id 
						and bill_id_bill.hos_id = bill_id_pre.hos_id 
						and bill_id_bill.copy_code = bill_id_pre.copy_code
						and bill_id_bill.in_id  = bill_id_pre.in_id 
       				where  nvl(bill_id_pay.num1,0) + nvl(bill_id_pre.num2,0)  = bill_id_bill.num3 
       			)	
				<!-- and mbm.bill_id not in (select bill_id from mat_pay_detail
						 where group_id = #{group_id,jdbcType=INTEGER}
						 	and hos_id = #{hos_id,jdbcType=INTEGER}
						 	and copy_code = #{copy_code,jdbcType=VARCHAR}
						 )     -->
				and (nvl(mbm.bill_money,0) - nvl(bip.num1,0) - <!-- nvl(bip.num4,0)- -->nvl(bip.num66,0) !=0)
				AND EXISTS (
					SELECT 1 FROM mat_bill_detail mbd
					LEFT JOIN mat_in_main mim  ON mbd.group_id = mim.group_id 
						AND mbd.hos_id = mim.hos_id 
						AND mbd.copy_code = mim.copy_code 
						AND mbd.in_id = mim.in_id 
					<!-- JOIN v_user_data_perm vudp  ON mbd.group_id = vudp.group_id 
						AND mbd.hos_id = vudp.hos_id 
						AND vudp.table_code = 'HOS_STORE_DICT'
						AND vudp.is_write = 1
						AND vudp.user_id = #{user_id,jdbcType=INTEGER}
						AND mim.store_id = vudp.perm_code -->
					WHERE mbd.group_id = mbm.group_id 
						AND mbd.hos_id = mbm.hos_id
						AND mbd.copy_code = mbm.copy_code 
						AND mbd.bill_id = mbm.bill_id
						and mim.store_id in (select  vudp.perm_code from v_user_data_perm vudp  
												where  vudp.group_id = #{group_id,jdbcType=INTEGER}
												AND vudp.hos_id = #{hos_id,jdbcType=INTEGER}
												AND vudp.table_code = 'HOS_STORE_DICT'
												AND vudp.is_write = 1
												AND vudp.user_id = #{user_id,jdbcType=INTEGER}
												)
				)
		</where> 
		order by mbm.bill_no
	</select>

<!-- 根据查询条件查询出全部付款的的发票 -->
	<select id="queryMatBillMain_PayAdd" resultMap="billMap" parameterType="java.util.Map" >
			with bill_id_pay as (select group_id, hos_id , copy_code , bill_id , nvl(sum(pay_money),0) num1 ,    
              nvl(sum(nvl(payed_money,0)),0) num4, nvl(sum(nvl(dis_money,0)),0) as dis_money
               from mat_pay_detail  WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
               and copy_code = ${copy_code} group by  group_id, hos_id , copy_code , bill_id) ,
      bill_id_pre as (select group_id, hos_id , copy_code , in_id , nvl(sum(pre_pay_money),0) num2 
               from mat_pre_pay_detail  WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
               and copy_code = ${copy_code} group by  group_id, hos_id , copy_code , in_id ) ,
      bill_id_bill as (select group_id, hos_id , copy_code ,bill_id , in_id , nvl(sum(bill_money),0) num3    
               from mat_bill_detail 
               where group_id = ${group_id}  and hos_id = ${hos_id} 
               and copy_code = ${copy_code} group by  group_id, hos_id , copy_code , bill_id ,in_id ),
      in_date as (
         select distinct md.group_id, md.hos_id, md.copy_code, md.bill_id <if test="is_init == 0">,mi.confirm_date</if><if test="is_init == 1">,mnd.confirm_date</if>
         from mat_bill_detail md
       
       <!-- 2018-10-24 因为有的是期初入库所有在这里改一下方法 -->
       <if test="is_init == 0">
         left join mat_in_main mi on mi.group_id = md.group_id
           and mi.hos_id = md.hos_id
           and mi.copy_code=md.copy_code
           and mi.in_id=md.in_id
        </if>
        <if test="is_init == 1">
        
       	 left join mat_nopay_deliver_d mndd on md.group_id = mndd.group_id
		    and md.hos_id = mndd.hos_id
		    and md.copy_code = mndd.copy_code
		    and md.in_id = mndd.deliver_id
		    and md.in_detail_id = mndd.detail_id 
		    left join mat_nopay_deliver mnd on mndd.group_id = mnd.group_id
		    and mndd.hos_id = mnd.hos_id
		    and mndd.copy_code = mnd.copy_code
		    and mndd.deliver_id = mnd.deliver_id 
        </if>
            where  md.group_id = ${group_id}
          and  md.hos_id = ${hos_id}
          and  md.copy_code = ${copy_code}
          <if test="beginDate != null and beginDate != '' and endDate !=null and endDate !=''">
      AND mi.confirm_date between to_date(#{beginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{endDate,jdbcType=DATE},'yyyy-MM-dd')
      </if>
         <if test="store_id != null and store_id != '' ">
        	 <if test="is_init == 0">
        		 and mi.store_id=#{store_id,jdbcType=INTEGER}   
        	 </if>	 
        	 <if test="is_init == 1">
        	 	 and mnd.store_id=#{store_id,jdbcType=INTEGER}   
        	 </if> 
         </if>
        group by md.group_id, md.hos_id, md.copy_code, md.bill_id <if test="is_init == 0">,mi.confirm_date</if><if test="is_init == 1">,mnd.confirm_date</if>
      )
      
    SELECT 
    mbm.group_id,
    mbm.hos_id,
    mbm.copy_code,
    mbm.bill_id,
    mbm.bill_code,
    mbm.bill_no,
    mbm.ori_no,
    mbm.bill_type,
    mbm.stock_type_code,
    mbm.bill_date,
    mbm.sup_id,
    mbm.sup_no,
    hsd.sup_code,
    hsd.sup_name,
    mbm.pay_code,
    mpt.pay_term_code,
    mpt.pay_term_name,
    mbm.note,
    mbm.maker,
    su.user_name maker_name ,
    mbm.make_date,
    mbm.checker,
    sysu.user_name checker_name ,
    mbm.chk_date,
    mbm.is_init,
    mbm.state,
    mbm.bill_money payable_money,
    mbm.bill_money payable_moneys  
    <if test="bill_id == null ">
      ,(bip.num1 + bip.num4 ) payed_money
      ,(bip.num1 + bip.num4 ) payed_moneys
    </if>
    ,bip.dis_money
    FROM MAT_BILL_MAIN  mbm 
   right join(
           select distinct group_id, hos_id, copy_code, bill_id
           from in_date a
            where  group_id = ${group_id}
          and hos_id = ${hos_id}
          and  copy_code = ${copy_code}
          
           group by group_id, hos_id, copy_code, bill_id
      )s on mbm.bill_id=s.bill_id
  
    LEFT JOIN hos_sup_dict  hsd
        on
          mbm.group_id = hsd.group_id
          and mbm.hos_id = hsd.hos_id
          and mbm.sup_id = hsd.sup_id
          and mbm.sup_no = hsd.sup_no
    <if test="bill_id == null ">
    LEFT JOIN bill_id_pay bip
        ON
          mbm.group_id = bip.group_id 
          and mbm.hos_id = bip.hos_id
          and mbm.copy_code  = bip.copy_code
          and mbm.bill_id = bip.bill_id
    </if>
    LEFT JOIN MAT_PAY_TERM mpt
        on
          mbm.group_id = mpt.group_id
          and mbm.hos_id = mpt.hos_id
          and mbm.copy_code = mpt.copy_code
          and mbm.pay_code = mpt.pay_term_id
          and mpt.is_stop = 0
    LEFT JOIN SYS_USER su 
      ON 
        mbm.group_id = su.group_id
        and mbm.hos_id = su.hos_id
        and mbm.maker = su.user_id
    LEFT JOIN SYS_USER sysu
      ON 
        mbm.group_id = sysu.group_id
        and mbm.hos_id = sysu.hos_id
        and mbm.checker = sysu.user_id
    <where>
      <if test="group_id != null and group_id != '' ">
        and mbm.group_id = #{group_id,jdbcType=INTEGER}    
      </if>
      <if test="hos_id != null and hos_id != '' ">
        and mbm.hos_id = #{hos_id,jdbcType=INTEGER}    
      </if>
      <if test="copy_code != null and copy_code != '' ">
        and mbm.copy_code = #{copy_code,jdbcType=VARCHAR}    
      </if>
      <if test="bill_id != null and bill_id != '' ">
        and mbm.bill_id = #{bill_id,jdbcType=INTEGER}    
      </if>
      <if test="bill_no != null and bill_no != '' ">
        and mbm.bill_no like '${bill_no}%'    
      </if>
      <if test="maker != null and maker != '' ">
        and mbm.maker = #{maker,jdbcType=INTEGER}    
      </if>
      <if test="sup_id != null and sup_id != '' ">
        and mbm.sup_id = #{sup_id,jdbcType=INTEGER}    
      </if>
      <if test="sup_no != null and sup_no != '' ">
        and mbm.sup_no = #{sup_no,jdbcType=INTEGER}    
      </if>
      <if test="pay_bill_type == 1 ">
        and mbm.bill_type = 2    
      </if>
      <if test=" is_init != null and is_init != '' ">
        and mbm.is_init = #{is_init,jdbcType=INTEGER}    
      </if>
      <if test="note != null and note != '' ">
        and mbm.note like '%${note}%'  
      </if>
        and  mbm.state = 2
        and  mbm.bill_id not in (select bill_id_pay.bill_id  from bill_id_pay left  join bill_id_bill 
                  on 
                    bill_id_pay.group_id = bill_id_bill.group_id 
                    and bill_id_pay.hos_id = bill_id_bill.hos_id 
                    and bill_id_pay.copy_code = bill_id_bill.copy_code
                    and bill_id_pay.bill_id  = bill_id_bill.bill_id 
                  left join bill_id_pre 
                  on
                    bill_id_bill.group_id = bill_id_pre.group_id 
                    and bill_id_bill.hos_id = bill_id_pre.hos_id 
                    and bill_id_bill.copy_code = bill_id_pre.copy_code
                    and bill_id_bill.in_id  = bill_id_pre.in_id 
                       where round( nvl(bill_id_pay.num1,0) + nvl(bill_id_pre.num2,0),4)  = round(  bill_id_bill.num3,4) )  
        <!-- and mbm.bill_id not in (select bill_id from mat_pay_detail
             where group_id = #{group_id,jdbcType=INTEGER}
               and hos_id = #{hos_id,jdbcType=INTEGER}
               and copy_code = #{copy_code,jdbcType=VARCHAR}
             )     -->
      and ( round( nvl(mbm.bill_money,0) - nvl(bip.num1,0) - nvl(bip.num4,0) -nvl(bip.dis_money,0),4)!= 0)
      <!--  AND EXISTS(
        SELECT 1 FROM mat_bill_detail mbd
        LEFT JOIN mat_in_main mim 
          ON mbd.group_id = mim.group_id 
          AND mbd.hos_id = mim.hos_id 
          AND mbd.copy_code = mim.copy_code 
          AND mbd.in_id = mim.in_id 
        JOIN v_user_data_perm vudp 
          ON mbd.group_id = vudp.group_id 
          AND mbd.hos_id = vudp.hos_id 
          AND vudp.table_code = 'HOS_STORE_DICT'
          AND vudp.is_write = 1
          AND vudp.user_id = #{user_id,jdbcType=INTEGER}
          AND mim.store_id = vudp.perm_code
        WHERE mbd.group_id = mbm.group_id 
          AND mbd.hos_id = mbm.hos_id
          AND mbd.copy_code = mbm.copy_code 
          AND mbd.bill_id = mbm.bill_id
      )-->
    </where> 
    order by mbm.bill_date
	</select>
	<!-- 修改页面的添加按钮的查询-->
	<select id="queryMatBillDetail_PayAdd" resultMap="billDetailMap" parameterType="java.util.Map" >
		
		with payed_tmp as (
   	  		 select a.group_id, a.hos_id, a.copy_code, b.bill_id, b.bill_detail_id
			      , sum(b.pay_money) as pay_money,sum(b.dis_money) dis_money 
			    from mat_pay_main a
			      left join mat_pay_detail b on a.group_id = b.group_id
			    and a.hos_id = b.hos_id
			    and a.copy_code = b.copy_code
			    and a.pay_id = b.pay_id 
      		where 
			      a.group_id=#{group_id,jdbcType=INTEGER}
			     and  a.hos_id=#{hos_id,jdbcType=INTEGER}
			     and a.copy_code=#{copy_code,jdbcType=VARCHAR}
			     <if test=" pay_id != null and pay_id != '' ">
			     and a.pay_id != #{pay_id,jdbcType=INTEGER}
			     </if>
    			  and b.bill_id = #{bill_id,jdbcType=INTEGER}
 		 group by  a.group_id,a.hos_id,a.copy_code, b.bill_id,b.bill_detail_id
			)
		
		select temp.group_id,temp.hos_id,temp.copy_code,temp.bill_id,temp.bill_detail_id,
			temp.in_id,temp.in_detail_id,temp.in_no,temp.inv_id,temp.inv_no,temp.inv_code,
			temp.inv_name,temp.unit_code,temp.unit_name,temp.inv_model,temp.sn,temp.price,
			temp.amount,temp.bill_money,temp.payed_money,temp.pay_money,temp.dis_money
 
		from (
			 select mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
		    , mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
		    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
		    , t.batch_no, nvl(t.sn, null) as sn, t.price
		    , t.amount, mbd.bill_money, nvl(pt.pay_money, 0) as payed_money
		    ,nvl(mbd.bill_money,0)-nvl(pt.pay_money,0)-nvl(pt.dis_money,0) as pay_money
		    , nvl(pt.dis_money, 0) as dis_money
  		from mat_bill_detail mbd
		
			<if test="is_init == 0">
			left join ( select  mid.group_id , mid.hos_id , mid.copy_code , mid.in_id ,mid.in_no,mid.in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model,mid.batch_no , mid.sn, mid.price , mid.amount , mid.amount_money
			 			from mat_in_detail mid 
			 	left join mat_inv_dict minvd 
			 		ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu
			 		on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
				) t		
			ON
					mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
					and mbd.payable_money=t.amount_money
			</if>
			<if test=" is_init == 1">
			left join ( select  mid.group_id , mid.hos_id , mid.copy_code , mid.deliver_id in_id , mid.deliver_no in_no, mid.detail_id in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model, mid.batch_no , null as sn , mid.price , mid.amount , mid.amount_money
			 			from mat_nopay_deliver_d  mid 	
			 	left join mat_inv_dict minvd 
			 		ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu
			 		on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
				) t		
			ON
					mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
			</if>
			 
			left join ( select group_id , hos_id , copy_code , in_id , in_detail_id , sum(pre_pay_money) payed_money 
							from  mat_pre_pay_detail 
							where group_id = ${group_id} and hos_id = ${hos_id} and copy_code = #{copy_code}
							group by group_id , hos_id , copy_code , in_id , in_detail_id ) mppd
				ON
					mbd.group_id = mppd.group_id  and 
					mbd.hos_id = mppd.hos_id  and 
					mbd.copy_code = mppd.copy_code  and
					mbd.in_id = mppd.in_id and 
					mbd.in_detail_id = mppd.in_detail_id
			 left join mat_pay_detail mpd on
				   mbd.group_id=mpd.group_id
				  and mbd.hos_id=mpd.hos_id
				  and mbd.copy_code=mpd.copy_code
				  and mbd.bill_id=mpd.bill_id
				  and mbd.bill_detail_id=mpd.bill_detail_id
			 left join payed_tmp pt on mbd.group_id=pt.group_id
					  and mbd.hos_id=pt.hos_id
					  and mbd.copy_code=pt.copy_code
					  and mbd.bill_id=pt.bill_id 
					  and mbd.bill_detail_id=pt.bill_detail_id
			<where>
				<if test=" group_id != null and group_id != ''">
					and mbd.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test=" hos_id != null and hos_id != ''">
					and mbd.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test=" copy_code != null and copy_code != ''">
					and mbd.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test=" bill_id != null and bill_id != ''">
					and mbd.bill_id = #{bill_id,jdbcType=INTEGER}
				</if>
					<if test=" bill_detail_id != null and bill_detail_id != ''">
					mbd.bill_detail_id  = #{bill_detail_id,jdbcType=INTEGER}
				</if> 
				group by  mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
			, mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
		    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
		    , t.batch_no, t.sn,  t.price
		    , t.amount, mbd.bill_money,mpd.bill_money, pt.pay_money
		    ,pt.pay_money,  pt.dis_money
		
				
				
	<!-- 			<if test=" pay_id != null and pay_id != '' ">
					and mbd.bill_detail_id in (select distinct(bill_detail_id)  from mat_pay_detail where
												group_id = ${group_id}
												and hos_id = ${hos_id}
												and copy_code = #{copy_code}
												and bill_id = ${bill_id}
												and pay_id = ${pay_id}
												 ) 
				</if> -->
	<!-- 			<if test=" pay_id == null or pay_id == ''">
					and mbd.bill_detail_id not in (select distinct(bill_detail_id)  from mat_pay_detail where
												group_id = ${group_id}
												and hos_id = ${hos_id}
												and copy_code = #{copy_code}
												and bill_id = ${bill_id}
											) 
				</if> -->
			</where>
		) temp <!-- where temp.bill_money &lt;&gt; temp.payed_money  -->
	</select>
	
	
	
	<!-- 根据 付款单ID 查询 付款单明细信息 -->
	<select id="queryMatBillDetail_Pay" resultMap="billDetailMap" parameterType="java.util.Map" >
		
	with payed_tmp as (
   	  select a.group_id,a.hos_id,a.copy_code, b.bill_id,b.bill_detail_id,sum(b.pay_money) pay_money
   	  ,sum(b.dis_money) as dis_money
      		from mat_pay_main a
      		left join mat_pay_detail b  on
      		a.group_id=b.group_id
      		and a.hos_id=b.hos_id
      		and a.copy_code=b.copy_code
      		and  a.pay_id=b.pay_id
      		where 
			      a.group_id=#{group_id,jdbcType=INTEGER}
			     and  a.hos_id=#{hos_id,jdbcType=INTEGER}
			     and a.copy_code=#{copy_code,jdbcType=VARCHAR}
			     and  a.state=2
 		 group by  a.group_id,a.hos_id,a.copy_code, b.bill_id,b.bill_detail_id
			)
		
		select temp.group_id,temp.hos_id,temp.copy_code,temp.bill_id,temp.bill_detail_id,
			temp.in_id,temp.in_detail_id,temp.in_no,temp.inv_id,temp.inv_no,temp.inv_code,
			temp.inv_name,temp.unit_code,temp.unit_name,temp.inv_model,temp.sn,temp.price,
			temp.amount,temp.bill_money,temp.payed_money,temp.pay_money,temp.dis_money
 
		from (
			select mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
				, mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
				, t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
				, t.batch_no, nvl(t.sn, null) as sn, t.price
				, t.amount, mbd.bill_money
				, nvl(pt.pay_money, 0)  as payed_money
				, nvl(mbd.bill_money,0) - nvl(pt.pay_money, 0) as pay_money
				, nvl(pt.dis_money, 0) as dis_money
		from mat_bill_detail mbd
		
			<if test="is_init == 0">
			left join ( select  mid.group_id , mid.hos_id , mid.copy_code , mid.in_id ,mid.in_no,mid.in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model,mid.batch_no , mid.sn, mid.price , mid.amount , mid.amount_money
			 			from mat_in_detail mid 
			 	left join mat_inv_dict minvd 
			 		ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu
			 		on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
				) t		
			ON
					mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
					and mbd.payable_money=t.amount_money
			</if>
			<if test=" is_init == 1">
			left join ( select  mid.group_id , mid.hos_id , mid.copy_code , mid.deliver_id in_id , mid.deliver_no in_no, mid.detail_id in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model, mid.batch_no , null as sn , mid.price , mid.amount , mid.amount_money
			 			from mat_nopay_deliver_d  mid 	
			 	left join mat_inv_dict minvd 
			 		ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu
			 		on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
				) t		
			ON
					mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
			</if>
			 
			left join ( select group_id , hos_id , copy_code , in_id , in_detail_id , sum(pre_pay_money) payed_money 
							from  mat_pre_pay_detail 
							where group_id = ${group_id} and hos_id = ${hos_id} and copy_code = #{copy_code}
							group by group_id , hos_id , copy_code , in_id , in_detail_id ) mppd
				ON
					mbd.group_id = mppd.group_id  and 
					mbd.hos_id = mppd.hos_id  and 
					mbd.copy_code = mppd.copy_code  and
					mbd.in_id = mppd.in_id and 
					mbd.in_detail_id = mppd.in_detail_id
			 left join mat_pay_detail mpd on
				   mbd.group_id=mpd.group_id
				  and mbd.hos_id=mpd.hos_id
				  and mbd.copy_code=mpd.copy_code
				  and mbd.bill_id=mpd.bill_id
				  and mbd.bill_detail_id=mpd.bill_detail_id
			 left join payed_tmp pt on mbd.group_id=pt.group_id
					  and mbd.hos_id=pt.hos_id
					  and mbd.copy_code=pt.copy_code
					  and mbd.bill_id=pt.bill_id 
					  and mbd.bill_detail_id=pt.bill_detail_id
			<where>
				<if test=" group_id != null and group_id != ''">
					and mbd.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test=" hos_id != null and hos_id != ''">
					and mbd.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test=" copy_code != null and copy_code != ''">
					and mbd.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test=" bill_id != null and bill_id != ''">
					and mbd.bill_id = #{bill_id,jdbcType=INTEGER}
				</if>
					<if test=" bill_detail_id != null and bill_detail_id != ''">
					mbd.bill_detail_id  = #{bill_detail_id,jdbcType=INTEGER}
				</if> 
				group by  mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
			, mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
		    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
		    , t.batch_no, t.sn,  t.price
		    , t.amount, mbd.bill_money,mpd.bill_money, pt.pay_money
		    ,pt.pay_money,  pt.dis_money
		
				
				
	<!-- 			<if test=" pay_id != null and pay_id != '' ">
					and mbd.bill_detail_id in (select distinct(bill_detail_id)  from mat_pay_detail where
												group_id = ${group_id}
												and hos_id = ${hos_id}
												and copy_code = #{copy_code}
												and bill_id = ${bill_id}
												and pay_id = ${pay_id}
												 ) 
				</if> -->
	<!-- 			<if test=" pay_id == null or pay_id == ''">
					and mbd.bill_detail_id not in (select distinct(bill_detail_id)  from mat_pay_detail where
												group_id = ${group_id}
												and hos_id = ${hos_id}
												and copy_code = #{copy_code}
												and bill_id = ${bill_id}
											) 
				</if> -->
			</where>
		) temp <!-- where temp.bill_money &lt;&gt; temp.payed_money  -->
	</select>
	
	
	<select id="queryMatBillDetail_PayN" resultMap="billDetailMap" parameterType="java.util.Map" >
		with payed_tmp as (
   	  		select a.group_id, a.hos_id, a.copy_code, b.bill_id, b.bill_detail_id
			, sum(b.pay_money) as pay_money,b.payed_money
				    from mat_pay_main a
				      left join mat_pay_detail b on a.group_id = b.group_id
				    and a.hos_id = b.hos_id
				    and a.copy_code = b.copy_code
				    and a.pay_id = b.pay_id 
      		where    a.group_id=#{group_id,jdbcType=INTEGER}
			     and a.hos_id=#{hos_id,jdbcType=INTEGER}
			     and a.copy_code=#{copy_code,jdbcType=VARCHAR}
			     and b.bill_id=#{bill_id,jdbcType=INTEGER}
     			 and a.pay_id=#{pay_id,jdbcType=INTEGER}
 		 	group by  a.group_id,a.hos_id,a.copy_code, b.bill_id,b.bill_detail_id,b.payed_money
	    )
		
		select temp.group_id,temp.hos_id,temp.copy_code,temp.bill_id,temp.bill_detail_id,
			temp.in_id,temp.in_detail_id,temp.in_no,temp.inv_id,temp.inv_no,temp.inv_code,
			temp.inv_name,temp.unit_code,temp.unit_name,temp.inv_model,temp.sn,temp.price,
			temp.amount,temp.bill_money,temp.payed_money,temp.pay_money,temp.dis_money
		from (
			 select mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
			    , mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
			    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
			    , t.batch_no, nvl(t.sn, null) as sn, t.price
			    , t.amount, mbd.bill_money, nvl(pt.payed_money, 0) as payed_money
			    ,nvl(pt.pay_money, 0) as pay_money<!--  nvl(mbd.bill_money, 0) - nvl(pt.pay_money, 0) - nvl(mpd.dis_money, 0) as pay_money -->
			    , nvl(mpd.dis_money, 0) as dis_money
			  from mat_bill_detail mbd
			<if test="is_init == 0">
			left join ( 
				select  mid.group_id , mid.hos_id , mid.copy_code , mid.in_id ,mid.in_no,mid.in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model,mid.batch_no , mid.sn, mid.price , mid.amount , mid.amount_money
			 			from mat_in_detail mid 
			 	left join mat_inv_dict minvd  ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
			 			and hu.is_stop = 0
			) t ON mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
					and mbd.payable_money=t.amount_money
			</if>
			<if test=" is_init == 1">
			left join ( 
				select  mid.group_id , mid.hos_id , mid.copy_code , mid.deliver_id in_id , mid.deliver_no in_no, mid.detail_id in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model, mid.batch_no , null as sn , mid.price , mid.amount , mid.amount_money
			 			from mat_nopay_deliver_d  mid 	
			 	left join mat_inv_dict minvd  ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
			 			and hu.is_stop = 0
			) t ON
					mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
			</if>
			left join ( 
				select group_id , hos_id , copy_code , in_id , in_detail_id , sum(pre_pay_money) payed_money 
				from  mat_pre_pay_detail 
				where group_id = ${group_id} and hos_id = ${hos_id} and copy_code = #{copy_code}
				group by group_id , hos_id , copy_code , in_id , in_detail_id 
			) mppd ON mbd.group_id = mppd.group_id  and 
					mbd.hos_id = mppd.hos_id  and 
					mbd.copy_code = mppd.copy_code  and
					mbd.in_id = mppd.in_id and 
					mbd.in_detail_id = mppd.in_detail_id
			 left join mat_pay_detail mpd on mbd.group_id=mpd.group_id
				  and mbd.hos_id=mpd.hos_id
				  and mbd.copy_code=mpd.copy_code
				  and mbd.bill_id=mpd.bill_id
				  and mbd.bill_detail_id=mpd.bill_detail_id 
			 left join payed_tmp pt on mbd.group_id=pt.group_id
					and mbd.hos_id=pt.hos_id
					and mbd.copy_code=pt.copy_code
					and mbd.bill_id=pt.bill_id 
					and mbd.bill_detail_id=pt.bill_detail_id
			<where>
				<if test=" group_id != null and group_id != ''">
					and mbd.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test=" hos_id != null and hos_id != ''">
					and mbd.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test=" copy_code != null and copy_code != ''">
					and mbd.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test=" bill_id != null and bill_id != ''">
					and mbd.bill_id = #{bill_id,jdbcType=INTEGER}
				</if>
				<if test=" bill_detail_id != null and bill_detail_id != ''">
					mbd.bill_detail_id  = #{bill_detail_id,jdbcType=INTEGER}
				</if>
				<if test=" pay_id != null and pay_id != ''">
					and mpd.pay_id = #{pay_id,jdbcType=INTEGER}
				</if> 
				<if test=" in_id != null and in_id != ''">
					and t.in_id = #{in_id,jdbcType=INTEGER}
				</if>
				 <!-- group by  mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
					, mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
				    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
				    , t.batch_no, t.sn,  t.price
				    , t.amount, mbd.bill_money,mpd.bill_money, pt.pay_money
				    ,pt.pay_money, mpd.dis_money  -->
					
	<!-- 			<if test=" pay_id != null and pay_id != '' ">
					and mbd.bill_detail_id in (select distinct(bill_detail_id)  from mat_pay_detail where
												group_id = ${group_id}
												and hos_id = ${hos_id}
												and copy_code = #{copy_code}
												and bill_id = ${bill_id}
												and pay_id = ${pay_id}
												 ) 
				</if> -->
	<!-- 			<if test=" pay_id == null or pay_id == ''">
					and mbd.bill_detail_id not in (select distinct(bill_detail_id)  from mat_pay_detail where
												group_id = ${group_id}
												and hos_id = ${hos_id}
												and copy_code = #{copy_code}
												and bill_id = ${bill_id}
											) 
				</if> -->
			</where>
	group by   mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
    , mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
    , t.batch_no,  t.price,t.sn,pt.payed_money,pt.pay_money,mpd.dis_money
    , t.amount, mbd.bill_money
		) temp 
		<where>
			<if test="state != 2 ">
				and temp.bill_money &lt;&gt; temp.payed_money 
			</if>
		</where>
	
	</select>
	<select id="queryPayID" resultType="java.lang.Long" >
		select max(pay_id)  from mat_pay_main
	</select>
	<!-- 查询 付款单序列（nextval）  -->
	<select id="queryPaySeqNextval" resultType="java.lang.Long" useCache="false" flushCache="true">
		select MAT_PAY_MAIN_SEQ.nextval  from dual
	</select>
	
	<!-- 查询付款单详细信息 （修改页面回值用) -->
	<select id="queryMatPayMainUnit" resultMap="unitPayMap" parameterType="java.util.Map" >
	
		SELECT 
		mpm.group_id ,
		mpm.hos_id ,
		mpm.copy_code ,
		mpm.pay_id ,
		mpm.pay_bill_no ,
		mpm.pay_date ,
		mpm.pay_bill_type ,
		mpm.sup_id ,
		mpm.sup_no ,
		hsd.sup_code ,
		hsd.sup_name,
		mpm.pay_code ,
		mpt.pay_term_code,
		mpt.pay_term_name,
		mpm.pay_type_code ,
		apt.pay_name ,
		mpm.acct_code ,
		mpm.cheq_no ,
		mpm.payable_money ,
		mpm.payed_money ,
		mpm.pay_money ,
		mpm.maker ,
		mpm.make_date ,
		mpm.checker ,
		mpm.chk_date ,
		mpm.state ,
		mpm.is_init ,
		mpm.note,
		mpm.pay_dept_id,
		hdd.dept_no,
		mpm.bank_name,
		mpm.bank_no,
		mpm.acc_check_state
		FROM mat_pay_main mpm 
		LEFT JOIN hos_sup_dict  hsd
			on
				mpm.group_id = hsd.group_id
				and mpm.hos_id = hsd.hos_id
				and mpm.sup_id = hsd.sup_id
				and hsd.is_stop = 0
		LEFT JOIN MAT_PAY_TERM mpt
			on
				mpm.group_id = mpt.group_id
				and mpm.hos_id = mpt.hos_id
				and mpm.copy_code = mpt.copy_code
				and mpm.pay_code = mpt.pay_term_id
				and mpt.is_stop = 0
		LEFT JOIN ACC_PAY_TYPE apt
			on
				mpm.group_id = apt.group_id
				and mpm.hos_id = apt.hos_id
				and mpm.copy_code = apt.copy_code
				and mpm.pay_type_code = apt.pay_code
				and apt.is_stop = 0
		LEFT JOIN HOS_DEPT_DICT hdd
		ON
		     mpm.group_id = hdd.group_id and mpm.hos_id = hdd.hos_id
		     and mpm.pay_dept_id = hdd.dept_id and hdd.is_stop = 0
		<where>
			<if test="group_id != null and group_id != '' ">
				and mpm.group_id = #{group_id,jdbcType=INTEGER}    
			</if>
			<if test="hos_id != null and hos_id != '' ">
				and mpm.hos_id = #{hos_id,jdbcType=INTEGER}    
			</if>
			<if test="copy_code != null and copy_code != '' ">
				and mpm.copy_code = #{copy_code,jdbcType=VARCHAR}    
			</if>
			<if test="pay_id != null and pay_id != '' ">
				and mpm.pay_id = #{pay_id,jdbcType=INTEGER}    
			</if>
		</where>
	</select>
	<!-- 审核、消审-->
	<update id="updatePayState" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_pay_main SET
				checker = #{item.checker,jdbcType=INTEGER}
				,
				chk_date = to_date(#{item.chk_date,jdbcType=DATE},'yyyy-MM-dd')
				,
				state = #{item.state,jdbcType=INTEGER}
			
			WHERE 
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				pay_id = #{item.pay_id,jdbcType=INTEGER}
				 and 
				pay_bill_no = #{item.pay_bill_no,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 入库主表模板打印 -->
	<select id="queryMatPayMainPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		 SELECT 
	    	mpm.group_id AS group_id,
    		mpm.hos_id AS hos_id,
    		mpm.copy_code AS copy_code,
    		mpm.pay_id AS pay_id,
    		mpm.pay_bill_no AS pay_bill_no,
    		to_char(mpm.pay_date, 'yyyy-MM-dd')  AS pay_date,
    		mpm.pay_bill_type AS pay_bill_type,
    		mpm.sup_id AS sup_id, 
    		mpm.sup_no,
    		hsd.sup_code AS sup_code,
    		hsd.sup_name AS sup_name,
    		<!-- mpm.pay_code AS pay_code, -->
    		apt.pay_name  AS pay_code,
    		<!-- mpt.pay_term_name  pay_code, -->
    		apt.pay_name pay_type_code,
		    <!-- mpm.acct_code
		    , -->
    		mpm.cheq_no,
    		mpm.payable_money  payable_money_main,
    		mpm.payed_money  payed_money_main,
    		mpm.pay_money  pay_money_main,
    		mpm.payable_money  payable_money_upper,
    		mpm.payed_money  payed_money_upper,
    		mpm.pay_money  pay_money_upper,
    		mpm.maker maker_name,
    		su.user_name maker,
    		to_char(mpm.make_date, 'yyyy-MM-dd')  make_date,
    		mpm.checker checker_name,
    		sysu.user_name checker,
    		to_char(mpm.chk_date, 'yyyy-MM-dd')  chk_date,
    		mpm.state,
    		mpm.is_init,
    		mpm.note,
    		hdd.dept_name as PAY_DEPT_NAME,
    		hsb.bank_name as SUP_BANK_NAME,
    		hsb.bank_no as ACCT_CODE,
    		to_char(wm_concat(to_char(mbm.bill_no))) as BILL_NOS,
    		detail_num.bill_num as BILL_NUM
    	FROM MAT_PAY_MAIN  mpm
    	LEFT JOIN (
	  		SELECT DISTINCT pay_id, bill_id 
	  		FROM MAT_PAY_DETAIL 
	  		WHERE group_id = #{group_id,jdbcType=INTEGER}
	    	AND hos_id = #{hos_id,jdbcType=INTEGER}
	    	AND copy_code = #{copy_code,jdbcType=VARCHAR}
	    	AND pay_id = #{pay_id,jdbcType=INTEGER}
		)
		mpd
		ON
	   		mpm.pay_id = mpd.pay_id
	   	left join (
         	select count(bill_id) as bill_num,pay_id 
         	from (
             	select distinct bill_id,pay_id 
             	from MAT_PAY_DETAIL
             	WHERE group_id = #{group_id,jdbcType=INTEGER}
			    	AND hos_id = #{hos_id,jdbcType=INTEGER}
			    	AND copy_code = #{copy_code,jdbcType=VARCHAR}
			    	AND pay_id = #{pay_id,jdbcType=INTEGER}
         	) a 
         	group by pay_id
    	) detail_num on mpm.pay_id = detail_num.pay_id
		LEFT JOIN MAT_BILL_MAIN mbm
		ON
		     mpd.bill_id = mbm.bill_id
		LEFT JOIN HOS_DEPT_DICT hdd
		ON
		     mpm.group_id = hdd.group_id and mpm.hos_id = hdd.hos_id
		     and mpm.pay_dept_id = hdd.dept_id and hdd.is_stop = 0
	    LEFT JOIN HOS_SUP_DICT HSD ON 
	        mpm.group_id = hsd.group_id
	        AND mpm.hos_id = hsd.hos_id
	        AND mpm.sup_id = hsd.sup_id
	        <!-- AND mpm.sup_no = hsd.sup_no -->
	        AND hsd.is_stop = 0
	    LEFT JOIN SYS_USER su 
	    ON
	        mpm.group_id = su.group_id
	        AND mpm.hos_id = su.hos_id
	        AND mpm.maker = su.user_id
	        AND su.is_stop=0
	    LEFT JOIN SYS_USER sysu 
	    ON
	        mpm.group_id = sysu.group_id
	        AND mpm.hos_id = sysu.hos_id
	  		AND mpm.checker = sysu.user_id
	        AND sysu.is_stop=0
    	LEFT JOIN ACC_PAY_TYPE apt ON 
      		mpm.group_id = apt.group_id
			AND mpm.hos_id = apt.hos_id
			AND mpm.copy_code = apt.copy_code
			AND mpm.pay_type_code = apt.pay_code
      		AND apt.is_stop=0
    	LEFT JOIN MAT_PAY_TERM mpt ON
      		mpt.group_id = mpm.group_id
			AND mpt.hos_id = mpm.hos_id
			AND mpt.copy_code = mpm.copy_code
			AND mpt.pay_term_code = mpm.pay_code
			AND mpt.is_stop=0
		<!-- 2017/03/06 查询供应商默认银行信息 -->
		LEFT JOIN (
			SELECT group_id,hos_id,sup_id,bank_name,bank_no
	     	FROM HOS_SUP_BANK 
	     	WHERE
	          group_id = #{group_id,jdbcType=INTEGER}  AND hos_id = #{hos_id,jdbcType=INTEGER}
	          AND is_default = 1
		) hsb
		ON
		  	mpm.group_id = hsb.group_id AND mpm.hos_id = hsb.hos_id
		  	AND mpm.sup_id = hsb.sup_id
		WHERE mpm.group_id = #{group_id,jdbcType=INTEGER} 
			AND mpm.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND mpm.pay_id = #{pay_id,jdbcType=INTEGER}
		GROUP BY 
			mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pay_id, mpm.pay_bill_no, 
			mpm.pay_date, mpm.pay_bill_type, mpm.sup_id, mpm.sup_no, hsd.sup_code, 
			hsd.sup_name, mpt.pay_term_name , mpm.pay_type_code, apt.pay_name, 
			mpm.acct_code, mpm.cheq_no, mpm.payable_money, mpm.payed_money, mpm.pay_money, 
			mpm.payable_money, mpm.payed_money, mpm.pay_money, mpm.maker, su.user_name, 
			mpm.make_date, mpm.checker, sysu.user_name,mpm.chk_date, mpm.state, 
			mpm.is_init, mpm.note,hdd.dept_name,hsb.bank_name,hsb.bank_no,detail_num.bill_num 
	</select>
	
	<select id="queryMatPayMainPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		 SELECT mpm.pay_id as id,
	    	mpm.group_id AS group_id,
    		mpm.hos_id AS hos_id,
    		mpm.copy_code AS copy_code,
    		mpm.pay_id AS pay_id,
    		mpm.pay_bill_no AS pay_bill_no,
    		to_char(mpm.pay_date, 'yyyy-MM-dd') AS pay_date,
    		mpm.pay_bill_type AS pay_bill_type,
    		mpm.sup_id AS sup_id,
    		mpm.sup_no,
    		hsd.sup_code AS sup_code,
    		hsd.sup_name AS sup_name,
    		<!-- mpm.pay_code AS pay_code, -->
    		apt.pay_name  AS pay_code,
    		<!--mpt.pay_term_name  pay_code,-->
    		apt.pay_name pay_type_code,
		    <!-- mpm.acct_code
		    , -->
    		mpm.cheq_no,
    		mpm.payable_money  payable_money_main,
    		mpm.payed_money  payed_money_main,
    		mpm.pay_money  pay_money_main,
    		mpm.payable_money  payable_money_upper,
    		mpm.payed_money  payed_money_upper,
    		mpm.pay_money  pay_money_upper,
    		mpm.maker maker_name,
    		su.user_name maker,
    		to_char(mpm.make_date, 'yyyy-MM-dd') make_date,
    		mpm.checker checker_name,
    		sysu.user_name checker,
    		to_char(mpm.chk_date, 'yyyy-MM-dd') chk_date,
    		mpm.state,
    		mpm.is_init,
    		mpm.note,
    		hdd.dept_name as PAY_DEPT_NAME,
    		hsb.bank_name as SUP_BANK_NAME,
    		hsb.bank_no as ACCT_CODE,
    		to_char(wm_concat(to_char(mbm.bill_no))) as BILL_NOS,
    		detail_num.bill_num as BILL_NUM
    	FROM MAT_PAY_MAIN  mpm
    	LEFT JOIN (
	  		SELECT DISTINCT pay_id, bill_id 
	  		FROM MAT_PAY_DETAIL 
	  		WHERE group_id = #{group_id,jdbcType=INTEGER}
	    	AND hos_id = #{hos_id,jdbcType=INTEGER}
	    	AND copy_code = #{copy_code,jdbcType=VARCHAR}
	    	AND pay_id = #{pay_id,jdbcType=INTEGER}
		)
		mpd
		ON
	   		mpm.pay_id = mpd.pay_id
	   	left join (
         	select count(bill_id) as bill_num,pay_id 
         	from (
             	select distinct bill_id,pay_id 
             	from MAT_PAY_DETAIL
             	WHERE group_id = #{group_id,jdbcType=INTEGER}
			    	AND hos_id = #{hos_id,jdbcType=INTEGER}
			    	AND copy_code = #{copy_code,jdbcType=VARCHAR}
			    	AND pay_id = #{pay_id,jdbcType=INTEGER}
         	) a 
         	group by pay_id
    	) detail_num on mpm.pay_id = detail_num.pay_id
		LEFT JOIN MAT_BILL_MAIN mbm
		ON
		     mpd.bill_id = mbm.bill_id
		LEFT JOIN HOS_DEPT_DICT hdd
		ON
		     mpm.group_id = hdd.group_id and mpm.hos_id = hdd.hos_id
		     and mpm.pay_dept_id = hdd.dept_id and hdd.is_stop = 0
	    LEFT JOIN HOS_SUP_DICT HSD ON 
	        mpm.group_id = hsd.group_id
	        AND mpm.hos_id = hsd.hos_id
	        AND mpm.sup_id = hsd.sup_id
	        <!-- AND mpm.sup_no = hsd.sup_no -->
	        AND hsd.is_stop = 0
	    LEFT JOIN SYS_USER su 
	    ON
	        mpm.group_id = su.group_id
	        AND mpm.hos_id = su.hos_id
	        AND mpm.maker = su.user_id
	        AND su.is_stop=0
	    LEFT JOIN SYS_USER sysu 
	    ON
	        mpm.group_id = sysu.group_id
	        AND mpm.hos_id = sysu.hos_id
	  		AND mpm.checker = sysu.user_id
	        AND sysu.is_stop=0
    	LEFT JOIN ACC_PAY_TYPE apt ON 
      		mpm.group_id = apt.group_id
			AND mpm.hos_id = apt.hos_id
			AND mpm.copy_code = apt.copy_code
			AND mpm.pay_type_code = apt.pay_code
      		AND apt.is_stop=0
    	LEFT JOIN MAT_PAY_TERM mpt ON
      		mpt.group_id = mpm.group_id
			AND mpt.hos_id = mpm.hos_id
			AND mpt.copy_code = mpm.copy_code
			AND mpt.pay_term_code = mpm.pay_code
			AND mpt.is_stop=0
		<!-- 2017/03/06 查询供应商默认银行信息 -->
		LEFT JOIN (
			SELECT group_id,hos_id,sup_id,bank_name,bank_no
	     	FROM HOS_SUP_BANK 
	     	WHERE
	          group_id = #{group_id,jdbcType=INTEGER}  AND hos_id = #{hos_id,jdbcType=INTEGER}
	          AND is_default = 1
		) hsb
		ON
		  	mpm.group_id = hsb.group_id AND mpm.hos_id = hsb.hos_id
		  	AND mpm.sup_id = hsb.sup_id
		WHERE mpm.group_id = #{group_id,jdbcType=INTEGER} 
			AND mpm.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND mpm.pay_id  in  (${paraId})
		GROUP BY 
			mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pay_id, mpm.pay_bill_no, 
			mpm.pay_date, mpm.pay_bill_type, mpm.sup_id, mpm.sup_no, hsd.sup_code, 
			hsd.sup_name, mpm.pay_code, mpt.pay_term_name , mpm.pay_type_code, apt.pay_name, 
			mpm.acct_code, mpm.cheq_no, mpm.payable_money, mpm.payed_money, mpm.pay_money, 
			mpm.payable_money, mpm.payed_money, mpm.pay_money, mpm.maker, su.user_name, 
			mpm.make_date, mpm.checker, sysu.user_name,mpm.chk_date, mpm.state, 
			mpm.is_init, mpm.note,hdd.dept_name,hsb.bank_name,hsb.bank_no,detail_num.bill_num 
	</select>
	<!-- 入库明细表模板打印 -->
	<select id="queryMatPayMainPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT mpd.pay_id  as id,
			sum(mpd.bill_money) bill_money,
			sum(mpd.payed_money) payed_money,
			sum(mpd.pay_money) pay_money,
			mbm.bill_no  bill_no,
			to_char(mbm.bill_date,'yyyy-MM-dd') as bill_date
		FROM MAT_PAY_DETAIL mpd
		LEFT JOIN MAT_BILL_MAIN mbm 
		ON 
			mpd.group_id=mbm.group_id AND mpd.hos_id=mbm.hos_id
         AND mpd.copy_code=mbm.copy_code AND mpd.bill_id=mbm.bill_id
		WHERE mpd.group_id = #{group_id,jdbcType=INTEGER} 
			AND mpd.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND mpd.copy_code = #{copy_code,jdbcType=VARCHAR} 
			<if test="p_num ==1">
				and  mpd.pay_id  in (${paraId})
			</if>
			<if test="p_num ==0">
				and  mpd.pay_id =#{pay_id,jdbcType=NUMERIC}
			</if>	
		GROUP BY mpd.pay_id , mbm.bill_no,mbm.bill_date
	</select>
	<!-- 查询付款单明细模板打印数据-主表 -->
	<select id="queryMatPayDetailByPrintByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		  select distinct mpm.group_id as group_id, 
		  mpm.hos_id as hos_id, 
		  mpm.copy_code as copy_code, 
		  mpm.pay_id as pay_id, 
		  mpm.pay_bill_no as pay_bill_no, 
		  apt.pay_name as pay_type_code, 
		  mpm.payable_money as payable_money_main, 
		  mpm.payed_money as payed_money_upper, 
		   su.user_name as make,
		  to_char(mpm.make_date, 'yyyy-MM-dd hh24:mi:ss') as make_date, 
		  hsd.sup_code as sup_code, 
		  hsd.sup_name as sup_name,
		  hsd1.store_code as store_code ,
		  hsd1.store_name as store_name
from MAT_PAY_MAIN mpm
left join mat_pay_detail mpd on mpm.group_id = mpd.group_id
and mpm.hos_id = mpd.hos_id
and mpm.copy_code = mpd.copy_code
and mpm.pay_id = mpd.pay_id 
left join mat_bill_main mbm on mbm.group_id = mpd.group_id
and mbm.hos_id = mpd.hos_id
and mbm.copy_code = mpd.copy_code
and mbm.bill_id = mpd.bill_id 
left join mat_bill_detail mbd on mbd.group_id = mpd.group_id
and mbd.hos_id = mpd.hos_id
and mbd.copy_code = mpd.copy_code
and mbd.bill_detail_id = mpd.bill_detail_id 
left join mat_in_main mim on mim.group_id = mbd.group_id
and mim.hos_id = mbd.hos_id
and mim.copy_code = mbd.copy_code
and mim.in_id = mbd.in_id 
left join hos_store_dict hsd1 on mim.group_id=hsd1.group_id
and mim.hos_id=hsd1.hos_id
and mim.store_id=hsd1.store_id
left join HOS_SUP_DICT HSD on mpm.group_id = hsd.group_id
and mpm.hos_id = hsd.hos_id
and mpm.sup_id = hsd.sup_id
and hsd.is_stop = 0 
  left join acc_pay_type apt on mpm.group_id = apt.group_id
and mpm.hos_id = apt.hos_id
and mpm.copy_code = apt.copy_code
and mpm.pay_type_code = apt.pay_code 
left join sys_user su 
on mpm.group_id = su.group_id
and mpm.hos_id = su.hos_id
and mpm.copy_code =su.copy_code
and mpm.maker = su.user_id
	  <where>
	  	<if test="group_id!=null and group_id!=''">
	  	  and mpm.group_id = #{group_id, jdbcType = INTEGER}
	  	</if>
	  	<if test="hos_id!=null and hos_id!=''">
	  		AND mpm.hos_id = #{hos_id, jdbcType = INTEGER}
	  	</if>
	  	<if test="copy_code!=null and copy_code!=''">
	  		AND mpm.copy_code = #{copy_code, jdbcType = VARCHAR}
	  	</if>
	  	<if test="pay_id!=null and pay_id!=''">
	  	    AND mpm.pay_id = #{pay_id, jdbcType = INTEGER}
	  	</if>
	  	and rownum =1
	  </where>
	</select>
	<!-- 查询付款单明细模板打印数据-明细 -->
	<select id="queryMatPayDetailByPrintByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
		   mpd.bill_detail_id id,
		   mbm.bill_no,
	       to_char(mbm.bill_date, 'yyyy-MM-dd') bill_date,
	       mim.in_no,
	       mind.inv_code,
	       mind.inv_name,
	       mind.inv_model,
	       hu.unit_name,
	       mid.batch_no,
	       mid.sn,
	       mid.price,
	       mid.amount,
	       mpd.bill_money,
	       mpd.payed_money,
	       mpd.pay_money,
	       mpd.dis_money
	  from mat_pay_main mpm
	  left join mat_pay_detail mpd
	    on mpm.group_id = mpd.group_id
	   and mpm.hos_id = mpd.hos_id
	   and mpm.copy_code = mpd.copy_code
	   and mpm.pay_id = mpd.pay_id
	  left join mat_bill_main mbm
	    on mbm.group_id = mpd.group_id
	   and mbm.hos_id = mpd.hos_id
	   and mbm.copy_code = mpd.copy_code
	   and mbm.bill_id = mpd.bill_id
	  left join mat_bill_detail mbd
	    on mbd.group_id = mpd.group_id
	   and mbd.hos_id = mpd.hos_id
	   and mbd.copy_code = mpd.copy_code
	   and mbd.bill_detail_id = mpd.bill_detail_id
	  left join mat_in_main mim
	    on mim.group_id = mbd.group_id
	   and mim.hos_id = mbd.hos_id
	   and mim.copy_code = mbd.copy_code
	   and mim.in_id = mbd.in_id
	  left join mat_in_detail mid
	    on mid.group_id = mbd.group_id
	   and mid.hos_id = mbd.hos_id
	   and mid.copy_code = mbd.copy_code
	   and mid.in_detail_id = mbd.in_detail_id
	  left join mat_inv_dict mind
	    on mind.group_id = mid.group_id
	   and mind.hos_id = mid.hos_id
	   and mind.copy_code = mid.copy_code
	   and mind.inv_id = mid.inv_id
	   and mind.inv_no=mid.inv_no
	  left join hos_unit hu
	    on hu.group_id = mind.group_id
	   and hu.hos_id = mind.hos_id
	   and hu.unit_code = mind.unit_code
	   and hu.is_stop=0
	<where>
	  	<if test="group_id!=null and group_id!=''">
	  	  and mpm.group_id = #{group_id, jdbcType = INTEGER}
	  	</if>
	  	<if test="hos_id!=null and hos_id!=''">
	  		AND mpm.hos_id = #{hos_id, jdbcType = INTEGER}
	  	</if>
	  	<if test="copy_code!=null and copy_code!=''">
	  		AND mpm.copy_code = #{copy_code, jdbcType = VARCHAR}
	  	</if>
	  	<if test="pay_id!=null and pay_id!=''">
	  	    AND mpm.pay_id = #{pay_id, jdbcType = INTEGER}
	  	</if>
	  </where>
	  order by mbm.bill_no,mim.in_no,mind.inv_code
	</select>
	
	<select id="queryMatMainlYesNo"  parameterType="java.util.List" resultType="String" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.bill_id,jdbcType=INTEGER} as bill_id
				from dual
			</foreach>
		)
		
		select   to_char(wm_concat(to_char(pay_bill_no)))  as pay_bill_no
		from (
			select count(0) counts,bb.pay_bill_no
			from  mat_pay_main bb
			left join mat_pay_detail  aa on aa.group_id=bb.group_id
			 	and aa.hos_id=bb.hos_id
			 	and aa.copy_code=bb.copy_code
			 	and aa.pay_id=bb.pay_id
			join list_temp lt on  lt.group_id=aa.group_id and lt.hos_id=aa.hos_id and lt.copy_code=aa.copy_code
				and lt.bill_id=aa.bill_id
		<!-- 	left join mat_bill_main mm on lt.group_id=mm.group_id and lt.hos_id=mm.hos_id and lt.copy_code=mm.copy_code
				and lt.bill_id=mm.bill_id -->
			where  bb.state=1
			 group by  bb.pay_bill_no
		)
		where nvl(counts,0)>0
	</select>
<!-- 	付款单单据打印 -->
	<select id="queryMatPayMainByBill" parameterType="java.util.Map" resultType="java.util.Map" >
	with temp  as (
	select distinct mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pay_id, to_char(mpm.pay_bill_no) as pay_bill_no
	     , mpm.pay_date, 
	     case when mpm.pay_bill_type =0 then '付款单'
	      	when mpm.pay_bill_type =1 then '退款单'
	      	else '' end pay_bill_type, mpm.sup_id, mpm.sup_no
	      , hsd.sup_code, hsd.sup_name, mpm.pay_code,mpm.pay_type_code, mpm.acct_code, mpm.cheq_no
	     , mpm.payable_money, mpm.payed_money, mpm.pay_money, mpm.maker, su.user_name as maker_name
	     , mpm.make_date, mpm.checker, sysu.user_name as checker_name, mpm.chk_date, mpm.state,
	     case when mpm.state = 1 then '未审核'
	       when mpm.state = 2 then '已审核'
	       when mpm.state = '' then ''
	     else '记账' end state_name,
	     mpm.is_init, mpm.note,apt.pay_name
	   from MAT_PAY_MAIN mpm
	    left join Mat_Pay_Detail mpd on mpm.group_id = mpd.group_id
	     and mpm.hos_id = mpd.hos_id
	     and mpm.copy_code = mpd.copy_code
	     and mpm.pay_id = mpd.pay_id 
	     and mpm.pay_bill_no=mpd.pay_bill_no
	     
	       left join MAT_BILL_DETAIL mbd on mpd.group_id = mbd.group_id
	     and mpd.hos_id = mpd.hos_id
	     and mpd.copy_code = mbd.copy_code
	     and mpd.bill_id = mbd.bill_id 
	         and mpd.bill_detail_id=mbd.bill_detail_id
	     
	     left join MAT_IN_MAIN mim on mbd.group_id = mim.group_id
	     and mbd.hos_id = mim.hos_id
	     and mbd.copy_code = mim.copy_code
	     and mbd.in_id = mim.in_id 
	     
	     left join hos_store_dict hs on mim.group_id = hs.group_id
	     and mim.hos_id = hs.hos_id
	     and mim.store_id = hs.store_id
	     and mim.store_no = hs.store_no 
	     
	   left join mat_store_detail msd on hs.group_id = msd.group_id
	         and hs.hos_id = msd.hos_id
	         and hs.store_id = msd.store_id
	     
	   left join hos_sup_dict hsd on mpm.group_id = hsd.group_id
	   and mpm.hos_id = hsd.hos_id
	   and mpm.sup_id = hsd.sup_id
	   and mpm.sup_no = hsd.sup_no
	   <!-- and hsd.is_stop = 0 -->
	    left join sys_user su on mpm.group_id = su.group_id
	    and mpm.hos_id = su.hos_id
	    and mpm.maker = su.user_id 
	      left join sys_user sysu on mpm.group_id = sysu.group_id
	    and mpm.hos_id = sysu.hos_id
	    and mpm.checker = sysu.user_id 
	     left join ACC_PAY_TYPE apt on mpm.group_id = apt.group_id
	        and mpm.hos_id = apt.hos_id and mpm.copy_code=apt.copy_code
	        and mpm.pay_type_code = apt.pay_code
	    <where>                     
	    <if test="group_id != null and group_id != ''">
	    AND mpm.group_id = #{group_id,jdbcType=INTEGER}
	    </if>
	    <if test="hos_id != null and hos_id != ''">
	    AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
	    </if>
	    <if test="copy_code != null and copy_code != ''">
	    AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
	    </if>
	      <if test="store_id != null and store_id != '' ">
	       and hs.store_id = #{store_id}
	     </if>
	      <if test="set_id != null and set_id != '' ">
	       and msd.set_id = #{set_id}
	       </if>
	    <if test="pay_id != null and pay_id != ''">
	    AND mpm.pay_id = #{pay_id,jdbcType=INTEGER}
	    </if>
	    <if test="pay_bill_no != null and pay_bill_no != ''">
	    AND mpm.pay_bill_no like '${pay_bill_no}%'
	    </if>
	    <if test="beginDate != null and beginDate != '' and endDate !=null and endDate !=''">
	    AND mpm.pay_date between to_date(#{beginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{endDate,jdbcType=DATE},'yyyy-MM-dd')
	    </if>
	    <if test="makeBeginDate != null and makeBeginDate != '' and makeEndDate !=null and makeEndDate !=''">
	    AND mpm.make_date between to_date(#{makeBeginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{makeEndDate,jdbcType=DATE},'yyyy-MM-dd')
	    </if>
	    <if test="pay_bill_type != null and pay_bill_type != ''">
	    AND mpm.pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
	    </if>
	    <if test="sup_id != null and sup_id != ''">
	    AND mpm.sup_id = #{sup_id,jdbcType=INTEGER}
	    </if>
	   <if test="sup_no != null and sup_no != ''">
	    AND mpm.sup_no = #{sup_no,jdbcType=INTEGER}
	    </if>
	    <if test="pay_code != null and pay_code != ''">
	    AND mpm.pay_code = #{pay_code,jdbcType=VARCHAR}
	    </if>
	    <if test="pay_type_code != null and pay_type_code != ''">
	    AND mpm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
	    </if>
	    <if test="acct_code != null and acct_code != ''">
	    AND mpm.acct_code = #{acct_code,jdbcType=VARCHAR}
	    </if>
	    <if test="cheq_no != null and cheq_no != ''">
	    AND mpm.cheq_no = #{cheq_no,jdbcType=VARCHAR}
	    </if>
	    <if test="payable_money != null and payable_money != '' ">
	    AND mpm.payable_money = #{payable_money,jdbcType=INTEGER} 
	    </if>
	    <if test="payed_money != null and payed_money != '' ">
	    AND mpm.payed_money = #{payed_money,jdbcType=INTEGER} 
	    </if>
	    <if test="pay_money != null and pay_money != '' ">
	    AND mpm.pay_money = #{pay_money,jdbcType=INTEGER} 
	    </if>
	    <if test="maker != null and maker != ''">
	    AND mpm.maker = #{maker,jdbcType=INTEGER}
	    </if>
	    <if test="pay_type_code != null and pay_type_code != ''">
	    AND mpm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
	    </if>
	    <if test="checker != null and checker != ''">
	    AND mpm.checker = #{checker,jdbcType=INTEGER}
	    </if>
	    <if test="chk_date != null and chk_date != ''">
	    AND mpm.chk_date = #{chk_date,jdbcType=DATE}
	    </if>
	    <if test="state != null and state != ''">
	    AND mpm.state = #{state,jdbcType=INTEGER}
	    </if>
	    <if test="is_init != null and is_init != ''">
	    AND mpm.is_init = #{is_init,jdbcType=INTEGER}
	    </if>
	    <if test="note != null and note != ''">
	    AND mpm.note = #{note,jdbcType=VARCHAR}
	    </if>
	    
	     and exists (
	              select 1
	              from v_user_data_perm vudp
	              where vudp.group_id=#{group_id,jdbcType=INTEGER}
	              and vudp.hos_id=#{hos_id,jdbcType=INTEGER}
	              and vudp.user_id=#{user_id,jdbcType=INTEGER}
	              and vudp.table_code='HOS_STORE_DICT'
	              and hs.store_id =vudp.perm_code
	              and( vudp.is_read=1 or vudp.is_write=1)
	          )
	    </where>   
	     
	)
		select *
		from (
			select null as group_id, null as hos_id, null as copy_code, null as pay_id, '合计' as pay_bill_no
		      , null as pay_date, null as pay_bill_type, null as sup_id,null as sup_no, null as sup_code
		      , null as sup_name, null as pay_code,null as pay_type_code, null as acct_code, null as cheq_no
		      , null as payable_money, null as payed_money, sum(pay_money) as pay_money, null as maker, null as maker_name
		      , null as make_date, null as checker, null as checker_name, null as chk_date, null as state,null as state_name
		      , null as is_init, null as note,null as pay_name
		    from temp
			union all
			select group_id, hos_id, copy_code, pay_id, pay_bill_no
		      , pay_date, pay_bill_type, sup_id,sup_no, sup_code
		      , sup_name, pay_code,pay_type_code, acct_code, cheq_no
		      , payable_money, payed_money, pay_money, maker, maker_name
		      , make_date, checker, checker_name, chk_date, state,state_name
		      , is_init, note,pay_name
		    from temp
		)
		order by pay_bill_no desc, pay_date desc, make_date desc
		
	</select>
	
	
	<select id="queryMatBillDetail_PayNsa" resultMap="billDetailMap" parameterType="java.util.Map">
	with payed_tmp as (
   	  		select a.group_id, a.hos_id, a.copy_code, b.bill_id, b.bill_detail_id
			, sum(b.pay_money) as pay_money,b.payed_money
				    from mat_pay_main a
				      left join mat_pay_detail b on a.group_id = b.group_id
				    and a.hos_id = b.hos_id
				    and a.copy_code = b.copy_code
				    and a.pay_id = b.pay_id 
      		where    a.group_id=#{group_id,jdbcType=INTEGER}
			     and a.hos_id=#{hos_id,jdbcType=INTEGER}
			     and a.copy_code=#{copy_code,jdbcType=VARCHAR}
			  
 		 	group by  a.group_id,a.hos_id,a.copy_code, b.bill_id,b.bill_detail_id,b.payed_money
	    )
		
		select  sum(temp.pay_money) pay_money
		from (
			 select mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
			    , mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
			    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
			    , t.batch_no, nvl(t.sn, null) as sn, t.price
			    , t.amount, mbd.bill_money, nvl(pt.payed_money, 0) as payed_money
			    ,nvl(pt.pay_money, 0) as pay_money<!--  nvl(mbd.bill_money, 0) - nvl(pt.pay_money, 0) - nvl(mpd.dis_money, 0) as pay_money -->
			    , nvl(mpd.dis_money, 0) as dis_money
			  from mat_bill_detail mbd
			
			left join ( 
				select  mid.group_id , mid.hos_id , mid.copy_code , mid.in_id ,mid.in_no,mid.in_detail_id , 
						mid.inv_id , mid.inv_no, minvd.inv_code , minvd.inv_name , minvd.unit_code,hu.unit_name , 
						minvd.inv_model,mid.batch_no , mid.sn, mid.price , mid.amount , mid.amount_money
			 			from mat_in_detail mid 
			 	left join mat_inv_dict minvd  ON
			 			minvd.group_id = mid.group_id   and 
			 			minvd.hos_id = mid.hos_id   and
			 			minvd.copy_code = mid.copy_code   and 
			 			minvd.inv_id = mid.inv_id  and 
			 			minvd.inv_no = mid.inv_no
			 	left join hos_unit hu on 
			 			minvd.group_id = hu.group_id
			 			and minvd.hos_id = hu.hos_id
			 			and minvd.unit_code = hu.unit_code
			 			and hu.is_stop = 0
			) t ON mbd.group_id = t.group_id  and 
					mbd.hos_id = t.hos_id  and 
					mbd.copy_code = t.copy_code  and
					mbd.in_id = t.in_id and 
					mbd.in_detail_id = t.in_detail_id
					and mbd.payable_money=t.amount_money
			
			left join ( 
				select group_id , hos_id , copy_code , in_id , in_detail_id , sum(pre_pay_money) payed_money 
				from  mat_pre_pay_detail 
				where group_id = ${group_id} and hos_id = ${hos_id} and copy_code = #{copy_code}
				group by group_id , hos_id , copy_code , in_id , in_detail_id 
			) mppd ON mbd.group_id = mppd.group_id  and 
					mbd.hos_id = mppd.hos_id  and 
					mbd.copy_code = mppd.copy_code  and
					mbd.in_id = mppd.in_id and 
					mbd.in_detail_id = mppd.in_detail_id
			 left join mat_pay_detail mpd on mbd.group_id=mpd.group_id
				  and mbd.hos_id=mpd.hos_id
				  and mbd.copy_code=mpd.copy_code
				  and mbd.bill_id=mpd.bill_id
				  and mbd.bill_detail_id=mpd.bill_detail_id 
			 left join payed_tmp pt on mbd.group_id=pt.group_id
					and mbd.hos_id=pt.hos_id
					and mbd.copy_code=pt.copy_code
					and mbd.bill_id=pt.bill_id 
					and mbd.bill_detail_id=pt.bill_detail_id
			<where>
				<if test=" group_id != null and group_id != ''">
					and mbd.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test=" hos_id != null and hos_id != ''">
					and mbd.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test=" copy_code != null and copy_code != ''">
					and mbd.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				
				<if test=" in_id != null and in_id != ''">
					and t.in_id = #{in_id,jdbcType=INTEGER}
				</if>
				 
			</where>
	group by   mbd.group_id, mbd.hos_id, mbd.copy_code, mbd.bill_id, mbd.bill_detail_id
    , mbd.in_id, mbd.in_detail_id, t.in_no, t.inv_id, t.inv_no
    , t.inv_code, t.inv_name, t.unit_code, t.unit_name, t.inv_model
    , t.batch_no,  t.price,t.sn,pt.payed_money,pt.pay_money,mpd.dis_money
    , t.amount, mbd.bill_money
		) temp 
		<where>
			<if test="state != 2 ">
				and temp.bill_money &lt;&gt; temp.payed_money 
			</if>
		</where>
	
	</select>
	
	<select id="queryMatPayState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT pay_id  FROM mat_pay_main 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND pay_id in  (${paraId})
			</if>
			<if test="pay_id != null and pay_id != ''">
			AND pay_id = #{pay_id,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state not in(2,3)
	</select>
	
	 
</mapper>