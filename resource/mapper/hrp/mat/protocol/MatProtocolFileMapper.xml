<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.protocol.MatProtocolFileMapper">
	
	<resultMap id="matProtocolFile" type="com.chd.hrp.mat.entity.MatProtocolFile">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="File_id" column="File_id"/>
	<result property="type_code" column="type_code"/>
	<result property="file_code" column="file_code"/>
	<result property="file_name" column="file_name"/>
	<result property="at_local" column="at_local"/>
	<result property="dept_id" column="dept_id"/>
	<result property="mana_emp" column="mana_emp"/>
	<result property="file_path" column="file_path"/>
	</resultMap>
	
	<resultMap id="fileMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="File_id" column="File_id"/>
	<result property="type_code" column="type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="file_code" column="file_code"/>
	<result property="file_name" column="file_name"/>
	<result property="at_local" column="at_local"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="mana_emp" column="mana_emp"/>
	<result property="emp_name" column="emp_name"/>
	<result property="file_path" column="file_path"/>
	</resultMap>
	
	<insert id="addMatProtocolFile" useGeneratedKeys="true" >
	
		INSERT INTO MAT_PROTOCOL_FILE (
		group_id
		,
		hos_id
		,
		copy_code
		,
		protocol_id
		,
		file_id
		,
		type_code
		,
		file_code
		,
		file_name
		,
		at_local
		,
		dept_id
		,
		mana_emp
		,
		file_path
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{protocol_id,jdbcType=INTEGER}
		,
		MAT_PROTOCOL_File_SEQ.nextval
		,
		#{type_code,jdbcType=VARCHAR}
		,
		#{file_code,jdbcType=VARCHAR}
		,
		#{file_name,jdbcType=VARCHAR}
		,
		#{at_local,jdbcType=VARCHAR}
		,
		#{dept_id,jdbcType=INTEGER}
		,
		#{mana_emp,jdbcType=VARCHAR}
		,
		#{file_path,jdbcType=VARCHAR}
		)
	
	</insert>
	<insert id="addBatchMatProtocolFile" parameterType="java.util.List" >
	
		INSERT INTO MAT_PROTOCOL_FILE (
		file_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		protocol_id
		,
		type_code
		,
		file_code
		,
		file_name
		,
		at_local
		,
		dept_id
		,
		mana_emp
		,
		file_path
		
		
		) select MAT_PROTOCOL_File_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.protocol_id,jdbcType=INTEGER}
			,
			#{item.type_code,jdbcType=VARCHAR}
			,
			#{item.file_code,jdbcType=VARCHAR}
			,
			#{item.file_name,jdbcType=VARCHAR}
			,
			#{item.at_local,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.mana_emp,jdbcType=VARCHAR}
			,
			#{item.file_path,jdbcType=VARCHAR}
				from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMatProtocolFile" parameterType="java.util.Map">
	
		UPDATE MAT_PROTOCOL_FILE SET
		type_code = #{type_code,jdbcType=VARCHAR}
		,
		file_code = #{file_code,jdbcType=VARCHAR}
		,
		file_name = #{file_name,jdbcType=VARCHAR}
		,
		at_local = #{at_local,jdbcType=VARCHAR}
		,
		dept_id = #{dept_id,jdbcType=VARCHAR}
		,
		mana_emp = #{mana_emp,jdbcType=VARCHAR}
		,
		file_path = #{file_path,jdbcType=VARCHAR}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		protocol_id =#{protocol_id,jdbcType=INTEGER}
		 and 
		file_id =#{file_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMatProtocolFile" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE MAT_PROTOCOL_FILE SET
			type_code = #{item.type_code,jdbcType=VARCHAR}
			,
			file_code = #{item.file_code,jdbcType=VARCHAR}
			,
			file_name = #{item.file_name,jdbcType=VARCHAR}
			,
			at_local = #{item.at_local,jdbcType=VARCHAR}
			,
			dept_id = #{item.dept_id,jdbcType=VARCHAR}
			,
			mana_emp = #{item.mana_emp,jdbcType=VARCHAR}
			,
			file_path = #{item.file_path,jdbcType=VARCHAR}
			
			WHERE 
			group_id =#{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id =#{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code =#{item.copy_code,jdbcType=VARCHAR}
			 and 
			protocol_id =#{item.protocol_id,jdbcType=INTEGER}
			 and 
			file_id =#{item.file_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="deleteMatProtocolFile" parameterType="java.util.Map">
	
		DELETE FROM MAT_PROTOCOL_FILE WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		protocol_id = #{protocol_id,jdbcType=INTEGER}   and 
		file_id = #{file_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMatProtocolFile" parameterType="java.util.List">
		DELETE FROM MAT_PROTOCOL_FILE WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				protocol_id = #{item.protocol_id,jdbcType=INTEGER}
				  
				 <if test=" item.file_id != null  and item.file_id != ''">
				 	and file_id = #{item.file_id,jdbcType=INTEGER}
				 </if>
				
				
			</foreach>
	
	</delete>
	
	<select id="queryMatProtocolFile" parameterType="java.util.Map" resultMap="matProtocolFile" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id	,
		file_id	,
		type_code,
		file_code,
		file_name,
		at_local,
		dept_id	,
		mana_emp,
		file_path
		FROM MAT_PROTOCOL_FILE 
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="file_id != null and file_id != ''">
		AND file_id = #{file_id,jdbcType=INTEGER}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="file_code != null and file_code != ''">
		AND file_code = #{file_code,jdbcType=VARCHAR}
		</if>
		<if test="file_name != null and file_name != ''">
		AND file_name = #{file_name,jdbcType=VARCHAR}
		</if>
		<if test="at_local != null and at_local != ''">
		AND at_local = #{at_local,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="mana_emp != null and mana_emp != ''">
		AND mana_emp = #{mana_emp,jdbcType=VARCHAR}
		</if>
		<if test="file_path != null and file_path != ''">
		AND file_path = #{file_path,jdbcType=INTEGER}
		</if>
		</where>   
		order by file_id asc
	</select>
	<select id="queryMatProtocolFileByCode" resultType="com.chd.hrp.mat.entity.MatProtocolFile" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id	,
		file_id	,
		type_code,
		file_code,
		file_name,
		at_local,
		dept_id	,
		mana_emp,
		file_path
		FROM MAT_PROTOCOL_FILE 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="protocol_id != null and protocol_id != ''">
			AND protocol_id = #{protocol_id,jdbcType=INTEGER}
			</if>
			<if test="file_id != null and file_id != ''">
			AND file_id = #{file_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<select id="queryMatProtocolFileByID" resultMap="fileMap" parameterType="java.util.Map" >
	
		SELECT 
		mpf.group_id,
		mpf.hos_id,
		mpf.copy_code,
		mpf.protocol_id	,
		mpf.file_id	,
		mpf.type_code,
		mlt.type_name,
		mpf.file_code,
		mpf.file_name,
		mpf.at_local,
		mpf.dept_id	,
		hdd.dept_name,
		mpf.mana_emp,
		hed.emp_name,
		mpf.file_path
		FROM MAT_PROTOCOL_FILE mpf left join MAT_FILE_TYPE mlt
				ON 
					mpf.group_id = mlt.group_id  and 
					mpf.hos_id = mlt.hos_id  and 
					mpf.copy_code = mlt.copy_code  and 
					mpf.type_code = mlt.type_code 
			left join HOS_DEPT_DICT hdd 
				ON 
					mpf.group_id = hdd.group_id  and 
					mpf.hos_id = hdd.hos_id  and 
					mpf.dept_id = hdd.dept_id and 
					hdd.is_stop = 0 
			left join HOS_EMP_DICT hed 
				ON 
					mpf.group_id = hed.group_id  and 
					mpf.hos_id = hed.hos_id  and 
					mpf.mana_emp = hed.emp_id and 
					hed.is_stop = 0 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND mpf.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mpf.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mpf.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="protocol_id != null and protocol_id != ''">
			AND mpf.protocol_id = #{protocol_id,jdbcType=INTEGER}
			</if>
			<if test="file_id != null and file_id != ''">
			AND mpf.file_id = #{file_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<select id="queryMatProtocolFileByUniqueness" resultType="com.chd.hrp.mat.entity.MatProtocolFile" parameterType="java.util.Map" >
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id	,
		file_id	,
		type_code,
		file_code,
		file_name,
		at_local,
		dept_id	,
		mana_emp,
		file_path
		FROM MAT_PROTOCOL_FILE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="file_id != null and file_id != ''">
		AND file_id = #{file_id,jdbcType=INTEGER}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="file_code != null and file_code != ''">
		AND file_code = #{file_code,jdbcType=VARCHAR}
		</if>
		<if test="file_name != null and file_name != ''">
		AND file_name = #{file_name,jdbcType=VARCHAR}
		</if>
		<if test="at_local != null and at_local != ''">
		AND at_local = #{at_local,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="mana_emp != null and mana_emp != ''">
		AND mana_emp = #{mana_emp,jdbcType=VARCHAR}
		</if>
		<if test="file_path != null and file_path != ''">
		AND file_path = #{file_path,jdbcType=INTEGER}
		</if>
		</where>   
		order by file_id asc
	</select>
</mapper>

