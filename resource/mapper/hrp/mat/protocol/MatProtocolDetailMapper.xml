<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.protocol.MatProtocolDetailMapper">
	
	<resultMap id="matProtocolDetail" type="com.chd.hrp.mat.entity.MatProtocolDetail">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="detail_id" column="detail_id"/>
	<result property="inv_no" column="inv_no"/>
	<result property="inv_id" column="inv_id"/>
	<result property="price" column="price"/>
	
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="addMatProtocolDetail" useGeneratedKeys="true" >
	
		INSERT INTO MAT_PROTOCOL_DETAIL (
		group_id
		,
		hos_id
		,
		copy_code
		,
		protocol_id
		,
		detail_id
		,
		inv_no
		,
		inv_id
		,
		price
		,
	
		note
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{protocol_id,jdbcType=INTEGER}
		,
		MAT_PROTOCOL_DETAIL_SEQ.nextval 
		,
		#{inv_no,jdbcType=INTEGER}
		,
		#{inv_id,jdbcType=INTEGER}
		,
		#{price,jdbcType=INTEGER}
		,
	
		#{note,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatchMatProtocolDetail" parameterType="java.util.List" >
	
		INSERT INTO MAT_PROTOCOL_DETAIL (
		detail_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		protocol_id
		,
		inv_no
		,
		inv_id
		,
		price
		,
		
		note
		
		) select MAT_PROTOCOL_DETAIL_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.protocol_id,jdbcType=INTEGER}
			,
			#{item.inv_no,jdbcType=INTEGER}
			,
			#{item.inv_id,jdbcType=INTEGER}
			,
			#{item.price,jdbcType=INTEGER}
			,
			
			#{item.note,jdbcType=VARCHAR}
				from dual
		
		</foreach>
			)t
	</insert>
	
	<update id="updateMatProtocolDetail" parameterType="java.util.Map">
	
		UPDATE mat_protocol_detail SET
		inv_no = #{inv_no,jdbcType=INTEGER}
		,
		inv_id = #{inv_id,jdbcType=INTEGER}
		,
		price = #{price,jdbcType=INTEGER}
		,
		
		note = #{note,jdbcType=VARCHAR}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		protocol_id =#{protocol_id,jdbcType=INTEGER}
		 and 
		detail_id =#{detail_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMatProtocolDetail" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_protocol_detail SET
			inv_no = #{item.inv_no,jdbcType=INTEGER}
			,
			inv_id = #{item.inv_id,jdbcType=INTEGER}
			,
			price = #{item.price,jdbcType=INTEGER}
			,
		
			note = #{item.note,jdbcType=VARCHAR}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			protocol_id = #{item.protocol_id,jdbcType=INTEGER}
			 and 
			detail_id = #{item.detail_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatProtocolDetail" parameterType="java.util.Map">
	
		DELETE FROM mat_protocol_detail WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		protocol_id = #{protocol_id,jdbcType=INTEGER}   and 
		detail_id = #{detail_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMatProtocolDetail" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
				DELETE FROM mat_protocol_detail <where>
					group_id = #{item.group_id,jdbcType=INTEGER}
					 and 
					hos_id = #{item.hos_id,jdbcType=INTEGER}
					 and 
					copy_code = #{item.copy_code,jdbcType=VARCHAR}
					 and 
					protocol_id = #{item.protocol_id,jdbcType=INTEGER}
					<if test="item.detail_id !=null and item.detail_id !=''">
						and detail_id = #{item.detail_id,jdbcType=INTEGER}
					</if>
			</where>
		</foreach>	
	
	</delete>
	<select id="queryMatProtocolDetail" parameterType="java.util.Map" resultMap="matProtocolDetail" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		detail_id,
		inv_no,
		inv_id,
		price,
		
		note
		FROM MAT_PROTOCOL_DETAIL 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="detail_id != null and detail_id != ''">
		AND detail_id = #{detail_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
		AND inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
		
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryMatProtocolDetailByCode" resultType="com.chd.hrp.mat.entity.MatProtocolDetail" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		detail_id,
		inv_no,
		inv_id,
		price,
		
		note
		FROM mat_protocol_detail 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		protocol_id = #{protocol_id,jdbcType=INTEGER}   and 
		detail_id = #{detail_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryMatProtocolDetailByUniqueness" resultType="com.chd.hrp.mat.entity.MatProtocolDetail" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		detail_id,
		inv_no,
		inv_id,
		price,
		
		note
		FROM MAT_PROTOCOL_DETAIL 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="detail_id != null and detail_id != ''">
		AND detail_id = #{detail_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
		AND inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
	
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>

</mapper>

