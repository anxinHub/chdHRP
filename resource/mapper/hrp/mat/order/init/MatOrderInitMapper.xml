<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.order.init.MatOrderInitMapper">
	
	<!-- 代销出库主表   --> 
	<resultMap id="matAffiOutMain" type="java.util.Map">   
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/> 
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="is_dir" column="is_dir"/>
		
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_name" column="store_name"/>
		
		<result property="brief" column="brief"/>
		<result property="out_date" column="out_date"/>
		
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_name" column="dept_name"/>
		<result property="dept_emp" column="dept_emp"/>
		<result property="dept_emp_name" column="dept_emp_name"/>
		
		<result property="batch_flag" column="batch_flag"/>
		<result property="is_dir" column="is_dir"/>
		
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="make_date" column="make_date"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="arrive_date" column="arrive_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="confirm_date" column="confirm_date"/>
		
		<result property="state" column="state"/>
		<result property="doc_iow_id" column="doc_iow_id"/>
		<result property="his_flag" column="his_flag"/>
		
		<result property="pur_hos_id" column="pur_hos_id"/><!-- 采购单位ID -->
		<result property="pur_hos_no" column="pur_hos_no"/><!-- 采购单位ID -->
		<result property="pur_hos_code" column="pur_hos_code"/><!-- 采购单位ID -->
		<result property="pur_hos_name" column="pur_hos_name"/><!-- 采购单位名称 -->
		
		<result property="take_hos_id" column="take_hos_id"/><!-- 采购单位ID -->
		<result property="take_hos_no" column="take_hos_no"/><!-- 采购单位ID -->
		<result property="take_hos_code" column="take_hos_code"/><!-- 采购单位ID -->
		<result property="take_hos_name" column="take_hos_name"/><!-- 请购单位名称 -->
		
		<result property="pay_hos_id" column="pay_hos_id"/><!-- 付款单位ID -->
		<result property="pay_hos_no" column="pay_hos_no"/><!-- 采购单位ID -->
		<result property="pay_hos_code" column="pay_hos_code"/><!-- 采购单位ID -->
		<result property="pay_hos_name" column="pay_hos_name"/><!-- 付款单位名称 -->
		
	</resultMap>
	
	<!-- 代销出库明细表  -->
	<resultMap id="matAffiOutDetail" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		
		<result property="out_id" column="out_id"/>
		<result property="detail_id" column="detail_id"/>
		<result property="order_code" column="order_code"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		
		<result property="batch_sn" column="batch_sn"/>
		<result property="batch_no" column="batch_no"/>
		
		<result property="cur_amount" column="cur_amount"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="amount_money" column="amount_money"/>
		<result property="sell_price" column="sell_price"/>
		<result property="sell_money" column="sell_money"/>
		
		<result property="pack_code" column="pack_code"/>
		<result property="pack_name" column="pack_name"/>
		<result property="pack_price" column="pack_price"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="num" column="num"/>
		<result property="bar_code" column="bar_code"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="sn" column="sn"/>
		
		<result property="inva_date" column="inva_date"/>
		<result property="disinfect_date" column="disinfect_date"/>
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		
		<result property="note" column="note"/>
	</resultMap>
	
	
	<resultMap id="matPurInfor" type="java.util.Map" >
		<!-- 采购计划主表 -->
		<result property="group_id" column="group_id"/><!-- 集团ID -->
		<result property="hos_id" column="hos_id"/><!-- 医院ID -->
		<result property="copy_code" column="copy_code"/><!-- 账套编码 -->
		<result property="pur_id" column="pur_id"/><!-- 计划单ID -->
		<result property="pur_code" column="pur_code"/><!-- 计划编号 -->
		<result property="dept_id" column="dept_id"/><!-- 科室ID -->
		<result property="dept_no" column="dept_no"/><!-- 科室变更ID -->
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/><!-- 编制部门 -->
		<result property="brif" column="brif"/><!-- 摘要 -->
		<result property="pur_type" column="pur_type"/><!-- 单据类型 -->
		<result property="plan_type" column="plan_type"/><!-- 计划类型 -->
		<result property="pur_hos_id" column="pur_hos_id"/><!-- 采购单位ID -->
		<result property="pur_hos_no" column="pur_hos_no"/><!-- 采购单位ID -->
		<result property="pur_hos_code" column="pur_hos_code"/><!-- 采购单位ID -->
		<result property="pur_hos_name" column="pur_hos_name"/><!-- 采购单位名称 -->
		
		<result property="req_hos_id" column="req_hos_id"/><!-- 采购单位ID -->
		<result property="req_hos_no" column="req_hos_no"/><!-- 采购单位ID -->
		<result property="req_hos_code" column="req_hos_code"/><!-- 采购单位ID -->
		<result property="req_hos_name" column="req_hos_name"/><!-- 请购单位名称 -->
		
		<result property="pay_hos_id" column="pay_hos_id"/><!-- 付款单位ID -->
		<result property="pay_hos_no" column="pay_hos_no"/><!-- 采购单位ID -->
		<result property="pay_hos_code" column="pay_hos_code"/><!-- 采购单位ID -->
		<result property="pay_hos_name" column="pay_hos_name"/><!-- 付款单位名称 -->
		<result property="maker" column="maker"/><!-- 制单人 -->
		<result property="make_date" column="make_date"/><!-- 制单日期 -->
		<result property="checker" column="checker"/><!-- 审核人 -->
		<result property="check_date" column="check_date"/><!-- 审核日期 -->
		<result property="state" column="state"/><!-- 状态 -->
		<result property="is_dir" column="is_dir"/>
		<result property="dir_dept_id" column="dir_dept_id"/>
		<result property="dir_dept_no" column="dir_dept_no"/>
		<result property="dir_dept_code" column="dir_dept_code"/>
		<result property="dir_dept_name" column="dir_dept_name"/>
		<result property="stock_no" column="stock_no" />
		<result property="stock_id" column="stock_id" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="arrive_date" column="arrive_date"/><!-- 计划到货日期 -->
		
		<result property="rela_amount" column="rela_amount" />
		<result property="rela_req" column="rela_req"/>
		
		<!-- 采购明细字段 返回结果集字段-->
		<result property="pur_detail_id" column="pur_detail_id"/>
		<result property="inv_id" column="inv_id"/><!-- 材料ID -->
		<result property="inv_no" column="inv_no"/><!-- 材料变更ID -->
		<result property="inv_code" column="inv_code"/><!-- 材料编码 -->
		<result property="inv_name" column="inv_name"/><!-- 材料名称 -->
		<result property="inv_model" column="inv_model"/><!-- 规格型号 -->
		<result property="unit_name" column="unit_name"/><!-- 计量单位 -->
		<result property="unit_code" column="unit_code"/><!-- 计量单位编码  -->
		<result property="pack_code" column="pack_code"/><!-- 包装单位编码 -->
		<result property="pack_name" column="pack_name"/><!-- 包装单位名称 -->
		<result property="num_exchange" column="num_exchange"/><!-- 转换量 -->
		<result property="cur_amount" column="cur_amount"/><!-- 当前库存 -->
		<result property="req_amount" column="req_amount"/><!-- 请购数量 -->
		<result property="num" column="num"/><!-- 包装数量 -->
		<result property="amount" column="amount"/><!-- 采购数量 -->
		<result property="price" column="price"/><!-- 单价 -->
		<result property="amount_money" column="amount_money"/><!-- 金额 -->
		<result property="sup_no" column="sup_no"/><!-- 供应商变更号 -->
		<result property="sup_id" column="sup_id"/><!-- 供应商ID -->
		<result property="sup_name" column="sup_name"/><!-- 供应商名称 -->
		<result property="fac_id" column="fac_id"/><!-- 生厂商ID -->
		<result property="fac_no" column="fac_no"/><!-- 生厂商变更ID -->
		<result property="fac_name" column="fac_name"/><!-- 生厂商名称 -->
		<result property="memo" column="memo"/><!-- 备注 -->
		<result property="is_com" column="is_com"/><!-- 是否代销 -->
		<result property="sum_amount" column="sum_amount"/><!-- 总数量-->
		<result property="sum_req_amount" column="sum_req_amount"/><!-- 总数量-->
		
		<!-- 科室需求计划主表 返回结果集字段 -->
		<result property="req_id" column="req_id"/><!-- 计划单ID -->
		<result property="req_code" column="req_code"/><!-- 计划单号 -->
		<result property="maker_name" column="maker_name"/><!-- 制单人名称 -->
		<result property="checker_name" column="checker_name"/><!-- 审核人名字 -->
	</resultMap>
	
	<!-- 批量增加采购订单关系表 -->
	<insert id="addBatchPOReal" parameterType="java.util.List" >
		INSERT INTO mat_pur_order_rela (
			group_id, 
			hos_id, 
			copy_code, 
			order_id, 
			order_detail_id, 
			pur_id, 
			pur_detail_id, 
			pur_amount, 
			order_amount
		) 
		<foreach collection="list" item="item" index="index" separator="union all" >
			SELECT
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.order_id,jdbcType=INTEGER},
				#{item.order_detail_id,jdbcType=INTEGER},
				#{item.pur_id,jdbcType=INTEGER},
				#{item.pur_detail_id,jdbcType=INTEGER},
				#{item.pur_amount,jdbcType=FLOAT},
				#{item.order_amount,jdbcType=FLOAT}
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 中止订单 -->
	<update id="abortMatOrderInit" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			update mat_order_main set state = 0 
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and order_id = #{item.order_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 删除：采购生成的订单，还原采购计划状态为2 -->
	<update id="updateBatchPurOrder" parameterType="java.util.Map">
		update mat_pur_main set state = 2
		where pur_id in (
		      select distinct pur_id from mat_pur_order_rela
		      where hos_id = #{hos_id,jdbcType=INTEGER} 
		            and group_id= #{group_id,jdbcType=INTEGER} 
		            and copy_code = #{copy_code,jdbcType=VARCHAR}
		            and order_id in  (${order_ids})
		) and hos_id = #{hos_id,jdbcType=INTEGER} 
		and group_id = #{group_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
	</update>
	
	<!-- 删除：采购计划订单关系表 -->
	<delete id="deletePurOrder" parameterType="java.util.Map">
		delete from mat_pur_order_rela 
		where hos_id = #{hos_id,jdbcType=INTEGER} 
		    and group_id= #{group_id,jdbcType=INTEGER} 
		    and copy_code = #{copy_code,jdbcType=VARCHAR}
			and order_id in  (${order_ids})
	</delete>
	<!--删除：合并生成的订单，还原原订单的状态STATE=2）  -->
	<update id="updateBatchMergeOrder" parameterType="java.util.Map">
		update mat_order_main set state = 1
		where order_id in (
		      select distinct order_id_old  from mat_order_merge
		      where order_id_merge in  (${order_ids})
		            and hos_id = #{hos_id,jdbcType=INTEGER} 
		            and group_id= #{group_id,jdbcType=INTEGER} 
		            and copy_code = #{copy_code,jdbcType=VARCHAR}
		) and hos_id = #{hos_id,jdbcType=INTEGER} 
		and group_id = #{group_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
	</update>
	
	
	<!--删除：合并订单关系表  -->
	<update id="deleteMergeOrder" parameterType="java.util.Map">
		delete from mat_order_merge
		where order_id_merge in (${order_ids})
			and hos_id = #{hos_id,jdbcType=INTEGER} 
		    and group_id= #{group_id,jdbcType=INTEGER} 
		    and copy_code = #{copy_code,jdbcType=VARCHAR}
	</update>
	
	<!--采购生成后，修改采购单的状态为3  -->
	<update id="updatePurBatch" parameterType="java.util.Map">
		update mat_pur_main set state = 3
		where group_id= #{group_id,jdbcType=INTEGER} 
		     and hos_id = #{hos_id,jdbcType=INTEGER} 
		     and copy_code = #{copy_code,jdbcType=VARCHAR}
		     and pur_id in  (${pur_ids})
	</update>
	
	
	<!--订单合并 插入合并表  -->
	<insert id="addMergeOrder" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO mat_order_merge (
				group_id, 
				hos_id, 
				copy_code, 
				order_id_merge,
				order_id_old
			) 
			values(   
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.order_id_merge,jdbcType=INTEGER},
				#{item.order_id_old,jdbcType=INTEGER}
			)
		</foreach>
	</insert>
	
	<!-- 查询代销出库信息 -->
	<select id="queryAffiOut" resultMap="matAffiOutMain" parameterType="java.util.Map" >
		select mao.group_id,
		       mao.hos_id,
		       mao.copy_code,
		       mao.out_id,
		       mao.out_no,
		       mao.out_date,
		       mao.year,
		       mao.month,
		       mao.bus_type_code,
		       mbt.bus_type_name,
		       mao.store_id,
		       mao.store_no,
		       hsd.store_name,
		       mao.brief,
		       mao.dept_id,
		       mao.dept_no,
		       hdd.dept_name,
		       mao.dept_emp ,
		       he.emp_name dept_emp_name,
		       mao.maker,
		       s1.user_name maker_name,
		       mao.checker,
		       s2.user_name checker_name,
		       mao.check_date,
		       mao.confirmer,
		       s3.user_name confirmer_name,
		       mao.confirm_date,
		       mao.state,
		       mao.his_flag
		from mat_affi_out mao
		left join hos_store_dict hsd on mao.store_id = hsd.store_id 
		     and mao.store_no = hsd.store_no
		     and mao.hos_id = hsd.hos_id
		     and mao.group_id = hsd.group_id
		left join mat_bus_type mbt on mbt.bus_type_code = mao.bus_type_code
		     and mbt.is_stop = 0
		left join hos_dept_dict hdd on hdd.dept_no = mao.dept_no
		     and hdd.dept_id = mao.dept_id
		     and hdd.hos_id = mao.hos_id 
		     and hdd.group_id = mao.group_id
		left join hos_emp he on he.emp_id = mao.dept_emp
		     and he.hos_id = mao.hos_id 
		     and he.group_id = mao.group_id
		     and he.is_stop = 0
		left join sys_user s1 on s1.user_id = mao.maker
		     and s1.hos_id = mao.hos_id 
		     and s1.group_id = mao.group_id
		     and s1.copy_code = mao.copy_code
		     and s1.is_stop = 0
		left join sys_user s2 on s2.user_id = mao.checker
		     and s2.hos_id = mao.hos_id
		     and s2.group_id = mao.group_id
		     and s2.copy_code= mao.copy_code
		     and s2.is_stop = 0
		left join sys_user s3 on s3.user_id = mao.confirmer
		     and s3.hos_id = mao.hos_id
		     and s3.group_id = mao.group_id
		     and s3.copy_code = mao.copy_code
		     and s3.is_stop = 0
		where mao.hos_id = #{hos_id,jdbcType=INTEGER} 
		      and mao.group_id = #{group_id,jdbcType=INTEGER} 
		      and mao.copy_code = #{copy_code,jdbcType=VARCHAR} 
		      and mao.state = 3 --出库确认单据
		      <if test="begin_date != null and begin_date != ''">
				AND mao.out_date &gt;= to_date(#{begin_date},'yyyy/MM/dd')
			  </if>
			  <if test="end_date != null and end_date != ''">
				AND mao.out_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			  </if>		 
			  <if test="store_id != null and store_id != ''">
				AND mao.store_id =#{store_id,jdbcType=INTEGER}
			  </if>
			  <if test="store_no != null and store_no != ''">
				AND mao.store_no =#{store_no,jdbcType=INTEGER}
			  </if>
			  <if test="dept_id != null and dept_id != ''">
				AND mao.dept_id =#{dept_id,jdbcType=INTEGER}
			  </if>
			  <if test="dept_no != null and dept_no != ''">
				AND mao.dept_no =#{dept_no,jdbcType=INTEGER}
			  </if>
			  <if test="brief != null and brief != ''">
				AND mao.brief =#{brief,jdbcType=VARCHAR}
			  </if>
		order by mao.out_id desc
	</select>
	
	<!-- 根据代销出库ID查询主表数据 -->
	<select id="queryAffiOutMain" resultMap="matAffiOutMain" parameterType="java.util.Map" >
		select mao.group_id,
           mao.hos_id,
           mao.copy_code,
           mao.out_id,
           mao.out_no,
           to_char(mao.out_date,'yyyy-MM-dd') out_date,
           mao.year,
           mao.month,
           mao.bus_type_code,
           mbt.bus_type_name,
           mao.store_id,
           mao.store_no,
           hsd.store_name,
           mao.brief,
           mao.dept_id,
           mao.dept_no,
           hdd.dept_name,
           mao.dept_emp,
           he.emp_name,
           mao.maker,
           mao.checker,
           mao.check_date,
           mao.confirmer,
           mao.confirm_date,
           mao.state,
           mao.his_flag
		from mat_affi_out mao
		left join hos_store_dict hsd on mao.store_id = hsd.store_id 
		     and mao.store_no = hsd.store_no
		     and mao.hos_id = hsd.hos_id
		     and mao.group_id = hsd.group_id
		left join mat_bus_type mbt on mbt.bus_type_code = mao.bus_type_code
		     and mbt.is_stop = 0
		left join hos_dept_dict hdd on hdd.dept_id = mao.dept_id
		     and hdd.dept_no = mao.dept_no
		     and hdd.hos_id = mao.hos_id 
		     and hdd.group_id = mao.group_id
		left join hos_emp he on he.emp_id = mao.dept_emp
		     and he.hos_id = mao.hos_id 
		     and he.group_id = mao.group_id
		     and he.is_stop = 0
		left join sys_user s1 on s1.user_id = mao.maker
		     and s1.hos_id = mao.hos_id 
		     and s1.group_id = mao.group_id
		     and s1.copy_code = mao.copy_code
		     and s1.is_stop = 0
		left join sys_user s2 on s2.user_id = mao.checker
		     and s2.hos_id = mao.hos_id
		     and s2.group_id = mao.group_id
		     and s2.copy_code= mao.copy_code
		     and s2.is_stop = 0
		left join sys_user s3 on s3.user_id = mao.confirmer
		     and s3.hos_id = mao.hos_id
		     and s3.group_id = mao.group_id
		     and s3.copy_code = mao.copy_code
		     and s3.is_stop = 0
		where mao.hos_id = #{hos_id,jdbcType=INTEGER} 
		      and mao.group_id = #{group_id,jdbcType=INTEGER} 
		      and mao.copy_code = #{copy_code,jdbcType=VARCHAR} 
		      and mao.out_id = #{out_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 根据代销出库ID查询明细表数据 -->
	<select id="queryAffiOutDetail" resultMap="matAffiOutDetail" parameterType="java.util.Map" >
		select mad.group_id,
		       mad.hos_id,
		       mad.copy_code,
		       mad.out_id,
		       mad.inv_id,
		       mad.inv_no,
		       mid.inv_code,
		       mid.inv_name,
		       mid.inv_model,
		       hu.unit_name,
		       mad.batch_no,
		       mad.batch_sn,
		       maa.cur_amount,
		       nvl(mad.amount,0) amount,
		       nvl(mad.price,0) price,
		       nvl(mad.amount_money,0) amount_money,
		       mad.inva_date,
		       mad.disinfect_date,
		       mad.bar_code,
		       mad.location_id,
		       mld.location_code,
		       mld.location_name,
		       mad.note
		from mat_affi_out_detail mad
		left join mat_affi_out mao on mad.out_id = mao.out_id
		     and mad.hos_id = mao.hos_id 
		     and mad.group_id = mao.group_id
		     and mad.copy_code = mao.copy_code
		left join mat_inv_dict mid on mad.inv_id = mid.inv_id
		     and mid.inv_no = mad.inv_no
		     and mid.copy_code = mad.copy_code
		     and mid.group_id = mad.group_id
		     and mid.hos_id = mad.hos_id
		left join hos_unit hu on hu.unit_code = mid.unit_code
		     and hu.hos_id = mid.hos_id
		     and hu.group_id = mid.group_id
		     and hu.is_stop = 0
		left join (
		     select group_id,hos_id,copy_code,store_id,inv_id,location_id,sum(nvl(cur_amount,0)) cur_amount from mat_affi_inv_hold
		     where group_id =  #{group_id,jdbcType=INTEGER} 
		     	and hos_id = #{hos_id,jdbcType=INTEGER}  
		     	and copy_code = #{copy_code,jdbcType=VARCHAR} 
		     group by group_id,hos_id,copy_code,store_id,inv_id,location_id
		) maa on  maa.inv_id = mid.inv_id
		     and maa.store_id = mao.store_id
		     and maa.location_id = mad.location_id
		     and maa.group_id = mad.group_id
		     and maa.hos_id = mad.hos_id
		     and maa.copy_code = mad.copy_code
		left join  mat_location_dict mld on mld.location_id = mad.location_id
		     and mld.group_id = mad.group_id
		     and mld.hos_id = mad.hos_id
		     and mld.copy_code = mad.copy_code
		     and mld.is_stop = 0    
		where mad.group_id = #{group_id,jdbcType=INTEGER} 
		    and mad.hos_id = #{hos_id,jdbcType=INTEGER} 
		    and mad.copy_code = #{copy_code,jdbcType=VARCHAR} 
		    and mad.out_id = #{out_id,jdbcType=VARCHAR} 
		order by mad.detail_id 
	</select>
	
	<!-- 查询采购计划表信息 -->
	<select id="queryMatOrderGenPur" resultMap="matPurInfor" parameterType="java.util.Map">
		SELECT 
			  mpm.group_id,
			  mpm.hos_id,
			  mpm.copy_code,
			  mpm.pur_id,
			  mpm.pur_code,
			  mpm.brif,
			  mpm.pur_hos_id,
			  pur.hos_name  pur_hos_name,
			  mpm.req_hos_id,
			  req.hos_name  req_hos_name,
			  mpm.pay_hos_id,
			  pay.hos_name  pay_hos_name,
			  su.user_name  maker,
			  to_char(mpm.make_date,'yyyy-mm-dd') make_date,
			  sus.user_name  checker,
			  to_char(mpm.check_date,'yyyy-mm-dd') check_date,
			  mpm.state,
			  mpm.is_dir
		FROM MAT_PUR_MAIN mpm
		LEFT JOIN HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
			and mpm.hos_id = hdd.hos_id
			and mpm.dept_id = hdd.dept_id
		LEFT JOIN MAT_SYS_LIST msl ON  mpm.pur_type = msl.field_value
			AND msl.field_code = 'PUR_TYPE'
		left join v_hos_dict pur on pur.hos_id = mpm.pur_hos_id
         	and pur.group_id = mpm.group_id
         	and pur.is_stop = 0
    	left join v_hos_dict req on req.group_id = mpm.group_id
         	and mpm.req_hos_id = req.hos_id
         	and req.is_stop = 0
    	left join v_hos_dict pay on mpm.group_id = pay.group_id
         	and mpm.pay_hos_id = pay.hos_id
         	and pay.is_stop = 0
		LEFT JOIN SYS_USER su ON mpm.group_id = su.group_id
			AND mpm.hos_id = su.hos_id
			AND mpm.copy_code = su.copy_code
			AND mpm.maker = su.user_id
		LEFT JOIN SYS_USER sus ON mpm.group_id = sus.group_id
			AND mpm.hos_id = sus.hos_id
			AND mpm.copy_code = sus.copy_code
			AND mpm.checker = sus.user_id
		left join mat_pur_detail mpd on mpm.group_id = mpd.group_id
			and mpm.hos_id = mpd.hos_id and mpm.copy_code=mpd.copy_code
			and mpm.pur_id = mpd.pur_id
		WHERE mpm.group_id = #{group_id,jdbcType=INTEGER} 
			AND mpm.hos_id = #{hos_id ,jdbcType=INTEGER}
			AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mpm.state in (2,4)
			<if test="begin_date != null and begin_date != '' and end_date != null and end_date != '' ">
				AND mpm.make_date between to_date(#{begin_date},'yyyy/MM/dd') and to_date(#{end_date},'yyyy/MM/dd')
			</if> 
			<if test="pur_hos_id != null and pur_hos_id != '' ">
				AND mpm.pur_hos_id = #{pur_hos_id,jdbcType=INTEGER}
			</if>
			<if test="req_hos_id != null and req_hos_id != '' ">
				AND mpm.req_hos_id = #{req_hos_id,jdbcType=INTEGER}
			</if>
			<if test="pay_hos_id != null and pay_hos_id != '' ">
				AND mpm.pay_hos_id = #{pay_hos_id,jdbcType=INTEGER}
			</if>
			<if test="brif != null and brif != '' ">
				AND mpm.brif like '%${brif}%'
			</if>	
			<if test="is_dir != null and is_dir != ''">
				and mpm.is_dir  =  #{is_dir,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id != ''">
				and mpd.sup_id  =  #{sup_id,jdbcType=INTEGER}
			</if>			
			order by mpm.pur_id asc
	</select>
	
	<!-- 根据主键查询采购计划主表信息 -->
	<select id="queryMatPurById" resultMap="matPurInfor" parameterType="java.util.Map">
		SELECT
		  mpm.group_id,
		  mpm.hos_id,
		  mpm.copy_code,
		  mpm.pur_id,
		  mpm.pur_code,
		  mpm.dept_id,
		  mpm.dept_no,
		  hdd.dept_code,
		  hdd.dept_name,
		  to_char(mpm.make_date,'yyyy-MM-dd') as make_date,
		  to_char(mpm.arrive_date,'yyyy-MM-dd') as arrive_date,
		  mpm.pur_type,
		  mpm.brif,
		  mpm.pur_hos_id,
		  pur.hos_simple as pur_hos_name,
		  mpm.req_hos_id,
		  req.hos_simple as req_hos_name,
		  mpm.pay_hos_id,
		  pay.hos_simple as pay_hos_name,
		  mpm.is_dir,
		  mpm.arrive_date,
		  mpm.dir_dept_id,
		  mpm.dir_dept_no,
		  hddd.dept_code dir_dept_code,
		  hddd.dept_name dir_dept_name
		FROM MAT_PUR_MAIN mpm
		LEFT JOIN HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
			and mpm.hos_id = hdd.hos_id
			and mpm.dept_id = hdd.dept_id
			<if test="show_history == 1">
				and hdd.dept_no = mpm.dept_no
			</if>
			<if test="show_history == 0">
				and hdd.is_stop = 0
			</if>
		LEFT JOIN HOS_INFO_DICT pur ON mpm.group_id = pur.group_id
			AND mpm.pur_hos_id = pur.hos_id
		LEFT JOIN HOS_INFO_DICT req ON mpm.group_id = req.group_id
			AND mpm.req_hos_id = req.hos_id
		LEFT JOIN HOS_INFO_DICT pay ON mpm.group_id = pay.group_id
			AND mpm.pay_hos_id = pay.hos_id	
		left join hos_dept_dict hddd on hddd.dept_id = mpm.dir_dept_id
			and hddd.group_id = mpm.group_id
			and hddd.hos_id = mpm.hos_id
			<if test="show_history == 1">
				and hddd.dept_no = mpm.dir_dept_no
			</if>
			<if test="show_history == 0">
				and hddd.is_stop = 0
			</if>
		WHERE mpm.group_id = #{group_id,jdbcType=INTEGER}
		     and mpm.hos_id = #{hos_id,jdbcType=INTEGER}
		     and mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
		     and mpm.pur_id = #{pur_id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据主键查询采购计划单明细信息 -->
	<select id="queryMatPurDetail" resultMap="matPurInfor" parameterType="java.util.Map">
		SELECT distinct
				 mpd.group_id, 
				 mpd.hos_id, 
				 mpd.copy_code, 
				 mpd.pur_id, 
				 mpd.inv_id, 
				 mpd.inv_no,
				 mid.inv_code,
				 mid.inv_name,
				 mid.inv_model,
				 mid.unit_code,
				 hu.unit_name,
				 aa.cur_amount,
				 mpd.amount, 
				 mpd.price,
				 mpd.amount*mpd.price as amount_money, 
				 mpd.num, 
				 mpd.num_exchange, 
				 mpd.pack_code, 
				 hp.pack_name as pack_name, 
				 mpd.sup_no, 
				 mpd.sup_id, 
				 hs.sup_code||' '||hs.sup_name as sup_name, 
				 mpd.req_amount, 
				 hfd.fac_id,
				 hfd.fac_no,
				 hfd.fac_name, 
				 mpd.memo,
				 mpd.pur_detail_id
		    FROM MAT_PUR_DETAIL mpd
		    LEFT JOIN MAT_INV_DICT mid  ON 	 mpd.group_id = mid.group_id
			    AND mpd.hos_id = mid.hos_id
			    AND mpd.copy_code = mid.copy_code
			    AND mpd.inv_id = mid.inv_id 
			    and mid.is_stop = '0'
		    LEFT JOIN MAT_INV_UNIT_MAP mium ON  mpd.group_id = mium.group_id 
			    AND mpd.hos_id = mium.hos_id
			    AND mpd.copy_code = mium.copy_code
			    AND mpd.inv_id = mium.inv_id
			    AND mpd.pack_code = mium.pack_code 
		    LEFT JOIN HOS_PACKAGE hp  ON mium.group_id = hp.group_id
			    AND mium.hos_id = hp.hos_id
			    AND mium.pack_code = hp.pack_code 
		    LEFT JOIN HOS_FAC_DICT hfd ON mid.group_id = hfd.group_id
			    AND mid.hos_id = hfd.hos_id
			    AND mid.fac_id = hfd.fac_id
			    and mid.fac_no = hfd.fac_no 
		    LEFT JOIN HOS_SUP hs  ON  mpd.group_id = hs.group_id
		    	AND mpd.hos_id = hs.hos_id
		    	AND mpd.sup_id = hs.sup_id
		    LEFT JOIN HOS_UNIT hu ON mpd.group_id = hu.group_id
			    AND mpd.hos_id = hu.hos_id
			    AND mid.unit_code = hu.unit_code
		    left JOIN (
		       select group_id,hos_id,copy_code,inv_id,sum(nvl(cur_amount,0)) cur_amount
		       from mat_inv_hold
		       where group_id = #{group_id,jdbcType=INTEGER}
             		and hos_id = #{hos_id,jdbcType=INTEGER}
             		and copy_code = #{copy_code,jdbcType=VARCHAR}
       			group by group_id,hos_id,copy_code,inv_id
			) aa on  mid.inv_id = aa.inv_id
				AND mid.group_id = aa.group_id
				AND mid.hos_id = aa.hos_id 
		  WHERE
		        mpd.group_id = #{group_id,jdbcType=INTEGER}
		        AND mpd.hos_id = #{hos_id,jdbcType=INTEGER}
		        AND mpd.copy_code = #{copy_code,jdbcType=VARCHAR}
		        AND mpd.pur_id = #{pur_id,jdbcType=INTEGER}
		  order by mid.inv_code
	</select>
	
	<!-- 采购计划生成订单      汇总材料明细信息  -->
	<select id="queryMatOrderDetailList" resultMap="matPurInfor" parameterType="java.util.Map">
		select  distinct A.group_id,
			A.hos_id,
			A.copy_code,
			A.pur_type,
			A.pur_hos_id,
			A.req_hos_id,
			A.pay_hos_id,
			A.is_com,
			A.sup_no,
			A.sup_id,
			A.inv_id,
			A.inv_no,
			A.price,
			A.amount,
			A.req_amount,
			A.pur_id,
			C.rela_amount,
			C.rela_req ,
			B.sum_amount,
			B.sum_req_amount, 
			A.price * B.sum_amount amount_money
			from (
			           
			      select mpr.pur_id,mpr.group_id,
			             mpr.hos_id,
			             mpr.copy_code,
			             mpr.pur_type,
			             mpr.pur_hos_id,
			             mpr.req_hos_id,
			             mpr.pay_hos_id,
			             mpd.sup_no,
			             mpd.sup_id,
			             mpd.inv_id,
			             mpd.inv_no,
			             mid.is_com,
			             mpd.price,
			             mpd.amount,
			             mpd.req_amount
			        from mat_pur_main mpr
			        left join mat_pur_detail mpd on mpr.group_id = mpd.group_id
			             and mpr.hos_id = mpd.hos_id
			             and mpr.copy_code = mpd.copy_code
			             and mpr.pur_id = mpd.pur_id
			        left join mat_inv_dict mid on mid.inv_no = mpd.inv_no 
			             and mid.inv_id = mpd.inv_id
			             and mid.group_id = mpd.group_id 
			             and mid.hos_id = mpd.hos_id
			             and mid.copy_code = mpd.copy_code
			        where mpr.pur_id in  (${pur_ids})
			              and mpr.hos_id = #{hos_id,jdbcType=INTEGER}
			              and mpr.group_id = #{group_id,jdbcType=INTEGER}
			              and mpr.copy_code = #{copy_code,jdbcType=VARCHAR}
			              and mpd.amount > 0
			        order by mid.is_com,inv_id
			
			)A left join (
			        select mpr.group_id,
			         mpr.hos_id,
			         mpr.copy_code,
			         mpr.pur_type,
			         mpr.pur_hos_id,
			         mpr.req_hos_id,
			         mpr.pay_hos_id,
			         mpd.sup_no,
			         mpd.sup_id,
			         mpd.inv_id,
			         mpd.inv_no,
			         mid.is_com,
			         mpd.price,
			         sum(nvl(mpd.amount,0)) sum_amount,
			         sum(nvl(mpd.req_amount,0)) sum_req_amount
			    from mat_pur_main mpr
			    left join mat_pur_detail mpd on mpr.group_id = mpd.group_id
			         and mpr.hos_id = mpd.hos_id
			         and mpr.copy_code = mpd.copy_code
			         and mpr.pur_id = mpd.pur_id
			    left join mat_inv_dict mid on mid.inv_no = mpd.inv_no 
			         and mid.inv_id = mpd.inv_id
			         and mid.group_id = mpd.group_id 
			         and mid.hos_id = mpd.hos_id
			         and mid.copy_code = mpd.copy_code
			    where mpr.pur_id in (${pur_ids})
			          and mpr.hos_id = #{hos_id,jdbcType=INTEGER}
			          and mpr.group_id = #{group_id,jdbcType=INTEGER}
			          and mpr.copy_code = #{copy_code,jdbcType=VARCHAR}
			          <!--  and mpd.req_amount >0-->
			    group by mpr.group_id,
			           mpr.hos_id,
			           mpr.copy_code,
			           mpr.pur_type,
			           mpr.pur_hos_id,
			           mpr.req_hos_id,
			           mpr.pay_hos_id,
			           mpd.sup_no,
			           mpd.sup_id,
			           mpd.inv_id,
			           mpd.inv_no,
			           mid.is_com,
			           mpd.price
			
			) B on A.group_id = B.group_id 
				and A.hos_id = B.hos_id 
				and A.copy_code = B.copy_code  
				and A.sup_no = B.sup_no 
				and A.sup_id =B.sup_id 
				and A.inv_id = B.inv_id 
				and A.inv_no = B.inv_no 
				and A.is_com = B.is_com 
				and A.pay_hos_id = B.pay_hos_id 
				and A.req_hos_id =B.req_hos_id 
				and A.pur_hos_id = B.pur_hos_id 
				and A.pur_type = B.pur_type
		left join  (
				  SELECT mpr.pur_id, mpr.group_id, mpr.hos_id, mpr.copy_code,
				    
				    mpd.inv_id,   sum(nvl(mpd.amount,0)) rela_amount , 
				    sum(nvl(mpd.req_amount,0)) rela_req
				  FROM mat_pur_main mpr
				  LEFT JOIN mat_pur_detail mpd 
					  ON mpr.group_id = mpd.group_id
					  AND mpr.hos_id = mpd.hos_id
					  AND mpr.copy_code = mpd.copy_code
					  AND mpr.pur_id = mpd.pur_id 
				  WHERE mpr.pur_id in  (${pur_ids})
			             and mpr.hos_id = #{hos_id,jdbcType=INTEGER}
			             and mpr.group_id = #{group_id,jdbcType=INTEGER}
			             and mpr.copy_code = #{copy_code,jdbcType=VARCHAR}
			             and mpd.amount > 0
				    group by  mpr.pur_id, mpr.group_id, mpr.hos_id, mpr.copy_code, mpd.inv_id
				) C
				
				  on A.group_id = C.group_id 
				  and A.hos_id = C.hos_id 
				  and A.copy_code = C.copy_code
				  and A.pur_id = C.pur_id 
				  and A.inv_id = C.inv_id
			order by  A.group_id,A.hos_id,A.copy_code,A.pur_hos_id,A.req_hos_id,A.pay_hos_id,A.is_com,A.inv_id,A.inv_no,A.price,A.pur_id
	</select>
	
	<!-- 生成订单明细 -->
	<select id="queryMatAffiOutDetailByGen" resultMap="matAffiOutDetail" parameterType="java.util.Map">
		select 
		  maod.group_id,
		  maod.hos_id,
		  maod.copy_code,
		  maod.inv_id,
		  maod.inv_no,
		  mid.inv_code,
		  mid.inv_name,
		  mid.inv_model,
		  mid.unit_code,
		  hu.unit_name,
		  hp.pack_code,
		  hp.pack_name,
		  miup.map_amount num_exchange,
		  maod.price,
		  sum(maod.amount) amount,
		  sum(maod.price * maod.amount) amount_money,
		  maod.num num
		from mat_affi_out_detail maod
		left join mat_inv_dict mid on maod.inv_id = mid.inv_id 
		     and maod.inv_no = mid.inv_no 
		     and maod.group_id = mid.group_id
		     and maod.hos_id = mid.hos_id
		     and maod.copy_code = mid.copy_code
		left join mat_inv_unit_map miup on miup.group_id = maod.group_id
		     and miup.hos_id = maod.hos_id 
		     and miup.copy_code = maod.copy_code
		     and miup.pack_code = maod.pack_code
		     and miup.inv_id = maod.inv_id
		left join hos_package hp on hp.group_id = miup.group_id
		     and hp.hos_id = miup.hos_id
		     and hp.pack_code = miup.pack_code
		     and hp.is_stop = 0
		left join hos_unit hu on hu.unit_code = mid.unit_code
		     and hu.group_id = mid.group_id
		     and hu.hos_id = mid.hos_id
		     and hu.is_stop = 0
		where maod.out_id in (${out_ids})
		      and maod.group_id = #{group_id,jdbcType=INTEGER} 
		      and maod.hos_id = #{hos_id,jdbcType=INTEGER} 
		      and maod.copy_code = #{copy_code,jdbcType=VARCHAR} 
		group by maod.group_id,
		  maod.hos_id,
		  maod.copy_code,
		  maod.inv_id,
		  maod.inv_no,
		  mid.inv_code,
		  mid.inv_name,
		  mid.inv_model,
		  mid.unit_code,
		  hu.unit_name,
		  hp.pack_code,
		  hp.pack_name,
		  miup.map_amount ,
		  maod.price,
		  maod.num
	</select>
	
	<!-- 订单主表模板打印 -->
	<select id="queryMatOrderInitPrintTemlateByMain" parameterType="java.util.Map"
		resultType="java.util.Map">
			select  
            mom.group_id,
            mom.hos_id,
            mom.copy_code,
            mom.order_id,
            mom.order_code,
            to_char(mom.order_date, 'yyyy-MM-dd hh24:mi:ss') order_date,
            hsd.sup_code,
            hsd.sup_name,
            case mom.order_type when 1 then '普通订单' when 2 then '代销备货单' end order_type_name,
            hc.hos_name pur_hos_name,--采购单位
            hc1.hos_name take_hos_name,--收货单位
            hc2.hos_name pay_hos_name,--付款单位
            mom.dept_id,--采购部门 
            mom.dept_no,
            hdd.dept_code,
            hdd.dept_name as STOCK_DEPT_NAME,
            mom.stocker,
            he.emp_name stocker_name, --采购员
            mom.is_notice,
            to_char(mom.notice_date, 'yyyy-MM-dd hh24:mi:ss') notice_date,
            to_char(mom.check_date, 'yyyy-MM-dd hh24:mi:ss') check_date,
            to_char(mom.ARRIVE_DATE, 'yyyy-MM-dd hh24:mi:ss') ARRIVE_DATE,
            case 
                when mom.state = 0 then '已中止'
                when mom.state = 1 then '未审核'
                when mom.state = 2 then '已审核'
                when mom.state = 3 then '部分执行'
                when mom.state = 5 then '执行完毕'
                when mom.state = 8 then '已合并'
                when mom.state = 9 then '已撤销'
            end as state_name,
            mom.note,
            mom.stock_type_code,
            mst.stock_type_name,
            case mom.pur_type when 1 then '自购订单' when 2 then '统购订单' end pur_name,
            hsod.store_name, 
            case mom.is_dir when 1 then '是' else '否' end is_dir,
            mom.dir_dept_id,
            mom.dir_dept_no,
            hddd.dept_code dir_dept_code,
            hddd.dept_name dir_dept_name, 
            mpt.pay_term_name as pay_name,
            mom.ARR_ADDRESS,
            mod.money_sum,
            mod.money_sum as money_sum_upper 
    from mat_order_main mom 
    left join (
        select order_id ,sum(mod.price * mod.amount) money_sum 
        from mat_order_detail mod 
        group by order_id
    ) mod on mom.order_id =mod.order_id
    left join hos_store_dict hsod on mom.group_id = hsod.group_id
    and mom.hos_id = hsod.hos_id
    and mom.store_id = hsod.store_id
    and mom.store_no = hsod.store_no 
    left join hos_sup_dict hsd on mom.sup_id = hsd.sup_id 
         and mom.hos_id = hsd.hos_id
         and mom.group_id = hsd.group_id
        and hsd.is_stop = 0
    left join hos_dept_dict hdd on  hdd.dept_id = mom.dept_id 
         and hdd.hos_id = mom.hos_id 
         and hdd.group_id = mom.group_id 
        and hdd.is_stop = 0
    left join hos_emp he on he.emp_id = mom.stocker
         and he.hos_id = mom.hos_id
         and he.group_id = mom.group_id
         and he.is_stop = 0 
    left join v_hos_dict hc on hc.hos_id = mom.pur_hos_id
         and hc.group_id = mom.group_id
         and hc.is_stop = 0
      left join v_hos_dict hc1 on hc1.hos_id = mom.take_hos_id
         and hc1.group_id = mom.group_id
         and hc1.is_stop = 0
      left join v_hos_dict hc2 on hc2.hos_id = mom.pay_hos_id
         and hc2.group_id = mom.group_id
         and hc2.is_stop = 0
    left join mat_stock_type mst on mst.stock_type_code = mom.stock_type_code
       and mst.hos_id = mom.hos_id
       and mst.group_id = mom.group_id
       and mst.copy_code = mom.copy_code
       and mst.is_stop = 0
    left join hos_dept_dict hddd on hddd.dept_id = mom.dir_dept_id
       and hddd.group_id = mom.group_id
       and hddd.hos_id = mom.hos_id
        and hddd.is_stop = 0
    left join mat_pay_term mpt on mom.group_id =mpt.group_id
    and mom.hos_id=mpt.hos_id
    and mom.copy_code=mpt.copy_code
    and mom.PAY_CODE = mpt.pay_term_id
    where mom.group_id =
      #{group_id,jdbcType=NUMERIC}
      and mom.hos_id =
      #{hos_id,jdbcType=NUMERIC}
      and mom.copy_code =
      #{copy_code,jdbcType=VARCHAR}
      and
      mom.order_id=#{order_id,jdbcType=NUMERIC}
    order by mom.order_id desc  
	</select>
	<select id="queryMatOrderInitPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map">
		select  
            mom.order_id as id,
            mom.group_id,
            mom.hos_id,
            mom.copy_code,
            mom.order_id,
            mom.order_code,
            to_char(mom.order_date, 'yyyy-MM-dd hh24:mi:ss') order_date,
            hsd.sup_code,
            hsd.sup_name,
            case mom.order_type when 1 then '普通订单' when 2 then '代销备货单' end order_type_name,
            hc.hos_name pur_hos_name,--采购单位
            hc1.hos_name take_hos_name,--收货单位
            hc2.hos_name pay_hos_name,--付款单位
            mom.dept_id,--采购部门 
            mom.dept_no,
            hdd.dept_code,
            hdd.dept_name as STOCK_DEPT_NAME,
            mom.stocker,
            he.emp_name stocker_name, --采购员
            mom.is_notice,
            to_char(mom.notice_date, 'yyyy-MM-dd hh24:mi:ss') notice_date,
            to_char(mom.check_date, 'yyyy-MM-dd hh24:mi:ss') check_date,
            to_char(mom.ARRIVE_DATE, 'yyyy-MM-dd hh24:mi:ss') ARRIVE_DATE,
            
            case 
                when mom.state = 0 then '已中止'
                when mom.state = 1 then '未审核'
                when mom.state = 2 then '已审核'
                when mom.state = 3 then '部分执行'
                when mom.state = 5 then '执行完毕'
                when mom.state = 8 then '已合并'
                when mom.state = 9 then '已撤销'
            end as state_name,
            
            mom.note,
            mom.stock_type_code,
            mst.stock_type_name,
            case mom.pur_type when 1 then '自购订单' when 2 then '统购订单' end pur_name,
            hsod.store_name, 
            case mom.is_dir when 1 then '是' else '否' end is_dir,
            mom.dir_dept_id,
            mom.dir_dept_no,
            hddd.dept_code dir_dept_code,
            hddd.dept_name dir_dept_name, 
            mpt.pay_term_name as pay_name,
            mom.ARR_ADDRESS,
            mod.money_sum,
            mod.money_sum as money_sum_upper 
    from mat_order_main mom 
    left join (
        select order_id ,sum(mod.price * mod.amount) money_sum 
        from mat_order_detail mod 
        group by order_id
    ) mod on mom.order_id =mod.order_id
    left join hos_store_dict hsod on mom.group_id = hsod.group_id
    and mom.hos_id = hsod.hos_id
    and mom.store_id = hsod.store_id
    and mom.store_no = hsod.store_no 
    left join hos_sup_dict hsd on mom.sup_id = hsd.sup_id 
         and mom.hos_id = hsd.hos_id
         and mom.group_id = hsd.group_id
        and hsd.is_stop = 0
    left join hos_dept_dict hdd on  hdd.dept_id = mom.dept_id 
         and hdd.hos_id = mom.hos_id 
         and hdd.group_id = mom.group_id 
        and hdd.is_stop = 0
    left join hos_emp he on he.emp_id = mom.stocker
         and he.hos_id = mom.hos_id
         and he.group_id = mom.group_id
         and he.is_stop = 0 
    left join v_hos_dict hc on hc.hos_id = mom.pur_hos_id
         and hc.group_id = mom.group_id
         and hc.is_stop = 0
      left join v_hos_dict hc1 on hc1.hos_id = mom.take_hos_id
         and hc1.group_id = mom.group_id
         and hc1.is_stop = 0
      left join v_hos_dict hc2 on hc2.hos_id = mom.pay_hos_id
         and hc2.group_id = mom.group_id
         and hc2.is_stop = 0
    left join mat_stock_type mst on mst.stock_type_code = mom.stock_type_code
       and mst.hos_id = mom.hos_id
       and mst.group_id = mom.group_id
       and mst.copy_code = mom.copy_code
       and mst.is_stop = 0
    left join hos_dept_dict hddd on hddd.dept_id = mom.dir_dept_id
       and hddd.group_id = mom.group_id
       and hddd.hos_id = mom.hos_id
        and hddd.is_stop = 0
    left join mat_pay_term mpt on mom.group_id =mpt.group_id
    and mom.hos_id=mpt.hos_id
    and mom.copy_code=mpt.copy_code
    and mom.PAY_CODE = mpt.pay_term_id
		where mom.group_id =
			#{group_id,jdbcType=NUMERIC}
			and mom.hos_id =
			#{hos_id,jdbcType=NUMERIC}
			and mom.copy_code =#{copy_code,jdbcType=VARCHAR}
			and mom.order_id in (${paraId})
	    order by mom.order_id desc	

	</select>

	<!-- 订单明细表模板打印 -->
	<select id="queryMatOrderInitPrintTemlateByDetail" parameterType="java.util.Map"
		resultType="java.util.Map">
		select  mdd.order_id as id,
		    mdd.group_id,
		    mdd.hos_id,
		    mdd.copy_code,
		    mdd.order_id,
		    mdd.order_detail_id,
		    mdd.inv_no,
		    mdd.inv_id,
		    mid.inv_code,
		    mid.inv_name,
		    mid.inv_model,
            hsd.store_name as require_store_name,
		    mid.unit_code,
		    hu.unit_name,
		    mdd.pack_code,
		    hp.pack_name,
		    mdd.num,--包装数量
		    mdd.amount,--数量
		    mdd.price,--单价
		    nvl(mdd.amount,0)*nvl(mdd.price,0) amount_money,--金额
		    mdd.num_exchange,--包装换算量
        	hfd.fac_name,
		    mdd.memo note_1 ,--备注,
		    mid.bid_code  --交易编码
		from mat_order_detail mdd
        left join hos_store_dict hsd on mdd.group_id = hsd.group_id
        and mdd.hos_id = hsd.hos_id
        and mdd.store_id = hsd.store_id
        and mdd.store_no = hsd.store_no 
		left join mat_inv_dict mid on mdd.inv_no = mid.inv_no
		     and mid.inv_id = mdd.inv_id
		     and mdd.group_id = mid.group_id
		     and mdd.hos_id = mid.hos_id
		     and mdd.copy_code = mid.copy_code
		left join hos_unit hu on hu.unit_code = mid.unit_code
		     and hu.group_id = mid.group_id
		     and hu.hos_id = mid.hos_id
		     and hu.is_stop = 0
		left join hos_package hp on hp.pack_code = mdd.pack_code
			 and hp.group_id = mdd.group_id
			 and hp.hos_id = mdd.hos_id
			 and hp.is_stop = 0
       left join hos_fac_dict hfd on mdd.group_id=hfd.group_id
	        and mdd.hos_id=hfd.hos_id
	        and mid.fac_id=hfd.fac_id and mid.fac_no = hfd.fac_no
		where mdd.group_id =#{group_id,jdbcType=NUMERIC}
		and mdd.hos_id = #{hos_id,jdbcType=NUMERIC}
		and mdd.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="p_num ==1">
				and mdd.order_id in (${paraId})
			</if>
			<if test="p_num ==0">
				and mdd.order_id=#{order_id,jdbcType=NUMERIC}
			</if>	
		order by mdd.order_detail_id
	</select>
	
	<!-- 采购计划导入主查询 -->
	<select id="queryMatPurMainForOrder" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.pur_id, a.pur_code, a.pur_type, a.brif, 
			a.pur_hos_id, d.hos_name as pur_hos_name, a.req_hos_id, e.hos_name as req_hos_name, 
			a.pay_hos_id, f.hos_name as pay_hos_name, g.user_name as maker_name, a.make_date, 
			h.user_name as checker_name, a.check_date, a.state, a.is_dir, i.store_name, 
			sum(b.amount - nvl(c.order_amount, 0)) amount
		FROM mat_pur_main a
		LEFT JOIN mat_pur_detail b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code AND a.pur_id = b.pur_id
		LEFT JOIN (select pur_id, pur_detail_id, sum(order_amount) order_amount 
			from mat_pur_order_rela
			where group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			group by pur_id, pur_detail_id
		) c
			ON b.pur_id = c.pur_id AND b.pur_detail_id = c.pur_detail_id
		LEFT JOIN v_hos_dict d
			ON a.group_id = d.group_id AND a.pur_hos_id = d.hos_id
			AND d.is_stop = 0
		LEFT JOIN v_hos_dict e
			ON a.group_id = e.group_id AND a.req_hos_id = e.hos_id
			AND e.is_stop = 0
		LEFT JOIN v_hos_dict f
			ON a.group_id = f.group_id AND a.pay_hos_id = f.hos_id
			AND f.is_stop = 0
		LEFT JOIN sys_user g
			ON a.group_id = g.group_id AND a.hos_id = g.hos_id
			AND a.maker = g.user_id AND g.is_stop = 0
		LEFT JOIN sys_user h
			ON a.group_id = h.group_id AND a.hos_id = h.hos_id
			AND a.checker = h.user_id AND h.is_stop = 0
		LEFT JOIN hos_store_dict i 
			ON a.group_id = i.group_id AND a.hos_id = i.hos_id 
			AND a.store_id = i.store_id AND a.store_no = i.store_no 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<![CDATA[AND a.state >= 2 AND b.is_closed <> 1]]>
			<if test="begin_pur_date != null and begin_pur_date != ''">
				AND a.make_date &gt;= #{begin_pur_date,jdbcType=DATE} 
			</if>
			<if test="end_pur_date != null and end_pur_date != ''">
				AND a.make_date &lt;= #{end_pur_date,jdbcType=DATE} 
			</if>  
			<if test="pur_hos_id != null and pur_hos_id != ''">
				AND a.pur_hos_id = #{pur_hos_id,jdbcType=INTEGER} 
			</if>  
			<if test="req_hos_id != null and req_hos_id != ''">
				AND a.req_hos_id = #{req_hos_id,jdbcType=INTEGER} 
			</if>  
			<if test="pay_hos_id != null and pay_hos_id != ''">
				AND a.pay_hos_id = #{pay_hos_id,jdbcType=INTEGER} 
			</if>  
			<if test="brif != null and brif != ''">
				AND a.brif = #{brif,jdbcType=VARCHAR} 
			</if>  
			<if test="is_dir != null and is_dir != ''">
				AND a.is_dir = #{is_dir,jdbcType=INTEGER} 
			</if>  
			<if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id,jdbcType=INTEGER} 
			</if>  
			<if test="store_id == null or store_id == ''">
				AND( 
					EXISTS(
						SELECT 1
						FROM v_user_data_perm
						WHERE group_id = #{group_id,jdbcType=INTEGER} 
							AND hos_id = #{hos_id,jdbcType=INTEGER} 
							AND user_id = #{user_id,jdbcType=INTEGER} 
							AND table_code = 'HOS_STORE_DICT'
							AND perm_code = to_char(a.store_id) 
							AND is_read = 1 AND is_write = 1 
					) 
					OR
					a.store_id IS NULL
				)
			</if>
		GROUP BY a.group_id, a.hos_id, a.copy_code, a.pur_id, a.pur_code, a.pur_type, a.brif, 
			a.pur_hos_id, d.hos_name, a.req_hos_id, e.hos_name, a.pay_hos_id, f.hos_name, 
			g.user_name, a.make_date, h.user_name, a.check_date, a.state, a.is_dir, i.store_name
		HAVING sum(b.amount - nvl(c.order_amount, 0)) > 0
		ORDER BY a.pur_id desc
	</select>
	
	<!-- 采购计划导入明细查询 -->
	<select id="queryMatPurDetailForOrder" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.pur_id, a.pur_detail_id, a.inv_id, a.inv_no, c.inv_code, c.inv_name, 
			c.inv_model, d.unit_name, a.sup_id, a.sup_no, e.sup_name, a.amount - nvl(b.order_amount, 0) as amount, 
			a.price, (a.amount - nvl(b.order_amount, 0)) * a.price as amount_money, a.app_dept_id, a.app_dept_no, 
			f.dept_name as app_dept_name, a.app_date, a.memo 
		FROM mat_pur_detail a
		LEFT JOIN (select pur_detail_id, sum(order_amount) order_amount 
			from mat_pur_order_rela
			where group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and pur_id = #{pur_id,jdbcType=INTEGER}
			group by pur_detail_id
		) b
			ON a.pur_detail_id = b.pur_detail_id
		LEFT JOIN mat_inv_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id
			AND a.copy_code = c.copy_code AND a.inv_id = c.inv_id
			AND a.inv_no = c.inv_no
		LEFT JOIN hos_unit d
			ON c.group_id = d.group_id AND c.hos_id = d.hos_id
			AND c.unit_code = d.unit_code
		LEFT JOIN hos_sup_dict e
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id
			AND a.sup_id = e.sup_id AND a.sup_no = e.sup_no
		LEFT JOIN hos_dept_dict f
			ON a.group_id = f.group_id AND a.hos_id = f.hos_id
			AND a.app_dept_id = f.dept_id AND a.app_dept_no = f.dept_no 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pur_id = #{pur_id,jdbcType=INTEGER}
			<![CDATA[
			AND a.is_closed <> 1 
			AND a.amount <> nvl(b.order_amount, 0)
			]]>
		ORDER BY a.pur_detail_id
	</select>
	
	<!-- 关闭采购明细 -->
	<update id="updateMatPurDetailByOrderClose" parameterType="java.util.List" >
		UPDATE mat_pur_detail 
		SET is_closed = 1
		WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and pur_id = #{item.pur_id,jdbcType=INTEGER}
			and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
		</foreach> 
	</update>
	
	<!-- 根据采购计划获取订单信息用于导入 -->
	<select id="queryOrderByPurImp" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.pur_id, a.pur_code, a.pur_detail_id, 
			a.inv_id, a.inv_no, f.inv_code, f.inv_name, b.pur_hos_id, b.req_hos_id as take_hos_id, 
			b.pay_hos_id, d.dept_id, d.dept_no, a.sup_id, a.sup_no, a.app_dept_id, a.app_dept_no, 
			a.amount - nvl(c.order_amount, 0) as amount, a.price, 
			(a.amount - nvl(c.order_amount, 0)) * a.price as amount_money, 
			a.app_date, a.memo, e.emp_code stocker, b.store_id, b.store_no 
		FROM mat_pur_detail a 
		LEFT JOIN mat_pur_main b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id
			AND a.copy_code = b.copy_code AND a.pur_id = b.pur_id
		LEFT JOIN (select pur_detail_id, sum(order_amount) order_amount 
			from mat_pur_order_rela 
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
				and (
					<if test="pur_detail_ids == null or pur_detail_ids == ''">
						pur_detail_id in ('')
					</if> 
					<if test="pur_detail_ids != null and pur_detail_ids != ''">
						pur_detail_id in (${pur_detail_ids})
					</if> 
					<if test="pur_ids != null and pur_ids != ''">
						 or pur_id in (${pur_ids})
					</if>
				) 
			group by pur_detail_id
		) c 
			ON a.pur_detail_id = c.pur_detail_id 
		
		LEFT JOIN (
			select hdd.group_id, hdd.hos_id, ada.dept_id, hdd.dept_no 
			from acc_dept_attr ada
			left join hos_dept_dict hdd
				on ada.group_id = hdd.group_id and ada.hos_id = hdd.hos_id
				and ada.dept_id = hdd.dept_id and hdd.is_stop = 0
			where ada.group_id = #{group_id,jdbcType=INTEGER} 
				and ada.hos_id = #{hos_id,jdbcType=INTEGER} 
				and ada.is_stock = 1 
				and hdd.dept_no is not null 
				and rownum = 1 
         ) d 
			on a.group_id = d.group_id and a.hos_id = d.hos_id
		LEFT JOIN sys_user e
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id
			AND e.user_id = #{user_id,jdbcType=INTEGER}
		LEFT JOIN mat_inv f 
			ON a.group_id = f.group_id 
			AND a.hos_id = f.hos_id 
			AND a.copy_code = f.copy_code 
			AND a.inv_id = f.inv_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			AND a.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND (
				<if test="pur_detail_ids == null or pur_detail_ids == ''">
					a.pur_detail_id in ('')
				</if> 
				<if test="pur_detail_ids != null and pur_detail_ids != ''">
					a.pur_detail_id in (${pur_detail_ids})
				</if> 
				<if test="pur_ids != null and pur_ids != ''">
					 or a.pur_id in (${pur_ids})
				</if>
			) 
			<![CDATA[ 
			AND a.is_closed <> 1
			AND a.amount <> nvl(c.order_amount, 0)
			]]> 
	</select>
	
	<!-- 查询采购明细信息 -->
	<select id="queryMatPurDetailGenOrder" parameterType="java.util.Map" resultType="java.util.Map">
		 select a.group_id, a.hos_id, a.copy_code, a.pur_id, a.pur_detail_id,a.pur_code
			  , a.inv_id, a.inv_no, c.inv_code, c.is_com,c.inv_name, c.inv_model
			  , d.unit_name, a.sup_id, a.sup_no, e.sup_code,e.sup_name,a.price,
			  a.amount as pur_amount, nvl(b.order_amount,0) as already_amount,
			  a.amount - nvl(nvl(b.order_amount,0), 0) as amount, 
			   (a.amount - nvl(b.order_amount, 0)) * a.price as amount_money, 
			  a.app_dept_id, a.app_dept_no, f.dept_name as app_dept_name, 
			  a.app_date, a.memo,asa.phone,asa.ven_person,<!-- mv.cert_code,
			  to_char(mv.start_date,'yyyy-MM-dd') start_date,
			  to_char(mv.end_date,'yyyy-MM-dd') end_date, -->
			  b.pur_hos_id, b.req_hos_id as take_hos_id, b.pay_hos_id,hd.emp_id,hd.emp_no,hd.emp_code,hd.emp_name,
			  b.store_id,b.store_no,hsd.store_code,hsd.store_name
			from mat_pur_detail a
			left join mat_pur_main b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
				and a.pur_id=b.pur_id
			left join hos_store_dict hsd on b.group_id=hsd.group_id and b.hos_id=hsd.hos_id and b.store_id=hsd.store_id and b.store_no=hsd.store_no	
			left join sys_user s on a.group_id=s.group_id and a.hos_id=s.hos_id
				and s.user_id=#{user_id} and s.is_stop = 0
			left join hos_emp_dict hd on s.group_id=hd.group_id and s.hos_id=hd.hos_id
				and s.emp_code=hd.emp_id and hd.is_stop=0
			left join (
			  select pur_detail_id, sum(order_amount) as order_amount
			  from mat_pur_order_rela
			  <where>
			  	<if test="group_id != null and group_id !=''">
			  		and group_id = #{group_id,jdbcType=INTEGER}
			  	</if>
			  	<if test="hos_id != null and hos_id !=''">
			  		and hos_id = #{hos_id,jdbcType=INTEGER}
			  	</if>
			  	<if test="copy_code != null and copy_code !=''">
			  		AND copy_code = #{copy_code,jdbcType=VARCHAR}
			  	</if>
			  </where>
			  group by pur_detail_id
			) b on a.pur_detail_id = b.pur_detail_id
			left join mat_inv_dict c on a.group_id = c.group_id and a.hos_id = c.hos_id and a.copy_code = c.copy_code
				and a.inv_id = c.inv_id and a.inv_no = c.inv_no 
			left join mat_type_dict mtd on c.group_id = mtd.group_id
      			and c.hos_id = mtd.hos_id and c.copy_code = mtd.copy_code
      			and c.mat_type_id=mtd.mat_type_id and c.mat_type_no=mtd.mat_type_no
		    <!-- join V_USER_DATA_PERM vu on vu.group_id=mtd.group_id and vu.hos_id=mtd.hos_id and vu.copy_code=mtd.copy_code
           		 and vu.table_code='MAT_TYPE_DICT' and vu.is_read=1 and vu.is_write=1 
           		 and vu.perm_code= to_char(mtd.mat_type_id)
		    	 and vu.user_id=#{user_id} -->
			left join hos_unit d on c.group_id = d.group_id
				and c.hos_id = d.hos_id
				and c.unit_code = d.unit_code 
				and d.is_stop = 0
			left join hos_sup_dict e on a.group_id = e.group_id
				and a.hos_id = e.hos_id
				and a.sup_id = e.sup_id
				and a.sup_no = e.sup_no 
			left join hos_dept_dict f on a.group_id = f.group_id
				and a.hos_id = f.hos_id
				and a.app_dept_id = f.dept_id
				and a.app_dept_no = f.dept_no
			left join ass_sup_attr asa on e.group_id = asa.group_id and e.hos_id=asa.hos_id
     			and e.sup_id=asa.sup_id and asa.is_stop=0 
     		<!-- left join mat_ven_cert_detail mv on a.group_id=mv.group_id and a.hos_id= mv.hos_id
     			and a.copy_code=mv.copy_code and e.sup_id=mv.sup_id
     			and mv.type_id=3  -->
			<where>
			to_char(mtd.mat_type_id) in (select  vu.perm_code from V_USER_DATA_PERM vu 
										where vu.group_id=#{group_id} and vu.hos_id=#{hos_id} and vu.copy_code=#{copy_code}
							           		 and vu.table_code='MAT_TYPE_DICT' and vu.is_read=1 and vu.is_write=1 
									    	 and vu.user_id=#{user_id}
									    	 )
				<if test="group_id != null and group_id !=''">
			  		and a.group_id = #{group_id,jdbcType=INTEGER}
			  	</if>
			  	<if test="hos_id != null and hos_id !=''">
			  		and a.hos_id = #{hos_id,jdbcType=INTEGER}
			  	</if>
			  	<if test="copy_code != null and copy_code !=''">
			  		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			  	</if>
			  	and a.is_closed != 1
			  	--and a.amount != nvl(b.order_amount, 0)
			  	and <![CDATA[ a.amount > nvl(b.order_amount, 0) ]]>
			  	and b.state = 2
			  	<if test="begin_date != null and begin_date != '' and end_date != null and end_date != '' ">
					AND b.make_date between to_date(#{begin_date},'yyyy/MM/dd') and to_date(#{end_date},'yyyy/MM/dd')
				</if> 
				<if test="pur_hos_id != null and pur_hos_id != '' ">
					AND b.pur_hos_id = #{pur_hos_id,jdbcType=INTEGER}
				</if>
				<if test="req_hos_id != null and req_hos_id != '' ">
					AND b.req_hos_id = #{req_hos_id,jdbcType=INTEGER}
				</if>
				<if test="pay_hos_id != null and pay_hos_id != '' ">
					AND b.pay_hos_id = #{pay_hos_id,jdbcType=INTEGER}
				</if>
				<if test="brif != null and brif != '' ">
					AND b.brif like '%${brif}%'
				</if>	
				<if test="is_dir != null and is_dir != ''">
					and b.is_dir  =  #{is_dir,jdbcType=INTEGER}
				</if>
				<if test="is_com != null and is_com != ''">
					and c.is_com  =  #{is_com,jdbcType=INTEGER}
				</if>
				<if test="dir_dept_id != null and dir_dept_id != ''">
					and b.dir_dept_id  =  #{dir_dept_id,jdbcType=INTEGER}
				</if>
				<if test="sup_id != null and sup_id != ''">
					and a.sup_id  =  #{sup_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					and b.store_id  =  #{store_id,jdbcType=INTEGER}
				</if>
			</where>
			order by a.pur_detail_id,c.inv_code
			
	</select>
	
	<select id="queryPurIds" parameterType="java.util.Map" resultType="String">
		with rela_tmp as (
        	select a.group_id, a.hos_id, a.copy_code, a.pur_id, a.pur_detail_id, a.pur_amount, b.order_amount
        	from ( 
        		select distinct group_id, hos_id, copy_code, pur_id, pur_detail_id , sum(nvl(amount, 0)) as pur_amount
          		from mat_pur_detail
          		<where>
		          	<if test="group_id !=null and group_id !='' ">
				    	and group_id = #{group_id,jdbcType=INTEGER}
				    </if>
				    <if test="hos_id !=null and hos_id !='' ">
				      	and hos_id = #{hos_id,jdbcType=INTEGER}
				    </if>
				    <if test="copy_code !=null and copy_code !='' ">
				      	and copy_code = #{copy_code,jdbcType=VARCHAR}
				    </if>
		        </where>
          		group by group_id, hos_id, copy_code, pur_id, pur_detail_id
        	) a left join (
            	select distinct group_id, hos_id, copy_code, pur_id, pur_detail_id , sum(order_amount) as order_amount
            	from mat_pur_order_rela
            	<where>
		          	<if test="group_id !=null and group_id !='' ">
				    	and group_id = #{group_id,jdbcType=INTEGER}
				    </if>
				    <if test="hos_id !=null and hos_id !='' ">
				      	and hos_id = #{hos_id,jdbcType=INTEGER}
				    </if>
				    <if test="copy_code !=null and copy_code !='' ">
				      	and copy_code = #{copy_code,jdbcType=VARCHAR}
				    </if>
		        </where>
            	group by group_id, hos_id, copy_code, pur_id, pur_detail_id
          ) b on a.group_id = b.group_id
		        and a.hos_id = b.hos_id
		        and a.copy_code = b.copy_code
		        and a.pur_id = b.pur_id
		        and a.pur_detail_id = b.pur_detail_id 
      ), r_tmp as (
        	select aa.group_id, aa.hos_id, aa.copy_code, aa.pur_id, nvl(aa.countnum, 0) as countnum
          		, nvl(bb.equalnum, 0) as equalnum, nvl(cc.zeronum, 0) as zeronum
        	from (
	          	select group_id, hos_id, copy_code, pur_id, count(0) as countnum
	          	from rela_tmp
	          	group by group_id, hos_id, copy_code, pur_id
        	) aa
        	left join (
          		select group_id, hos_id, copy_code, pur_id, count(0) as equalnum
          		from rela_tmp
          		where <![CDATA[ nvl(pur_amount,0) <= nvl(order_amount,0) ]]>
          		group by group_id, hos_id, copy_code, pur_id
        	) bb on aa.group_id = bb.group_id
        		and aa.hos_id = bb.hos_id
        		and aa.copy_code = bb.copy_code
        		and aa.pur_id = bb.pur_id 
          left join (
            	select group_id, hos_id, copy_code, pur_id, count(0) as zeronum
            	from rela_tmp
            	where nvl(order_amount, 0) = 0
            	group by group_id, hos_id, copy_code, pur_id
          ) cc on aa.group_id = cc.group_id
        		and aa.hos_id = cc.hos_id
        		and aa.copy_code = cc.copy_code
        		and aa.pur_id = cc.pur_id 
      )
		select to_char(wm_concat(to_char(rt.pur_id)))
		from r_tmp rt 
		left join mat_pur_main mpm on rt.group_id=mpm.group_id and rt.hos_id=mpm.hos_id and rt.copy_code=mpm.copy_code and rt.pur_id=mpm.pur_id
		<where>
			<if test="whereSql !=null and whereSql !='' ">
				${whereSql}
			</if>
			<if test="state != null and state !='' ">
				and mpm.state = #{state}
			</if>
		</where>
		
		<!-- with pur_tmp as (
			select distinct group_id,hos_id,copy_code,pur_id,sum(amount) pur_amount
     		from  mat_pur_detail 
     		<where>
				<if test="group_id != null and group_id !='' "> 
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id !='' "> 
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code !='' "> 
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
			</where>
			group by group_id,hos_id,copy_code,pur_id
		),o_tmp as (
			select group_id,hos_id,copy_code,pur_id,sum(order_amount) pur_amount 
			from mat_pur_order_rela
			<where>
				<if test="group_id != null and group_id !='' "> 
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id !='' "> 
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code !='' "> 
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="flag ==1">
					<if test="order_id!=null and order_id !=''">
						and order_id = #{order_id,jdbcType=INTEGER}
					</if>
				</if>
			</where>
			group by group_id,hos_id,copy_code,pur_id
		)
		
		select to_char(wm_concat(to_char(ot.pur_id)))
		from o_tmp  ot
		left join pur_tmp pt on ot.group_id=pt.group_id and ot.hos_id=pt.hos_id 
			and ot.copy_code=pt.copy_code and ot.pur_id =pt.pur_id
		left join mat_pur_main mpm on pt.group_id = mpm.group_id and pt.hos_id = mpm.hos_id
		    and pt.copy_code = mpm.copy_code and pt.pur_id = mpm.pur_id
		<where>
			<if test="whereSql !=null and whereSql !='' ">
				${whereSql}
			</if>
			<if test="state != null and state !='' ">
				and mpm.state = #{state}
			</if>
		</where> -->
	</select>
	
	<!-- 更新采购的状态 -->
	<select id="updatePurStates" parameterType="java.util.Map">
		update mat_pur_main set state = #{state,jdbcType=INTEGER}
		<where>
			<if test="group_id != null and group_id !='' "> 
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' "> 
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' "> 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="purIds != null and purIds !='' "> 
				and pur_id in (${purIds})
			</if>
		</where>
	</select>
	<!-- 获得删除的采购单 -->
	<select id="queryDeleteOldIds" parameterType="java.util.Map" resultType="String">
		select  to_char(wm_concat(to_char(pur_id))) 
		from mat_pur_order_rela
		<where>
			<if test="group_id != null and group_id !='' "> 
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' "> 
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' "> 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="order_id != null and order_id !='' "> 
				and order_id = #{order_id,jdbcType=INTEGER}
			</if>
			<if test="purNewIds != null and purNewIds !='' "> 
				and pur_id not in (${purNewIds})
			</if>
		</where>
	</select>
	
	<!-- 获得删除的pur_id -->
	<select id="queryMatPurId" parameterType="java.util.Map" resultType="String">
		select to_char(wm_concat(to_char(pur_id))) 
		from (
			select distinct pur_id
      		from mat_pur_order_rela 
      		<where>
      			<if test="group_id != null and group_id !='' "> 
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id !='' "> 
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code !='' "> 
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="order_ids != null and order_ids !='' "> 
					and order_id in (${order_ids})
				</if>
      		</where>
		)
	</select>
	
	<!-- 查明细 根据ID -->
	<select id="queryOrderDetail" parameterType="java.util.Map" resultType="java.util.Map">
		select distinct 
			mdd.group_id, 
			mdd.hos_id,
			mdd.copy_code,
			mid.bid_code,
			mdd.order_id,
			mdd.order_detail_id,
			mdd.inv_no,
		    mdd.inv_id,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			mid.unit_code,
			hu.unit_name,
			mdd.pack_code,
			hp.pack_name,
			mdd.num,
			mdd.amount,
			nvl(mdd.price, 0) as price,
			nvl(mdd.amount, 0) * nvl(mdd.price, 0) as amount_money,
			mdd.num_exchange, hfd.fac_name, mdd.memo, f.order_rela,
			nvl(a_in.in_amount, 0) as already_amount,
			hsd.store_id,hsd.store_no,hsd.store_code,hsd.store_name,mdd.line_state
		from mat_order_detail mdd
		left join hos_store_dict hsd on mdd.group_id=hsd.group_id and mdd.hos_id=hsd.hos_id
			and mdd.store_id=hsd.store_id and mdd.store_no=hsd.store_no
		left join mat_inv_dict mid on mdd.group_id = mid.group_id
			and mdd.hos_id = mid.hos_id
			and mdd.copy_code = mid.copy_code
			and mdd.inv_no = mid.inv_no
			and mdd.inv_id = mid.inv_id
		left join hos_unit hu on hu.group_id = mid.group_id
			and hu.hos_id = mid.hos_id and hu.unit_code = mid.unit_code
			and hu.is_stop = 0
		left join hos_package hp on hp.group_id = mdd.group_id
			and hp.hos_id = mdd.hos_id and hp.pack_code = mdd.pack_code 
			and hp.is_stop = 0
		left join hos_fac_dict hfd on mdd.group_id=hfd.group_id
			and mdd.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no= hfd.fac_no
		left join(
			select group_id,hos_id,copy_code,order_id,order_detail_id,sum(in_amount) in_amount
			from (
				select group_id,hos_id,to_char(copy_code) copy_code,order_id,order_detail_id,sum(nvl(in_amount,0)) in_amount
				from mat_in_order_rela 
	         	<where>
	         		<if test="group_id != null and group_id != ''">
						and group_id =#{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id != null and hos_id != ''">
						and hos_id =#{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code != ''">
						and copy_code =#{copy_code,jdbcType=VARCHAR}
					</if>
	         	</where> 
	         	group by group_id,hos_id,copy_code,order_id,order_detail_id
	         	union all
	         	select group_id,hos_id,to_char(copy_code) copy_code,order_id,order_detail_id,sum(nvl(in_amount,0)) in_amount 
	         	from mat_affi_in_order_rela 
	         	<where>
	         		<if test="group_id != null and group_id != ''">
						and group_id =#{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id != null and hos_id != ''">
						and hos_id =#{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code != ''">
						and copy_code =#{copy_code,jdbcType=VARCHAR}
					</if>
	         	</where> 
	         	group by group_id,hos_id,copy_code,order_id,order_detail_id
	         )	
	         group by group_id,hos_id,copy_code,order_id,order_detail_id
	   ) a_in on mdd.group_id = a_in.group_id and mdd.hos_id=a_in.hos_id 
	   		and mdd.copy_code= a_in.copy_code and mdd.order_id = a_in.order_id and mdd.order_detail_id = a_in.order_detail_id
	   left join (
			select order_detail_id,
			'['||to_char(wm_concat('{"pur_id":'||pur_id||',"pur_detail_id":'||pur_detail_id||',"pur_amount":'||pur_amount||',"order_amount":'||order_amount||'}'))||']'
			order_rela
			from mat_pur_order_rela
			where group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and order_id = #{order_id,jdbcType=INTEGER}
			group by order_detail_id
		)f on mdd.order_detail_id = f.order_detail_id
       <where>
       		<if test="group_id != null and group_id != ''">
				and mdd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and mdd.hos_id = #{hos_id,jdbcType=INTEGER} 
			</if>
			<if test="copy_code != null and copy_code != ''">
				and mdd.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="order_id != null and order_id != ''">
				and mdd.order_id = #{order_id,jdbcType=INTEGER}
			</if>
			<if test="order_code != null and order_code != ''">
				and mdd.order_code = #{order_code,jdbcType=VARCHAR}
			</if>
			<if test="order_detail_id != null and order_detail_id != ''">
				and mdd.order_detail_id = #{order_detail_id,jdbcType=INTEGER}
			</if>
       </where>
		order by mdd.order_id,mdd.order_detail_id asc
	</select>
	
	<!--汇总采购单的明细数据  -->
	<select id="queryMatPurDetailCollect" parameterType="java.util.List" resultType="java.util.Map">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.pur_id != null and item.pur_id != ''">
						#{item.pur_id,jdbcType=INTEGER} as pur_id,
					</if>
					<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
						#{item.pur_detail_id,jdbcType=INTEGER} as pur_detail_id,
					</if>
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.store_id != null or item.store_id != ''">
						#{item.store_id,jdbcType=INTEGER} as store_id,
					</if>
					<if test="item.store_no != null or item.store_no != ''">
						#{item.store_no,jdbcType=INTEGER} as store_no,
					</if>
					<if test="item.price != null or item.price != ''">
						#{item.price,jdbcType=INTEGER} as price,
					</if>
					<if test="item.amount != null or item.amount != ''">
						#{item.amount,jdbcType=INTEGER} as order_amount, 
					</if>
					<if test="item.pur_amount != null or item.pur_amount != ''">
						#{item.pur_amount,jdbcType=INTEGER} as pur_amount,
					</if>
					<if test="item.num != null or item.num != ''">
						#{item.num,jdbcType=INTEGER} as num,
					</if>
					<if test="item.num_exchange != null or item.num_exchange != ''">
						#{item.num_exchange,jdbcType=INTEGER} as num_exchange,
					</if>
					<if test="item.pack_code != null or item.pack_code != ''">
						#{item.pack_code,jdbcType=INTEGER} as pack_code,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		),sum_list as(
		     select  group_id,hos_id,copy_code,inv_id,inv_no,store_id,store_no,price,num,num_exchange,pack_code,sum(nvl(order_amount,0)) order_amount 
		     from list_temp
		     group by group_id,hos_id,copy_code,inv_id,inv_no,store_id,store_no,price,num,num_exchange,pack_code
		) 
		select sum_list.group_id,
		      sum_list.hos_id,
		      sum_list.copy_code,
		      sum_list.inv_id,
		      sum_list.inv_no,
		      sum_list.store_id,
		      sum_list.store_no,
		      sum_list.pack_code,
		      sum_list.num,
		      sum_list.num_exchange,
		      nvl(sum_list.order_amount,0) as amount,
		      nvl(sum_list.price,0) as price,
		      nvl(sum_list.order_amount,0)*nvl(mid.plan_price,0) as amount_money,
		      rela.pur_rela
		    from sum_list sum_list
		    left join mat_inv_dict mid on sum_list.group_id = mid.group_id
		      and sum_list.hos_id = mid.hos_id
		      and sum_list.copy_code = mid.copy_code
		      and sum_list.inv_id = mid.inv_id
		      and sum_list.inv_no = mid.inv_no
		    left join (
		    	select inv_id,inv_no, '['||to_char(wm_concat('{"pur_id":'||pur_id||',"pur_detail_id":'||pur_detail_id||',"inv_id":'||inv_id||',"pur_amount":'||pur_amount||',"order_amount":'||order_amount||'}'))||']' pur_rela 
		        from list_temp
		        group by inv_id,inv_no
		    ) rela on sum_list.inv_id = rela.inv_id 
		    	and sum_list.inv_no = rela.inv_no
		    order by mid.inv_code 
		</select>
		
		<!-- 用来判断是否是省平台材料 -->
		<select id="queryMatInvRela" parameterType="java.util.Map" resultType="int">
			SELECT  count(*)
             
        FROM ZJ_INV_MAP
        		<where>
			   group_id = #{group_id,jdbcType=INTEGER}  
	    	   and hos_id = #{hos_id,jdbcType=INTEGER} 
		       and copy_code = #{copy_code,jdbcType=VARCHAR}  
 			   <if test="inv_id != null and inv_id != ''">
		       	 and inv_id = #{inv_id,jdbcType=INTEGER}
		       </if>
		</where>
		</select>
</mapper>

