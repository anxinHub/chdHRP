<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.advice.MatRefStoreDeptMapper">
	
	<resultMap id="refStoreDept" type="com.chd.hrp.mat.entity.MatRefStoreDept">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="store_id" column="store_id"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	</resultMap>
	
	<insert id="addMatRefStoreDept" useGeneratedKeys="true" >
	
		INSERT INTO MAT_REF_STORE_DEPT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		store_id
		,
		dept_id
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{store_id,jdbcType=INTEGER}
		,
		#{dept_id,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatchMatRefStoreDept" parameterType="java.util.List" >
	
		INSERT INTO MAT_REF_STORE_DEPT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		store_id
		,
		dept_id
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.store_id,jdbcType=INTEGER}
				,
				#{item.dept_id,jdbcType=INTEGER}
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMatRefStoreDept" parameterType="java.util.Map">
	
		UPDATE MAT_REF_STORE_DEPT SET
		dept_id = #{dept_id,jdbcType=VARCHAR}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
store_id =#{store_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMatRefStoreDept" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE MAT_REF_STORE_DEPT SET
			dept_id = #{item.dept_id},jdbcType=VARCHAR}
			
			WHERE 
			group_id = #{item.group_id},jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id},jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code},jdbcType=VARCHAR}
			 and 
			store_id = #{item.store_id},jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatRefStoreDept" parameterType="java.util.Map">
	
		DELETE FROM MAT_REF_STORE_DEPT WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		store_id = #{store_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMatRefStoreDept" parameterType="java.util.List">
		DELETE FROM MAT_REF_STORE_DEPT WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				store_id = #{item.store_id,jdbcType=INTEGER}
				and 
				dept_id = #{item.dept_id,jdbcType=INTEGER}	
			</foreach>
	
	</delete>
	<select id="queryMatRefStoreDept" parameterType="java.util.Map" resultMap="refStoreDept" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		store_id,
		dept_id
		FROM MAT_REF_STORE_DEPT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryMatRefStoreDeptByStore" parameterType="java.util.Map" resultMap="refStoreDept" >
	
		SELECT 
		mrsd.group_id,
		mrsd.hos_id,
		mrsd.copy_code,
		mrsd.store_id,
		mrsd.dept_id,
		hdd.dept_code,
		hdd.dept_name
		FROM MAT_REF_STORE_DEPT mrsd
		left join hos_dept_dict hdd on
		mrsd.group_id = hdd.group_id
		and mrsd.hos_id = hdd.hos_id
		and mrsd.dept_id = hdd.dept_id
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mrsd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mrsd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mrsd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND mrsd.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND mrsd.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by mrsd.group_id asc
	</select>
	
	<select id="queryMatRefStoreDeptByCode" resultType="com.chd.hrp.mat.entity.MatRefStoreDept" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		store_id,
		dept_id
		FROM MAT_REF_STORE_DEPT 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		store_id = #{store_id,jdbcType=INTEGER} and
		dept_id = #{dept_id,jdbcType=INTEGER}
	
	</select>
	<select id="queryMatRefStoreDeptByUniqueness" resultType="com.chd.hrp.mat.entity.MatRefStoreDept" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		store_id,
		dept_id
		FROM MAT_REF_STORE_DEPT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>

</mapper>

