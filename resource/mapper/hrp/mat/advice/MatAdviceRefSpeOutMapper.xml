<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.advice.MatAdviceRefSpeOutMapper">
	
	<resultMap id="adviceRefSpeOut" type="com.chd.hrp.mat.entity.MatAdviceRefSpeOut">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="receive_id" column="receive_id"/>
	<result property="out_id" column="out_id"/>
	<result property="out_detail_id" column="out_detail_id"/>
	</resultMap>
	
	<insert id="addMatAdviceRefSpeOut" useGeneratedKeys="true" >
	
		INSERT INTO MAT_ADVICE_REF_Spe_OUT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		receive_id
		,
		out_id
		,
		out_detail_id
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{receive_id,jdbcType=INTEGER}
		,
		#{out_id,jdbcType=INTEGER}
		,
		#{out_detail_id,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatchMatAdviceRefSpeOut" parameterType="java.util.List" >
	
		INSERT INTO MAT_ADVICE_REF_Spe_OUT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		receive_id
		,
		out_id
		,
		out_detail_id
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.receive_id,jdbcType=INTEGER}
			,
			#{item.out_id,jdbcType=INTEGER}
			,
			#{item.out_detail_id,jdbcType=INTEGER}
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMatAdviceRefSpeOut" parameterType="java.util.Map">
	
		UPDATE MAT_ADVICE_REF_Spe_OUT SET
		out_id = #{out_id,jdbcType=VARCHAR}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
receive_id =#{receive_id,jdbcType=INTEGER}
		and
		out_detail_id = #{out_detail_id,jdbcType=INTEGER}
	
	</update>
	<update id="updateBatchMatAdviceRefSpeOut" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE MAT_ADVICE_REF_Spe_OUT SET
			out_id = #{item.out_id},jdbcType=VARCHAR}
			
			WHERE 
			group_id = #{item.group_id},jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id},jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code},jdbcType=VARCHAR}
			 and 
			receive_id = #{item.receive_id},jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatAdviceRefSpeOut" parameterType="java.util.Map">
	
		DELETE FROM MAT_ADVICE_REF_Spe_OUT WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		receive_id = #{receive_id,jdbcType=INTEGER} and
		out_detail_id = #{out_detail_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteBatchMatAdviceRefSpeOut" parameterType="java.util.List">
		DELETE FROM MAT_ADVICE_REF_Spe_OUT WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id},jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id},jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code},jdbcType=VARCHAR}
				 and 
				receive_id = #{item.receive_id},jdbcType=INTEGER}
				and 
				out_id = #{item.out_id},jdbcType=INTEGER}	
				and
				out_detail_id = #{item.out_detail_id},jdbcType=INTEGER}
			</foreach>
	
	</delete>
	<select id="queryMatAdviceRefSpeOut" parameterType="java.util.Map" resultMap="adviceRefSpeOut" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		receive_id,
		out_id,
		out_detail_id
		FROM MAT_ADVICE_REF_Spe_OUT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="receive_id != null and receive_id != ''">
		AND receive_id = #{receive_id,jdbcType=INTEGER}
		</if>
		<if test="out_id != null and out_id != ''">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_detail_id != null and out_detail_id != ''">
		AND out_detail_id = #{out_detail_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryMatAdviceRefSpeOutByCode" resultType="com.chd.hrp.mat.entity.MatAdviceRefSpeOut" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		receive_id,
		out_id,
		out_detail_id
		FROM MAT_ADVICE_REF_Spe_OUT 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		receive_id = #{receive_id,jdbcType=INTEGER} and
		out_id = #{out_id,jdbcType=INTEGER} and
		out_detail_id = #{out_detail_id,jdbcType=INTEGER}
	
	</select>
	<select id="queryMatAdviceRefSpeOutByUniqueness" resultType="com.chd.hrp.mat.entity.MatAdviceRefSpeOut" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		receive_id,
		out_id,
		out_detail_id
		FROM MAT_ADVICE_REF_Spe_OUT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="receive_id != null and receive_id != ''">
		AND receive_id = #{receive_id,jdbcType=INTEGER}
		</if>
		<if test="out_id != null and out_id != ''">
		AND out_id = #{out_id,jdbcType=INTEGER}
		</if>
		<if test="out_detail_id != null and out_detail_id != ''">
		AND out_detail_id = #{out_detail_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>

</mapper>

