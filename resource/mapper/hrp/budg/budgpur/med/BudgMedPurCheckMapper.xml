<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgpur.medpur.BudgMedPurCheckMapper">
	
	<resultMap id="budgMedPurCheck" type="com.chd.hrp.budg.entity.BudgMedPurCheck">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="check_code" column="check_code"/>
	<result property="check_type" column="check_type"/>
	<result property="remark" column="remark"/>
	<result property="maker" column="maker"/>
	<result property="make_data" column="make_data"/>
	<result property="checker" column="checker"/>
	<result property="check_data" column="check_data"/>
	<result property="issue_data" column="issue_data"/>
	<result property="bc_state" column="bc_state"/>
	</resultMap>
		
	<resultMap id="budgMedPurCheckMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="check_code" column="check_code"/>
	<result property="check_type" column="check_type"/>
	<result property="remark" column="remark"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_data" column="make_data"/>
	<result property="checker" column="checker"/>
	<result property="check_name" column="check_name"/>
	<result property="check_data" column="check_data"/>
	<result property="issue_data" column="issue_data"/>
	<result property="bc_state" column="bc_state"/>
	</resultMap>
	
	<!-- 查询业务数据用Map -->
	<resultMap id="dateMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
    <result property="year" column="year"/>
    <result property="med_type_id" column="med_type_id"/>
    <result property="med_type_code" column="med_type_code"/>
    <result property="med_type_name" column="med_type_name"/>
    <result property="dept_id" column="dept_id"/>
    <result property="dept_code" column="dept_code"/>
   	<result property="dept_name" column="dept_name"/>
    <result property="month1" column="month1"/>
    <result property="month2" column="month2"/>
    <result property="month3" column="month3"/>
    <result property="month4" column="month4"/>
    <result property="month5" column="month5"/>
    <result property="month6" column="month6"/>
    <result property="month7" column="month7"/>
    <result property="month8" column="month8"/>
    <result property="month9" column="month9"/>
    <result property="month10" column="month10"/>
    <result property="month11" column="month11"/>
    <result property="month12" column="month12"/>
    <result property="year_sum" column="year_sum"/>
    
    <result property="month1Pre" column="month1Pre"/>
    <result property="month2Pre" column="month2Pre"/>
    <result property="month3Pre" column="month3Pre"/>
    <result property="month4Pre" column="month4Pre"/>
    <result property="month5Pre" column="month5Pre"/>
    <result property="month6Pre" column="month6Pre"/>
    <result property="month7Pre" column="month7Pre"/>
    <result property="month8Pre" column="month8Pre"/>
    <result property="month9Pre" column="month9Pre"/>
    <result property="month10Pre" column="month10Pre"/>
    <result property="month11Pre" column="month11Pre"/>
    <result property="month12Pre" column="month12Pre"/>
    <result property="year_sumPre" column="year_sumPre"/>
    
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_PUR_CHECK (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			check_code
			,
			check_type
			,
			remark
			,
			maker
			,
			make_data
			,
			checker
			,
			check_data
			,
			issue_data
			,
			bc_state
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{check_code,jdbcType=VARCHAR}
			,
			#{check_type,jdbcType=VARCHAR}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{maker,jdbcType=INTEGER}
			,
			#{make_data,jdbcType=DATE}
			,
			#{checker,jdbcType=INTEGER}
			,
			#{check_data,jdbcType=DATE}
			,
			#{issue_data,jdbcType=DATE}
			,
			#{bc_state,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_PUR_CHECK (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			check_code
			,
			check_type
			,
			remark
			,
			maker
			,
			make_data
			,
			checker
			,
			check_data
			,
			issue_data
			,
			bc_state
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.check_code,jdbcType=VARCHAR}
				,
				#{item.check_type,jdbcType=VARCHAR}
				,
				#{item.remark,jdbcType=VARCHAR}
				,
				#{item.maker,jdbcType=INTEGER}
				,
				#{item.make_data,jdbcType=DATE}
				,
				#{item.checker,jdbcType=INTEGER}
				,
				#{item.check_data,jdbcType=DATE}
				,
				#{item.issue_data,jdbcType=DATE}
				,
				#{item.bc_state,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_MED_PUR_CHECK  set
			check_type = #{check_type,jdbcType=VARCHAR}
			,
			remark = #{remark,jdbcType=VARCHAR}
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND check_code = #{check_code,jdbcType=VARCHAR}
	</update>
	
	<!-- 发送 、 召回 -->
	<update id="updateBc_state" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_PUR_CHECK set
				bc_state = #{item.bc_state,jdbcType=VARCHAR} 
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	<!-- 审核、消审 -->
	<update id="auditOrUnAudit" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_PUR_CHECK set
				bc_state = #{item.bc_state,jdbcType=VARCHAR} ,
				checker = #{item.checker,jdbcType=INTEGER},
				check_data = #{item.check_data,jdbcType=DATE}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 预算下达 、 取消预算下达  -->
	<update id="cancelIssueOrIssue" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_PUR_CHECK set
				bc_state = #{item.bc_state,jdbcType=VARCHAR} ,
				issue_data = #{item.issue_data,jdbcType=DATE}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_PUR_CHECK set
				check_type = #{item.check_type,jdbcType=VARCHAR}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_MED_PUR_CHECK 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND check_code = #{check_code,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_MED_PUR_CHECK 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			    group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>
				<if test="item.check_code != null and item.check_code != ''">
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgMedPurCheckMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.check_code,
			a.check_type,
			a.remark,
			a.maker,
			b.emp_name  maker_name ,
			a.make_data,
			a.checker,
			c.emp_name  check_name ,
			a.check_data,
			a.issue_data,
			a.bc_state
		FROM BUDG_MED_PUR_CHECK a
		left join HOS_EMP_DICT b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.emp_id
				and b.is_stop = 0
		left join HOS_EMP_DICT c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.checker = c.emp_id
				and c.is_stop = 0
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="check_code != null and check_code != ''">
			AND a.check_code = #{check_code,jdbcType=VARCHAR}
			</if>
			<if test="check_type != null and check_type != ''">
			AND a.check_type = #{check_type,jdbcType=VARCHAR}
			</if>
			<if test="bc_state != null and bc_state != ''">
			AND a.bc_state = #{bc_state,jdbcType=VARCHAR}
			</if>
			
			<!-- 结转时查询条件 -->
			<if test="is_state != null and is_state != '' ">
				AND a.bc_state not in (#{is_state,jdbcType=VARCHAR})
			</if>
		order by a.check_code asc
	</select>
	<select id="queryByCode" resultMap="budgMedPurCheckMap"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.check_code,
			a.check_type,
			a.remark,
			a.maker,
			b.emp_name  maker_name ,
			a.make_data ,
			a.checker,
			c.emp_name check_name ,
			a.check_data ,
			a.issue_data, 
		   	a.bc_state
		FROM BUDG_MED_PUR_CHECK a
		left join HOS_EMP_DICT b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.emp_id
				and b.is_stop = 0
		left join HOS_EMP_DICT c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.checker = c.emp_id
				and c.is_stop = 0
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   
			and a.hos_id = #{hos_id,jdbcType=INTEGER}   
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}   
			and a.budg_year = #{budg_year,jdbcType=VARCHAR} 
			and a.check_code = #{check_code,jdbcType=VARCHAR} 
	</select>
	<select id="queryByUniqueness" resultMap="budgMedPurCheck"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		check_code,
		check_type,
		remark,
		maker,
		make_data,
		checker,
		check_data,
		issue_data,
		bc_state
		FROM BUDG_MED_PUR_CHECK 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="check_code != null and check_code != ''">
		AND check_code = #{check_code,jdbcType=VARCHAR}
		</if>
		<if test="check_type != null and check_type != ''">
		AND check_type = #{check_type,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_data != null and make_data != ''">
		AND make_data = #{make_data,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_data != null and check_data != ''">
		AND check_data = #{check_data,jdbcType=DATE}
		</if>
		<if test="issue_data != null and issue_data != ''">
		AND issue_data = #{issue_data,jdbcType=DATE}
		</if>
		<if test="bc_state != null and bc_state != ''">
		AND bc_state = #{bc_state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryExists" resultMap="budgMedPurCheck"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			check_code,
			check_type,
			remark,
			maker,
			make_data,
			checker,
			check_data,
			issue_data,
			bc_state
		FROM BUDG_MED_PUR_CHECK 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="check_code != null and check_code != ''">
		AND check_code = #{check_code,jdbcType=VARCHAR}
		</if>
		<if test="check_type != null and check_type != ''">
		AND check_type = #{check_type,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_data != null and make_data != ''">
		AND make_data = #{make_data,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_data != null and check_data != ''">
		AND check_data = #{check_data,jdbcType=DATE}
		</if>
		<if test="issue_data != null and issue_data != ''">
		AND issue_data = #{issue_data,jdbcType=DATE}
		</if>
		<if test="bc_state != null and bc_state != ''">
		AND bc_state = #{bc_state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	

	
	<!--查询   初始审核 （未下达） -->
	<select id="queryBudgMedPur" resultMap="dateMap" parameterType="java.util.Map">
		 with temp as(
		 	select 
			 	a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.med_type_id , 
			 	b.med_type_code ,
			 	sum(case when a.month='01' then  nvl(a.pur_budg,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then  nvl(a.pur_budg,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then  nvl(a.pur_budg,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then  nvl(a.pur_budg,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then  nvl(a.pur_budg,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then  nvl(a.pur_budg,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then  nvl(a.pur_budg,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then  nvl(a.pur_budg,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then  nvl(a.pur_budg,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then  nvl(a.pur_budg,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then  nvl(a.pur_budg,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then  nvl(a.pur_budg,0) else 0 end ) as month12 ,
	     		sum(nvl(a.pur_budg,0)) year_sum
	     	from  BUDG_MED_PUR a
	     	left join med_type_dict b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.med_type_id = b.med_type_id
	     			and b.is_stop = 0
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{budg_year,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.med_type_id , b.med_type_code
		 )
		select a.group_id ,a.hos_id ,a.copy_code, b.year , a.med_type_id , a.med_type_code , a.med_type_name ,
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 ,
			sum(nvl(b.month4,0)) month4 , sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , 
			sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 , sum(nvl(b.month9,0)) month9 ,
			sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum 
		
		from med_type_dict a
		LEFT join temp b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and b.med_type_code like (a.med_type_code || '%') 
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<!-- AND b.year= #{budg_year,jdbcType=VARCHAR} -->
			and a.is_stop = 0
		group by a.group_id, a.hos_id,  a.copy_code, b.year, a.med_type_id,  a.med_type_code ,a.med_type_name
		order by a.med_type_code
	</select>
	
	<!--查询   初始审核（已下达） -->
	<select id="queryBudgMedPurCopy" resultMap="dateMap" parameterType="java.util.Map">
		with temp as(
			select 
			 	a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.med_type_id ,
			 	b.med_type_code , 
			 	sum(case when a.month='01' then  nvl(a.pur_budg,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then  nvl(a.pur_budg,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then  nvl(a.pur_budg,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then  nvl(a.pur_budg,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then  nvl(a.pur_budg,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then  nvl(a.pur_budg,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then  nvl(a.pur_budg,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then  nvl(a.pur_budg,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then  nvl(a.pur_budg,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then  nvl(a.pur_budg,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then  nvl(a.pur_budg,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then  nvl(a.pur_budg,0) else 0 end ) as month12 ,
	     		sum(nvl(a.pur_budg,0)) year_sum
	     	from  BUDG_MED_PUR_COPY a
	     	left join med_type_dict b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.med_type_id = b.med_type_id
	     			and b.is_stop = 0
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{budg_year,jdbcType=VARCHAR}
				AND a.check_code = #{check_code,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.med_type_id ,b.med_type_code
		) 
		
		select a.group_id ,a.hos_id ,a.copy_code, b.year , a.med_type_id , a.med_type_code , a.med_type_name ,
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 ,
			sum(nvl(b.month4,0)) month4 , sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , 
			sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 , sum(nvl(b.month9,0)) month9 ,
			sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum 
		
		from med_type_dict a
		LEFT join temp b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and b.med_type_code like (a.med_type_code || '%') 
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<!-- AND b.year= #{budg_year,jdbcType=VARCHAR} -->
			and a.is_stop = 0
		group by a.group_id, a.hos_id,  a.copy_code, b.year, a.med_type_id , a.med_type_code , a.med_type_name 
		order by a.med_type_code
	</select>
	
	<!--查询 调整审核 (未下达)-->
	<select id="queryBudgMedPurAdjust" resultMap="dateMap" parameterType="java.util.Map">
		with temp as (
			select
				a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.med_type_id , 
			 	c.med_type_code  ,
				sum(case when a.month='01' then nvl(a.pur_budg,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.pur_budg,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.pur_budg,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.pur_budg,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.pur_budg,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.pur_budg,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.pur_budg,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.pur_budg,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.pur_budg,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.pur_budg,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.pur_budg,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.pur_budg,0) else 0 end ) as month12  ,
				sum(nvl(a.pur_budg,0)) year_sum ,
				sum(case when b.month='01' then nvl(b.pur_budg,0) else 0 end ) as month1Pre,
	     		sum(case when b.month='02' then nvl(b.pur_budg,0) else 0 end ) as month2Pre,
	     		sum(case when b.month='03' then nvl(b.pur_budg,0) else 0 end ) as month3Pre,
	     		sum(case when b.month='04' then nvl(b.pur_budg,0) else 0 end ) as month4Pre,
	     		sum(case when b.month='05' then nvl(b.pur_budg,0) else 0 end ) as month5Pre,
	     		sum(case when b.month='06' then nvl(b.pur_budg,0) else 0 end ) as month6Pre,
	     		sum(case when b.month='07' then nvl(b.pur_budg,0) else 0 end ) as month7Pre,
	     		sum(case when b.month='08' then nvl(b.pur_budg,0) else 0 end ) as month8Pre,
	     		sum(case when b.month='09' then nvl(b.pur_budg,0) else 0 end ) as month9Pre,
	     		sum(case when b.month='10' then nvl(b.pur_budg,0) else 0 end ) as month10Pre,
	     		sum(case when b.month='11' then nvl(b.pur_budg,0) else 0 end ) as month11Pre,
	     		sum(case when b.month='12' then nvl(b.pur_budg,0) else 0 end ) as month12Pre ,
				sum(nvl(b.pur_budg,0)) year_sumPre 
			from  BUDG_MED_PUR a  
			Left join BUDG_MED_PUR_COPY b
	     		on	
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.med_type_id = b.med_type_id
	     	left join med_type_dict c
	     		on
	     			a.group_id = c.group_id
	     			and a.hos_id = c.hos_id
	     			and a.copy_code = c.copy_code
	     			and a.med_type_id = c.med_type_id
	     			and c.is_stop = 0
	 		where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{budg_year,jdbcType=VARCHAR}
				and b.check_code = (select max(check_code) 
											from BUDG_MED_PUR_CHECK
											where group_id = ${group_id} 
											and hos_id = ${hos_id} 
											and copy_code = ${copy_code} 
											and budg_year = ${budg_year}
											and check_code &lt; #{check_code,jdbcType=VARCHAR})
	 		group by a.group_id , a.hos_id , a.copy_code , a.year , a.med_type_id , c.med_type_code  
		)
 		select a.group_id ,a.hos_id ,a.copy_code, b.year , a.med_type_id , a.med_type_code , a.med_type_name , 
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month9 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum , 
			sum(nvl(b.month1Pre,0)) month1Pre , sum(nvl(b.month2Pre,0)) month2Pre , sum(nvl(b.month3,0)) month3Pre , sum(nvl(b.month4Pre,0)) month4Pre ,
			sum(nvl(b.month5Pre,0)) month5Pre , sum(nvl(b.month6Pre,0)) month6Pre , sum(nvl(b.month7,0)) month7Pre , sum(nvl(b.month8Pre,0)) month9Pre ,
			sum(nvl(b.month9Pre,0)) month9Pre , sum(nvl(b.month10Pre,0)) month10Pre , sum(nvl(b.month11,0)) month11Pre , sum(nvl(b.month12Pre,0)) month12Pre ,
			sum(nvl(b.year_sumPre,0)) year_sumPre
		from med_type_dict a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and b.med_type_code like ( a.med_type_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		<!-- 	AND b.year= #{budg_year,jdbcType=VARCHAR} -->
			AND a.is_stop= 0
		group by a.group_id, a.hos_id,  a.copy_code, b.year, a.med_type_id , a.med_type_code , a.med_type_name 
		order by a.med_type_code
	</select>
	
	<!--查询 调整审核(已下达) -->
	<select id="queryBudgMedPurAdjustCopy" resultMap="dateMap" parameterType="java.util.Map">
		with temp as (
			select
				a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.med_type_id ,
			 	c.med_type_code , 
				sum(case when a.month='01' then nvl(a.pur_budg,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.pur_budg,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.pur_budg,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.pur_budg,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.pur_budg,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.pur_budg,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.pur_budg,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.pur_budg,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.pur_budg,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.pur_budg,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.pur_budg,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.pur_budg,0) else 0 end ) as month12  ,
				sum(nvl(a.pur_budg,0)) year_sum ,
				sum(case when b.month='01' then nvl(b.pur_budg,0) else 0 end ) as month1Pre,
	     		sum(case when b.month='02' then nvl(b.pur_budg,0) else 0 end ) as month2Pre,
	     		sum(case when b.month='03' then nvl(b.pur_budg,0) else 0 end ) as month3Pre,
	     		sum(case when b.month='04' then nvl(b.pur_budg,0) else 0 end ) as month4Pre,
	     		sum(case when b.month='05' then nvl(b.pur_budg,0) else 0 end ) as month5Pre,
	     		sum(case when b.month='06' then nvl(b.pur_budg,0) else 0 end ) as month6Pre,
	     		sum(case when b.month='07' then nvl(b.pur_budg,0) else 0 end ) as month7Pre,
	     		sum(case when b.month='08' then nvl(b.pur_budg,0) else 0 end ) as month8Pre,
	     		sum(case when b.month='09' then nvl(b.pur_budg,0) else 0 end ) as month9Pre,
	     		sum(case when b.month='10' then nvl(b.pur_budg,0) else 0 end ) as month10Pre,
	     		sum(case when b.month='11' then nvl(b.pur_budg,0) else 0 end ) as month11Pre,
	     		sum(case when b.month='12' then nvl(b.pur_budg,0) else 0 end ) as month12Pre ,
				sum(nvl(b.pur_budg,0)) year_sumPre
			from  BUDG_MED_PUR_COPY a  
			LEFT join BUDG_MED_PUR_COPY b
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and a.year = b.year
					and a.med_type_id = b.med_type_id
			left join med_type_dict c
	     		on
	     			a.group_id = c.group_id
	     			and a.hos_id = c.hos_id
	     			and a.copy_code = c.copy_code
	     			and a.med_type_id = c.med_type_id
	     			and c.is_stop = 0		
	 		where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{budg_year,jdbcType=VARCHAR}
				AND a.check_code = #{check_code,jdbcType=VARCHAR}
				and b.check_code = (select max(check_code) 
										from BUDG_MED_PUR_CHECK
										where group_id = ${group_id} 
										and hos_id = ${hos_id} 
										and copy_code = ${copy_code} 
										and budg_year = ${budg_year}
										and check_code &lt; #{check_code,jdbcType=VARCHAR}
										)
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.med_type_id , c.med_type_code  
		)
 		select a.group_id ,a.hos_id ,a.copy_code, b.year , a.med_type_id , a.med_type_code , a.med_type_name , 
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month9 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum , 
			sum(nvl(b.month1Pre,0)) month1Pre , sum(nvl(b.month2Pre,0)) month2Pre , sum(nvl(b.month3,0)) month3Pre , sum(nvl(b.month4Pre,0)) month4Pre ,
			sum(nvl(b.month5Pre,0)) month5Pre , sum(nvl(b.month6Pre,0)) month6Pre , sum(nvl(b.month7,0)) month7Pre , sum(nvl(b.month8Pre,0)) month9Pre ,
			sum(nvl(b.month9Pre,0)) month9Pre , sum(nvl(b.month10Pre,0)) month10Pre , sum(nvl(b.month11,0)) month11Pre , sum(nvl(b.month12Pre,0)) month12Pre ,
			sum(nvl(b.year_sumPre,0)) year_sumPre
		from med_type_dict a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and b.med_type_code like ( a.med_type_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<!-- AND b.year= #{budg_year,jdbcType=VARCHAR} -->
			and a.is_stop = 0
<!-- 		用于药品采购预算调整	调整前查看页面使用条件 -->
			<if test="med_type_id != null and med_type_id != ''">
			And a.med_type_id = #{med_type_id,jdbcType=INTEGER}
			</if>
		group by a.group_id, a.hos_id,  a.copy_code, b.year, a.med_type_id , a.med_type_code , a.med_type_name 
		order by a.med_type_code
	
	</select>
	
	<!-- 初始审批  校验数据是否存在  -->
	<select id="queryDateExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) from BUDG_MED_PUR_CHECK
		
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   
		and hos_id = #{hos_id,jdbcType=INTEGER}   
		and copy_code = #{copy_code,jdbcType=VARCHAR}  
		and budg_year = #{budg_year,jdbcType=VARCHAR}   
		and check_type = #{check_type,jdbcType=VARCHAR}
	</select>
	
	<!-- 状态查询  （校验数据专用） -->
	<select id="queryBudgMedPurCheckState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT check_code  FROM BUDG_MED_PUR_CHECK 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="check_code != null and check_code != ''">
			AND check_code in  (${check_code})
			</if>
			<!-- 前台传参    -->
			and bc_state != #{bc_state,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据参数 查询 初始审批单是否已下达   -->
	<select id="queryInitDateExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) from BUDG_MED_PUR_CHECK
		
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   
		and hos_id = #{hos_id,jdbcType=INTEGER}   
		and copy_code = #{copy_code,jdbcType=VARCHAR}  
		and budg_year = #{budg_year,jdbcType=VARCHAR}   
		and check_type = #{check_type,jdbcType=VARCHAR}
		and bc_state = #{bc_state,jdbcType=VARCHAR}
	</select>
	
	
	<!-- 根据参数 查询 是否存在未下达 审批单 -->
	<select id="queryIssueDateExist" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT COUNT(1)  FROM BUDG_MED_PUR_CHECK
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			and bc_state != #{bc_state,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 审批申请单是否已做调整 -->
	<select id="queryIsAdjust" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT COUNT(1)  FROM BUDG_MED_PUR_ADJ
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND last_check_code = #{check_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询最大审批申请单号 -->
	<select id="queryMaxCheckCode" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT max(check_code)  FROM BUDG_MED_PUR_CHECK
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
	</select>
	
	<!-- 修改 预算单据号管理表中 该年度 材料采购预算的最大单号  -->
	<update id="updateMaxNo"   parameterType="java.util.Map">
		update   budg_no_manage set max_no = max_no - 1
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND table_code = #{table_code,jdbcType=VARCHAR}
			AND year = #{budg_year,jdbcType=VARCHAR}
	</update>
	
	<!-- 查询 审批申请单是否已做调整(取消预算下达时使用) -->
	<select id="queryCheckIsAdjust" parameterType="java.util.Map" resultType="java.lang.String" >
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT distinct last_check_code FROM BUDG_MED_PUR_ADJ
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND last_check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 备份 材料采购预算  数据 到 材料采购预算备份 表 BUDG_MED_PUR_COPY   -->
	<insert id="copyData" parameterType="java.util.List" >
    	INSERT INTO   BUDG_MED_PUR_COPY (
             check_code, 
             group_id,
             hos_id,
             copy_code,
             year,
             month,
             med_type_id,
             pur_budg ,
             remark
             
         ) select t.* from(
            <foreach collection="list" item="item" index="index" separator=" union all " >
           select 	
	             #{item.check_code,jdbcType=VARCHAR}  ,
	             group_id,
	             hos_id,
	             copy_code,
	             year,
	             month,
	             med_type_id,
	             pur_budg ,
	             remark
	        from BUDG_MED_PUR
	        where
	             group_id = #{item.group_id,jdbcType=INTEGER}
	             AND hos_id = #{item.hos_id,jdbcType=INTEGER}
	             AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
	             AND year = #{item.budg_year,jdbcType=VARCHAR}
		</foreach>
		)t
	</insert>	
	
	<!-- 删除 材料采购预算  备份数据 -->
	<delete id="deleteCopyData" parameterType="java.util.List">
		DELETE FROM BUDG_MED_PUR_COPY
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				check_code = #{item.check_code,jdbcType=VARCHAR}
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
	</delete>
	
</mapper>