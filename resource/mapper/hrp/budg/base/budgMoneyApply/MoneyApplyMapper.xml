<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.base.budgMoneyApply.MoneyApplyMapper">
	

	<resultMap id="queryAddtMap" type="java.util.Map">
	<result property="type_name" column="type_name"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="kind_name" column="kind_name"/>
	<result property="natur_name" column="natur_name"/>
	<result property="out_name" column="out_name"/>
	<result property="ischeck" column="ischeck"/>
	<result property="isdisable" column="isdisable"/>
	<result property="dept_id" column="dept_id"/>
	</resultMap>
	
	<resultMap id="querytMap" type="java.util.Map">
		<result property="apply_code" column="apply_code"/>
		<result property="apply_date" column="apply_date"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_name" column="dept_name"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_name" column="emp_name"/>
		<result property="proj_id" column="proj_id"/>
		<result property="proj_name" column="proj_name"/>
		<result property="duty_dept_id" column="duty_dept_id"/>
		<result property="duty_dept_name" column="duty_dept_name"/>
		<result property="remark" column="remark"/>
		<result property="apply_amount" column="apply_amount"/>
		<result property="checker" column="checker"/>
		<result property="check_date" column="check_date"/>
		<result property="state_t" column="state_t"/>
	</resultMap>
	
	
	<resultMap id="queryMoneyApplyByPrintTemlateMainMap" type="java.util.Map">
		<result property="apply_code" column="apply_code"/>
		<result property="apply_date" column="apply_date"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_code" column="emp_code"/>
		<result property="emp_name" column="emp_name"/>
		<result property="proj_id" column="proj_id"/>
		<result property="proj_code" column="proj_code"/>
		<result property="proj_name" column="proj_name"/>
		<result property="duty_dept_id" column="duty_dept_id"/>
		<result property="duty_dept_code" column="duty_dept_code"/>
		<result property="duty_dept_name" column="duty_dept_name"/>
		<result property="d_remark" column="d_remark"/>
		<result property="maker" column="maker"/>
		<result property="make_date" column="make_date"/>
		<result property="phone" column="phone"/>
		<result property="apply_amount_sum" column="apply_amount_sum"/>
		<result property="checker" column="checker"/>
		<result property="check_date" column="check_date"/>
		<result property="state" column="state"/>
	</resultMap>
	
	<resultMap id="queryApplyDataForCodeMap" type="java.util.Map">
		<result property="apply_code" column="apply_code"/>
		<result property="apply_date" column="apply_date"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_name" column="dept_name"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_name" column="emp_name"/>
		<result property="proj_id" column="proj_id"/>
		<result property="proj_name" column="proj_name"/>
		<result property="duty_dept_id" column="duty_dept_id"/>
		<result property="duty_dept_name" column="duty_dept_name"/>
		<result property="remark" column="remark"/>
		<result property="apply_amount" column="apply_amount"/>
		<result property="checker" column="checker"/>
		<result property="check_date" column="check_date"/>
		<result property="state_t" column="state_t"/>
		<result property="proj_no" column="proj_no"/>
	</resultMap>
	
	<resultMap id="map" type="java.util.Map">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	<resultMap id="queryChangeNoMap" type="java.util.Map">
		<result property="dept_no" column="dept_no"/>
		<result property="duty_dept_no" column="duty_dept_no"/>
		<result property="proj_no" column="proj_no"/>
		<result property="emp_no" column="emp_no"/>
	</resultMap>
	
	
	<resultMap id="queryMoneyApplyDetByPrintTemlateMap" type="java.util.Map">
		<result property="source_code" column="source_code"/>
		<result property="source_name" column="source_name"/>
		<result property="payment_item_code" column="payment_item_code"/>
		<result property="payment_item_name" column="payment_item_name"/>
		<result property="APPLY_AMOUNT" column="APPLY_AMOUNT"/>
		<result property="M_REMARK" column="M_REMARK"/>
	</resultMap>
	
	<resultMap id="queryBudgetQuotaMap" type="java.util.Map">
		<result property="budg_money" column="budg_money"/>
		<result property="already_apply" column="already_apply"/>
		<result property="already_execute" column="already_execute"/>
	</resultMap>
	
	
	
	<resultMap id="queryUpdatePageMainDataMap" type="java.util.Map">
		<result property="apply_code" column="apply_code"/>
		<result property="apply_date" column="apply_date"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_name" column="emp_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_name" column="dept_name"/>
		<result property="proj_id" column="proj_id"/>
		<result property="proj_name" column="proj_name"/>
		<result property="duty_dept_id" column="duty_dept_id"/>
		<result property="duty_dept_name" column="duty_dept_name"/>
		<result property="remark" column="remark"/>
		<result property="apply_amount" column="apply_amount"/>
		<result property="phone" column="phone"/>
		<result property="maker" column="maker"/>
		<result property="make_date" column="make_date"/>
		<result property="checker" column="checker"/>
		<result property="check_date" column="check_date"/>
		<result property="state_t" column="state_t"/>
	</resultMap>
	
	<resultMap id="queryUpdatePageDetiDataMap" type="java.util.Map">
		<result property="source_id" column="source_id"/>
		<result property="source_name" column="source_name"/>
		<result property="payment_item_id" column="payment_item_id"/>
		<result property="payment_item_name" column="payment_item_name"/>
		<result property="apply_amount_det" column="apply_amount_det"/>
		<result property="remark_det" column="remark_det"/>
		<result property="real_money" column="real_money"/>
		<result property="budg_money" column="budg_money"/>
		<result property="already_apply" column="already_apply"/>
		<result property="already_execute" column="already_execute"/>
	</resultMap>




	<select id="query" parameterType="java.util.Map" resultMap="querytMap" >
		select bua.apply_code,
		       bua.apply_date,
		       bua.dept_id,-- 申请科室
		       hdd.dept_name,
		       bua.emp_id,--申请人
		       he.emp_name,
		       bua.proj_id,--申请项目
		       hpd.proj_name,
		       bua.duty_dept_id,--预算归口科室
		       hdd2.dept_name duty_dept_name,
		       bua.remark,--申请事由
		       bua.apply_amount,--申请金额
		       su.user_name checker,--审核人
		       bua.check_date,--审核日期
		       bua.state_t--状态
		       
		from BUDG_USE_APPLY bua 
		 left join HOS_DEPT_DICT hdd on hdd.group_id = bua.group_id and hdd.hos_id = bua.hos_id and hdd.dept_id = bua.dept_id
		 left join HOS_EMP he on he.group_id = bua.group_id and he.hos_id = bua.hos_id and he.emp_id = bua.emp_id
		 left join HOS_PROJ_DICT hpd on hpd.group_id = bua.group_id and hpd.hos_id = bua.hos_id and hpd.proj_id = bua.proj_id
		 left join HOS_DEPT_DICT hdd2 on hdd2.group_id = bua.group_id and hdd2.hos_id = bua.hos_id and hdd2.dept_id = bua.duty_dept_id
		 left join sys_user su on su.group_id = bua.group_id and su.hos_id = bua.hos_id and su.user_id = bua.checker
		where bua.group_id = #{group_id}
		  and bua.hos_id = #{hos_id}
		  and bua.copy_code = #{copy_code}
	  <if test="start_date != null and start_date != ''and end_date != null and end_date != ''">
	  	  and bua.apply_date between to_date(#{start_date}, 'yyyy-mm-dd') and to_date(#{end_date}, 'yyyy-mm-dd')
	  </if>
	   <if test="apply_dept !=null and apply_dept!= ''">
	   	and bua.dept_id = #{apply_dept}
	   </if>
	   <if test="apply_code !=null and apply_code!= ''">
	   	and bua.apply_code = #{apply_code}
	   </if>
	   <if test="proj_dict !=null and proj_dict != ''">
	   	and bua.proj_id = #{proj_dict}
	   </if>
	   <if test="money_dept !=null and money_dept != ''">
	   	and bua.duty_dept_id = #{money_dept}
	   </if>
   	   <if test="mode !=null and mode != ''">
	   	and bua.state_t = #{mode}
	   </if>
	    <!-- and bua.emp_id = #{emp_id}  -->
	  order by bua.apply_code
		  
	</select>
	
	<select id="queryApplyDataForCode" parameterType="java.util.Map" resultMap="queryApplyDataForCodeMap" >
	
    select bua.apply_code,
           to_char(bua.apply_date,'yyyy-mm-dd') apply_date,
           bua.dept_id,
           hdd.dept_no,
           hdd.dept_name,
           bua.emp_id,
           he.emp_name,
           bua.proj_id,
           hpd.proj_no,
           hpd.proj_name,
           bua.duty_dept_id,
           hdd2.dept_name duty_dept_name,
           bua.remark,
           bua.apply_amount,
           su.user_name checker,
           bua.check_date,
           bua.state_t
    from BUDG_USE_APPLY bua 
     left join HOS_DEPT_DICT hdd on hdd.group_id = bua.group_id and hdd.hos_id = bua.hos_id and hdd.dept_id = bua.dept_id
     left join HOS_EMP he on he.group_id = bua.group_id and he.hos_id = bua.hos_id and he.emp_id = bua.emp_id
     left join HOS_PROJ_DICT hpd on hpd.group_id = bua.group_id and hpd.hos_id = bua.hos_id and hpd.proj_id = bua.proj_id
     left join HOS_DEPT_DICT hdd2 on hdd2.group_id = bua.group_id and hdd2.hos_id = bua.hos_id and hdd2.dept_id = bua.duty_dept_id
     left join sys_user su on su.group_id = bua.group_id and su.hos_id = bua.hos_id and su.user_id = bua.checker
    where bua.group_id = #{group_id}
      and bua.hos_id = #{hos_id}
      and bua.apply_code = #{apply_code}
	
	
	
	
	
	
	</select>
	
	<select id="queryProjDict" resultMap="map">
		SELECT
		<!-- source_code||'.'|| -->SOURCE_ID id,
			source_code||' '||source_name text
		FROM HOS_SOURCE
		<where>
				is_stop = 0
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test=" key != null  and  key  != ''">
				and (
					source_code like '%${key}%' or
					source_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by source_code
	</select>
	
	
	<select id="queryUserApplyCode" resultMap="map">
		SELECT distinct 
			apply_code id,
			apply_code text
		FROM budg_use_apply
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code, jdbcType=VARCHAR}
			</if>
			<if test=" key != null  and  key  != ''">
				and (
					apply_code like '%${key}%' 
				)
			</if>
			<if test="state_t != null and state_t != ''">
				and state_t = #{state_t, jdbcType=VARCHAR}
			</if>
		</where>
		order by apply_code desc
	</select>
	
	
	<select id="queryMaxKey" resultType="String" >
	
	select lpad(nvl(max(substr(apply_code,11,4)),0)+1,4,'0') from BUDG_USE_APPLY
	where group_id = 10
	and hos_id = 15 
	and copy_code = 001
	and to_char(apply_date,'yyyy-mm') = to_char(sysdate,'yyyy-mm')
	
	</select>
	
	
	<select id="queryChangeNo" parameterType="java.util.Map"  resultMap="queryChangeNoMap" >
	
		select 
		( select dept_no from HOS_DEPT_DICT where is_disable = 0 and dept_id = #{apply_dept} ) dept_no,
		( select dept_no   from HOS_DEPT_DICT where is_disable = 0 and dept_id = #{YS_dept} ) duty_dept_no,
		<if test="proj_dict!=null and proj_dict!=''">
			( select proj_no from HOS_PROJ_DICT where  is_disable = 0 and proj_id = #{proj_dict} ) proj_no,
		</if>
		<if test="proj_dict==null or proj_dict==''">
			'' proj_no,
		</if>
		( select emp_no from Hos_Emp_Dict where is_disable = 0 and emp_id = #{apply_name} ) emp_no
		from dual 
	
	</select>
	
	<insert id="addMain" parameterType="java.util.Map">
		insert into BUDG_USE_APPLY
		(group_id,hos_id,copy_code,apply_code,apply_date,dept_id,dept_no,duty_dept_id,duty_dept_no,proj_id,proj_no,
		emp_id,emp_no,remark,apply_amount,maker,make_date,state_t,phone  )
		values(
			#{group_id},
			#{hos_id},
			#{copy_code},
			#{apply_code},
			to_date(#{apply_date},'yyyy-mm-dd'),
			#{apply_dept},
			#{dept_no},
			#{YS_dept},
			#{duty_dept_no},
			#{proj_dict},
			#{proj_no},
			#{apply_name},
			#{emp_no},
			#{remark},
			#{apply_amount},
			#{maker},
			sysdate,
			'01',
			#{phone}
		)
	
	
	</insert>
	

	
	<insert id="addDetailed" parameterType="java.util.List">
		insert into BUDG_USE_APPLY_DET 
		(group_id,hos_id,copy_code,
		apply_code,source_id,
		payment_item_id,payment_item_no,
		apply_amount,remark) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.apply_code,jdbcType=VARCHAR},
			#{item.source_id,jdbcType=INTEGER},
			#{item.payment_item_id,jdbcType=INTEGER},
			( select payment_item_no from budg_payment_item_dict where payment_item_id = #{item.payment_item_id,jdbcType=INTEGER} ) payment_item_no,
			#{item.apply_amount_det,jdbcType=INTEGER},
			#{item.remark_det,jdbcType=INTEGER}
		    from dual
		</foreach>
	</insert>
	
	
	<select id="queryUpdatePageMainData"  parameterType="java.util.Map" resultMap="queryUpdatePageMainDataMap" >
	
		select bua.apply_code,
		       to_char(bua.apply_date,'yyyy-mm-dd') apply_date,
	           he.emp_id || '.' || he.emp_no as emp_id,
	           he.emp_code || ' ' || he.emp_name as emp_name,
		       bua.dept_id,
		       hdd.dept_no || ' '|| hdd.dept_name dept_name,
		       bua.proj_id || '.' || bua.proj_no proj_id,
		       hpd.proj_no|| ' ' ||hpd.proj_name proj_name,
		       bua.duty_dept_id,
		       hdd2.dept_no||  ' '||hdd2.dept_name duty_dept_name,
		       bua.remark,
		       bua.apply_amount,
		       bua.phone,
	           he3.user_name maker,
	           to_char(bua.make_date,'yyyy-mm-dd') make_date,
	           he2.user_name checker,
	           to_char(bua.check_date,'yyyy-mm-dd') check_date,
	           bua.state_t
		from BUDG_USE_APPLY bua 
		 left join HOS_DEPT_DICT hdd on hdd.group_id = bua.group_id and hdd.hos_id = bua.hos_id and hdd.dept_id = bua.dept_id
		 left join HOS_EMP_dict he on he.group_id = bua.group_id and he.hos_id = bua.hos_id and he.emp_id = bua.emp_id
		 left join sys_user he2 on he2.group_id = bua.group_id and he2.hos_id = bua.hos_id and he2.user_id = bua.checker
		 left join sys_user he3 on he3.group_id = bua.group_id and he3.hos_id = bua.hos_id and he3.user_id = bua.maker
		 left join HOS_PROJ_DICT hpd on hpd.group_id = bua.group_id and hpd.hos_id = bua.hos_id and hpd.proj_id = bua.proj_id
		 left join HOS_DEPT_DICT hdd2 on hdd2.group_id = bua.group_id and hdd2.hos_id = bua.hos_id and hdd2.dept_id = bua.duty_dept_id
		where bua.group_id = #{group_id}
		  and bua.hos_id = #{hos_id}
		   
		  and bua.apply_code = #{apply_code}
	
	
	</select>
	
	
	<select id="queryUpdatePageDetiData" parameterType="java.util.Map" resultMap = "queryUpdatePageDetiDataMap">
		select buad.source_id,
		       hs.source_code|| ' ' ||hs.source_name source_name,
		       buad.payment_item_id,
		       bpi.payment_item_code|| ' '||bpi.payment_item_name payment_item_name,
		       buad.apply_amount apply_amount_det,
		       buad.remark remark_det,
		       (
				(select nvl(sum(tmp2.pay_amount),0) from budg_payment_apply tmp
				left join budg_payment_apply_det tmp2
				 on tmp.group_id = tmp2.group_id 
				 and tmp.hos_id = tmp2.hos_id 
				 and tmp.copy_code = tmp2.copy_code
				 and tmp.apply_code = tmp2.apply_code 
				 
				where tmp.group_id = buad.group_id 
				  and tmp.hos_id = buad.hos_id 
				  and tmp.copy_code = buad.copy_code
				  and tmp.use_apply_code = buad.apply_code
				  and tmp2.source_id = buad.source_id
				  and tmp2.payment_item_id = buad.payment_item_id
				  and tmp2.payment_item_no = buad.payment_item_no
				  )
				  +
				(select nvl(sum(tmp.payment_amount),0) from BUDG_CHARGE_APPLY tmp
				 
				where tmp.group_id = buad.group_id 
				  and tmp.hos_id = buad.hos_id 
				  and tmp.copy_code = buad.copy_code
				  and tmp.use_apply_code = buad.apply_code
				  and tmp.source_id = buad.source_id
				  and tmp.payment_item_id = buad.payment_item_id
				  and tmp.payment_item_no = buad.payment_item_no
				)
		       ) real_money,
		       <if test=" flag == 'B'.toString() ">
		        (select nvl(sum(bpar.budg_amount),0) from BUDG_PROJ_APPLY_RESOLVE bpar 
			        where bpar.group_id = buad.group_id and bpar.hos_id = buad.hos_id  and bpar.copy_code = buad.copy_code  
			        and bpar.budg_year = #{year} and bpar.proj_id = #{proj_id} 
			        and bpar.source_id = buad.source_id 
			        and bpar.payment_item_id = buad.payment_item_id 
			        and bpar.payment_item_no = buad.payment_item_no
		       ) budg_money,
		       ( select nvl(sum(tmp2.apply_amount),0) from BUDG_USE_APPLY tmp 
			       left join BUDG_USE_APPLY_det tmp2
		          on tmp2.group_id = tmp.group_id
		          and tmp2.hos_id = tmp.hos_id
		          and tmp2.copy_code = tmp.copy_code
		          and tmp2.apply_code = tmp.apply_code
				 where buad.group_id = tmp.group_id
				 and buad.hos_id = tmp.hos_id
				 and buad.copy_code = tmp.copy_code
				 and to_char(tmp.apply_date,'yyyy') = #{apply_date}
				 and tmp.proj_id = #{proj_id}
				 and tmp.proj_no = #{proj_no}
				 and buad.source_id = tmp2.source_id
				 and buad.payment_item_id = tmp2.payment_item_id
				 and buad.payment_item_no = tmp2.payment_item_no
				 and tmp.state_t = '03'
		       ) already_apply,
		       (
		         (select nvl(sum(tmp2.pay_amount),0) from budg_payment_apply tmp 
		         left join budg_payment_apply_det tmp2
		         on tmp2.group_id = tmp.group_id 
		         and tmp2.hos_id = tmp.hos_id
		         and tmp2.copy_code = tmp.copy_code
		         and tmp2.apply_code = tmp.apply_code
		         where buad.group_id = tmp.group_id
		         and buad.hos_id = tmp.hos_id
		         and buad.copy_code = tmp.copy_code
		         and to_char(tmp.apply_date,'yyyy') = #{apply_date}
		         and tmp.proj_id = #{proj_id}
		         and tmp.proj_no = #{proj_no}
		         and buad.source_id = tmp2.source_id
		         and buad.payment_item_id = tmp2.payment_item_id
		         and buad.payment_item_no = tmp2.payment_item_no
		         and tmp.state in ( '03','04')
		         )
		         +
		         (select nvl(sum(tmp.payment_amount),0) from Budg_Charge_Apply tmp 

		         where buad.group_id = tmp.group_id
		         and buad.hos_id = tmp.hos_id
		         and buad.copy_code = tmp.copy_code
		         and to_char(tmp.apply_date,'yyyy') = #{apply_date}
		         and tmp.proj_id = #{proj_id}
		         and tmp.proj_no = #{proj_no}
		         and buad.source_id = tmp.source_id
		         and buad.payment_item_id = tmp.payment_item_id
		         and buad.payment_item_no = tmp.payment_item_no
		         and tmp.state in ( '03','04')
		         )
		        ) already_execute
		       </if>
		       <if test=" flag == 'A'.toString() ">
		        (select nvl(sum(be.cost_budg),0) from BUDG_EXPENSE be
					where be.group_id = buad.group_id 
					 and be.hos_id = buad.hos_id
					 and be.copy_code = buad.copy_code
					 and be.payment_item_id = buad.payment_item_id
					 and be.budg_year = #{year}
					 <if test=" month != '' and month != null ">
					 	and be.month = #{month}
					 </if>
					 <if test=" dept_id != '' and dept_id != null ">
					 	and be.dept_id = (select bds.duty_dept_id
					                        from budg_duty_set bds
					                       where bds.group_id = be.group_id
					                         and bds.hos_id = be.hos_id
					                         and bds.copy_code = be.copy_code
					                         and bds.payment_item_id = be.payment_item_id
					                         and bds.dept_id = #{dept_id} )
					 	
					 </if>
					 
		        ) budg_money,
		        ( select nvl(sum(tmp2.apply_amount),0) from BUDG_USE_APPLY tmp 
				 left join Budg_Use_Apply_Det tmp2
				 on tmp2.group_id = tmp.group_id 
				 and tmp2.hos_id = tmp.hos_id
				 and tmp2.copy_code = tmp.copy_code
				 and tmp2.apply_code = tmp.apply_code
				 where buad.group_id = tmp.group_id
				 and buad.hos_id = tmp.hos_id
				 and buad.copy_code = tmp.copy_code
				 <if test=" yearMonth != '' and yearMonth != null">
				 	and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
				 </if>
				 <if test=" yearMonth == '' or yearMonth == null ">
				 	and to_char(tmp.apply_date,'yyyy') = #{year}
				 </if>
				 and buad.payment_item_id = tmp2.payment_item_id
				 and buad.payment_item_no = tmp2.payment_item_no
				 and tmp.state_t = '03'
				 <if test=" dept_id != '' and dept_id != null">
					 and tmp.dept_id = (select bds.duty_dept_id
					                        from budg_duty_set bds
					                       where bds.group_id = tmp.group_id
					                         and bds.hos_id = tmp.hos_id
					                         and bds.copy_code = tmp.copy_code
					                         and bds.payment_item_id = tmp.payment_item_id
					                         and bds.dept_id = #{dept_id})
				 </if>

		        ) already_apply,
		        (
			       ( select nvl(sum(tmp2.pay_amount),0) from budg_payment_apply tmp 
							 left join budg_payment_apply_Det tmp2
							 on tmp2.group_id = tmp.group_id 
							 and tmp2.hos_id = tmp.hos_id
							 and tmp2.copy_code = tmp.copy_code
							 and tmp2.apply_code = tmp.apply_code
							 where buad.group_id = tmp.group_id
							 and buad.hos_id = tmp.hos_id
							 and buad.copy_code = tmp.copy_code
							 <if test=" yearMonth != '' and yearMonth != null">
							 	and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
							 </if>
							 <if test=" yearMonth == '' or yearMonth == null ">
							 	and to_char(tmp.apply_date,'yyyy') = #{year}
							 </if>
							 and buad.payment_item_id = tmp2.payment_item_id
							 and buad.payment_item_no = tmp2.payment_item_no
							 and tmp.state_t = '03'
							 <if test=" dept_id != '' and dept_id != null">
								 and tmp.dept_id = (select bds.duty_dept_id
								                        from budg_duty_set bds
								                       where bds.group_id = tmp.group_id
								                         and bds.hos_id = tmp.hos_id
								                         and bds.copy_code = tmp.copy_code
								                         and bds.payment_item_id = tmp.payment_item_id
								                         and bds.dept_id = #{dept_id})
							 </if>
			         )
			         +
			         (
			         select nvl(sum(tmp2.payment_amount),0) from BUDG_CHARGE_APPLY tmp 

							 where buad.group_id = tmp.group_id
							 and buad.hos_id = tmp.hos_id
							 and buad.copy_code = tmp.copy_code
							 <if test=" yearMonth != '' and yearMonth != null">
							 	and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
							 </if>
							 <if test=" yearMonth == '' or yearMonth == null ">
							 	and to_char(tmp.apply_date,'yyyy') = #{year}
							 </if>
							 and buad.payment_item_id = tmp.payment_item_id
							 and buad.payment_item_no = tmp.payment_item_no
							 and tmp.state_t = '03'
							 <if test=" dept_id != '' and dept_id != null">
								 and tmp.dept_id = (select bds.duty_dept_id
								                        from budg_duty_set bds
								                       where bds.group_id = tmp.group_id
								                         and bds.hos_id = tmp.hos_id
								                         and bds.copy_code = tmp.copy_code
								                         and bds.payment_item_id = tmp.payment_item_id
								                         and bds.dept_id = #{dept_id})
							 </if>
			         )
		        ) already_execute
		       </if>
		from BUDG_USE_APPLY_DET buad
		left join HOS_SOURCE hs on hs.group_id = buad.group_id and hs.hos_id = buad.hos_id and hs.source_id = buad.source_id
		left join budg_payment_item bpi on buad.group_id = bpi.group_id and buad.hos_id = bpi.hos_id and buad.copy_code = bpi.copy_code and bpi.payment_item_id = 
		buad.payment_item_id 
		where buad.group_id = #{group_id}
		and buad.hos_id = #{hos_id}
		and buad.copy_code  = #{copy_code}
		and buad.apply_code = #{apply_code}
		
	
	</select>
	
	
	
	<delete id="deleteMain" parameterType="java.util.Map">
		delete from BUDG_USE_APPLY 
		where group_id = #{group_id}
		  and hos_id = #{hos_id}
		  and copy_code = #{copy_code}
		  and apply_code = #{apply_code}
	</delete>
	
	
	<delete id="deleteDetailed" parameterType="java.util.Map">
		delete from BUDG_USE_APPLY_DET 
		where group_id = #{group_id}
		  and hos_id = #{hos_id}
		  and copy_code = #{copy_code}
		  and apply_code = #{apply_code}
	</delete>
	
	
	<delete id="deleteDetailedBatch" parameterType="java.util.List" >
		DELETE FROM BUDG_USE_APPLY_DET
		where
		<foreach collection="list" index="index" item="item" open ="("  separator="or" close=")" >
		
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
			<if test="item.source_id !='' and item.source_id !=null ">
			and source_id = #{item.source_id,jdbcType=INTEGER}
			and payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
			</if>
		</foreach>
		 
	</delete>
	
	
	<delete id="deleteMainBatch" parameterType="java.util.List" >
		DELETE FROM BUDG_USE_APPLY
		where
		<foreach collection="list" index="index" item="item" open ="("  separator="or" close=")" >
		
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND apply_code = #{item.apply_code,jdbcType=VARCHAR}

		</foreach>
		 
	</delete>
	
	
	<select id="queryDetailedApply_amount" parameterType="java.util.Map" resultType="java.lang.Float" >
		
		select nvl(sum(apply_amount),0) apply_amount 
		from BUDG_USE_APPLY_DET 
		where group_id = #{group_id}
		  and hos_id = #{hos_id}
		  and copy_code = #{copy_code}
		  and apply_code = #{apply_code}
				
	</select>
	
	<update id="updatMainApply_amount" parameterType="java.util.Map" >
		update BUDG_USE_APPLY set apply_amount = #{new_Apply_amount}
		where group_id = #{group_id}
		  and hos_id = #{hos_id}
		  and copy_code = #{copy_code}
		  and apply_code = #{apply_code}
	</update>
	
	
	<update id="updateMoneyApplyState" parameterType="java.util.List"  >
		update BUDG_USE_APPLY set state_t = '02'
		where
		  <foreach collection="list" index="index" item="item" open ="("  separator="or" close=")" >
		
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND apply_code = #{item.apply_code,jdbcType=VARCHAR}

		</foreach>
	
	</update>
	
	
	
	<update id="updateMoneyApplyStateRevoke" parameterType="java.util.List"  >
		update BUDG_USE_APPLY set state_t = '01'
		where
		  <foreach collection="list" index="index" item="item" open ="("  separator="or" close=")" >
		
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND apply_code = #{item.apply_code,jdbcType=VARCHAR}

		</foreach>
	
	</update>
	
	<select id="queryMoneyApplyByPrintTemlateMain" parameterType="java.util.Map" resultMap="queryMoneyApplyByPrintTemlateMainMap" >
    select bua.apply_code,
           bua.apply_date,
           bua.dept_id,
           hdd.dept_code,
           hdd.dept_name,
           bua.emp_id,
           he.emp_code,
           he.emp_name,
           bua.proj_id,
           hpd.proj_code,
           hpd.proj_name,
           bua.duty_dept_id,
           hdd2.dept_code DUTY_DEPT_CODE,
           hdd2.dept_name DUTY_DEPT_NAME,
           bua.remark D_REMARK,
           su.user_name maker,
           bua.make_date,
           bua.phone,
           bua.apply_amount APPLY_AMOUNT_SUM,
           su.user_name checker,
           bua.check_date,
           bua.state_t STATE
           
    from BUDG_USE_APPLY bua 
     left join HOS_DEPT_DICT hdd on hdd.group_id = bua.group_id and hdd.hos_id = bua.hos_id and hdd.dept_id = bua.dept_id
     left join Hos_Emp_Dict he on he.group_id = bua.group_id and he.hos_id = bua.hos_id and he.emp_id = bua.emp_id
     left join HOS_PROJ_DICT hpd on hpd.group_id = bua.group_id and hpd.hos_id = bua.hos_id and hpd.proj_id = bua.proj_id
     left join HOS_DEPT_DICT hdd2 on hdd2.group_id = bua.group_id and hdd2.hos_id = bua.hos_id and hdd2.dept_id = bua.duty_dept_id
     left join sys_user su on su.group_id = bua.group_id and su.hos_id = bua.hos_id and su.user_id = bua.checker
     left join sys_user su2 on su2.group_id = bua.group_id and su2.hos_id = bua.hos_id and su2.user_id = bua.checker
	where bua.group_id = #{group_id}
	  and bua.hos_id = #{hos_id}
	  and bua.copy_code = #{copy_code}
      and bua.apply_code = #{apply_code}
     
     
     
	</select>

	<select id="queryMoneyApplyDetByPrintTemlate" parameterType="java.util.Map" resultMap="queryMoneyApplyDetByPrintTemlateMap" >
		select 
		       hs.source_code,
		       hs.source_name,
		       bpi.payment_item_code,
		       bpi.payment_item_name,
		       buad.apply_amount APPLY_AMOUNT,
		       buad.remark M_REMARK
		  from BUDG_USE_APPLY_DET buad
		  left join HOS_SOURCE hs
		    on hs.group_id = buad.group_id
		   and hs.hos_id = buad.hos_id
		   and hs.source_id = buad.source_id
		  left join budg_payment_item bpi
		    on buad.group_id = bpi.group_id
		   and buad.hos_id = bpi.hos_id
		   and buad.copy_code = bpi.copy_code
		   and bpi.payment_item_id = buad.payment_item_id
		 where buad.group_id = #{group_id}
		   and buad.hos_id = #{hos_id}
		   and buad.copy_code = #{copy_code}
		   and buad.apply_code = #{apply_code}
	
	</select>
	
	
	<select id="queryBudgetQuota" resultMap="queryBudgetQuotaMap"  parameterType="java.util.Map" >
        select 
           <if test=" flag == 'B'.toString() ">
            (select nvl(sum(bpar.budg_amount),0) 
             from BUDG_PROJ_APPLY_RESOLVE bpar 
              where 
                  bpar.group_id = #{group_id}
              and bpar.hos_id = #{hos_id}
              and bpar.copy_code = #{copy_code}
              and bpar.budg_year = #{year} 
              and bpar.proj_id = #{proj_id} 
              and bpar.source_id = #{source_id}
              and bpar.payment_item_id = #{payment_item_id}
              and bpar.payment_item_no = #{payment_item_no}
           ) budg_money,
           ( select nvl(sum(tmp2.apply_amount),0) 
              from BUDG_USE_APPLY tmp 
             left join BUDG_USE_APPLY_det tmp2
              on tmp2.group_id = tmp.group_id
              and tmp2.hos_id = tmp.hos_id
              and tmp2.copy_code = tmp.copy_code
              and tmp2.apply_code = tmp.apply_code
             where tmp.group_id = #{group_id}
             and tmp.hos_id = #{hos_id}
             and tmp.copy_code = #{copy_code}
             and to_char(tmp.apply_date,'yyyy') = #{year}
             and tmp.proj_id = #{proj_id} 
             and tmp.proj_no = #{proj_no}
             and tmp2.source_id = #{source_id}
             and tmp2.payment_item_id = #{payment_item_id}
             and tmp2.payment_item_no = #{payment_item_no}
             and tmp.state_t = '03'
           ) already_apply,
           (
             (select nvl(sum(tmp2.pay_amount),0) 
              from budg_payment_apply tmp 
              left join budg_payment_apply_det tmp2
              on tmp2.group_id = tmp.group_id 
               and tmp2.hos_id = tmp.hos_id
               and tmp2.copy_code = tmp.copy_code
               and tmp2.apply_code = tmp.apply_code
             where tmp.group_id  = #{group_id}
               and tmp.hos_id = #{hos_id}
               and tmp.copy_code = #{copy_code}
               and to_char(tmp.apply_date,'yyyy') = #{year}
               and tmp.proj_id = #{proj_id}
               and tmp.proj_no = #{proj_no}
               and tmp2.source_id = #{source_id}
               and tmp2.payment_item_id = #{payment_item_id}
               and tmp2.payment_item_no = #{payment_item_no}
               and tmp.state in ( '03','04')
             )
             +
             (select nvl(sum(tmp.payment_amount),0) 
              from Budg_Charge_Apply tmp 
              where tmp.group_id = #{group_id}
               and tmp.hos_id = #{hos_id}
               and tmp.copy_code = #{copy_code}
               and to_char(tmp.apply_date,'yyyy') = #{year}
               and tmp.proj_id = #{proj_id}
               and tmp.proj_no = #{proj_no}
               and tmp.source_id = #{source_id}
               and tmp.payment_item_id = #{payment_item_id}
               and tmp.payment_item_no = #{payment_item_no}
               and tmp.state in ( '03','04')
             )
            ) already_execute
           </if>
           <if test=" flag == 'A'.toString() ">
            (select nvl(sum(be.cost_budg),0) 
            from BUDG_EXPENSE be
            where be.group_id = #{}
             and be.hos_id = #{}
             and be.copy_code = #{}
             and be.payment_item_id = #{}
             and be.budg_year = #{year}
             <if test=" month != '' and month != null ">
                 and be.month = #{month}
             </if>
             <if test=" dept_id != '' and dept_id != null ">
               and be.dept_id = (select bds.duty_dept_id
                                    from budg_duty_set bds
                                   where bds.group_id = be.group_id
                                     and bds.hos_id = be.hos_id
                                     and bds.copy_code = be.copy_code
                                     and bds.payment_item_id = be.payment_item_id
                                     and bds.dept_id = #{dept_id} )
             
             </if>
            ) budg_money,
            ( select nvl(sum(tmp2.apply_amount),0) 
               from BUDG_USE_APPLY tmp 
               left join Budg_Use_Apply_Det tmp2
               on tmp2.group_id = tmp.group_id 
               and tmp2.hos_id = tmp.hos_id
               and tmp2.copy_code = tmp.copy_code
               and tmp2.apply_code = tmp.apply_code
              where tmp.group_id = #{group_id}
               and tmp.hos_id = #{hos_id}
               and tmp.copy_code = #{copy_code}
               <if test=" yearMonth != '' and yearMonth != null">
                 and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
               </if>
               <if test=" yearMonth == '' or yearMonth == null ">
                 and to_char(tmp.apply_date,'yyyy') = #{year}
               </if>
               and tmp2.payment_item_id = #{payment_item_id}
               and tmp2.payment_item_no = #{payment_item_no}
               and tmp.state_t = '03'
               <if test=" dept_id != '' and dept_id != null">
                 and tmp.dept_id = (select bds.duty_dept_id
                                        from budg_duty_set bds
                                       where bds.group_id = tmp.group_id
                                         and bds.hos_id = tmp.hos_id
                                         and bds.copy_code = tmp.copy_code
                                         and bds.payment_item_id = tmp.payment_item_id
                                         and bds.dept_id = #{dept_id})
               </if>

            ) already_apply,
            (
             ( select nvl(sum(tmp2.pay_amount),0) 
               from budg_payment_apply tmp 
               left join budg_payment_apply_Det tmp2
                 on tmp2.group_id = tmp.group_id 
                and tmp2.hos_id = tmp.hos_id
                and tmp2.copy_code = tmp.copy_code
                and tmp2.apply_code = tmp.apply_code
               where tmp.group_id = #{group_id}
                and tmp.hos_id = #{hos_id}
                and tmp.copy_code = #{copy_code}
                <if test=" yearMonth != '' and yearMonth != null">
                   and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
                </if>
                <if test=" yearMonth == '' or yearMonth == null ">
                   and to_char(tmp.apply_date,'yyyy') = #{year}
                </if>
                 and tmp2.payment_item_id = #{payment_item_id}
                 and tmp2.payment_item_no = #{payment_item_no}
                 and tmp.state_t = '03'
                <if test=" dept_id != '' and dept_id != null">
                   and tmp.dept_id = (select bds.duty_dept_id
                                          from budg_duty_set bds
                                         where bds.group_id = tmp.group_id
                                           and bds.hos_id = tmp.hos_id
                                           and bds.copy_code = tmp.copy_code
                                           and bds.payment_item_id = tmp.payment_item_id
                                           and bds.dept_id = #{dept_id})
                 </if>
               )
               +
               (
               select nvl(sum(tmp2.payment_amount),0) 
               from BUDG_CHARGE_APPLY tmp 
               where tmp.group_id = #{group_id}
                and tmp.hos_id = #{hos_id}
                and tmp.copy_code = #{copy_code}
               <if test=" yearMonth != '' and yearMonth != null">
                 and to_char(tmp.apply_date,'yyyymm') = #{yearMonth}
               </if>
               <if test=" yearMonth == '' or yearMonth == null ">
                 and to_char(tmp.apply_date,'yyyy') = #{year}
               </if>
               and tmp.payment_item_id = #{payment_item_id}
               and tmp.payment_item_no = #{payment_item_no}
               and tmp.state_t = '03'
               <if test=" dept_id != '' and dept_id != null">
                 and tmp.dept_id = (select bds.duty_dept_id
                                        from budg_duty_set bds
                                       where bds.group_id = tmp.group_id
                                         and bds.hos_id = tmp.hos_id
                                         and bds.copy_code = tmp.copy_code
                                         and bds.payment_item_id = tmp.payment_item_id
                                         and bds.dept_id = #{dept_id})
               </if>
               )
            ) already_execute
           </if>
    from dual
	
	
	
	</select>
	
	
</mapper>

