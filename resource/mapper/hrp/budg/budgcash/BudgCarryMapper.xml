<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgcash.BudgCarryMapper">
	
	<resultMap id="budgCarry" type="com.chd.hrp.budg.entity.BudgCarry">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="cash_flag" column="cash_flag"/>
	<result property="cash_user" column="cash_user"/>
	<result property="cash_date" column="cash_date"/>
	</resultMap>
		
	<resultMap id="budgCarryMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	
	<result property="work_flag" column="work_flag"/>
	<result property="work_user" column="work_user"/>
	<result property="work_date" column="work_date"/>
	<result property="income_flag" column="income_flag"/>
	<result property="income_user" column="income_user"/>
	<result property="income_date" column="income_date"/>
	<result property="cost_flag" column="cost_flag"/>
	<result property="cost_user" column="cost_user"/>
	<result property="cost_date" column="cost_date"/>
	<result property="pur_flag" column="pur_flag"/>
	<result property="pur_user" column="pur_user"/>
	<result property="pur_date" column="pur_date"/>
	<result property="proj_flag" column="proj_flag"/>
	<result property="proj_user" column="proj_user"/>
	<result property="proj_date" column="proj_date"/>
	
	<result property="year_month" column="year_month"/>
	<result property="cash_flag" column="cash_flag"/>
	<result property="cash_user" column="cash_user"/>
	<result property="cash_date" column="cash_date"/>
	<result property="year_month_before" column="year_month_before"/>
	</resultMap>
	
	<resultMap id="budgCashMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="cash_begin" column="cash_begin"/>
	<result property="cash_begain" column="cash_begain"/>
	<result property="cash_in" column="cash_in"/>
	<result property="cash_out" column="cash_out"/>
	<result property="cash_add" column="cash_add"/>
	<result property="cash_end" column="cash_end"/>
	<result property="cash_carry" column="cash_carry"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_CARRY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			cash_flag
			,
			cash_user
			,
			cash_date
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{cash_flag,jdbcType=INTEGER}
			,
			#{cash_user,jdbcType=VARCHAR}
			,
			#{cash_date,jdbcType=VARCHAR}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_CARRY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			cash_flag
			,
			cash_user
			,
			cash_date
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{group_id,jdbcType=INTEGER}
				,
				#{hos_id,jdbcType=INTEGER}
				,
				#{copy_code,jdbcType=VARCHAR}
				,
				#{year,jdbcType=VARCHAR}
				,
				#{month,jdbcType=VARCHAR}
				,
				#{cash_flag,jdbcType=INTEGER}
				,
				#{cash_user,jdbcType=VARCHAR}
				,
				#{cash_date,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_CARRY  SET
			cash_flag = #{cash_flag,jdbcType=INTEGER}
			,
			cash_user = #{cash_user,jdbcType=VARCHAR}
			,
			cash_date = #{cash_date,jdbcType=VARCHAR}
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_CARRY set
				cash_flag = #{item.cash_flag,jdbcType=INTEGER}
				,
				cash_user = #{item.cash_user,jdbcType=VARCHAR}
				,
				cash_date = #{item.cash_date,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_CARRY 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_CARRY 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND year = #{item.year,jdbcType=VARCHAR}
			
				AND month = #{item.month,jdbcType=VARCHAR}
			
			</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="budgCarry" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			cash_flag
		FROM BUDG_CARRY 
		WHERE                     
		    group_id = #{group_id,jdbcType=INTEGER}
		
			AND hos_id = #{hos_id,jdbcType=INTEGER}
		
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	<select id="queryByCode" resultMap="budgCarry"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			cash_flag
		FROM BUDG_CARRY 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgCarry"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			cash_flag
		FROM BUDG_CARRY 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryDataExists" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT 
			count(0)
		FROM BUDG_CARRY 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR} 
	</select>
	
	<!-- 待结转月份查询 （不存在结转数据时，取资金预算系统启用年月） -->
	<select id="queryYearMonthStart" resultType="java.lang.String" parameterType="java.util.Map"  >
		SELECT 
			 start_year || start_month as year_month_start
	  	FROM sys_mod_start
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="mod_code != null and mod_code != '' ">
				AND mod_code = #{mod_code}
			</if>
	
	</select>
	
	<!-- 待结转月份查询 （存在结转数据时） -->
	<select id="queryYearMonth" resultMap="budgCarryMap" parameterType="java.util.Map"  >
		select  year , month from BUDG_CARRY
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND cash_flag = 0
		order by year , month
	</select>
	
	<!-- 已结转月份查询 -->
	<select id="queryYearMonthBefore" resultMap="budgCarryMap"  parameterType="java.util.Map" >
		select  year , month from BUDG_CARRY 
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND cash_flag = 1
		order by year desc, month desc
	</select>
	
	<!--  查询现金存量预算表中累计流入 累计流出   (与流量预算数据比较使用) -->
	<select id="queryBudgCash" resultMap="budgCashMap"  parameterType="java.util.Map" >
		SELECT 
			cash_in,
			cash_out,
			cash_end
  		FROM budg_cash
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
	<!--  查询现金存量执行表中累计流入 累计流出   (与流量执行数据比较使用)  期末现金存量  (后续更新存量预算结转值  及后续月份期初期末数据使用) -->
	<select id="queryBudgCashExe" resultMap="budgCashMap"  parameterType="java.util.Map" >
		SELECT 
			cash_in,
			cash_out,
			cash_end
  		FROM budg_cash_exe
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
	<!--  查询现金流量预算表中累计流入 累计流出   (与存量预算数据比较使用) -->
	<select id="queryBudgCashFlow" resultMap="budgCashMap"  parameterType="java.util.Map" >
		select 
		     sum(case when d.cash_dire = '0' then a.amount else 0 end) as cash_in,
		     sum(case when d.cash_dire = '1' then a.amount else 0 end) as cash_out
		FROM BUDG_CASH_FLOW a
		LEFT JOIN acc_cash_item d
		  ON a.group_id = d.group_id
		 AND a.hos_id = d.hos_id
		 AND a.copy_code = d.copy_code
		 AND a.cash_item_id = d.cash_item_id
		WHERE
			a.group_id = #{group_id,jdbcType=INTEGER}
			
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND a.month = #{month,jdbcType=VARCHAR}
	</select>
	
	
	<!--  查询现金流量执行表中累计流入 累计流出   (与存量执行数据比较使用) -->
	<select id="queryBudgCashFlowExe" resultMap="budgCashMap"  parameterType="java.util.Map" >
		select 
		     sum(case when d.cash_dire = '0' then a.amount else 0 end) as cash_in,
		     sum(case when d.cash_dire = '1' then a.amount else 0 end) as cash_out
		FROM BUDG_CASH_FLOW_EXE a
		LEFT JOIN acc_cash_item d
		  ON a.group_id = d.group_id
		 AND a.hos_id = d.hos_id
		 AND a.copy_code = d.copy_code
		 AND a.cash_item_id = d.cash_item_id
		WHERE
			a.group_id = #{group_id,jdbcType=INTEGER}
			
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND a.year = #{year,jdbcType=VARCHAR}
			
			AND a.month = #{month,jdbcType=VARCHAR}
	</select>
	
<!-- 	 更新现金存量预算表中 结转值 -->
	<update id="updateCashCarry" parameterType="java.util.Map">
	
		UPDATE BUDG_CASH SET
			
			cash_carry = #{cash_carry,jdbcType=VARCHAR}
			
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</update>
	
	<!--  查询  大于该结转月份 的月份值  和 净增加额 -->
	<select id="queryMonthCashAddFromBudgCash" resultMap="budgCashMap"  parameterType="java.util.Map" >
		SELECT
			group_id,
			hos_id, 
			copy_code,
			budg_year,
			month,
			sum(cash_add) cash_add
  		FROM budg_cash
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND to_number(month) &gt; to_number(#{month,jdbcType=VARCHAR})
			
		GROUP BY group_id,hos_id, copy_code,budg_year,month
	</select>
	
	
	<update id="updateBudgCash" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_CASH set
				cash_begain = #{item.cash_begain,jdbcType=INTEGER}
				,
				cash_end = #{item.cash_end,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	
	<!-- 查询结账表数据  注:结转时SQL,请勿修改排序方式-->
	<select id="queryBudgCarry" resultMap="budgCarryMap" parameterType="java.util.Map"  >
		SELECT	
		  group_id	,
		  hos_id	,
		  copy_code	,
		  year	,
		  month,
		  work_flag	,
		  work_user	,
		  work_date	,
		  income_flag	,
		  income_user	,
		  income_date	,
		  cost_flag	,
		  cost_user	,
		  cost_date	,
		  pur_flag	,
		  pur_user	,
		  pur_date	,
		  proj_flag	,
		  proj_user	,
		  proj_date	,
		  cash_flag	,
		  cash_user	,
		  cash_date
		FROM BUDG_CARRY
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			<if test="work_flag != null and work_flag != ''">
				AND work_flag = #{work_flag}
			</if>
			
			<if test="income_flag != null and income_flag != '' ">
				AND income_flag = #{income_flag}
			</if>
			
			<if test="cost_flag != null and cost_flag != '' ">
				AND cost_flag = #{cost_flag}
			</if>
			
			<if test="pur_flag != null and pur_flag != '' ">
				AND pur_flag = #{pur_flag}
			</if>
		ORDER BY year , month 
	</select>
	
	<select id="queryBudgCarryByCode" parameterType="java.util.Map" resultType="com.chd.hrp.budg.entity.BudgCarry">
		SELECT	
		  group_id	,
		  hos_id	,
		  copy_code	,
		  year	,
		  month,
		  work_flag	,
		  work_user	,
		  work_date	,
		  income_flag	,
		  income_user	,
		  income_date	,
		  cost_flag	,
		  cost_user	,
		  cost_date	,
		  pur_flag	,
		  pur_user	,
		  pur_date	,
		  proj_flag	,
		  proj_user	,
		  proj_date	,
		  cash_flag	,
		  cash_user	,
		  cash_date
		FROM BUDG_CARRY
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
	<!-- 结转时公用SQL语句 -->
	<update id="updateBudgCarry" parameterType="java.util.Map">
		UPDATE BUDG_CARRY
		
			<trim prefix="SET"  suffixOverrides=","> 
				<if test="work_flag != null ">
					work_flag = #{work_flag},
				</if>
				
				<if test="work_user != null ">
					work_user = #{work_user},
				</if>
				
				<if test="work_date != null ">
					work_date = #{work_date},
				</if>
				
				<if test="income_flag != null ">
					income_flag = #{income_flag},
				</if>
				
				<if test="income_user != null ">
					income_user = #{income_user},
				</if>
				
				<if test="income_date != null ">
					income_date = #{income_date},
				</if>
				
				<if test="cost_flag != null ">
					cost_flag = #{cost_flag},
				</if>
				
				<if test="cost_user != null ">
					cost_user = #{cost_user},
				</if>
				
				<if test="cost_date != null ">
					cost_date = #{cost_date},
				</if>
				
				<if test="pur_flag != null ">
					pur_flag = #{pur_flag},
				</if>
				
				<if test="pur_user != null ">
					pur_user = #{pur_user},
				</if>
				
				<if test="pur_date != null ">
					pur_date = #{pur_date},
				</if>
			</trim>
		WHERE
			group_id = #{group_id}
			AND hos_id = #{hos_id}
			AND copy_code = #{copy_code}
			AND year = #{year}
			AND month = #{month}
	</update>
	
	<insert id="addBudgCarry" parameterType="java.util.Map">
		INSERT INTO BUDG_CARRY(
			GROUP_ID, 
			HOS_ID, 
			COPY_CODE, 
			YEAR, 
			MONTH, 
			WORK_FLAG, 
			WORK_USER, 
			WORK_DATE, 
			INCOME_FLAG, 
			INCOME_USER, 
			INCOME_DATE, 
			COST_FLAG, 
			COST_USER, 
			COST_DATE, 
			PUR_FLAG, 
			PUR_USER, 
			PUR_DATE, 
			PROJ_FLAG, 
			PROJ_USER, 
			PROJ_DATE, 
			CASH_FLAG,
			CASH_USER, 
			CASH_DATE
		)values(
			#{group_id}, #{hos_id}, #{copy_code}, #{year}, #{month}, 
			#{work_flag}, #{work_user}, #{work_date}, 
			#{income_flag}, #{income_user}, #{income_date}, 
			#{cost_flag}, #{cost_user}, #{cost_date}, 
			#{pur_flag},#{pur_user},#{pur_date},
			#{proj_flag}, #{proj_user}, #{proj_date}, 
			#{cash_flag}, #{cash_user}, #{cash_date}
		)
		
	</insert>
</mapper>

