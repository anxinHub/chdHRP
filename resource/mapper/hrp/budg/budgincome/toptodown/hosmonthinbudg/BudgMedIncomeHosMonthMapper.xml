<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgincome.toptodown.hosmonthinbudg.BudgMedIncomeHosMonthMapper">
	
	<resultMap id="budgMedIncomeHosMonth" type="com.chd.hrp.budg.entity.BudgMedIncomeHosMonth">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="month" column="month"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	</resultMap>
		
	<resultMap id="budgMedIncomeHosMonthMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="month" column="month"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	
	<result property="hyValue" column="hyValue"/>
	<result property="resolve_way" column="resolve_way"/>
	<result property="resolve_data" column="resolve_data"/>
	<result property="reference_years" column="reference_years"/>
	<result property="sumValue" column="sumValue"/>
	<result property="sumLastIncome" column="sumLastIncome"/>

	<!-- 科目是否结转标记 -->
	<result property="is_caarried" column="is_caarried"/>
	<!-- 结转下月值 -->
	<result property="next_value" column="next_value"/>
	
	<result property="m01" column="m01"/>
	<result property="m02" column="m02"/>
	<result property="m03" column="m03"/>
	<result property="m04" column="m04"/>
	<result property="m05" column="m05"/>
	<result property="m06" column="m06"/>
	<result property="m07" column="m07"/>
	<result property="m08" column="m08"/>
	<result property="m09" column="m09"/>
	<result property="m10" column="m10"/>
	<result property="m11" column="m11"/>
	<result property="m12" column="m12"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_INCOME_HOS_MONTH (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			subj_code
			,
			month
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_income
			,
			last_month_carried
			,
			carried_next_month
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{subj_code,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{count_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{resolve_rate,jdbcType=INTEGER}
			,
			#{last_year_income,jdbcType=INTEGER}
			,
			#{last_month_carried,jdbcType=INTEGER}
			,
			#{carried_next_month,jdbcType=INTEGER}	
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_INCOME_HOS_MONTH (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			subj_code
			,
			month
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_income
			,
			last_month_carried
			,
			carried_next_month
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.count_value,jdbcType=INTEGER}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.grow_rate,jdbcType=INTEGER}
			,
			#{item.resolve_rate,jdbcType=INTEGER}
			,
			#{item.last_year_income,jdbcType=INTEGER}
			,
			#{item.last_month_carried,jdbcType=INTEGER}
			,
			#{item.carried_next_month,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_med_income_hos_month 
		<trim prefix="SET"  suffixOverrides=","> 
			<if test="count_value != null and count_value != ''">
				count_value = #{count_value,jdbcType=INTEGER}
				,
			</if>
			<if test="budg_value != null and budg_value != ''">
				budg_value = #{budg_value,jdbcType=INTEGER}
				,
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark,jdbcType=VARCHAR}
				,
			</if>
			<if test="grow_rate != null and grow_rate != ''">
				grow_rate = #{grow_rate,jdbcType=INTEGER}
				,
			</if>
			<if test="resolve_rate != null and resolve_rate != ''">
				resolve_rate = #{resolve_rate,jdbcType=INTEGER}
				,
			</if>
			<if test="last_year_income != null and last_year_income != ''">
				last_year_income = #{last_year_income,jdbcType=INTEGER}
				,
			</if>
			<if test="last_month_carried != null and last_month_carried != ''">
				last_month_carried = #{last_month_carried,jdbcType=INTEGER}
				,
			</if>
			<if test="carried_next_month != null and carried_next_month != ''">
				carried_next_month = #{carried_next_month,jdbcType=INTEGER}
				,
			</if>
		</trim>
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_income_hos_month SET
				count_value = #{item.count_value,jdbcType=INTEGER}
				,
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
				,
				resolve_rate = #{item.resolve_rate,jdbcType=INTEGER}
				,
				last_year_income = #{item.last_year_income,jdbcType=INTEGER}
				,
				last_month_carried = #{item.last_month_carried,jdbcType=INTEGER}
				,
				carried_next_month = #{item.carried_next_month,jdbcType=INTEGER}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
					
		</foreach>
	</update>
	
	<update id="updateValueBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_income_hos_month SET
				budg_value = #{item.budg_value,jdbcType=INTEGER}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
					
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_med_income_hos_month 
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_med_income_hos_month 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgMedIncomeHosMonthMap" >
		
		with t as(
			select group_id , hos_id , copy_code , year ,subj_code , month , budg_value 
			from BUDG_MED_INCOME_HOS_MONTH
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and year = #{year}
		)
	
		SELECT 
			t.group_id,
			t.hos_id,
			t.copy_code,
			t.year,
			t.subj_code,
			bis.subj_name ,
			sum(case when t.month ='01' then t.budg_value else 0 end ) as m01,
			sum(case when t.month ='02' then t.budg_value else 0 end ) as m02,
			sum(case when t.month ='03' then t.budg_value else 0 end ) as m03,
			sum(case when t.month ='04' then t.budg_value else 0 end ) as m04,
			sum(case when t.month ='05' then t.budg_value else 0 end ) as m05,
			sum(case when t.month ='06' then t.budg_value else 0 end ) as m06,
			sum(case when t.month ='07' then t.budg_value else 0 end ) as m07,
			sum(case when t.month ='08' then t.budg_value else 0 end ) as m08,
			sum(case when t.month ='09' then t.budg_value else 0 end ) as m09,
			sum(case when t.month ='10' then t.budg_value else 0 end ) as m10,
			sum(case when t.month ='11' then t.budg_value else 0 end ) as m11,
			sum(case when t.month ='12' then t.budg_value else 0 end ) as m12
		FROM t
		LEFT JOIN budg_income_subj bis
			ON
				t.group_id  = bis.group_id 
				and t.hos_id  = bis.hos_id 
				and t.copy_code  = bis.copy_code
				and t.year  = bis.budg_year
				and t.subj_code  = bis.subj_code
		where                    
			
			t.group_id = #{group_id,jdbcType=INTEGER}
			
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND t.year = #{year,jdbcType=VARCHAR}
			
			<if test="subj_code != null and subj_code != ''">
			AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND t.month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
			</if>
		group by t.group_id, t.hos_id,t.copy_code,t.year,t.subj_code,bis.subj_name 
		order by t.group_id , t.hos_id ,t.copy_code ,t.year , t.subj_code  asc
	</select>
	<select id="queryByCode" resultMap="budgMedIncomeHosMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			last_month_carried,
			carried_next_month
		FROM budg_med_income_hos_month 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			subj_code = #{subj_code,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryByUniqueness" resultMap="budgMedIncomeHosMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			last_month_carried,
			carried_next_month
		FROM BUDG_MED_INCOME_HOS_MONTH 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
	<select id="queryExists" resultMap="budgMedIncomeHosMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			last_month_carried,
			carried_next_month
		FROM BUDG_MED_INCOME_HOS_MONTH 
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 查询 科室月份医疗收入预算 汇总数据 -->
	<select id="queryCollectData" resultMap="budgMedIncomeHosMonthMap"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			month,
			sum(count_value) count_value,
			sum(budg_value) budg_value, 
			sum(last_year_income) last_year_income,
			sum(last_month_carried) last_month_carried,
			sum(carried_next_month) as carried_next_month
		FROM BUDG_MED_INCOME_DEPT_MONTH 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			<if test="subj_code != null and subj_code != ''">
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		group by   group_id, hos_id, copy_code,	year, subj_code, month
		order by year , subj_code asc
	</select>
	
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(subj_code) FROM budg_med_income_hos_month 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   
		and hos_id = #{hos_id,jdbcType=INTEGER}    
		and copy_code = #{copy_code,jdbcType=VARCHAR}    
		and year = #{year,jdbcType=VARCHAR}   
		and subj_code = #{subj_code,jdbcType=VARCHAR}   
	
	</select>
	
	<!-- 结转查询SQL：查询当前年月预算值,执行值,上月结转,下月结转及下月数据的上月结转 -->
	<select id="queryBudgMedIncomeHosMonthByYearMonth" parameterType="java.util.Map" resultMap="budgMedIncomeHosMonthMap">
		SELECT 
		  beihm.group_id,beihm.hos_id,beihm.copy_code,beihm.year,beihm.subj_code,beihm.month,beihm.count_value,
		  beihm.budg_value,beihm.remark,beihm.grow_rate,beihm.resolve_rate,nvl(beihm.last_year_income,0) as last_year_income,
		  nvl(beihm.last_month_carried,0) as last_month_carried ,nvl(beihm.carried_next_month,0) as carried_next_month,
		  nvl(beie.amount,0) as amount,bis.is_caarried,
		  <!-- 计算:下月结转值 = 上月结转 + 本月预算 -本月执行 -->
		  nvl(beihm.LAST_MONTH_CARRIED,0) + nvl(beihm.BUDG_VALUE,0) - nvl(amount,0) AS next_value
		FROM 
		BUDG_MED_INCOME_HOS_MONTH beihm
		LEFT JOIN (
			<!-- 查询所有科目执行金额,按年度、月份、科目编码汇总 -->
        	SELECT
         		a.group_id,a.hos_id,a.copy_code,a.year,a.month,a.subj_code,
         		sum(a.amount) amount
        	FROM BUDG_MED_INCOME_EXECUTE a
        	WHERE
           		a.group_id = #{group_id}
           		AND a.hos_id = #{hos_id}
           		AND a.copy_code = #{copy_code}
         	GROUP BY 
          		a.group_id,a.hos_id,a.copy_code,
          		a.year,a.month,a.subj_code  
    	) beie
    	ON
              beihm.group_id = beie.group_id
              AND beihm.hos_id = beie.hos_id
              AND beihm.copy_code = beie.copy_code
              AND beihm.year = beie.year
              AND beihm.month = beie.month
              AND beihm.subj_code = beie.subj_code
		LEFT JOIN BUDG_INCOME_SUBJ bis
		ON
		     beihm.group_id = bis.group_id
		     AND beihm.hos_id = bis.hos_id
		     AND beihm.copy_code = bis.copy_code
		     AND beihm.year = bis.budg_year
		     AND beihm.subj_code = bis.subj_code
		WHERE
		     beihm.group_id = #{group_id}
		     AND beihm.hos_id = #{hos_id}
		     AND beihm.copy_code = #{copy_code}
		     AND beihm.year = #{year}
		     AND beihm.month = #{month}    
	</select>
	
	<!-- 结转时SQL:批量修改上月结转值或批量修改下月结转值 -->
	<update id="updateBatchBudgMedIncomeHosMonthValue" parameterType="java.util.List">
		 <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_HOS_MONTH 
			SET
				<trim suffixOverrides=",">
					<!-- 修改上月结转 --> 
					<if test="item.last_month_carried != null">
						last_month_carried = #{item.last_month_carried},
					</if>
					
					<!-- 修改结转下月 -->
					<if test="item.carried_next_month != null">
						carried_next_month = #{item.carried_next_month},
					</if>
				</trim>
			WHERE
				group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
				AND year = #{item.year}
				AND month = #{item.month}
				
				<if test="item.subj_code != null and item.subj_code != ''">
					AND subj_code = #{item.subj_code}
				</if>
		</foreach>
	</update>
	
	<select id="queryResolve" parameterType="java.util.Map" resultMap="budgMedIncomeHosMonthMap">
			
		    select t.group_id, t.hos_id, t.copy_code, t.year, t.month,t.subj_code,t.budg_value,t.count_value
		    	,t.remark,t.grow_rate,t.resolve_rate,t.last_year_income , bis.subj_name, bmihy.budg_value as hyValue
		     
		    from BUDG_MED_INCOME_HOS_MONTH t
		    left join BUDG_MED_INCOME_HOS_YEAR bmihy 
		    	on 
			    	t.group_id = bmihy.group_id
				    and t.hos_id = bmihy.hos_id
				    and t.copy_code = bmihy.copy_code
				    and t.year = bmihy.year
				    and t.subj_code = bmihy.subj_code
		    left join budg_income_subj bis 
		    	on 
			    	t.group_id = bis.group_id
				    and t.hos_id = bis.hos_id
				    and t.copy_code = bis.copy_code
				    and t.year = bis.budg_year
				    and t.subj_code = bis.subj_code 
		    
		    where                     
				t.group_id = #{group_id,jdbcType=INTEGER}
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND t.year = #{year,jdbcType=VARCHAR}
				<if test="month != null and month != ''">
				AND t.month = #{month,jdbcType=VARCHAR}
				</if>
				<if test="subj_code != null and subj_code != ''">
				AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
				</if>
				<if test="subj_level != null and subj_level != ''">
				AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
				</if>
		    order by t.group_id, t.hos_id, t.copy_code, t.year, t.subj_code, t.month asc
			
	</select>
	
	
	<!-- 	查询 所选年度、科目的计算数据 -->
	<select id="queryCountData" resultMap="budgMedIncomeHosMonthMap"  parameterType="java.util.Map">
	
		WITH temp as(
			select t.group_id ,t.hos_id , t.copy_code , t.month, t.subj_code , sum(t.amount) sumValue
			FROM BUDG_MED_INCOME_EXECUTE t
			where
				t.group_id = #{group_id,jdbcType=INTEGER}
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="subj_code != null and subj_code != ''">
				AND t.subj_code like (#{subj_code} || '%')  
				</if>
				and t.year between ${year} - (select reference_years 
                                 from BUDG_MED_INCOME_HM_PLAN 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
                                    AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND subj_code = t.subj_code) 
                                    and ${year} - 1
           group by t.group_id ,t.hos_id , t.copy_code ,  t.month , t.subj_code 
		)
		
		SELECT 
		    bmihm.group_id,
		    bmihm.hos_id,
		    bmihm.copy_code,
		    bmihm.year,
		    bmihm.month,
		    bmihm.subj_code,
		    bis.subj_name ,
		    nvl(bmihy.budg_value,0)hyValue ,
		     nvl(bmihm.count_value,0)count_value,
		     nvl(bmihm.budg_value,0)budg_value,
		     nvl(bmihm.remark,0)remark,
		     nvl(bmihm.grow_rate,0)grow_rate,
		     nvl(bmihm.resolve_rate,0)resolve_rate,
		     nvl(bmihm.last_year_income,0)last_year_income,
			 nvl(bmihm.last_month_carried,0) last_month_carried,
			 nvl(bmihm.carried_next_month,0) carried_next_month,
		     nvl(bmihp.resolve_way,0) resolve_way,
		     nvl(bmihp.resolve_data,0) resolve_data,
		     nvl(bmihp.reference_years,0) reference_years,
		     nvl(temp.sumValue,0) sumValue
	    FROM BUDG_MED_INCOME_HOS_MONTH   bmihm
	    left join BUDG_MED_INCOME_HOS_YEAR  bmihy
	      ON
	        bmihm.group_id  = bmihy.group_id
	        and bmihm.hos_id  = bmihy.hos_id
	        and bmihm.copy_code  = bmihy.copy_code
	        and bmihm.year  = bmihy.year
	        and bmihm.subj_code  = bmihy.subj_code
	    left join temp  
	      ON
	        bmihm.group_id  = temp.group_id
	        and bmihm.hos_id  = temp.hos_id
	        and bmihm.copy_code  = temp.copy_code
	        and bmihm.subj_code  = temp.subj_code  
	        and bmihm.month  = temp.month  
	    left join budg_income_subj bis
	      ON
	        bmihm.group_id  = bis.group_id
	        and bmihm.hos_id  = bis.hos_id
	        and bmihm.copy_code  = bis.copy_code
	        and bmihm.subj_code  = bis.subj_code
	        and bmihm.year  = bis.budg_year
	    left join BUDG_MED_INCOME_HM_PLAN bmihp
	      ON
	        bmihm.group_id  = bmihp.group_id
	        and bmihm.hos_id  = bmihp.hos_id
	        and bmihm.copy_code  = bmihp.copy_code
	        and bmihm.year  = bmihp.budg_year
	        and bmihm.subj_code  = bmihp.subj_code
	        
	    where
			bmihm.group_id = #{group_id,jdbcType=INTEGER}
			AND bmihm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bmihm.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bmihm.year = #{year,jdbcType=VARCHAR}
			<if test="subj_code != null and subj_code != ''">
			AND bmihm.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
		    AND bis.is_last = '1'
	</select>
	
	<!-- 查询 所选年度、科目   参考年度  所有月收入 总和 -->
	<select id="querySumLastYearIncome" parameterType="java.util.Map" resultMap="budgMedIncomeHosMonthMap" >
	
		SELECT  sum(amount) as sumLastIncome 
		
		FROM BUDG_MED_INCOME_EXECUTE
		WHERE    
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			<if test="year != null and year != ''">
			AND year between ${year} - (select reference_years 
                                 from BUDG_MED_INCOME_HM_PLAN 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
                                    AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND subj_code = #{subj_code,jdbcType=VARCHAR}) and ${year} - 1
			</if>
			
			AND subj_code like(#{subj_code} || '%') 
			
		group by group_id , hos_id ,copy_code , subj_code  
	</select>
	
	<!-- 根据 科室、月份、自定义分解系数 计算分解比例(科室月) -->
	<select id="queryResolveDataRate" parameterType="java.util.Map" resultMap="budgMedIncomeHosMonthMap" >
		with temp as(
			SELECT  group_id , hos_id ,copy_code , resolve_data_code , sum(nvl(value,0)) sumValue	
			FROM BUDG_RESOLVE_DATA_HM
			where    
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			group by group_id , hos_id ,copy_code , resolve_data_code 
		)
		
		select case temp.sumValue when 0 then null else nvl(a.value,0)/ temp.sumValue end resolve_rate
		
		FROM BUDG_RESOLVE_DATA_HM a
		left join temp
			on 
				a.group_id = temp.group_id
				and a.hos_id = temp.hos_id
				and a.copy_code = temp.copy_code
				and a.resolve_data_code = temp.resolve_data_code
		where    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			AND a.month = #{month,jdbcType=VARCHAR}
		
	</select>
	<!-- 查询 所传 科目的 上年收入 -->
	<select id="queryLastYearIncome" parameterType="java.util.Map" resultType="java.lang.String" >
	
		SELECT   sum(amount) last_year_income  	
		FROM BUDG_MED_INCOME_EXECUTE
		where   
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND subj_code like (#{subj_code} || '%')
	</select>
	<!-- 增量生成时 查询要生成的数据 -->
	<select id="queryData" parameterType="java.util.Map" resultMap="budgMedIncomeHosMonthMap" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year year,
			subj_code
		FROM BUDG_MED_INCOME_HM_PLAN 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
	</select>
	<update id="updateBatchBudgValue" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_HOS_MONTH set
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				<if test="item.grow_rate != null and item.grow_rate != ''">
					, grow_rate = #{item.grow_rate}
				</if>
				<if test="item.resolve_rate != null and item.resolve_rate != ''">
					, resolve_rate = #{item.resolve_rate}
				</if>
				<if test="item.count_value != null and item.count_value != ''">
					, count_value = #{item.count_value}
				</if>
				<if test="item.remark != null and item.remark != ''">
					, remark = #{item.remark}
				</if>
				<if test="item.last_year_income != null and item.last_year_income != ''">
					, last_year_income = #{item.last_year_income}
				</if>
				
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
		</foreach>
	</update>
</mapper>

