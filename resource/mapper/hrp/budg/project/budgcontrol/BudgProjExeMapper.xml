<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.project.budgcontrol.BudgProjExeMapper">
	
	<resultMap id="budgProjExe" type="com.chd.hrp.budg.entity.BudgProjExe">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="proj_id" column="proj_id"/>
	<result property="source_id" column="source_id"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="cost_amount" column="cost_amount"/>
	</resultMap>
		
	<resultMap id="budgProjExeMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="text" column="text"/>
	<result property="month" column="month"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="source_id" column="source_id"/>
	<result property="source_code" column="source_code"/>
	<result property="source_name" column="source_name"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_code" column="payment_item_code"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="cost_amount" column="cost_amount"/>
	
	<result property="b_remain_amoun" column="b_remain_amoun"/>
	<result property="budg_amount" column="budg_amount"/>
	<result property="t_budg_amount" column="t_budg_amount"/>
	<result property="y_budg_amount" column="y_budg_amount"/>
	
	</resultMap>
	
	
	<resultMap id="selectMap" type="java.util.Map">
	<result property="proj_id" column="proj_id"/>
	<result property="projName" column="projName"/>
	<result property="source_id" column="source_id"/>
	<result property="sourceName" column="sourceName"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="item_name" column="item_name"/>
	</resultMap>
	
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_PROJ_EXE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			cost_amount
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{proj_id,jdbcType=INTEGER}
			,
			#{source_id,jdbcType=INTEGER}
			,
			#{payment_item_id,jdbcType=INTEGER}
			,
			#{cost_amount,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_PROJ_EXE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			cost_amount
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.source_id,jdbcType=INTEGER}
			,
			#{item.payment_item_id,jdbcType=INTEGER}
			,
			#{item.cost_amount,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_PROJ_EXE SET
			cost_amount = #{cost_amount,jdbcType=INTEGER}
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			AND source_id = #{source_id,jdbcType=INTEGER}
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_PROJ_EXE set
				cost_amount = #{item.cost_amount,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_PROJ_EXE 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			<if test="proj_id != null and proj_id != ''">
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
			<if test="source_id != null and source_id != ''">
			AND source_id = #{source_id,jdbcType=INTEGER}
			</if>
			<if test="payment_item_id != null and payment_item_id != ''">
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
			</if>
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_PROJ_EXE 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>
				<if test="item.payment_item_id != null and item.payment_item_id != ''">
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgProjExeMap" >
	
		SELECT 
			bre.group_id
			,
			bre.hos_id
			,
			bre.copy_code
			,
			bre.year
			,
			bre.year text
			,
			bre.month
			,
			bre.proj_id
			,
			hpd.proj_code 
			,
			hpd.proj_name 
			,
			bre.source_id
			,
			hs.source_code
			,
			hs.source_name
			,
			bre.payment_item_id
			,
			bpid.payment_item_code
			,
			bpid.payment_item_name
			,
			bre.cost_amount
		FROM BUDG_PROJ_EXE bre
		left join hos_proj_dict hpd
			on 
				bre.group_id = hpd.group_id
				and bre.hos_id = hpd.hos_id
				and bre.proj_id = hpd.proj_id
				and hpd.is_stop = 0
		left join hos_source hs
			on 
				bre.group_id = hs.group_id
				and bre.hos_id = hs.hos_id
				and bre.source_id = hs.source_id
		left join BUDG_PAYMENT_ITEM_DICT bpid
			on 
				bre.group_id = bpid.group_id
				and bre.hos_id = bpid.hos_id
				and bre.copy_code = bpid.copy_code
				and bre.payment_item_id = bpid.payment_item_id
				and bpid.is_stop = 0
		where                   
			bre.group_id = #{group_id,jdbcType=INTEGER}
			AND bre.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bre.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="proj_id != null and proj_id != ''">
			AND bre.proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
			<if test="source_id != null and source_id != ''">
			AND bre.source_id = #{source_id,jdbcType=INTEGER}
			</if>
			<if test="payment_item_id != null and payment_item_id != ''">
			AND bre.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
			</if>
			<if test="begin_date != null and begin_date != '' and  end_date != null and end_date != ''">
			AND ( year || month between #{begin_date} and #{end_date} or
					year || month between  #{end_date} and #{begin_date})
			</if>
	</select>
	<select id="queryByCode" resultMap="budgProjExe"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			cost_amount
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		month = #{month,jdbcType=VARCHAR}   and 
		proj_id = #{proj_id,jdbcType=INTEGER}   and 
		source_id = #{source_id,jdbcType=INTEGER}   and 
		payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgProjExe"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			cost_amount
		FROM BUDG_PROJ_EXE 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="proj_id != null and proj_id != ''">
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
			<if test="source_id != null and source_id != ''">
			AND source_id = #{source_id,jdbcType=INTEGER}
			</if>
			<if test="payment_item_id != null and payment_item_id != ''">
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
			</if>
	</select>
	<select id="queryExists" resultMap="budgProjExe"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			cost_amount
		FROM BUDG_PROJ_EXE 
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="proj_id != null and proj_id != ''">
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
			<if test="source_id != null and source_id != ''">
			AND source_id = #{source_id,jdbcType=INTEGER}
			</if>
			<if test="payment_item_id != null and payment_item_id != ''">
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
			</if>
	</select>
	
	<!-- 项目下拉框  -->
	<select id="queryBudgProj" resultMap="selectMap">
		  select 
			  proj_id  ,
	          proj_name  as projName
          from hos_proj_dict 
	    where
	    	group_id = #{group_id}
			AND hos_id = #{hos_id}
			AND is_stop = 0 
            <if test="key != null and key != ''">
				AND (
					proj_code like '${key}%' or
					proj_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%' 
				)
			</if>
		
	    order by proj_id
	</select>
	
	<!-- 资金来源 下拉框 -->
	<select id="queryBudgSource" resultMap="selectMap">
		select source_id , 
			   source_name as sourceName
		 from hos_source
		 where 
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and is_stop = 0
     		<if test="key != null and key != ''">
				and (
					source_code like '${key}%' or
					source_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%' 
				)
			</if>
		order by source_id
	</select>
	
	<!-- 支出项目下拉框  -->
	<select id="queryBudgPaymentItem" resultMap="selectMap">
		select 
		payment_item_id  ,
		payment_item_name   as item_name
		from budg_payment_item_dict
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="key != null and key != ''">
				and (	payment_item_code like '${key}%' or
					payment_item_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%' 
				)
			</if>
			and is_stop = 0
		</where>
		order by payment_item_code
	</select>
	
	<!-- 根据主键判断数据是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(proj_id)
			
		FROM BUDG_PROJ_EXE 
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			AND source_id = #{source_id,jdbcType=INTEGER}
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询预算系统启用 年月 -->
	<select id="queryBudgModStartYearMonth" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT start_year || start_month	FROM sys_mod_start 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mod_code = '02'
	</select>
	
	<!-- 根据 所填数据 年度 查询该预算年度是否 已结转 （已结转 则不允许添加）-->
	<select id="queryIsCarried" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT is_carried
			
		FROM budg_proj_carry 
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
	</select>
	
	
	<!-- 根据 所填数据 年度 查询该预算年度是否 已结转 （已结转 则不允许添加）-->
	<select id="queryBudgDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1)
			
		FROM budg_proj_year 
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			AND source_id = #{source_id,jdbcType=INTEGER}
	</select>
	
	<!-- 汇总 年度项目预算数据 -->
	<select id="queryBudgProjYearData" resultMap="budgProjExeMap"  parameterType="java.util.Map" >
	SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.proj_id,
			a.source_id,
			sum(nvl(a.cost_amount,0)) + sum(nvl(b.cost_amount,0)) cost_amount 
			
		FROM  budg_proj_exe a
		LEFT  JOIN BUDG_PROJ_BEGAIN b
			ON
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.year = b.budg_year
				and a.proj_id = b.proj_id
				and a.source_id = b.source_id
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   and 
			a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			a.year = #{year,jdbcType=VARCHAR} 
		group by a.group_id , a.hos_id , a.copy_code , a.year , a.proj_id , a.source_id 
	
	</select>
	
	<!--  汇总 存在对应年度项目预算明细数据 的 执行数据-->
	<select id="queryBudgProjDetailYearExistData" resultMap="budgProjExeMap"  parameterType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.proj_id,
			a.source_id,
			a.payment_item_id,
			sum(nvl(a.cost_amount,0)) + sum(nvl(b.cost_amount,0)) cost_amount 
		FROM  budg_proj_exe a
		LEFT  JOIN BUDG_PROJ_BEGAIN_DETAIL b
			ON
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.year = b.budg_year
				and a.proj_id = b.proj_id
				and a.source_id = b.source_id
				and a.payment_item_id = b.payment_item_id
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   and 
			a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			a.year = #{year,jdbcType=VARCHAR}
			and exists (select 1 from BUDG_PROJ_DETAIL_YEAR d
					left join budg_proj_exe c
						on d.group_id = c.group_id 
						and d.hos_id  = c.hos_id
						and d.copy_code = c.copy_code
						and d.budg_year = c.year
						and d.proj_id = c.proj_id
						and d.source_id = c.source_id
						and d.payment_item_id = c.payment_item_id
					where d.group_id = c.group_id 
					and d.hos_id  = c.hos_id
					and d.copy_code = c.copy_code
					and d.budg_year = c.year
					and d.proj_id = c.proj_id
					and d.source_id = c.source_id
					and d.payment_item_id = c.payment_item_id)
		group by a.group_id , a.hos_id , a.copy_code , a.year , a.proj_id , a.source_id , a.payment_item_id	
	
	</select>
	
	<!--  汇总 不存在对应年度项目预算明细数据 的 执行数据-->
	<select id="queryBudgProjDetailYearNotExistData" resultMap="budgProjExeMap"  parameterType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.proj_id,
			a.source_id,
			a.payment_item_id,
			sum(nvl(a.cost_amount,0)) + sum(nvl(b.cost_amount,0)) cost_amount 
		FROM  budg_proj_exe a
		LEFT  JOIN BUDG_PROJ_BEGAIN_DETAIL b
			ON
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.year = b.budg_year
				and a.proj_id = b.proj_id
				and a.source_id = b.source_id
				and a.payment_item_id = b.payment_item_id
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   and 
			a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			a.year = #{year,jdbcType=VARCHAR}
			and not exists (select 1 from BUDG_PROJ_DETAIL_YEAR d
					left join budg_proj_exe c
						on d.group_id = c.group_id 
						and d.hos_id  = c.hos_id
						and d.copy_code = c.copy_code
						and d.budg_year = c.year
						and d.proj_id = c.proj_id
						and d.source_id = c.source_id
						and d.payment_item_id = c.payment_item_id
					where d.group_id = c.group_id 
					and d.hos_id  = c.hos_id
					and d.copy_code = c.copy_code
					and d.budg_year = c.year
					and d.proj_id = c.proj_id
					and d.source_id = c.source_id
					and d.payment_item_id = c.payment_item_id)
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.proj_id , a.source_id , a.payment_item_id	
	</select>
	
	<!-- 确认 修改账表  年度项目预算 -->
	 <update id="updateBudgProjYear" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_year set
			
				cost_amount = #{item.cost_amount}
				,
				
				t_cost_amount = b_cost_amount + #{item.cost_amount}
				,
				usable_amount = t_in_amount - b_cost_amount -  #{item.cost_amount}
				,
				remain_amount = t_budg_amount -  b_cost_amount - #{item.cost_amount}
				,
				rate =  DECODE((b_remain_amoun + budg_amount), 0, 0.00, #{item.cost_amount}/(b_remain_amoun + budg_amount)) 
				,
				t_rate = DECODE(t_budg_amount, 0 , 0.00 , (b_cost_amount + #{item.cost_amount})/t_budg_amount)
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.year,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				AND source_id = #{item.source_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	  <!-- 确认 修改账表  年度项目预算明细    -->
	<update id="updateBudgProjYearDetail" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_detail_year set
			
				cost_amount = #{item.cost_amount}
				,
				y_cost_amount = b_cost_amount + #{item.cost_amount}
				,
				remain_amoun = y_budg_amount - b_cost_amount - #{item.cost_amount}
				,
				rate =  DECODE((budg_amount + b_remain_amoun), 0 , 0.00, #{item.cost_amount}/(budg_amount + b_remain_amoun))
				,
				t_rate = DECODE(y_budg_amount, 0 , 0.00, (b_cost_amount + #{item.cost_amount})/y_budg_amount)
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.year,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!--  确认 添加账表  年度项目预算明细 数据-->
	<insert id="addBudgProjYearDetail" parameterType="java.util.List" >
	
		INSERT INTO BUDG_PROJ_DETAIL_YEAR (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			b_budg_amount
			,
			b_cost_amount
			,
			b_remain_amoun
			,
			budg_amount
			,
			cost_amount
			,
			y_budg_amount
			,
			y_cost_amount
			,
			remain_amoun
			,
			rate
			,
			t_rate 
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.source_id,jdbcType=INTEGER}
			,
			#{item.payment_item_id,jdbcType=INTEGER}
			,
			0.00 as b_budg_amount
			,
			0.00 as b_cost_amount
			,
			0.00 as b_remain_amoun
			,
			0.00 as budg_amount
			,
			
			#{item.cost_amount}
			,
			0.00 as y_budg_amount
			,
			${item.cost_amount} as y_cost_amount
			,
			-${item.cost_amount} as remain_amoun
			,
			0.00 as rate
			,
			0.00 as t_rate
			
		    from dual
		</foreach>
		)t
	 </insert>
	
</mapper>

