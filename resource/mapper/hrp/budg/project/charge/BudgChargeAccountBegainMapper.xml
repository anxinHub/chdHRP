<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.project.charge.BudgChargeAccountBegainMapper">
	
		<resultMap id="budgProjBegain" type="com.chd.hrp.budg.entity.BudgProjBegainMark">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>	
		<result property="budg_year" column="budg_year"/>	
		<result property="proj_id" column="proj_id"/>
		<result property="source_id" column="source_id"/>
		<result property="budg_amount" column="budg_amount"/>
		<result property="in_amount" column="in_amount"/>
		<result property="cost_amount" column="cost_amount"/>
		<result property="remain_amount" column="remain_amount"/>
		<result property="checker" column="checker"/>
		<result property="check_date" column="check_date"/>
		<result property="state" column="state"/>
		</resultMap>
		
		
		<resultMap type="java.util.Map" id="budgProjBegainMap">
		<result property="mark_date" column="mark_date"/>
		<result property="id" column="id"/>
		<result property="text" column="text"/>
		</resultMap>
	
	   <resultMap type="java.util.Map" id="budgProjBegainYearMap">
	    <result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
	    <result property="budg_year" column="budg_year"/>
		<result property="proj_id" column="proj_id"/>
		<result property="source_id" column="source_id"/>
        <result property="b_remain_amoun" column="b_remain_amoun"/>
		<result property="b_usable_amount" column="b_usable_amount"/>
		<result property="budg_amount" column="budg_amount"/>
		<result property="in_amount" column="in_amount"/>
		<result property="cost_amount" column="cost_amount"/>
		<result property="remain_amount" column="remain_amount"/>						
	     <result property="usable_amount" column="usable_amount"/>
		<result property="b_in_amount" column="b_in_amount"/>
		<result property="b_cost_amount" column="b_cost_amount"/>								
		 <result property="b_remain_amount" column="b_remain_amount"/>
		<result property="t_budg_amount" column="t_budg_amount"/>
		<result property="t_in_amount" column="t_in_amount"/>								
		<result property="t_cost_amount" column="t_cost_amount"/>
		<result property="rate" column="rate"/>
		<result property="b_budg_amount" column="b_budg_amount"/>
		<result property="t_rate" column="t_rate"/>	
		<result property="remain_adj" column="remain_adj"/>	
		<result property="min_main_budg_year" column="min_main_budg_year"/>		
								
		</resultMap>
		<resultMap type="java.util.Map" id="budgProjBegainYearDeatilMap">
	    <result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
	    <result property="budg_year" column="budg_year"/>
		<result property="proj_id" column="proj_id"/>
		<result property="source_id" column="source_id"/>		
        <result property="payment_item_id" column="payment_item_id"/>
		<result property="b_budg_amount" column="b_budg_amount"/>
		<result property="b_cost_amount" column="b_cost_amount"/>
		<result property="b_remain_amoun" column="b_remain_amoun"/>
		<result property="budg_amount" column="budg_amount"/>
		<result property="cost_amount" column="cost_amount"/>						
	     <result property="y_budg_amount" column="y_budg_amount"/>
		<result property="y_cost_amount" column="y_cost_amount"/>
		<result property="remain_amoun" column="remain_amoun"/>	
		<result property="min_detail_budg_year" column="min_detail_budg_year"/>										
		<result property="rate" column="rate"/>
		<result property="t_rate" column="t_rate"/>					
		</resultMap>
		
				<select id="queryBudgMarkDate" resultMap="budgProjBegainMap"  >
								      select 
								      to_char(mark_date,'yyyyMMdd') as id,
								      mark_date as text
							          from budg_proj_begain_mark 	          
															      <where>
															        <if test="group_id !='' and  group_id!=null ">
															          and  group_id = #{group_id}
															        </if>
															        <if test="hos_id !='' and hos_id!=null">
															          and  hos_id=#{hos_id}
															        </if>
															        <if test="copy_code !='' and copy_code!=null">
															          and  copy_code=#{copy_code}
															        </if>
																</where>
				</select>	
				
				
				<insert id="add" useGeneratedKeys="false" >
										  insert into 
									      budg_proj_year 
									      ( group_id,
									       hos_id,
									       copy_code,                           
									      budg_year,
									      proj_id,
									      source_id, 
									      b_budg_amount,
									      b_usable_amount,
									      budg_amount,
									      in_amount,
									      cost_amount,
									      remain_amount,
									      usable_amount,
									      b_in_amount,
									      b_cost_amount,
									      b_remain_amoun,
									      t_budg_amount, 
									      t_in_amount，
									      t_cost_amount,
									       rate,
									      t_rate,
									      remain_adj
													   ) select group_id,
														       hos_id,
														       copy_code, 
														       budg_year,
														      proj_id,
														      source_id,
														      b_remain_amount,
														      b_usable_amount,  
														      budg_amount,
														      in_amount,  
														      cost_amount,
														      remain_amount,
														      usable_amount,
														      b_usable_amount,
														      0,
														      b_remain_amount,
														      b_remain_amount+budg_amount,
														      b_usable_amount+in_amount,
														      cost_amount,
														      cost_amount/(b_remain_amount+budg_amount),
														      cost_amount/b_remain_amount,
														      0
									from  budg_proj_begain 
																				<where>                   
																							<if test="group_id != null and group_id != ''">
																						         AND group_id = #{group_id}
																						    </if>
																						    <if test="hos_id != null and hos_id != ''">
																							     AND hos_id = #{hos_id}
																							</if>
																						   	<if test="copy_code != null and copy_code != ''">
																							     AND copy_code = #{copy_code}
																							</if>		
																			    </where>
				</insert>
	
	
	
				<insert id="addDetail" useGeneratedKeys="false" >
				
						      insert into budg_proj_detail_year
					             (group_id,
					               hos_id,
					               copy_code,
					               budg_year,
					               proj_id,
					               source_id,
					               payment_item_id,
					               b_budg_amount,
					               b_cost_amount,
					               b_remain_amoun,
					               budg_amount,
					               cost_amount,
					               y_budg_amount,
					               y_cost_amount,
					               remain_amoun,
					               rate,
					               t_rate             
					                      )
										select group_id,
											       hos_id,
											       copy_code,
											       budg_year,
											       proj_id,
											       source_id,
											       payment_item_id,
											       b_remain_amount,
											       0,
											       b_remain_amount,
											       budg_amount,
											       cost_amount,
											       remain_amount,
											       b_remain_amount + budg_amount,
											       b_remain_amount + cost_amount,
											       cost_amount / (b_remain_amount + budg_amount),
											       (b_remain_amount + cost_amount) / (b_remain_amount + cost_amount)
											       
					 from budg_proj_begain_detail
											    
																			<where>                   
																						<if test="group_id != null and group_id != ''">
																					         AND group_id = #{group_id}
																					    </if>
																					    <if test="hos_id != null and hos_id != ''">
																						     AND hos_id = #{hos_id}
																						</if>
																					   	<if test="copy_code != null and copy_code != ''">
																						     AND copy_code = #{copy_code}
																						</if>		
																			</where>
				</insert>
				
				
				<insert id="addLastTotalYearData"  >
							   	 insert into  budg_proj_year 
							      ( group_id,
							       hos_id,
							       copy_code,                           
							      budg_year,
							      proj_id,
							      source_id, 
							      b_budg_amount,
							      b_usable_amount,
							      budg_amount,
							      in_amount,
							      cost_amount,
							      remain_amount,
							      usable_amount,
							      b_in_amount,
							      b_cost_amount,
							      b_remain_amoun,
							      t_budg_amount, 
							      t_in_amount，
							      t_cost_amount,
							       rate,
							      t_rate,
							      remain_adj
							      
							      ) select group_id,
												     hos_id,
												      copy_code, 
												      budg_year,
												      proj_id,
												      source_id,
												      sum(budg_amount)+b_remain_amount,
												      b_usable_amount,  
												      budg_amount,
												      in_amount,  
												      cost_amount,
												      remain_amount,
												      usable_amount,
												      sum(in_amount)+b_usable_amount,
												      sum(cost_amount),
												      b_remain_amount,
												      b_remain_amount+budg_amount,
												      b_usable_amount+in_amount,
												      cost_amount,
												      cost_amount/(b_remain_amount+budg_amount),
												      cost_amount/b_remain_amount,
											      0
							      from  budg_proj_begain   
							      
													      where  
														        budg_year &lt; (select max(budg_year) from budg_proj_begain ) 
														        and budg_year &gt;= (select min(budg_year) from budg_proj_begain)   
														          
																				<if test="group_id != null and group_id != ''">
																			         AND group_id = #{group_id}
																			    </if>
																			    <if test="hos_id != null and hos_id != ''">
																				     AND hos_id = #{hos_id}
																				</if>
																			   	<if test="copy_code != null and copy_code != ''">
																				     AND copy_code = #{copy_code}
																				</if>		
																					     group by group_id,
																					      hos_id,
																					      copy_code, 
																					      proj_id,
																					     source_id,
																					     budg_year,
																					     b_usable_amount,  
																					     budg_amount,
																					     in_amount,  
																					     cost_amount,
																					     remain_amount,
																					     usable_amount,
																					    b_remain_amount
				</insert>
	
				<insert id="addLastTotalYearDataDetail" >
										     insert into budg_proj_detail_year
									             (group_id,
									               hos_id,
									               copy_code,
									               budg_year,
									               proj_id,
									               source_id,
									               payment_item_id,
									               b_budg_amount,
									               b_cost_amount,
									               b_remain_amoun,
									               budg_amount,
									               cost_amount,
									               y_budg_amount,
									               y_cost_amount,
									               remain_amoun,
									               rate,
									               t_rate             
									               )
												      select group_id,
												               hos_id,
												               copy_code,
												               budg_year,
												               proj_id,
												               source_id,
												               payment_item_id,
												              sum(budg_amount)+b_remain_amount,         
												               sum(cost_amount),
												               b_remain_amount,
												               budg_amount,
												               cost_amount,
												               remain_amount,
												               b_remain_amount + budg_amount,
												               b_remain_amount + cost_amount,
												               cost_amount / (b_remain_amount + budg_amount),
												               (b_remain_amount + cost_amount) / (b_remain_amount + cost_amount)
												               
								   from budg_proj_begain_detail 
																 where  
												        			 budg_year &lt; (select max(budg_year) from budg_proj_begain_detail ) 
												        			 
												    				 and budg_year &gt;= (select min(budg_year) from budg_proj_begain_detail) 
												    				                  
																			<if test="group_id != null and group_id != ''">
																		         AND group_id = #{group_id}
																		    </if>
																		    <if test="hos_id != null and hos_id != ''">
																			     AND hos_id = #{hos_id}
																			</if>
																		   	<if test="copy_code != null and copy_code != ''">
																			     AND copy_code = #{copy_code}
																			</if>	
																			
																					group by  group_id,
																		               hos_id,
																		               copy_code,
																		               budg_year,
																		               proj_id,
																		               source_id,
																		               payment_item_id,
																		               b_remain_amount,
																		               budg_amount,
																		               cost_amount,
																		               remain_amount	
								
				</insert>
				
				
				<insert id="addBudgProjBegainRemark"  >
				
										INSERT INTO BUDG_PROJ_BEGAIN_MARK (
										<trim suffix="" suffixOverrides=",">
												<if test="group_id != null and group_id != ''">
												group_id
												,
												</if>
												<if test="hos_id != null and hos_id != ''">
												hos_id
												,
												</if>
												<if test="copy_code != null and copy_code != ''">
												copy_code
												,
												</if>
												<if test="state != null and state != ''">
												state
												,
												</if>
												<if test="user_id != null and user_id != ''">
												user_id
												,
												</if>
												<if test="mark_date != null and mark_date != ''">
												mark_date
												,
												</if>
										</trim>
													) VALUES (
													<trim suffix="" suffixOverrides=",">
																	<if test="group_id != null and group_id != ''">
																	#{group_id,jdbcType=INTEGER}
																	,
																	</if>
																	<if test="hos_id != null and hos_id != ''">
																	#{hos_id,jdbcType=INTEGER}
																	,
																	</if>
																	<if test="copy_code != null and copy_code != ''">
																	#{copy_code,jdbcType=VARCHAR}
																	,
																	</if>
																	<if test="state != null and state != ''">
																	#{state,jdbcType=INTEGER}
																	,
																	</if>
																	<if test="user_id != null and user_id != ''">
																	#{user_id,jdbcType=INTEGER}
																	,
																	</if>
																	<if test="mark_date != null and mark_date != ''">
																	#{mark_date,jdbcType=DATE}
																	
																	</if>
													</trim>		
													)
				
				</insert>
	
	<select id="queryBudgProjBegain" resultMap="budgProjBegainYearMap" >
	select 
										group_id,
										hos_id,
										copy_code,
										budg_year,
										proj_id,
										source_id,
										nvl(b_remain_amount,0) b_remain_amoun,<!-- 期初预算余额 -->
										nvl(b_usable_amount,0) b_usable_amount,<!--期初可用余额 -->
										nvl(budg_amount,0) budg_amount,                 <!-- 本期预算金额  -->
										nvl(in_amount,0) in_amount,                          <!-- ||本期到账金额 -->    
										nvl(cost_amount,0) cost_amount ,                      <!-- 本期支出金额   --> 
										nvl(remain_amount,0) remain_amount,                              <!-- 预算余额 --> 
										nvl(usable_amount,0) usable_amount, 
										0 b_budg_amount,                            <!-- 期初预算金额 -->   
										0 b_in_amount,<!-- 期初到账金额=本期到账 +期初可用余额 -->
										0 b_cost_amount,<!-- 期初到账金额 -->
										0 b_remain_amount,<!-- 期初预算余额 -->
										0 t_budg_amount,<!-- 预算金额累计 -->
										0 t_in_amount,<!-- 到账金额累计 -->
										0 t_cost_amount,<!-- 支出金额累计 -->
										0 rate ,        <!-- 本年执行进度 --> 
										0 t_rate ,      <!-- 累计执行进度 --> 
										0 remain_adj ,   <!-- 经费余额调整 -->      
										to_char(to_number(budg_year)-1)  as  last_acc_year            
                    from  budg_proj_begain   
                    
    
    
		WHERE 
															
				group_id = #{group_id,jdbcType=INTEGER}   and 
				
				hos_id = #{hos_id,jdbcType=INTEGER}   and 
				
				copy_code = #{copy_code,jdbcType=VARCHAR} and
				
				state='02'
				order by budg_year Asc 
	</select>
	<select id="queryBudgProjBegainDetail" resultMap="budgProjBegainYearDeatilMap" >
	select 
				group_id      ,      <!--        ?  -->
				hos_id        , <!--   ?                医院id  -->  
				copy_code      ,  <!--    ?              账套编码  -->
				budg_year      ,  <!--    ?               预算年度  -->
				proj_id        ,  <!--    ?                 项目id   --> 
				source_id      ,  <!--     ?               资金来源id  -->
				payment_item_id  , <!--    ?                 支出项目id  -->
				nvl(b_remain_amount,0)  as b_remain_amoun  ,     <!-- ?            期初预算余额  -->
				nvl(budg_amount,0) budg_amount  ,   <!--   ?               预算金额  -->
				nvl(cost_amount,0) cost_amount ,   <!--   ?                支出金额  -->
				nvl(remain_amount,0) remain_amoun ,  <!--      ?            预算余额  -->
				0 y_cost_amount ,  <!-- 支出金额累计  -->
				0 y_budg_amount , <!-- 预算金额累计  -->
				0 b_budg_amount , <!-- 期初预算金额 --> 
				0 b_cost_amount ,  <!-- 期初支出金额 -->
				0 rate          ,  <!-- 本年执行进度  -->
				0 t_rate,         <!-- 累计执行进度  -->
				to_char(to_number(budg_year) - 1 ) last_acc_year
				from budg_proj_begain_detail
		WHERE 
															
				group_id = #{group_id,jdbcType=INTEGER}   and 
				
				hos_id = #{hos_id,jdbcType=INTEGER}   and 
				
				copy_code = #{copy_code,jdbcType=VARCHAR} 
							
	
				order by budg_year Asc 
	</select>
	<!-- <select id="queryDetailYear" resultMap="budgProjBegainYearDeatilMap" >
	select   
				min(budg_year) as min_detail_budg_year
				from budg_proj_begain_detail
		WHERE 
															
				group_id = #{group_id,jdbcType=INTEGER}   and 
				
				hos_id = #{hos_id,jdbcType=INTEGER}   and 
				
				copy_code = #{copy_code,jdbcType=VARCHAR} 

	</select>
	<select id="queryMainYear" resultMap="budgProjBegainYearMap" >
	select   
				min(budg_year) as min_main_budg_year
				from budg_proj_begain
		WHERE 
															
				group_id = #{group_id,jdbcType=INTEGER}   and 
				
				hos_id = #{hos_id,jdbcType=INTEGER}   and 
				
				copy_code = #{copy_code,jdbcType=VARCHAR} 

	</select> -->
</mapper>

