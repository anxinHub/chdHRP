<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.project.begin.BudgProjDetailYearMapper">

		<resultMap id="BudgProjDetailYear" type="com.chd.hrp.budg.entity.BudgProjDetailYear">
		
			<result property="group_id" column="group_id"/>
			<result property="hos_id" column="hos_id"/>
			<result property="copy_code" column="copy_code"/>
			<result property="budg_year" column="budg_year"/>
			<result property="proj_id" column="proj_id"/>
			<result property="source_id" column="source_id"/>
			<result property="payment_item_id" column="payment_item_id"/>
			<result property="b_budg_amount" column="b_budg_amount"/>
			<result property="b_cost_amount" column="b_cost_amount"/>
			<result property="b_remain_amoun" column="b_remain_amoun"/>
			<result property="budg_amount" column="budg_amount"/>
			<result property="in_amount" column="in_amount"/>
			<result property="cost_amount" column="cost_amount"/>
			<result property="y_budg_amount" column="y_budg_amount"/>
			<result property="y_cost_amount" column="y_cost_amount"/>
			<result property="remain_amoun" column="remain_amoun"/>
			<result property="rate" column="rate"/>
			
		</resultMap>	
						    <insert id="addBatch" parameterType="java.util.List" >
							
											INSERT INTO BUDG_PROJ_DETAIL_YEAR (
											group_id
											,
											hos_id
											,
											copy_code
											,
											budg_year
											,
											proj_id
											,
											source_id
											,
											payment_item_id
											,
											b_budg_amount
											,
											b_cost_amount
											,
											b_remain_amoun
											,
											budg_amount
											,
											cost_amount
											,
											y_budg_amount
											,
											y_cost_amount
											,
											remain_amoun
											,
											rate
											,
											t_rate
											
															) select  t.* from(
																		<foreach collection="list" item="item" index="index" separator=" union all " >
																						select 		
																						#{item.group_id,jdbcType=INTEGER}
																						,
																						#{item.hos_id,jdbcType=INTEGER}
																						,
																						#{item.copy_code,jdbcType=VARCHAR}
																						,
																						#{item.budg_year,jdbcType=VARCHAR}
																						,
																						#{item.proj_id,jdbcType=INTEGER}
																						,
																						#{item.source_id,jdbcType=INTEGER}
																						,
																						#{item.payment_item_id,jdbcType=INTEGER}
																						,
																						#{item.b_budg_amount,jdbcType=INTEGER}
																						,
																						#{item.b_cost_amount,jdbcType=INTEGER}
																						,
																						#{item.b_remain_amoun,jdbcType=INTEGER}
																						,
																						#{item.budg_amount,jdbcType=INTEGER}
																						,
																						#{item.cost_amount,jdbcType=INTEGER}
																						,
																						#{item.y_budg_amount,jdbcType=INTEGER}
																						,
																						#{item.y_cost_amount,jdbcType=INTEGER}
																						,
																						#{item.remain_amoun,jdbcType=INTEGER}
																						,
																						#{item.rate,jdbcType=INTEGER}
																						,
																						#{item.t_rate,jdbcType=INTEGER}
																						
																					    from dual
																		</foreach>
															)t
							</insert>
							
							
		<delete id="deleteBatch" parameterType="java.util.List">
					DELETE FROM budg_proj_detail_year 
					
														<where>
																	<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
																				<if test="item.group_id != null and item.group_id != ''">
																				 group_id = #{item.group_id,jdbcType=INTEGER}
																				</if>
																				<if test="item.hos_id != null and item.hos_id != ''">
																				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
																				</if>
																				<if test="item.copy_code != null and item.copy_code != ''">
																				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
																				</if>
																				<if test="item.budg_year != null and item.budg_year != ''">
																				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
																				</if>
																				<if test="item.proj_id != null and item.proj_id != ''">
																				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
																				</if>
																				<if test="item.source_id != null and item.source_id != ''">
																				AND source_id = #{item.source_id,jdbcType=INTEGER}
																				</if>
																				<if test="item.payment_item_id != null and item.payment_item_id != ''">
																				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
																				</if>
																				
																				
																	</foreach>
																	
													    </where>  
													    
		</delete>
							
							
				<select id="queryByCode" resultMap="BudgProjDetailYear"  parameterType="java.util.Map" >

									SELECT 
									group_id,
									hos_id,
									copy_code,
									budg_year,
									proj_id,
									source_id,
									payment_item_id,
									b_budg_amount,
									b_cost_amount,
									b_remain_amoun,
									budg_amount,
									cost_amount,
									y_budg_amount,
									y_cost_amount,
									remain_amoun,
									rate
									FROM budg_proj_detail_year 
									
																WHERE 
																group_id = #{group_id,jdbcType=INTEGER}   and 
																hos_id = #{hos_id,jdbcType=INTEGER}   and 
																copy_code = #{copy_code,jdbcType=VARCHAR}   and 
																budg_year = #{budg_year,jdbcType=VARCHAR}   and 
																proj_id = #{proj_id,jdbcType=INTEGER}   and 
																source_id = #{source_id,jdbcType=INTEGER}  
																 

					</select>
					
					
					<update id="update" parameterType="java.util.Map">
	
												UPDATE budg_proj_detail_year
												 
																			<trim prefix="SET"  suffixOverrides=","> 
																						<if test="b_budg_amount != null and b_budg_amount != ''">
																						b_budg_amount = #{b_budg_amount,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="b_cost_amount != null and b_cost_amount != ''">
																						b_cost_amount = #{b_cost_amount,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="b_remain_amoun != null and b_remain_amoun != ''">
																						b_remain_amoun = #{b_remain_amoun,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="budg_amount != null and budg_amount != ''">
																						budg_amount = #{budg_amount,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="cost_amount != null and cost_amount != ''">
																						cost_amount = #{cost_amount,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="y_budg_amount != null and y_budg_amount != ''">
																						y_budg_amount = #{y_budg_amount,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="y_cost_amount != null and y_cost_amount != ''">
																						y_cost_amount = #{y_cost_amount,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="remain_amoun != null and remain_amoun != ''">
																						remain_amoun = #{remain_amoun,jdbcType=INTEGER}
																						,
																						</if>
																						<if test="rate != null and rate != ''">
																						rate = #{rate,jdbcType=INTEGER}
																						,
																						</if>
																						
																						
																			</trim>
																					<where>                     
																									<if test="group_id != null and group_id != ''">
																									AND group_id = #{group_id,jdbcType=INTEGER}
																									</if>
																									<if test="hos_id != null and hos_id != ''">
																									AND hos_id = #{hos_id,jdbcType=INTEGER}
																									</if>
																									<if test="copy_code != null and copy_code != ''">
																									AND copy_code = #{copy_code,jdbcType=VARCHAR}
																									</if>
																									<if test="budg_year != null and budg_year != ''">
																									AND budg_year = #{budg_year,jdbcType=VARCHAR}
																									</if>
																				
																					</where>  
					</update>
					
					
					
				<select id="queryBudgProjDetailYear" resultMap="BudgProjDetailYear" parameterType="java.lang.Integer" >						
									SELECT 
									group_id,
									hos_id,
									copy_code,
									budg_year,
									proj_id,
									source_id,
									payment_item_id,
									b_budg_amount,
									b_cost_amount,
									b_remain_amoun,
									budg_amount,
									cost_amount,
									y_budg_amount,
									y_cost_amount,
									remain_amoun,
									rate
									FROM budg_proj_detail_year 
									
																<where>
																
																	   <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
																					<if test="item.group_id != null and item.group_id != ''">
																					 group_id = #{item.group_id,jdbcType=INTEGER}
																					</if>
																					<if test="item.hos_id != null and item.hos_id != ''">
																					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
																					</if>
																					<if test="item.copy_code != null and item.copy_code != ''">
																					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
																					</if>
																					
																		</foreach>
																		
																</where>
																			
			</select>
							
							
							
							
							
			<select id="query" parameterType="java.util.Map" resultMap="BudgProjDetailYear" >
				
								SELECT 
								group_id,
								hos_id,
								copy_code,
								budg_year,
								proj_id,
								source_id,
								payment_item_id,
								b_budg_amount,
								b_cost_amount,
								b_remain_amoun,
								budg_amount,
								cost_amount,
								y_budg_amount,
								y_cost_amount,
								remain_amoun,
								rate
								FROM BUDG_PROJ_DETAIL_YEAR 
															<where>                     
																		<if test="group_id != null and group_id != ''">
																		AND group_id = #{group_id,jdbcType=INTEGER}
																		</if>
																		<if test="hos_id != null and hos_id != ''">
																		AND hos_id = #{hos_id,jdbcType=INTEGER}
																		</if>
																		<if test="copy_code != null and copy_code != ''">
																		AND copy_code = #{copy_code,jdbcType=VARCHAR}
																		</if>
																		
															</where>  
															 
								order by group_id asc
								
				</select>
				
        <update id="updateBatch" parameterType="java.util.List">
	
			<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
				UPDATE budg_proj_detail_year     set
			      b_budg_amount = nvl(( 
			                  select nvl(b_budg_amount,0)+ nvl(budg_amount,0) from budg_proj_detail_year where 
			                  group_id=${item.group_id} and hos_id=${item.hos_id} and copy_code=${item.copy_code} and budg_year=${item.LAST_ACC_YEAR}
			                  and proj_id=${item.proj_id } and source_id=${item.source_id}  and payment_item_id=${item.payment_item_id} ),0)
			                              
			      ,
			      b_cost_amount = nvl(( 
			          select nvl(b_cost_amount,0) + nvl(cost_amount,0)  from budg_proj_detail_year where 
			          group_id=${item.group_id} and hos_id=${item.hos_id} and copy_code=${item.copy_code} and budg_year=${item.LAST_ACC_YEAR}
			               and proj_id=${item.proj_id } and source_id=${item.source_id} and payment_item_id=${item.payment_item_id} ),0) 
			where 
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND  hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>  
				<if test="item.payment_item_id != null and item.payment_item_id != ''">
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
				</if>  		
		</foreach>
	</update>
	
</mapper>