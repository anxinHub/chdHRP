<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.project.begin.BudgProjYearMapper">

		<resultMap id="BudgProjYear" type="com.chd.hrp.budg.entity.BudgProjYear">
		
			<result property="group_id" column="group_id"/>
			<result property="hos_id" column="hos_id"/>	
			<result property="copy_code" column="copy_code"/>
			<result property="budg_year" column="budg_year"/>	
			<result property="proj_id" column="proj_id"/>
			<result property="source_id" column="source_id"/>
		    <result property="b_budg_amount" column="b_budg_amount"/>
			<result property="b_in_amount" column="b_in_amount"/>
			<result property="b_cost_amount" column="b_cost_amount"/>
			<result property="b_remain_amoun" column="b_remain_amoun"/>
			<result property="budg_amount" column="budg_amount"/>
			<result property="in_amount" column="in_amount"/>
			<result property="cost_amount" column="cost_amount"/>
			<result property="t_budg_amount" column="t_budg_amount"/>
			<result property="t_in_amount" column="t_in_amount"/>
			<result property="t_cost_amount" column="t_cost_amount"/>
			<result property="usable_amount" column="usable_amount"/>
			<result property="remain_amoun" column="remain_amoun"/>
			<result property="rate" column="rate"/>
			
		</resultMap>
		<resultMap type="java.util.Map" id="budgProjYearMap">
		 <result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		 <result property="budg_year" column="budg_year"/>
		<result property="proj_id" column="proj_id"/>
		<result property="source_id" column="source_id"/>
		 <result property="b_remain_amoun" column="b_remain_amoun"/>
		<result property="b_usable_amount" column="b_usable_amount"/>
		<result property="budg_amount" column="budg_amount"/>
		<result property="in_amount" column="in_amount"/>
		<result property="cost_amount" column="cost_amount"/>
		<result property="remain_amount" column="remain_amount"/>						
		<result property="usable_amount" column="usable_amount"/>
		<result property="b_in_amount" column="b_in_amount"/>
		<result property="b_cost_amount" column="b_cost_amount"/>								
		<result property="b_remain_amount" column="b_remain_amount"/>
		<result property="t_budg_amount" column="t_budg_amount"/>
		<result property="t_in_amount" column="t_in_amount"/>								
		<result property="t_cost_amount" column="t_cost_amount"/>
		<result property="rate" column="rate"/>
		<result property="b_budg_amount" column="b_budg_amount"/>
		<result property="t_rate" column="t_rate"/>	
		<result property="remain_adj" column="remain_adj"/>		
		<result property="rate" column="rate"/>
									
		</resultMap>
								
		<resultMap type="java.util.Map" id="budgProjBegainYearDeatilMap">
	    <result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
	    <result property="budg_year" column="budg_year"/>
		<result property="proj_id" column="proj_id"/>
		<result property="source_id" column="source_id"/>		
	    <result property="payment_item_id" column="payment_item_id"/>
		<result property="b_budg_amount" column="b_budg_amount"/>
		<result property="b_cost_amount" column="b_cost_amount"/>
		<result property="b_remain_amoun" column="b_remain_amoun"/>
		<result property="budg_amount" column="budg_amount"/>
		<result property="cost_amount" column="cost_amount"/>						
	     <result property="y_budg_amount" column="y_budg_amount"/>
		<result property="y_cost_amount" column="y_cost_amount"/>
		<result property="remain_amoun" column="remain_amoun"/>										
		<result property="rate" column="rate"/>
		<result property="t_rate" column="t_rate"/>					
		</resultMap>	

					<insert id="addBatch" parameterType="java.util.List" >
					
										INSERT INTO BUDG_PROJ_YEAR (
													                    group_id
													                    ,
													                    hos_id
													                    ,
													                    copy_code
													                    ,
													                    budg_year
													                    ,
													                    proj_id
													                    ,
													                    source_id
													                    ,
													                    b_budg_amount
													                    ,
													                    b_in_amount
													                    ,
													                    b_cost_amount
													                    ,
													                    
													                    b_remain_amoun
													                    ,
													                    b_usable_amount,
													                    budg_amount
													                    ,
													                    in_amount
													                    ,
													                    cost_amount
													                    ,
													                    t_budg_amount
													                    ,
													                    t_in_amount
													                    ,
													                    t_cost_amount
													                    ,
													                    usable_amount
													                    ,
													                    remain_amount
													                    ,
													                  
													                    rate,
													                    t_rate,
													                    remain_adj
										 
						) select  t.* from(
								<foreach collection="list" item="item" index="index" separator=" union all " >
												select 		
												#{item.group_id,jdbcType=INTEGER}
												,
												#{item.hos_id,jdbcType=INTEGER}
												,
												#{item.copy_code,jdbcType=VARCHAR}
												,
												#{item.budg_year,jdbcType=VARCHAR}
												,
												#{item.proj_id,jdbcType=INTEGER}
												,
												#{item.source_id,jdbcType=INTEGER}
												,
												#{item.b_budg_amount,jdbcType=INTEGER}
												,
												#{item.b_in_amount,jdbcType=INTEGER}
												,
												#{item.b_cost_amount,jdbcType=INTEGER}
												,
												#{item.b_remain_amoun,jdbcType=INTEGER}
												,
												#{item.b_usable_amount,jdbcType=INTEGER}
												,
												#{item.budg_amount,jdbcType=INTEGER}
												,
												#{item.in_amount,jdbcType=INTEGER}
												,
												#{item.cost_amount,jdbcType=INTEGER}
												,
												#{item.t_budg_amount,jdbcType=INTEGER}
												,
												#{item.t_in_amount,jdbcType=INTEGER}
												,
												#{item.t_cost_amount,jdbcType=INTEGER}
												,
												#{item.usable_amount,jdbcType=INTEGER}
												,
												#{item.remain_amount,jdbcType=INTEGER}
												,
												#{item.rate,jdbcType=INTEGER}
												,
												#{item.t_rate,jdbcType=INTEGER}
												,
												#{item.remain_adj,jdbcType=INTEGER}
											    from dual
								</foreach>
								)t
					</insert>
					
					
					
				 
					
					
					<select id="queryByCode" resultMap="BudgProjYear"  parameterType="java.util.Map" >
			
									SELECT 
									group_id,
									hos_id,
									copy_code,
									budg_year,
									proj_id,
									source_id,
									b_budg_amount,
									b_in_amount,
									b_cost_amount,
									b_remain_amoun,
									budg_amount,
									in_amount,
									cost_amount,
									t_budg_amount,
									t_in_amount,
									t_cost_amount,
									usable_amount,
									remain_amount,
									rate
									FROM budg_proj_year 
														WHERE 
														group_id = #{group_id,jdbcType=INTEGER}   and 
														hos_id = #{hos_id,jdbcType=INTEGER}   and 
														copy_code = #{copy_code,jdbcType=VARCHAR}   and 
														budg_year = #{budg_year,jdbcType=VARCHAR}   and 
														proj_id = #{proj_id,jdbcType=INTEGER}   and 
														source_id = #{source_id,jdbcType=INTEGER} 
										
						</select>
						
						<update id="update" parameterType="java.util.Map">
			
										UPDATE budg_proj_year 
															<trim prefix="SET"  suffixOverrides=","> 
																		<if test="b_budg_amount != null and b_budg_amount != ''">
																		b_budg_amount = #{b_budg_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="b_in_amount != null and b_in_amount != ''">
																		b_in_amount = #{b_in_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="b_cost_amount != null and b_cost_amount != ''">
																		b_cost_amount = #{b_cost_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="b_remain_amoun != null and b_remain_amoun != ''">
																		b_remain_amoun = #{b_remain_amoun,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="budg_amount != null and budg_amount != ''">
																		budg_amount = #{budg_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="in_amount != null and in_amount != ''">
																		in_amount = #{in_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="cost_amount != null and cost_amount != ''">
																		cost_amount = #{cost_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="t_budg_amount != null and t_budg_amount != ''">
																		t_budg_amount = #{t_budg_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="t_in_amount != null and t_in_amount != ''">
																		t_in_amount = #{t_in_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="t_cost_amount != null and t_cost_amount != ''">
																		t_cost_amount = #{t_cost_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="usable_amount != null and usable_amount != ''">
																		usable_amount = #{usable_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="remain_amount != null and remain_amount != ''">
																		remain_amount = #{remain_amount,jdbcType=INTEGER}
																		,
																		</if>
																		<if test="rate != null and rate != ''">
																		rate = #{rate,jdbcType=INTEGER}
																		,
																		</if>
															</trim>
																			<where>                     
																					<if test="group_id != null and group_id != ''">
																					AND group_id = #{group_id,jdbcType=INTEGER}
																					</if>
																					<if test="hos_id != null and hos_id != ''">
																					AND hos_id = #{hos_id,jdbcType=INTEGER}
																					</if>
																					<if test="copy_code != null and copy_code != ''">
																					AND copy_code = #{copy_code,jdbcType=VARCHAR}
																					</if>
																					<if test="budg_year != null and budg_year != ''">
																					AND budg_year = #{budg_year,jdbcType=VARCHAR}
																					</if>
																		
																			</where>  
								</update>

								<select id="queryBudgProjYear" resultMap="BudgProjYear"  parameterType="java.lang.Integer">					
											SELECT 
											group_id,
											hos_id,
											copy_code,
											budg_year,
											proj_id,
											source_id,
											b_budg_amount,
											b_in_amount,
											b_cost_amount,
											b_remain_amoun,
											budg_amount,
											in_amount,
											cost_amount,
											t_budg_amount,
											t_in_amount,
											t_cost_amount,
											usable_amount,
											remain_amount,
											rate
											FROM budg_proj_year 
																	   <where>
																	   
																			   <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
																							
																							<if test="item.group_id != null and item.group_id != ''">
																							group_id = #{item.group_id,jdbcType=INTEGER}
																							</if>
																							<if test="item.hos_id != null and item.hos_id != ''">
																							AND hos_id = #{item.hos_id,jdbcType=INTEGER}
																							</if>
																							<if test="item.copy_code != null and item.copy_code != ''">
																							AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
																							</if>
																							
																				</foreach>
																				
																		</where>			 					    
							</select>
									
									
									
							<select id="query" parameterType="java.util.Map" resultMap="BudgProjYear" >
								
											SELECT 
											group_id,
											hos_id,
											copy_code,
											budg_year,
											proj_id,
											source_id,
											b_budg_amount,
											b_in_amount,
											b_cost_amount,
											b_remain_amoun,
											budg_amount,
											in_amount,
											cost_amount,
											t_budg_amount,
											t_in_amount,
											t_cost_amount,
											usable_amount,
											remain_amount,
											rate
											FROM BUDG_PROJ_YEAR 
																<where>                     
																			<if test="group_id != null and group_id != ''">
																			AND group_id = #{group_id,jdbcType=INTEGER}
																			</if>
																			<if test="hos_id != null and hos_id != ''">
																			AND hos_id = #{hos_id,jdbcType=INTEGER}
																			</if>
																			<if test="copy_code != null and copy_code != ''">
																			AND copy_code = #{copy_code,jdbcType=VARCHAR}
																			</if>
																			<if test="budg_year != null and budg_year != ''">
																			AND budg_year = #{budg_year,jdbcType=VARCHAR}
																			</if>
																			<if test="proj_id != null and proj_id != ''">
																			AND proj_id = #{proj_id,jdbcType=INTEGER}
																			</if>
																			<if test="source_id != null and source_id != ''">
																			AND source_id = #{source_id,jdbcType=VARCHAR}
																			</if>
																</where>   
											order by group_id asc
								</select>



	<select id="queryByProjIdOrSourceId" parameterType="java.util.Map" resultMap="budgProjYearMap">
			SELECT 
			   group_id,
		       hos_id,
		       copy_code,
		       budg_year,
		       proj_id,
		       source_id,
		       b_budg_amount,
		       nvl(b_in_amount,0) as b_in_amount ,
		       b_cost_amount,
		       b_remain_amoun,
		       budg_amount,
		       in_amount,
		       cost_amount,
		       t_budg_amount,
		       t_in_amount,
		       nvl(t_cost_amount,0) as t_cost_amount,
		       usable_amount,
		       remain_amount,
		       rate
			FROM budg_proj_year 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			budg_year = #{budg_year,jdbcType=VARCHAR}   and 
			proj_id = #{proj_id,jdbcType=INTEGER}   and 
			source_id = #{source_id,jdbcType=INTEGER} 
				
	</select>

								
								
  <update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_year  
			  set
			b_budg_amount =nvl(( 
									select nvl(b_budg_amount,0)+nvl(budg_amount,0)  from budg_proj_year where 
									group_id=${item.group_id} and hos_id=${item.hos_id} and copy_code=${item.copy_code} and budg_year=${item.LAST_ACC_YEAR}
									and proj_id=${item.proj_id } and source_id=${item.source_id}  ),0)
                              
			,
			
			b_in_amount =nvl(( 
                 select nvl(b_in_amount,0)+ nvl(in_amount,0)  from budg_proj_year where 
				  group_id=${item.group_id} and hos_id=${item.hos_id} and copy_code=${item.copy_code} and budg_year=${item.LAST_ACC_YEAR}
						  and proj_id=${item.proj_id } and source_id=${item.source_id}  ),0)
                      
			,
			
		
			b_cost_amount = nvl(( 
					select nvl(b_cost_amount,0) + nvl(cost_amount,0)  from budg_proj_year where 
					group_id=${item.group_id} and hos_id=${item.hos_id} and copy_code=${item.copy_code} and budg_year=${item.LAST_ACC_YEAR}
						   and proj_id=${item.proj_id } and source_id=${item.source_id} ),0) 
  
			
			                     
			where 
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND  hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>  
					
		</foreach>  
	</update>
	<select id="queryR" resultMap="budgProjYearMap">
					select 
					group_id   ,      
					hos_id         ,  
					copy_code       ,
					budg_year       ,
					proj_id         ,  
					source_id       , 
					b_budg_amount   ,
					b_in_amount     , 
					b_cost_amount   ,
					b_remain_amoun  ,
					b_usable_amount ,
					budg_amount     ,
					in_amount       ,
					cost_amount     ,
					t_budg_amount   ,
					t_in_amount     ,
					t_cost_amount   ,
					remain_amount   ,
					usable_amount   ,
					rate            ,
					t_rate         ,
					remain_adj      
	 from budg_proj_year
	            where 
	            group_id = #{group_id,jdbcType=INTEGER}
				AND  hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR} 
	</select>
	<select id="queryRDetail" resultMap="budgProjBegainYearDeatilMap">
					select 
				group_id      ,      <!--        ?  -->
				hos_id        , <!--   ?                医院id  -->  
				copy_code      ,  <!--    ?              账套编码  -->
				budg_year      ,  <!--    ?               预算年度  -->
				proj_id        ,  <!--    ?                 项目id   --> 
				source_id      ,  <!--     ?               资金来源id  -->
				payment_item_id  , <!--    ?                 支出项目id  -->
				 b_remain_amoun  ,     <!-- ?            期初预算余额  -->
				 budg_amount  ,   <!--   ?               预算金额  -->
				 cost_amount ,   <!--   ?                支出金额  -->
				 remain_amoun ,  <!--      ?            预算余额  -->
				 y_cost_amount ,  <!-- 支出金额累计  -->
				 y_budg_amount , <!-- 预算金额累计  -->
				 b_budg_amount , <!-- 期初预算金额 --> 
				 b_cost_amount ,  <!-- 期初支出金额 -->
				 rate          ,  <!-- 本年执行进度  -->
				 t_rate          <!-- 累计执行进度  -->
				from budg_proj_detail_year
		WHERE 
															
				group_id = #{group_id,jdbcType=INTEGER}   and 
				
				hos_id = #{hos_id,jdbcType=INTEGER}   and 
				
				copy_code = #{copy_code,jdbcType=VARCHAR} 
	            
				order by budg_year Asc 
	</select>
	<select id="queryTR" resultMap="budgProjYearMap">
					select 
					group_id   ,      
					hos_id         ,  
					copy_code       ,
					budg_year       ,
					proj_id         ,  
					source_id       , 
					b_budg_amount   ,
					b_in_amount     , 
					b_cost_amount   ,
					b_remain_amoun  ,
					b_usable_amount ,
					budg_amount     ,
					in_amount       ,
					cost_amount     ,
					t_budg_amount   ,
					t_in_amount     ,
					t_cost_amount   ,
					remain_amount   ,
					usable_amount   ,
					rate            ,
					t_rate         ,
					remain_adj      
	 from budg_proj_year
	            where 
	            group_id = #{group_id,jdbcType=INTEGER}
				AND  hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR} 
	</select>
		<select id="queryTRDetail" resultMap="budgProjBegainYearDeatilMap">
					select 
				group_id      ,      <!--        ?  -->
				hos_id        , <!--   ?                医院id  -->  
				copy_code      ,  <!--    ?              账套编码  -->
				budg_year      ,  <!--    ?               预算年度  -->
				proj_id        ,  <!--    ?                 项目id   --> 
				source_id      ,  <!--     ?               资金来源id  -->
				payment_item_id  , <!--    ?                 支出项目id  -->
				 b_remain_amoun  ,     <!-- ?            期初预算余额  -->
				 budg_amount  ,   <!--   ?               预算金额  -->
				 cost_amount ,   <!--   ?                支出金额  -->
				 remain_amoun ,  <!--      ?            预算余额  -->
				y_cost_amount ,  <!-- 支出金额累计  -->
				 y_budg_amount , <!-- 预算金额累计  -->
				b_budg_amount , <!-- 期初预算金额 --> 
				b_cost_amount ,  <!-- 期初支出金额 -->
				rate          ,  <!-- 本年执行进度  -->
				 t_rate          <!-- 累计执行进度  -->
				from budg_proj_detail_year
		WHERE 
															
				group_id = #{group_id,jdbcType=INTEGER}   and 
				
				hos_id = #{hos_id,jdbcType=INTEGER}   and 
				
				copy_code = #{copy_code,jdbcType=VARCHAR} 
	
				order by budg_year Asc 
	</select>
	<select id="queryProjYear" resultType="java.lang.Integer"  parameterType="java.util.Map">
					select 
					count(proj_id)
	 from budg_proj_year
	            where 
	            group_id = #{group_id,jdbcType=INTEGER}
				AND  hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR} 
	</select>
	<select id="queryProjYearDetail" resultType="java.lang.Integer"  parameterType="java.util.Map">
					select 
					count(proj_id)
	 from budg_proj_detail_year
	            where 
	            group_id = #{group_id,jdbcType=INTEGER}
				AND  hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR} 
	</select>
	<update id="updateBatcht" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_year  
			  set
			 t_budg_amount = b_budg_amount + budg_amount 
      		  ,
		       
		       t_in_amount = b_in_amount + in_amount
		       
		      ,
		       
		       t_cost_amount = b_cost_amount + cost_amount           
			where 
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND  hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>  
					
		</foreach>  
	</update>
	<update id="updateBatchDetailt" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_detail_year 
			  set
			 y_budg_amount = b_budg_amount + budg_amount 
      		  ,
		     y_cost_amount = b_cost_amount + cost_amount           
			where 
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND  hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>  
				<if test="item.payment_item_id != null and item.payment_item_id != ''">
				and payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
				</if> 	
		</foreach>  
	</update>
	<update id="updateBatchtr" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_year  
			set
			rate   = cost_amount/(b_remain_amoun + budg_amount)
		       ,
		    t_rate = t_cost_amount/t_budg_amount          
			where 
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND  hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>  
					
		</foreach>  
	</update>
	<update id="updateBatchtrDetail" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_detail_year  
			set
			rate   = cost_amount/(b_remain_amoun + budg_amount)
		       ,
		    t_rate = y_cost_amount/y_budg_amount          
			where 
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND  hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if> 
				 
				<if test="item.payment_item_id != null and item.payment_item_id != ''">
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
				</if> 	
		</foreach>  
	</update>
	<delete id="deleteBatch"   parameterType="java.util.List">
		DELETE FROM budg_proj_year 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>
				<if test="item.source_id != null and item.source_id != ''">
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				</if>
			</foreach>
	    </where>  
	</delete>
	<update id="updateProjBegainRemark" parameterType="java.util.Map">
	
		UPDATE budg_proj_begain_mark 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="state != null and state != ''">
		state = #{state,jdbcType=INTEGER}
		,
		</if>
		<if test="user_id != null and user_id != ''">
		user_id = #{user_id,jdbcType=INTEGER}
		,
		</if>
		<if test="mark_date != null and mark_date != ''">
		mark_date = #{mark_date,jdbcType=DATE}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
</mapper>