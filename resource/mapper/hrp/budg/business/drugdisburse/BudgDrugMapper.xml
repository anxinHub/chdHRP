<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.drugdisburse.BudgDrugMapper">
	
	<resultMap id="budgDrug" type="com.chd.hrp.budg.entity.BudgDrug">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="med_type_id" column="med_type_id"/>
	<result property="last_cost" column="last_cost"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="count_value" column="count_value"/>
	<result property="adj_rate" column="adj_rate"/>
	<result property="cost_budg" column="cost_budg"/>
	<result property="remark" column="remark"/>
	</resultMap>
		
	<resultMap id="budgDrugMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="med_type_id" column="med_type_id"/>
	<result property="med_type_code" column="med_type_code"/>
	<result property="med_type_name" column="med_type_name"/>
	<result property="last_cost" column="last_cost"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="count_value" column="count_value"/>
	<result property="adj_rate" column="adj_rate"/>
	<result property="cost_budg" column="cost_budg"/>
	<result property="remark" column="remark"/>
	<result property="subj_code" column="subj_code"/>
	<result property="budg_value" column="budg_value"/>
	<result property="amount" column="amount"/>
	<result property="income_value" column="income_value"/>
	<result property="execute_value" column="execute_value"/>
	</resultMap>
	
	<select id="queryInsertData" parameterType="java.util.Map" resultMap="budgDrugMap">
		  with temp as
			 (select income_subj_code
			    from budg_med_type_income
			   where group_id = #{group_id,jdbcType=INTEGER}
			     and hos_id = #{hos_id,jdbcType=INTEGER}
			     and copy_code = #{copy_code,jdbcType=VARCHAR}
			     and budg_year = #{budg_year,jdbcType=VARCHAR}),
			
		  temp2 as
			  (select bmidm.group_id,
			       bmidm.hos_id,
			       bmidm.copy_code,
			       bmidm.year,
			       bmidm.dept_id,
			       bmidm.month,
			       bmti.med_type_id,
			       nvl(sum(a.amount),0) as last_income,
			       sum(bmidm.budg_value)as income_budg,
			       case nvl(sum(a.amount),0) when 0 then 0 else round((sum(bmidm.budg_value)/nvl(sum(a.amount),0)-1)*100,2) end as grow_rate 
			  from budg_med_income_dept_month bmidm
			  left join BUDG_MED_INCOME_EXECUTE a
			  on   bmidm.group_id = a.group_id and
			       bmidm.hos_id = a.hos_id and
			       bmidm.copy_code = a.copy_code and
			       bmidm.year = a.year+1 and
			       bmidm.dept_id = a.dept_id and
			       bmidm.month = a.month and
			       a.subj_code in (select income_subj_code from temp)
			  left join budg_med_type_income bmti
			  on bmidm.group_id = bmti.group_id and
			       bmidm.hos_id = bmti.hos_id and
			       bmidm.copy_code = bmti.copy_code and
			       bmidm.year = bmti.budg_year and
			       bmidm.subj_code = bmti.income_subj_code
			 where bmidm.group_id = #{group_id,jdbcType=INTEGER}
			   and bmidm.hos_id = #{hos_id,jdbcType=INTEGER}
			   and bmidm.copy_code = #{copy_code,jdbcType=VARCHAR}
			   and bmidm.year = #{budg_year,jdbcType=VARCHAR}
			   and bmidm.subj_code in (select income_subj_code from temp)
			 group by bmidm.group_id,
			          bmidm.hos_id,
			          bmidm.copy_code,
			          bmidm.dept_id,
			          bmidm.year,
			          bmti.med_type_id,
			          bmidm.month )
		 select 
	         bcmc.group_id,
	         bcmc.hos_id,
	         bcmc.copy_code,
	         bcmc.year + 1 budg_year,
	         bcmc.month,
	         bcmc.dept_id,
	         bcmc.med_type_id,
	         nvl(bcmc.amount,0) last_cost,
	         nvl(temp2.grow_rate,0) grow_rate,
	         round(nvl(bcmc.amount,0) * ((100+nvl(grow_rate,0))/100),2) as count_value,
	         round(nvl(bcmc.amount,0) * ((100+nvl(grow_rate,0))/100),2) as cost_budg
	      from BUDG_DRUG_cost bcmc
	      left join temp2 
	        on bcmc.group_id = temp2.group_id
	        and bcmc.hos_id =  temp2.hos_id
	        and bcmc.copy_code =  temp2.copy_code
	        and bcmc.year+1 =  temp2.year
	        and bcmc.month =  temp2.month
	        and bcmc.dept_id =  temp2.dept_id
	        and bcmc.med_type_id = temp2.med_type_id
	        and bcmc.med_type_id in (
	         select 
	             med_type_id
	         from budg_med_type_subj
	         where group_id = #{group_id,jdbcType=INTEGER}
			     and hos_id = #{hos_id,jdbcType=INTEGER}
			     and copy_code = #{copy_code,jdbcType=VARCHAR}
			     and budg_year = #{budg_year,jdbcType=VARCHAR})
	      left join hos_dept_dict hdd
	        on bcmc.group_id = hdd.group_id
	       and bcmc.hos_id = hdd.hos_id
	       and bcmc.dept_id = hdd.dept_id
	       and hdd.is_stop = 0
	      left join acc_dept_attr ada
	        on hdd.group_id = ada.group_id
	       and hdd.hos_id = ada.hos_id
	       and hdd.dept_id = ada.dept_id
	       and ada.is_budg = 1
	      
	      where bcmc.group_id = #{group_id,jdbcType=INTEGER}
	       and bcmc.hos_id = #{hos_id,jdbcType=INTEGER}
	       and bcmc.copy_code = #{copy_code,jdbcType=VARCHAR}
	       and bcmc.year = #{budg_year}-1
	</select>
	
<!-- 	查询预算年度对应关系是否为空 -->
	<select id="queryIncomeSubj" parameterType="java.util.Map" resultType="java.lang.Integer">
		  select 
	      	count(med_type_id)
	      from budg_med_type_subj
	      where group_id = #{group_id}
	          and hos_id = #{hos_id}
	          and copy_code = #{copy_code}
	          and budg_year = #{budg_year}
	</select>
	
	<select id="querySubjCodebyYearOrMedTypeId" resultMap="budgDrugMap" parameterType="java.util.Map">
		select 
		   bcmc.group_id,
	       bcmc.hos_id,
	       bcmc.copy_code,
	       bcmc.year,
	       bcmc.month,
	       bcmc.dept_id,
	       bcmc.med_type_id,
	       nvl(bcmc.amount,0)
	    from BUDG_DRUG_COST bcmc
	    left join hos_dept_dict hdd
		    on bcmc.group_id = hdd.group_id
		   and bcmc.hos_id = hdd.hos_id
		   and bcmc.dept_id = hdd.dept_id
		   and hdd.is_stop = 0
	    left join acc_dept_attr ada
		    on hdd.group_id = ada.group_id
		   and hdd.hos_id = ada.hos_id
		   and hdd.dept_id = ada.dept_id
		   and ada.is_budg = 1
	    where bcmc.group_id = #{group_id}
		   and bcmc.hos_id = #{hos_id}
		   and bcmc.copy_code = #{copy_code}
		   and bcmc.year = #{budg_year}-1
		   and bcmc.med_type_id in (
		   select 
		       med_type_id
		    from budg_med_type_subj
		    where group_id = #{group_id}
		          and hos_id = #{hos_id}
		          and copy_code = #{copy_code}
		          and budg_year = #{budg_year})
	</select>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_DRUG (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			med_type_id
			<if test="last_cost != null  and last_cost != '' ">
			,
			last_cost
			</if>
			<if test="grow_rate != null  and grow_rate != '' ">
			,
			grow_rate
			</if>
			<if test="count_value != null  and count_value != '' ">
			,
			count_value
			</if>
			
			<if test="adj_rate != null and adj_rate != ''">
			,
			adj_rate
			
			</if>
			<if test="cost_budg != null and cost_budg != ''">
			,
			cost_budg
			</if>
			<if test="remark != null and remark != ''">
			,
			remark
			</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{med_type_id,jdbcType=INTEGER}
			
			<if test="last_cost != null and last_cost != '' ">
			,
			#{last_cost,jdbcType=INTEGER}
			</if>
			<if test="grow_rate != null and grow_rate != '' ">
			,
			#{grow_rate,jdbcType=INTEGER}
			</if>
			<if test=" count_value != null and count_value != '' ">
			,
			#{count_value,jdbcType=INTEGER}
			</if>
			<if test="adj_rate != null and adj_rate != ''">
			,
			#{adj_rate,jdbcType=INTEGER}
			
			</if>
			<if test="cost_budg != null and cost_budg != ''">
			,
			#{cost_budg,jdbcType=INTEGER}
			</if>
			<if test="remark != null and remark != ''">
			,
			#{remark,jdbcType=VARCHAR}
			</if>
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_DRUG (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			med_type_id
			,
			last_cost
			,
			grow_rate
			,
			count_value
			,
			adj_rate
			,
			cost_budg
			,
			remark
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.month,jdbcType=VARCHAR}
				,
				#{item.dept_id,jdbcType=INTEGER}
				,
				#{item.med_type_id,jdbcType=INTEGER}
				,
				#{item.last_cost,jdbcType=INTEGER}
				,
				#{item.grow_rate,jdbcType=INTEGER}
				,
				#{item.count_value,jdbcType=INTEGER}
				,
				#{item.adj_rate,jdbcType=INTEGER}
				,
				#{item.cost_budg,jdbcType=INTEGER}
				,
				#{item.remark,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	
	<insert id="generateAddBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_DRUG (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			med_type_id
			,
			last_cost
			,
			grow_rate
			,
			count_value
			,
			cost_budg
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.month,jdbcType=VARCHAR}
				,
				#{item.dept_id,jdbcType=INTEGER}
				,
				#{item.med_type_id,jdbcType=INTEGER}
				,
				#{item.last_cost,jdbcType=INTEGER}
				,
				#{item.grow_rate,jdbcType=INTEGER}
				,
				#{item.count_value,jdbcType=INTEGER}
				,
				#{item.cost_budg,jdbcType=INTEGER}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_DRUG 
		SET
			cost_budg = #{cost_budg,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
		WHERE                    
		    group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND med_type_id = #{med_type_id,jdbcType=INTEGER}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_DRUG 
			SET
				adj_rate = #{item.adj_rate,jdbcType=INTEGER},
				cost_budg = #{item.cost_budg,jdbcType=INTEGER},
				remark = #{item.remark,jdbcType=VARCHAR}
			where                     
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND med_type_id = #{item.med_type_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="budgDrugUpdateAdjRate" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_DRUG 
			SET
				grow_rate = #{item.grow_rate,jdbcType=INTEGER},
				count_value = #{item.count_value,jdbcType=INTEGER},
				adj_rate = #{item.adj_rate,jdbcType=INTEGER},
				cost_budg = #{item.cost_budg,jdbcType=INTEGER},
				remark = #{item.remark,jdbcType=VARCHAR}
			where                     
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND med_type_id = #{item.med_type_id,jdbcType=INTEGER}
			
		</foreach>
		
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_DRUG 
		WHERE                     
		group_id = #{group_id,jdbcType=INTEGER}
		
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		<if test="month != null and month != ''"> 
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''"> 
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_DRUG 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND med_type_id = #{item.med_type_id,jdbcType=INTEGER}
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgDrugMap" >
	
		SELECT 
			    bcm.group_id,
			    bcm.hos_id,
			    bcm.copy_code,
			    bcm.budg_year,
			    bcm.month,
			    bcm.dept_id,
			    hdd.dept_name,
			    bcm.med_type_id,
			    mtd.med_type_name,
			    bcm.last_cost,
			    bcm.grow_rate,
			    bcm.count_value,
			    bcm.adj_rate,
			    bcm.cost_budg,
			    bcm.remark
		    FROM BUDG_DRUG bcm
		    left join hos_dept_dict hdd
		    on bcm.group_id = hdd.group_id
			   and bcm.hos_id = hdd.hos_id
			   and bcm.dept_id = hdd.dept_id
			   and hdd.is_stop = 0 
			   and hdd.is_disable = 0 
		    left join med_type_dict mtd
		    on bcm.group_id = mtd.group_id
			   and bcm.hos_id = mtd.hos_id
			   and bcm.copy_code = mtd.copy_code
			   and bcm.med_type_id = mtd.med_type_id
			   and mtd.is_stop = 0
		WHERE                     
			 bcm.group_id = #{group_id,jdbcType=INTEGER}
			 AND  bcm.hos_id = #{hos_id,jdbcType=INTEGER}
			 AND  bcm.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="budg_year != null and budg_year != ''">
		AND  bcm.budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND  bcm.month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND  bcm.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND  bcm.med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		order by bcm.med_type_id， bcm.month asc
	</select>
	
	<select id="queryByCode" resultMap="budgDrugMap"  parameterType="java.util.Map" >
	
			SELECT 
			    bcm.group_id,
			    bcm.hos_id,
			    bcm.copy_code,
			    bcm.budg_year,
			    bcm.month,
			    bcm.dept_id,
			    hdd.dept_name,
			    bcm.med_type_id,
			    mtd.med_type_name,
			    bcm.last_cost,
			    bcm.grow_rate,
			    bcm.count_value,
			    bcm.adj_rate,
			    bcm.cost_budg,
			    bcm.remark
		    FROM BUDG_DRUG bcm
		    left join hos_dept_dict hdd
		    on bcm.group_id = hdd.group_id
			   and bcm.hos_id = hdd.hos_id
			   and bcm.dept_id = hdd.dept_id
			   and hdd.is_stop = 0 
			   and hdd.is_disable = 0 
		    left join med_type_dict mtd
		    on bcm.group_id = mtd.group_id
			   and bcm.hos_id = mtd.hos_id
			   and bcm.copy_code = mtd.copy_code
			   and bcm.med_type_id = mtd.med_type_id
			   and mtd.is_stop = 0
		WHERE 
		bcm.group_id = #{group_id,jdbcType=INTEGER}   and 
		bcm.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		bcm.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		bcm.budg_year = #{budg_year,jdbcType=VARCHAR}   and 
		bcm.month = #{month,jdbcType=VARCHAR}   and 
		bcm.dept_id = #{dept_id,jdbcType=INTEGER}   and 
		bcm.med_type_id = #{med_type_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgDrug"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		month,
		dept_id,
		med_type_id,
		last_cost,
		grow_rate,
		count_value,
		adj_rate,
		cost_budg,
		remark
		FROM BUDG_DRUG 
		where                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgDrug"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			month,
			dept_id,
			med_type_id,
			last_cost,
			grow_rate,
			count_value,
			adj_rate,
			cost_budg,
			remark
		FROM BUDG_DRUG 
		WHERE                     
		 	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
			AND med_type_id = #{med_type_id,jdbcType=INTEGER}
			</if>
		order by group_id asc
	</select>
	
	<resultMap type="java.util.Map" id="itemMap">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	<select id="queryHosDeptDict" resultMap="itemMap">
		
		select distinct hdd.dept_id as id,
		                hdd.dept_code || ' ' || hdd.dept_name as text
		  from HOS_DEPT_DICT hdd
		  left join ACC_DEPT_ATTR ada
		    on ada.group_id = hdd.group_id
		   and ada.hos_id = hdd.hos_id
		 where ada.is_budg = 1
		   and hdd.is_stop = 0
		   and hdd.is_last = 1
		   and hdd.group_id = #{group_id}
		   and hdd.hos_id = #{hos_id}
		   <if test="key != null and key != ''">
			and (
				hdd.dept_code like '${key}%' or
				hdd.dept_name like '%${key}%' or
				hdd.spell_code like '%${key}%' or
				hdd.wbx_code like '%${key}%'
			)
		</if>
		 order by id
				
	</select>
	
	<select id="queryBudgMedTypeSubj" resultMap="itemMap">
		select 
		  a.med_type_id id,
		  b.med_type_code||' '||b.med_type_name as text
		 from BUDG_MED_TYPE_SUBJ a
		left join MED_TYPE_DICT b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.med_type_id = b.med_type_id
		and b.is_stop = 0
		where a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		and a.budg_year = #{budg_year}
		<if test="key != null and key != ''">
			and (
				b.med_type_code like '${key}%' or
				b.med_type_name like '%${key}%' or
				b.spell_code like '%${key}%' or
				b.wbx_code like '%${key}%'
			)
		</if>
		order by id
	</select>
	
	<!-- 查询添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_DRUG
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND med_type_id = #{item.med_type_id,jdbcType=INTEGER}
		</foreach>
	</select>
	
	<!-- 根据 参数  查询收入预算、上年收入、上年同期支出  计算收入预算增长比例和计算值用 -->
	<select id="queryLastCostAndRate" parameterType="java.util.Map" resultMap="budgDrugMap" >
		
		with temp as(<!-- 科室月份医疗收入预算 与 药品分类 临时表 -->
			select a.group_id , a.hos_id , a.copy_code , a.year ,a.month ,a.dept_id , b.med_type_id , a.budg_value 
			
			from BUDG_MED_INCOME_DEPT_MONTH a
			left join BUDG_MED_TYPE_INCOME  b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.year = b.budg_year
				and a.subj_code = b.income_subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
				and a.month =  #{month,jdbcType=VARCHAR}
		),
		exeTemp as(<!--上年 医疗收入执行数据  与 药品分类 临时表  -->
			select a.group_id , a.hos_id , a.copy_code , a.year ,a.month ,a.dept_id , b.med_type_id , a.amount 
			
			from BUDG_MED_INCOME_EXECUTE a
			left join BUDG_MED_TYPE_INCOME  b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.year = b.budg_year
				and a.subj_code = b.income_subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = to_char(to_number(${year}) - 1)
				and a.month =  #{month,jdbcType=VARCHAR}
		)
		
		SELECT  
			bdc.amount as last_cost ,<!-- 上年同期支出 -->
			temp.budg_value income_value ,<!-- 收入预算（当前预算年度） -->
			t.amount execute_value<!-- 上年收入 -->
		FROM BUDG_DRUG_COST bdc
		left join temp 
			on
				bdc.group_id =  temp.group_id
				and bdc.hos_id = temp.hos_id
				and bdc.copy_code = temp.copy_code
				and bdc.year =  to_char(to_number(temp.year)-1)
				and bdc.month = temp.month
				and bdc.dept_id = temp.dept_id
				and bdc.med_type_id = temp.med_type_id
		left join exeTemp t
			on
				bdc.group_id =  t.group_id
				and bdc.hos_id = t.hos_id
				and bdc.copy_code = t.copy_code
				and bdc.year =t.year
				and bdc.month = t.month
				and bdc.dept_id = t.dept_id
				and bdc.med_type_id = t.med_type_id
		where   
			bdc.group_id = #{group_id,jdbcType=INTEGER}
			AND bdc.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bdc.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bdc.year = to_char(to_number(${year})-1)
			AND bdc.month = #{month,jdbcType=VARCHAR}
			AND bdc.dept_id = #{dept_id,jdbcType=INTEGER}
			AND bdc.med_type_id = #{med_type_id,jdbcType=INTEGER}
	</select>
	
</mapper>

