<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.compilationplan.budg.BudgWorkDeptYearMapper">
	
	<resultMap id="budgWorkDeptYear" type="com.chd.hrp.budg.entity.BudgWorkDeptYear">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="index_code" column="index_code"/>
	<result property="dept_id" column="dept_id"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="grow_value" column="grow_value"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_workload" column="last_year_workload"/>
	<result property="state" column="state"/>
	<result property="reason" column="reason"/>
	<result property="refer_value" column="refer_value"/>
	<result property="reference_years" column="reference_years"/>
	<result property="resolve_data" column="resolve_data"/>
	</resultMap>
		
	<resultMap id="budgWorkDeptYearMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="index_code" column="index_code"/>
	<result property="index_name" column="index_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="grow_value" column="grow_value"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_workload" column="last_year_workload"/>
	<result property="state" column="state"/>
	<result property="reason" column="reason"/>
	<result property="refer_value" column="refer_value"/>
	<result property="yearValue" column="yearValue"/>
	<result property="resolve_way" column="resolve_way"/>
	<result property="reference_years" column="reference_years"/>
	<result property="sumValue" column="sumValue"/>
	<result property="sumLastWorkload" column="sumLastWorkload"/>
	<result property="resolve_data" column="resolve_data"/>
	<result property="get_way" column="get_way"/>
	
	<result property="formula_id" column="formula_id"/>
	<result property="fun_id" column="fun_id"/>
	</resultMap>
	
	<resultMap id="deptMap" type="java.util.Map">
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	</resultMap>
	
	<resultMap id="selectMap" type="java.util.Map">
	<result property="id" column="id"/>
	<result property="text" column="text"/>
	</resultMap>
	
	<resultMap id="itemMap" type="java.util.Map">
	<result property="measure_name" column="measure_name"/>
	<result property="count_value" column="count_value"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_WORK_DEPT_YEAR (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			index_code
			,
			dept_id
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			grow_value
			,
			resolve_rate
			,
			last_year_workload
			,
			state
			,
			reason
			,
			refer_value
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{index_code,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{count_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{grow_value,jdbcType=INTEGER}
			,
			#{resolve_rate,jdbcType=INTEGER}
			,
			#{last_year_workload,jdbcType=INTEGER}
			,
			#{state,jdbcType=VARCHAR}
			,
			#{reason,jdbcType=VARCHAR}
			,
			#{refer_value,jdbcType=INTEGER}
			
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_WORK_DEPT_YEAR (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			index_code
			,
			dept_id
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			grow_value
			,
			resolve_rate
			,
			last_year_workload
			,
			state
			,
			reason
			,
			refer_value
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.index_code,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.count_value,jdbcType=INTEGER}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.grow_rate,jdbcType=INTEGER}
			,
			#{item.grow_value,jdbcType=INTEGER}
			,
			#{item.resolve_rate,jdbcType=INTEGER}
			,
			#{item.last_year_workload,jdbcType=INTEGER}
			,
			#{item.state,jdbcType=VARCHAR}
			,
			#{item.reason,jdbcType=VARCHAR}
			,
			#{item.refer_value,jdbcType=INTEGER}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE budg_work_dept_year set
			count_value = #{count_value,jdbcType=INTEGER}
			,
			budg_value = #{budg_value,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			grow_rate = #{grow_rate,jdbcType=INTEGER}
			,
			grow_value = #{grow_value,jdbcType=INTEGER}
			,
			resolve_rate = #{resolve_rate,jdbcType=INTEGER}
			,
			last_year_workload = #{last_year_workload,jdbcType=INTEGER}
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
		
			AND index_code = #{index_code,jdbcType=VARCHAR}
		
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_dept_year set
				count_value = #{item.count_value,jdbcType=INTEGER}
				,
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
				,
				grow_value = #{item.grow_value,jdbcType=INTEGER}
				,
				resolve_rate = #{item.resolve_rate,jdbcType=INTEGER}
				,
				last_year_workload = #{item.last_year_workload,jdbcType=INTEGER}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND year = #{item.year,jdbcType=VARCHAR}
				
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
					
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_work_dept_year 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND index_code = #{index_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_work_dept_year 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		SELECT 
			bwdy.group_id,
			bwdy.hos_id,
			bwdy.copy_code,
			bwdy.year,
			bwdy.index_code,
			bid.index_name,
			bwdy.dept_id,
			hdd.dept_code ,
			hdd.dept_name ,
			bwdy.count_value,
			bwdy.budg_value,
			bwdy.remark,
			bwdy.grow_rate,
			bwdy.grow_value,
			bwdy.resolve_rate,
			bwdy.last_year_workload,
			bwdy.state,
			bwdy.reason,
			bwdy.refer_value,
			bwep.resolve_way ,
			bwep.get_way ,
			bwep.formula_id ,
			bwep.fun_id
		FROM BUDG_WORK_DEPT_YEAR bwdy
		Left join BUDG_WORK_EDIT_PLAN bwep
			ON
				bwdy.group_id  = bwep.group_id
				and bwdy.hos_id  = bwep.hos_id
				and bwdy.copy_code  = bwep.copy_code
				and bwdy.year  = bwep.budg_year
				and bwdy.index_code  = bwep.index_code
				and bwep.budg_level = '03'
		Left join BUDG_INDEX_DICT bid
			ON
				bwdy.group_id  = bid.group_id
				and bwdy.hos_id  = bid.hos_id
				and bwdy.copy_code  = bid.copy_code
				and bwdy.index_code  = bid.index_code
				and bid.is_stop  = 0
		Left join HOS_DEPT_DICT hdd
			ON
				bwdy.group_id  = hdd.group_id
				and bwdy.hos_id  = hdd.hos_id
				and bwdy.dept_id  = hdd.dept_id
				and hdd.is_stop = 0	
		where                     
			bwdy.group_id = #{group_id,jdbcType=INTEGER}
			AND bwdy.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bwdy.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND bwdy.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND bwdy.index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND bwdy.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != '' and state != '04'">
			AND bwdy.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="state == '04'">
			AND bwdy.state is null
			</if>
			<if test="budg_level != null and budg_level != ''">
			AND bwep.budg_level = #{budg_level,jdbcType=VARCHAR}
			</if>
			<if test="edit_method != null and edit_method != ''">
			AND bwep.edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
	<!-- <if test="budg_level == null and edit_method == null">
	union all 
	
			SELECT null , null , null,'合计' ,null ,null , null ,null ,null ,null , sum(bwdy.count_value),
				sum(bwdy.budg_value),null,null,null,sum(bwdy.resolve_rate),null ,null ,null ,null,null,null,null
			FROM BUDG_WORK_DEPT_YEAR bwdy
		where                    
			bwdy.group_id = #{group_id,jdbcType=INTEGER}
			AND bwdy.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bwdy.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND bwdy.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND bwdy.index_code = #{index_code,jdbcType=VARCHAR}
			</if> 
		group by bwdy.group_id , bwdy.hos_id , bwdy.copy_code , bwdy.year , bwdy.index_code 
	</if>   -->
		order by bwdy.index_code asc,hdd.dept_code asc
	</select>
	
	<!-- 查询数据  预算分解页面 -->
	<select id="queryBudgWorkDeptYearResolve" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		SELECT 
			bwdy.group_id,
			bwdy.hos_id,
			bwdy.copy_code,
			bwdy.year,
			bwdy.index_code,
			bid.index_name,
			bwdy.dept_id,
			hdd.dept_code ,
			hdd.dept_name ,
			bwhy.budg_value  yearValue,
			bwdy.count_value,
			bwdy.budg_value,
			bwdy.remark,
			bwdy.grow_rate,
			bwdy.grow_value,
			bwdy.resolve_rate,
			bwdy.last_year_workload,
			bwdy.state,
			bwdy.reason,
			bwdy.refer_value,
			bwep.resolve_way ,
			bwep.get_way
		FROM BUDG_WORK_DEPT_YEAR bwdy
		Left join BUDG_WORK_HOS_YEAR bwhy
			ON
				bwdy.group_id  = bwhy.group_id
				and bwdy.hos_id  = bwhy.hos_id
				and bwdy.copy_code  = bwhy.copy_code
				and bwdy.year  = bwhy.year
				and bwdy.index_code  = bwhy.index_code
		Left join BUDG_WORK_EDIT_PLAN bwep
			ON
				bwdy.group_id  = bwep.group_id
				and bwdy.hos_id  = bwep.hos_id
				and bwdy.copy_code  = bwep.copy_code
				and bwdy.year  = bwep.budg_year
				and bwdy.index_code  = bwep.index_code
				and bwep.budg_level = '03'
		Left join BUDG_INDEX_DICT bid
			ON
				bwdy.group_id  = bid.group_id
				and bwdy.hos_id  = bid.hos_id
				and bwdy.copy_code  = bid.copy_code
				and bwdy.index_code  = bid.index_code
				and bid.is_stop  = 0
		Left join HOS_DEPT_DICT hdd
			ON
				bwdy.group_id  = hdd.group_id
				and bwdy.hos_id  = hdd.hos_id
				and bwdy.dept_id  = hdd.dept_id
				and hdd.is_stop = 0	
		where                     
			bwdy.group_id = #{group_id,jdbcType=INTEGER}
			AND bwdy.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bwdy.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND bwdy.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND bwdy.index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND bwdy.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="budg_level != null and budg_level != ''">
			AND bwep.budg_level = #{budg_level,jdbcType=VARCHAR}
			</if>
			<if test="edit_method != null and edit_method != ''">
			AND bwep.edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
	
	</select>
	
	<select id="queryByCode" resultMap="budgWorkDeptYear"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			index_code,
			dept_id,
			count_value,
			budg_value,
			remark,
			grow_rate,
			grow_value,
			resolve_rate,
			last_year_workload,
			state,
			reason,
			refer_value
		FROM budg_work_dept_year 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		index_code = #{index_code,jdbcType=VARCHAR}   and 
		dept_id = #{dept_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgWorkDeptYear"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			index_code,
			dept_id,
			count_value,
			budg_value,
			remark,
			grow_rate,
			grow_value,
			resolve_rate,
			last_year_workload,
			state,
			reason,
			refer_value
		FROM BUDG_WORK_DEPT_YEAR 
		WHERE                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgWorkDeptYear"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			index_code,
			dept_id,
			count_value,
			budg_value,
			remark,
			grow_rate,
			grow_value,
			resolve_rate,
			last_year_workload,
			state,
			reason,
			refer_value
		FROM BUDG_WORK_DEPT_YEAR 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 查询 所传 科室的 上年业务量 -->
	<select id="queryDeptYearLastYearWork" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		with temp as(
			select 
				a.group_id , a.hos_id , a.copy_code , a.year , 
				a.dept_id , a.index_code , a.execute_value , b.dept_code
			FROM BUDG_WORK_DEPT_EXECUTE_YEAR a
			left join hos_dept_dict b
				on	
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.dept_id = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
		)
	
		SELECT   sum(nvl(execute_value,0))  as last_year_workload	FROM temp
		where    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND index_code = #{index_code,jdbcType=VARCHAR}
			AND dept_code like '${dept_code}%'
	</select>
	
	
	<!-- 查询指标编码的  取值方法 -->
	<select id="queryGetWay" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		SELECT  get_way 	FROM BUDG_WORK_EDIT_PLAN
		<where>    
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="budg_year != null and budg_year != ''">
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="budg_level != null and budg_level != ''">
			AND budg_level = #{budg_level,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="edit_method != null and edit_method != ''">
			AND edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 查询 所选年度、指标 的 所有科室上年业务量 总和 -->
	<select id="querySumLastYearWork" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		SELECT  sum(nvl(execute_value,0)) as sumLastWorkload	FROM BUDG_WORK_DEPT_EXECUTE_YEAR
		<where>    
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND  year between ${year} - (select reference_years 
                                 from budg_work_edit_plan 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
									AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND budg_level ='03'
                                    AND index_code = #{index_code,jdbcType=VARCHAR}) and ${year} - 1
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
		</where>  
		group by group_id , hos_id ,copy_code , index_code  
	</select>
	
	
	<!-- 查询 所选年度、指标 的 所有科室 数量 -->
	<select id="queryIndexDeptCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
	
		SELECT  count( dept_id )	FROM BUDG_INDEX_DEPT_SET
		<where>    
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</select>
	
	<!-- 计算时 查询计算的数据 -->
	<select id="queryCollectData" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
		WITH temp as(
			select a.group_id ,a.hos_id , a.copy_code ,  a.dept_id , hdd.dept_code , a.index_code , sum(a.execute_value) sumValue
			FROM BUDG_WORK_DEPT_EXECUTE_YEAR a
			left join hos_dept_dict hdd
				on
					a.group_id  = hdd.group_id
					and a.hos_id = hdd.hos_id
					and a.dept_id = hdd.dept_id
					and hdd.is_stop = 0 
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.index_code =  #{index_code,jdbcType=VARCHAR}
				and a.year between ${year} - (select reference_years 
                                 from budg_work_edit_plan 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
									AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND budg_level ='03'
                                    AND index_code = #{index_code,jdbcType=VARCHAR}) and ${year} - 1
           group by a.group_id ,a.hos_id , a.copy_code ,  a.dept_id , hdd.dept_code , a.index_code 
		) 
		select t.group_id ,	t.group_id,	t.hos_id, t.copy_code, t.year,	t.index_code, t.index_name,
				t.dept_id, t.dept_code , t.dept_name , t.yearValue, t.count_value, t.budg_value,
				t.remark, t.grow_rate, t.grow_value, t.resolve_rate, t.last_year_workload, t.state,
				t.reason, t.refer_value, t.resolve_way , t.reference_years, t.resolve_data , 
				sum(nvl(temp.sumValue ,0)) sumValue from (
					SELECT 
						bwdy.group_id,
						bwdy.hos_id,
						bwdy.copy_code,
						bwdy.year,
						bwdy.index_code,
						bid.index_name,
						bwdy.dept_id,
						hdd.dept_code ,
						hdd.dept_name ,
						bwhy.budg_value  yearValue,
						nvl(bwdy.count_value,0) count_value,
						nvl(bwdy.budg_value,0) budg_value,
						bwdy.remark,
						nvl(bwdy.grow_rate,0) grow_rate,
						nvl(bwdy.grow_value,0) grow_value,
						nvl(bwdy.resolve_rate,0) resolve_rate,
						nvl(bwdy.last_year_workload ,0) last_year_workload,
						bwdy.state,
						bwdy.reason,
						nvl(bwdy.refer_value,0) refer_value,
						bwep.resolve_way ,
						bwep.reference_years,
						bwep.resolve_data
					FROM BUDG_WORK_DEPT_YEAR bwdy
					Left join BUDG_WORK_HOS_YEAR bwhy
						ON
							bwdy.group_id  = bwhy.group_id
							and bwdy.hos_id  = bwhy.hos_id
							and bwdy.copy_code  = bwhy.copy_code
							and bwdy.year  = bwhy.year
							and bwdy.index_code  = bwhy.index_code
					Left join BUDG_WORK_EDIT_PLAN bwep
						ON
							bwdy.group_id  = bwep.group_id
							and bwdy.hos_id  = bwep.hos_id
							and bwdy.copy_code  = bwep.copy_code
							and bwdy.year  = bwep.budg_year
							and bwdy.index_code  = bwep.index_code
							and bwep.budg_level = '03'
					Left join BUDG_INDEX_DICT bid
						ON
							bwdy.group_id  = bid.group_id
							and bwdy.hos_id  = bid.hos_id
							and bwdy.copy_code  = bid.copy_code
							and bwdy.index_code  = bid.index_code
							and bid.is_stop  = 0
					Left join HOS_DEPT_DICT hdd
						ON
							bwdy.group_id  = hdd.group_id
							and bwdy.hos_id  = hdd.hos_id
							and bwdy.dept_id  = hdd.dept_id
							and hdd.is_stop = 0	
					where                     
						bwdy.group_id = #{group_id,jdbcType=INTEGER}
						AND bwdy.hos_id = #{hos_id,jdbcType=INTEGER}
						AND bwdy.copy_code = #{copy_code,jdbcType=VARCHAR}
						AND bwdy.year = #{year,jdbcType=VARCHAR}
						<!-- 预算层次（budg_level）  01医院年度  02医院月份 03科室年度  04科室月份 	 只查 预算层次 为  03科室年度 的数据 -->
						and bwep.budg_level = '03'
						<if test="index_code != null and index_code != ''">
						AND bwdy.index_code = #{index_code,jdbcType=VARCHAR}
						</if>
						<if test="dept_id != null and dept_id != ''">
						AND bwdy.dept_id = #{dept_id,jdbcType=INTEGER}
						</if>
						<!-- 是否独立核算（IS_SINGLE_COUNT）：0否，1是   计算时查询  非独立核算数据 条件-->
						<if test="is_single_count  == 0 ">
							and bwep.is_single_count = 0
						</if>
		) t
		left join temp 
			on
				t.group_id  = temp.group_id
				and t.hos_id  = temp.hos_id
				and t.copy_code  = temp.copy_code
				and temp.dept_code  like (t.dept_code || '%') 
				and t.index_code  = temp.index_code
		group by t.group_id ,	t.group_id,	t.hos_id, t.copy_code, t.year,	t.index_code, t.index_name,
				t.dept_id, t.dept_code , t.dept_name , t.yearValue, t.count_value, t.budg_value,
				t.remark, t.grow_rate, t.grow_value, t.resolve_rate, t.last_year_workload, t.state,
				t.reason, t.refer_value, t.resolve_way , t.reference_years, t.resolve_data
	</select>
	
	<!-- 根据主键 查询数据是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(index_code) FROM BUDG_WORK_DEPT_YEAR 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 根据 指标编码、 科室编码 查询  预算指标对应科室  -->
	<select id="queryIndexDeptSet" resultMap="deptMap"  parameterType="java.util.Map" >
	
		SELECT bids.dept_id , hd.dept_code
		FROM BUDG_INDEX_DEPT_SET bids
		LEFT join hos_dept hd
			on
				bids.group_id = hd.group_id
				and bids.hos_id = hd.hos_id
				and bids.dept_id = hd.dept_id
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND bids.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND bids.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND bids.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND bids.index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_code != null and dept_code != ''">
			AND hd.dept_code = #{dept_code,jdbcType=INTEGER}
			</if>
		</where>   
		order by index_code asc
	</select>
	
	<!-- 生成运营尺度数据 -->
	<select id="queryProbBudgRate" parameterType="java.util.Map" resultMap="itemMap" >
	
		SELECT  measure_name , 0 as count_value FROM BUDG_OPERATION_MEASURE
		where    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 自下而上 科室年度业务预算查询 -->
	<select id="queryBudgWorkDeptYearDown" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		SELECT 
			bwdy.group_id,
			bwdy.hos_id,
			bwdy.copy_code,
			bwdy.year,
			bwdy.index_code,
			bid.index_name,
			bwdy.dept_id,
			hdd.dept_code ,
			hdd.dept_name ,
			bwhy.budg_value  yearValue,
			bwdy.count_value,
			bwdy.budg_value,
			bwdy.remark,
			bwdy.grow_rate,
			bwdy.grow_value,
			bwdy.resolve_rate,
			bwdy.last_year_workload,
			bwdy.state,
			bwdy.reason,
			bwdy.refer_value,
			bwep.resolve_way
		FROM BUDG_WORK_DEPT_YEAR bwdy
		Left join BUDG_WORK_HOS_YEAR bwhy
			ON
				bwdy.group_id  = bwhy.group_id
				and bwdy.hos_id  = bwhy.hos_id
				and bwdy.copy_code  = bwhy.copy_code
				and bwdy.year  = bwhy.year
				and bwdy.index_code  = bwhy.index_code
		Left join BUDG_WORK_EDIT_PLAN bwep
			ON
				bwdy.group_id  = bwep.group_id
				and bwdy.hos_id  = bwep.hos_id
				and bwdy.copy_code  = bwep.copy_code
				and bwdy.year  = bwep.budg_year
				and bwdy.index_code  = bwep.index_code
				and bwep.budg_level = '03'
		Left join BUDG_INDEX_DICT bid
			ON
				bwdy.group_id  = bid.group_id
				and bwdy.hos_id  = bid.hos_id
				and bwdy.copy_code  = bid.copy_code
				and bwdy.index_code  = bid.index_code
				and bid.is_stop  = 0
		Left join HOS_DEPT_DICT hdd
			ON
				bwdy.group_id  = hdd.group_id
				and bwdy.hos_id  = hdd.hos_id
				and bwdy.dept_id  = hdd.dept_id
				and hdd.is_stop = 0	
		<where>                     
			bwdy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bwdy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bwdy.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND bwdy.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND bwdy.index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND bwdy.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != '' and state != '04'">
			AND bwdy.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="state == '04'">
			AND bwdy.state is null
			</if>
			<if test="budg_level != null and budg_level != ''">
			AND bwep.budg_level = #{budg_level,jdbcType=VARCHAR}
			</if>
			<if test="edit_method != null and edit_method != ''">
			AND bwep.edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="queryData" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
	
		SELECT 
			bwep.group_id,
			bwep.hos_id,
			bwep.copy_code,
			bwep.budg_year year,
			bwep.index_code,
			bids.dept_id ,
			hdd.dept_code
		FROM BUDG_WORK_EDIT_PLAN bwep
		
		Left join BUDG_INDEX_DEPT_SET bids
			ON
				bwep.group_id  = bids.group_id
				and bwep.hos_id  = bids.hos_id
				and bwep.copy_code  = bids.copy_code
				and bwep.index_code  = bids.index_code
		Left join HOS_DEPT_DICT hdd
			ON
				bids.group_id  = hdd.group_id
				and bids.hos_id  = hdd.hos_id
				and bids.dept_id  = hdd.dept_id
				and hdd.is_stop = 0	
		where                     
			bwep.group_id = #{group_id,jdbcType=INTEGER}
			AND bwep.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bwep.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bwep.budg_year = #{budg_year,jdbcType=VARCHAR}
			AND bwep.budg_level = #{budg_level,jdbcType=VARCHAR}
			<if test="edit_method != null and edit_method != '' ">
			AND bwep.edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
			and not exists (
				select 1 from BUDG_WORK_DEPT_YEAR a
				where a.group_id = bwep.group_id
					and a.hos_id = bwep.hos_id
					and a.copy_code = bwep.copy_code
					and a.index_code = bwep.index_code
					and a.dept_id = bids.dept_id
			)
	</select>
	
	<!-- 指标下拉框  -->
	<select id="queryBudgIndex" resultMap="selectMap">
		select distinct	bwep.index_code id ,
			bid.index_name text 
		from BUDG_WORK_EDIT_PLAN bwep
		LEFT JOIN BUDG_INDEX_DICT bid
			ON
				bwep.group_id = bid.group_id
				and bwep.hos_id = bid.hos_id
				and bwep.copy_code = bid.copy_code
				and bwep.index_code = bid.index_code
		where
			bwep.group_id = #{group_id,jdbcType=INTEGER}
			AND bwep.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bwep.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bwep.budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="budg_level != null and budg_level != ''">
			AND bwep.budg_level = #{budg_level,jdbcType=VARCHAR}
			</if>
			<if test="edit_method != null and edit_method != ''">
			AND bwep.edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
			<if test="key != null and key != ''">
				and (	bwep.index_code like '${key}%' or
					bid.index_name like '%${key}%' or
					bid.spell_code like '%${key}%' or
					bid.wbx_code like '%${key}%' 
				)
			</if>
		order by bwep.index_code
	</select>
	
	<!-- 根据指标查询相应科室下拉框 -->
	<select id="queryBudgIndexDeptSet" resultMap="selectMap">
		select bids.dept_id ||','|| hd.dept_code id,
			hd.dept_name text
		from BUDG_INDEX_DEPT_SET bids
		left join hos_dept hd
			ON
				bids.group_id  = hd.group_id 
				and bids.hos_id  = hd.hos_id 
				and bids.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	where
			bids.group_id = #{group_id}
			and bids.hos_id = #{hos_id}
			and bids.copy_code = #{copy_code}
			and bids.index_code = #{index_code}
			<if test="key != null and key != ''">
				and (
					hd.dept_code like '${key}%' or
					hd.dept_name like '%${key}%' or
					hd.spell_code like '%${key}%' or
					hd.wbx_code like '%${key}%'
				)
			</if>
		order by hd.dept_code	
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_WORK_DEPT_YEAR
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 增长比例获取 -->
	<select id="getGrowRate" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
		with baseData as ( <!-- 科室年度 末级科室 指标 执行数 临时表 -->
			select a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , b.dept_code , a.index_code  , 
				a.execute_value
			from budg_work_dept_execute_year a
			left join hos_dept_dict b
				on 
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.dept_id = b.dept_id 
					and b.is_stop = 0
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year between #{start_year,jdbcType=VARCHAR} and #{end_year,jdbcType=VARCHAR}
		),
		budgDept as( <!-- 预算科室 信息 临时表   -->
			select a.group_id , a.hos_id , a.dept_id , b.dept_code 
			from acc_dept_attr a
			left join hos_dept_dict b
				on 
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.dept_id = b.dept_id 
					and b.is_stop = 0
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.is_budg = 1
		),
		budgData as( <!-- 科室年度 预算科室 指标 执行数 临时表 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , a.dept_id , b.index_code , 
					sum(b.execute_value) execute_value
			from budgDept a
			left join baseData b
				on 
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by a.group_id , a.hos_id , b.copy_code , b.year , a.dept_id , b.index_code
		),
		t as (
			select a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id ,  a.index_code  , 
				case nvl(b.execute_value,0) when 0 then 0 else round((nvl(a.execute_value,0)-nvl(b.execute_value,0))/nvl(b.execute_value,0)*100,2) end grow_rate
			from budgData a
			
			left join budgData b
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and a.year = to_char(to_number(b.year)+1)
					and a.index_code = b.index_code
					and a.dept_id = b.dept_id
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND b.year between #{start_year,jdbcType=VARCHAR} and #{end_year,jdbcType=VARCHAR}
		),
		temp as(
			
			select group_id , hos_id , copy_code , index_code , dept_id ,  avg(grow_rate) grow_rate
			from t
			where 
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			group by group_id , hos_id , copy_code , index_code , dept_id
		)
		
		select a.year , a.index_code , b.index_name, a.dept_id ,hdd.dept_code , hdd.dept_name , temp.grow_rate
	    from budg_work_dept_year a
	    Left join BUDG_WORK_EDIT_PLAN bwep 
			ON a.group_id = bwep.group_id
				and a.hos_id = bwep.hos_id
				and a.copy_code = bwep.copy_code
				and a.year = bwep.budg_year
				and a.index_code = bwep.index_code
				AND bwep.budg_level = '03'
		left join temp 
	         on
	              a.group_id = temp.group_id
	              and a.hos_id = temp.hos_id
	              and a.copy_code = temp.copy_code
	              and a.index_code = temp.index_code
	              and a.dept_id = temp.dept_id
	     LEFT JOIN  BUDG_INDEX_DICT b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.index_code = b.index_code
		 LEFT JOIN  hos_dept_dict hdd
			on
				a.group_id = hdd.group_id
				and a.hos_id = hdd.hos_id
				and a.dept_id = hdd.dept_id
				and hdd.is_stop = 0
	     where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.year = #{year,jdbcType=VARCHAR}
			AND bwep.edit_method = '02'
			and bwep.get_way = '04'
	</select>
	
	<!-- 科室年度业务预算增量预算  更新 增长比例 及相关数据数据 -->
	<update id="updateGrowRate" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_dept_year  set
				count_value = last_year_workload* (1+to_number(${item.grow_rate})/100)
				,
				budg_value = last_year_workload * (1+to_number(${item.grow_rate})/100)
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 根据 科室、自定义分解系数 计算分解比例(科室年) -->
	<select id="queryResolveDataRate" parameterType="java.util.Map" resultMap="budgWorkDeptYearMap" >
		with temp as(
			SELECT  group_id , hos_id ,copy_code , resolve_data_code ,sum(nvl(value,0)) sumValue	
			FROM BUDG_RESOLVE_DATA_DY
			where    
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			group by group_id , hos_id ,copy_code , resolve_data_code	
		)
		
		select case temp.sumValue when 0 then null else nvl(a.value,0)/ temp.sumValue end resolve_rate
		
		FROM BUDG_RESOLVE_DATA_DY a
		left join temp
			on 
				a.group_id = temp.group_id
				and a.hos_id = temp.hos_id
				and a.copy_code = temp.copy_code
				and a.resolve_data_code = temp.resolve_data_code
		where    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据主键 查询数据状态 -->
	<select id="queryState" resultType="string"  parameterType="java.util.Map" >
	
		SELECT state FROM BUDG_WORK_DEPT_YEAR 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND index_code = #{index_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	</select>
	
	<!-- 下发 撤回 更新数据 -->
	<update id="issuedOrRetractUpdate" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_dept_year set
				state = #{item.state,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 确认  更新数据 -->
	<update id="passOrDisPassUpdate" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_dept_year set
				reason = #{item.reason,jdbcType=VARCHAR},
				refer_value = #{item.refer_value,jdbcType=INTEGER},
				state = #{item.state,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 查询 审批申请单是否存在不是新建状态的单据 -->
	<select id="queryIsExistNoNewBuilt" parameterType="java.util.List" resultType="java.lang.Integer" >
		
		select count(1) FROM budg_work_dept_year 
		 WHERE state is not null and 
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			</foreach>
	</select>
</mapper>

