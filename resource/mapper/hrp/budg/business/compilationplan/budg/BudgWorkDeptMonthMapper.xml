<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.compilationplan.budg.BudgWorkDeptMonthMapper">
	
	<resultMap id="budgWorkDeptMonth" type="com.chd.hrp.budg.entity.BudgWorkDeptMonth">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="index_code" column="index_code"/>
	<result property="dept_id" column="dept_id"/>
	<result property="month" column="month"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_workload" column="last_year_workload"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	</resultMap>
		
	<resultMap id="budgWorkDeptMonthMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="index_code" column="index_code"/>
	<result property="index_name" column="index_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="month" column="month"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_workload" column="last_year_workload"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	<result property="is_carried" column="is_carried"/>
	<result property="execute_value" column="execute_value"/>
	<result property="reference_years" column="reference_years"/>
	<result property="resolve_data" column="resolve_data"/>
	
	<result property="yearValue" column="yearValue"/>
	<result property="resolve_way" column="resolve_way"/>
	<result property="sumValue" column="sumValue"/>
	<result property="sumLastWorkload" column="sumLastWorkload"/>
	
	<result property="m01" column="m01"/>
	<result property="m02" column="m02"/>
	<result property="m03" column="m03"/>
	<result property="m04" column="m04"/>
	<result property="m05" column="m05"/>
	<result property="m06" column="m06"/>
	<result property="m07" column="m07"/>
	<result property="m08" column="m08"/>
	<result property="m09" column="m09"/>
	<result property="m10" column="m10"/>
	<result property="m11" column="m11"/>
	<result property="m12" column="m12"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_WORK_DEPT_MONTH (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			index_code
			,
			dept_id
			,
			month
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_workload
			,
			last_month_carried
			,
			carried_next_month
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{index_code,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{count_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{resolve_rate,jdbcType=INTEGER}
			,
			#{last_year_workload,jdbcType=INTEGER}
			,
			#{last_month_carried,jdbcType=INTEGER}
			,
			#{carried_next_month,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_WORK_DEPT_MONTH (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			index_code
			,
			dept_id
			,
			month
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_workload
			,
			last_month_carried
			,
			carried_next_month
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.index_code,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.count_value,jdbcType=INTEGER}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.grow_rate,jdbcType=INTEGER}
			,
			#{item.resolve_rate,jdbcType=INTEGER}
			,
			#{item.last_year_workload,jdbcType=INTEGER}
			,
			#{item.last_month_carried,jdbcType=INTEGER}
			,
			#{item.carried_next_month,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_work_dept_month set
			count_value = #{count_value,jdbcType=INTEGER}
			,
			budg_value = #{budg_value,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			grow_rate = #{grow_rate,jdbcType=INTEGER}
			,
			resolve_rate = #{resolve_rate,jdbcType=INTEGER}
			,
			last_year_workload = #{last_year_workload,jdbcType=INTEGER}
			,
			last_month_carried = #{last_month_carried,jdbcType=INTEGER}
			,
			carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_dept_month set
				count_value = #{item.count_value,jdbcType=INTEGER}
				,
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
				,
				resolve_rate = #{item.resolve_rate,jdbcType=INTEGER}
				,
				last_year_workload = #{item.last_year_workload,jdbcType=INTEGER}
				,
				last_month_carried = #{item.last_month_carried,jdbcType=INTEGER}
				,
				carried_next_month = #{item.carried_next_month,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>  
				<if test="item.index_code != null and item.index_code != ''">
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>  
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>  
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_work_dept_month 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_work_dept_month 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.index_code != null and item.index_code != ''">
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				</if>
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgWorkDeptMonthMap" >
		with t as(
			select group_id ,hos_id , copy_code , year ,index_code , dept_id ,  month , budg_value , last_year_workload
			from BUDG_WORK_DEPT_MONTH 
			where group_id = #{group_id} and hos_id  = #{hos_id} and copy_code  = #{copy_code} and year = #{year}			
		)
		SELECT 
			t.group_id,
			t.hos_id,
			t.copy_code,
			t.year,
			t.index_code,
			bid.index_name ,
			t.dept_id,
			hd.dept_code ,
			hd.dept_name ,
			nvl(bwdy.budg_value,0) as yearValue,
			bwep.resolve_way ,
			sum(case when t.month ='01' then t.budg_value else 0 end )  m01,
			sum(case when t.month ='02' then t.budg_value else 0 end )  m02,
			sum(case when t.month ='03' then t.budg_value else 0 end )  m03,
			sum(case when t.month ='04' then t.budg_value else 0 end )  m04,
			sum(case when t.month ='05' then t.budg_value else 0 end )  m05,
			sum(case when t.month ='06' then t.budg_value else 0 end )  m06,
			sum(case when t.month ='07' then t.budg_value else 0 end )  m07,
			sum(case when t.month ='08' then t.budg_value else 0 end )  m08,
			sum(case when t.month ='09' then t.budg_value else 0 end )  m09,
			sum(case when t.month ='10' then t.budg_value else 0 end )  m10,
			sum(case when t.month ='11' then t.budg_value else 0 end )  m11,
			sum(case when t.month ='12' then t.budg_value else 0 end )  m12
			
			FROM t 
			
			LEFT JOIN BUDG_WORK_DEPT_YEAR bwdy
				ON 	
					t.group_id = bwdy.group_id 
					and t.hos_id = bwdy.hos_id 
					and t.copy_code = bwdy.copy_code
					and t.year = bwdy.year
					and t.index_code = bwdy.index_code
					and t.dept_id = bwdy.dept_id
			LEFT JOIN BUDG_WORK_EDIT_PLAN bwep
				ON 	
					t.group_id = bwep.group_id 
					and t.hos_id = bwep.hos_id 
					and t.copy_code = bwep.copy_code
					and t.year = bwep.budg_year
					and t.index_code = bwep.index_code
					and bwep.budg_level = '04'
			LEFT JOIN hos_dept_dict hd
				ON
					t.group_id  = hd.group_id 
					and t.hos_id  = hd.hos_id 
					and t.dept_id  = hd.dept_id
					and  hd.is_stop = 0
			LEFT JOIN budg_index_dict bid
				ON
					t.group_id  = bid.group_id 
					and t.hos_id  = bid.hos_id 
					and t.copy_code  = bid.copy_code
					and t.index_code  = bid.index_code
			<where>                     
				<if test="group_id != null and group_id != ''">
				AND t.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="year != null and year != ''">
				AND t.year = #{year,jdbcType=VARCHAR}
				</if>
				<if test="index_code != null and index_code != ''">
				AND t.index_code = #{index_code,jdbcType=VARCHAR}
				</if>
				<if test="dept_id != null and dept_id != ''">
				AND t.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
			</where>
			group by t.group_id , t.hos_id ,t.copy_code ,t.year , t.index_code ,bid.index_name ,t.dept_id ,hd.dept_code , hd.dept_name ,bwdy.budg_value  ,bwep.resolve_way  
		
		union all 
		
			SELECT 
				null, null, null, '合计', null, null, null, null, null, null, null, 
				sum(case when t.month ='01' then sum(nvl(t.budg_value,0)) else 0 end )  m01,
				sum(case when t.month ='02' then sum(nvl(t.budg_value,0)) else 0 end )  m02,
				sum(case when t.month ='03' then sum(nvl(t.budg_value,0)) else 0 end )  m03,
				sum(case when t.month ='04' then sum(nvl(t.budg_value,0)) else 0 end )  m04,
				sum(case when t.month ='05' then sum(nvl(t.budg_value,0)) else 0 end )  m05,
				sum(case when t.month ='06' then sum(nvl(t.budg_value,0)) else 0 end )  m06,
				sum(case when t.month ='07' then sum(nvl(t.budg_value,0)) else 0 end )  m07,
				sum(case when t.month ='08' then sum(nvl(t.budg_value,0)) else 0 end )  m08,
				sum(case when t.month ='09' then sum(nvl(t.budg_value,0)) else 0 end )  m09,
				sum(case when t.month ='10' then sum(nvl(t.budg_value,0)) else 0 end )  m10,
				sum(case when t.month ='11' then sum(nvl(t.budg_value,0)) else 0 end )  m11,
				sum(case when t.month ='12' then sum(nvl(t.budg_value,0)) else 0 end )  m12
			
			FROM t 
			<where>
				<if test="group_id != null and group_id != ''">
				AND t.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="year != null and year != ''">
				AND t.year = #{year,jdbcType=VARCHAR}
				</if>
				<if test="index_code != null and index_code != ''">
				AND t.index_code = #{index_code,jdbcType=VARCHAR}
				</if>
				<if test="dept_id != null and dept_id != ''">
				AND t.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
			</where>
			group by t.group_id ,t.hos_id , t.copy_code , t.year ,t.index_code, t.month
	</select>
	<select id="queryByCode" resultMap="budgWorkDeptMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			index_code,
			dept_id,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_workload,
			last_month_carried,
			carried_next_month
		FROM budg_work_dept_month 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		index_code = #{index_code,jdbcType=VARCHAR}   and 
		dept_id = #{dept_id,jdbcType=INTEGER}   and 
		month = #{month,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgWorkDeptMonth"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		index_code,
		dept_id,
		month,
		count_value,
		budg_value,
		remark,
		grow_rate,
		resolve_rate,
		last_year_workload,
		last_month_carried,
		carried_next_month
		FROM BUDG_WORK_DEPT_MONTH 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="count_value != null and count_value != ''">
		AND count_value = #{count_value,jdbcType=INTEGER}
		</if>
		<if test="budg_value != null and budg_value != ''">
		AND budg_value = #{budg_value,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="grow_rate != null and grow_rate != ''">
		AND grow_rate = #{grow_rate,jdbcType=INTEGER}
		</if>
		<if test="resolve_rate != null and resolve_rate != ''">
		AND resolve_rate = #{resolve_rate,jdbcType=INTEGER}
		</if>
		<if test="last_year_workload != null and last_year_workload != ''">
		AND last_year_workload = #{last_year_workload,jdbcType=INTEGER}
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		AND last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		AND carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgWorkDeptMonth"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		index_code,
		dept_id,
		month,
		count_value,
		budg_value,
		remark,
		grow_rate,
		resolve_rate,
		last_year_workload,
		last_month_carried,
		carried_next_month
		FROM BUDG_WORK_DEPT_MONTH 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="count_value != null and count_value != ''">
		AND count_value = #{count_value,jdbcType=INTEGER}
		</if>
		<if test="budg_value != null and budg_value != ''">
		AND budg_value = #{budg_value,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="grow_rate != null and grow_rate != ''">
		AND grow_rate = #{grow_rate,jdbcType=INTEGER}
		</if>
		<if test="resolve_rate != null and resolve_rate != ''">
		AND resolve_rate = #{resolve_rate,jdbcType=INTEGER}
		</if>
		<if test="last_year_workload != null and last_year_workload != ''">
		AND last_year_workload = #{last_year_workload,jdbcType=INTEGER}
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		AND last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		AND carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 根据主键 查询数据是否已存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(month)
		FROM BUDG_WORK_DEPT_MONTH 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND index_code = #{index_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 计算数据 -->
	<select id="queryCollectData" resultMap="budgWorkDeptMonthMap"  parameterType="java.util.Map" >
		WITH temp as(
			select a.group_id ,a.hos_id , a.copy_code , a.month, a.dept_id ,hdd.dept_code , a.index_code , sum(a.execute_value) sumValue
			FROM BUDG_WORK_DEPT_EXECUTE a
			left join hos_dept_dict hdd
				on
					a.group_id  = hdd.group_id
					and a.hos_id = hdd.hos_id
					and a.dept_id = hdd.dept_id
					and hdd.is_stop = 0 
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.index_code =  #{index_code,jdbcType=VARCHAR}
				and a.year between ${year} - (select reference_years 
                                 from budg_work_edit_plan 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
									and budg_year = ${year}
                                    AND budg_level ='04'
                                    AND index_code = #{index_code,jdbcType=VARCHAR}) and ${year} - 1
           group by a.group_id ,a.hos_id , a.copy_code ,  a.month , a.dept_id , hdd.dept_code , a.index_code 
		)
		
		select s.group_id, s.hos_id, s.copy_code, s.year,s.index_code, s.index_name , s.dept_id, s.dept_code ,
				s.dept_name , s.month, s.count_value , s.budg_value, s.remark, s.grow_rate, s.resolve_rate ,
				s.last_year_workload, s.last_month_carried ,s.carried_next_month ,s.yearValue,s.resolve_way ,
				s.reference_years ,s.resolve_data , sum(nvl(temp.sumValue,0)) sumValue
		from (
			SELECT 
				t.group_id,
				t.hos_id,
				t.copy_code,
				t.year,
				t.index_code,
				bid.index_name ,
				t.dept_id,
				hd.dept_code ,
				hd.dept_name ,
				t.month,
				nvl(t.count_value,0) count_value ,
				nvl(t.budg_value,0) budg_value,
				t.remark,
				nvl(t.grow_rate,0) grow_rate,
				nvl(t.resolve_rate,0) resolve_rate ,
				nvl(t.last_year_workload,0) last_year_workload,
				nvl(t.last_month_carried,0) last_month_carried ,
				nvl(t.carried_next_month,0) carried_next_month ,
				nvl(bwdy.budg_value,0) as yearValue,
				bwep.resolve_way ,
				bwep.reference_years ,
				bwep.resolve_data
			FROM budg_work_dept_month  t
			
			LEFT JOIN BUDG_WORK_DEPT_YEAR bwdy
					ON 	
						t.group_id = bwdy.group_id 
						and t.hos_id = bwdy.hos_id 
						and t.copy_code = bwdy.copy_code
						and t.year = bwdy.year
						and t.index_code = bwdy.index_code
						and t.dept_id = bwdy.dept_id
			LEFT JOIN BUDG_WORK_EDIT_PLAN bwep
					ON 	
						t.group_id = bwep.group_id 
						and t.hos_id = bwep.hos_id 
						and t.copy_code = bwep.copy_code
						and t.year = bwep.budg_year
						and t.index_code = bwep.index_code
						and bwep.budg_level = '04'
			LEFT JOIN hos_dept_dict hd
					ON
						t.group_id  = hd.group_id 
						and t.hos_id  = hd.hos_id 
						and t.dept_id  = hd.dept_id
						and hd.is_stop = 0
				LEFT JOIN budg_index_dict bid
					ON
						t.group_id  = bid.group_id 
						and t.hos_id  = bid.hos_id 
						and t.copy_code  = bid.copy_code
						and t.index_code  = bid.index_code
			where
				t.group_id = #{group_id,jdbcType=INTEGER}
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="year != null and year != ''">
				AND t.year = #{year,jdbcType=VARCHAR}
				</if>
				<if test="index_code != null and index_code != ''">
				AND t.index_code = #{index_code,jdbcType=VARCHAR}
				</if>
				<if test="dept_id != null and dept_id != ''">
				AND t.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<!-- 是否独立核算（IS_SINGLE_COUNT）：0否，1是   计算时查询  非独立核算数据 条件-->
				<if test="is_single_count  == 0 ">
					and bwep.is_single_count = 0
				</if>
				<!-- 预算层次（budg_level）  01医院年度  02医院月份 03科室年度  04科室月份 	 只查 预算层次 为  04科室月份 的数据 -->
				and bwep.budg_level = '04'
			order by t.group_id, t.hos_id,t.copy_code,t.year,t.month,t.dept_id,t.index_code
		) s
		
		left join temp
				on
					s.group_id = temp.group_id 
					and s.hos_id = temp.hos_id 
					and s.copy_code = temp.copy_code
					and s.month = temp.month
					and temp.dept_code  like (s.dept_code || '%') 
					and s.index_code = temp.index_code
		group  by  s.group_id, s.hos_id, s.copy_code, s.year, s.index_code, s.index_name , s.dept_id, s.dept_code ,
				s.dept_name , s.month, s.count_value , s.budg_value, s.remark, s.grow_rate, s.resolve_rate ,
				s.last_year_workload, s.last_month_carried ,s.carried_next_month ,s.yearValue,s.resolve_way ,
				s.reference_years ,s.resolve_data 
	</select>
	
	<!-- 查询 所选年度、指标 的 所有科室上年业务量 总和 -->
	<select id="querySumLastYearWork" parameterType="java.util.Map" resultMap="budgWorkDeptMonthMap" >
	
		SELECT  sum(execute_value) as sumLastWorkload	FROM BUDG_WORK_DEPT_EXECUTE
		where   
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND year between ${year} - (select reference_years 
                                 from budg_work_edit_plan 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
                                    AND budg_level ='04'
                                    AND index_code = #{index_code,jdbcType=VARCHAR}) and ${year} - 1
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
			AND dept_id = #{dept_id}
		group by group_id , hos_id ,copy_code , dept_id , index_code  
	</select>
	
	<!-- 查询 所传年度、指标 、科室的上年业务量  -->
	<select id="queryLastYearWorkLoad" parameterType="java.util.Map" resultType="java.lang.String" >
		with temp as(
			select 
				a.group_id , a.hos_id , a.copy_code , a.year , a.month ,
				a.dept_id , a.index_code , a.execute_value , b.dept_code
			FROM BUDG_WORK_DEPT_EXECUTE a
			left join hos_dept_dict b
				on	
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.dept_id = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
				AND a.month = #{month,jdbcType=VARCHAR}
		)
		SELECT  sum(nvl(execute_value,0)) 	FROM temp
		where    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="dept_code != null and dept_code != ''">
			AND dept_code like '${dept_code}%'
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 增量生成时 查询要生成的数据 -->
	<select id="queryData" parameterType="java.util.Map" resultMap="budgWorkDeptMonthMap" >
	
		SELECT 
			bwep.group_id,
			bwep.hos_id,
			bwep.copy_code,
			bwep.budg_year year,
			bwep.index_code,
			bids.dept_id ,
			hdd.dept_code
		FROM BUDG_WORK_EDIT_PLAN bwep
		
		Left join BUDG_INDEX_DEPT_SET bids
			ON
				bwep.group_id  = bids.group_id
				and bwep.hos_id  = bids.hos_id
				and bwep.copy_code  = bids.copy_code
				and bwep.index_code  = bids.index_code
		Left join HOS_DEPT_DICT hdd
			ON
				bids.group_id  = hdd.group_id
				and bids.hos_id  = hdd.hos_id
				and bids.dept_id  = hdd.dept_id
				and hdd.is_stop = 0	
		where                     
			bwep.group_id = #{group_id,jdbcType=INTEGER}
			AND bwep.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bwep.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bwep.budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="budg_level != null and budg_level != ''">
			AND bwep.budg_level = #{budg_level,jdbcType=VARCHAR}
			</if>
			<!-- and not exists (
				select 1 from BUDG_WORK_DEPT_month a
				where a.group_id = bwep.group_id
					and a.hos_id = bwep.hos_id
					and a.copy_code = bwep.copy_code
					and a.index_code = bwep.index_code
					and a.dept_id = bids.dept_id
			) -->
	</select>
	
	<select id="queryDeptExist" resultMap="budgWorkDeptMonthMap"   parameterType="java.util.Map" >
		select a.dept_id , hd.dept_code , hd.dept_name 
		from budg_index_dept_set a
		left join hos_dept hd
			ON
				a.group_id  = hd.group_id 
				and a.hos_id  = hd.hos_id 
				and a.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	where
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.index_code = #{index_code}
			and hd.dept_code = #{dept_code}
	</select>
	
	<!-- BudgWorkDeptMonth:查询当前年月科室月份业务预算 -->
	<select id="queryBudgWorkDeptMonthByYearMonth" parameterType="java.util.Map" resultMap="budgWorkDeptMonthMap">
		SELECT
		  awdm.group_id,awdm.hos_id,awdm.copy_code,awdm.year,awdm.index_code,awdm.dept_id,awdm.month,awdm.count_value,
		  nvl(awdm.budg_value,0) as budg_value,awdm.remark,awdm.grow_rate,awdm.resolve_rate,awdm.last_year_workload,
		  nvl(awdm.last_month_carried,0) as last_month_carried, awdm.carried_next_month,bid.is_carried,
		  nvl(bwde.execute_value,0) as execute_value
		FROM BUDG_WORK_DEPT_MONTH  awdm
		LEFT JOIN BUDG_WORK_DEPT_EXECUTE bwde
		ON
		     awdm.group_id = bwde.group_id
		     and awdm.hos_id = bwde.hos_id
		     and awdm.copy_code = bwde.copy_code
		     and awdm.dept_id = bwde.dept_id
		     and awdm.year = bwde.year
		     and awdm.month = bwde.month
		     and awdm.index_code = bwde.index_code
		LEFT JOIN BUDG_INDEX_DICT bid
		ON
		     awdm.group_id = bid.group_id
		     AND awdm.hos_id = bid.hos_id
		     AND awdm.copy_code = bid.copy_code
		     AND awdm.index_code = bid.index_code
		     AND bid.is_stop = 0
		WHERE
			awdm.group_id = #{group_id,jdbcType=INTEGER}
			AND awdm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND awdm.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND awdm.year = #{year,jdbcType=VARCHAR}
			AND awdm.month = #{month,jdbcType=VARCHAR}
	</select>
	
	<!-- 批量修改上月结转值或批量修改下月结转值 此SQL用于业务预算结转-->
	<update id="updateBatchBudgWorkDeptMonth" parameterType="java.util.List">
		 <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_WORK_DEPT_MONTH
			SET
				<trim  suffixOverrides=",">
					<!-- 修改上月结转 --> 
					<if test="item.last_month_carried != null ">
						last_month_carried = #{item.last_month_carried},
					</if>
					
					<!-- 修改结转下月 -->
					<if test="item.carried_next_month != null ">
						carried_next_month = #{item.carried_next_month},
					</if>
				</trim> 
			WHERE
				group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
				AND year = #{item.year}
				AND month = #{item.month}
				<if test="item.dept_id != null and item.dept_id != ''">
					AND dept_id = #{item.dept_id}
				</if>
				
				<if test="item.index_code != null and item.index_code != '' ">
					AND index_code = #{item.index_code}
				</if>
		</foreach>
	</update>
	
	
	<update id="updateBatchBudgValue" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_dept_month set
				budg_value = #{item.budg_value,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND month = #{item.month,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 根据 科室、月份、自定义分解系数 计算分解比例(科室月) -->
	<select id="queryResolveDataRate" parameterType="java.util.Map" resultMap="budgWorkDeptMonthMap" >
		with temp as(
			SELECT  group_id , hos_id ,copy_code , resolve_data_code ,dept_id , sum(nvl(value,0)) sumValue	
			FROM BUDG_RESOLVE_DATA_DM
			where    
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			group by group_id , hos_id ,copy_code , resolve_data_code , dept_id
		)
		
		select case temp.sumValue when 0 then null else nvl(a.value,0)/ temp.sumValue end resolve_rate
		
		FROM BUDG_RESOLVE_DATA_DM a
		left join temp
			on 
				a.group_id = temp.group_id
				and a.hos_id = temp.hos_id
				and a.copy_code = temp.copy_code
				and a.resolve_data_code = temp.resolve_data_code
				and a.dept_id = temp.dept_id
		where    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			AND a.month = #{month,jdbcType=VARCHAR}
		
	</select>
</mapper>

