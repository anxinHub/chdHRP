<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.invdisburse.BudgNoMedMatMapper">
	<resultMap id="budgNoMedMat" type="com.chd.hrp.budg.entity.BudgNoMedMat">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="mat_type_id" column="mat_type_id"/>
		<result property="last_cost" column="last_cost"/>
		<result property="grow_rate" column="grow_rate"/>
		<result property="count_value" column="count_value"/>
		<result property="cost_budg" column="cost_budg"/>
		<result property="remark" column="remark"/>
	</resultMap>
	
	<resultMap id="budgNoMedMatMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="mat_type_id" column="mat_type_id"/>
		<result property="mat_type_code" column="mat_type_code"/>
		<result property="mat_type_name" column="mat_type_name"/>
		<result property="last_cost" column="last_cost"/>
		<result property="grow_rate" column="grow_rate"/>
		<result property="count_value" column="count_value"/>
		<result property="cost_budg" column="cost_budg"/>
		<result property="remark" column="remark"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
		INSERT INTO BUDG_NO_MED_MAT (
		<trim suffix="" suffixOverrides=",">
			group_id,hos_id,copy_code,year,month,dept_id,mat_type_id,
			<if test="last_cost != null and last_cost != ''">
				last_cost,
			</if>
			<if test="grow_rate != null and grow_rate != ''">
				grow_rate,
			</if>
			<if test="count_value != null and count_value != ''">
				count_value,
			</if>
			<if test="cost_budg != null and cost_budg != ''">
				cost_budg,
			</if>
			<if test="remark != null and remark != ''">
				remark,
			</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{year,jdbcType=VARCHAR},
			#{month,jdbcType=VARCHAR},
			#{dept_id,jdbcType=INTEGER},
			#{mat_type_id,jdbcType=INTEGER}	,
			<if test="last_cost != null and last_cost != ''">
				#{last_cost,jdbcType=INTEGER},
			</if>
			<if test="grow_rate != null and grow_rate != ''">
				#{grow_rate,jdbcType=INTEGER},
			</if>
			<if test="count_value != null and count_value != ''">
				#{count_value,jdbcType=INTEGER},
			</if>
			<if test="cost_budg != null and cost_budg != ''">
				#{cost_budg,jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark != ''">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_NO_MED_MAT (
		group_id,hos_id,copy_code,year,month,dept_id,mat_type_id,
		last_cost,grow_rate,count_value,cost_budg,remark
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.mat_type_id,jdbcType=INTEGER},
			#{item.last_cost,jdbcType=INTEGER},	
			#{item.grow_rate,jdbcType=INTEGER},	
			#{item.count_value,jdbcType=INTEGER},	
			#{item.cost_budg,jdbcType=INTEGER},	
			#{item.remark,jdbcType=VARCHAR}		
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE BUDG_NO_MED_MAT 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="last_cost != null and last_cost != ''">
			last_cost = #{last_cost,jdbcType=INTEGER},
		</if>
		<if test="grow_rate != null and grow_rate != ''">	
			grow_rate = #{grow_rate,jdbcType=INTEGER},
		</if>
		<if test="count_value != null and count_value != ''">	
			count_value = #{count_value,jdbcType=INTEGER},
		</if>	
		<if test="cost_budg != null and cost_budg != ''">
			cost_budg = #{cost_budg,jdbcType=INTEGER},
		</if>
		<if test="remark != null and remark != ''">	
			remark = #{remark,jdbcType=VARCHAR}	
		</if>
		</trim>
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND year = #{year,jdbcType=VARCHAR}
		AND month = #{month,jdbcType=VARCHAR}
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_NO_MED_MAT 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.last_cost != null and item.last_cost != '' or item.last_cost == 0">
				last_cost = #{item.last_cost,jdbcType=INTEGER},
			</if>
			<if test="item.grow_rate != null and item.grow_rate != '' or item.grow_rate == 0">	
				grow_rate = #{item.grow_rate,jdbcType=INTEGER},
			</if>
			<if test="item.count_value != null and item.count_value != '' or item.count_value == 0">	
				count_value = #{item.count_value,jdbcType=INTEGER},
			</if>	
			<if test="item.cost_budg != null and item.cost_budg != '' or item.cost_budg == 0">
				cost_budg = #{item.cost_budg,jdbcType=INTEGER},
			</if>
			<if test="item.remark != null and item.remark != ''">	
				remark = #{item.remark,jdbcType=VARCHAR}	
			</if>
			</trim>
			where                    
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND year = #{item.year,jdbcType=VARCHAR}
			AND month = #{item.month,jdbcType=VARCHAR}
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{item.mat_type_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM BUDG_NO_MED_MAT 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="mat_type_id != null and mat_type_id != ''">
		AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_NO_MED_MAT 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.mat_type_id != null and item.mat_type_id != ''">
				AND mat_type_id = #{item.mat_type_id,jdbcType=INTEGER}
				</if>
				<if test="item.last_cost != null and item.last_cost != ''">
				AND last_cost = #{item.last_cost,jdbcType=INTEGER},
				</if>
				<if test="item.grow_rate != null and item.grow_rate != ''">	
				AND grow_rate = #{item.grow_rate,jdbcType=INTEGER},
				</if>
				<if test="item.count_value != null and item.count_value != ''">	
				AND count_value = #{item.count_value,jdbcType=INTEGER},
				</if>	
				<if test="item.cost_budg != null and item.cost_budg != ''">
				AND cost_budg = #{item.cost_budg,jdbcType=INTEGER},
				</if>
				<if test="item.remark != null and item.remark != ''">	
				AND remark = #{item.remark,jdbcType=VARCHAR}	
				</if>
			</foreach>

	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgNoMedMatMap" >
		select 
	    nmm.group_id,nmm.hos_id,nmm.copy_code,nmm.year,nmm.month,
	    nmm.dept_id,hdd.dept_code,hdd.dept_name,
	    nmm.mat_type_id,mtd.mat_type_name,
	    nvl(nmm.last_cost,0) last_cost,nvl(nmm.grow_rate,0) grow_rate,nvl(nmm.count_value,0) count_value,
	    nvl(nmm.cost_budg,0) cost_budg,nmm.remark
	    from BUDG_NO_MED_MAT nmm
	    left join HOS_DEPT_DICT hdd
	    on nmm.group_id = hdd.group_id
	    and nmm.hos_id = hdd.hos_id
	    and nmm.dept_id = hdd.dept_id
	    and hdd.is_stop=0
	    left join MAT_TYPE_DICT mtd
	    on nmm.group_id = mtd.group_id
	    and nmm.hos_id = mtd.hos_id
	    and nmm.copy_code = mtd.copy_code
	    and nmm.mat_type_id = mtd.mat_type_id
	    and mtd.is_stop = 0
	    where
	    nmm.group_id = #{group_id}
	    and nmm.hos_id = #{hos_id}
	    and nmm.copy_code = #{copy_code}
	    and nmm.year = #{year}
	    <if test="month != null and month != ''">
	    and nmm.month = #{month}
	    </if>
	    <if test="dept_id != null and dept_id != ''">
	    and nmm.dept_id = #{dept_id}
	    </if>
	    <if test="mat_type_id != null and mat_type_id != ''">
	    and nmm.mat_type_id = #{mat_type_id}
	    </if>
		
	</select>
	
	<select id="queryByCode" resultMap="budgNoMedMatMap"  parameterType="java.util.Map" >
		select 
		    a.group_id,a.hos_id,a.copy_code,a.year,a.month,a.dept_id,hdd.dept_code,hdd.dept_name,a.mat_type_id,
		    mtd.mat_type_code, mtd.mat_type_name , a.last_cost,a.grow_rate,a.count_value,a.cost_budg,a.remark
	    from BUDG_NO_MED_MAT a
	    left join HOS_DEPT_DICT hdd
		    on 
			    a.group_id = hdd.group_id
			    and a.hos_id = hdd.hos_id
			    and a.dept_id = hdd.dept_id
			    and hdd.is_stop=0
	    left join MAT_TYPE_DICT mtd
		    on 
			    a.group_id = mtd.group_id
			    and a.hos_id = mtd.hos_id
			    and a.copy_code = mtd.copy_code
			    and a.mat_type_id = mtd.mat_type_id
			    and mtd.is_stop = 0
	    where
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.year = #{year}
			and a.month = #{month}
			and a.dept_id = #{dept_id}
			and a.mat_type_id = #{mat_type_id}
	</select>
	
	<select id="queryByUniqueness" resultMap="budgNoMedMatMap"  parameterType="java.util.Map" >
	
	</select>
	
	<select id="queryExists" resultMap="budgNoMedMat"  parameterType="java.util.Map" >
		select 
	    group_id,hos_id,copy_code,year,month,dept_id,mat_type_id,
	    last_cost,grow_rate,count_value,cost_budg,remark
	    from BUDG_NO_MED_MAT
	    where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and year = #{year}
		and month = #{month}
		and dept_id = #{dept_id}
		and mat_type_id = #{mat_type_id}
	</select>
	
	<resultMap type="java.util.Map" id="itemMap">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	<select id="queryHosDeptDict" resultMap="itemMap">
		
		select distinct hdd.dept_id as id,
		                hdd.dept_code || ' ' || hdd.dept_name as text
		  from HOS_DEPT_DICT hdd
		  left join ACC_DEPT_ATTR ada
		    on ada.group_id = hdd.group_id
		   and ada.hos_id = hdd.hos_id
		 where ada.is_budg = 1
		   and hdd.is_stop = 0
		   and hdd.is_last = 1
		   and hdd.group_id = #{group_id}
		   and hdd.hos_id = #{hos_id}
		   <if test="key != null and key != ''">
			and (
				hdd.dept_code like '${key}%' or
				hdd.dept_name like '%${key}%' or
				hdd.spell_code like '%${key}%' or
				hdd.wbx_code like '%${key}%'
			)
		   </if>
		 order by id
				
	</select>
	
	<select id="queryBudgMatTypeSubj" resultMap="itemMap">
		select 
		  a.mat_type_id id,
		  b.mat_type_code||' '||b.mat_type_name as text
		 from BUDG_MAT_TYPE_SUBJ a
		left join MAT_TYPE_DICT b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and b.is_stop = 0
		where a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		and a.budg_year = #{budg_year}
		<if test="key != null and key != ''">
			and (
				b.mat_type_code like '${key}%' or
				b.mat_type_name like '%${key}%' or
				b.spell_code like '%${key}%' or
				b.wbx_code like '%${key}%'
			)
		</if>
		order by id
	</select>
	
	<select id="queryGenerateData" parameterType="java.util.Map" resultMap="budgNoMedMatMap">
		select a.group_id,a.hos_id,a.copy_code,to_number(a.year)+1 as year,a.month,
	    a.dept_id,a.mat_type_id,nvl(a.amount,0) last_cost
		from budg_no_med_mat_cost a
		left join ACC_DEPT_ATTR b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.dept_id = b.dept_id
		where 
		a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		and a.year = to_number(#{year})-1
		and b.is_budg = 1
		and exists (
			select 1 from BUDG_MAT_TYPE_SUBJ c
			where a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.copy_code = c.copy_code
			and a.mat_type_id = c.mat_type_id
			and c.budg_year = #{year}
		)
		and not exists (
			select 1 from BUDG_NO_MED_MAT d
			where a.group_id = d.group_id
			and a.hos_id = d.hos_id
			and a.copy_code = d.copy_code
			and d.year = #{year}
			and a.month = d.month 
			and a.dept_id = d.dept_id
			and a.mat_type_id = d.mat_type_id
			
		)
	</select>
	
	<insert id="copyBudgNoMedMat" parameterType="java.util.List">
		INSERT INTO BUDG_NO_MED_MAT (
			group_id,hos_id,copy_code,year,month,dept_id,mat_type_id,
			last_cost
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.mat_type_id,jdbcType=INTEGER},
			#{item.last_cost,jdbcType=INTEGER}
		    from dual
		</foreach>
	</insert>
	
	<update id="collectBudgNoMedMat" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index"  open="begin" close=";end;" separator=";">
			UPDATE BUDG_NO_MED_MAT 
			set
				count_value = (#{item.last_cost}*(1+#{item.grow_rate}/100)),
				cost_budg = (#{item.last_cost}*(1+#{item.grow_rate}/100)) ,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER},
				remark = #{item.remark,jdbcType=VARCHAR}	
			where                    
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND year = #{item.year,jdbcType=VARCHAR}
			AND month = #{item.month,jdbcType=VARCHAR}
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{item.mat_type_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<!-- 校验数据 是否存在-->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1)
		FROM BUDG_NO_MED_MAT 
		where 
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
		
	</select>
</mapper>