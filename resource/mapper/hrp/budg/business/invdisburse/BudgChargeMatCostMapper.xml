<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.invdisburse.BudgChargeMatCostMapper">
	
	<resultMap id="budgChargeMatCost" type="com.chd.hrp.budg.entity.BudgChargeMatCost">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="mat_type_id" column="mat_type_id"/>
	<result property="amount" column="amount"/>
	</resultMap>
		
	<resultMap id="budgChargeMatCostMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="mat_type_id" column="mat_type_id"/>
	<result property="mat_type_code" column="mat_type_code"/>
	<result property="mat_type_name" column="mat_type_name"/>
	<result property="amount" column="amount"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_CHARGE_MAT_COST (
		<trim suffix="" suffixOverrides=",">
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		month
		,
		dept_id
		,
		mat_type_id
		,
		<if test="amount != null and amount != ''">
		amount
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{year,jdbcType=VARCHAR}
		,
		#{month,jdbcType=VARCHAR}
		,
		#{dept_id,jdbcType=INTEGER}
		,
		#{mat_type_id,jdbcType=INTEGER}
		,
		<if test="amount != null and amount != ''">
		#{amount,jdbcType=INTEGER}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_CHARGE_MAT_COST (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		month
		,
		dept_id
		,
		mat_type_id
		,
		amount
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.mat_type_id,jdbcType=INTEGER}
			,
			#{item.amount,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_charge_mat_cost set
			amount = #{amount,jdbcType=INTEGER}
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_charge_mat_cost set
				amount = #{item.amount,jdbcType=INTEGER}
			where                    
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND mat_type_id = #{item.mat_type_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_charge_mat_cost 
		where                   
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_charge_mat_cost 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND mat_type_id = #{item.mat_type_id,jdbcType=INTEGER}
			</foreach>

	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgChargeMatCostMap" >
		with temp as(
				SELECT 
					bcmc.group_id,
					bcmc.hos_id,
					bcmc.copy_code,
					bcmc.year,
					bcmc.month,
					bcmc.dept_id,
			 		hdd.dept_name,
					bcmc.mat_type_id||','||mtd.mat_type_no as mat_type_id,
			  		mtd.mat_type_name,
					bcmc.amount
					FROM BUDG_CHARGE_MAT_COST bcmc
			    left join mat_type_dict  mtd
			    on bcmc.group_id = mtd.group_id
			    and bcmc.hos_id = mtd.hos_id
			    and bcmc.copy_code = mtd.copy_code
			    and bcmc.mat_type_id = mtd.mat_type_id
			     and  mtd.is_stop = 0 
			    left join hos_dept_dict hdd
			     on bcmc.group_id = hdd.group_id
			    and bcmc.hos_id = hdd.hos_id
			    and bcmc.dept_id = hdd.dept_id
				where                     
				    bcmc.group_id = #{group_id,jdbcType=INTEGER}
				AND bcmc.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bcmc.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="year != null and year != ''">
				AND bcmc.year = #{year,jdbcType=VARCHAR}
				</if>
				<if test="month != null and month != ''">
				AND bcmc.month = #{month,jdbcType=VARCHAR}
				</if>
				<if test="dept_id != null and dept_id != ''">
				AND bcmc.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="mat_type_id != null and mat_type_id != ''">
				AND bcmc.mat_type_id = #{mat_type_id,jdbcType=INTEGER}
				</if>
		)
		 select null group_id,
				null hos_id,
				null copy_code,
				'合计' year,
				null month,
				null dept_id,
		 		null dept_name,
				null mat_type_id,
		  		null mat_type_name,
				sum(nvl(t.amount,0)) amount
		   from temp t
		   
		  union all
		  
		 select * from temp
	</select>
	<select id="queryByCode" resultMap="budgChargeMatCostMap"  parameterType="java.util.Map" >
	
		SELECT 
			bcmc.group_id,
			bcmc.hos_id,
			bcmc.copy_code,
			bcmc.year,
			bcmc.month,
			bcmc.dept_id,
	    	hdd.dept_name,
			bcmc.mat_type_id,
	   		mtd.mat_type_name,
			bcmc.amount
			FROM budg_charge_mat_cost bcmc
	    left join hos_dept_dict hdd
		    on bcmc.group_id = hdd.group_id    
		    and bcmc.hos_id =hdd.hos_id
		    and bcmc.dept_id = hdd.dept_id
		    and hdd.is_stop = 0 
	    left join mat_type_dict mtd
		    on bcmc.group_id = mtd.group_id    
		    and bcmc.hos_id =mtd.hos_id
		    and bcmc.mat_type_id = mtd.mat_type_id
		    and mtd.is_stop = 0
		WHERE 
			bcmc.group_id = #{group_id,jdbcType=INTEGER}   and 
			bcmc.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			bcmc.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			bcmc.year = #{year,jdbcType=VARCHAR}   and 
			bcmc.month = #{month,jdbcType=VARCHAR}   and 
			bcmc.dept_id = #{dept_id,jdbcType=INTEGER}   and 
			bcmc.mat_type_id = #{mat_type_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgChargeMatCost"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			month,
			dept_id,
			mat_type_id,
			amount
			FROM BUDG_CHARGE_MAT_COST 
			<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="mat_type_id != null and mat_type_id != ''">
			AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
			</if>
			<if test="amount != null and amount != ''">
			AND amount = #{amount,jdbcType=INTEGER}
			</if>
			</where>   
			order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgChargeMatCost"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		month,
		dept_id,
		mat_type_id,
		amount
		FROM BUDG_CHARGE_MAT_COST 
		where                      
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
	</select>
	
	<!-- 校验数据 是否存在-->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1)
		FROM BUDG_CHARGE_MAT_COST 
		where 
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
		
	</select>
	
	<!-- 查询 物质材料基本信息(根据编码 匹配ID用) 导入用 -->
	<select id="queryMatTypeData" parameterType="java.util.Map" resultMap="budgChargeMatCostMap" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			mat_type_id,
			mat_type_code ,
			mat_type_name
		FROM MAT_TYPE_DICT
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			and is_stop = 0
		order by mat_type_code asc
	</select>
	
	<!-- 删除所选年度 全年数据  -->
	<delete id="deleteYearAllData" parameterType="java.util.Map">
	
		DELETE FROM budg_charge_mat_cost 
		where                   
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
	</delete>
	
	<!-- 采集同时添加数据 -->
	
	<insert id="collectData" parameterType="java.util.Map" >
	
		INSERT INTO BUDG_CHARGE_MAT_COST (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		month
		,
		mat_type_id
		,
		dept_id
		,
		amount
		
		) select t.* from(
			with baseData as(<!-- 科室收费材料支出 （科室领用、科室退库、耐用品科室领用、耐用品科室退库）基础数据  -->
				select  a.group_id ,a.hos_id , a.copy_code , c.year, c.month , b.mat_type_id , d.mat_type_code ,
					c.dept_id, b.is_charge, sum(nvl(a.amount_money,0))  amount_money
		        from mat_out_detail a
		        left join mat_inv_dict b
		             on
		                  a.group_id = b.group_id
		                  and a.hos_id = b.hos_id
		                  and a.copy_code = b.copy_code
		                  and a.inv_id = b.inv_id
		                  and b.is_stop = 0
		        left join mat_out_main c
		            on 
		                  a.group_id = c.group_id
		                  and a.hos_id = c.hos_id
		                  and a.copy_code = c.copy_code
		                  and a.out_id = c.out_id
		        left join mat_type_dict d
		        	on
		        		  b.group_id = d.group_id
		                  and b.hos_id = d.hos_id
		                  and b.copy_code = d.copy_code
		                  and b.mat_type_id = d.mat_type_id
		                  and d.is_stop = 0      
			    where 
			    	a.group_id = #{group_id,jdbcType=INTEGER}
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND c.year = #{year,jdbcType=VARCHAR}
			        AND c.bus_type_code in ('3','21','37','38')<!-- 3 科室领用、 21 科室退库、 37 耐用品科室领用、38 耐用品科室退库 -->
			        AND c.state = 3
			        and b.is_charge = 1 <!-- 科室收费材料支出 -->
			    group by a.group_id ,a.hos_id , a.copy_code , c.year, c.month , 
			    		b.mat_type_id ,d.mat_type_code , c.dept_id , b.is_charge
			),
			typeData as( <!-- 按预算物资分类 BUDG_MAT_TYPE_SUBJ 对应关系 中物资分类   归集数据  临时表-->
				select bmts.group_id , bmts.hos_id , bmts.copy_code , j.year , j.month , bmts.mat_type_id ,
					j.dept_id ,hdd.dept_code , sum(j.amount_money) amount
				from BUDG_MAT_TYPE_SUBJ bmts
				left join mat_type_dict mtd
					on
						bmts.group_id = mtd.group_id
		                and bmts.hos_id = mtd.hos_id
		                and bmts.copy_code = mtd.copy_code
		                and bmts.mat_type_id = mtd.mat_type_id
				left join baseData j
					on
						mtd.group_id = j.group_id
		                and mtd.hos_id = j.hos_id
		                and mtd.copy_code = j.copy_code
		                and j.mat_type_code like mtd.mat_type_code || '%'
		        left join hos_dept_dict hdd
				on
					j.group_id = hdd.group_id
					and j.hos_id = hdd.hos_id
					and j.dept_id = hdd.dept_id
					and hdd.is_stop = 0
		        where 
		        	bmts.group_id = #{group_id,jdbcType=INTEGER}
					AND bmts.hos_id = #{hos_id,jdbcType=INTEGER}
					AND bmts.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND bmts.budg_year = #{year,jdbcType=VARCHAR}
				group by bmts.group_id , bmts.hos_id , bmts.copy_code , j.year , j.month , bmts.mat_type_id ,
					j.dept_id ,hdd.dept_code
			)
			<!-- 按预算科室 归集数据   最终存储数据 -->
			select a.group_id , a.hos_id , c.copy_code , c.year , c.month , c.mat_type_id ,
					a.dept_id , sum(c.amount) amount
			from acc_dept_attr  a
			left join hos_dept_dict b
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.dept_id = b.dept_id
					and b.is_stop = 0
			left join typeData c
				on
					b.group_id = c.group_id
					and b.hos_id = c.hos_id
					and c.dept_code like (b.dept_code || '%')
					and b.is_stop = 0
			where 
				 a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.is_budg = 1
			group by a.group_id , a.hos_id , c.copy_code , c.year , c.month , c.mat_type_id ,a.dept_id
		)t
		where t.year is not null
	</insert>
	
</mapper>

