{
    "title": "自定义格式",
    "segments": [
        [
			{"description": "你可以调用 <b>FormatterBase</b> 来帮助创建一个含有特殊规则自定义格式用于格式化单元格和为单元格文本设置颜色。"}
        ],
        [
			{"description": "1.创建一个基于 <b>FormatterBase</b> 的类。例如："},
            {"code": [
                "function CustomNumberFormat() {",
                "}",
				"CustomNumberFormat.prototype = new GC.Spread.Formatter.FormatterBase();"
            ]}
        ],
        [
			{"description": "2. 提供 <b>format</b>(obj, conditionalForeColor)来定义格式规则和单元格文本颜色。"},
            {"list": [
                "obj: 单元格的原始值。",
                "conditionalForeColor: 帮助性文本颜色(可选参数)。将值设置为一个颜色字符串来应用此规则。"
            ]},
			{"description": "<b>format</b> 方法返回一个格式的字符串。你可以基于值的范围来为单元格文本设置颜色。例如："},
            {"code": [
                "CustomNumberFormat.prototype.format = function (obj, conditionalForeColor) {",
                "   if (typeof obj === \"number\") { ",
                "       return formatNumber(obj, conditionalForeColor); ",
                "   }",
                "   // ...",
                "};",
                "function formatNumber(value, conditionalForeColor) { ",
                "   if (isFinite(value)) { ",
                "       if (value >= 10) { ",
                "           conditionalForeColor.value = \"green\"; ",
                "       } else if (value > 0) { ",
                "           conditionalForeColor.value = \"gold\"; ",
                "       } else { ",
                "           conditionalForeColor.value = \"blue\"; ",
                "       }" ,
                "   } else { ",
                "       conditionalForeColor.value = \"red\"; ",
                "   }",
                "",
                "   return value.toString(); ",
                "}"
            ]}
        ],
        [
			{"description": "3. <b>parse</b>(str) 的返回一个从特殊字符串解析的值。"}
        ]
    ]
}
