{
  "segments": [
    [
      {
        "description": "1. Spread.Sheets 支持 JSON 格式的序列化与反序列化。你可以将当前 spread 保存为 JSON 格式的数据进行存储, 也可以导入这些 JSON 格式数据到 spread 中来进行场景恢复。"
      }
    ],
    [
      {
        "description": "2. 你可以调用 spread 的 <b>toJSON</b> 方法来生成 spread 的 JSON 对象, 并通过调用 <b>JSON.stringify</b> 方法将此 JSON 对象序列化为 JSON 的字符串格式。例如:"
      },
      {
        "code": [
          "var spread1 = $('#ss').data('workbook');",
          "var jsonString = JSON.stringify(spread1.toJSON()); "
        ]
      }
    ],
    [
      {
        "description": "3. 反之, 你可以调用 <b>JSON.parse</b> 方法将 JSON 字符串反序列化为 JSON 对象, 然后调用 <b>fromJSON</b> 方法来初始化 spread 对象。随即, 你将获得一个全新的与 <b>spread1</b> 一模一样的 spread 。例如:"
      },
      {
        "code": [
          "var spread2 = $('#ss1').data('workbook'); ",
          "spread2.fromJSON(JSON.parse(jsonStr));"
        ]
      }
    ]
  ],
  "title": "Spread JSON 导入/导出"
}
