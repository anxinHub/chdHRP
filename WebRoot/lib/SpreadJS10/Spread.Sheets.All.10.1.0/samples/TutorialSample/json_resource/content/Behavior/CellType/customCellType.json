{
    "title": "自定义单元格",
    "segments": [
        [
            {"description": "1. 想创建一个你自己的单元格类型。你需要在单元格在展示状态下去绘制它，在编辑状态下自定制编辑器，并且处理鼠标和键盘响应行为。"}
        ],
        [
            {"description": "2. 你可以通过继承 <b>Base</b> 类型来自定制单元格类型，并且实现一些必须的方法，例如 <b>paint</b> ， <b>createEditorElement</b> ， <b>getEditorValue</b> 等等。完成了这些你就可以使用你的自定制单元格类型了。例如："},
            {"code": [
                "function MyCellType() {",
                "}",
                "MyCellType.prototype = new GC.Spread.Sheets.CellTypes.Base();",
                "MyCellType.prototype.paint = function (ctx, value, x, y, w, h, style, options) {",
                "  //Paints a cell on the canvas. ",
				"};",
                "MyCellType.prototype.createEditorElement = function() {",
                "   //Creates a DOM element then returns it. ",
				"};",
                "MyCellType.prototype.getEditorValue = function(editorContext) {",
                "   //Gets the editor's value. ",
				"};",
                "MyCellType.prototype.setEditorValue = function(editorContext, value) {",
                "   //Sets the editor's value. ",
				"};",
                "MyCellType.prototype.activateEditor = function(editorContext, cellStyle, cellRect) {",
                "   //Activates the editor, including setting properties or attributes for the editor and binding events for the editor. ",
				"};",
                "//... the other methods implements",
                "sheet.getRange(-1, 1, -1, 1).cellType(new MyCellType());"
            ]}
        ]
    ]
}
