{
  "title": "项目切片器",
  "segments": [
    [
      { "description": "Spread Sheets提供项目切片器， 项目切片器实现了与内置表格切片器相同的筛选界面，可以通过简单的设置在SpreadJS外部完成数据的筛选。" }
    ],
    [
      { "description": "项目切片器是一个独立的切片器控件，并不依赖Spread Sheets，你可以在页面的任何地方添加项目切片器。" }      
    ],
    [
      { "description": "项目切片器需要与切片器数据模块相配合(包括通用切片器数据，表格切片器数据或者其他基于通用切片器数据实现的切片器数据)。如果项目切片器与表格切片器配合使用，当项目切片器发生筛选动作，表格上的数据也会随之同步。" }      
    ],
    [
      { "description": "你可以通过以下步骤构建自己的项目切片器：" },      
      { "description": "(1) 构建数据源和通用切片器数据" },
      {
        "code": [
          "var columnNames = ['Name', 'Class', 'Gender', 'Math', 'English', 'Total Score'];",
          "var data = [['Student1', 1, 'female', '69', '66', '135'],",
          "             ...",
          "            ['Student5', 3, 'male', '60', '30', '90']",
          "           ];",
          "var slicerData = new GC.Spread.Slicers.GeneralSlicerData(data, columnNames);"
        ]
      },
      { "description": "(2) 获取列数据并构建呈现界面。" },
      {
        "code": [
          "var tableStr = \"<table border='1' cellpadding='0' cellspacing='0'><tr>\";",
          "for (var i = 0; i < columnNames.length; i++) {",
          "    tableStr += \"<th>\" + columnNames[i] + \"</th>\";",
          "}",
          "...",
          "tableStr += '</table>';",
          "$listTable = $(tableStr);",
          "$('#container').append($listTable);"
        ]
      },
      { "description": "(3) 获取筛选结果并更新呈现界面。" },
      {
        "code": [
          "var filteredRowIndexs = slicerData.getFilteredRowIndexes();",
          "var trs = $listTable.find('tr');",
          "for (var i = 0; i < slicerData.data.length; i++) {",
          "    if (filteredRowIndexs.indexOf(i) !== -1) {",
          "        $(trs[i+1]).show();",
          "    } else {",
          "        $(trs[i+1]).hide();",
          "    }",
          "}"
        ]
      },
      { "description": "(4) 构建项目切片器，并将通用切片器数据附加在切片器上，并将其置于页面的DOM树结构中。" },
      {
        "code": [
          "var genderSlicer = new GC.Spread.Sheets.Slicers.ItemSlicer('Gender', slicerData, 'Gender');",
          "$('#genderSlicerHost').append(genderSlicer.getDOMElement());",
          "genderSlicer.height(200);",
          "genderSlicer.width(200);"
        ]
      }
    ]
  ]
}