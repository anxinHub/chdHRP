<?xml version="1.0" encoding="UTF-8" ?>
<root>

	<sql id="pkg_wage_cal" type="proc"><![CDATA[
	CREATE OR REPLACE PACKAGE PKG_WAGE_CAL AS
   
   /*-------------------------------------------------------------------------*/
   /* 变量声明区                                                              */
   /*-------------------------------------------------------------------------*/  
   def_OK                    CONSTANT NUMBER      := 0;            -- 成功
   def_ERR                   CONSTANT NUMBER      := -1 ;          -- 系统错误
   def_WARNING               CONSTANT NUMBER      := 100;          -- 系统警告 
   
   --定义type_rec_item_cal结构体
   TYPE type_rec_item_cal IS RECORD(
          wage_code  acc_wage_item.wage_code%type,
          item_code  acc_wage_item.COLUMN_ITEM%type,
          super_code acc_wage_item.COLUMN_ITEM%type,
          flag integer 
    );
        
   --构建type_rec_item_cal结构体二维表 
   TYPE type_tab_item_cal IS TABLE OF type_rec_item_cal INDEX BY BINARY_INTEGER;   
    
   --定义type_rec_level结构体
   TYPE type_rec_level IS RECORD(
         n_level   integer ,   --每个层次数量
         start_num integer ,   --起始序号
         curr_num  integer ,   --当前序号
         level_no  integer     --层次，即下标
    );        
   --构建type_rec_level结构体二维表 
   TYPE type_tab_level IS TABLE OF type_rec_level INDEX BY BINARY_INTEGER;  
    
   --定义应税项计算结果
   TYPE type_rec_tax IS RECORD(
         wage_code acc_wage_pay.wage_code%type,
         kind_code acc_wage_pay.kind_code%type,
         emp_id    acc_wage_pay.emp_id%type,
         item_tax  numeric(20,8)
    );
    
    --构建应税项结构体二维表 
    TYPE type_tab_tax IS TABLE OF type_rec_tax INDEX BY BINARY_INTEGER;  
   
    
    --定义type_rec_item_check结构体
    TYPE type_rec_item_check IS RECORD(
          wage_code  acc_wage_item.wage_code%type ,
          item_code  acc_wage_item.COLUMN_ITEM%type,
          n_level    integer       
    );
    --构建type_rec_item_check结构体二维表 
    TYPE type_tab_item_check IS TABLE OF type_rec_item_check INDEX BY BINARY_INTEGER;  
   /*-------------------------------------------------------------------------
   || 函数名称 ：fun_cal_num
   || 功能描述 ：计算公式中工资项个数｛以花括号分割｝
   || 参数描述 ：参数标识          名称             输入/输出    类型
   ||            -------------------------------------------------------------
   ||            prm_InputStr        字符串           IN           VARCHAR2
   ||
   || 返 回 值 ：                   工资项个数       OUT           NUMBER
   ||
   || 作    者 ：           完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：           修改日期：
   ||-------------------------------------------------------------------------*/
   FUNCTION fun_cal_num(prm_InputStr IN VARCHAR2 --会计科目
                        ) RETURN NUMBER;
                        
                        
   /*-------------------------------------------------------------------------
   || 过程名称 ：分割字符串
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_InputStr            IN     VARCHAR2(18),  -- 输入字符串
   ||            prm_Split               IN     Varchar2,      -- 分割符
   ||            prm_Pos                 IN     Varchar2,      -- 字符串所在位置
   ||            prm_Str                 OUT    Varchar2,      -- 拆分出的符合要求的子字符串
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_SplitChar(prm_inputstr   IN Varchar2,
                            prm_split      IN Varchar2,
                            prm_pos        IN Number,
                            prm_str        Out CLOB,
                            prm_AppCode    Out Number,
                            prm_ErrTxt     Out Varchar2); 
                            
   /*-------------------------------------------------------------------------
   || 过程名称 ：prc_LoadHshTab
   || 功能描述 ：将计算公式装入Hsh表
   || 参数描述 ：参数标识          名称             输入/输出    类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_AppCode        执行代码         OUT          NUMBER
   ||            prm_ErrorMsg       错误信息         OUT          VARCHAR2  
   ||
   || 作    者 ：           完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：           修改日期：
   ||-------------------------------------------------------------------------*/
   Procedure prc_LoadHshTab( prm_group_id          IN   NUMBER         --集团
                            ,prm_hos_id            IN   NUMBER         --医院
                            ,prm_copy_code         IN   VARCHAR2       --账套
                            ,prm_acc_year          IN   VARCHAR2       --年度   
                            ,prm_AppCode           Out  Number         --执行代码
                            ,prm_ErrTxt            Out  Varchar2       --错误信息 
                           ) ;   
   /*-------------------------------------------------------------------------
   || 过程名称 ：Hsh表排序
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_OrderTab(prm_AppCode    Out Number,
                            prm_ErrTxt     Out Varchar2); 
                            
   /*-------------------------------------------------------------------------
   || 过程名称 ：Hsh表去重复
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_DistinctTab(prm_AppCode    Out Number,
                              prm_ErrTxt     Out Varchar2);                        
   
   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行工资计算
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_AppCode                         OUT          Number,        
   ||            prm_ErrTxt                          OUT          Varchar2       
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalc( prm_group_id          IN   NUMBER         --集团
                           ,prm_hos_id            IN   NUMBER         --医院
                           ,prm_copy_code         IN   VARCHAR2       --账套
                           ,prm_acc_year          IN   VARCHAR2       --年度    
                           ,prm_acc_month         IN   VARCHAR2       --月份     
                           ,prm_AppCode           Out  Number
                           ,prm_ErrTxt            Out  Varchar2
                           );       
   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行个税计算
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_TaxCalc ( prm_group_id          IN   NUMBER         --集团
                           ,prm_hos_id            IN   NUMBER         --医院
                           ,prm_copy_code         IN   VARCHAR2       --账套
                           ,prm_acc_year          IN   VARCHAR2       --年度    
                           ,prm_acc_month         IN   VARCHAR2       --月份     
                           ,prm_AppCode           Out  Number
                           ,prm_ErrTxt            Out Varchar2
                           );    
  /*-------------------------------------------------------------------------
   || 过程名称 ：根据叶子结点查找所有父节点(计算应扣合计前需要先将个税计算出来)
   ||            首次调用时,prm_level给0值,表示g_tab_tax_parent无记录
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_wage_code   工资套              IN            VARCHAR2  
   ||            prm_item_code   个税项/父节点       IN            VARCHAR2       
   ||            prm_level       检索开始位置        IN            Varchar2  
   ||            prm_AppCode     业务处理标志        OUT           Number        
   ||            prm_ErrTxt      返回信息            OUT           Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_FindTaxParent(prm_wage_code  IN  VARCHAR2      --修改
                               ,prm_item_code  IN  VARCHAR2
                               ,prm_level      IN  integer
                               ,prm_AppCode    Out Number
                               ,prm_ErrTxt     Out Varchar2                          
                               );
   /*-------------------------------------------------------------------------
   || 过程名称 ：一次计算工资时，将个税及个税的父级节点删除 
   ||            调用时，需先执行写序号、排序及查找父节点
   ||                    prc_WriteFlag、prc_OrderTab、prc_FindParent
   ||            但要注意，必需在prc_DistinctTab[去重复]之前执行    
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
      Procedure prc_DelTaxParent(prm_AppCode    Out Number,
                                 prm_ErrTxt     Out Varchar2
                              );
    
   /*-------------------------------------------------------------------------
   || 过程名称 ：将个税闪存栈[g_tab_tax_parent]加载到工资计算栈中[g_tab_item_cal]
   ||            注意：加载时应去掉tax项
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息   
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_LoadTaxParent(
                                prm_AppCode    Out Number,
                                prm_ErrTxt     Out Varchar2
                               );                                                                                  
     
    /*-------------------------------------------------------------------------
   || 过程名称 ：工资控制栈g_tab_level排序
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_OrderLevel(prm_AppCode    Out Number,
                             prm_ErrTxt     Out Varchar2);
                             
                             
   /*-------------------------------------------------------------------------
   || 过程名称 ：工资批量计算(所有账套一起计算)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcALL(   prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度    
                                ,prm_acc_month         IN   VARCHAR2       --月份     
                                ,prm_AppCode           Out  Number
                                ,prm_ErrTxt            Out  Varchar2
                               ); 
                                 
   /*-------------------------------------------------------------------------
   || 过程名称 ：检测工资计算栈是否存在递归
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2  
   ||            prm_item_code      工资项           IN           VARCHAR2     
   ||            prm_AppCode     业务处理标志        OUT          Number        
   ||            prm_ErrTxt      返回信息            OUT          Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckHshTab(  prm_group_id          IN   NUMBER         --集团
                               ,prm_hos_id            IN   NUMBER         --医院
                               ,prm_copy_code         IN   VARCHAR2       --账套
                               ,prm_acc_year          IN   VARCHAR2       --年度    
                               ,prm_wage_code         IN   VARCHAR2       --工资套
                               ,prm_item_code         IN   VARCHAR2       --工资项 
                               ,prm_level             IN   Number         --调用层次                          
                               ,prm_AppCode           Out  Number
                               ,prm_ErrTxt            Out  Varchar2                          
                               );    
                               
   /*-------------------------------------------------------------------------
   || 过程名称 ：工资完整性检查通过
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      工资套           IN           VARCHAR2    
   ||            prm_AppCode     业务处理标志        OUT          Number        
   ||            prm_ErrTxt      返回信息            OUT          Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckFormula( prm_group_id          IN   NUMBER         --集团
                               ,prm_hos_id            IN   NUMBER         --医院
                               ,prm_copy_code         IN   VARCHAR2       --账套
                               ,prm_acc_year          IN   VARCHAR2       --年度 
                               ,prm_acc_month         IN   VARCHAR2       --月份 
                               ,prm_AppCode           Out  Number
                               ,prm_ErrTxt            Out  Varchar2                          
                               );   
   /*-------------------------------------------------------------------------
   || 过程名称 ：检测工资计算栈是否存在嵌套引用
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number        
   ||            prm_ErrTxt      返回信息            OUT          Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckNest(  prm_group_id          IN   NUMBER         --集团
                             ,prm_hos_id            IN   NUMBER         --医院
                             ,prm_copy_code         IN   VARCHAR2       --账套
                             ,prm_acc_year          IN   VARCHAR2       --年度  
                             ,prm_AppCode           Out  Number
                             ,prm_ErrTxt            Out  Varchar2                          
                            );   
   /*-------------------------------------------------------------------------
   || 过程名称 ：个税出工资计算队列入个税闪存栈
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_wage_code   工资套              IN            VARCHAR2  
   ||            prm_item_code   个税项/父节点       IN            VARCHAR2       
   ||            prm_level       检索开始位置        IN            Varchar2  
   ||            prm_AppCode     业务处理标志        OUT           Number        
   ||            prm_ErrTxt      返回信息            OUT           Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_PushTaxParent(prm_group_id          IN   NUMBER         --集团
                               ,prm_hos_id            IN   NUMBER         --医院
                               ,prm_copy_code         IN   VARCHAR2       --账套
                               ,prm_acc_year          IN   VARCHAR2       --年度  
                               ,prm_AppCode           Out  Number
                               ,prm_ErrTxt            Out  Varchar2                                       
                               );   
                               
   /*-------------------------------------------------------------------------
   || 过程名称 ：根据工资计算队列进行出列计算工资计算(职工)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_emp_id         职工             IN           Number
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcEmp( prm_group_id          IN   NUMBER         --集团
                              ,prm_hos_id            IN   NUMBER         --医院
                              ,prm_copy_code         IN   VARCHAR2       --账套
                              ,prm_acc_year          IN   VARCHAR2       --年度    
                              ,prm_acc_month         IN   VARCHAR2       --月份
                              ,prm_wage_code         IN   VARCHAR2       --月份
                              ,prm_emp_id            IN   NUMBER         --职工ID     
                              ,prm_AppCode           Out  Number
                              ,prm_ErrTxt            Out  Varchar2
                           );
   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行个税计算(职工)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_emp_id         职工             IN           Number
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_TaxCalcEmp ( prm_group_id          IN   NUMBER         --集团
                              ,prm_hos_id            IN   NUMBER         --医院
                              ,prm_copy_code         IN   VARCHAR2       --账套
                              ,prm_acc_year          IN   VARCHAR2       --年度    
                              ,prm_acc_month         IN   VARCHAR2       --月份
                              ,prm_wage_code         IN   VARCHAR2       --工资套
                              ,prm_emp_id            IN   Number         --职工ID
                              ,prm_AppCode           Out  Number
                              ,prm_ErrTxt            Out  Varchar2
                           );                        
                                                                                                                               
   /*-------------------------------------------------------------------------
   || 过程名称 ：工资批量计算(职工)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_emp_id         职工             IN           Number
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcSingle(    prm_group_id          IN   NUMBER         --集团
                                    ,prm_hos_id            IN   NUMBER         --医院
                                    ,prm_copy_code         IN   VARCHAR2       --账套
                                    ,prm_acc_year          IN   VARCHAR2       --年度    
                                    ,prm_acc_month         IN   VARCHAR2       --月份   
                                    ,prm_wage_code         IN   VARCHAR2       --工资套
                                    ,prm_emp_id            IN   Number         --人员ID  
                                    ,prm_AppCode           Out  Number
                                    ,prm_ErrTxt            Out  Varchar2
                                   );
   /*-------------------------------------------------------------------------
   || 过程名称 ：根据工资计算队列进行出列计算工资计算(工资套)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcGroup( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度    
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_AppCode           Out  Number
                                ,prm_ErrTxt            Out  Varchar2
                                );  
   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行个税计算(工资套)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2   
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_TaxCalcGroup ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度    
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_AppCode           Out  Number
                                ,prm_ErrTxt            Out  Varchar2
                             );
   /*-------------------------------------------------------------------------
   || 过程名称 ：工资完整性检查通过（工资套）
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      工资套           IN           VARCHAR2   
   ||            prm_wage_code      工资套           IN           VARCHAR2 
   ||            prm_AppCode     业务处理标志        OUT          Number        
   ||            prm_ErrTxt      返回信息            OUT          Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckFormulaGroup( prm_group_id          IN   NUMBER         --集团
                                    ,prm_hos_id            IN   NUMBER         --医院
                                    ,prm_copy_code         IN   VARCHAR2       --账套
                                    ,prm_acc_year          IN   VARCHAR2       --年度 
                                    ,prm_acc_month         IN   VARCHAR2       --月份 
                                    ,prm_wage_code         IN   VARCHAR2       --工资套   
                                    ,prm_AppCode           Out  Number
                                    ,prm_ErrTxt            Out  Varchar2                          
                                   );    
   /*-------------------------------------------------------------------------
   || 过程名称 ：检测工资计算栈是否存在嵌套引用(工资套)
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number        
   ||            prm_ErrTxt      返回信息            OUT          Varchar2       
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckNestGroup( prm_group_id          IN   NUMBER         --集团
                                 ,prm_hos_id            IN   NUMBER         --医院
                                 ,prm_copy_code         IN   VARCHAR2       --账套
                                 ,prm_acc_year          IN   VARCHAR2       --年度  
                                 ,prm_wage_code         IN   VARCHAR2       --工资套
                                 ,prm_AppCode           Out  Number
                                 ,prm_ErrTxt            Out  Varchar2                          
                                );                                                     
   /*-------------------------------------------------------------------------
   || 过程名称 ：工资批量计算(工资套)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number       
   ||            prm_ErrTxt         返回信息         OUT          Varchar2       
   || 
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcWage(      prm_group_id          IN   NUMBER         --集团
                                    ,prm_hos_id            IN   NUMBER         --医院
                                    ,prm_copy_code         IN   VARCHAR2       --账套
                                    ,prm_acc_year          IN   VARCHAR2       --年度    
                                    ,prm_acc_month         IN   VARCHAR2       --月份   
                                    ,prm_wage_code         IN   VARCHAR2       --工资套                                    
                                    ,prm_AppCode           Out  Number
                                    ,prm_ErrTxt            Out  Varchar2
                                   ) ;    
                                                                                                              
                                                                                                                                                         
END PKG_WAGE_CAL;

	]]></sql>
	
	
	<sql id="pkg_body_wage_cal" type="proc"><![CDATA[
	
create or replace package body PKG_WAGE_CAL AS

   /*-------------------------------------------------------------------------*/
   /* 私有全局常量声明                                                        */
   /*-------------------------------------------------------------------------*/
   g_tab_item_cal       type_tab_item_cal;   --工资计算栈
   g_tab_level          type_tab_level   ;   --工资控制栈
   g_tab_item_cal_order type_tab_item_cal;   --工资计算队列
   g_tab_tax_tmp        type_tab_tax     ;   --个税计算临时栈
   g_tab_tax            type_tab_tax     ;   --个税计算栈
   g_tab_tax_parent     type_tab_item_cal;   --个税闪存栈
   g_tab_item_check     type_tab_item_check; --嵌套调用检测栈
   g_tab_count           integer     := 0;   --工资计算栈成员数




   /*-------------------------------------------------------------------------*/
   /* 私有函数方法声明                                                        */
   /*-------------------------------------------------------------------------*/
   /*-------------------------------------------------------------------------
   || 过程名称 ：初始化所有hsh表
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_InitTab( prm_AppCode    Out Number
                          ,prm_ErrTxt     Out Varchar2
                         )

    Is
    BEGIN
      prm_AppCode := def_OK      ;
      g_tab_item_cal.delete      ;
      g_tab_item_cal_order.delete;
      g_tab_level.delete         ;
      g_tab_tax.delete           ;
      g_tab_tax_tmp.delete       ;
      g_tab_tax_parent.delete    ;
      g_tab_item_check.delete    ;
      g_tab_count := 0           ;
    EXCEPTION
      WHEN OTHERS THEN
         prm_AppCode := def_ERR;
         prm_ErrTxt := '初始化失败！'||SQLERRM;
    END prc_InitTab;
   /*-------------------------------------------------------------------------
   || 函数名称 ：fun_cal_num
   || 功能描述 ：计算公式中工资项个数｛以花括号分割｝
   || 参数描述 ：参数标识          名称             输入/输出    类型
   ||            -------------------------------------------------------------
   ||            prm_InputStr        字符串           IN           VARCHAR2
   ||
   || 返 回 值 ：                   工资项个数       OUT           NUMBER
   ||
   || 作    者 ：           完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：           修改日期：
   ||-------------------------------------------------------------------------*/
   FUNCTION fun_cal_num(prm_InputStr IN VARCHAR2 --字符串
                        ) RETURN NUMBER

   IS
      v_i_ret integer;
   begin

      v_i_ret :=0;

      select  length(prm_InputStr)-length(REPLACE(prm_InputStr, '{', ''))
         into v_i_ret
      from dual;

      return v_i_ret;

   END fun_cal_num;


   /*-------------------------------------------------------------------------
   || 过程名称 ：分割字符串
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_InputStr            IN     VARCHAR2(18),  -- 输入字符串
   ||            prm_Split               IN     Varchar2,      -- 分割符
   ||            prm_Pos                 IN     Varchar2,      -- 字符串所在位置
   ||            prm_Str                 OUT    Varchar2,      -- 拆分出的符合要求的子字符串
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_SplitChar(prm_inputstr   IN Varchar2,
                            prm_split      IN Varchar2,
                            prm_pos        IN Number,
                            prm_str        Out CLOB,
                            prm_AppCode    Out Number,
                            prm_ErrTxt     Out Varchar2)

    Is
    /*------变量定义---------------*/
    ll_FindPos_B      Number;
    ll_StartPos       Number;
    ll_FindPos_E      Number;
    ls_colValue       Varchar(1024);
    li_i              Number;

    str_inputstr      Varchar2(1024);
    str_split         Varchar2(5);
    n_pos             Number;
    Begin
       prm_AppCode := def_OK;
       ll_StartPos := 1;

       li_i := 0;
       prm_AppCode := 0;
       str_inputstr := prm_inputstr;
       str_split := prm_split;
       n_pos := prm_pos;
       Loop
         --拆分带有特定分割符的字符串
         If ll_FindPos_B = 0 Then
            Exit;
         End If;
         ll_FindPos_B := Instr ( str_inputstr , str_split, ll_StartPos );

         ll_FindPos_E := Instr ( str_inputstr , '}', ll_StartPos );

         IF ll_FindPos_B = 0 THEN  --没有找到
            ls_colvalue := substr ( str_inputstr, ll_StartPos );
         ELSE --找到
            li_i := li_i + 1;
            ls_colvalue := substr ( str_inputstr , ll_FindPos_B+1  , ll_FindPos_E - ll_FindPos_B-1 );
            ll_StartPos := ll_FindPos_E + 1;
         END IF;

          If li_i = n_pos Then
            prm_str := ls_ColValue;
            Return  ;
         End if;

      End LOOP ;

      prm_AppCode := '-1';
      prm_ErrTxt := '分割字符串时,没有找到要分割的字符串！';
      Return ;

    EXCEPTION
      WHEN OTHERS THEN
         prm_AppCode := def_ERR;
         prm_ErrTxt := '分割字符串失败！'||SQLERRM;
    End prc_SplitChar;

   /*-------------------------------------------------------------------------
   || 过程名称 ：prc_LoadHshTab
   || 功能描述 ：工资解析公式装载工资计算栈
   || 参数描述 ：参数标识          名称             输入/输出    类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_AppCode        执行代码         OUT          NUMBER
   ||            prm_ErrorMsg       错误信息         OUT          VARCHAR2
   ||
   || 作    者 ：           完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：           修改日期：
   ||-------------------------------------------------------------------------*/
   Procedure prc_LoadHshTab( prm_group_id          IN   NUMBER         --集团
                            ,prm_hos_id            IN   NUMBER         --医院
                            ,prm_copy_code         IN   VARCHAR2       --账套
                            ,prm_acc_year          IN   VARCHAR2       --年度
                            ,prm_AppCode           Out  Number         --执行代码
                            ,prm_ErrTxt            Out  Varchar2       --错误信息
                           )

   IS
      --定义计算公式游标
     CURSOR cur_wage_item_cal  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year        IN   VARCHAR2       --开始年度
                               )
       IS
       select distinct t1.wage_code,t2.column_item as item_code, t1.cal_eng,t1.cal_name
         from acc_wage_item_cal t1
         left join acc_wage_item t2
           on t1.group_id = t2.group_id
          and t1.hos_id = t2.hos_id
          and t1.copy_code = t2.copy_code
          and t1.acc_year = t2.acc_year
          and t1.wage_code = t2.wage_code
          and t1.item_code = t2.item_code
        where t1.group_id = prm_group_id
          and t1.hos_id = prm_hos_id
          and t1.copy_code = prm_copy_code
          and t1.acc_year = prm_acc_year
          and t2.item_cal = '2'        --计算项标识
          and t2.item_type <> '04'     --'01':基本项 '02':社保  '03':公积金 '04':个税
       order by t1.wage_code,substr('00'||substr(t2.column_item,5,length(t2.column_item)-4),-2), t1.cal_eng
          ;

     --定义变量
     v_wage_code   acc_wage_item.wage_code%type;
     v_item_code    varchar2(4000);

     v_item_name   varchar2(4000);   --提示工资项不存用

     v_super_code  acc_wage_item.COLUMN_ITEM%type;
     v_CAL_ENG     acc_wage_item_cal.cal_eng%type;
     v_CAL_CHS     acc_wage_item_cal.cal_name%type;

     v_i           integer;
     v_count       integer;  --用于拆分字符串
     v_pos         number(18);  --用于拆分字符串
     V_index       integer;
   begin
     --初始化变量 g_tab_item_cal
     prm_AppCode  := def_OK;
     v_i          :=   1 ;
     v_item_code  :=   '';
     v_super_code :=   '';
     v_CAL_ENG    :=   '';
     v_CAL_CHS    :=   '';
     v_count      :=   0 ;
     v_pos        :=   1 ;
     g_tab_item_cal(1).flag          := 0;
     g_tab_item_cal_order(1).flag    := 0;
     g_tab_level(1).n_level          := 0;
     g_tab_level(1).start_num        := 0;
     g_tab_level(1).curr_num         := 0;

       open cur_wage_item_cal(  prm_group_id
                              , prm_hos_id
                              , prm_copy_code
                              , prm_acc_year
                             );
       LOOP
          FETCH cur_wage_item_cal INTO v_wage_code,v_super_code,v_CAL_ENG,v_CAL_CHS;    --提取游标
          IF cur_wage_item_cal%NOTFOUND THEN
             if cur_wage_item_cal%isopen then
                CLOSE cur_wage_item_cal;
             end if;
             EXIT;
          END IF;

          --获取字符串工资项总数
          v_count := fun_cal_num(v_CAL_ENG);

          while (v_count > 0 )  LOOP
            --拆分字符串
            prc_SplitChar( v_CAL_ENG     ,
                          '{'            ,
                          v_pos          ,
                          v_item_code    ,
                          prm_AppCode      ,
                          prm_ErrTxt
                          );

            prc_SplitChar( v_CAL_CHS     ,
                          '{'            ,
                          v_pos          ,
                          v_item_name    ,
                          prm_AppCode    ,
                          prm_ErrTxt
                          );

            --拆分字符串失败
            if prm_AppCode = def_ERR then
               if cur_wage_item_cal%isopen then
                  CLOSE cur_wage_item_cal;
               end if;
               return;
            end if;

            --装载Hsh表(g_tab_item_cal)
            g_tab_item_cal(v_i).wage_code  := v_wage_code ;    --修改
            g_tab_item_cal(v_i).item_code  := v_item_code ;
            g_tab_item_cal(v_i).super_code := v_super_code;

            begin

            select instr(v_item_code,'RF') into v_index from dual;

            if v_index =0 then
            select DECODE(ITEM_CAL, 1, 1, 0)
                into g_tab_item_cal(v_i).flag
                from acc_wage_item
               where group_id    = prm_group_id
                 and hos_id      = prm_hos_id
                 and copy_code   = prm_copy_code
                 and acc_year    = prm_acc_year
                 and wage_code   = v_wage_code
                 and column_item = replace(replace(replace(v_item_code,'to_number(',''),'to_char(',''),')','');
             else
                 g_tab_item_cal(v_i).flag:=1;
              end if;
            EXCEPTION
              WHEN OTHERS THEN
                 prm_AppCode := def_ERR;
                 prm_ErrTxt := '计算公式中{'||v_item_name||'}在工资项目表中不存在！'||SQLERRM;
                 return;
            end;

            --更新叶子节点数
            if g_tab_item_cal(v_i).flag = 1 then
               g_tab_level(1).n_level := nvl(g_tab_level(1).n_level,0) + 1;
               g_tab_level(1).start_num := 1 ;
               g_tab_level(1).curr_num  := 1 ;
               g_tab_level(1).level_no  := 1 ;
            end if;

            v_pos   :=  v_pos   + 1;
            v_count :=  v_count - 1;
            v_i := v_i + 1 ;
          END LOOP;
           v_count      :=   0 ;
           v_pos        :=   1 ;

           --插入上级节点
           g_tab_item_cal(v_i).wage_code  := v_wage_code ;    --修改
           g_tab_item_cal(v_i).item_code  := v_super_code ;
           g_tab_item_cal(v_i).super_code := 'TOP';
           g_tab_item_cal(v_i).flag       := 0;
           v_i := v_i + 1 ;
       END LOOP;

       if cur_wage_item_cal%isopen then
          CLOSE cur_wage_item_cal;
       end if;
       g_tab_count := v_i -1;

     EXCEPTION
      WHEN OTHERS THEN
         prm_AppCode := def_ERR;
         prm_ErrTxt := '装载工资计算栈失败！'||SQLERRM;

   END prc_LoadHshTab;

   /*-------------------------------------------------------------------------
   || 过程名称 ：根据后序规则对工资计算栈编写写排序号
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WriteFlag(prm_AppCode    Out Number,
                            prm_ErrTxt     Out Varchar2)

    Is
    /*------变量定义---------------*/
      v_exist_flag integer;  --查找是否存在
      v_level      integer;  --更新的层级
      v_loop_num   integer;  --循环次数
      v_level_num  integer;  --层级记录数
    BEGIN
      prm_AppCode  := def_OK;
      v_exist_flag := 0 ;
      v_level      := 2 ;
      v_loop_num   := g_tab_count - g_tab_level(1).n_level ;
      v_level_num  := 0;

      while(v_loop_num > 0) loop

          for i in 1..g_tab_item_cal.count() loop

            --如果已更新序号的工资项，直接返回
            if g_tab_item_cal(i).flag <> 0 then
                goto next_i;
            end if;


            for j in 1..g_tab_item_cal.count() loop

               if i=j then
                   goto next_j;
               end if;

               --少一个条件：上级已更新的才能跳出
               if g_tab_item_cal(j).flag <> 0   then
                  if g_tab_item_cal(j).flag = v_level then --如果等于当前更新的级次
                     if g_tab_item_cal(j).super_code = g_tab_item_cal(i).item_code and
                        g_tab_item_cal(j).wage_code  = g_tab_item_cal(i).wage_code then  --修改,同时判断是否为同一工资套
                        goto next_i;
                     else
                        goto next_j;
                     end if;
                  else
                     goto next_j;
                  end if;
               end if;

              if g_tab_item_cal(j).flag = 0 then
                 if g_tab_item_cal(j).super_code = g_tab_item_cal(i).item_code and
                    g_tab_item_cal(j).wage_code  = g_tab_item_cal(i).wage_code then   --修改,同时判断是否为同一工资套
                    goto next_i;
                 end if;
              end if;
              <<next_j>>
              null;
            end loop;

            --如果该工资项没有找到super_code与其相匹配，说明为叶子节点
            if v_exist_flag = 0 then
                g_tab_item_cal(i).flag := v_level ;
                v_level_num := v_level_num + 1;
            end if;
            <<next_i>>
              null;
          end loop;
          g_tab_level(v_level).n_level   := v_level_num;
          --下层的起始位置为上级数量+起始位置
          g_tab_level(v_level).start_num := nvl(g_tab_level(v_level-1).start_num,0) + nvl(g_tab_level(v_level-1).n_level,0) ;
          g_tab_level(v_level).curr_num  := nvl(g_tab_level(v_level-1).start_num,0) + nvl(g_tab_level(v_level-1).n_level,0) ;
          g_tab_level(v_level).level_no  := v_level;
          v_level    := v_level + 1;
          v_loop_num := v_loop_num - v_level_num;
          v_level_num:= 0;
      end loop;
     EXCEPTION
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '工资计算栈写排序号失败！'||SQLERRM;
    END prc_WriteFlag;

   /*-------------------------------------------------------------------------
   || 过程名称 ：工资计算栈数据出栈入队列
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_OrderTab(prm_AppCode    Out Number,
                            prm_ErrTxt     Out Varchar2)

    Is

    begin
       prm_AppCode  := def_OK;
       for i in 1..g_tab_item_cal.count() loop
          for j in 1..g_tab_level.count() loop
              if g_tab_item_cal(i).flag = g_tab_level(j).level_no then
                 g_tab_item_cal_order(g_tab_level(j).curr_num).wage_code := g_tab_item_cal(i).wage_code; --修改
                 g_tab_item_cal_order(g_tab_level(j).curr_num).item_code := g_tab_item_cal(i).item_code;
                 g_tab_item_cal_order(g_tab_level(j).curr_num).super_code := g_tab_item_cal(i).super_code;
                 g_tab_item_cal_order(g_tab_level(j).curr_num).flag := g_tab_item_cal(i).flag;
                 g_tab_level(j).curr_num := nvl(g_tab_level(j).curr_num,0)+ 1;
              end if;
          end loop;
       end loop;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         NULL;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '解析工资出栈入队列失败！'||SQLERRM;
    end prc_OrderTab;

   /*-------------------------------------------------------------------------
   || 过程名称 ：移除工资计算队列重复成员
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_DistinctTab(prm_AppCode    Out Number,
                              prm_ErrTxt     Out Varchar2)

    Is
      v_first  integer := 0;
      v_i      integer := 0;
      v_tab_item_cal_order_tmp  type_tab_item_cal;

      begin
      prm_AppCode  := def_OK;

      for i in 1..g_tab_item_cal_order.count() loop
         if g_tab_item_cal_order(i).flag > 1 then
             if v_first = 0 then
                v_i := v_i + 1;
                v_tab_item_cal_order_tmp(v_i).wage_code  := g_tab_item_cal_order(i).wage_code  ; --修改
                v_tab_item_cal_order_tmp(v_i).item_code  := g_tab_item_cal_order(i).item_code  ;
                v_tab_item_cal_order_tmp(v_i).super_code := g_tab_item_cal_order(i).super_code ;
                v_tab_item_cal_order_tmp(v_i).flag       := g_tab_item_cal_order(i).flag       ;
                v_first := 1;
             else
                for j in 1..v_tab_item_cal_order_tmp.count() loop
                  if v_tab_item_cal_order_tmp(j).item_code = g_tab_item_cal_order(i).item_code and
                     v_tab_item_cal_order_tmp(j).wage_code = g_tab_item_cal_order(i).wage_code then --修改
                     goto next_i;
                  end if;
                end loop;
                v_i := v_i + 1;
                v_tab_item_cal_order_tmp(v_i).wage_code  := g_tab_item_cal_order(i).wage_code  ; --修改
                v_tab_item_cal_order_tmp(v_i).item_code  := g_tab_item_cal_order(i).item_code  ;
                v_tab_item_cal_order_tmp(v_i).super_code := g_tab_item_cal_order(i).super_code ;
                v_tab_item_cal_order_tmp(v_i).flag       := g_tab_item_cal_order(i).flag       ;
             end if;
         end if;
         <<next_i>>
         null;
      end loop;

      g_tab_item_cal_order.delete;
      for k in 1..v_tab_item_cal_order_tmp.count() loop
         g_tab_item_cal_order(k).wage_code  := v_tab_item_cal_order_tmp(k).wage_code  ;--修改
         g_tab_item_cal_order(k).item_code  := v_tab_item_cal_order_tmp(k).item_code  ;
         g_tab_item_cal_order(k).super_code := v_tab_item_cal_order_tmp(k).super_code ;
         g_tab_item_cal_order(k).flag       := v_tab_item_cal_order_tmp(k).flag       ;
      end loop;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '移除工资计算队列重复成员失败！'||SQLERRM;
    end prc_DistinctTab;

   /*-------------------------------------------------------------------------
   || 过程名称 ：根据工资计算队列进行出列计算工资计算
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalc(  prm_group_id          IN   NUMBER         --集团
                            ,prm_hos_id            IN   NUMBER         --医院
                            ,prm_copy_code         IN   VARCHAR2       --账套
                            ,prm_acc_year          IN   VARCHAR2       --年度
                            ,prm_acc_month         IN   VARCHAR2       --月份
                            ,prm_AppCode           Out  Number
                            ,prm_ErrTxt            Out  Varchar2
                           )

    Is
     --定义计算公式游标
     CURSOR cur_wage_item_cal  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_wage_code         IN   VARCHAR2       --工资套  修改
                                ,prm_item_code         IN   VARCHAR2       --工资项
                               )
       IS
         select t1.wage_code,
                t1.kind_code,
                t2.column_item as item_code,
                t2.item_name,
                t1.cal_name,
                REPLACE(REPLACE(t1.cal_eng, '{', ''), '}', '') as cal_eng
           from acc_wage_item_cal t1
           left join acc_wage_item t2
             on t1.group_id  = t2.group_id
            and t1.hos_id    = t2.hos_id
            and t1.copy_code = t2.copy_code
            and t1.acc_year  = t2.acc_year
            and t1.wage_code = t2.wage_code
            and t1.item_code = t2.item_code
          where t1.group_id    = prm_group_id
            and t1.hos_id      = prm_hos_id
            and t1.copy_code   = prm_copy_code
            and t1.acc_year    = prm_acc_year
            and t1.wage_code   = prm_wage_code
            and t2.column_item = prm_item_code
            and t2.item_cal    = '2'       --计算项标识
            and t2.item_type   <> '04';   --'01':基本项 '02':社保  '03':公积金 '04':个税

      --定义工资表中游标
      CURSOR cur_acc_wage_pay  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_kind_code         IN   VARCHAR2       --职工类别
                                )
       IS
         select emp_id
           from acc_wage_pay t
          where t.group_id  = prm_group_id
            and t.hos_id    = prm_hos_id
            and t.copy_code = prm_copy_code
            and t.wage_code = prm_wage_code
            and t.acc_year  = prm_acc_year
            and t.acc_month = prm_acc_month
            and (   (prm_kind_code <>0  and t.kind_code = prm_kind_code)
                 or (prm_kind_code = 0 )
                )
          ;

         --定义变量
         v_wage_code acc_wage_item.wage_code%type;
         v_kind_code acc_wage_item_cal.kind_code%type;
         v_item_code acc_wage_item.column_item%type;
         v_item_name acc_wage_item.item_name%type;
         v_cal_name  acc_wage_item_cal.cal_name%type;
         v_cal_eng   acc_wage_item_cal.cal_eng%type;

         v_cal_eng_emp   acc_wage_item_cal.cal_eng%type;

         v_str_wage_sql       varchar2(4000); --工资计算串

         v_item_value    number(35,2);

         v_emp_id    acc_wage_pay.emp_id%type;
    begin
      --初始化变量
      v_str_wage_sql    := ''    ;
      v_item_value:=0;
      prm_AppCode  := def_OK;

      --工资批量计算
      for i in 1..g_tab_item_cal_order.count() loop

        open cur_wage_item_cal( prm_group_id
                              , prm_hos_id
                              , prm_copy_code
                              , prm_acc_year
                              , g_tab_item_cal_order(i).wage_code   --修改
                              , g_tab_item_cal_order(i).item_code
                             );
         LOOP
            FETCH cur_wage_item_cal INTO v_wage_code,v_kind_code,v_item_code,v_item_name,v_cal_name,v_cal_eng;    --提取游标

            IF cur_wage_item_cal%NOTFOUND THEN
               if cur_wage_item_cal%isopen then
                  CLOSE cur_wage_item_cal;
               end if;
               EXIT;
            END IF;

            --替换函数中本集团
            if instr(v_cal_eng,'本集团') > 0  then
               v_cal_eng := replace(v_cal_eng,'本集团',to_char(prm_group_id));
            end if;

            --替换函数中本医院
            if instr(v_cal_eng,'本医院') > 0  then
               v_cal_eng := replace(v_cal_eng,'本医院',to_char(prm_hos_id));
            end if;

            --替换函数中本账套
            if instr(v_cal_eng,'本账套') > 0  then
               v_cal_eng := replace(v_cal_eng,'本账套',prm_copy_code);
            end if;

            --替换函数中年度
            if instr(v_cal_eng,'本年度') > 0  then
               v_cal_eng := replace(v_cal_eng,'本年度',to_char(prm_acc_year));
            end if;

            if instr(v_cal_eng,'上年') > 0  then
               v_cal_eng := replace(v_cal_eng,'上年',to_char(to_number(prm_acc_year)-1));
            end if;

            if instr(v_cal_eng,'上两年') > 0  then
               v_cal_eng := replace(v_cal_eng,'上两年',to_char(to_number(prm_acc_year)-2));
            end if;

            --替换函数中期间
            if instr(v_cal_eng,'本期间') > 0  then
               v_cal_eng := replace(v_cal_eng,'本期间',prm_acc_month);
            end if;

            --替换函数期间:由于避免年度变化，当上期跨年时，传递【增加值|本期】
            if instr(v_cal_eng,'上期') > 0  then
              if prm_acc_month  = '01' then
                 v_cal_eng := replace(v_cal_eng,'上期','-1|01');
              else
                 v_cal_eng := replace(v_cal_eng,'上期',substr('00'||to_char(to_number(prm_acc_month)-1),-2));
              end if;
            end if;

            --替换函数期间:由于避免年度变化，当上两期跨年时，传递【增加值|本期】
            if instr(v_cal_eng,'上两期') > 0  then
              if prm_acc_month  = '01' then
                 v_cal_eng := replace(v_cal_eng,'上两期','-2|01');
              elsif prm_acc_month  = '02'  then
                 v_cal_eng := replace(v_cal_eng,'上两期','-2|02');
              else
                 v_cal_eng := replace(v_cal_eng,'上两期',substr('00'||to_char(to_number(prm_acc_month)-2),-2));
              end if;
            end if;

            --替换函数中工资套
            if instr(v_cal_eng,'本工资套') > 0  then
               v_cal_eng := replace(v_cal_eng,'本工资套',v_wage_code);
            end if;

             --替换函数中取上月自然天数
            if instr(v_cal_eng,'取上月自然天数') > 0  then
               v_cal_eng := replace(v_cal_eng,'取上月自然天数',prm_acc_year||''||prm_acc_month);
            end if;

            --替换函数中本职工，如涉及本职工时，需要单人计算,否则批量计算
            if instr(v_cal_eng,'本职工') > 0  then

               --按职工执行计算
               open cur_acc_wage_pay(   prm_group_id
                                      , prm_hos_id
                                      , prm_copy_code
                                      , prm_acc_year
                                      , prm_acc_month
                                      , v_wage_code
                                      , v_kind_code
                                     );
               LOOP
                  FETCH cur_acc_wage_pay INTO v_emp_id;    --提取游标

                  IF cur_acc_wage_pay%NOTFOUND THEN
                     if cur_acc_wage_pay%isopen then
                        CLOSE cur_acc_wage_pay;
                     end if;
                     EXIT;
                  END IF;
                  v_cal_eng_emp :=  v_cal_eng;
                  v_cal_eng := replace(v_cal_eng,'本职工',to_char(v_emp_id));

                  execute immediate 'select  round('|| v_cal_eng ||' ,2) from  acc_wage_pay
                                          where group_id  =   '|| prm_group_id     ||'
                                            and hos_id    =   '|| prm_hos_id       ||'
                                            and copy_code = '''|| prm_copy_code    ||'''
                                            and acc_year  = '''|| prm_acc_year     ||'''
                                            and acc_month = '''|| prm_acc_month    ||'''
                                            and wage_code = '''|| v_wage_code      ||'''
                                            and emp_id    =   '|| to_char(v_emp_id)||'
                                         ' into v_item_value;
                  if v_kind_code <> '0' then

                      v_str_wage_sql :='update acc_wage_pay
                                           set '||v_item_code||' = round('|| v_item_value ||' ,2)
                                          where group_id  =   '|| prm_group_id     ||'
                                            and hos_id    =   '|| prm_hos_id       ||'
                                            and copy_code = '''|| prm_copy_code    ||'''
                                            and acc_year  = '''|| prm_acc_year     ||'''
                                            and acc_month = '''|| prm_acc_month    ||'''
                                            and wage_code = '''|| v_wage_code      ||'''
                                            and kind_code = '''|| v_kind_code      ||'''
                                            and emp_id    =   '|| to_char(v_emp_id)||'
                                         '
                         ;
                   else  --所有类别工资计算公式均一样
                       v_str_wage_sql :='update acc_wage_pay
                                           set '||v_item_code||' = round('|| v_item_value ||' ,2)
                                          where group_id  =   '|| prm_group_id     ||'
                                            and hos_id    =   '|| prm_hos_id       ||'
                                            and copy_code = '''|| prm_copy_code    ||'''
                                            and acc_year  = '''|| prm_acc_year     ||'''
                                            and acc_month = '''|| prm_acc_month    ||'''
                                            and wage_code = '''|| v_wage_code      ||'''
                                            and emp_id    =   '|| to_char(v_emp_id)||'
                                         '
                         ;
                   end if;
                   execute immediate v_str_wage_sql;
                   v_str_wage_sql := '';
                   v_cal_eng := v_cal_eng_emp ;
              END LOOP;

              if cur_acc_wage_pay%isopen then
                 CLOSE cur_acc_wage_pay;
              end if;

            else
              if v_kind_code <> '0' then
                  v_str_wage_sql :='update acc_wage_pay
                                       set '||v_item_code||' = round('|| v_cal_eng ||' ,2)
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| v_wage_code   ||'''
                                        and kind_code = '''|| v_kind_code   ||'''
                                     '
                     ;
               else  --所有类别工资计算公式均一样
                   v_str_wage_sql :='update acc_wage_pay
                                       set '||v_item_code||' = round('|| v_cal_eng ||' ,2)
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| v_wage_code   ||'''
                                     '
                     ;
               end if;
              execute immediate v_str_wage_sql;
              v_str_wage_sql := '';
           end if;   --<<替换函数中本职工>>
         end loop;

         if cur_wage_item_cal%isopen then
            CLOSE cur_wage_item_cal;
         end if;
      end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '工资计算失败！'||SQLERRM;
    end prc_WageCalc;


   /*-------------------------------------------------------------------------
   || 过程名称 ：根据叶子结点查找所有父节点(计算应扣合计前需要先将个税计算出来)
   ||            首次调用时,prm_level给0值,表示g_tab_tax_parent无记录
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_wage_code   工资套              IN            VARCHAR2
   ||            prm_item_code   个税项/父节点       IN            VARCHAR2
   ||            prm_level       检索开始位置        IN            Varchar2
   ||            prm_AppCode     业务处理标志        OUT           Number
   ||            prm_ErrTxt      返回信息            OUT           Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_FindTaxParent(prm_wage_code  IN  VARCHAR2      --修改
                               ,prm_item_code  IN  VARCHAR2
                               ,prm_level      IN  integer
                               ,prm_AppCode    Out Number
                               ,prm_ErrTxt     Out Varchar2
                               )

    Is
       v_tax_parent acc_wage_item.column_item%type; --个税父节点
       v_i_tax       integer; --个税下标
       v_i_tax_pos   integer; --首次插入
       v_tax_level_count integer;
    begin
       --初始化变量
       v_tax_parent := '';
       v_i_tax      := g_tab_tax_parent.count() + 1; --确定起始下标
       v_i_tax_pos  := prm_level;
       v_tax_level_count := 0;

       for i in 1..g_tab_item_cal_order.count() loop
          --1、查找个税工资项并将本身及上级工资项压栈
          if g_tab_item_cal_order(i).wage_code = prm_wage_code  and  --修改，区分工资套
             g_tab_item_cal_order(i).item_code = prm_item_code  then

              --将个税工资项压栈,prm_level = 0
              if prm_level = 0 then
                  g_tab_tax_parent(v_i_tax).wage_code  := g_tab_item_cal_order(i).wage_code;     --修改
                  g_tab_tax_parent(v_i_tax).item_code  := g_tab_item_cal_order(i).item_code;
                  g_tab_tax_parent(v_i_tax).super_code := g_tab_item_cal_order(i).super_code;

                  --首次压栈一定为个税项，由于个税项会预计算，将其压栈身份改为输入项
                 /* g_tab_tax_parent(v_i_tax).flag := g_tab_item_cal_order(i).flag;*/
                  g_tab_tax_parent(v_i_tax).flag := 1;
                  v_i_tax := v_i_tax + 1;
                  v_i_tax_pos  := g_tab_tax_parent.count() + 1;
              end if;

              --将个税上级工资项压栈
              if  g_tab_item_cal_order(i).super_code <> 'TOP' then
                  for j in 1..g_tab_item_cal_order.count() loop
                      if g_tab_item_cal_order(j).item_code = g_tab_item_cal_order(i).super_code and
                         g_tab_item_cal_order(j).wage_code = g_tab_item_cal_order(i).wage_code  then --修改

                           for m in 1..g_tab_tax_parent.count() loop
                               --如果已遍历过，不再遍历
                               if g_tab_tax_parent(m).item_code  = g_tab_item_cal_order(j).item_code   and
                                  g_tab_tax_parent(m).super_code = g_tab_item_cal_order(j).super_code  and
                                  g_tab_tax_parent(m).wage_code  = g_tab_item_cal_order(j).wage_code   then --修改
                                  goto next_j;
                               end if;
                           end loop;

                           --如果均不存在，压栈
                           g_tab_tax_parent(v_i_tax).wage_code := g_tab_item_cal_order(j).wage_code;
                           g_tab_tax_parent(v_i_tax).item_code := g_tab_item_cal_order(j).item_code;
                           g_tab_tax_parent(v_i_tax).super_code := g_tab_item_cal_order(j).super_code;
                           g_tab_tax_parent(v_i_tax).flag := g_tab_item_cal_order(j).flag;
                           v_i_tax := v_i_tax + 1;

                           if v_i_tax_pos = prm_level then
                             v_i_tax_pos  := g_tab_tax_parent.count();
                           end if;
                      end if;
                      <<next_j>>
                      null;
                  end loop;
               end if;
          end if;
       end loop;

       --递归查找(将记录数存起来，防止动态更改)
       v_tax_level_count := g_tab_tax_parent.count();

       --当存在新压栈时，再递归查找
       if v_i_tax_pos > prm_level then
         for k in v_i_tax_pos..v_tax_level_count loop
             prc_FindTaxParent(g_tab_tax_parent(k).wage_code       --修改
                              ,g_tab_tax_parent(k).item_code
                              ,k
                              ,prm_AppCode
                              ,prm_ErrTxt
                              );
             if prm_AppCode = def_ERR then
               return;
             end if;
         end loop;
       end if;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '个税出队列入栈时失败！'||SQLERRM;
    end  prc_FindTaxParent;

   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行个税计算
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_TaxCalc ( prm_group_id          IN   NUMBER         --集团
                           ,prm_hos_id            IN   NUMBER         --医院
                           ,prm_copy_code         IN   VARCHAR2       --账套
                           ,prm_acc_year          IN   VARCHAR2       --年度
                           ,prm_acc_month         IN   VARCHAR2       --月份
                           ,prm_AppCode           Out  Number
                           ,prm_ErrTxt            Out Varchar2
                           )

    Is
      --定义应税项游标
      CURSOR cur_wage_tax_cal   (  prm_group_id          IN   NUMBER         --集团
                                  ,prm_hos_id            IN   NUMBER         --医院
                                  ,prm_copy_code         IN   VARCHAR2       --账套
                                  ,prm_acc_year          IN   VARCHAR2       --年度
                                 )
          IS
          select t1.wage_code,
                 t1.kind_code,
                 t1.cal_name,
                 REPLACE(REPLACE(t1.cal_eng, '{', ''), '}', '') as cal_eng
            from ACC_WAGE_TAX_CAL t1
           where t1.group_id    =  prm_group_id
             and t1.hos_id      =  prm_hos_id
             and t1.copy_code   =  prm_copy_code
             and t1.acc_year    =  prm_acc_year
            order by t1.group_id,t1.hos_id,t1.copy_code,t1.acc_year,t1.wage_code,t1.kind_code;

      --定义工资表中游标
      CURSOR cur_acc_wage_pay  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_kind_code         IN   VARCHAR2       --职工类别
                                )
       IS
         select emp_id
           from acc_wage_pay t
          where t.group_id  = prm_group_id
            and t.hos_id    = prm_hos_id
            and t.copy_code = prm_copy_code
            and t.wage_code = prm_wage_code
            and t.acc_year  = prm_acc_year
            and t.acc_month = prm_acc_month
            and (   (prm_kind_code <>0  and t.kind_code = prm_kind_code)
                 or (prm_kind_code = 0 )
                )
          ;

       --定义变量
       v_wage_code acc_wage_item.wage_code%type;
       v_kind_code acc_wage_item_cal.kind_code%type;
       v_item_code acc_wage_item.column_item%type;
       v_cal_name  acc_wage_item_cal.cal_name%type;
       v_cal_eng   acc_wage_item_cal.cal_eng%type;
       v_cal_eng_emp   acc_wage_item_cal.cal_eng%type;

       v_str_tax_sql        varchar2(4000);  --应税项计算串
       v_str_cal_tax_sql    varchar2(4000);  --计算个人所得税

       v_tax_i          integer       ;
       v_tax_value      ACC_WAGE_TAX_SET.Tax_Value%type;  --中国
       v_ass_value      ACC_WAGE_TAX_SET.Ass_Value%type;  --外籍及港、澳、台 = v_tax_value + v_ass_value
       v_ret_tax_value  ACC_WAGE_TAX_SET.Tax_Value%type;  --综合起征点
       v_n_RATE         ACC_WAGE_TAX.Rate%type;           --税率
       v_n_DEDUCT       ACC_WAGE_TAX.Deduct%type;         --速算扣除数
       v_countries_code ACC_EMP_ATTR.Countries_Code%type; --国籍 001：中国

       v_emp_id         acc_wage_pay.emp_id%type;         --职工ID，处理本职工
    begin
      --初始化变量
      v_str_tax_sql     := ''    ;
      v_str_cal_tax_sql := ''    ;
      v_tax_i           := 0     ;
      v_tax_value       := 3500  ; --中国
      v_ass_value       := 1300  ; --外籍及港、澳、台 = v_tax_value + v_ass_value
      v_ret_tax_value   := 0     ;
      v_n_RATE          := 0     ;
      v_n_DEDUCT        := 0     ;
      v_countries_code  := '001' ; --中国

      prm_AppCode  := def_OK;

      --应税项计算
      open cur_wage_tax_cal(  prm_group_id
                            , prm_hos_id
                            , prm_copy_code
                            , prm_acc_year
                           );
      LOOP
          FETCH cur_wage_tax_cal INTO v_wage_code,v_kind_code,v_cal_name,v_cal_eng;    --提取游标

          IF cur_wage_tax_cal%NOTFOUND THEN
             if cur_wage_tax_cal%isopen then
                CLOSE cur_wage_tax_cal;
             end if;
             EXIT;
          END IF;

          --替换函数中本集团
          if instr(v_cal_eng,'本集团') > 0  then
             v_cal_eng := replace(v_cal_eng,'本集团',to_char(prm_group_id));
          end if;

          --替换函数中本医院
          if instr(v_cal_eng,'本医院') > 0  then
             v_cal_eng := replace(v_cal_eng,'本医院',to_char(prm_hos_id));
          end if;

          --替换函数中本账套
          if instr(v_cal_eng,'本账套') > 0  then
             v_cal_eng := replace(v_cal_eng,'本账套',prm_copy_code);
          end if;

          --替换函数中年度
          if instr(v_cal_eng,'本年度') > 0  then
             v_cal_eng := replace(v_cal_eng,'本年度',to_char(prm_acc_year));
          end if;

          if instr(v_cal_eng,'上年') > 0  then
             v_cal_eng := replace(v_cal_eng,'上年',to_char(to_number(prm_acc_year)-1));
          end if;

          if instr(v_cal_eng,'上两年') > 0  then
             v_cal_eng := replace(v_cal_eng,'上两年',to_char(to_number(prm_acc_year)-2));
          end if;

          --替换函数中期间
          if instr(v_cal_eng,'本期间') > 0  then
             v_cal_eng := replace(v_cal_eng,'本期间',prm_acc_month);
          end if;

          --替换函数期间:由于避免年度变化，当上期跨年时，传递【增加值|本期】
          if instr(v_cal_eng,'上期') > 0  then
            if prm_acc_month  = '01' then
               v_cal_eng := replace(v_cal_eng,'上期','-1|01');
            else
               v_cal_eng := replace(v_cal_eng,'上期',substr('00'||to_char(to_number(prm_acc_month)-1),-2));
            end if;
          end if;

          --替换函数期间:由于避免年度变化，当上两期跨年时，传递【增加值|本期】
          if instr(v_cal_eng,'上两期') > 0  then
            if prm_acc_month  = '01' then
               v_cal_eng := replace(v_cal_eng,'上两期','-2|01');
            elsif prm_acc_month  = '02'  then
               v_cal_eng := replace(v_cal_eng,'上两期','-2|02');
            else
               v_cal_eng := replace(v_cal_eng,'上两期',substr('00'||to_char(to_number(prm_acc_month)-2),-2));
            end if;
          end if;

          --替换函数中工资套
          if instr(v_cal_eng,'本工资套') > 0  then
             v_cal_eng := replace(v_cal_eng,'本工资套',v_wage_code);
          end if;

           --替换函数中取上月自然天数
            if instr(v_cal_eng,'取上月自然天数') > 0  then
               v_cal_eng := replace(v_cal_eng,'取上月自然天数',prm_acc_year||''||prm_acc_month);
            end if;

          --替换函数中本职工，如涉及本职工时，需要单人计算,否则批量计算
          if instr(v_cal_eng,'本职工') > 0  then

             --按职工执行计算
             open cur_acc_wage_pay(   prm_group_id
                                    , prm_hos_id
                                    , prm_copy_code
                                    , prm_acc_year
                                    , prm_acc_month
                                    , v_wage_code
                                    , v_kind_code
                                   );
             LOOP
                FETCH cur_acc_wage_pay INTO v_emp_id;    --提取游标

                IF cur_acc_wage_pay%NOTFOUND THEN
                   if cur_acc_wage_pay%isopen then
                      CLOSE cur_acc_wage_pay;
                   end if;
                   EXIT;
                END IF;

                v_cal_eng_emp :=  v_cal_eng;
                v_cal_eng := replace(v_cal_eng,'本职工',to_char(v_emp_id));

                if v_kind_code <> '0' then
                   v_str_tax_sql := 'select  wage_code
                                           , kind_code
                                           , emp_id
                                           ,round('|| v_cal_eng ||' ,2)
                                      from acc_wage_pay
                                     where group_id  =   '|| prm_group_id     ||'
                                       and hos_id    =   '|| prm_hos_id       ||'
                                       and copy_code = '''|| prm_copy_code    ||'''
                                       and wage_code = '''|| v_wage_code      ||'''
                                       and kind_code = '''|| v_kind_code      ||'''
                                       and acc_year  = '''|| prm_acc_year     ||'''
                                       and acc_month = '''|| prm_acc_month    ||'''
                                       and emp_id    =   '|| to_char(v_emp_id)||'
                                     '
                   ;
                else
                  v_str_tax_sql := 'select  wage_code
                                           , kind_code
                                           , emp_id
                                           ,round('|| v_cal_eng ||' ,2)
                                      from acc_wage_pay
                                     where group_id  =   '|| prm_group_id     ||'
                                       and hos_id    =   '|| prm_hos_id       ||'
                                       and copy_code = '''|| prm_copy_code    ||'''
                                       and wage_code = '''|| v_wage_code      ||'''
                                       and acc_year  = '''|| prm_acc_year     ||'''
                                       and acc_month = '''|| prm_acc_month    ||'''
                                       and emp_id    =   '|| to_char(v_emp_id)||'
                                     '
                   ;
                end if;

                execute immediate v_str_tax_sql bulk collect into g_tab_tax_tmp;

                for i in 1..g_tab_tax_tmp.count() loop
                   v_tax_i := v_tax_i + 1;
                   g_tab_tax(v_tax_i).wage_code := g_tab_tax_tmp(i).wage_code;
                   g_tab_tax(v_tax_i).kind_code := g_tab_tax_tmp(i).kind_code;
                   g_tab_tax(v_tax_i).emp_id    := g_tab_tax_tmp(i).emp_id;
                   g_tab_tax(v_tax_i).item_tax  := g_tab_tax_tmp(i).item_tax;
                   dbms_output.put_line(i);
                end loop;
                g_tab_tax_tmp.delete;
                v_str_tax_sql := '';
                v_cal_eng := v_cal_eng_emp ;
             END LOOP;

             if cur_acc_wage_pay%isopen then
                CLOSE cur_acc_wage_pay;
             end if;
          else
              if v_kind_code <> '0' then
                 v_str_tax_sql := 'select  wage_code
                                         , kind_code
                                         , emp_id
                                         ,round('|| v_cal_eng ||' ,2)
                                    from acc_wage_pay
                                   where group_id  =   '|| prm_group_id  ||'
                                     and hos_id    =   '|| prm_hos_id    ||'
                                     and copy_code = '''|| prm_copy_code ||'''
                                     and wage_code = '''|| v_wage_code   ||'''
                                     and kind_code = '''|| v_kind_code   ||'''
                                     and acc_year  = '''|| prm_acc_year  ||'''
                                     and acc_month = '''|| prm_acc_month ||'''
                                   '
                 ;
              else
                v_str_tax_sql := 'select  wage_code
                                         , kind_code
                                         , emp_id
                                         ,round('|| v_cal_eng ||' ,2)
                                    from acc_wage_pay
                                   where group_id  =   '|| prm_group_id  ||'
                                     and hos_id    =   '|| prm_hos_id    ||'
                                     and copy_code = '''|| prm_copy_code ||'''
                                     and wage_code = '''|| v_wage_code   ||'''
                                     and acc_year  = '''|| prm_acc_year  ||'''
                                     and acc_month = '''|| prm_acc_month ||'''
                                   '
                 ;
              end if;

              execute immediate v_str_tax_sql bulk collect into g_tab_tax_tmp;

              for i in 1..g_tab_tax_tmp.count() loop
                 v_tax_i := v_tax_i + 1;
                 g_tab_tax(v_tax_i).wage_code := g_tab_tax_tmp(i).wage_code;
                 g_tab_tax(v_tax_i).kind_code := g_tab_tax_tmp(i).kind_code;
                 g_tab_tax(v_tax_i).emp_id    := g_tab_tax_tmp(i).emp_id;
                 g_tab_tax(v_tax_i).item_tax  := g_tab_tax_tmp(i).item_tax;
              end loop;
              g_tab_tax_tmp.delete;
              v_str_tax_sql := '';
        end if;    --<<替换函数中本职工>>
      END LOOP;

      if cur_wage_tax_cal%isopen then
         CLOSE cur_wage_tax_cal;
      end if;

     --个人所得税计算
     for i in 1..g_tab_tax.count() loop

        --提取个税工资项
        select column_item
          into v_item_code
          from acc_wage_item
         where group_id   = prm_group_id
           and hos_id     = prm_hos_id
           and copy_code  = prm_copy_code
           and wage_code  = v_wage_code
           and acc_year   = prm_acc_year
           and item_type  = '04';

         --提取起征点
         select tax_value, ass_value
           into v_tax_value,v_ass_value
           from ACC_WAGE_TAX_SET
          where group_id  = prm_group_id
            and hos_id    = prm_hos_id
            and copy_code = prm_copy_code;

          --提取人员国籍
          select nvl(countries_code,'001') as countries_code
            into v_countries_code
            from acc_emp_attr
           where group_id = prm_group_id
             and hos_id   = prm_hos_id
             and emp_id   = g_tab_tax(i).emp_id
            ;

           if v_countries_code = '001' then   --中国
              v_ret_tax_value := v_tax_value;
           else  --外籍及港、澳、台
              v_ret_tax_value := v_tax_value + v_ass_value;
           end if;

           if g_tab_tax(i).item_tax >= v_ret_tax_value then
              --提取税率表
              select RATE,DEDUCT
                into v_n_RATE,v_n_DEDUCT
                from ACC_WAGE_TAX
               where group_id  =  prm_group_id
                 and hos_id    =  prm_hos_id
                 and copy_code =  prm_copy_code
                 and ( g_tab_tax(i).item_tax - v_ret_tax_value )>  nvl(starts, 0)      --第一段最小值给0元
                 and ( g_tab_tax(i).item_tax - v_ret_tax_value )<= nvl(ends, 10000000) --最后一段最大值给1千万元
                ;

               v_str_cal_tax_sql :='update acc_wage_pay
                                       set '||v_item_code||' = round(('|| g_tab_tax(i).item_tax ||' -
                                           '||to_char(v_ret_tax_value)||' ) * '|| to_char(v_n_RATE) ||'/100 -
                                           '||to_char(v_n_DEDUCT)||' ,2)
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| g_tab_tax(i).wage_code      ||'''
                                        and kind_code = '''|| g_tab_tax(i).kind_code      ||'''
                                        and emp_id    =   '|| to_char(g_tab_tax(i).emp_id)||'
                                     '
                ;

           else
               v_str_cal_tax_sql :='update acc_wage_pay
                                       set '||v_item_code  ||' = 0.0'       ||'
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| g_tab_tax(i).wage_code      ||'''
                                        and kind_code = '''|| g_tab_tax(i).kind_code      ||'''
                                        and emp_id    =   '|| to_char(g_tab_tax(i).emp_id)||'
                                     '
                ;
           end if;
           execute immediate v_str_cal_tax_sql;
           v_str_cal_tax_sql := '';
           v_item_code       := '';
           v_tax_value       := 0 ;
           v_ass_value       := 0 ;
           v_countries_code  := '001';
           v_ret_tax_value   := 0 ;
           v_n_RATE          := 0 ;
           v_n_DEDUCT        := 0 ;
     end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      WHEN TOO_MANY_ROWS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt  := '同一工资套内仅允许存在一个个税项！'||SQLERRM;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '个税计算失败！'||SQLERRM;
    END prc_TaxCalc;

   /*-------------------------------------------------------------------------
   || 过程名称 ：一次计算工资时，将个税及个税的父级节点删除
   ||            调用时，需先执行写序号、排序及查找父节点
   ||                    prc_WriteFlag、prc_OrderTab、prc_FindParent
   ||            但要注意，必需在prc_DistinctTab[去重复]之前执行
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_DelTaxParent(prm_AppCode    Out Number,
                               prm_ErrTxt     Out Varchar2
                              )

    Is
      v_i      integer := 0;
      v_tab_item_cal_order_tmp  type_tab_item_cal;
    BEGIN
      prm_AppCode :=  def_OK;

      for i in 1..g_tab_item_cal_order.count() loop
          for j in 1..g_tab_tax_parent.count() loop
            if g_tab_tax_parent(j).wage_code = g_tab_item_cal_order(i).wage_code and   --修改
               g_tab_tax_parent(j).item_code = g_tab_item_cal_order(i).item_code then
               goto next_i;
            end if;
          end loop;
          v_i := v_i + 1;
          v_tab_item_cal_order_tmp(v_i).wage_code  := g_tab_item_cal_order(i).wage_code  ; --修改
          v_tab_item_cal_order_tmp(v_i).item_code  := g_tab_item_cal_order(i).item_code  ;
          v_tab_item_cal_order_tmp(v_i).super_code := g_tab_item_cal_order(i).super_code ;
          v_tab_item_cal_order_tmp(v_i).flag       := g_tab_item_cal_order(i).flag       ;

         <<next_i>>
         null;
      end loop;

      g_tab_item_cal_order.delete;

      for k in 1..v_tab_item_cal_order_tmp.count() loop
         g_tab_item_cal_order(k).wage_code  := v_tab_item_cal_order_tmp(k).wage_code  ; --修改
         g_tab_item_cal_order(k).item_code  := v_tab_item_cal_order_tmp(k).item_code  ;
         g_tab_item_cal_order(k).super_code := v_tab_item_cal_order_tmp(k).super_code ;
         g_tab_item_cal_order(k).flag       := v_tab_item_cal_order_tmp(k).flag       ;
      end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '个税移除工资计算队列失败！'||SQLERRM;
    END prc_DelTaxParent;

   /*-------------------------------------------------------------------------
   || 过程名称 ：将个税闪存栈[g_tab_tax_parent]加载到工资计算栈中[g_tab_item_cal]
   ||            注意：加载时应去掉tax项
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_LoadTaxParent(
                                prm_AppCode    Out Number,
                                prm_ErrTxt     Out Varchar2
                               )

    Is
      v_status integer := 0 ;
      v_num    integer := 0 ;
    begin
      --清空工资计算栈
      g_tab_item_cal.delete;

      --清空工资计算队列
      g_tab_item_cal_order.delete;

      --清空工资控制栈
      g_tab_level.delete;

      --加载工资计算栈,同时将工资控制栈数据压栈
      for i in 1..g_tab_tax_parent.count()loop
        g_tab_item_cal(i).wage_code  := g_tab_tax_parent(i).wage_code;     --修改
        g_tab_item_cal(i).item_code  := g_tab_tax_parent(i).item_code;
        g_tab_item_cal(i).super_code := g_tab_tax_parent(i).super_code;
        g_tab_item_cal(i).flag       := g_tab_tax_parent(i).flag;
        if i = 1 then
            g_tab_level(i).n_level      := 1;
            g_tab_level(i).start_num    := 1;
            g_tab_level(i).curr_num     := 1;
            g_tab_level(i).level_no     := g_tab_tax_parent(i).flag;
            v_num                       := 1;
            v_status                    := 1;    --已更新
        else
            for j in 1..g_tab_level.count() loop
              if g_tab_level(j).level_no = g_tab_tax_parent(i).flag then
                 g_tab_level(j).n_level := g_tab_level(j).n_level + 1;
                 v_status               := 1;    --已更新
              end if;
            end loop;

            --插入新的控制记录
            if v_status = 0 then
               v_num := v_num + 1;
               g_tab_level(v_num).n_level  := 1;
               g_tab_level(v_num).start_num:= 0;     --台州正式使用BUG修改
               g_tab_level(v_num).curr_num := 0;     --台州正式使用BUG修改
               g_tab_level(v_num).level_no := g_tab_tax_parent(i).flag;
            end if;
        end if;

        v_status := 0 ; --更新为未更新

      end loop;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '重载个税闪存数据失败！'||SQLERRM;
    end prc_LoadTaxParent;


   /*-------------------------------------------------------------------------
   || 过程名称 ：工资控制栈g_tab_level排序
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_AppCode             OUT    Number,        -- 业务处理标志
   ||            prm_ErrTxt              OUT    Varchar2       -- 返回信息
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_OrderLevel(prm_AppCode    Out Number,
                             prm_ErrTxt     Out Varchar2)

    Is
       v_tab_level_tmp type_tab_level ;
    begin
       prm_AppCode  := def_OK;

       --使用冒泡排序进行排序
       for i in 1..g_tab_level.count() loop

          v_tab_level_tmp(1).n_level   := g_tab_level(i).n_level  ;
          v_tab_level_tmp(1).start_num := g_tab_level(i).start_num;
          v_tab_level_tmp(1).curr_num  := g_tab_level(i).curr_num ;
          v_tab_level_tmp(1).level_no  := g_tab_level(i).level_no ;

          for j in i+1..g_tab_level.count() loop
              if v_tab_level_tmp(1).level_no > g_tab_level(j).level_no then
                 g_tab_level(i).n_level   := g_tab_level(j).n_level  ;
                 g_tab_level(i).start_num := g_tab_level(j).start_num;
                 g_tab_level(i).curr_num  := g_tab_level(j).curr_num ;
                 g_tab_level(i).level_no  := g_tab_level(j).level_no ;

                 g_tab_level(j).n_level   := v_tab_level_tmp(1).n_level  ;
                 g_tab_level(j).start_num := v_tab_level_tmp(1).start_num;
                 g_tab_level(j).curr_num  := v_tab_level_tmp(1).curr_num ;
                 g_tab_level(j).level_no  := v_tab_level_tmp(1).level_no ;

                 v_tab_level_tmp(1).n_level   := g_tab_level(i).n_level  ;
                 v_tab_level_tmp(1).start_num := g_tab_level(i).start_num;
                 v_tab_level_tmp(1).curr_num  := g_tab_level(i).curr_num ;
                 v_tab_level_tmp(1).level_no  := g_tab_level(i).level_no ;
              end if;
          end loop;
       end loop;

       --记录起始位置及当前位置
       for k in 2..g_tab_level.count() loop
           g_tab_level(k).start_num := g_tab_level(k-1).n_level+g_tab_level(k-1).start_num;
           g_tab_level(k).curr_num := g_tab_level(k-1).n_level+g_tab_level(k-1).curr_num;
       end loop;

    EXCEPTION
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '工资控制栈表排序失败！'||SQLERRM;
    end prc_OrderLevel;

   /*-------------------------------------------------------------------------
   || 过程名称 ：工资批量计算(所有账套一起计算)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcALL(   prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_AppCode           Out  Number
                                ,prm_ErrTxt            Out  Varchar2
                               )

    Is

    BEGIN
       --初始化变量
       prm_AppCode     := def_OK;
       prm_ErrTxt      := '计算成功!';

       --1、工资完整性检查
       prc_CheckFormula( prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_acc_month
                        ,prm_AppCode
                        ,prm_ErrTxt
                       );

       if prm_AppCode <> def_OK then
         return;
       end if;

       --2、初始化,所有栈及队列
       prc_InitTab(prm_AppCode
                  ,prm_ErrTxt);

       if prm_AppCode = def_ERR then
         return;
       end if;


       --3、解析公式压栈：工资计算栈[g_tab_item_cal]
       prc_LoadHshTab(   prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_AppCode
                        ,prm_ErrTxt
                       ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --4、检测计算公式是否存在嵌套引用
       prc_CheckNest( prm_group_id
                     ,prm_hos_id
                     ,prm_copy_code
                     ,prm_acc_year
                     ,prm_AppCode
                     ,prm_ErrTxt
                    );

       if prm_AppCode <> def_OK then
         return;
       end if;

       --5、依据后序遍历更新排序号:工资计算栈[g_tab_item_cal]
       prc_WriteFlag(prm_AppCode ,
                     prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --6、解析公式出栈入计算队列：工资计算队列[g_tab_item_cal_order]
       prc_OrderTab(prm_AppCode ,
                    prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --7、个税公式出队列入闪存栈：个税闪存栈[g_tab_tax_parent]
       prc_PushTaxParent( prm_group_id
                         ,prm_hos_id
                         ,prm_copy_code
                         ,prm_acc_year
                         ,prm_AppCode
                         ,prm_ErrTxt
                        );

       if prm_AppCode = def_ERR then
         return;
       end if;

       --8、个税公式移除队列：工资计算队列[g_tab_item_cal_order]
       prc_DelTaxParent(prm_AppCode ,
                        prm_ErrTxt
                        ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --9、去除队列中重复成员：工资计算队列[g_tab_item_cal_order]
       prc_DistinctTab(prm_AppCode ,
                       prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --10、工资计算队列出列计算：工资计算队列[g_tab_item_cal_order]
       prc_WageCalc( prm_group_id
                    ,prm_hos_id
                    ,prm_copy_code
                    ,prm_acc_year
                    ,prm_acc_month
                    ,prm_AppCode
                    ,prm_ErrTxt
                   );
       if prm_AppCode = def_ERR then
         return;
       end if;

       --11、个税计算栈出栈计算：个税计算队栈[g_tab_tax]
       prc_TaxCalc(  prm_group_id
                    ,prm_hos_id
                    ,prm_copy_code
                    ,prm_acc_year
                    ,prm_acc_month
                    ,prm_AppCode
                    ,prm_ErrTxt
                  );
       if prm_AppCode = def_ERR then
         return;
       end if;

       --12、个税闪存栈回载工资计算栈:个税闪存栈[g_tab_tax_parent]-->->->>工资计算栈[g_tab_item_cal]
       prc_LoadTaxParent(prm_AppCode ,
                         prm_ErrTxt  ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --13、重新加载并计算工资控制栈：工资控制栈[g_tab_level]
       prc_OrderLevel(prm_AppCode ,
                      prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --14、解析公式出栈入计算队列：工资计算队列[g_tab_item_cal_order]
       prc_OrderTab(prm_AppCode ,
                    prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --15、去除队列中重复成员：工资计算队列[g_tab_item_cal_order]
       prc_DistinctTab(prm_AppCode ,
                       prm_ErrTxt  )  ;
       if prm_AppCode = def_ERR then
         return;
       end if;

       --16、工资计算队列出列计算：工资计算队列[g_tab_item_cal_order]
       prc_WageCalc( prm_group_id
                    ,prm_hos_id
                    ,prm_copy_code
                    ,prm_acc_year
                    ,prm_acc_month
                    ,prm_AppCode
                    ,prm_ErrTxt
                   );
       if prm_AppCode = def_ERR then
         return;
       end if;

       prm_AppCode :=  def_OK;
       prm_ErrTxt  := '工资批量计算完成！' ;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '工资批量计算失败！'||SQLERRM;
    END prc_WageCalcALL;


   /*-------------------------------------------------------------------------
   || 过程名称 ：检测工资计算栈是否存在递归
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_item_code      工资项           IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number
   ||            prm_ErrTxt      返回信息            OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckHshTab(  prm_group_id          IN   NUMBER         --集团
                               ,prm_hos_id            IN   NUMBER         --医院
                               ,prm_copy_code         IN   VARCHAR2       --账套
                               ,prm_acc_year          IN   VARCHAR2       --年度
                               ,prm_wage_code         IN   VARCHAR2       --工资套
                               ,prm_item_code         IN   VARCHAR2       --工资项
                               ,prm_level             IN   Number         --调用层次
                               ,prm_AppCode           Out  Number
                               ,prm_ErrTxt            Out  Varchar2
                               )

    Is
      v_first           integer := 0     ;
      v_i               integer := 0     ;
    BEGIN

      v_i := g_tab_item_check.count() + 1 ;

      --去重复后插入检测表中，如果在检测表中存在相同工资套下，在不同层次有两个以上相同的工资项，则为嵌套
      if g_tab_item_check.EXISTS(1) is not null then
         for x in 1..g_tab_item_check.count() loop
            for y in x+1..g_tab_item_check.count()loop
               if g_tab_item_check(x).wage_code = g_tab_item_check(y).wage_code and
                  g_tab_item_check(x).item_code = g_tab_item_check(y).item_code and
                  g_tab_item_check(x).n_level  <> g_tab_item_check(y).n_level   then

                  prm_AppCode := def_WARNING;

                  select '{'||item_code||'  '||item_name ||'}公式不合法，存在嵌套引用!'
                    into prm_ErrTxt
                    from acc_wage_item
                   where group_id    = prm_group_id
                     and hos_id      = prm_hos_id
                     and copy_code   = prm_copy_code
                     and acc_year    = prm_acc_year
                     and wage_code   = g_tab_item_check(x).wage_code
                     and column_item = g_tab_item_check(x).item_code;

                  return;

               end if;
            end loop;
         end loop;
      end if;

      --如果本身就有调用本身，直接返回
      if prm_level = '1' then
         for i in 1..g_tab_item_cal.count() loop
              if g_tab_item_cal(i).item_code = g_tab_item_cal(i).super_code and
                 g_tab_item_cal(i).wage_code = g_tab_item_cal(i).wage_code then

                 prm_AppCode := def_WARNING;

                 select '{'||item_code||'  '|| item_name ||'}公式不合法，存在嵌套引用!'
                   into prm_ErrTxt
                  from acc_wage_item
                 where group_id    = prm_group_id
                   and hos_id      = prm_hos_id
                   and copy_code   = prm_copy_code
                   and acc_year    = prm_acc_year
                   and wage_code   = g_tab_item_cal(i).wage_code
                   and column_item = g_tab_item_cal(i).item_code;

                 return;
              end if;
        end loop;

        g_tab_item_check(v_i).wage_code  := prm_wage_code ;
        g_tab_item_check(v_i).item_code  := prm_item_code ;
        g_tab_item_check(v_i).n_level    := prm_level     ;
        v_i     := v_i + 1;

      end if;

      --查找传入工资项的直接父级工资项压栈,层级+1
      for j in 1..g_tab_item_cal.count() loop
         if g_tab_item_cal(j).wage_code  = prm_wage_code and
            g_tab_item_cal(j).item_code  = prm_item_code and
            g_tab_item_cal(j).super_code <> 'TOP'        then

            if v_first  = 0 then
                g_tab_item_check(v_i).wage_code  := g_tab_item_cal(j).wage_code ;
                g_tab_item_check(v_i).item_code  := g_tab_item_cal(j).super_code;
                g_tab_item_check(v_i).n_level    := prm_level + 1               ;
                v_i     := v_i + 1;
                v_first := 1      ;
            else
                for k in 1..g_tab_item_check.count() loop
                   if g_tab_item_check(k).item_code = g_tab_item_cal(j).item_code and
                      g_tab_item_check(k).wage_code = g_tab_item_cal(j).wage_code then
                      goto next_i;
                   end if;
                end loop;

                g_tab_item_check(v_i).wage_code  := g_tab_item_cal(j).wage_code;
                g_tab_item_check(v_i).item_code  := g_tab_item_cal(j).item_code;
                g_tab_item_check(v_i).n_level    := prm_level + 1              ;
                v_i     := v_i + 1;
                v_first := 1      ;

                <<next_i>>
                null;
            end if;
         end if;
      end loop;

      for m in 1..g_tab_item_check.count() loop
        if g_tab_item_check(m).n_level = prm_level + 1 then
           prc_CheckHshTab(  prm_group_id
                            ,prm_hos_id
                            ,prm_copy_code
                            ,prm_acc_year
                            ,g_tab_item_check(m).wage_code
                            ,g_tab_item_check(m).item_code
                            ,prm_level + 1
                            ,prm_AppCode
                            ,prm_ErrTxt
                           );
          if prm_AppCode = def_ERR or prm_AppCode = def_WARNING then
             return;
          end if;
        end if;
      end loop;

      prm_AppCode := def_OK ;
      prm_ErrTxt := '公式检测通过！';

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '公式检测失败！'||SQLERRM;
    END prc_CheckHshTab;


   /*-------------------------------------------------------------------------
   || 过程名称 ：工资完整性检查通过
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      工资套           IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number
   ||            prm_ErrTxt      返回信息            OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckFormula( prm_group_id          IN   NUMBER         --集团
                               ,prm_hos_id            IN   NUMBER         --医院
                               ,prm_copy_code         IN   VARCHAR2       --账套
                               ,prm_acc_year          IN   VARCHAR2       --年度
                               ,prm_acc_month         IN   VARCHAR2       --月份
                               ,prm_AppCode           Out  Number
                               ,prm_ErrTxt            Out  Varchar2
                               )

    Is
     --定义计算公式游标
     CURSOR cur_wage_item_tax  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year        IN   VARCHAR2       --开始年度
                               )
       IS
      select wage_code, kind_code, cal_eng
        from acc_wage_tax_cal
       where group_id  = prm_group_id
         and hos_id    = prm_hos_id
         and copy_code = prm_copy_code
         and acc_year  = prm_acc_year;

     --检查同一工资套个税个数
     CURSOR cur_wage_tax_count  ( prm_group_id          IN   NUMBER         --集团
                                 ,prm_hos_id            IN   NUMBER         --医院
                                 ,prm_copy_code         IN   VARCHAR2       --账套
                                 ,prm_acc_year        IN   VARCHAR2       --开始年度
                                )
       IS
       select wage_code,
              count(1) as n_count
         from acc_wage_item
        where group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and item_type = '04'
        group by wage_code;

       v_wage_code     acc_wage_tax_cal.wage_code%type;
       v_kind_code     acc_wage_tax_cal.kind_code%type;
       v_CAL_ENG       acc_wage_tax_cal.cal_eng%type  ;
       v_count         integer := 0 ;
       i_ret           integer := 0 ;
       i_ret_tax       integer := 0 ;
       v_pos           integer := 1 ;
       v_item_code     acc_wage_item.column_item%type;
    BEGIN
       prm_AppCode := def_OK;
       v_wage_code := ''    ;
       v_kind_code := ''    ;
       v_CAL_ENG   := ''    ;
       v_item_code := ''    ;

       --检测是否存在计算项未维护计算公式
       select count(1)
         into i_ret
         from acc_wage_item
        where to_char(group_id) || to_char(hos_id) || copy_code || acc_year ||
              wage_code || item_code not in
              (select to_char(group_id) || to_char(hos_id) || copy_code ||
                      acc_year || wage_code || item_code
                 from acc_wage_item_cal
                where group_id  = prm_group_id
                  and hos_id    = prm_hos_id
                  and copy_code = prm_copy_code
                  and acc_year  = prm_acc_year)
          and group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and item_cal  = '2'
          and item_type <> '04';

        if i_ret <> 0 then
           prm_AppCode :=  def_WARNING;
           prm_ErrTxt  := '存在计算项未维护计算公式！';
           return;
        end if;

       i_ret := 0 ;
       --检测个税是否维护计算公式[正确不应维护计算公式]
       select count(1)
         into i_ret
         from acc_wage_item
        where to_char(group_id) || to_char(hos_id) || copy_code || acc_year ||
              wage_code || item_code in
              (select to_char(group_id) || to_char(hos_id) || copy_code ||
                      acc_year || wage_code || item_code
                 from acc_wage_item_cal
                where group_id  = prm_group_id
                  and hos_id    = prm_hos_id
                  and copy_code = prm_copy_code
                  and acc_year  = prm_acc_year)
          and group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and item_type = '04';

       if i_ret <> 0 then
           prm_AppCode :=  def_WARNING;
           prm_ErrTxt  := '个税工资项不允许维护计算公式！';
           return;
        end if;

       i_ret := 0 ;

       select count(1)
         into i_ret
         from acc_wage_item
        where group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and item_type = '04';

       if i_ret <> 0 then

          open cur_wage_tax_count( prm_group_id
                                 , prm_hos_id
                                 , prm_copy_code
                                 , prm_acc_year
                                 );
          LOOP
            FETCH cur_wage_tax_count INTO v_wage_code,v_count;    --提取游标
            IF cur_wage_tax_count%NOTFOUND THEN
               if cur_wage_tax_count%isopen then
                  CLOSE cur_wage_tax_count;
               end if;
               EXIT;
            END IF;

            if v_count > 1 then

               if cur_wage_tax_count%isopen then
                  CLOSE cur_wage_tax_count;
               end if;

               prm_AppCode :=  def_WARNING;
               prm_ErrTxt  := '同一工资套下仅允许存在一个个税项！工资套：{'||v_wage_code||'}';
               return;
            end if;

            v_count     := 0 ;
            v_wage_code := 0 ;
          END LOOP;

          if cur_wage_tax_count%isopen then
             CLOSE cur_wage_tax_count;
          end if;

          --检查起征点
          select count(1)
            into i_ret_tax
            from acc_wage_tax_set
           where group_id  = prm_group_id
             and hos_id    = prm_hos_id
             and copy_code = prm_copy_code;

          if i_ret_tax = 0 then
            prm_AppCode :=  def_WARNING;
            prm_ErrTxt  := '请维护个税起征点！';
            return;
          end if;

         i_ret_tax := 0 ;

         --检查个税税率表
         select count(1)
           into i_ret_tax
           from acc_wage_tax
          where group_id = prm_group_id
            and hos_id = prm_hos_id
            and copy_code = prm_copy_code;

          if i_ret_tax = 0 then
            prm_AppCode :=  def_WARNING;
            prm_ErrTxt  := '请维护个税税率表！';
            return;
          end if;

         i_ret_tax := 0 ;

         --检查应税项
         select count(1)
           into i_ret_tax
           from acc_wage_tax_cal
          where group_id = prm_group_id
            and hos_id = prm_hos_id
            and copy_code = prm_copy_code
            and acc_year  = prm_acc_year  ;

          if i_ret_tax = 0 then
            prm_AppCode :=  def_WARNING;
            prm_ErrTxt  := '请维护应税项计算公式！';
            return;
          end if;

          open cur_wage_item_tax( prm_group_id
                                , prm_hos_id
                                , prm_copy_code
                                , prm_acc_year
                               );
          LOOP
            FETCH cur_wage_item_tax INTO v_wage_code,v_kind_code,v_CAL_ENG;    --提取游标
            IF cur_wage_item_tax%NOTFOUND THEN
               if cur_wage_item_tax%isopen then
                  CLOSE cur_wage_item_tax;
               end if;
               EXIT;
            END IF;

            --获取字符串工资项总数
            v_count := fun_cal_num(v_CAL_ENG);

            while (v_count > 0 )  LOOP
                --拆分字符串
                prc_SplitChar( v_CAL_ENG     ,
                              '{'            ,
                              v_pos          ,
                              v_item_code    ,
                              prm_AppCode    ,
                              prm_ErrTxt
                              );

                --拆分字符串失败
                if prm_AppCode = def_ERR then
                   if cur_wage_item_tax%isopen then
                      CLOSE cur_wage_item_tax;
                   end if;
                   return;
                end if;

                i_ret_tax := 0 ;

                select count(1)
                  into i_ret_tax
                  from acc_wage_item
                 where group_id    = prm_group_id
                   and hos_id      = prm_hos_id
                   and copy_code   = prm_copy_code
                   and acc_year    = prm_acc_year
                   and wage_code   = v_wage_code
                   and column_item = v_item_code
                   and item_type = '04';

                if i_ret_tax <> 0  then

                   if cur_wage_item_tax%isopen then
                      CLOSE cur_wage_item_tax;
                   end if;
                   prm_AppCode :=  def_WARNING;
                   prm_ErrTxt  := '应税项公式不合法，存在嵌套引用!';
                   return;
                end if;
                i_ret_tax := 0 ;
                v_pos     :=  v_pos   + 1;
                v_count   :=  v_count - 1;
            END LOOP;

            v_pos   := 1;
            v_count := 0;

          END LOOP;

          if cur_wage_item_tax%isopen then
             CLOSE cur_wage_item_tax;
          end if;
       end if;

       i_ret := 0 ;

       select count(1)
         into i_ret
        from acc_wage_pay
       where group_id  = prm_group_id
         and hos_id    = prm_hos_id
         and copy_code = prm_copy_code
         and acc_year  = prm_acc_year
         and acc_month = prm_acc_month;

       if i_ret = 0 then
           prm_AppCode :=  def_WARNING;
           prm_ErrTxt  := '请先生成本月工资表！';
           return;
       end if;


      prm_AppCode :=  def_OK;
      prm_ErrTxt  := '公式完整性检查通过！';

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '公式完整性检查失败！'||SQLERRM;
    END prc_CheckFormula;

   /*-------------------------------------------------------------------------
   || 过程名称 ：检测工资计算栈是否存在嵌套引用
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number
   ||            prm_ErrTxt      返回信息            OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckNest(  prm_group_id          IN   NUMBER         --集团
                             ,prm_hos_id            IN   NUMBER         --医院
                             ,prm_copy_code         IN   VARCHAR2       --账套
                             ,prm_acc_year          IN   VARCHAR2       --年度
                             ,prm_AppCode           Out  Number
                             ,prm_ErrTxt            Out  Varchar2
                            )

    Is
    BEGIN
        prm_AppCode := def_OK    ;

        --检测工资计算栈是否存在嵌套引用
        for i in 1..g_tab_item_cal.count() loop
          prc_CheckHshTab(   prm_group_id
                            ,prm_hos_id
                            ,prm_copy_code
                            ,prm_acc_year
                            ,g_tab_item_cal(i).wage_code
                            ,g_tab_item_cal(i).item_code
                            ,1
                            ,prm_AppCode
                            ,prm_ErrTxt
                         );

         g_tab_item_check.delete;

         if prm_AppCode <> def_OK then
            return;
         end if;
       end loop;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '公式嵌套引用检查失败！'||SQLERRM;
    END prc_CheckNest;

   /*-------------------------------------------------------------------------
   || 过程名称 ：个税出工资计算队列入个税闪存栈
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_wage_code   工资套              IN            VARCHAR2
   ||            prm_item_code   个税项/父节点       IN            VARCHAR2
   ||            prm_level       检索开始位置        IN            Varchar2
   ||            prm_AppCode     业务处理标志        OUT           Number
   ||            prm_ErrTxt      返回信息            OUT           Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_PushTaxParent(prm_group_id          IN   NUMBER         --集团
                               ,prm_hos_id            IN   NUMBER         --医院
                               ,prm_copy_code         IN   VARCHAR2       --账套
                               ,prm_acc_year          IN   VARCHAR2       --年度
                               ,prm_AppCode           Out  Number
                               ,prm_ErrTxt            Out  Varchar2
                               )

    Is
     --定义个税游标
     CURSOR cur_wage_item_tax  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year        IN   VARCHAR2       --开始年度
                               )
       IS
       select wage_code,column_item as item_code
         from acc_wage_item
        where group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and item_type = '04'     --'01':基本项 '02':社保  '03':公积金 '04':个税
       order by wage_code,substr('00'||substr(column_item,5,length(column_item)-4),-2)
          ;

       v_wage_code         acc_wage_item.wage_code%type;     --用于存个税工资套
       v_tax_item_code     acc_wage_item.column_item%type;   --用于存个税列编码 item..
    BEGIN
       prm_AppCode := def_OK;

        --个税公式出队列入闪存栈：个税闪存栈[g_tab_tax_parent]
       open cur_wage_item_tax(  prm_group_id
                              , prm_hos_id
                              , prm_copy_code
                              , prm_acc_year
                             );
       LOOP
          FETCH cur_wage_item_tax INTO v_wage_code,v_tax_item_code;    --提取游标

          IF cur_wage_item_tax%NOTFOUND THEN

             if cur_wage_item_tax%isopen then
                CLOSE cur_wage_item_tax;
             end if;

             EXIT;
          END IF;

           prc_FindTaxParent( v_wage_code
                             ,v_tax_item_code
                             ,0
                             ,prm_AppCode
                             ,prm_ErrTxt
                             );

           if prm_AppCode = def_ERR then
               if cur_wage_item_tax%isopen then
                  CLOSE cur_wage_item_tax;
               end if;
               return;
           end if;

       END LOOP;

       if cur_wage_item_tax%isopen then
          CLOSE cur_wage_item_tax;
       end if;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '个税批量出队列入栈时失败！'||SQLERRM;
    END prc_PushTaxParent;

   /*-------------------------------------------------------------------------
   || 过程名称 ：工资批量计算(职工)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_emp_id         职工             IN           Number
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcSingle(    prm_group_id          IN   NUMBER         --集团
                                    ,prm_hos_id            IN   NUMBER         --医院
                                    ,prm_copy_code         IN   VARCHAR2       --账套
                                    ,prm_acc_year          IN   VARCHAR2       --年度
                                    ,prm_acc_month         IN   VARCHAR2       --月份
                                    ,prm_wage_code         IN   VARCHAR2       --工资套
                                    ,prm_emp_id            IN   Number         --人员ID
                                    ,prm_AppCode           Out  Number
                                    ,prm_ErrTxt            Out  Varchar2
                                   )

    Is

    BEGIN
       --初始化变量
       prm_AppCode     := def_OK;
       prm_ErrTxt      := '计算成功!';

       /*--1、工资完整性检查
       prc_CheckFormula( prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_acc_month
                        ,prm_AppCode
                        ,prm_ErrTxt
                       ); */
       --1、工资完整性检查(工资套)
       prc_CheckFormulaGroup( prm_group_id
                             ,prm_hos_id
                             ,prm_copy_code
                             ,prm_acc_year
                             ,prm_acc_month
                             ,prm_wage_code
                             ,prm_AppCode
                             ,prm_ErrTxt
                             );

       if prm_AppCode <> def_OK then
         return;
       end if;

       --2、初始化,所有栈及队列
       prc_InitTab(prm_AppCode
                  ,prm_ErrTxt);

       if prm_AppCode = def_ERR then
         return;
       end if;


       --3、解析公式压栈：工资计算栈[g_tab_item_cal]
       prc_LoadHshTab(   prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_AppCode
                        ,prm_ErrTxt
                       ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       /*--4、检测计算公式是否存在嵌套引用
       prc_CheckNest( prm_group_id
                     ,prm_hos_id
                     ,prm_copy_code
                     ,prm_acc_year
                     ,prm_AppCode
                     ,prm_ErrTxt
                    );*/
       --4、检测计算公式是否存在嵌套引用(工资套)
       prc_CheckNestGroup( prm_group_id
                          ,prm_hos_id
                          ,prm_copy_code
                          ,prm_acc_year
                          ,prm_wage_code
                          ,prm_AppCode
                          ,prm_ErrTxt
                          );

       if prm_AppCode <> def_OK then
         return;
       end if;

       --5、依据后序遍历更新排序号:工资计算栈[g_tab_item_cal]
       prc_WriteFlag(prm_AppCode ,
                     prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --6、解析公式出栈入计算队列：工资计算队列[g_tab_item_cal_order]
       prc_OrderTab(prm_AppCode ,
                    prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --7、个税公式出队列入闪存栈：个税闪存栈[g_tab_tax_parent]
       prc_PushTaxParent( prm_group_id
                         ,prm_hos_id
                         ,prm_copy_code
                         ,prm_acc_year
                         ,prm_AppCode
                         ,prm_ErrTxt
                        );

       if prm_AppCode = def_ERR then
         return;
       end if;

       --8、个税公式移出队列：工资计算队列[g_tab_item_cal_order]
       prc_DelTaxParent(prm_AppCode ,
                        prm_ErrTxt
                        ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --9、去除队列中重复成员：工资计算队列[g_tab_item_cal_order]
       prc_DistinctTab(prm_AppCode ,
                       prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --10、工资计算队列出列计算：工资计算队列[g_tab_item_cal_order]
       prc_WageCalcEmp( prm_group_id
                       ,prm_hos_id
                       ,prm_copy_code
                       ,prm_acc_year
                       ,prm_acc_month
                       ,prm_wage_code
                       ,prm_emp_id
                       ,prm_AppCode
                       ,prm_ErrTxt
                      );
       if prm_AppCode = def_ERR then
         return;
       end if;

       --11、个税计算栈出栈计算：个税计算队栈[g_tab_tax]
       prc_TaxCalcEmp( prm_group_id
                      ,prm_hos_id
                      ,prm_copy_code
                      ,prm_acc_year
                      ,prm_acc_month
                      ,prm_wage_code
                      ,prm_emp_id
                      ,prm_AppCode
                      ,prm_ErrTxt
                      );
       if prm_AppCode = def_ERR then
         return;
       end if;

       --12、个税闪存栈回载工资计算栈:个税闪存栈[g_tab_tax_parent]-->->->>工资计算栈[g_tab_item_cal]
       prc_LoadTaxParent(prm_AppCode ,
                         prm_ErrTxt  ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --13、重新加载并计算工资控制栈：工资控制栈[g_tab_level]
       prc_OrderLevel(prm_AppCode ,
                      prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --14、解析公式出栈入计算队列：工资计算队列[g_tab_item_cal_order]
       prc_OrderTab(prm_AppCode ,
                    prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --15、去除队列中重复成员：工资计算队列[g_tab_item_cal_order]
       prc_DistinctTab(prm_AppCode ,
                       prm_ErrTxt  )  ;
       if prm_AppCode = def_ERR then
         return;
       end if;

       --16、工资计算队列出列计算：工资计算队列[g_tab_item_cal_order]
       prc_WageCalcEmp( prm_group_id
                       ,prm_hos_id
                       ,prm_copy_code
                       ,prm_acc_year
                       ,prm_acc_month
                       ,prm_wage_code
                       ,prm_emp_id
                       ,prm_AppCode
                       ,prm_ErrTxt
                      );
       if prm_AppCode = def_ERR then
         return;
       end if;

       prm_AppCode :=  def_OK;
       prm_ErrTxt  := '职工工资计算完成！' ;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '职工工资计算失败！'||SQLERRM;
    END prc_WageCalcSingle;

   /*-------------------------------------------------------------------------
   || 过程名称 ：根据工资计算队列进行出列计算工资计算(职工)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_emp_id         职工             IN           Number
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcEmp( prm_group_id          IN   NUMBER         --集团
                              ,prm_hos_id            IN   NUMBER         --医院
                              ,prm_copy_code         IN   VARCHAR2       --账套
                              ,prm_acc_year          IN   VARCHAR2       --年度
                              ,prm_acc_month         IN   VARCHAR2       --月份
                              ,prm_wage_code         IN   VARCHAR2       --工资套
                              ,prm_emp_id            IN   NUMBER         --职工ID
                              ,prm_AppCode           Out  Number
                              ,prm_ErrTxt            Out  Varchar2
                           )

    Is
     --定义计算公式游标
     CURSOR cur_wage_item_cal  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_wage_code         IN   VARCHAR2       --工资套  修改
                                ,prm_item_code         IN   VARCHAR2       --工资项
                               )
       IS
         select t1.wage_code,
                t1.kind_code,
                t2.column_item as item_code,
                t2.item_name,
                t1.cal_name,
                REPLACE(REPLACE(t1.cal_eng, '{', ''), '}', '') as cal_eng
           from acc_wage_item_cal t1
           left join acc_wage_item t2
             on t1.group_id  = t2.group_id
            and t1.hos_id    = t2.hos_id
            and t1.copy_code = t2.copy_code
            and t1.acc_year  = t2.acc_year
            and t1.wage_code = t2.wage_code
            and t1.item_code = t2.item_code
          where t1.group_id    = prm_group_id
            and t1.hos_id      = prm_hos_id
            and t1.copy_code   = prm_copy_code
            and t1.acc_year    = prm_acc_year
            and t1.wage_code   = prm_wage_code
            and t2.column_item = prm_item_code
            and t2.item_cal    = '2'       --计算项标识
            and t2.item_type   <> '04';   --'01':基本项 '02':社保  '03':公积金 '04':个税

         --定义变量
         v_wage_code acc_wage_item.wage_code%type;
         v_kind_code acc_wage_item_cal.kind_code%type;
         v_item_code acc_wage_item.column_item%type;
         v_item_name acc_wage_item.item_name%type;
         v_cal_name  acc_wage_item_cal.cal_name%type;
         v_cal_eng   acc_wage_item_cal.cal_eng%type;

         v_str_wage_sql       varchar2(4000); --工资计算串

    begin
      --初始化变量
      v_str_wage_sql    := ''    ;
      prm_AppCode  := def_OK;

      --工资批量计算
      for i in 1..g_tab_item_cal_order.count() loop
        if g_tab_item_cal_order(i).wage_code = prm_wage_code then
            open cur_wage_item_cal( prm_group_id
                                  , prm_hos_id
                                  , prm_copy_code
                                  , prm_acc_year
                                  , g_tab_item_cal_order(i).wage_code   --修改
                                  , g_tab_item_cal_order(i).item_code
                                 );
             LOOP
                FETCH cur_wage_item_cal INTO v_wage_code,v_kind_code,v_item_code,v_item_name,v_cal_name,v_cal_eng;    --提取游标

                IF cur_wage_item_cal%NOTFOUND THEN
                   if cur_wage_item_cal%isopen then
                      CLOSE cur_wage_item_cal;
                   end if;
                   EXIT;
                END IF;

                --替换函数中本集团
                if instr(v_cal_eng,'本集团') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本集团',to_char(prm_group_id));
                end if;

                --替换函数中本医院
                if instr(v_cal_eng,'本医院') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本医院',to_char(prm_hos_id));
                end if;

                --替换函数中本账套
                if instr(v_cal_eng,'本账套') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本账套',prm_copy_code);
                end if;

                --替换函数中年度
                if instr(v_cal_eng,'本年度') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本年度',to_char(prm_acc_year));
                end if;

                if instr(v_cal_eng,'上年') > 0  then
                   v_cal_eng := replace(v_cal_eng,'上年',to_char(to_number(prm_acc_year)-1));
                end if;

                if instr(v_cal_eng,'上两年') > 0  then
                   v_cal_eng := replace(v_cal_eng,'上两年',to_char(to_number(prm_acc_year)-2));
                end if;

                --替换函数中期间
                if instr(v_cal_eng,'本期间') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本期间',prm_acc_month);
                end if;

                --替换函数期间:由于避免年度变化，当上期跨年时，传递【增加值|本期】
                if instr(v_cal_eng,'上期') > 0  then
                  if prm_acc_month  = '01' then
                     v_cal_eng := replace(v_cal_eng,'上期','-1|01');
                  else
                     v_cal_eng := replace(v_cal_eng,'上期',substr('00'||to_char(to_number(prm_acc_month)-1),-2));
                  end if;
                end if;

                --替换函数期间:由于避免年度变化，当上两期跨年时，传递【增加值|本期】
                if instr(v_cal_eng,'上两期') > 0  then
                  if prm_acc_month  = '01' then
                     v_cal_eng := replace(v_cal_eng,'上两期','-2|01');
                  elsif prm_acc_month  = '02'  then
                     v_cal_eng := replace(v_cal_eng,'上两期','-2|02');
                  else
                     v_cal_eng := replace(v_cal_eng,'上两期',substr('00'||to_char(to_number(prm_acc_month)-2),-2));
                  end if;
                end if;

                --替换函数中工资套
                if instr(v_cal_eng,'本工资套') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本工资套',v_wage_code);
                end if;

                 --替换函数中取上月自然天数
                if instr(v_cal_eng,'取上月自然天数') > 0  then
                   v_cal_eng := replace(v_cal_eng,'取上月自然天数',prm_acc_year||''||prm_acc_month);
                end if;

                --替换函数中本职工
                if instr(v_cal_eng,'本职工') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本职工',to_char(prm_emp_id));
                end if;

                if v_kind_code <> '0' then
                    v_str_wage_sql :='update acc_wage_pay
                                         set '||v_item_code||' = round('|| v_cal_eng ||' ,2)
                                        where group_id  =   '|| prm_group_id  ||'
                                          and hos_id    =   '|| prm_hos_id    ||'
                                          and copy_code = '''|| prm_copy_code ||'''
                                          and acc_year  = '''|| prm_acc_year  ||'''
                                          and acc_month = '''|| prm_acc_month ||'''
                                          and wage_code = '''|| v_wage_code   ||'''
                                          and kind_code = '''|| v_kind_code   ||'''
                                          and emp_id    =   '|| prm_emp_id    ||'
                                       '
                       ;
                 else  --所有类别工资计算公式均一样
                     v_str_wage_sql :='update acc_wage_pay
                                         set '||v_item_code||' = round('|| v_cal_eng ||' ,2)
                                        where group_id  =   '|| prm_group_id  ||'
                                          and hos_id    =   '|| prm_hos_id    ||'
                                          and copy_code = '''|| prm_copy_code ||'''
                                          and acc_year  = '''|| prm_acc_year  ||'''
                                          and acc_month = '''|| prm_acc_month ||'''
                                          and wage_code = '''|| v_wage_code   ||'''
                                          and emp_id    =   '|| prm_emp_id    ||'
                                       '
                       ;
                 end if;
                execute immediate v_str_wage_sql;
                v_str_wage_sql := '';
             end loop;

             if cur_wage_item_cal%isopen then
                CLOSE cur_wage_item_cal;
             end if;
         end if;
      end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '职工工资计算失败！'||SQLERRM;
    end prc_WageCalcEmp;

   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行个税计算(职工)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_emp_id         职工             IN           Number
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_TaxCalcEmp ( prm_group_id          IN   NUMBER         --集团
                              ,prm_hos_id            IN   NUMBER         --医院
                              ,prm_copy_code         IN   VARCHAR2       --账套
                              ,prm_acc_year          IN   VARCHAR2       --年度
                              ,prm_acc_month         IN   VARCHAR2       --月份
                              ,prm_wage_code         IN   VARCHAR2       --工资套
                              ,prm_emp_id            IN   Number         --职工ID
                              ,prm_AppCode           Out  Number
                              ,prm_ErrTxt            Out  Varchar2
                           )

    Is
      --定义应税项游标
      CURSOR cur_wage_tax_cal   (  prm_group_id          IN   NUMBER         --集团
                                  ,prm_hos_id            IN   NUMBER         --医院
                                  ,prm_copy_code         IN   VARCHAR2       --账套
                                  ,prm_acc_year          IN   VARCHAR2       --年度
                                  ,prm_wage_code         IN   VARCHAR2       --工资套
                                 )
          IS
          select t1.wage_code,
                 t1.kind_code,
                 t1.cal_name,
                 REPLACE(REPLACE(t1.cal_eng, '{', ''), '}', '') as cal_eng
            from ACC_WAGE_TAX_CAL t1
           where t1.group_id    =  prm_group_id
             and t1.hos_id      =  prm_hos_id
             and t1.copy_code   =  prm_copy_code
             and t1.acc_year    =  prm_acc_year
             and t1.wage_code   =  prm_wage_code
            order by t1.group_id,t1.hos_id,t1.copy_code,t1.acc_year,t1.wage_code,t1.kind_code;

       --定义变量
       v_wage_code acc_wage_item.wage_code%type;
       v_kind_code acc_wage_item_cal.kind_code%type;
       v_item_code acc_wage_item.column_item%type;
       v_cal_name  acc_wage_item_cal.cal_name%type;
       v_cal_eng   acc_wage_item_cal.cal_eng%type;

       v_str_tax_sql        varchar2(4000);  --应税项计算串
       v_str_cal_tax_sql    varchar2(4000);  --计算个人所得税

       v_tax_i          integer       ;
       v_tax_value      ACC_WAGE_TAX_SET.Tax_Value%type;  --中国
       v_ass_value      ACC_WAGE_TAX_SET.Ass_Value%type;  --外籍及港、澳、台 = v_tax_value + v_ass_value
       v_ret_tax_value  ACC_WAGE_TAX_SET.Tax_Value%type;  --综合起征点
       v_n_RATE         ACC_WAGE_TAX.Rate%type;           --税率
       v_n_DEDUCT       ACC_WAGE_TAX.Deduct%type;         --速算扣除数
       v_countries_code ACC_EMP_ATTR.Countries_Code%type; --国籍 001：中国
    begin
      --初始化变量
      v_str_tax_sql     := ''    ;
      v_str_cal_tax_sql := ''    ;
      v_tax_i           := 0     ;
      v_tax_value       := 3500  ; --中国
      v_ass_value       := 1300  ; --外籍及港、澳、台 = v_tax_value + v_ass_value
      v_ret_tax_value   := 0     ;
      v_n_RATE          := 0     ;
      v_n_DEDUCT        := 0     ;
      v_countries_code  := '001' ; --中国

      prm_AppCode  := def_OK;

      --应税项计算
      open cur_wage_tax_cal(  prm_group_id
                            , prm_hos_id
                            , prm_copy_code
                            , prm_acc_year
                            , prm_wage_code
                           );
      LOOP
          FETCH cur_wage_tax_cal INTO v_wage_code,v_kind_code,v_cal_name,v_cal_eng;    --提取游标

          IF cur_wage_tax_cal%NOTFOUND THEN
             if cur_wage_tax_cal%isopen then
                CLOSE cur_wage_tax_cal;
             end if;
             EXIT;
          END IF;

          --替换函数中本集团
          if instr(v_cal_eng,'本集团') > 0  then
             v_cal_eng := replace(v_cal_eng,'本集团',to_char(prm_group_id));
          end if;

          --替换函数中本医院
          if instr(v_cal_eng,'本医院') > 0  then
             v_cal_eng := replace(v_cal_eng,'本医院',to_char(prm_hos_id));
          end if;

          --替换函数中本账套
          if instr(v_cal_eng,'本账套') > 0  then
             v_cal_eng := replace(v_cal_eng,'本账套',prm_copy_code);
          end if;

          --替换函数中年度
          if instr(v_cal_eng,'本年度') > 0  then
             v_cal_eng := replace(v_cal_eng,'本年度',to_char(prm_acc_year));
          end if;

          if instr(v_cal_eng,'上年') > 0  then
             v_cal_eng := replace(v_cal_eng,'上年',to_char(to_number(prm_acc_year)-1));
          end if;

          if instr(v_cal_eng,'上两年') > 0  then
             v_cal_eng := replace(v_cal_eng,'上两年',to_char(to_number(prm_acc_year)-2));
          end if;

          --替换函数中期间
          if instr(v_cal_eng,'本期间') > 0  then
             v_cal_eng := replace(v_cal_eng,'本期间',prm_acc_month);
          end if;

          --替换函数期间:由于避免年度变化，当上期跨年时，传递【增加值|本期】
          if instr(v_cal_eng,'上期') > 0  then
            if prm_acc_month  = '01' then
               v_cal_eng := replace(v_cal_eng,'上期','-1|01');
            else
               v_cal_eng := replace(v_cal_eng,'上期',substr('00'||to_char(to_number(prm_acc_month)-1),-2));
            end if;
          end if;

          --替换函数期间:由于避免年度变化，当上两期跨年时，传递【增加值|本期】
          if instr(v_cal_eng,'上两期') > 0  then
            if prm_acc_month  = '01' then
               v_cal_eng := replace(v_cal_eng,'上两期','-2|01');
            elsif prm_acc_month  = '02'  then
               v_cal_eng := replace(v_cal_eng,'上两期','-2|02');
            else
               v_cal_eng := replace(v_cal_eng,'上两期',substr('00'||to_char(to_number(prm_acc_month)-2),-2));
            end if;
          end if;

          --替换函数中工资套
          if instr(v_cal_eng,'本工资套') > 0  then
             v_cal_eng := replace(v_cal_eng,'本工资套',v_wage_code);
          end if;

           --替换函数中取上月自然天数
            if instr(v_cal_eng,'取上月自然天数') > 0  then
               v_cal_eng := replace(v_cal_eng,'取上月自然天数',prm_acc_year||''||prm_acc_month);
            end if;

          --替换函数中本职工
          if instr(v_cal_eng,'本职工') > 0  then
             v_cal_eng := replace(v_cal_eng,'本职工',to_char(prm_emp_id));
          end if;

          if v_kind_code <> '0' then
             v_str_tax_sql := 'select  wage_code
                                     , kind_code
                                     , emp_id
                                     ,round('|| v_cal_eng ||' ,2)
                                from acc_wage_pay
                               where group_id  =   '|| prm_group_id  ||'
                                 and hos_id    =   '|| prm_hos_id    ||'
                                 and copy_code = '''|| prm_copy_code ||'''
                                 and wage_code = '''|| v_wage_code   ||'''
                                 and kind_code = '''|| v_kind_code   ||'''
                                 and acc_year  = '''|| prm_acc_year  ||'''
                                 and acc_month = '''|| prm_acc_month ||'''
                                 and emp_id    =   '|| prm_emp_id    ||'
                               '
             ;
          else
            v_str_tax_sql := 'select  wage_code
                                     , kind_code
                                     , emp_id
                                     ,round('|| v_cal_eng ||' ,2)
                                from acc_wage_pay
                               where group_id  =   '|| prm_group_id  ||'
                                 and hos_id    =   '|| prm_hos_id    ||'
                                 and copy_code = '''|| prm_copy_code ||'''
                                 and wage_code = '''|| v_wage_code   ||'''
                                 and acc_year  = '''|| prm_acc_year  ||'''
                                 and acc_month = '''|| prm_acc_month ||'''
                                 and emp_id    =   '|| prm_emp_id    ||'
                               '
             ;
          end if;

          execute immediate v_str_tax_sql bulk collect into g_tab_tax_tmp;

          for i in 1..g_tab_tax_tmp.count() loop
             v_tax_i := v_tax_i + 1;
             g_tab_tax(v_tax_i).wage_code := g_tab_tax_tmp(i).wage_code;
             g_tab_tax(v_tax_i).kind_code := g_tab_tax_tmp(i).kind_code;
             g_tab_tax(v_tax_i).emp_id    := g_tab_tax_tmp(i).emp_id;
             g_tab_tax(v_tax_i).item_tax  := g_tab_tax_tmp(i).item_tax;
          end loop;
          g_tab_tax_tmp.delete;
          v_str_tax_sql := '';
      END LOOP;

      if cur_wage_tax_cal%isopen then
         CLOSE cur_wage_tax_cal;
      end if;

     --个人所得税计算
     for i in 1..g_tab_tax.count() loop

        --提取个税工资项
        select column_item
          into v_item_code
          from acc_wage_item
         where group_id   = prm_group_id
           and hos_id     = prm_hos_id
           and copy_code  = prm_copy_code
           and wage_code  = v_wage_code
           and acc_year   = prm_acc_year
           and item_type  = '04';

         --提取起征点
         select tax_value, ass_value
           into v_tax_value,v_ass_value
           from ACC_WAGE_TAX_SET
          where group_id  = prm_group_id
            and hos_id    = prm_hos_id
            and copy_code = prm_copy_code;

          --提取人员国籍
          select nvl(countries_code,'001') as countries_code
            into v_countries_code
            from acc_emp_attr
           where group_id = prm_group_id
             and hos_id   = prm_hos_id
             and emp_id   = g_tab_tax(i).emp_id
            ;

           if v_countries_code = '001' then   --中国
              v_ret_tax_value := v_tax_value;
           else  --外籍及港、澳、台
              v_ret_tax_value := v_tax_value + v_ass_value;
           end if;

           if g_tab_tax(i).item_tax >= v_ret_tax_value then
              --提取税率表
              select RATE,DEDUCT
                into v_n_RATE,v_n_DEDUCT
                from ACC_WAGE_TAX
               where group_id  =  prm_group_id
                 and hos_id    =  prm_hos_id
                 and copy_code =  prm_copy_code
                 and ( g_tab_tax(i).item_tax - v_ret_tax_value )>  nvl(starts, 0)      --第一段最小值给0元
                 and ( g_tab_tax(i).item_tax - v_ret_tax_value )<= nvl(ends, 10000000) --最后一段最大值给1千万元
                ;

               v_str_cal_tax_sql :='update acc_wage_pay
                                       set '||v_item_code||' = round(('|| g_tab_tax(i).item_tax ||' -
                                           '||to_char(v_ret_tax_value)||' ) * '|| to_char(v_n_RATE) ||'/100 -
                                           '||to_char(v_n_DEDUCT)||' ,2)
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| g_tab_tax(i).wage_code      ||'''
                                        and kind_code = '''|| g_tab_tax(i).kind_code      ||'''
                                        and emp_id    =   '|| to_char(g_tab_tax(i).emp_id)||'
                                     '
                ;

           else
               v_str_cal_tax_sql :='update acc_wage_pay
                                       set '||v_item_code  ||' = 0.0'       ||'
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| g_tab_tax(i).wage_code      ||'''
                                        and kind_code = '''|| g_tab_tax(i).kind_code      ||'''
                                        and emp_id    =   '|| to_char(g_tab_tax(i).emp_id)||'
                                     '
                ;
           end if;
           execute immediate v_str_cal_tax_sql;
           v_str_cal_tax_sql := '';
           v_item_code       := '';
           v_tax_value       := 0 ;
           v_ass_value       := 0 ;
           v_countries_code  := '001';
           v_ret_tax_value   := 0 ;
           v_n_RATE          := 0 ;
           v_n_DEDUCT        := 0 ;
     end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      WHEN TOO_MANY_ROWS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt  := '同一工资套内仅允许存在一个个税项！'||SQLERRM;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '职工个税计算失败！'||SQLERRM;
    END prc_TaxCalcEmp;

    /*-------------------------------------------------------------------------
   || 过程名称 ：根据工资计算队列进行出列计算工资计算(工资套)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcGroup( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_AppCode           Out  Number
                                ,prm_ErrTxt            Out  Varchar2
                                )

    Is
     --定义计算公式游标
     CURSOR cur_wage_item_cal  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_wage_code         IN   VARCHAR2       --工资套  修改
                                ,prm_item_code         IN   VARCHAR2       --工资项
                               )
       IS
         select t1.wage_code,
                t1.kind_code,
                t2.column_item as item_code,
                t2.item_name,
                t1.cal_name,
                REPLACE(REPLACE(t1.cal_eng, '{', ''), '}', '') as cal_eng
           from acc_wage_item_cal t1
           left join acc_wage_item t2
             on t1.group_id  = t2.group_id
            and t1.hos_id    = t2.hos_id
            and t1.copy_code = t2.copy_code
            and t1.acc_year  = t2.acc_year
            and t1.wage_code = t2.wage_code
            and t1.item_code = t2.item_code
          where t1.group_id    = prm_group_id
            and t1.hos_id      = prm_hos_id
            and t1.copy_code   = prm_copy_code
            and t1.acc_year    = prm_acc_year
            and t1.wage_code   = prm_wage_code
            and t2.column_item = prm_item_code
            and t2.item_cal    = '2'       --计算项标识
            and t2.item_type   <> '04';   --'01':基本项 '02':社保  '03':公积金 '04':个税

      --定义工资表中游标
      CURSOR cur_acc_wage_pay  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_kind_code         IN   VARCHAR2       --职工类别
                                )
       IS
         select emp_id
           from acc_wage_pay t
          where t.group_id  = prm_group_id
            and t.hos_id    = prm_hos_id
            and t.copy_code = prm_copy_code
            and t.wage_code = prm_wage_code
            and t.acc_year  = prm_acc_year
            and t.acc_month = prm_acc_month
            and (   (prm_kind_code <>0  and t.kind_code = prm_kind_code)
                 or (prm_kind_code = 0 )
                )
          ;

         --定义变量
         v_wage_code acc_wage_item.wage_code%type;
         v_kind_code acc_wage_item_cal.kind_code%type;
         v_item_code acc_wage_item.column_item%type;
         v_item_name acc_wage_item.item_name%type;
         v_cal_name  acc_wage_item_cal.cal_name%type;
         v_cal_eng   acc_wage_item_cal.cal_eng%type;
         v_cal_eng_emp acc_wage_item_cal.cal_eng%type;

         v_str_wage_sql       varchar2(4000); --工资计算串
         v_item_value    number(35,2);
         v_emp_id    acc_wage_pay.emp_id%type;

    begin
      --初始化变量
      v_str_wage_sql    := ''    ;
       v_item_value:=0;
      prm_AppCode  := def_OK;

      --工资批量计算
      for i in 1..g_tab_item_cal_order.count() loop
        if g_tab_item_cal_order(i).wage_code = prm_wage_code then
            open cur_wage_item_cal( prm_group_id
                                  , prm_hos_id
                                  , prm_copy_code
                                  , prm_acc_year
                                  , g_tab_item_cal_order(i).wage_code   --修改
                                  , g_tab_item_cal_order(i).item_code
                                 );
             LOOP
                FETCH cur_wage_item_cal INTO v_wage_code,v_kind_code,v_item_code,v_item_name,v_cal_name,v_cal_eng;    --提取游标

                IF cur_wage_item_cal%NOTFOUND THEN
                   if cur_wage_item_cal%isopen then
                      CLOSE cur_wage_item_cal;
                   end if;
                   EXIT;
                END IF;

                --替换函数中本集团
                if instr(v_cal_eng,'本集团') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本集团',to_char(prm_group_id));
                end if;

                --替换函数中本医院
                if instr(v_cal_eng,'本医院') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本医院',to_char(prm_hos_id));
                end if;

                --替换函数中本账套
                if instr(v_cal_eng,'本账套') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本账套',prm_copy_code);
                end if;

                --替换函数中年度
                if instr(v_cal_eng,'本年度') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本年度',to_char(prm_acc_year));
                end if;

                if instr(v_cal_eng,'上年') > 0  then
                   v_cal_eng := replace(v_cal_eng,'上年',to_char(to_number(prm_acc_year)-1));
                end if;

                if instr(v_cal_eng,'上两年') > 0  then
                   v_cal_eng := replace(v_cal_eng,'上两年',to_char(to_number(prm_acc_year)-2));
                end if;

                --替换函数中期间
                if instr(v_cal_eng,'本期间') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本期间',prm_acc_month);
                end if;

                --替换函数期间:由于避免年度变化，当上期跨年时，传递【增加值|本期】
                if instr(v_cal_eng,'上期') > 0  then
                  if prm_acc_month  = '01' then
                     v_cal_eng := replace(v_cal_eng,'上期','-1|01');
                  else
                     v_cal_eng := replace(v_cal_eng,'上期',substr('00'||to_char(to_number(prm_acc_month)-1),-2));
                  end if;
                end if;

                --替换函数期间:由于避免年度变化，当上两期跨年时，传递【增加值|本期】
                if instr(v_cal_eng,'上两期') > 0  then
                  if prm_acc_month  = '01' then
                     v_cal_eng := replace(v_cal_eng,'上两期','-2|01');
                  elsif prm_acc_month  = '02'  then
                     v_cal_eng := replace(v_cal_eng,'上两期','-2|02');
                  else
                     v_cal_eng := replace(v_cal_eng,'上两期',substr('00'||to_char(to_number(prm_acc_month)-2),-2));
                  end if;
                end if;

                --替换函数中工资套
                if instr(v_cal_eng,'本工资套') > 0  then
                   v_cal_eng := replace(v_cal_eng,'本工资套',v_wage_code);
                end if;

                 --替换函数中取上月自然天数
                if instr(v_cal_eng,'取上月自然天数') > 0  then
                   v_cal_eng := replace(v_cal_eng,'取上月自然天数',prm_acc_year||''||prm_acc_month);
                end if;

                --替换函数中本职工，如涉及本职工时，需要单人计算,否则批量计算
                if instr(v_cal_eng,'本职工') > 0  then

                   --按职工执行计算
                   open cur_acc_wage_pay(   prm_group_id
                                          , prm_hos_id
                                          , prm_copy_code
                                          , prm_acc_year
                                          , prm_acc_month
                                          , g_tab_item_cal_order(i).wage_code
                                          , v_kind_code
                                         );
                   LOOP
                      FETCH cur_acc_wage_pay INTO v_emp_id;    --提取游标

                      IF cur_acc_wage_pay%NOTFOUND THEN
                         if cur_acc_wage_pay%isopen then
                            CLOSE cur_acc_wage_pay;
                         end if;
                         EXIT;
                      END IF;

                      v_cal_eng_emp := v_cal_eng;
                      v_cal_eng := replace(v_cal_eng,'本职工',to_char(v_emp_id));

                      execute immediate 'select  round('|| v_cal_eng ||' ,2) from  acc_wage_pay
                                          where group_id  =   '|| prm_group_id     ||'
                                            and hos_id    =   '|| prm_hos_id       ||'
                                            and copy_code = '''|| prm_copy_code    ||'''
                                            and acc_year  = '''|| prm_acc_year     ||'''
                                            and acc_month = '''|| prm_acc_month    ||'''
                                          and wage_code = '''|| v_wage_code      ||'''
                                              and emp_id    =   '|| to_char(v_emp_id)||'
                                         ' into v_item_value;

                      if v_kind_code <> '0' then

                        v_str_wage_sql :='update acc_wage_pay
                                             set '||v_item_code||' = round('|| v_item_value ||' ,2)
                                            where group_id  =   '|| prm_group_id     ||'
                                              and hos_id    =   '|| prm_hos_id       ||'
                                              and copy_code = '''|| prm_copy_code    ||'''
                                              and acc_year  = '''|| prm_acc_year     ||'''
                                              and acc_month = '''|| prm_acc_month    ||'''
                                              and wage_code = '''|| v_wage_code      ||'''
                                              and kind_code = '''|| v_kind_code      ||'''
                                              and emp_id    =   '|| to_char(v_emp_id)||'
                                           '
                           ;
                      else  --所有类别工资计算公式均一样

                         v_str_wage_sql :='update acc_wage_pay
                                             set '||v_item_code||' = round('|| v_item_value ||' ,2)
                                            where group_id  =   '|| prm_group_id     ||'
                                              and hos_id    =   '|| prm_hos_id       ||'
                                              and copy_code = '''|| prm_copy_code    ||'''
                                              and acc_year  = '''|| prm_acc_year     ||'''
                                              and acc_month = '''|| prm_acc_month    ||'''
                                              and wage_code = '''|| v_wage_code      ||'''
                                              and emp_id    =   '|| to_char(v_emp_id)||'
                                           '
                           ;
                     end if;

                     execute immediate v_str_wage_sql;
                     v_str_wage_sql := '';
                     v_cal_eng := v_cal_eng_emp;
                   END LOOP;

                   if cur_acc_wage_pay%isopen then
                      CLOSE cur_acc_wage_pay;
                   end if;

                else

                   if v_kind_code <> '0' then

                       v_str_wage_sql :='update acc_wage_pay
                                            set '||v_item_code||' = round('|| v_cal_eng ||' ,2)
                                           where group_id  =   '|| prm_group_id  ||'
                                             and hos_id    =   '|| prm_hos_id    ||'
                                             and copy_code = '''|| prm_copy_code ||'''
                                             and acc_year  = '''|| prm_acc_year  ||'''
                                             and acc_month = '''|| prm_acc_month ||'''
                                             and wage_code = '''|| v_wage_code   ||'''
                                             and kind_code = '''|| v_kind_code   ||'''
                                          '
                          ;
                    else  --所有类别工资计算公式均一样

                     v_str_wage_sql :='update acc_wage_pay
                                            set '||v_item_code||' = round('|| v_cal_eng ||' ,2)
                                           where group_id  =   '|| prm_group_id  ||'
                                             and hos_id    =   '|| prm_hos_id    ||'
                                             and copy_code = '''|| prm_copy_code ||'''
                                             and acc_year  = '''|| prm_acc_year  ||'''
                                             and acc_month = '''|| prm_acc_month ||'''
                                             and wage_code = '''|| v_wage_code   ||'''
                                          '
                          ;
                    end if;
                    execute immediate v_str_wage_sql;
                    v_str_wage_sql := '';
               end if;   --<<替换函数中本职工>>
             end loop;

             if cur_wage_item_cal%isopen then
                CLOSE cur_wage_item_cal;
             end if;
         end if;
      end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '工资计算失败！工资套{'||prm_wage_code||'}'||SQLERRM;
    end prc_WageCalcGroup;

   /*-------------------------------------------------------------------------
   || 过程名称 ：根据Hsh表进行个税计算(工资套)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_TaxCalcGroup ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_AppCode           Out  Number
                                ,prm_ErrTxt            Out  Varchar2
                             )

    Is
      --定义应税项游标
      CURSOR cur_wage_tax_cal   (  prm_group_id          IN   NUMBER         --集团
                                  ,prm_hos_id            IN   NUMBER         --医院
                                  ,prm_copy_code         IN   VARCHAR2       --账套
                                  ,prm_acc_year          IN   VARCHAR2       --年度
                                  ,prm_wage_code         IN   VARCHAR2       --工资套
                                 )
          IS
          select t1.wage_code,
                 t1.kind_code,
                 t1.cal_name,
                 REPLACE(REPLACE(t1.cal_eng, '{', ''), '}', '') as cal_eng
            from ACC_WAGE_TAX_CAL t1
           where t1.group_id    =  prm_group_id
             and t1.hos_id      =  prm_hos_id
             and t1.copy_code   =  prm_copy_code
             and t1.acc_year    =  prm_acc_year
             and t1.wage_code   =  prm_wage_code
            order by t1.group_id,t1.hos_id,t1.copy_code,t1.acc_year,t1.wage_code,t1.kind_code;

      --定义工资表中游标
      CURSOR cur_acc_wage_pay  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2       --年度
                                ,prm_acc_month         IN   VARCHAR2       --月份
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                                ,prm_kind_code         IN   VARCHAR2       --职工类别
                                )
       IS
         select emp_id
           from acc_wage_pay t
          where t.group_id  = prm_group_id
            and t.hos_id    = prm_hos_id
            and t.copy_code = prm_copy_code
            and t.wage_code = prm_wage_code
            and t.acc_year  = prm_acc_year
            and t.acc_month = prm_acc_month
            and (   (prm_kind_code <>0  and t.kind_code = prm_kind_code)
                 or (prm_kind_code = 0 )
                )
          ;

       --定义变量
       v_wage_code acc_wage_item.wage_code%type;
       v_kind_code acc_wage_item_cal.kind_code%type;
       v_item_code acc_wage_item.column_item%type;
       v_cal_name  acc_wage_item_cal.cal_name%type;
       v_cal_eng   acc_wage_item_cal.cal_eng%type;
       v_cal_eng_emp acc_wage_item_cal.cal_eng%type;

       v_str_tax_sql        varchar2(4000);  --应税项计算串
       v_str_cal_tax_sql    varchar2(4000);  --计算个人所得税

       v_tax_i          integer       ;
       v_tax_value      ACC_WAGE_TAX_SET.Tax_Value%type;  --中国
       v_ass_value      ACC_WAGE_TAX_SET.Ass_Value%type;  --外籍及港、澳、台 = v_tax_value + v_ass_value
       v_ret_tax_value  ACC_WAGE_TAX_SET.Tax_Value%type;  --综合起征点
       v_n_RATE         ACC_WAGE_TAX.Rate%type;           --税率
       v_n_DEDUCT       ACC_WAGE_TAX.Deduct%type;         --速算扣除数
       v_countries_code ACC_EMP_ATTR.Countries_Code%type; --国籍 001：中国

       v_emp_id         acc_wage_pay.emp_id%type;         --职工ID
    begin
      --初始化变量
      v_str_tax_sql     := ''    ;
      v_str_cal_tax_sql := ''    ;
      v_tax_i           := 0     ;
      v_tax_value       := 3500  ; --中国
      v_ass_value       := 1300  ; --外籍及港、澳、台 = v_tax_value + v_ass_value
      v_ret_tax_value   := 0     ;
      v_n_RATE          := 0     ;
      v_n_DEDUCT        := 0     ;
      v_countries_code  := '001' ; --中国

      prm_AppCode  := def_OK;

      --应税项计算
      open cur_wage_tax_cal(  prm_group_id
                            , prm_hos_id
                            , prm_copy_code
                            , prm_acc_year
                            , prm_wage_code
                           );
      LOOP
          FETCH cur_wage_tax_cal INTO v_wage_code,v_kind_code,v_cal_name,v_cal_eng;    --提取游标

          IF cur_wage_tax_cal%NOTFOUND THEN
             if cur_wage_tax_cal%isopen then
                CLOSE cur_wage_tax_cal;
             end if;
             EXIT;
          END IF;

          --替换函数中本集团
          if instr(v_cal_eng,'本集团') > 0  then
             v_cal_eng := replace(v_cal_eng,'本集团',to_char(prm_group_id));
          end if;

          --替换函数中本医院
          if instr(v_cal_eng,'本医院') > 0  then
             v_cal_eng := replace(v_cal_eng,'本医院',to_char(prm_hos_id));
          end if;

          --替换函数中本账套
          if instr(v_cal_eng,'本账套') > 0  then
             v_cal_eng := replace(v_cal_eng,'本账套',prm_copy_code);
          end if;

          --替换函数中年度
          if instr(v_cal_eng,'本年度') > 0  then
             v_cal_eng := replace(v_cal_eng,'本年度',to_char(prm_acc_year));
          end if;

          if instr(v_cal_eng,'上年') > 0  then
             v_cal_eng := replace(v_cal_eng,'上年',to_char(to_number(prm_acc_year)-1));
          end if;

          if instr(v_cal_eng,'上两年') > 0  then
             v_cal_eng := replace(v_cal_eng,'上两年',to_char(to_number(prm_acc_year)-2));
          end if;

          --替换函数中期间
          if instr(v_cal_eng,'本期间') > 0  then
             v_cal_eng := replace(v_cal_eng,'本期间',prm_acc_month);
          end if;

          --替换函数期间:由于避免年度变化，当上期跨年时，传递【增加值|本期】
          if instr(v_cal_eng,'上期') > 0  then
            if prm_acc_month  = '01' then
               v_cal_eng := replace(v_cal_eng,'上期','-1|01');
            else
               v_cal_eng := replace(v_cal_eng,'上期',substr('00'||to_char(to_number(prm_acc_month)-1),-2));
            end if;
          end if;

          --替换函数期间:由于避免年度变化，当上两期跨年时，传递【增加值|本期】
          if instr(v_cal_eng,'上两期') > 0  then
            if prm_acc_month  = '01' then
               v_cal_eng := replace(v_cal_eng,'上两期','-2|01');
            elsif prm_acc_month  = '02'  then
               v_cal_eng := replace(v_cal_eng,'上两期','-2|02');
            else
               v_cal_eng := replace(v_cal_eng,'上两期',substr('00'||to_char(to_number(prm_acc_month)-2),-2));
            end if;
          end if;

          --替换函数中工资套
          if instr(v_cal_eng,'本工资套') > 0  then
             v_cal_eng := replace(v_cal_eng,'本工资套',v_wage_code);
          end if;

           --替换函数中取上月自然天数
            if instr(v_cal_eng,'取上月自然天数') > 0  then
               v_cal_eng := replace(v_cal_eng,'取上月自然天数',prm_acc_year||''||prm_acc_month);
            end if;
          --替换函数中本职工
          if instr(v_cal_eng,'本职工') > 0  then
             --按职工执行计算
             open cur_acc_wage_pay(   prm_group_id
                                    , prm_hos_id
                                    , prm_copy_code
                                    , prm_acc_year
                                    , prm_acc_month
                                    , v_wage_code
                                    , v_kind_code
                                   );
             LOOP
                FETCH cur_acc_wage_pay INTO v_emp_id;    --提取游标

                IF cur_acc_wage_pay%NOTFOUND THEN
                   if cur_acc_wage_pay%isopen then
                      CLOSE cur_acc_wage_pay;
                   end if;
                   EXIT;
                END IF;

                v_cal_eng_emp := v_cal_eng;

                v_cal_eng := replace(v_cal_eng,'本职工',to_char(v_emp_id));

                if v_kind_code <> '0' then
                   v_str_tax_sql := 'select  wage_code
                                           , kind_code
                                           , emp_id
                                           ,round('|| v_cal_eng ||' ,2)
                                      from acc_wage_pay
                                     where group_id  =   '|| prm_group_id     ||'
                                       and hos_id    =   '|| prm_hos_id       ||'
                                       and copy_code = '''|| prm_copy_code    ||'''
                                       and wage_code = '''|| v_wage_code      ||'''
                                       and kind_code = '''|| v_kind_code      ||'''
                                       and acc_year  = '''|| prm_acc_year     ||'''
                                       and acc_month = '''|| prm_acc_month    ||'''
                                       and emp_id    =   '|| to_char(v_emp_id)||'
                                     '
                   ;
                else
                  v_str_tax_sql := 'select  wage_code
                                           , kind_code
                                           , emp_id
                                           ,round('|| v_cal_eng ||' ,2)
                                      from acc_wage_pay
                                     where group_id  =   '|| prm_group_id     ||'
                                       and hos_id    =   '|| prm_hos_id       ||'
                                       and copy_code = '''|| prm_copy_code    ||'''
                                       and wage_code = '''|| v_wage_code      ||'''
                                       and acc_year  = '''|| prm_acc_year     ||'''
                                       and acc_month = '''|| prm_acc_month    ||'''
                                       and emp_id    =   '|| to_char(v_emp_id)||'
                                     '
                   ;
                end if;

                execute immediate v_str_tax_sql bulk collect into g_tab_tax_tmp;

                for i in 1..g_tab_tax_tmp.count() loop
                   v_tax_i := v_tax_i + 1;
                   g_tab_tax(v_tax_i).wage_code := g_tab_tax_tmp(i).wage_code;
                   g_tab_tax(v_tax_i).kind_code := g_tab_tax_tmp(i).kind_code;
                   g_tab_tax(v_tax_i).emp_id    := g_tab_tax_tmp(i).emp_id;
                   g_tab_tax(v_tax_i).item_tax  := g_tab_tax_tmp(i).item_tax;
                end loop;
                g_tab_tax_tmp.delete;
                v_str_tax_sql := '';
                v_cal_eng := v_cal_eng_emp ;
             END LOOP;

             if cur_acc_wage_pay%isopen then
                CLOSE cur_acc_wage_pay;
             end if;
          else   --批量计算
            if v_kind_code <> '0' then
               v_str_tax_sql := 'select  wage_code
                                       , kind_code
                                       , emp_id
                                       ,round('|| v_cal_eng ||' ,2)
                                  from acc_wage_pay
                                 where group_id  =   '|| prm_group_id  ||'
                                   and hos_id    =   '|| prm_hos_id    ||'
                                   and copy_code = '''|| prm_copy_code ||'''
                                   and wage_code = '''|| v_wage_code   ||'''
                                   and kind_code = '''|| v_kind_code   ||'''
                                   and acc_year  = '''|| prm_acc_year  ||'''
                                   and acc_month = '''|| prm_acc_month ||'''
                                 '
               ;
            else
              v_str_tax_sql := 'select  wage_code
                                       , kind_code
                                       , emp_id
                                       ,round('|| v_cal_eng ||' ,2)
                                  from acc_wage_pay
                                 where group_id  =   '|| prm_group_id  ||'
                                   and hos_id    =   '|| prm_hos_id    ||'
                                   and copy_code = '''|| prm_copy_code ||'''
                                   and wage_code = '''|| v_wage_code   ||'''
                                   and acc_year  = '''|| prm_acc_year  ||'''
                                   and acc_month = '''|| prm_acc_month ||'''
                                 '
               ;
            end if;

            execute immediate v_str_tax_sql bulk collect into g_tab_tax_tmp;

            for i in 1..g_tab_tax_tmp.count() loop
               v_tax_i := v_tax_i + 1;
               g_tab_tax(v_tax_i).wage_code := g_tab_tax_tmp(i).wage_code;
               g_tab_tax(v_tax_i).kind_code := g_tab_tax_tmp(i).kind_code;
               g_tab_tax(v_tax_i).emp_id    := g_tab_tax_tmp(i).emp_id;
               g_tab_tax(v_tax_i).item_tax  := g_tab_tax_tmp(i).item_tax;
            end loop;
            g_tab_tax_tmp.delete;
            v_str_tax_sql := '';
         end if;  --<<替换函数中本职工>>
      END LOOP;

      if cur_wage_tax_cal%isopen then
         CLOSE cur_wage_tax_cal;
      end if;

     --个人所得税计算
     for i in 1..g_tab_tax.count() loop

        --提取个税工资项
        select column_item
          into v_item_code
          from acc_wage_item
         where group_id   = prm_group_id
           and hos_id     = prm_hos_id
           and copy_code  = prm_copy_code
           and wage_code  = v_wage_code
           and acc_year   = prm_acc_year
           and item_type  = '04';

         --提取起征点
         select tax_value, ass_value
           into v_tax_value,v_ass_value
           from ACC_WAGE_TAX_SET
          where group_id  = prm_group_id
            and hos_id    = prm_hos_id
            and copy_code = prm_copy_code;

          --提取人员国籍
          select nvl(countries_code,'001') as countries_code
            into v_countries_code
            from acc_emp_attr
           where group_id = prm_group_id
             and hos_id   = prm_hos_id
             and emp_id   = g_tab_tax(i).emp_id
            ;

           if v_countries_code = '001' then   --中国
              v_ret_tax_value := v_tax_value;
           else  --外籍及港、澳、台
              v_ret_tax_value := v_tax_value + v_ass_value;
           end if;

           if g_tab_tax(i).item_tax > v_ret_tax_value then
              --提取税率表
              select RATE,DEDUCT
                into v_n_RATE,v_n_DEDUCT
                from ACC_WAGE_TAX
               where group_id  =  prm_group_id
                 and hos_id    =  prm_hos_id
                 and copy_code =  prm_copy_code
                 and ( g_tab_tax(i).item_tax - v_ret_tax_value )>  nvl(starts, 0)      --第一段最小值给0元
                 and ( g_tab_tax(i).item_tax - v_ret_tax_value )<= nvl(ends, 10000000) --最后一段最大值给1千万元
                ;

               v_str_cal_tax_sql :='update acc_wage_pay
                                       set '||v_item_code||' = round(('|| g_tab_tax(i).item_tax ||' -
                                           '||to_char(v_ret_tax_value)||' ) * '|| to_char(v_n_RATE) ||'/100 -
                                           '||to_char(v_n_DEDUCT)||' ,2)
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| g_tab_tax(i).wage_code      ||'''
                                        and kind_code = '''|| g_tab_tax(i).kind_code      ||'''
                                        and emp_id    =   '|| to_char(g_tab_tax(i).emp_id)||'
                                     '
                ;

           else
               v_str_cal_tax_sql :='update acc_wage_pay
                                       set '||v_item_code  ||' = 0.0'       ||'
                                      where group_id  =   '|| prm_group_id  ||'
                                        and hos_id    =   '|| prm_hos_id    ||'
                                        and copy_code = '''|| prm_copy_code ||'''
                                        and acc_year  = '''|| prm_acc_year  ||'''
                                        and acc_month = '''|| prm_acc_month ||'''
                                        and wage_code = '''|| g_tab_tax(i).wage_code      ||'''
                                        and kind_code = '''|| g_tab_tax(i).kind_code      ||'''
                                        and emp_id    =   '|| to_char(g_tab_tax(i).emp_id)||'
                                     '
                ;
           end if;
           execute immediate v_str_cal_tax_sql;
           v_str_cal_tax_sql := '';
           v_item_code       := '';
           v_tax_value       := 0 ;
           v_ass_value       := 0 ;
           v_countries_code  := '001';
           v_ret_tax_value   := 0 ;
           v_n_RATE          := 0 ;
           v_n_DEDUCT        := 0 ;
     end loop;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      WHEN TOO_MANY_ROWS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt  := '同一工资套内仅允许存在一个个税项！工资套{'||prm_wage_code||'}'||SQLERRM;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '职工个税计算失败！工资套{'||prm_wage_code||'}'||SQLERRM;
    END prc_TaxCalcGroup;

   /*-------------------------------------------------------------------------
   || 过程名称 ：工资批量计算(工资套)
   || 参数描述 ：参数标识           名称        输入/输出  类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      月份             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode        业务处理标志     OUT          Number
   ||            prm_ErrTxt         返回信息         OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_WageCalcWage(      prm_group_id          IN   NUMBER         --集团
                                    ,prm_hos_id            IN   NUMBER         --医院
                                    ,prm_copy_code         IN   VARCHAR2       --账套
                                    ,prm_acc_year          IN   VARCHAR2       --年度
                                    ,prm_acc_month         IN   VARCHAR2       --月份
                                    ,prm_wage_code         IN   VARCHAR2       --工资套
                                    ,prm_AppCode           Out  Number
                                    ,prm_ErrTxt            Out  Varchar2
                                   )

    Is

    BEGIN
       --初始化变量
       prm_AppCode     := def_OK;
       prm_ErrTxt      := '计算成功!';

       --1、工资完整性检查(工资套)
       prc_CheckFormulaGroup( prm_group_id
                             ,prm_hos_id
                             ,prm_copy_code
                             ,prm_acc_year
                             ,prm_acc_month
                             ,prm_wage_code
                             ,prm_AppCode
                             ,prm_ErrTxt
                             );

       if prm_AppCode <> def_OK then
         return;
       end if;

       --2、初始化,所有栈及队列
       prc_InitTab(prm_AppCode
                  ,prm_ErrTxt);

       if prm_AppCode = def_ERR then
         return;
       end if;


       --3、解析公式压栈：工资计算栈[g_tab_item_cal]
       prc_LoadHshTab(   prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_AppCode
                        ,prm_ErrTxt
                       ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --4、检测计算公式是否存在嵌套引用(工资套)
       prc_CheckNestGroup( prm_group_id
                          ,prm_hos_id
                          ,prm_copy_code
                          ,prm_acc_year
                          ,prm_wage_code
                          ,prm_AppCode
                          ,prm_ErrTxt
                          );

       if prm_AppCode <> def_OK then
         return;
       end if;

       --5、依据后序遍历更新排序号:工资计算栈[g_tab_item_cal]
       prc_WriteFlag(prm_AppCode ,
                     prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --6、解析公式出栈入计算队列：工资计算队列[g_tab_item_cal_order]
       prc_OrderTab(prm_AppCode ,
                    prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --7、个税公式出队列入闪存栈：个税闪存栈[g_tab_tax_parent]
       prc_PushTaxParent( prm_group_id
                         ,prm_hos_id
                         ,prm_copy_code
                         ,prm_acc_year
                         ,prm_AppCode
                         ,prm_ErrTxt
                        );

       if prm_AppCode = def_ERR then
         return;
       end if;

       --8、个税公式移出队列：工资计算队列[g_tab_item_cal_order]
       prc_DelTaxParent(prm_AppCode ,
                        prm_ErrTxt
                        ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --9、去除队列中重复成员：工资计算队列[g_tab_item_cal_order]
       prc_DistinctTab(prm_AppCode ,
                       prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --10、工资计算队列出列计算：工资计算队列[g_tab_item_cal_order]
       prc_WageCalcGroup( prm_group_id
                         ,prm_hos_id
                         ,prm_copy_code
                         ,prm_acc_year
                         ,prm_acc_month
                         ,prm_wage_code
                         ,prm_AppCode
                         ,prm_ErrTxt
                        );
       if prm_AppCode = def_ERR then
         return;
       end if;

       --11、个税计算栈出栈计算：个税计算队栈[g_tab_tax]
       prc_TaxCalcGroup( prm_group_id
                        ,prm_hos_id
                        ,prm_copy_code
                        ,prm_acc_year
                        ,prm_acc_month
                        ,prm_wage_code
                        ,prm_AppCode
                        ,prm_ErrTxt
                      );
       if prm_AppCode = def_ERR then
         return;
       end if;

       --12、个税闪存栈回载工资计算栈:个税闪存栈[g_tab_tax_parent]-->->->>工资计算栈[g_tab_item_cal]
       prc_LoadTaxParent(prm_AppCode ,
                         prm_ErrTxt  ) ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --13、重新加载并计算工资控制栈：工资控制栈[g_tab_level]
       prc_OrderLevel(prm_AppCode ,
                      prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --14、解析公式出栈入计算队列：工资计算队列[g_tab_item_cal_order]
       prc_OrderTab(prm_AppCode ,
                    prm_ErrTxt  )  ;

       if prm_AppCode = def_ERR then
         return;
       end if;

       --15、去除队列中重复成员：工资计算队列[g_tab_item_cal_order]
       prc_DistinctTab(prm_AppCode ,
                       prm_ErrTxt  )  ;
       if prm_AppCode = def_ERR then
         return;
       end if;

       --16、工资计算队列出列计算：工资计算队列[g_tab_item_cal_order]
       prc_WageCalcGroup( prm_group_id
                         ,prm_hos_id
                         ,prm_copy_code
                         ,prm_acc_year
                         ,prm_acc_month
                         ,prm_wage_code
                         ,prm_AppCode
                         ,prm_ErrTxt
                         );
       if prm_AppCode = def_ERR then
         return;
       end if;

       prm_AppCode :=  def_OK;
       prm_ErrTxt  := '工资批量计算完成！' ;

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '工资批量计算失败！工资套{'||prm_wage_code||'}'||SQLERRM;
    END prc_WageCalcWage;

    /*-------------------------------------------------------------------------
   || 过程名称 ：工资完整性检查通过（工资套）
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_acc_month      工资套           IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number
   ||            prm_ErrTxt      返回信息            OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckFormulaGroup( prm_group_id          IN   NUMBER         --集团
                                    ,prm_hos_id            IN   NUMBER         --医院
                                    ,prm_copy_code         IN   VARCHAR2       --账套
                                    ,prm_acc_year          IN   VARCHAR2       --年度
                                    ,prm_acc_month         IN   VARCHAR2       --月份
                                    ,prm_wage_code         IN   VARCHAR2       --工资套
                                    ,prm_AppCode           Out  Number
                                    ,prm_ErrTxt            Out  Varchar2
                                   )

    Is
     --定义计算公式游标
     CURSOR cur_wage_item_tax  ( prm_group_id          IN   NUMBER         --集团
                                ,prm_hos_id            IN   NUMBER         --医院
                                ,prm_copy_code         IN   VARCHAR2       --账套
                                ,prm_acc_year          IN   VARCHAR2         --开始年度
                                ,prm_wage_code         IN   VARCHAR2       --工资套
                               )
       IS
      select wage_code, kind_code, cal_eng
        from acc_wage_tax_cal
       where group_id  = prm_group_id
         and hos_id    = prm_hos_id
         and copy_code = prm_copy_code
         and acc_year  = prm_acc_year
         and wage_code = prm_wage_code;   --修改

     --检查同一工资套个税个数
     CURSOR cur_wage_tax_count  ( prm_group_id          IN   NUMBER         --集团
                                 ,prm_hos_id            IN   NUMBER         --医院
                                 ,prm_copy_code         IN   VARCHAR2       --账套
                                 ,prm_acc_year          IN   VARCHAR2       --开始年度
                                 ,prm_wage_code         IN   VARCHAR2       --工资套
                                )
       IS
       select wage_code,
              count(1) as n_count
         from acc_wage_item
        where group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and wage_code = prm_wage_code   --修改
          and item_type = '04'
        group by wage_code;

       v_wage_code     acc_wage_tax_cal.wage_code%type;
       v_kind_code     acc_wage_tax_cal.kind_code%type;
       v_CAL_ENG       acc_wage_tax_cal.cal_eng%type  ;
       v_count         integer := 0 ;
       i_ret           integer := 0 ;
       i_ret_tax       integer := 0 ;
       v_pos           integer := 1 ;
       v_item_code     varchar2(4000);
    BEGIN
       prm_AppCode := def_OK;
       v_wage_code := ''    ;
       v_kind_code := ''    ;
       v_CAL_ENG   := ''    ;
       v_item_code := ''    ;

       --检测是否存在计算项未维护计算公式
       select count(1)
         into i_ret
         from acc_wage_item
        where to_char(group_id) || to_char(hos_id) || copy_code || acc_year ||
              wage_code || item_code not in
              (select to_char(group_id) || to_char(hos_id) || copy_code ||
                      acc_year || wage_code || item_code
                 from acc_wage_item_cal
                where group_id  = prm_group_id
                  and hos_id    = prm_hos_id
                  and copy_code = prm_copy_code
                  and acc_year  = prm_acc_year)
          and group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and wage_code = prm_wage_code  --修改
          and item_cal  = '2'
          and item_type <> '04';

        if i_ret <> 0 then
           prm_AppCode :=  def_WARNING;
           prm_ErrTxt  := '工资套{'||prm_wage_code||'}存在计算项未维护计算公式！';
           return;
        end if;

       i_ret := 0 ;
       --检测个税是否维护计算公式[正确不应维护计算公式]
       select count(1)
         into i_ret
         from acc_wage_item
        where to_char(group_id) || to_char(hos_id) || copy_code || acc_year ||
              wage_code || item_code in
              (select to_char(group_id) || to_char(hos_id) || copy_code ||
                      acc_year || wage_code || item_code
                 from acc_wage_item_cal
                where group_id  = prm_group_id
                  and hos_id    = prm_hos_id
                  and copy_code = prm_copy_code
                  and acc_year  = prm_acc_year)
          and group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and wage_code = prm_wage_code        --修改
          and item_type = '04';

       if i_ret <> 0 then
           prm_AppCode :=  def_WARNING;
           prm_ErrTxt  := '工资套{'||prm_wage_code||'}个税工资项不允许维护计算公式！';
           return;
        end if;

       i_ret := 0 ;

       select count(1)
         into i_ret
         from acc_wage_item
        where group_id  = prm_group_id
          and hos_id    = prm_hos_id
          and copy_code = prm_copy_code
          and acc_year  = prm_acc_year
          and wage_code = prm_wage_code        --修改
          and item_type = '04';

       if i_ret <> 0 then

          open cur_wage_tax_count( prm_group_id
                                 , prm_hos_id
                                 , prm_copy_code
                                 , prm_acc_year
                                 , prm_wage_code   --修改
                                 );
          LOOP
            FETCH cur_wage_tax_count INTO v_wage_code,v_count;    --提取游标
            IF cur_wage_tax_count%NOTFOUND THEN
               if cur_wage_tax_count%isopen then
                  CLOSE cur_wage_tax_count;
               end if;
               EXIT;
            END IF;

            if v_count > 1 then

               if cur_wage_tax_count%isopen then
                  CLOSE cur_wage_tax_count;
               end if;

               prm_AppCode :=  def_WARNING;
               prm_ErrTxt  := '同一工资套下仅允许存在一个个税项！工资套：{'||prm_wage_code||'}';
               return;
            end if;

            v_count     := 0 ;
            v_wage_code := 0 ;
          END LOOP;

          if cur_wage_tax_count%isopen then
             CLOSE cur_wage_tax_count;
          end if;

          --检查起征点
          select count(1)
            into i_ret_tax
            from acc_wage_tax_set
           where group_id  = prm_group_id
             and hos_id    = prm_hos_id
             and copy_code = prm_copy_code;

          if i_ret_tax = 0 then
            prm_AppCode :=  def_WARNING;
            prm_ErrTxt  := '请维护个税起征点！';
            return;
          end if;

         i_ret_tax := 0 ;

         --检查个税税率表
         select count(1)
           into i_ret_tax
           from acc_wage_tax
          where group_id = prm_group_id
            and hos_id = prm_hos_id
            and copy_code = prm_copy_code;

          if i_ret_tax = 0 then
            prm_AppCode :=  def_WARNING;
            prm_ErrTxt  := '请维护个税税率表！';
            return;
          end if;

         i_ret_tax := 0 ;

         --检查应税项
         select count(1)
           into i_ret_tax
           from acc_wage_tax_cal
          where group_id = prm_group_id
            and hos_id = prm_hos_id
            and copy_code = prm_copy_code
            and acc_year  = prm_acc_year
            and wage_code = prm_wage_code  ;   --修改

          if i_ret_tax = 0 then
            prm_AppCode :=  def_WARNING;
            prm_ErrTxt  := '工资套{'||prm_wage_code||'}请维护应税项计算公式！';
            return;
          end if;

          open cur_wage_item_tax( prm_group_id
                                , prm_hos_id
                                , prm_copy_code
                                , prm_acc_year
                                , prm_wage_code --修改
                               );
          LOOP
            FETCH cur_wage_item_tax INTO v_wage_code,v_kind_code,v_CAL_ENG;    --提取游标
            IF cur_wage_item_tax%NOTFOUND THEN
               if cur_wage_item_tax%isopen then
                  CLOSE cur_wage_item_tax;
               end if;
               EXIT;
            END IF;

            --获取字符串工资项总数
            v_count := fun_cal_num(v_CAL_ENG);

            while (v_count > 0 )  LOOP
                --拆分字符串
                prc_SplitChar( v_CAL_ENG     ,
                              '{'            ,
                              v_pos          ,
                              v_item_code    ,
                              prm_AppCode    ,
                              prm_ErrTxt
                              );

                --拆分字符串失败
                if prm_AppCode = def_ERR then
                   if cur_wage_item_tax%isopen then
                      CLOSE cur_wage_item_tax;
                   end if;
                   return;
                end if;

                i_ret_tax := 0 ;

                select count(1)
                  into i_ret_tax
                  from acc_wage_item
                 where group_id    = prm_group_id
                   and hos_id      = prm_hos_id
                   and copy_code   = prm_copy_code
                   and acc_year    = prm_acc_year
                   and wage_code   = v_wage_code
                   and column_item = v_item_code
                   and item_type = '04';

                if i_ret_tax <> 0  then

                   if cur_wage_item_tax%isopen then
                      CLOSE cur_wage_item_tax;
                   end if;
                   prm_AppCode :=  def_WARNING;
                   prm_ErrTxt  := '工资套{'||prm_wage_code||'}应税项公式不合法，存在嵌套引用!';
                   return;
                end if;
                i_ret_tax := 0 ;
                v_pos     :=  v_pos   + 1;
                v_count   :=  v_count - 1;
            END LOOP;

            v_pos   := 1;
            v_count := 0;

          END LOOP;

          if cur_wage_item_tax%isopen then
             CLOSE cur_wage_item_tax;
          end if;
       end if;

       i_ret := 0 ;

       select count(1)
         into i_ret
        from acc_wage_pay
       where group_id  = prm_group_id
         and hos_id    = prm_hos_id
         and copy_code = prm_copy_code
         and acc_year  = prm_acc_year
         and acc_month = prm_acc_month
         and wage_code = prm_wage_code
         ;

       if i_ret = 0 then
           prm_AppCode :=  def_WARNING;
           prm_ErrTxt  := '工资套{'||prm_wage_code||'}请先生成本月工资表！';
           return;
       end if;


      prm_AppCode :=  def_OK;
      prm_ErrTxt  := '公式完整性检查通过！';

    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '公式完整性检查失败！工资套：{'||prm_wage_code||'}'||SQLERRM;
    END prc_CheckFormulaGroup;

   /*-------------------------------------------------------------------------
   || 过程名称 ：检测工资计算栈是否存在嵌套引用(工资套)
   || 参数描述 ：参数标识           名称            输入/输出       类型
   ||            -------------------------------------------------------------
   ||            prm_group_id       集团             IN           NUMBER
   ||            prm_hos_id         医院             IN           NUMBER
   ||            prm_copy_code      账套             IN           VARCHAR2
   ||            prm_acc_year       年度             IN           VARCHAR2
   ||            prm_wage_code      工资套           IN           VARCHAR2
   ||            prm_AppCode     业务处理标志        OUT          Number
   ||            prm_ErrTxt      返回信息            OUT          Varchar2
   ||
   || 作    者 ：               完成日期 ：
   ||-------------------------------------------------------------------------
   || 修改记录 ：
   ||-------------------------------------------------------------------------*/
    Procedure prc_CheckNestGroup( prm_group_id          IN   NUMBER         --集团
                                 ,prm_hos_id            IN   NUMBER         --医院
                                 ,prm_copy_code         IN   VARCHAR2       --账套
                                 ,prm_acc_year          IN   VARCHAR2       --年度
                                 ,prm_wage_code         IN   VARCHAR2       --工资套
                                 ,prm_AppCode           Out  Number
                                 ,prm_ErrTxt            Out  Varchar2
                                )

    Is
    BEGIN
        prm_AppCode := def_OK    ;

        --检测工资计算栈是否存在嵌套引用
        for i in 1..g_tab_item_cal.count() loop
          if g_tab_item_cal(i).wage_code = prm_wage_code then
            prc_CheckHshTab(   prm_group_id
                              ,prm_hos_id
                              ,prm_copy_code
                              ,prm_acc_year
                              ,g_tab_item_cal(i).wage_code
                              ,g_tab_item_cal(i).item_code
                              ,1
                              ,prm_AppCode
                              ,prm_ErrTxt
                           );

             g_tab_item_check.delete;

             if prm_AppCode <> def_OK then
                return;
             end if;
          end if;
       end loop;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         null;
      WHEN OTHERS THEN
         prm_AppCode :=  def_ERR;
         prm_ErrTxt := '公式嵌套引用检查失败！工资套：{'||prm_wage_code||'}'||SQLERRM;
    END prc_CheckNestGroup;

  end PKG_WAGE_CAL;
	
	
	]]></sql>

</root>

