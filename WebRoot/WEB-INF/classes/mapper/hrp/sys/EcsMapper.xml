<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.EcsMapper">

<select id="queryMatSupProdSpec" resultType="java.util.Map" parameterType="java.util.Map"> 
	select a.sid,
		   a.SPEC_ID,
	       a.prod_name,
	       a.fac_name,
	       a.chos_id,
	       a.prod_id,
	       a.csup_id,
	       a.prod_type_name1,
	       a.prod_type_name2,
	       a.prod_type_name3,
	       a.cert_code,
	       a.cert_batch,
	       a.start_date,
	       a.end_date,
	       case a.is_long
	         when 0 then
	          '否'
	         when 1 then
	          '是'
	       end as is_long,
	       a.alias1,
	       case a.origin_type
	         when 1 then
	          '国产'
	         when 2 then
	          '进口'
	       end as origin_type,
	       a.brand_name,
	       a.origin_name,
	       case a.is_cold
	         when 0 then
	          '否'
	         when 1 then
	          '是'
	       end as is_cold,
	       a.stora_term,
	       a.spec_name,
	       a.term_name,
	       a.spec_name_sec,
	       a.package,
	       case a.is_impl
	         when 0 then
	          '否'
	         when 1 then
	          '是'
	       end as is_impl,
	       a.receive_unit,
	       a.bar_code,
	       case a.check_state
	         when 2 then
	          '已完成'
	         when 3 then
	          '未通过'
	         else
	          '未审核'
	       end as check_state,
	       b.sup_code, 
	       b.sup_name,
	       a.sup_id,
	       a.tender_name,
	       a.bid_code,
	       a.price,
	       d.inv_code,
	       d.inv_id,
	       d.inv_no,
	       d.inv_name
	  from mat_sup_prod_spec a
	  left join hos_sup_dict b
	    on a.group_id = b.group_id
	   and a.hos_id = b.hos_id
	   and a.SUP_ID = b.sup_id
	   and b.is_stop = 0
	    left join MAT_SUP_PROD_SPEC_INV c
     on a.group_id = c.group_id
    and a.hos_id = c.hos_id
    and a.copy_code = c.copy_code
    and a.spec_id = c.spec_id
    left join mat_inv_dict d
    on c.group_id = d.group_id
    and c.hos_id = d.hos_id
    and c.inv_id = d.inv_id
    and d.is_stop = 0
	 where a.group_id = #{group_id}
	   and a.hos_id = #{hos_id}
	   and a.copy_code = #{copy_code}
	   <if test="prod_name !='' and prod_name !=null">
	   and a.prod_name like '%${prod_name}%'
	   </if>
	   <if test="spec_name !='' and spec_name !=null">
	   and a.spec_name like '%${spec_name}%'
	   </if>
	   <if test="prod_type_name1 !='' and prod_type_name1 !=null">
	   and a.prod_type_name1 = #{prod_type_name1}
	   </if>
	   <if test="bar_code !='' and bar_code !=null">
	   and a.bar_code = #{bar_code}
	   </if>
	   <if test="check_state !='' and check_state !=null">
	   and a.check_state = #{check_state}
	   </if>
	   <if test="is_impl !='' and is_impl !=null">
	   and a.is_impl = #{is_impl}
	   </if>
	   <if test="sup_id !='' and sup_id !=null">
	   and a.sup_id = #{sup_id}
	   </if>
</select>

	<insert id="addMatSupProdSpecInv" parameterType="java.util.Map">
	begin 
	delete mat_sup_prod_spec_inv
	where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}
		   and spec_id = #{spec_id};
		   
		insert into mat_sup_prod_spec_inv 
		(group_id,hos_id,copy_code,chos_id,csup_id,prod_id,spec_id,inv_id)
		values
		(#{group_id},#{hos_id},#{copy_code},#{chos_id},#{csup_id},#{prod_id},#{spec_id},#{inv_id});
		end;
	</insert>
	
	<update id="updateSupProdSpecStateById" parameterType="java.util.Map" >
		update mat_sup_prod_spec	
		set check_state = #{check_state},
			check_date =sysdate
		<if test="check_note != '' and check_note != null ">
			,check_note = #{check_note}
		</if>
		where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}
		   and sid = #{sid}
	</update>
	<select id="querySupProdSpecStateById" resultType="java.util.Map" parameterType="java.util.Map">
		select a.sid,
	       a.spec_id,
	       a.group_id,
	       a.hos_id,
	       a.chos_id,
	       a.copy_code,
	      a.sup_id,
	       a.csup_id,
	      a.prod_id,
	       a.prod_name,
	       a.fac_name,
	       a.prod_type_name1,
	       a.prod_type_name2,
	       a.prod_type_name3,
	       a.prod_type_name4,
	       a.cert_code,
	       a.cert_batch,
	       a.start_date,
	       a.end_date,
	        case a.is_long
	         when 0 then
	          '否'
	         when 1 then
	          '是'
	       end as is_long,
	       a.contents,
	       a.indications,
	       a.standard,
	       a.taboo,
	       a.alias1,
	        case a.origin_type
	         when 1 then
	          '国产'
	         when 2 then
	          '进口'
	       end as origin_type,
	       a.brand_name,
	       a.origin_name,
	        case a.is_cold
	         when 0 then
	          '否'
	         when 1 then
	          '是'
	       end as is_cold,
	       a.stora_term,
	       a.spec_name,
	       a.term_name,
	       a.spec_name_sec,
	       a.package,
	        case a.is_impl
	         when 0 then
	          '否'
	         when 1 then
	          '是'
	       end as is_impl,
	       a.receive_unit,
	       a.bar_code,
	       a.spell_code,
	       a.wbx_code,
         a.tender_name,
         a.bid_code,
         a.price,
         a.note,
         a.note1,
         a.note2,
         a.note3,
         a.note4,
         a.note5,
         a.check_state,
         a.check_date,
         a.check_note,
         b.inv_id,
         c.inv_name,
         d.sup_name
    from mat_sup_prod_spec a 
    left join MAT_SUP_PROD_SPEC_INV b
     on a.group_id = b.group_id
    and a.hos_id = b.hos_id
    and a.copy_code = b.copy_code
    and a.spec_id = b.spec_id
    left join mat_inv_dict c
    on b.group_id = c.group_id
    and b.hos_id = c.hos_id
    and b.inv_id = c.inv_id
    and c.is_stop = 0
    left join hos_sup_dict d
    on a.group_id = d.group_id
    and a.hos_id = d.hos_id
    and a.sup_id = d.sup_id
    and d.is_stop=0
	  where a.group_id = #{group_id,jdbcType=BIGINT}
	   and a.hos_id = #{hos_id,jdbcType=BIGINT}
	   and a.copy_code = #{copy_code,jdbcType=VARCHAR}
	   and a.sid = #{sid,jdbcType=BIGINT}
	
	</select>
	
	<select id="queryInvIdBySpecId" resultType="String" parameterType="java.util.Map">
	select inv_id  from MAT_SUP_PROD_SPEC_INV 
	where   where a.group_id = #{group_id}
	   and hos_id = #{hos_id} 
	   and copy_code = #{copy_code}
	   and spec_id = #{spec_id}
	</select> 
	
	<!-- 查询材料列表 -->
	<select id="queryMatInvList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.inv_id, a.inv_no, a.inv_code, 
			a.inv_name, a.inv_model, a.bid_code, a.plan_price, b.fac_name, d.cert_code, 
			case when d.cert_code is null then '' 
				else to_char(d.start_date, 'yyyy-MM-dd')||' 至 '||to_char(d.end_date, 'yyyy-MM-dd') 
			end cert_date, 
			case a.is_com when 1 then '是' else '否' end is_com
		FROM mat_inv_dict a 
		LEFT JOIN hos_fac_dict b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.fac_id = b.fac_id 
			AND a.fac_no = b.fac_no 
		LEFT JOIN (
			SELECT group_id, hos_id, copy_code, inv_id, max(cert_id) cert_id 
			FROM mat_inv_cert_rela 
			GROUP BY group_id, hos_id, copy_code, inv_id
		)c 
			ON a.group_id = c.group_id 
			AND a.hos_id = c.hos_id 
			AND a.copy_code = c.copy_code 
			AND a.inv_id = c.inv_id 
		LEFT JOIN mat_inv_cert d 
			ON a.group_id = d.group_id 
			AND a.hos_id = d.hos_id 
			AND a.copy_code = d.copy_code 
			AND c.cert_id = d.cert_id 
		LEFT JOIN mat_inv_sup e 
			ON a.group_id = e.group_id 
			AND a.hos_id = e.hos_id 
			AND a.copy_code = e.copy_code 
			AND a.inv_id = e.inv_id 
		WHERE a.group_id = #{group_id,jdbcType=BIGINT}
			AND a.hos_id = #{hos_id,jdbcType=BIGINT} 
			AND a.copy_code = #{copy_code,jdbcType=BIGINT} 
			AND a.is_stop = 0
			AND e.sup_id = #{sup_id,jdbcType=BIGINT}
			<if test="inv_name != null and inv_name != ''">
				AND (
					a.inv_code like '%${inv_name}%'
					OR 
					a.inv_name like '%${inv_name}%'
					OR 
					a.alias like '%${inv_name}%'
					OR 
					a.spell_code like '%${inv_name}%'
					OR 
					a.wbx_code like '%${inv_name}%'
				)
			</if>
			<if test="inv_model != null and inv_model != ''">
				AND a.inv_model = #{inv_model,jdbcType=VARCHAR}
			</if>
			<if test="fac_id != null and fac_id != ''">
				AND a.fac_id = #{fac_id,jdbcType=BIGINT}
			</if>
			<if test="bid_code != null and bid_code != ''">
				AND a.bid_code = #{bid_code,jdbcType=VARCHAR}
			</if>
	</select> 
	
	<!-- 根据证件号和供应商ID获取证件ID如没取到值则证件不存在 -->
	<select id="queryMatCertIdByEcs" resultType="String" parameterType="java.util.Map">
		SELECT cert_id 
		FROM mat_inv_cert 
		WHERE group_id = #{group_id,jdbcType=BIGINT}
			AND hos_id = #{hos_id,jdbcType=BIGINT}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND cert_code = #{cert_code,jdbcType=VARCHAR}
			AND fac_id = #{fac_id,jdbcType=BIGINT}
			AND sup_id = #{sup_id,jdbcType=BIGINT}
	</select>
	
	<!-- 获取证件自增序列 -->
	<select id="queryMatInvCertSeq" resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MAT_INV_CERT_SEQ.nextval as cert_id FROM DUAL
	</select>
	
	<!-- 获取证件类别 -->
	<select id="queryMatInvCertTypeID" resultType="java.lang.Long" parameterType="java.util.Map">
		SELECT min(type_id) 
		FROM mat_inv_cert_type 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
		
	<!-- 新增材料证件表 -->
	<insert id="addMatInvCertByEcs" parameterType="java.util.Map">
		INSERT INTO mat_inv_cert(
			group_id, hos_id, copy_code, cert_id, cert_code, type_id, fac_id, cert_date, issuing_authority, 
			start_date, end_date, cert_state, cert_inv_name, state, sup_id, create_user
		)
		VALUES(
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER}, 
			#{copy_code,jdbcType=VARCHAR}, 
			#{cert_id,jdbcType=INTEGER}, 
			#{cert_code,jdbcType=VARCHAR}, 
			#{type_id,jdbcType=INTEGER}, 
			#{fac_id,jdbcType=INTEGER}, 
			#{start_date,jdbcType=DATE}, 
			#{package,jdbcType=VARCHAR}, 
			#{start_date,jdbcType=DATE}, 
			#{end_date,jdbcType=DATE}, 
			0, 
			#{inv_name,jdbcType=VARCHAR}, 
			1, 
			#{sup_id,jdbcType=INTEGER}, 
			#{user_id,jdbcType=INTEGER} 
		)
	</insert>
	
	<!-- 新增材料与证件对应关系表 -->
	<insert id="addMatInvCertRelaByEcs" parameterType="java.util.Map">
		INSERT INTO mat_inv_cert_rela(
			group_id, hos_id, copy_code, cert_id, inv_id, cert_code
		)
		VALUES(
			#{group_id,jdbcType=INTEGER}, 
			#{hos_id,jdbcType=INTEGER}, 
			#{copy_code,jdbcType=VARCHAR}, 
			#{cert_id,jdbcType=INTEGER}, 
			#{inv_id,jdbcType=INTEGER}, 
			#{cert_code,jdbcType=VARCHAR} 
		)
	</insert>
	
	<!-- 查询送货单列表 -->
	<select id="queryMatDeliveryList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.delivery_id, a.delivery_no, a.create_date, 
			CASE a.come_from WHEN 1 THEN '订单生成' ELSE '手工录入' END come_from, 
			CASE a.bill_type WHEN '1' THEN '普通单据' ELSE '代销单据' END bill_type, 
			CASE a.state WHEN 0 THEN '待签收' WHEN 1 THEN '已签收' WHEN 2 THEN '已作废' ELSE '未知' END state, 
			a.sup_id, b.sup_no, b.sup_code, b.sup_name, a.bill_no, a.bill_date, a.delivery_address, a.note,
			CASE WHEN c.in_amount	IS NULL THEN '未入库' WHEN c.in_amount &lt; dlv_amount THEN '部分入库' ELSE '已入库' END in_state 
		FROM sup_delivery_main a
		LEFT JOIN hos_sup_dict b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.sup_id = b.sup_id 
			AND b.is_stop = 0
		LEFT JOIN (
			SELECT dlv_id, sum(dlv_amount) dlv_amount, sum(in_amount) in_amount
			FROM (
				SELECT dlv_id, dlv_detail_id, dlv_amount, sum(in_amount) in_amount
				FROM sup_dlv_in_rela 
				WHERE group_id = #{group_id,jdbcType=BIGINT}
					AND hos_id = #{hos_id,jdbcType=BIGINT}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
				GROUP BY dlv_id, dlv_detail_id, dlv_amount
			)tmp
			GROUP BY dlv_id
		) c 
			ON a.delivery_id = c.dlv_id 
		WHERE a.group_id = #{group_id,jdbcType=BIGINT}
			AND a.hos_id = #{hos_id,jdbcType=BIGINT}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_date != null and begin_date != ''">
				AND a.create_date &gt;= #{begin_date,jdbcType=DATE}
			</if>
			<if test="end_date != null and end_date != ''">
				AND a.create_date &lt;= #{end_date,jdbcType=DATE}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND a.sup_id = #{sup_id,jdbcType=BIGINT}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="come_from != null and come_from != ''">
				AND a.come_from = #{come_from,jdbcType=INTEGER}
			</if>
			<if test="bill_type != null and bill_type != ''">
				AND a.bill_type = #{bill_type,jdbcType=INTEGER}
			</if>
			<if test="delivery_no != null and delivery_no != ''">
				AND a.delivery_no IN (${delivery_no})
			</if>
			<if test="in_state != null and in_state != ''">
				<if test="in_state == 1">
					AND c.in_amount is null 
				</if>
				<if test="in_state == 2">
					AND c.in_amount &lt; c.dlv_amount 
				</if>
				<if test="in_state == 3">
					AND c.in_amount = c.dlv_amount 
				</if>
			</if>
		ORDER BY delivery_no desc
	</select>
	
	<!-- 精准查询 送货单主表 -->
	<select id="queryMatDeliveryMainByCode" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT group_id, hos_id, copy_code, delivery_id, delivery_no, create_date, come_from, 
			bill_type, state, sup_id, sup_no, bill_no, bill_date, delivery_address, note
		FROM sup_delivery_main
		WHERE group_id = #{group_id,jdbcType=BIGINT}
			AND hos_id = #{hos_id,jdbcType=BIGINT}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND delivery_id =	#{delivery_id,jdbcType=BIGINT} 
	</select>
	
	<!-- 精准查询 送货单明细 -->
	<select id="queryMatDeliveryDetailByCode" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.delivery_id, a.detail_id, a.inv_id, a.inv_no, 
			b.inv_code, b.inv_name, b.inv_model, c.fac_name, d.unit_name, a.amount dlv_amount, a.price, 
			a.amount_money, a.bar_code, a.batch_no, a.fac_date, a.inva_date, a.disinfect_no, 
			a.disinfect_date, a.serial_no, case b.is_com when 1 then '是' else '否' end is_com, 
			b.bid_code, a.note, nvl(e.in_amount, 0) in_amount, a.amount - nvl(e.in_amount, 0) amount, 
			#{delivery_id,jdbcType=BIGINT} delivery_id
		FROM sup_delivery_detail a 
		LEFT JOIN mat_inv_dict b  
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.inv_id = b.inv_id 
			AND b.is_stop = 0 
		LEFT JOIN hos_fac_dict c 
			ON b.group_id = c.group_id 
			AND b.hos_id = c.hos_id 
			AND b.fac_id = c.fac_id 
			AND c.is_stop = 0 
		LEFT JOIN hos_unit d 
			ON b.group_id = d.group_id 
			AND b.hos_id = d.hos_id 
			AND b.unit_code = d.unit_code 
		LEFT JOIN (
			SELECT dlv_id, dlv_detail_id, sum(in_amount) in_amount
			FROM sup_dlv_in_rela
			WHERE group_id = #{group_id,jdbcType=BIGINT}
				AND hos_id = #{hos_id,jdbcType=BIGINT}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			GROUP BY dlv_id, dlv_detail_id
		) e
			ON a.delivery_id = e.dlv_id 
			AND a.detail_id = e.dlv_detail_id 
		WHERE a.group_id = #{group_id,jdbcType=BIGINT}
			AND a.hos_id = #{hos_id,jdbcType=BIGINT}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.delivery_id =	#{delivery_id,jdbcType=BIGINT} 
	</select>
	
	<!-- 签收/作废送货单 -->
	<update id="updateMatDeliveryState">
		UPDATE sup_delivery_main 
		SET 
			state = #{state,jdbcType=INTEGER}
		WHERE group_id = #{group_id,jdbcType=BIGINT}
			AND hos_id = #{hos_id,jdbcType=BIGINT}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND delivery_id IN (${delivery_id}) 
	</update>
	
	<!-- 添加送货单入库单对应关系 -->
	<insert id="addDlvInRela" parameterType="java.util.List">
		INSERT INTO sup_dlv_in_rela (
			group_id, hos_id, copy_code, dlv_id, dlv_detail_id, dlv_amount, in_id, in_detail_id, in_amount
		) SELECT * FROM (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			SELECT 
				#{item.group_id,jdbcType=BIGINT} group_id,
				#{item.hos_id,jdbcType=BIGINT} hos_id,
				#{item.copy_code,jdbcType=VARCHAR} copy_code,
				#{item.dlv_id,jdbcType=BIGINT} dlv_id,
				#{item.dlv_detail_id,jdbcType=BIGINT} dlv_detail_id,
				#{item.dlv_amount,jdbcType=NUMERIC} dlv_amount,
				#{item.in_id,jdbcType=BIGINT} in_id,
				#{item.in_detail_id,jdbcType=BIGINT} in_detail_id,
				#{item.in_amount,jdbcType=NUMERIC} in_amount
			FROM DUAL
		</foreach>
		) tmp
	</insert>
	
	<!-- 删除送货单入库单对应关系 -->
	<delete id="deleteDlvInRela" parameterType="java.util.Map">
		DELETE FROM sup_dlv_in_rela 
		WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</delete>
</mapper>