<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.EmpMapper">
 
	<resultMap id="emp" type="com.chd.hrp.sys.entity.Emp">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="emp_id" column="emp_id"/>
        <result property="emp_no" column="emp_no"/>
        <result property="emp_code" column="emp_code"/>
        <result property="emp_name" column="emp_name"/>
        <result property="dept_no" column="dept_no"/>
        <result property="dept_id" column="dept_id"/>
        <result property="dept_name" column="dept_name"/>
        <result property="dept_code" column="dept_code"/>
        <result property="kind_code" column="kind_code"/>
        <result property="kind_name" column="kind_name"/>
        <result property="sort_code" column="sort_code"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
        <result property="is_stop" column="is_stop"/>
        <result property="note" column="note"/>
        <result property="is_disable" column="is_disable"/>
	</resultMap>
	
    <insert id="addEmp" useGeneratedKeys="true" >
    
        INSERT INTO HOS_EMP (
                    group_id
			 ,
                    hos_id
			 ,
                    emp_id
			 ,
                    emp_code
			 ,
                    emp_name
			 ,
                    dept_no
			 ,
                    dept_id
			 ,
                    kind_code
			 ,
                    sort_code
			 ,
                    spell_code
			 ,
                    wbx_code
			 ,
                    is_stop
			 ,
                    note
			 
        ) VALUES (
#{group_id}			 ,
#{hos_id}			 ,
HOS_EMP_SEQ.nextval			 ,
#{emp_code}			 ,
#{emp_name}			 ,
#{dept_no}			 ,
#{dept_id}			 ,
#{kind_code}			 ,
#{sort_code}			 ,
#{spell_code}			 ,
#{wbx_code}			 ,
#{is_stop}			 ,
#{note}			 
        )
    
    </insert>
     <select id="queryCurrentSequence" resultType="java.lang.Long"  useCache="false">
		select HOS_EMP_SEQ.currval emp_id from dual
	</select>
	<insert id="addBatchEmp" parameterType="java.util.List" >
    
        INSERT INTO HOS_EMP (
                    emp_id
             ,
                    group_id
			 ,
                    hos_id
			 ,
                    emp_code
			 ,
                    emp_name
			 ,
                    dept_no
			 ,
                    dept_id
			 ,
                    kind_code
			 ,
                    sort_code
			 ,
                    spell_code
			 ,
                    wbx_code
			 ,
                    is_stop
			 ,
                    note
			 
        ) 
         select  HOS_EMP_SEQ.nextval , t.* from(
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		
#{item.group_id,jdbcType=INTEGER}			 ,
#{item.hos_id,jdbcType=INTEGER}			 ,
#{item.emp_code,jdbcType=VARCHAR}			 ,
#{item.emp_name,jdbcType=VARCHAR}			 ,
#{item.dept_no,jdbcType=INTEGER}			 ,
#{item.dept_id,jdbcType=INTEGER}			 ,
#{item.kind_code,jdbcType=INTEGER}			 ,
#{item.sort_code,jdbcType=INTEGER}			 ,
#{item.spell_code,jdbcType=VARCHAR}			 ,
#{item.wbx_code,jdbcType=VARCHAR}			 ,
#{item.is_stop,jdbcType=INTEGER}			 ,
#{item.note,jdbcType=VARCHAR}			 
		 from dual 
		</foreach>
    ) t 
    </insert>

	<update id="updateEmp" parameterType="java.util.Map">
    
        UPDATE hos_emp SET
			 emp_name = #{emp_name}
			 ,
			 dept_no = #{dept_no}
			 ,
			 emp_code = #{emp_code}
			 ,
			 dept_id = #{dept_id}
			 ,
			 kind_code = #{kind_code}
			 ,
			 sort_code = #{sort_code}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code} 
			 ,
			 is_stop = #{is_disable} <!-- _dict 的 is_disable 与不带_dict 的 is_stop 一个含义  -->
			 ,
			 note = #{note}
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 emp_id = #{emp_id}
			 
   
	</update>
	
	<update id="updateEmpName" parameterType="java.util.Map">
    
        UPDATE hos_emp SET
			 emp_name = #{emp_name}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 emp_id = #{emp_id}
			 
   
	</update>
	
	<update id="updateEmpCode" parameterType="java.util.Map">
    
        UPDATE hos_emp SET
			 emp_code = #{emp_code}
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 emp_id = #{emp_id}
   
	</update>
	
	<update id="updateBatchEmp" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE hos_emp SET
			 emp_name = #{emp_name}
			 ,
			 dept_no = #{dept_no}
			 ,
			 dept_id = #{dept_id}
			 ,
			 kind_code = #{kind_code}
			 ,
			 sort_code = #{sort_code}
			 ,
			 spell_code = #{spell_code}
			 ,
			 wbx_code = #{wbx_code}
			 ,
			 is_stop = #{is_stop}
			 ,
			 note = #{note}
			 
        WHERE 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 emp_id = #{item.emp_id}
			 
    </foreach>
	</update>

    <delete id="deleteEmp" parameterType="java.util.Map">
   
        DELETE FROM hos_emp WHERE
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        emp_id = #{emp_id}  
   
    </delete>
    <delete id="deleteBatchEmp" parameterType="java.util.List">
        DELETE FROM hos_emp WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 emp_id = #{item.emp_id}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryEmpByCode" resultType="com.chd.hrp.sys.entity.Emp" parameterType="string" >
	  
        SELECT 
            he.group_id,
            he.hos_id,
            he.emp_id,
            he.emp_no,
            he.emp_code,
            he.emp_name,
            hdd.dept_name,
            hdd.dept_code,
            he.dept_id,
            he.dept_no,
            he.kind_code,
            hek.kind_name,
            he.sort_code,
            he.spell_code,
            he.wbx_code,
            he.is_stop,
            he.is_disable,
            he.note
		FROM hos_emp_dict he 
			left join HOS_EMP_KIND hek  ON
			 	he.kind_code = hek.kind_code and
	        	he.group_id = hek.group_id and
	        	he.hos_id = hek.hos_id and hek.is_stop=0
	        left join HOS_DEPT_DICT hdd  ON
	        	he.dept_no = hdd.dept_no and
	        	he.dept_id = hdd.dept_id and
	        	he.group_id = hdd.group_id and
	        	he.hos_id = hdd.hos_id
	        <where>
	        	<!-- he.is_disable = 0 and he.is_stop = 0 -->
	        	<if test="group_id != null and group_id != '' ">
	        		and  he.group_id = #{group_id}
	        	</if>
	        	<if test="hos_id != null and hos_id != '' ">
	        		and  he.hos_id = #{hos_id}
	        	</if>
	        	<if test="emp_id != null and emp_id != '' ">
	        		and  he.emp_id = #{emp_id}
	        	</if>
	        <!-- 	<if test="emp_no != null and emp_no != '' ">
	        		and  he.emp_no = #{emp_no}
	        	</if> -->
	        	<if test="emp_code != null and emp_code != '' ">
	        		and  he.emp_code = #{emp_code}
	        	</if>
	        	and he.is_stop=0
	        </where>
	</select>
	<select id="queryEmp" parameterType="java.util.Map" resultMap="emp" >
		SELECT he.group_id,
			   he.hos_id,
			   he.emp_id,
			   he.emp_code,
			   he.emp_name,
			   he.dept_id,
			   hd.dept_name,
			   he.kind_code,
               hek.kind_name, 
               he.sort_code,
               he.spell_code,
               he.wbx_code,
               he.is_stop,
               he.note
        FROM hos_emp_dict he 
        left join HOS_EMP_KIND hek 
        	   ON he.group_id = hek.group_id 
        	  and he.hos_id = hek.hos_id
        	  and he.kind_code = hek.kind_code
        left join hos_dept_dict hd 
        	   on he.group_id=hd.group_id 
        	  and he.hos_id=hd.hos_id 
        	  and he.dept_id=hd.dept_id 
        	  and he.dept_no=hd.dept_no
		<where>                     
		    AND he.group_id = #{group_id}
            AND he.hos_id = #{hos_id}
			<if test="emp_id != null and emp_id != ''">
                AND he.emp_id = #{emp_id}
			</if>
			<if test="emp_code != null and emp_code != ''">
			    AND (
			        he.emp_code like '%${emp_code}%' or 
			        he.emp_name like '%${emp_code}%' or 
			        he.spell_code like '%${emp_code}%' or 
			        he.wbx_code like '%${emp_code}%'
                )
			</if>
			<if test="emp_name != null and emp_name != ''">
                AND he.emp_name = #{emp_name}
			</if>
			<if test="dept_no != null and dept_no != ''">
                AND he.dept_no = #{dept_no}
            </if>
			<if test="dept_id != null and dept_id != ''">
                AND he.dept_id = #{dept_id}
            </if>
			<if test="kind_code != null and kind_code != ''">
                AND he.kind_code = #{kind_code}
            </if>
			<if test="sort_code != null and sort_code != ''">
                AND he.sort_code = #{sort_code}
            </if>
			<if test="spell_code != null and spell_code != ''">
                AND he.spell_code = #{spell_code}
            </if>
			<if test="wbx_code != null and wbx_code != ''">
                AND he.wbx_code = #{wbx_code}
            </if>
			<if test="is_stop != null and is_stop != ''">
                AND he.is_stop = #{is_stop, jdbcType=INTEGER}
            </if>
			<if test="note != null and note != ''">
                AND he.note = #{note}
            </if>
        </where>   
		order by he.emp_code asc
    </select>
    
    <select id="queryMaxEmp_sort" parameterType="java.util.Map" resultMap="emp">
    	
    	select Max(sort_code)  as sort_code
    	
    	from HOS_EMP
    	
    	<where>
    		<if test="group_id != null and group_id != '' ">
    			and group_id = #{group_id}
    		</if>
    		<if test="hos_id != null and hos_id != '' ">
    			and hos_id = #{hos_id}
    		</if>
    	</where>
    </select>
	
	  <select id="queryEmp_sort" parameterType="java.util.Map" resultMap="emp">
    	
    	select sort_code
    	
    	from HOS_EMP
    	
    	<where>
    		<if test="group_id != null and group_id != '' ">
    			and group_id = #{group_id}
    		</if>
    		<if test="hos_id != null and hos_id != '' ">
    			and hos_id = #{hos_id}
    		</if>
    		<if test="emp_id != null and emp_id != '' ">
    			and emp_id != #{emp_id}
    		</if>
    		<if test="sort_code != null and sort_code != '' ">
    			and sort_code = #{sort_code}
    		</if>
    	</where>
    </select>
    
     <select id="queryEmpById" resultType="com.chd.hrp.sys.entity.Emp" parameterType="java.util.Map" >
	  
        SELECT 
            he.group_id,
            he.hos_id,
            he.emp_id,
            he.emp_code,
            he.emp_name,
            he.dept_no,
            hdd.dept_name,
            he.dept_id,
            he.kind_code,
            hek.kind_name,
            he.sort_code,
            he.spell_code,
            he.wbx_code,
            he.is_stop,
            he.note
		FROM hos_emp he
			left join HOS_EMP_KIND hek  ON
			 	he.kind_code = hek.kind_code and
	        	he.group_id = hek.group_id and
	        	he.hos_id = hek.hos_id
	        left join HOS_DEPT_DICT hdd  ON
	        	he.dept_no = hdd.dept_no and
	        	he.dept_id = hdd.dept_id and
	        	he.group_id = hdd.group_id and
	        	he.hos_id = hdd.hos_id
	        <where>
	        	<if test="group_id != null and group_id != '' ">
	        		and  he.group_id = #{group_id}
	        	</if>
	        	<if test="hos_id != null and hos_id != '' ">
	        		and  he.hos_id = #{hos_id}
	        	</if>
	        	<if test="emp_id != null and emp_id != '' ">
	        		and  he.emp_id != #{emp_id}
	        	</if>
	        	<if test="emp_code != null and emp_code != '' ">
	        		and  he.emp_code = #{emp_code}
	        	</if>
	        </where>
	</select>
	
	<!-- 查询序列 -->
	<select id="queryEmpSeqNextVal" resultType="Integer" flushCache="true">
		SELECT hos_emp_seq.NEXTVAL FROM DUAL
	</select>
	
	<insert id="addBatchHosEmp" parameterType="java.util.List">

		INSERT INTO hos_emp (
					emp_id
             ,
                    group_id
			 ,
                    hos_id
			 ,
                    emp_code
			 ,
                    emp_name
			 ,
                    dept_no
			 ,
                    dept_id
			 ,
                    kind_code
			 ,
                    sort_code
			 ,
                    spell_code
			 ,
                    wbx_code
			 ,
                    is_stop
			 ,
                    note

		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
				#{item.emp_id,jdbcType=INTEGER}			 ,
				#{item.group_id,jdbcType=INTEGER}			 ,
				#{item.hos_id,jdbcType=INTEGER}			 ,
				#{item.emp_code,jdbcType=VARCHAR}			 ,
				#{item.emp_name,jdbcType=VARCHAR}			 ,
				#{item.dept_no,jdbcType=INTEGER}			 ,
				#{item.dept_id,jdbcType=INTEGER}			 ,
				#{item.kind_code,jdbcType=INTEGER}			 ,
				#{item.sort_code,jdbcType=INTEGER}			 ,
				#{item.spell_code,jdbcType=VARCHAR}			 ,
				#{item.wbx_code,jdbcType=VARCHAR}			 ,
				#{item.is_stop,jdbcType=INTEGER}			 ,
				#{item.note,jdbcType=VARCHAR}			 
			from dual
		</foreach>
	</insert>
	
	<insert id="addEmpChange" useGeneratedKeys="true" >
    
        INSERT INTO HOS_EMP_CHANGE (
                    group_id
			 ,
                    hos_id
			 ,
                    emp_id
			 ,
                    REMARK
             ,
                    create_date
			 
        ) VALUES (
		#{group_id}			 ,
		#{hos_id}			 ,
		#{emp_id}			 ,
		#{remark}			 ,
		to_date(#{create_date,jdbcType=DATE},'yyyy-MM-dd')	 
        )
     
    </insert>
	
	<select id="queryEmpChangeRemark" resultType="com.chd.hrp.sys.entity.Emp"  parameterType="java.util.Map">
	
		select he.emp_code,he.emp_name,hec.remark as note from HOS_EMP_CHANGE hec
		left join hos_emp he on hec.group_id= he.group_id
		and hec.hos_id= he.hos_id and hec.emp_id= he.emp_id
       <where>
      		<if test="group_id != null and group_id != ''">
				 hec.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hec.hos_id = #{hos_id}
			</if>
			 <if test="create_date != null and create_date != ''">
                    AND hec.create_date = #{create_date}
             </if> 
             <if test="remark != null and remark != ''">
                    AND hec.remark like '%${remark}%'
             </if> 
       </where>
	</select>
</mapper>

