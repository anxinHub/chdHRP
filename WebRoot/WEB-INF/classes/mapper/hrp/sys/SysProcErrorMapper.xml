<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.SysProcErrorMapper">
  <resultMap id="BaseResultMap" type="com.chd.hrp.sys.entity.SysProcError">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    <id column="SQL_ID" jdbcType="VARCHAR" property="sqlId" />
    <result column="MOD_CODE" jdbcType="VARCHAR" property="modCode" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="NOTE" jdbcType="VARCHAR" property="note" />
    <result column="FILE_PATH" jdbcType="VARCHAR" property="filePath" />
    <result column="ERROR" jdbcType="VARCHAR" property="error" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    SQL_ID, MOD_CODE, "TYPE", "NOTE", FILE_PATH, "ERROR"
  </sql>
  <select id="selectByExample" parameterType="com.chd.hrp.sys.entity.SysProcErrorExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_PROC_ERROR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from SYS_PROC_ERROR
    where SQL_ID = #{sqlId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    delete from SYS_PROC_ERROR
    where SQL_ID = #{sqlId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.chd.hrp.sys.entity.SysProcErrorExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    delete from SYS_PROC_ERROR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chd.hrp.sys.entity.SysProcError">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    insert into SYS_PROC_ERROR ("SQL_ID", "MOD_CODE", "TYPE", 
      "NOTE", "FILE_PATH", "ERROR"
      )
    values (#{sqlId,jdbcType=VARCHAR}, #{modCode,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, #{error,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chd.hrp.sys.entity.SysProcError">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    insert into SYS_PROC_ERROR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sqlId != null">
        SQL_ID,
      </if>
      <if test="modCode != null">
        MOD_CODE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="note != null">
        NOTE,
      </if>
      <if test="filePath != null">
        FILE_PATH,
      </if>
      <if test="error != null">
        ERROR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sqlId != null">
        #{sqlId,jdbcType=VARCHAR},
      </if>
      <if test="modCode != null">
        #{modCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="error != null">
        #{error,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chd.hrp.sys.entity.SysProcErrorExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    select count(*) from SYS_PROC_ERROR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    update SYS_PROC_ERROR
    <set>
      <if test="record.sqlId != null">
        SQL_ID = #{record.sqlId,jdbcType=VARCHAR},
      </if>
      <if test="record.modCode != null">
        MOD_CODE = #{record.modCode,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.error != null">
        ERROR = #{record.error,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    update SYS_PROC_ERROR
    set SQL_ID = #{record.sqlId,jdbcType=VARCHAR},
      MOD_CODE = #{record.modCode,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      NOTE = #{record.note,jdbcType=VARCHAR},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      ERROR = #{record.error,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chd.hrp.sys.entity.SysProcError">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    update SYS_PROC_ERROR
    <set>
      <if test="modCode != null">
        MOD_CODE = #{modCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="error != null">
        ERROR = #{error,jdbcType=VARCHAR},
      </if>
    </set>
    where SQL_ID = #{sqlId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chd.hrp.sys.entity.SysProcError">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 11 15:54:39 CST 2018.
    -->
    update SYS_PROC_ERROR
    set MOD_CODE = #{modCode,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      NOTE = #{note,jdbcType=VARCHAR},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      ERROR = #{error,jdbcType=VARCHAR}
    where SQL_ID = #{sqlId,jdbcType=VARCHAR}
  </update>
  
  <!-- 编译存储过程，函数、视图、包头、包体、索引、触发器 -->
   <update id="updateErrorCompile" parameterType="java.util.Map">
   <![CDATA[
   declare  
	  str_sql varchar2(4000);
	  v_count number;
	begin
	 
	   --编译失效存储过程
	  for invalid_procedures in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'PROCEDURE')
	  loop
	    str_sql := 'alter procedure ' ||invalid_procedures.object_name || ' compile';
	    begin
	      execute immediate str_sql;
	      delete from SYS_PROC_ERROR where sql_id=invalid_procedures.object_name;
	    exception
	      When Others Then
	      begin        
	        /*dbms_output.put_line(sqlerrm);*/
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_procedures.object_name;
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR
	               where sql_id=invalid_procedures.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_procedures.object_name,'compile','proc','存储过程','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	        
	      end;
	    end;
	  end loop;
	  
	  --编译失效函数
	  for invalid_functions in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'FUNCTION')
	  loop
	    str_sql := 'alter function ' ||invalid_functions.object_name || ' compile';
	    begin
	      execute immediate str_sql;
	      delete from SYS_PROC_ERROR where sql_id=invalid_functions.object_name;
	    exception
	      When Others Then
	      begin
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_functions.object_name;
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR
	               where sql_id=invalid_functions.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_functions.object_name,'compile','fun','函数','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	      end;
	    end;
	  end loop;
	
	  --编译失效包头
	  for invalid_packages in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'PACKAGE')
	  loop
	    str_sql := 'alter package ' ||invalid_packages.object_name || ' compile';
	    begin
	      execute immediate str_sql;
	      delete from SYS_PROC_ERROR where sql_id=invalid_packages.object_name;
	    exception
	      When Others Then
	      begin
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_packages.object_name;
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR 
	               where sql_id=invalid_packages.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_packages.object_name,'compile','pack','包头','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	      end;
	    end;
	  end loop;
	  
	   --编译失效包体
	  for invalid_packages_body in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'PACKAGE BODY')
	  loop
	    str_sql := 'alter PACKAGE BODY ' ||invalid_packages_body.object_name || ' compile';
	    begin
	      execute immediate str_sql;
	      delete from SYS_PROC_ERROR where sql_id=invalid_packages_body.object_name;
	    exception
	      When Others Then
	      begin
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_packages_body.object_name||'_BODY';
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR
	               where sql_id=invalid_packages_body.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_packages_body.object_name||'_BODY','compile','pack body','包体','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	      end;
	    end;
	  end loop;
	  
	  --编译失效类型
	  for invalid_types in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'TYPE')
	  loop
	    str_sql := 'alter type ' ||invalid_types.object_name || ' compile';
	    begin
	      execute immediate str_sql;
	      delete from SYS_PROC_ERROR where sql_id=invalid_types.object_name;
	    exception
	      When Others Then
	      begin
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_types.object_name;
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR
	               where sql_id=invalid_types.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_types.object_name,'compile','type','类型','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	      end;
	    end;
	  end loop;
	
	  --编译失效索引
	  for invalid_indexs in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'INDEX')
	  loop
	    str_sql := 'alter index ' ||invalid_indexs.object_name || ' rebuild';
	    begin
	      execute immediate str_sql;
	      delete from SYS_PROC_ERROR where sql_id=invalid_indexs.object_name;
	    exception
	      When Others Then
	      begin
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_indexs.object_name;
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR
	               where sql_id=invalid_indexs.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_indexs.object_name,'compile','index','索引','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	      end;
	    end;
	  end loop;
	
	  --编译失效触发器
	  for invalid_triggers in (select object_name from user_objects
	    where status = 'INVALID' and object_type = 'TRIGGER')
	  loop
	    str_sql := 'alter trigger ' ||invalid_triggers.object_name || ' compile';
	    delete from SYS_PROC_ERROR where sql_id=invalid_triggers.object_name;
	    begin
	      execute immediate str_sql;
	    exception
	      When Others Then
	      begin
	        select count(1) into v_count from SYS_PROC_ERROR where sql_id=invalid_triggers.object_name;
	        if(v_count>0) then
	               update SYS_PROC_ERROR set error='['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败],'||ERROR
	               where sql_id=invalid_triggers.object_name;
	        else
	               insert into SYS_PROC_ERROR (SQL_ID, MOD_CODE, TYPE, "NOTE", FILE_PATH, ERROR)
	               values(invalid_triggers.object_name,'compile','trigger','触发器','后台插入',
	               '['||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')||'编译失败]');
	        end if;
	      end;
	    end;
	  end loop;
	  
	end;
   		 
   ]]> 
   </update> 
   
	 
  
</mapper>