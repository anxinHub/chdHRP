<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.StoreMapper">

	<resultMap id="store" type="com.chd.hrp.sys.entity.Store">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="store_id" column="store_id" />
		<result property="store_code" column="store_code" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="sort_code" column="sort_code" />
		<result property="store_name" column="store_name" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="is_stop" column="is_stop" />
		<result property="is_mat" column="is_mat" />
		<result property="is_ass" column="is_ass" />
		<result property="is_med" column="is_med" />
		<result property="is_sup" column="is_sup" />
		<result property="note" column="note" />
	</resultMap>

	<insert id="addStore" useGeneratedKeys="true">

		INSERT INTO HOS_STORE (
		group_id
		,
		hos_id
		,
		store_id
		,
		store_code
		,
		type_code
		,
		store_name
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		is_mat,
		is_ass,
		is_med,
		is_sup,
		note

		) VALUES (
		#{group_id} ,
		#{hos_id} ,
		HOS_STORE_SEQ.nextval ,
		#{store_code} ,
		#{type_code} ,
		#{store_name} ,
		#{sort_code} ,
		#{spell_code} ,
		#{wbx_code} ,
		#{is_stop} ,
		#{is_mat} ,
		#{is_ass} ,
		#{is_med} ,
		#{is_sup} ,
		#{note}
		)

	</insert>
	<select id="queryCurrentSequence" resultType="java.lang.Long">
		select
		HOS_STORE_SEQ.currval store_id from dual
	</select>
	<insert id="addBatchStore" parameterType="java.util.List">

		INSERT INTO HOS_STORE (
		
		store_id
		,
		group_id
		,
		hos_id
		,
		store_code
		,
		type_code
		,
		store_name
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		note

		)  select HOS_STORE_SEQ.nextval ,  t.* from 
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.store_code} ,
			#{item.type_code} ,
			#{item.store_name} ,
			#{item.sort_code} ,
			#{item.spell_code} ,
			#{item.wbx_code} ,
			#{item.is_stop} ,
			#{item.note}
			from dual
		</foreach>
		) t
	</insert>

	<update id="updateStore" parameterType="java.util.Map">

		UPDATE hos_store SET
		type_code = #{type_code}
		,
		store_code = #{store_code}
		,
		store_name = #{store_name}
		,
		sort_code = #{sort_code}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		,
		is_stop = #{is_stop}
		,
		is_mat = #{is_mat}
		,
		is_ass = #{is_ass}
		,
		is_med = #{is_med}
		,
		is_sup = #{is_sup}
		,
		note = #{note}

		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		store_id = #{store_id}
	</update>
	
	<update id="updateStoreByName" parameterType="java.util.Map">

		UPDATE hos_store SET
		store_name = #{store_name}
	
		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		store_id = #{store_id}


	</update>
	
	<update id="updateStoreByCode" parameterType="java.util.Map">

		UPDATE hos_store SET
		store_code = #{store_code}
		WHERE
		group_id = #{group_id}
		and
		hos_id = #{hos_id}
		and
		store_id = #{store_id}

	</update>
	<update id="updateBatchStore" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE hos_store SET
			type_code = #{type_code}
			,
			store_name = #{store_name}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
			,
			is_stop = #{is_stop}
			,
			note = #{note}

			WHERE
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			store_id = #{item.store_id}
			and
			store_code = #{item.store_code}

		</foreach>
	</update>

	<delete id="deleteStore" parameterType="java.util.Map">

		DELETE FROM hos_store WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		store_id = #{store_id} and
		store_code = #{store_code}

	</delete>
	<delete id="deleteBatchStore" parameterType="java.util.List">
		DELETE FROM hos_store WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			and
			store_id = #{item.store_id,jdbcType=INTEGER}
			and
			store_code = #{item.store_code,jdbcType=VARCHAR}

		</foreach>
	</delete>

	<select id="queryStoreByCode" resultType="com.chd.hrp.sys.entity.Store"
		parameterType="string">

		SELECT
		hs.group_id,
		hs.hos_id,
		hs.store_id,
		hs.store_code,
		hs.type_code,
		hst.type_name,
		hs.store_name,
		hs.sort_code,
		hs.spell_code,
		hs.wbx_code,
		hs.is_stop,
		hs.note,
		hs.is_mat,
		hs.is_med,
		hs.is_ass,
		hs.is_sup
		FROM hos_store hs left join HOS_STORE_TYPE hst
		ON
			hs.type_code = hst.type_code and
			hs.group_id = hst.group_id and
			hs.hos_id = hst.hos_id
		<where>
			<if test="group_id != null and group__id != ''">
				and hs.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hs.hos_id = #{hos_id}
			</if>
			<if test="store_code != null and store_code != ''">
				and hs.store_code = #{store_code}
			</if>
		</where>
	</select>
	<select id="queryStore" parameterType="java.util.Map" resultMap="store">

		SELECT
		hs.group_id,
		hs.hos_id,
		hs.store_id,
		hs.store_code,
		hs.type_code,
		hst.type_name,
		hs.store_name,
		hs.spell_code,
		hs.wbx_code,
		hs.is_stop,
		hs.note
		FROM HOS_STORE hs left join HOS_STORE_TYPE hst
			ON 
				hs.type_code = hst.type_code and
				hs.group_id = hst.group_id and
				hs.hos_id = hst.hos_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND hs.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hs.hos_id = #{hos_id}
			</if>
			<if test="store_id != null and store_id != ''">
				AND hs.store_id = #{store_id}
			</if>
			<if test="store_code != null and store_code != ''">
				AND hs.store_code = #{store_code}
			</if>
			<if test="type_code != null and type_code != ''">
				AND hs.type_code = #{type_code}
			</if>
			<if test="store_name != null and store_name != ''">
				AND hs.store_name = #{store_name}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND hs.spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND hs.wbx_code = #{wbx_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hs.is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND hs.note = #{note}
			</if>
			<if test="is_ass != null and is_ass != ''">
				AND hs.is_ass = #{is_ass}
			</if>
			<if test="is_mat != null and is_mat != ''">
				AND hs.is_mat = #{is_mat}
			</if>
			<if test="is_med != null and is_med != ''">
				AND hs.is_med = #{is_med}
			</if>
		</where>
		order by hs.store_code asc
	</select>

	<select id="queryStoreById" resultType="com.chd.hrp.sys.entity.Store"
		parameterType="string">

		SELECT
		hs.group_id,
		hs.hos_id,
		hs.store_id,
		hs.store_code,
		hs.type_code,
		hst.type_name,
		hs.store_name,
		hs.spell_code,
		hs.wbx_code,
		hs.is_stop,
		hs.note
		FROM hos_store hs left join HOS_STORE_TYPE hst 
			ON
				hs.type_code = hst.type_code and
				hs.group_id = hst.group_id and
				hs.hos_id = hst.hos_id 
		<where>
			<if test=" group_id != null and group_id != '' ">
				and  hs.group_id = #{group_id}
			</if>
			<if test=" hos_id != null and hos_id != '' ">
				and  hs.hos_id = #{hos_id}
			</if>
			<if test=" store_id != null and store_id != '' ">
				and  hs.store_id != #{store_id}
			</if>
			 and ( hs.store_code = #{store_code} or  store_name = #{store_name} )
		</where>
		
	</select>
	
	<select id="queryMaxStore_sort" parameterType="java.util.Map" resultMap="store" >
	
		select Max(sort_code)  as sort_code
		
		from hos_store
		<where>
			<if test="group_id != null  and  group_id != '' ">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and  hos_id != '' ">
				and hos_id = #{hos_id}
			</if>
		</where>
	</select>
	
	<select id="quryStore_sort" parameterType="java.util.Map" resultMap="store" >
	
		select sort_code
		
		from hos_store
		<where>
			<if test="group_id != null  and  group_id != '' ">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and  hos_id != '' ">
				and hos_id = #{hos_id}
			</if>
			<if test="store_id != null  and  store_id != '' ">
				and store_id != #{store_id}
			</if>
			<if test="sort_code != null  and  sort_code != '' ">
				and sort_code = #{sort_code}
			</if>
		</where>
	</select>
</mapper>

