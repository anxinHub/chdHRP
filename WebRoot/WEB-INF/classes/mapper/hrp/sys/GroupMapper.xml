<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.GroupMapper">

	<resultMap id="group" type="com.chd.hrp.sys.entity.Group">
		<result property="group_id" column="group_id" />
		<result property="group_code" column="group_code" />
		<result property="group_name" column="group_name" />
		<result property="group_simple" column="group_simple" />
		<result property="group_sort" column="group_sort" />
		<result property="group_legal" column="group_legal" />
		<result property="group_contact" column="group_contact" />
		<result property="group_phone" column="group_phone" />
		<result property="group_email" column="group_email" />
		<result property="group_address" column="group_address" />
		<result property="is_stop" column="is_stop" />
		<result property="note" column="note" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
	</resultMap>

	<insert id="addGroup" useGeneratedKeys="true">

		INSERT INTO SYS_GROUP (
		group_id,
		group_code,
		group_name,
		group_simple,
		group_sort,
		group_legal,
		group_contact,
		group_phone,
		group_email,
		group_address,
		is_stop,
		note,
		spell_code,
		wbx_code
		) VALUES (
		HOS_INFO_DICT_SEQ.nextval ,
		#{group_code} ,
		#{group_name} ,
		#{group_simple} ,
		#{group_sort} ,
		#{group_legal} ,
		#{group_contact} ,
		#{group_phone} ,
		#{group_email} ,
		#{group_address} ,
		#{is_stop} ,
		#{note} ,
		#{spell_code} ,
		#{wbx_code}
		)

	</insert>
	<select id="queryCurrentSequence" resultType="java.lang.Long">
		select HOS_INFO_DICT_SEQ.currval group_id from dual
	</select>
	
	<insert id="addBatchGroup" parameterType="java.util.List">

		INSERT INTO SYS_GROUP (
		group_id,
		group_code,
		group_name,
		group_simple,
		group_sort,
		group_legal,
		group_contact,
		group_phone,
		group_email,
		group_address,
		is_stop,
		note,
		spell_code,
		wbx_code
		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id} ,
			#{item.group_code} ,
			#{item.group_name} ,
			#{item.group_simple} ,
			#{item.group_sort} ,
			#{item.group_legal} ,
			#{item.group_contact} ,
			#{item.group_phone} ,
			#{item.group_email} ,
			#{item.group_address} ,
			#{item.is_stop} ,
			#{item.note} ,
			#{item.spell_code} ,
			#{item.wbx_code}
			from dual
		</foreach>

	</insert>

	<update id="updateGroup" parameterType="java.util.Map">

 UPDATE sys_group SET
		group_code = #{group_code}
		,
		group_name = #{group_name}
		,
		group_simple =
		#{group_simple}
		,
		group_legal =
		#{group_legal}
		,
		group_contact = #{group_contact}
		,
		group_phone =
		#{group_phone}
		,
		group_email = #{group_email}
		,
		group_address =
		#{group_address}
		,
		is_stop = #{is_stop}
		,
		note = #{note}
		,
		spell_code =
		#{spell_code}
		,
		wbx_code = #{wbx_code}

		WHERE
		group_id = #{group_id}
		


	</update>
	
	<update id="updateGroupCode" parameterType="java.util.Map">
	begin 
		UPDATE sys_group SET
		group_code = #{group_code}

		WHERE
		group_id = #{group_id}
		;
		
		update sys_group_dict
		set
		group_code = #{group_code},
		note = #{note}
	
		WHERE
		group_id = #{group_id}
		and is_stop=0;
		end;
		
	</update>
	
	<update id="updateGroupName" parameterType="java.util.Map">
	begin 
		UPDATE sys_group SET
		group_name = #{group_name}
		,
		group_simple =
		#{group_simple}
		,
		spell_code =
		#{spell_code}
		,
		wbx_code = #{wbx_code}

		WHERE
		group_id = #{group_id};
		
		update sys_group_dict
		set
		group_name = #{group_name}
		,
		group_simple = #{group_simple},
		USER_CODE = #{user_code},
		CREATE_DATE = sysdate,
		note = #{note},
		spell_code=#{spell_code},
		wbx_code = #{wbx_code}
	
		WHERE
		group_id = #{group_id}
		and is_stop=0;
		end;

	</update>
		
	
	<update id="updateBatchGroup" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE sys_group SET
			group_code = #{group_code}
			,
			group_name = #{group_name}
			,
			group_simple = #{group_simple}
			,
			group_sort = #{group_sort}
			,
			group_legal = #{group_legal}
			,
			group_contact = #{group_contact}
			,
			group_phone = #{group_phone}
			,
			group_email = #{group_email}
			,
			group_address = #{group_address}
			,
			is_stop = #{is_stop}
			,
			note = #{note}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}

			WHERE
			group_id = #{item.group_id}

		</foreach>
	</update>

	<delete id="deleteGroup" parameterType="java.util.Map">

		DELETE FROM sys_group
		WHERE
		group_id = #{group_id}

	</delete>
	<delete id="deleteBatchGroup" parameterType="java.util.List">
		DELETE FROM sys_group WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}

		</foreach>


	</delete>

	<select id="queryGroupByCode" resultType="com.chd.hrp.sys.entity.Group"
		parameterType="string">

		SELECT
		g.group_id,
		g.group_code,
		g.group_name,
		g.group_simple,
		g.group_sort,
		g.group_legal,
		g.group_contact,
		g.group_phone,
		g.group_email,
		g.group_address,
		g.is_stop,
		g.note,
		g.spell_code,
		g.wbx_code,
		u.user_id,u.user_code
		FROM sys_group g
		left join sys_user u on g.group_id=u.group_id and u.type_code=3
		WHERE g.group_id = #{group_id}

	</select>
	
	<select id="queryGroupSortMax" parameterType="java.util.Map" resultType="String">
		select max(group_sort) max_sort from SYS_GROUP 
	</select>
	
	
	<select id="queryGroup" parameterType="java.util.Map" resultMap="group">

		SELECT
		group_id,
		group_code,
		group_name,
		group_simple,
		group_sort,
		group_legal,
		group_contact,
		group_phone,
		group_email,
		group_address,
		is_stop,
		note,
		spell_code,
		wbx_code
		FROM SYS_GROUP
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="group_code != null and group_code != ''">
				AND group_code = #{group_code}
			</if>
			<if test="group_name != null and group_name != ''">
				AND group_name = #{group_name}
			</if>
			<if test="group_simple != null and group_simple != ''">
				AND group_simple = #{group_simple}
			</if>
			<if test="group_sort != null and group_sort != ''">
				AND group_sort = #{group_sort}
			</if>
			<if test="group_legal != null and group_legal != ''">
				AND group_legal = #{group_legal}
			</if>
			<if test="group_contact != null and group_contact != ''">
				AND group_contact = #{group_contact}
			</if>
			<if test="group_phone != null and group_phone != ''">
				AND group_phone = #{group_phone}
			</if>
			<if test="group_email != null and group_email != ''">
				AND group_email = #{group_email}
			</if>
			<if test="group_address != null and group_address != ''">
				AND group_address = #{group_address}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
		</where>
		order by group_sort asc
	</select>

</mapper>

