<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.sys.dao.UserMapper">

	<resultMap id="user" type="com.chd.hrp.sys.entity.User">
		<result property="user_id" column="user_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="hos_no" column="hos_no" />
		<result property="user_code" column="user_code" />
		<result property="user_name" column="user_name" />
		<result property="user_pwd" column="user_pwd" />
		<result property="phone" column="phone" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="is_stop" column="is_stop" />
		<result property="is_stop_name" column="is_stop_name" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="note" column="note" />
		<result property="mod_code" column="mod_code" />
		<result property="group_code" column="group_code" />
		<result property="group_name" column="group_name" />
		<result property="group_simple" column="group_simple" />
		<result property="hos_code" column="hos_code" />
		<result property="hos_name" column="hos_name" />
		<result property="hos_simple" column="hos_simple" />
		<result property="copy_code" column="copy_code" />
		<result property="copy_name" column="copy_name" />
		<result property="sj_user" column="sj_user" />
	</resultMap>
		
		
	<insert id="addUser" useGeneratedKeys="true">

		INSERT INTO SYS_USER (
		user_id
		,
		group_id
		,
		hos_id
		,
		user_code
		,
		user_name
		,
		user_pwd
		,
		emp_code
		,
		type_code
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note
		,
		phone,sj_id
		) VALUES (SYS_USER_SEQ.nextval,
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{user_code,jdbcType=VARCHAR},
		#{user_name,jdbcType=VARCHAR},
		#{user_pwd,jdbcType=VARCHAR},
		#{emp_code,jdbcType=INTEGER} ,
		#{type_code,jdbcType=INTEGER} ,
		#{is_stop,jdbcType=INTEGER} ,
		#{spell_code,jdbcType=VARCHAR} ,
		#{wbx_code,jdbcType=VARCHAR} ,
		#{note,jdbcType=VARCHAR} ,
		#{phone,jdbcType=VARCHAR},
		#{sj_id,jdbcType=INTEGER}
		)

	</insert>
	<insert id="addBatchUser" parameterType="java.util.List">

		INSERT INTO SYS_USER (
		user_id
		,
		group_id
		,
		hos_id
		,
		user_code
		,
		user_name
		,
		user_pwd
		,
		emp_code
		,
		type_code
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note
		,
		mod_code

		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.user_id,jdbcType=INTEGER} ,
			#{item.group_id,jdbcType=INTEGER} ,
			#{item.hos_id,jdbcType=INTEGER} ,
			#{item.user_code,jdbcType=VARCHAR} ,
			#{item.user_name,jdbcType=VARCHAR} ,
			#{item.user_pwd,jdbcType=VARCHAR} ,
			#{item.emp_code,jdbcType=VARCHAR} ,
			#{item.type_code,jdbcType=INTEGER} ,
			#{item.is_stop,jdbcType=INTEGER} ,
			#{item.spell_code,jdbcType=VARCHAR} ,
			#{item.wbx_code,jdbcType=VARCHAR} ,
			#{item.note,jdbcType=VARCHAR} ,
			#{item.mod_code,jdbcType=VARCHAR}
			from dual
		</foreach>

	</insert>

	<update id="updateBatchUserPwd" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE sys_user
			<trim prefix="SET" suffixOverrides=",">
		 user_pwd=#{user_pwd,jdbcType=VARCHAR},log=#{log}
		</trim>
		where user_id=#{item,jdbcType=VARCHAR}
		</foreach>
	</update>
	

	<update id="updateUser" parameterType="java.util.Map">

		UPDATE sys_user SET
		user_name = #{user_name}
		,
		emp_code = #{emp_code}
		,
		is_stop = #{is_stop}
		,
		spell_code = #{spell_code}
		,
		wbx_code = #{wbx_code}
		,
		note = #{note}
		,
		phone=#{phone}

		WHERE
		user_id = #{user_id}


	</update>
	<update id="updateBatchUser" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE sys_user SET
			group_id = #{group_id}
			,
			hos_id = #{hos_id}
			,
			user_code = #{user_code}
			,
			user_name = #{user_name}
			
			,
			emp_code = #{emp_code}
			,
			type_code = #{type_code}
			,
			is_stop = #{is_stop}
			,
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
			,
			note = #{note}
			,
			mod_code = #{mod_code}

			WHERE
			user_id = #{item.user_id}

		</foreach>
	</update>

	<delete id="deleteUser" parameterType="java.util.Map">

		DELETE FROM sys_user WHERE
		user_id = #{user_id}

	</delete>
	<delete id="deleteUserByGroup" parameterType="java.util.Map">

		DELETE FROM sys_user WHERE
		group_id = #{group_id}

	</delete>
	
	<delete id="deleteUserByHos" parameterType="java.util.Map">

		DELETE FROM sys_user WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id}

	</delete>
	
	<delete id="deleteBatchUser" parameterType="java.util.List">
		DELETE FROM sys_user WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			user_id = #{item.user_id}
		</foreach>
	</delete>

	<select id="queryUserByCode" resultType="com.chd.hrp.sys.entity.User"
		parameterType="map">

		SELECT
		su.user_id,
		su.group_id,
		su.hos_id,
		su.user_code,
		su.user_name,
		b.emp_id,
		b.emp_code,
		b.emp_name,
		su.type_code,
		su.is_stop,
		su.spell_code,
		su.wbx_code,
		su.note,
		su.mod_code,
		su.phone,
		sj.user_code||' '||sj.user_name sj_user
		FROM sys_user su
		left join sys_user sj on su.sj_id=sj.user_id
		left join hos_emp_dict b on su.group_id=b.group_id and su.hos_id=b.hos_id and su.emp_code=b.emp_id and b.is_stop=0
		where su.user_id = #{user_id,jdbcType=INTEGER}
		<if test="user_name!=null and user_name!=''">
			and user_name=#{user_name,jdbcType=INTEGER}
		</if>
	</select>
	
	
	<select id="queryUserByAdmin" resultType="string" parameterType="map">

		SELECT user_code
		FROM sys_user
		where group_id=#{group_id} 
		<if test="hos_id!=null and hos_id!=''">
			and hos_id=#{hos_id}
		</if>
		<if test="type_code!=null and type_code!=''">
			and type_code=#{type_code}
		</if>
		
	</select>
	
	
	<!-- 系统登录，根据用户编码查找用户所需要的信息 -->
	<select id="queryUserHosGroupByCode" resultType="com.chd.hrp.sys.entity.User" parameterType="string">

		SELECT
			su.user_id,
			su.group_id,
			su.hos_id,
			su.user_code,
			su.user_pwd,
			su.user_name,		
			su.emp_code,
			e.emp_name,
			su.type_code,
			su.mod_code,
			g.group_code,
			g.group_name,
			g.group_simple,
			h.hos_no,
			h.hos_code,
			h.hos_name,
			h.hos_simple,
			su.copy_code,
			hc.copy_name
		FROM sys_user su 
		left join sys_group_dict g on su.group_id=g.group_id and g.is_stop=0
		left join HOS_INFO_DICT h on su.group_id=h.group_id and su.hos_id=h.hos_id and h.is_stop=0
		left join hos_emp_dict e on  su.group_id=h.group_id and su.hos_id=h.hos_id and su.emp_code=e.emp_id and e.is_stop=0
		left join hos_copy hc on su.group_id=hc.group_id and su.hos_id=hc.hos_id and su.copy_code =hc.copy_code and hc.is_stop=0
		where su.user_code = #{user_code}
		
	</select>
	
	<select id="queryUserByUserCode" resultType="com.chd.hrp.sys.entity.User"
		parameterType="string">

		SELECT
		su.user_id,
		su.group_id,
		su.hos_id,
		su.user_code,
		su.user_pwd,
		su.user_name,
		su.emp_code,
		su.type_code,
		su.is_stop,
		su.spell_code,
		su.wbx_code,
		su.note,
		su.mod_code
		FROM sys_user su
		<where>
			<if test="user_code != null and user_code != ''">
				AND su.user_code = #{user_code}
			</if>
		</where>
	</select>
	
	
	<select id="queryUser" parameterType="java.util.Map" resultType="java.util.Map">

		SELECT
		su.user_id,
		su.group_id,
		su.hos_id,
		su.user_code,
		su.user_name,
		e.emp_code||' '||e.emp_name emp_name,
		case su.type_code when 1 then '集团用户' when 2 then '超级管理员' when 3 then '集团管理员' when 4 then '医院管理员' else '医院用户' end type_name,
		case when su.is_stop=1 then '停用' else '启用' end is_stop_name,
		su.spell_code,
		su.wbx_code,
		su.note,
		m.mod_name mod_code,
		su.phone,
		c.copy_name copy_code,
		sj.user_code||' '||sj.user_name sj_user
		FROM SYS_USER su
		left join sys_user sj on su.sj_id=sj.user_id
		left join hos_emp_dict e on su.emp_code=e.emp_id and e.is_stop=0
		left join sys_mod m on su.mod_code=m.mod_code
		left join hos_copy c on su.group_id=c.group_id and su.hos_id=c.hos_id and su.copy_code =c.copy_code 
		where su.group_id = #{group_id} AND su.hos_id = #{hos_id} 
		<if test="user_id != null and user_id != ''">
			and su.user_id!=#{user_id}
		</if>
		<if test='type_code ==0 or  type_code ==1 '>
			and su.sj_id=#{user_id}
		</if>
		<if test='type_code ==2 '>
			and su.type_code in(0,1) 
		</if>
		<if test="user_code != null and user_code != '' ">
			 AND (su.user_code like '${user_code}%'
			or su.user_name like '%${user_code}%'	
			)
		</if>
		<if test="user_id_sel != null and user_id_sel != '' ">
			 AND su.user_id=#{user_id_sel}
		</if>
		<if test="sj_user != null and sj_user != '' ">
			and su.sj_id=#{sj_user}
		</if>
		order by su.user_code asc
	</select>
	
	<select id="queryUserByRole" parameterType="java.util.Map" resultMap="user">

		SELECT
		su.user_id,
		su.group_id,
		su.hos_id,
		su.user_code,
		su.user_name,
		su.emp_code,
		su.type_code,
		su.is_stop,
		su.spell_code,
		su.wbx_code,
		su.note,
		su.mod_code
		FROM SYS_ROLE_USER sru left join SYS_USER su on
		sru.group_id = su.group_id
		and sru.hos_id = su.hos_id
		and sru.user_id = su.user_id
		<where>
					su.group_id = #{group_id}
				AND su.hos_id = #{hos_id}
			<if test="user_code != null and user_code != ''">
				AND (su.user_code like '${user_code}%'
				or su.user_name like '${user_code}%'
				or su.spell_code like '${user_code}%'
				or su.wbx_code like '${user_code}%'
				or su.user_id like '${user_code}%'
				)
			</if>
			<if test="user_id != null and user_id != ''">
				and su.user_id = #{user_id}
			</if>
			<if test="type_code != null and type_code != ''">
				AND su.type_code = #{type_code}
			</if>
			<if test="type_codes != null and type_codes != ''">
				AND su.type_code in (${type_codes})
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND su.is_stop = #{is_stop}
			</if>
			<if test="role_id != null and role_id != ''">
				and sru.role_id = #{role_id}
			</if>
		</where>
		order by su.user_id asc
	</select>
	
	
	<!-- 切换系统模块，或者取消该模块的权限，修改最后登录系统模块 -->
	<update id="updateUserMod" parameterType="java.util.Map">
		update
		sys_user set mod_code=#{mod_code}
		<if test="copy_code != null and copy_code != ''">
				,copy_code=#{copy_code}
		</if>
		where user_id=#{user_id}
	</update>
	
	<!-- 首页修改用户密码 -->
	<update id="updateUserPassword" parameterType="java.util.Map" >
		update sys_user set user_pwd=#{password},log=#{log}
		where user_id=#{user_id}
	</update>
	<!-- 修改集团医院管理员编码 -->
	<update id="updateUserCode" parameterType="java.util.Map" >
		update sys_user set user_code=#{user_code,jdbcType=VARCHAR}
		where  user_id=#{user_id,jdbcType=INTEGER}
	</update>
	
	<!-- 工资条登录 -->
	<select id="queryHosEmpByPwd" resultType="java.util.Map" parameterType="string">

		SELECT
			e.emp_id,
			e.group_id,
			e.hos_id,
			e.emp_code,
			e.user_pwd,
			e.emp_name,
			e.is_stop
		FROM hos_emp e 
		let join hos_dept d on e.group_id=d.group_id and e.hos_id=d.hos_id and e.dept_id=d.dept_id
		where e.emp_code = #{user_code}
		
	</select>
	
</mapper>

