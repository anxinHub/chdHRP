<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.storage.in.MatStorageInMapper">
	 
	<resultMap id="matStorageInMain" type="java.util.Map">      
		<result property="group_id" column="group_id"/> 
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="in_id" column="in_id"/> 
		<result property="in_no" column="in_no"/> 
		<result property="year" column="year"/> 
		<result property="month" column="month"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_name" column="sup_name"/> 
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_name" column="store_name"/>
		<result property="brief" column="brief"/>
		<result property="stocker" column="stocker"/>
		<result property="stocker_name" column="stocker_name"/>
		<result property="stock_type_code" column="stock_type_code"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="in_date" column="in_date"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="state" column="state"/>
		<result property="state_name" column="state_name"/>
		<result property="is_pay" column="is_pay"/>
		<result property="pay_date" column="pay_date"/>
		<result property="pay_money" column="pay_money"/> 
		<result property="is_pay_all" column="is_pay_all"/>
		<result property="check_code" column="check_code"/>
		<result property="protocol_code" column="protocol_code"/>
		<result property="amount_money" column="amount_money"/>
		<result property="proj_id" column="proj_id"/>
		<result property="come_from" column="come_from"/>
		<result property="field_desc" column="field_desc"/>
		<result property="bill_no" column="bill_no"/>
		<result property="bill_date" column="bill_date"/>
		<result property="bill_state" column="bill_state"/>
		<result property="bill_state_name" column="bill_state_name"/>
		<result property="delivery_code" column="delivery_code"/>
		<result property="examiner" column="examiner"/>
		<result property="examiner_code" column="examiner_code"/>
		<result property="examiner_name" column="examiner_name"/>
		<result property="ra_state" column="ra_state"/>
		<result property="is_create_bill" column="is_create_bill"/>
		<result property="pay_money" column="pay_money"/>
		<result property="temperature" column="temperature"/>
		<result property="check_name" column="check_name"/>
	</resultMap>
	
	<resultMap id="matStorageInOrder" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="order_id" column="order_id"/>
		<result property="order_code" column="order_code"/>
		<result property="order_date" column="order_date"/>
		<result property="pur_type" column="pur_type"/>
		<result property="pur_type_name" column="pur_type_name"/>
		<result property="order_type" column="order_type"/>
		<result property="order_type_name" column="order_type_name"/>
		<result property="brif" column="brif"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_name" column="sup_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_name" column="dept_name"/>
		<result property="stocker" column="stocker"/>
		<result property="stocker_name" column="stocker_name"/>
		<result property="pur_hos_id" column="pur_hos_id"/>
		<result property="pur_hos_name" column="pur_hos_name"/>
		<result property="take_hos_id" column="take_hos_id"/>
		<result property="take_hos_name" column="take_hos_name"/>
		<result property="pay_hos_id" column="pay_hos_id"/>
		<result property="pay_hos_name" column="pay_hos_name"/>
		<result property="stock_type_code" column="stock_type_code"/>
		<result property="stock_type_name" column="stock_type_name"/>
		<result property="pay_code" column="pay_code"/>
		<result property="pay_name" column="pay_name"/>
		<result property="arr_address" column="arr_address"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="state" column="state"/>
		<result property="is_notice" column="is_notice"/>
		<result property="notice_date" column="notice_date"/>
		<result property="note" column="note"/>
	</resultMap>
	
	<resultMap id="matStorageInDetail" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="in_id" column="in_id"/>
		<result property="id" column="id"/>
		<result property="in_detail_id" column="in_detail_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="is_highvalue" column="is_highvalue"/>
		<result property="is_batch" column="is_batch"/>
		<result property="is_bar" column="is_bar"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="is_quality" column="is_quality"/>
		<result property="is_single_ven" column="is_single_ven"/>
		<result property="is_disinfect" column="is_disinfect"/>
		<result property="batch_no" column="batch_no"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="amount_money" column="amount_money"/>
		<result property="sell_price" column="sell_price"/>
		<result property="sell_money" column="sell_money"/>
		<result property="sale_price" column="sale_price"/>
		<result property="sale_money" column="sale_money"/>
		<result property="allot_price" column="allot_price"/>
		<result property="allot_money" column="allot_money"/>
		<result property="pack_code" column="pack_code"/>
		<result property="pack_name" column="pack_name"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="pack_price" column="pack_price"/>
		<result property="num" column="num"/>
		<result property="bar_code" column="bar_code"/>
		<result property="sn" column="sn"/>
		<result property="inva_date" column="inva_date"/>
		<result property="disinfect_date" column="disinfect_date"/>
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		<result property="order_rela" column="order_rela"/>
		<result property="bid_code" column="bid_code"/>
		<result property="note" column="note"/>
		<result property="fac_code" column="fac_code"/>
		<result property="fac_name" column="fac_name"/>
		<result property="mat_type_name" column="mat_type_name"/>
		<result property="batch_no" column="batch_no"/>
		<result property="bar_code" column="bar_code"/>
		<result property="cert_id" column="cert_id"/>
		<result property="cert_code" column="cert_code"/>
		<result property="disinfect_no" column="disinfect_no"/>
		<result property="fac_date" column="fac_date"/> 
		<result property="store_code" column="store_code"/> 
		<result property="store_name" column="store_name"/> 
								
	</resultMap>

	<select id="queryMatTermendStoreByYearMonth" resultType="int" parameterType="java.util.Map">
		select count(1)
		from mat_termend_store a
		where a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.store_id = #{store_id}
			and (a.year,a.month) = (
				select acc_year,acc_month from acc_year_month
		 		where group_id = #{group_id}
					 and hos_id =#{hos_id}
					 and copy_code = #{copy_code}
					 and to_date( #{confirm_date},'yyyy-mm-dd') between begin_date and end_date
			)
			and nvl(a.is_account,0) = 1
	</select>
	
	<select id="queryAccYearMonthByYearMonth" resultType="java.util.Map" parameterType="java.util.Map">
		select b.mat_flag
		from acc_year_month b
		where b.group_id = #{group_id}
			and b.hos_id = #{hos_id}
			and b.copy_code = #{copy_code}
			and to_date( #{confirm_date},'yyyy-mm-dd') between begin_date and end_date
			and nvl(b.mat_flag,0)=1
	</select>
	
	<!-- 常备材料入库主查询 -->
	<select id="query" parameterType="java.util.Map" resultMap="matStorageInMain" >
		with tmp_in as(
			select distinct a.group_id, a.hos_id, a.copy_code, a.in_id, a.in_no, b.field_desc, a.brief, 
				a.delivery_code, d.emp_name  as examiner_name, f.user_name as maker_name, 
				a.maker, a.amount_money, a.state, h.field_desc  as state_name, 
				a.ra_state, a.bill_no, decode(nvl(i.bill_id, 0), 0, 0, 1) as is_create_bill, j.sup_name, 
				c.emp_name  as stocker_name, a.in_date, a.confirm_date, k.user_name as confirmer_name, 
				a.store_id, l.store_name, a.bus_type_code, m.bus_type_name, a.bill_date, a.bill_state, 
				case a.bill_state when 0 then '货到票未到' when 1 then '货票同到' else '未维护' end as bill_state_name,  
				a.temperature, qq.user_name as check_name
			from mat_in_main a
			left join mat_data_dict b 
				on b.data_code = '04014' 
				and b.field_code = 'IN_FROM' 
				and a.come_from = b.field_value 
			left join hos_emp c 
				on a.group_id = c.group_id 
				and a.hos_id = c.hos_id 
				and a.stocker = c.emp_id 
			left join hos_emp_dict d 
				on a.group_id = d.group_id 
				and a.hos_id = d.hos_id 
				and a.examiner = d.emp_id 
				and d.is_stop = 0 
			left join sys_user f 
				on a.group_id=f.group_id 
				and a.hos_id=f.hos_id 
				and a.maker=f.user_id 
			left join mat_sys_list h 
				on h.table_code = 'MAT_IN_MAIN' 
				and h.field_code = 'STATE' 
				and a.state = h.field_value 
			left join mat_bill_detail i 
				on a.group_id=i.group_id 
				and a.hos_id=i.hos_id 
				and a.copy_code=i.copy_code 
				and a.in_id=i.in_id 
			left join hos_sup_dict j 
				on a.group_id=j.group_id 
				and a.hos_id=j.hos_id 
				and a.sup_id = j.sup_id 
				<if test="show_history == 1">
				and a.sup_no = j.sup_no
				</if>
				<if test="show_history == 0">
				and j.is_stop = 0
				</if> 
			left join sys_user k 
				on a.group_id = k.group_id 
				and a.hos_id = k.hos_id 
				and a.confirmer = k.user_id 
			left join hos_store_dict l 
				on a.group_id=l.group_id 
				and a.hos_id=l.hos_id 
				and a.store_id=l.store_id 
				<if test="show_history == 1">
				and a.store_no=l.store_no 
				</if>
				<if test="show_history == 0">
				and l.is_stop = 0 
				</if> 
			left join mat_bus_type m 
				on a.bus_type_code = m.bus_type_code 
			left join sys_user qq 
				on a.group_id = qq.group_id 
				and a.hos_id = qq.hos_id 
				and a.checker = qq.user_id 
			where a.group_id=#{group_id,jdbcType=INTEGER} 
				and a.hos_id=#{hos_id,jdbcType=INTEGER} 
				and a.copy_code=#{copy_code,jdbcType=VARCHAR}
				<!-- and m.sel_flag='in' -->
				<if test="begin_amount_money != null and begin_amount_money != '' and end_amount_money != null and end_amount_money != '' ">
					and a.amount_money between #{begin_amount_money} and #{end_amount_money}
				</if>
				<if test="begin_in_date != null and begin_in_date != ''">
					AND to_char(a.in_date,'yyyy-MM-dd') &gt;= #{begin_in_date}
				</if>
				<if test="end_in_date != null and end_in_date != ''">
					AND to_char(a.in_date,'yyyy-MM-dd') &lt;= #{end_in_date}
				</if>
				<if test="begin_confirm_date != null and begin_confirm_date != ''">
					AND to_char(a.confirm_date,'yyyy-MM-dd') &gt;= #{begin_confirm_date}
				</if>
				<if test="end_confirm_date != null and end_confirm_date != ''">
					AND to_char(a.confirm_date,'yyyy-MM-dd') &lt;= #{end_confirm_date}
				</if> 
				<if test="bus_type_code != null and bus_type_code != ''">
					AND a.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
				</if> 
				<if test="bus_type_code == null or bus_type_code == ''">
					and m.bus_type_code in (8,4,2,22,10,6,16,18,47) 
					and exists (
						select 1 
						from v_user_data_perm
						where group_id = #{group_id,jdbcType=INTEGER}
							and hos_id = #{hos_id,jdbcType=INTEGER}
							and user_id = #{user_id,jdbcType=INTEGER}
							and table_code = 'MAT_BUS_TYPE'
							and (is_read = 1 or is_write = 1)
							and a.bus_type_code =perm_code
					)
				</if> 
				<if test="state != null and state != ''">
					AND a.state = #{state,jdbcType=VARCHAR}
				</if>
				<if test="store_id != null and store_id != ''">
					AND a.store_id = #{store_id,jdbcType=VARCHAR}
				</if>
				<if test="store_id == null or store_id == ''">
					and  exists (
						select 1
						from v_user_data_perm
						where group_id = #{group_id,jdbcType=INTEGER}
							and hos_id = #{hos_id,jdbcType=INTEGER}
							and user_id = #{user_id,jdbcType=INTEGER}
							and table_code = 'HOS_STORE_DICT'
							and is_read = 1
							and is_write = 1
							and a.store_id = perm_code
					)
				</if>
				<if test="sup_id != null and sup_id != ''">
					AND a.sup_id = #{sup_id,jdbcType=VARCHAR}
				</if>
				<if test="proj_id != null and proj_id != ''">
					AND a.proj_id = #{proj_id,jdbcType=VARCHAR}
				</if>
				<if test="in_no != null and in_no != ''">
					AND a.in_no like '%${in_no}%'
				</if>
				<if test="invoice_no != null and invoice_no != ''">
					AND a.bill_no like '${invoice_no}%'
				</if> 
				<if test="not_invoice != null and not_invoice == 1">
					AND nvl(a.bill_no, '空') = '空'
				</if>
				<if test="bill_state != null and bill_state != ''">
					AND a.bill_state = #{bill_state,jdbcType=INTEGER}
				</if>
				<if test="brief != null and brief != ''">
					AND a.brief like '%${brief}%'
				</if>
				<if test="is_create_bill != null and is_create_bill != ''">
					AND decode(nvl(i.bill_id,0), 0, 0, 1) = #{is_create_bill}
				</if>
				<if test="maker != null and maker != ''">
					AND a.maker = #{maker,jdbcType=INTEGER}
				</if>
				<if test="affirm != null and affirm != ''">
					AND a.confirmer = #{affirm,jdbcType=INTEGER}
				</if>
				<if test="(inv_code != null and inv_code != '') or (inv_model != null and inv_model != '') or (batch_no != null and batch_no != '') or (bar_code != null and bar_code != '') or (mat_type_code != null and mat_type_code != '') ">
					and exists(
						select 1 
						from mat_in_detail bb 
						left join mat_inv_dict mid 
							on bb.group_id = mid.group_id
							and bb.hos_id = mid.hos_id
							and bb.copy_code = mid.copy_code
							and bb.inv_id = mid.inv_id
							and mid.is_stop = 0 
						left join mat_type_dict mtd 
							on mid.group_id = mtd.group_id
							and mid.hos_id = mtd.hos_id
							and mid.copy_code = mtd.copy_code
							and mid.mat_type_id = mtd.mat_type_id
							and mid.mat_type_no = mtd.mat_type_no 
						where a.group_id = bb.group_id
							and a.hos_id = bb.hos_id
							and a.copy_code = bb.copy_code
							and a.in_id = bb.in_id
							<if test="inv_code != null and inv_code != ''">
								AND (
									mid.inv_code like '%${inv_code}%' 
									or upper(mid.inv_name) like '%${inv_code}%' 
									or upper(mid.inv_model) like '%${inv_code}%' 
									or upper(mid.spell_code) like '%${inv_code}%' 
									or upper(mid.wbx_code) like '%${inv_code}%'
									or upper(mid.bid_code) like '%${inv_code}%'
									or lower(mid.spell_code) like '%${inv_code}%'
									or lower(mid.bid_code) like '%${inv_code}%'
									or lower(mid.wbx_code) like '%${inv_code}%'
									or lower(mid.inv_name) like '%${inv_code}%'
									or mid.alias like '%${inv_code}%'          
								)
							</if>
							<if test="inv_model != null and inv_model != ''">
								AND  mid.inv_model like '%${inv_model}%'
							</if>
							<if test="batch_no != null and batch_no != ''">
								AND  bb.batch_no like '%${batch_no}%'
							</if>
							<if test="bar_code != null and bar_code != ''">
								AND  bb.bar_code like '%${bar_code}%' 
							</if>
							<if test="mat_type_code != null and mat_type_code != ''">
								AND mtd.mat_type_code like '${mat_type_code}%'
							</if>
					)
				</if>
			order by a.in_id desc
		)
		select 
			null as group_id,
			null as hos_id,
			null as copy_code,
			null as in_id,
			'合计' as in_no,
			null as field_desc,
			null as brief,
			null as delivery_code,
			null as examiner_name,    
			null as maker_name,
			null as maker, 
			sum(amount_money) as amount_money,
			null as state,
			null as state_name,
			null as ra_state,
			null as bill_no,
			null as is_create_bill,
			null as sup_name,
			null as stocker_name,
			null as in_date,
			null as confirm_date,
			null as confirmer_name,
			null as store_id,
			null as store_name,
			null as bus_type_code,
			null as bus_type_name,
			null as bill_date,
			null as bill_state,
			null as bill_state_name, 
			null as temperature,
			null as check_name
		from tmp_in 
		union all 
		select 
			group_id,
			hos_id,
			copy_code,
			in_id,
			in_no,
			field_desc,
			brief,
			delivery_code,
			examiner_name,    
			maker_name,
			maker, 
			amount_money,
			state,
			state_name,
			ra_state,
			bill_no,
			is_create_bill,
			sup_name,
			stocker_name,
			in_date,
			confirm_date,
			confirmer_name,
			store_id,
			store_name,
			bus_type_code,
			bus_type_name,
			bill_date,
			bill_state,
			bill_state_name, 
			temperature,
			check_name
		from tmp_in 
	</select>
	
	<!-- 新增入库单订单对应关系 -->
	<insert id="insertOrderRela" parameterType="java.util.List" >
		insert into mat_in_order_rela(group_id, hos_id, copy_code, in_id, in_detail_id, order_id, order_detail_id, in_amount, order_amount)
		select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.in_id,jdbcType=INTEGER},
				#{item.in_detail_id,jdbcType=INTEGER},
				#{item.order_id,jdbcType=INTEGER},
				#{item.order_detail_id,jdbcType=INTEGER},
				#{item.in_amount,jdbcType=FLOAT},
				#{item.order_amount,jdbcType=FLOAT}
			from dual
		</foreach>
		)t
	</insert>
	
	<!-- 删除入库单订单对应关系 -->
	<delete id="deleteOrderRela" parameterType="java.util.Map" >
		DELETE FROM mat_in_order_rela
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</delete>
	
	<!-- 批量删除入库单订单对应关系 -->
	<delete id="deleteOrderRelaBatch" parameterType="java.util.List" >
		DELETE FROM mat_in_order_rela
		WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<!-- 批量删除入库单资金来源对应关系 -->
	<delete id="deleteMatInResourceBatch" parameterType="java.util.List">
		DELETE FROM mat_in_resource
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<!-- 常备材料入库单据审核或消审 -->
	<update id="auditOrUnAudit" parameterType="java.util.Map">
		update mat_in_main set 
			state = #{state,jdbcType=INTEGER},
			checker = #{checker,jdbcType=INTEGER},
			check_date = #{check_date,jdbcType=DATE}
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and in_id = #{in_id,jdbcType=INTEGER}
	</update>
	
	<!-- 常备材料入库单据审核或消审有待修改传入包含list的Map -->
	<update id="auditOrUnAuditBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			update mat_in_main set 
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 订单导入主查询 -->
	<select id="queryOrder" parameterType="java.util.Map" resultType="java.util.Map" >
		
		select  
      mom.group_id,mom.hos_id, mom.copy_code,mom.order_id,mom.order_code, mom.brif,
      hsd.sup_name, hc.hos_name pur_hos_name,hc1.hos_name take_hos_name,
      hc2.hos_name pay_hos_name,su.user_name maker_name, mom.order_date, mom.state,
      mod.order_detail_id,mod.inv_id, mod.inv_no,mid.inv_code,mid.inv_name, mid.inv_model,
      mid.unit_code,hu.unit_name,mod.price, mod.amount
    from mat_order_main mom
    left join hos_sup_dict hsd on mom.sup_id = hsd.sup_id and mom.sup_no = hsd.sup_no  and mom.hos_id = hsd.hos_id and mom.group_id = hsd.group_id
    left join hos_info hc  on hc.hos_id = mom.pur_hos_id and hc.group_id = mom.group_id and hc.is_stop = 0
    left join hos_info hc1  on hc1.hos_id = mom.take_hos_id and hc1.group_id = mom.group_id and hc1.is_stop = 0
    left join hos_info hc2  on hc2.hos_id = mom.pay_hos_id and hc2.group_id = mom.group_id and hc2.is_stop = 0
    left join sys_user su on mom.group_id = su.group_id and mom.hos_id = su.hos_id and mom.maker = su.user_id
    left join mat_order_detail mod on mom.group_id = mod.group_id and mom.hos_id = mod.hos_id
         and mom.copy_code = mod.copy_code and mom.order_id = mod.order_id
    left join mat_inv_dict mid on mod.group_id = mid.group_id  and mod.hos_id = mid.hos_id and mod.copy_code = mid.copy_code
         and mod.inv_id = mid.inv_id and mod.inv_no = mid.inv_no
    left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id and mid.unit_code = hu.unit_code  and hu.is_stop = 0
    <where>
    	<if test="group_id !=null and group_id !='' ">
    		and mom.group_id = #{group_id,jdbcType=INTEGER}
    	</if>
    	<if test="hos_id !=null and hos_id !='' ">
    		and mom.hos_id = #{hos_id,jdbcType=INTEGER}
    	</if>
    	<if test="copy_code !=null and copy_code !='' ">
    		and mom.copy_code = #{copy_code,jdbcType=VARCHAR}
    	</if>
    	and mom.state = #{state}
    	<if test="begin_order_date != null and begin_order_date != ''">
			AND mom.order_date &gt;= #{begin_order_date}
		</if>
		<if test="end_order_date != null and end_order_date != ''">
			AND mom.order_date &lt;= #{end_order_date}
		</if>
		<if test="sup_id != null and sup_id != ''">
			AND mom.sup_id =#{sup_id,jdbcType=INTEGER}
		</if>
		<if test="sup_no != null and sup_no != ''">
			AND mom.sup_no =#{sup_no,jdbcType=INTEGER}
		</if>
		<if test="stocker != null and stocker != ''">
			AND mom.stocker =#{stocker,jdbcType=INTEGER}
		</if>
		<if test="order_code != null and order_code != ''">
			AND mom.order_code like '%'||#{order_code,jdbcType=VARCHAR}||'%'
		</if>
		<if test="brif != null and brif != ''">
			AND mom.brif like '%${brif}%'
		</if>
		<if test="inv_code != null and inv_code !=''">
			AND (mid.inv_code like '${inv_code}%' or mid.inv_name like '%${inv_code}%')
		</if>
    	and mod.order_detail_id not in (
          select mior.order_detail_id
           from mat_in_order_rela mior
           left join mat_order_detail mod  on mod.group_id = mior.group_id
               and mod.hos_id = mior.hos_id  and mod.copy_code = mior.copy_code
               and mod.order_id = mior.order_id and mod.order_detail_id = mior.order_detail_id
               and (nvl(mior.in_amount,0) = nvl(mior.order_amount,0)  )  and  nvl(mior.in_amount,0) !=0
           left join mat_order_main  aa on mod.group_id = aa.group_id and mod.hos_id = aa.hos_id 
           	   and mod.copy_code=aa.copy_code
               and mod.order_id = aa.order_id
           <where>
           		<if test="group_id !=null and group_id !='' ">
    				and mod.group_id = #{group_id,jdbcType=INTEGER}
		    	</if>
		    	<if test="hos_id !=null and hos_id !='' ">
		    		and mod.hos_id = #{hos_id,jdbcType=INTEGER}
		    	</if>
		    	<if test="copy_code !=null and copy_code !='' ">
		    		and mod.copy_code = #{copy_code,jdbcType=VARCHAR}
		    	</if>
		    	<if test="begin_order_date != null and begin_order_date != ''">
					AND aa.order_date &gt;= #{begin_order_date}
				</if>
				<if test="end_order_date != null and end_order_date != ''">
					AND aa.order_date &lt;= #{end_order_date}
				</if>
		    	<if test="sup_id != null and sup_id != ''">
					AND aa.sup_id =#{sup_id,jdbcType=INTEGER}
				</if>
				<if test="sup_no != null and sup_no != ''">
					AND aa.sup_no =#{sup_no,jdbcType=INTEGER}
				</if>
           </where>
      	)
    </where>
    ORDER BY mom.order_id,mod.order_detail_id
    
    
		<!-- select  
			mom.group_id,
			mom.hos_id,
			mom.copy_code,
			mom.order_id,
			mom.order_code, 
			mom.brif, 
			hsd.sup_name, 
			hc.hos_name pur_hos_name,
			hc1.hos_name take_hos_name,
			hc2.hos_name pay_hos_name,
			su.user_name maker_name, 
			mom.order_date,
			mom.state,
			mod.order_detail_id,
			mod.inv_id,
			mod.inv_no,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			mid.unit_code,
			hu.unit_name,
			mod.price,
			mod.amount
		from mat_order_main mom
		left join hos_sup_dict hsd 
			on mom.sup_id = hsd.sup_id 
			and mom.sup_no = hsd.sup_no 
			and mom.hos_id = hsd.hos_id
			and mom.group_id = hsd.group_id
		left join hos_info hc 
			on hc.hos_id = mom.pur_hos_id
			and hc.group_id = mom.group_id
			and hc.is_stop = 0
		left join hos_info hc1 
			on hc1.hos_id = mom.take_hos_id
			and hc1.group_id = mom.group_id
			and hc1.is_stop = 0
		left join hos_info hc2 
			on hc2.hos_id = mom.pay_hos_id
			and hc2.group_id = mom.group_id
			and hc2.is_stop = 0
		left join sys_user su
			on mom.group_id = su.group_id
			and mom.hos_id = su.hos_id
			and mom.maker = su.user_id
		left join mat_order_detail mod
			on mom.group_id = mod.group_id
			and mom.hos_id = mod.hos_id
			and mom.copy_code = mod.copy_code
			and mom.order_id = mod.order_id
		left join mat_in_order_rela mior 
			on mod.group_id = mior.group_id
			and mod.hos_id = mior.hos_id
			and mod.copy_code = mior.copy_code
			and mod.order_id = mior.order_id
			and mod.order_detail_id = mior.order_detail_id
			and mior.in_amount &lt;&gt; mior.order_amount
		
		left join mat_inv_dict mid on mod.group_id = mid.group_id
         	and mod.hos_id = mid.hos_id
         	and mod.copy_code = mid.copy_code
         	and mod.inv_id = mid.inv_id
         	and mod.inv_no = mid.inv_no
    	left join hos_unit hu on mid.group_id = hu.group_id
         	and mid.hos_id = hu.hos_id
         	and mid.unit_code = hu.unit_code
         	and hu.is_stop = 0
		
		where mom.group_id = #{group_id,jdbcType=INTEGER}
			and mom.hos_id = #{hos_id,jdbcType=INTEGER}
			and mom.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mom.state = 2
			and mior.in_id is null 
			<if test="begin_order_date != null and begin_order_date != ''">
				AND mom.order_date &gt;= #{begin_order_date}
			</if>
			<if test="end_order_date != null and end_order_date != ''">
				AND mom.order_date &lt;= #{end_order_date}
			</if>
			<if test="sup_id != null and sup_id != ''">
				AND mom.sup_id =#{sup_id,jdbcType=INTEGER}
			</if>
			<if test="sup_no != null and sup_no != ''">
				AND mom.sup_no =#{sup_no,jdbcType=INTEGER}
			</if>
			<if test="stocker != null and stocker != ''">
				AND mom.stocker =#{stocker,jdbcType=INTEGER}
			</if>
			<if test="order_code != null and order_code != ''">
				AND mom.order_code like '%'||#{order_code,jdbcType=VARCHAR}||'%'
			</if>
			<if test="brif != null and brif != ''">
				AND mom.brif like '%${brif}%'
			</if>
			<if test="inv_code != null and inv_code !=''">
				AND (mid.inv_code like '${inv_code}%' or mid.inv_name like '%${inv_code}%')
			</if>
		order by mom.order_id,mod.order_detail_id -->
	</select>
	
	<!-- 订单导入查询选中的材料 -->
	<select id="queryOrderDetail" parameterType="java.util.Map" resultType="java.util.Map"  >
		select rela.order_rela,--材料订单对应关系
		    mod.inv_no,
		    mod.inv_id,
		    mid.inv_code,
		    mid.inv_name,
		    mid.inv_model,
		    mid.unit_code,
		    hu.unit_name,
			mid.is_highvalue, 
			mid.is_batch, 
			mid.is_bar, 
			mid.is_per_bar, 
			mid.is_quality, 
			mid.is_single_ven, 
			mid.is_disinfect, 
		    sum(nvl(mod.amount, 0)) amount,--数量
		    mod.price,--单价
		    sum(nvl(mod.amount,0)*nvl(mod.price,0)) amount_money,--金额
		    hfd.fac_id,hfd.fac_no,hfd.fac_code,hfd.fac_name,mcr.cert_id,mic.cert_code
		    --,mod.pack_code,
        	--hp.pack_name,
		    --sum(nvl(mod.num, 0)) num,--包装数量
		    --mod.num_exchange,--包装换算量
		from mat_order_detail mod
		left join mat_inv_dict mid 
			on mod.group_id = mid.group_id
			and mod.hos_id = mid.hos_id
			and mod.copy_code = mid.copy_code
			and mod.inv_no = mid.inv_no
			and mod.inv_id = mid.inv_id
			and mid.use_state = 1
		left join hos_unit hu 
			on mid.group_id = hu.group_id
			and mid.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code
		left join hos_fac_dict hfd on mid.group_id = hfd.group_id 
		    and mid.hos_id = hfd.hos_id
		    and mid.fac_id = hfd.fac_id 
		    and mid.fac_no = hfd.fac_no
		left join (
		     SELECT MAX(a.cert_id) AS cert_id,  a.inv_id, a.group_id, a.hos_id, a.copy_code
  			 FROM mat_inv_cert  b
    		 LEFT JOIN mat_inv_cert_rela a ON a.group_id = b.group_id
			 	AND a.hos_id = b.hos_id
			  	AND a.copy_code = b.copy_code
			  	AND a.cert_id = b.cert_id 
  			 WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			    AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			    AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			    AND b.cert_state = 1
			 GROUP BY a.inv_id, a.group_id, a.hos_id, a.copy_code
			 ORDER BY a.inv_id
		) mcr on mid.group_id = mcr.group_id 
			and mid.hos_id = mcr.hos_id 
			and mid.copy_code = mcr.copy_code and mid.inv_id = mcr.inv_id
		left join mat_inv_cert mic on  mcr.group_id = mic.group_id 
			and mcr.hos_id=mic.hos_id
     		and mcr.copy_code= mic.copy_code 
     		and mcr.cert_id=mic.cert_id 
		left join hos_package hp
			on mod.group_id = hp.group_id
			and mod.hos_id = hp.hos_id
			and mod.pack_code = hp.pack_code
		left join (
			select inv_id, '['||to_char(wm_concat('{"order_id":'||order_id||',"order_detail_id":'||order_detail_id||',"in_amount":'||amount||',"order_amount":'||amount||'}'))||']' order_rela 
			from mat_order_detail
			where group_id = #{group_id,jdbcType=INTEGER} 
				and hos_id = #{hos_id,jdbcType=INTEGER} 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				--and order_id in (${order_ids})
				and order_detail_id in (${order_detail_ids})
			group by inv_id
			) rela
		on mod.inv_id = rela.inv_id
		where mod.group_id = #{group_id,jdbcType=INTEGER} 
			and mod.hos_id = #{hos_id,jdbcType=INTEGER} 
			and mod.copy_code = #{copy_code,jdbcType=VARCHAR}
			--and mod.order_id in (${order_ids})
			and mod.order_detail_id in (${order_detail_ids})
		group by  rela.order_rela, mod.inv_no, mod.inv_id, mid.inv_code, mid.inv_name, mid.inv_model, 
			mid.unit_code, hu.unit_name, mid.is_highvalue, mid.is_batch, mid.is_bar, mid.is_per_bar, 
			mid.is_quality, mid.is_single_ven, mid.is_disinfect,mod.price,
			hfd.fac_id,hfd.fac_no,hfd.fac_code,hfd.fac_name,mcr.cert_id,mic.cert_code
			<!-- , mod.pack_code, hp.pack_name, mod.num_exchange -->
		order by mid.inv_code
	</select>
	
	<!-- 订单导入new-->
	<select id="queryOrderDetailNew" parameterType="java.util.Map" resultType="java.util.Map"  >
		select basic_data.group_id, basic_data.hos_id, basic_data.copy_code, order_id, order_detail_id, 
			order_code, brif, order_date, maker, sup_id, sup_no, sup_code, sup_name, maker_name, 
			inv_id, inv_no, inv_code, inv_name, inv_model, unit_code, unit_name, price, order_amount, 
			already_amount, amount, amount_money, fac_id, fac_no, fac_code, fac_name, cert_code, 
			cert_id, is_bar, is_batch, is_per_bar, is_quality, is_disinfect, is_highvalue, sell_price, 
			basic_data.store_id, basic_data.store_no, basic_data.store_code, basic_data.store_name, 
			ms.stock_emp, t1.emp_code, t1.emp_name, ms.manager, t2.emp_code as manager_code, 
			t2.emp_name as manager_name, basic_data.is_good
		from (
			select md.group_id, md.hos_id, md.copy_code, md.order_id, md.order_detail_id, 
				md.order_code, mom.brif, mom.order_date, mom.maker, 
				mom.sup_id, mom.sup_no, hsd.sup_code, hsd.sup_name, su.user_name as maker_name, 
				md.inv_id, md.inv_no, mid.inv_code, mid.inv_name, mid.inv_model, mid.unit_code, hu.unit_name, 
				nvl(md.price, 0) as price, nvl(md.amount, 0) - nvl(a_in.in_amount, 0) as order_amount, 
				nvl(a_in.in_amount, 0) as already_amount, nvl(md.amount, 0) - nvl(a_in.in_amount, 0) as amount, 
				nvl(md.price, 0) * (nvl(md.amount, 0) - nvl(a_in.in_amount, 0)) as amount_money, 
				hfd.fac_id, hfd.fac_no, hfd.fac_code, hfd.fac_name, mic.cert_code, mic.cert_id, 
				mid.is_bar, mid.is_batch, mid.is_per_bar, mid.is_quality, mid.is_disinfect, mid.is_highvalue, 
				mid.sell_price, hsdd.store_code, hsdd.store_name, mom.is_good, mom.store_id store_id, 
				mom.store_no store_no 
			from mat_order_detail md 
			left join mat_order_main mom 
				on md.group_id = mom.group_id 
				and md.hos_id = mom.hos_id
				and md.copy_code = mom.copy_code
				and md.order_id = mom.order_id 
			left join mat_inv_dict mid 
				on md.group_id = mid.group_id
				and md.hos_id = mid.hos_id
				and md.copy_code = mid.copy_code
				and md.inv_id = mid.inv_id
				and md.inv_no = mid.inv_no 
			left join hos_unit hu 
				on mid.group_id = hu.group_id
				and mid.hos_id = hu.hos_id
				and mid.unit_code = hu.unit_code
				and hu.is_stop = 0 
			left join sys_user su 
				on mom.group_id = su.group_id
				and mom.hos_id = su.hos_id
				and su.user_id = mom.maker
				and su.is_stop = 0 
			left join (
				select group_id, hos_id, copy_code, order_id, order_detail_id, 
					sum(nvl(in_amount, 0)) as in_amount
				from mat_in_order_rela
				where group_id =#{group_id,jdbcType=INTEGER}
					and hos_id =#{hos_id,jdbcType=INTEGER}
					and copy_code =#{copy_code,jdbcType=VARCHAR}
				group by group_id, hos_id, copy_code, order_id, order_detail_id
			) a_in 
				on md.group_id = a_in.group_id
				and md.hos_id = a_in.hos_id 
				and md.copy_code = a_in.copy_code
				and md.order_id = a_in.order_id
				and md.order_detail_id = a_in.order_detail_id 
			left join hos_sup_dict hsd 
				on mom.group_id = hsd.group_id
				and mom.hos_id = hsd.hos_id
				and mom.sup_id = hsd.sup_id
				and hsd.is_stop = 0 
			left join hos_fac_dict hfd 
				on mid.group_id = hfd.group_id
				and mid.hos_id = hfd.hos_id
				and mid.fac_id = hfd.fac_id
				and mid.fac_no = hfd.fac_no 
			left join (
				select max(a.cert_id) AS cert_id,  a.inv_id, a.group_id, a.hos_id, a.copy_code
				from mat_inv_cert  b
				LEFT JOIN mat_inv_cert_rela a 
					ON a.group_id = b.group_id
					AND a.hos_id = b.hos_id
					AND a.copy_code = b.copy_code
					AND a.cert_id = b.cert_id 
				WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND b.cert_state = 1
				GROUP BY a.inv_id, a.group_id, a.hos_id, a.copy_code
				ORDER BY a.inv_id
			) mcr 
				on mid.group_id = mcr.group_id
				and mid.hos_id = mcr.hos_id
				and mid.copy_code = mcr.copy_code
				and mid.inv_id = mcr.inv_id 
			left join mat_inv_cert mic 
				on mcr.group_id = mic.group_id
				and mcr.hos_id = mic.hos_id
				and mcr.copy_code = mic.copy_code
				and mcr.cert_id = mic.cert_id 
			left join hos_store_dict hsdd 
				on hsdd.group_id = #{group_id,jdbcType=INTEGER}
				and hsdd.hos_id = #{hos_id,jdbcType=INTEGER}
				and mom.store_id = hsdd.store_id
				and mom.store_no = hsdd.store_no
			where mom.group_id =#{group_id,jdbcType=INTEGER}
				AND mom.hos_id =#{hos_id,jdbcType=INTEGER}
				AND mom.copy_code =#{copy_code,jdbcType=VARCHAR}
				<if test="begin_date != null and begin_date != ''">
				AND mom.order_date &gt;= to_date(#{begin_date},'yyyy-mm-dd')
				</if>
				<if test="end_date != null and end_date != ''">
				AND mom.order_date &lt;= to_date(#{end_date},'yyyy-mm-dd')
				</if>
				<if test="sup_id != null and sup_id != ''">
				AND mom.sup_id =#{sup_id,jdbcType=INTEGER}
				</if>
				<if test="stocker != null and stocker != ''">
				AND mom.stocker =#{stocker,jdbcType=INTEGER}
				</if>
				<if test="order_code != null and order_code != ''">
				AND mom.order_code like '%'||#{order_code,jdbcType=VARCHAR}||'%'
				</if>
				<if test="brif != null and brif != ''">
				AND mom.brif like '%${brif}%'
				</if>
				<if test="inv_code != null and inv_code !=''">
				AND (mid.inv_code like '${inv_code}%' or mid.inv_name like '%${inv_code}%')
				</if>
				<if test="is_closed !=null and is_closed !='' ">
				and md.is_closed = #{is_closed,jdbcType=INTEGER}
				</if>
				and mid.is_com = 0
				and (mom.state = #{state} or mom.state = 3)
				and (nvl(md.amount,0)-nvl(a_in.in_amount,0)) &gt; 0
				and mom.order_id not in (
					select s.order_id
					from sup_delivery_order_rela s
				)
		) basic_data
		left join mat_store ms 
			on ms.group_id =#{group_id,jdbcType=INTEGER}
			and ms.hos_id = #{hos_id,jdbcType=INTEGER}
			and basic_data.store_id = ms.store_id
		left join hos_emp_dict t1 
			on t1.group_id = ms.group_id
			and t1.hos_id = ms.hos_id
			and t1.emp_id = ms.stock_emp
			and t1.is_stop = 0 
		left join hos_emp_dict t2 
			on t2.group_id = ms.group_id
			and t2.hos_id = ms.hos_id
			and t2.emp_id = ms.manager
			and t2.is_stop = 0 
		where 
			<if test="store_id == null or store_id == '' ">
			EXISTS(
				SELECT 1
				FROM v_user_data_perm
				WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER} 
					AND user_id = #{user_id,jdbcType=INTEGER} 
					AND table_code = 'HOS_STORE_DICT'
					AND perm_code = to_char(basic_data.store_id) 
					AND is_read = 1 AND is_write = 1 
			) 
			</if>
			<if test="store_id != null and store_id != '' ">
			and basic_data.store_id = #{store_id,jdbcType=INTEGER}
			</if>
		order by inv_code
	</select>
	
	<!-- 查询明细材料的信息用于生成条码 -->
	<select id="queryMatInBarcodeByPrintTemlateNewPrint" parameterType="java.util.Map" resultType="java.util.Map">
		select d.in_detail_id as id,
	       d.PRICE,
	       d.NOTE,
	       d.BATCH_NO,
	       d.BAR_CODE,
	       to_char(d.INVA_DATE, 'yyyy-MM-dd') as INVA_DATE,
	       to_char(d.FAC_DATE, 'yyyy-MM-dd') as fac_date,
	       d.DISINFECT_NO,
	       i.INV_CODE,
	       i.INV_NAME,
	       i.INV_MODEL,
	       u.UNIT_NAME as unit_code,
	       f.FAC_NAME,
	       hs.store_code,
	       hs.store_name
	  from mat_in_detail d
	  left join mat_inv_dict i
	    on d.group_id = i.group_id
	   and d.hos_id = i.hos_id
	   and d.copy_code = i.copy_code
	   and d.inv_id = i.inv_id
	   and d.inv_no = i.inv_no
	  left join hos_fac_dict f
	    on i.group_id = f.group_id
	   and i.hos_id = f.hos_id
	   and i.fac_id = f.fac_id
	   and i.fac_no = f.fac_no
	  left join hos_unit u
	    on d.group_id = u.group_id
	   and d.hos_id = u.hos_id
	   and i.unit_code = u.unit_code
	  left join mat_in_main mim
	    on d.in_id = mim.in_id
	   and d.group_id = mim.group_id
	   and d.hos_id = mim.hos_id
	   and d.copy_code = mim.copy_code
	  left join hos_store_dict hs
	    on mim.group_id = hs.group_id
	   and mim.hos_id = hs.hos_id
	   and mim.store_id = hs.store_id
	   and mim.store_no = hs.store_no 
	 <where>
			<if test="group_id != null and group_id != ''">
				AND d.group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND d.hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND d.copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<foreach collection="in_detail_idList" item="in_detail_id" separator="," open="and to_char(d.in_detail_id) in(" close=")">
			       #{in_detail_id,jdbcType=VARCHAR}
			</foreach>
		</where>
	</select>
	
	<select id="queryOrderRelaExists" parameterType="java.util.Map" resultType="java.util.Map"  >
		select group_id,hos_id,copy_code,order_id,in_id,in_amount 
		from mat_in_order_rela
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != ''">
				AND in_id =#{in_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<!-- 配套导入查询-->
	<select id="queryMatch" parameterType="java.util.Map" resultMap="matStorageInDetail" >
		SELECT
			mid.inv_id,
			mid.inv_no,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			mid.unit_code,
			hu.unit_name,
			mid.is_highvalue, 
			mid.is_batch, 
			mid.is_bar, 
			mid.is_per_bar, 
			mid.is_quality, 
			mid.is_single_ven, 
			mid.is_disinfect, 
			mid.plan_price price,
			msmd.amount
		FROM MAT_STORE_MATCH msm
		LEFT JOIN MAT_STORE_MATCH_DETAIL msmd
			ON msm.group_id = msmd.group_id
			AND msm.hos_id = msmd.hos_id
			AND msm.copy_code = msmd.copy_code
			AND msm.store_match_id = msmd.store_match_id
		LEFT JOIN MAT_INV_DICT mid
			ON msmd.group_id = mid.group_id
			AND msmd.hos_id = mid.hos_id
			AND msmd.copy_code = mid.copy_code
			AND msmd.inv_id = mid.inv_id
			AND mid.use_state = 1
			AND mid.is_stop = 0
		LEFT JOIN HOS_UNIT hu
			ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code
		LEFT JOIN HOS_STORE_DICT hsd
			ON msm.group_id = hsd.group_id
		    AND msm.hos_id = hsd.hos_id
		    AND msm.store_id = hsd.store_id
		    AND hsd.is_stop = 0
		WHERE msm.group_id = #{group_id}
			AND msm.hos_id = #{hos_id}
			AND msm.copy_code = #{copy_code}
			AND msm.store_match_id = #{store_match_id}
			AND msm.store_id = #{store_id}
		ORDER BY msmd.inv_id 
	</select>
	
	<!-- 协议导入查询-->
	<select id="queryProtocol" parameterType="java.util.Map" resultMap="matStorageInDetail" >
		select a.inv_id, a.inv_no, b.inv_code, b.inv_name, b.inv_model, b.unit_code, c.unit_name, a.price, 
			b.is_highvalue, b.is_batch, b.is_bar, b.is_per_bar, b.is_quality, b.is_single_ven, b.is_disinfect, a.note
		from mat_protocol_main mpm
		left join mat_protocol_detail a
			on mpm.group_id = a.group_id
			and mpm.hos_id = a.hos_id
			and mpm.copy_code = a.copy_code
			and mpm.protocol_id = a.protocol_id
		left join mat_inv_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.inv_id = b.inv_id
			<!-- and a.inv_no = b.inv_no -->
			and b.use_state = 1
			and b.is_stop = 0
		left join hos_unit c
			on b.group_id = c.group_id
			and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code
		WHERE mpm.group_id = #{group_id,jdbcType=INTEGER}
			AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mpm.protocol_id = #{protocol_id,jdbcType=INTEGER}
			AND mpm.sup_id = #{sup_id,jdbcType=INTEGER}
		ORDER BY a.detail_id 
	</select>
	
	<!-- 更新发票号 -->
	<update id="updateMatStorageInInvoice" parameterType="java.util.Map" >
		UPDATE MAT_IN_MAIN
		SET bill_date = #{bill_date,jdbcType=DATE},
			bill_no = #{bill_no,jdbcType=VARCHAR}
			<if test="bill_state != null">
			, bill_state = #{bill_state,jdbcType=INTEGER}
			</if>
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</update>
	
	<!-- 明细数据是否已经全部维护发票信息 -->
	<select id="existsMatInDetailByInvoice" parameterType="java.util.Map" resultType="java.lang.Integer" >
		select count(1) from mat_in_detail a
		where a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.in_id = #{in_id,jdbcType=INTEGER}
			and not exists(
				select 1 from mat_bill_detail b
				where b.group_id = a.group_id
					and b.hos_id = a.hos_id
					and b.copy_code = a.copy_code
					and b.in_detail_id = a.in_detail_id
			)
	</select>
	
	<!-- 判断发票号是否已被占用 -->
	<select id="existsMatBillByInvoice" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT count(1) 
		FROM mat_bill_main
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND bill_no = #{bill_no,jdbcType=VARCHAR}
	</select>
	
	<!-- 发票主表数据 -->
	<select id="queryMatInMainForBill" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT distinct group_id, hos_id, copy_code, bill_no, bill_date, bill_state, sup_id, sup_no, store_id, bus_type_code
		FROM mat_in_main 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="in_id != '' and in_id != null">
				AND in_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="in_ids != '' and in_ids != null ">
				and in_id in (${in_ids})
			</if>
	</select>
	
	<!-- 获取没有维护发票的明细数据 -->
	<select id="queryMatInDetailByNotBill" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT group_id, hos_id, copy_code, in_id, in_detail_id, 0 payable_money, amount_money bill_money
		FROM mat_in_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="in_id != null and in_id !='' ">
				AND in_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="in_ids != null and in_ids != ''">
				and in_id in (${in_ids})
			</if>
			AND in_detail_id NOT IN (
				SELECT DISTINCT in_detail_id
				FROM mat_bill_detail
				WHERE group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					<if test="in_id != null and in_id !='' ">
						AND in_id = #{in_id,jdbcType=INTEGER}
					</if>
					<if test="in_ids != null and in_ids != ''">
						and in_id in (${in_ids})
					</if>
				)
	</select>
	
	<!-- 维护发票明细列表 -->
	<select id="queryMatInMainByInvoice" parameterType="java.util.Map" resultType="java.util.TreeMap" >
		select mim.group_id, mim.hos_id, mim.copy_code, mim.in_id, mim.in_no, mim.bus_type_code, 
			mbt.bus_type_name, 0 init, hsupd.sup_code, hsupd.sup_name, hsd.store_code, hsd.store_name, 
			hdd.dept_code, hdd.dept_name, sustock.user_name as stocker_name, sumake.user_name as maker_name,
			sucheck.user_name as checker_name, sucon.user_name as confirmer_name, mim.confirm_date, mim.brief, 
			sum(mid.amount_money) as payable_money, sum(mid.amount_money) as bill_money
		from mat_in_main mim
		left join mat_in_detail mid
			on mim.group_id = mid.group_id and mim.hos_id = mid.hos_id
			and mim.copy_code = mid.copy_code and mim.in_id = mid.in_id
		left join mat_bus_type mbt
			on mim.bus_type_code = mbt.bus_type_code
		left join hos_sup_dict hsupd
			on mim.group_id = hsupd.group_id and mim.hos_id = hsupd.hos_id
			and mim.sup_id = hsupd.sup_id and hsupd.is_stop = 0
		left join hos_store_dict hsd
			on mim.group_id = hsd.group_id and mim.hos_id = hsd.hos_id
			and mim.store_id = hsd.store_id and hsd.is_stop = 0
		left join hos_dept_dict hdd
			on mim.group_id = hdd.group_id and mim.hos_id = hdd.hos_id
			and mim.app_dept = hdd.dept_id and hdd.is_stop = 0
		left join sys_user sustock
			on mim.group_id = sustock.group_id and mim.hos_id = sustock.hos_id
			and mim.stocker = sustock.user_id
		left join sys_user sumake
			on mim.group_id = sumake.group_id and mim.hos_id = sumake.hos_id
			and mim.maker = sumake.user_id
		left join sys_user sucheck
			on mim.group_id = sucheck.group_id and mim.hos_id = sucheck.hos_id
			and mim.checker = sucheck.user_id
		left join sys_user sucon
			on mim.group_id = sucon.group_id and mim.hos_id = sucon.hos_id
			and mim.confirmer = sucon.user_id
		where mim.group_id = #{group_id,jdbcType=INTEGER}
			and mim.hos_id = #{hos_id,jdbcType=INTEGER}
			and mim.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mim.in_id = #{in_id,jdbcType=INTEGER}
			AND mid.in_detail_id NOT IN (
				SELECT DISTINCT in_detail_id
				FROM mat_bill_detail
				WHERE group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND in_id = #{in_id,jdbcType=INTEGER})
		group by mim.group_id, mim.hos_id, mim.copy_code, mim.in_id, mim.in_no, mim.bus_type_code, 
			mbt.bus_type_name, hsupd.sup_code, hsupd.sup_name, hsd.store_code, hsd.store_name, hdd.dept_code, 
			hdd.dept_name, sustock.user_name, sumake.user_name, sucheck.user_name, sucon.user_name, mim.confirm_date, mim.brief
	</select>
	
	<!-- 入库主表模板打印 -->
	<select id="queryMatInPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		select a.in_id as id ,a.IN_NO,b.BUS_TYPE_NAME,su.sup_code,su.SUP_NAME,s.STORE_CODE,s.STORE_NAME,u1.user_name MAKER,
		to_char(a.IN_DATE, 'yyyy-MM-dd') IN_DATE,
		#{hos_name,jdbcType=VARCHAR} || s.store_name || #{print_title,jdbcType=VARCHAR} HEAD, 
		to_char(a.CHECK_DATE, 'yyyy-MM-dd') CHECK_DATE,
		u2.user_name CHECKER,u4.user_name CONFIRMER,
		to_char(a.CONFIRM_DATE, 'yyyy-MM-dd') CONFIRM_DATE,
		a.BRIEF,u3.emp_name STOCKER,d1.dept_code APP_DEPT_CODE,d1.dept_name APP_DEPT_NAME,
		t.STOCK_TYPE_NAME,
		p.PROJ_CODE,p.PROJ_NAME,
		a.PROTOCOL_CODE,pt.PROTOCOL_NAME,  
		a.bill_no, to_char(a.bill_date, 'yyyy-MM-dd') BILL_DATE, 
		SUM(mid.amount_money) MONEY_SUM,  
		SUM(mid.amount_money) MONEY_SUM_UPPER,  
		sum(mid.amount) as AMOUNT_SUM,
		a.DELIVERY_CODE,
		hd.emp_name as EXAMINER,a.come_from as fd,m.field_desc as come_from,a.temperature
		from mat_in_main a 
		left join mat_data_dict m on m.data_code = '04014'
        and a.come_from = m.field_value
        and m.field_code = 'IN_FROM' 
		left join mat_in_detail mid
			on a.group_id = mid.group_id and a.hos_id = mid.hos_id 
			and a.copy_code = mid.copy_code and a.in_id = mid.in_id 
		left join hos_proj_dict p on a.group_id=p.group_id and a.hos_id=p.hos_id and a.proj_id=p.proj_id and p.is_stop=0
		left join mat_stock_type t on a.group_id=t.group_id and a.hos_id=t.hos_id and a.copy_code=t.copy_code and a.stock_type_code=t.stock_type_code
		left join mat_bus_type b on a.BUS_TYPE_CODE=b.bus_type_code
		left join hos_store_dict s on a.group_id=s.group_id and a.hos_id=s.hos_id and a.store_id=s.store_id and a.store_no=s.store_no
		left join hos_sup_dict su on a.group_id=su.group_id and a.hos_id=su.hos_id and a.sup_id=su.sup_id and su.is_stop = 0
		<!--保留历史 1 为sup_no关联  0 为is_stop= 0  gaopei -->
		 <if test="show_history == 1">
			    and a.sup_no=su.sup_no
	     </if>
		 <if test="show_history == 0">
		       and su.is_stop = 0
		 </if>  
		left join sys_user u1 on a.group_id=u1.group_id and a.hos_id=u1.hos_id and a.MAKER=u1.user_id
		left join sys_user u2 on a.group_id=u2.group_id and a.hos_id=u2.hos_id and a.CHECKER=u2.user_id
		left join hos_emp_dict u3 on a.group_id=u3.group_id and a.hos_id=u3.hos_id and a.STOCKER=u3.emp_id and u3.is_stop=0
		left join sys_user u4 on a.group_id=u4.group_id and a.hos_id=u4.hos_id and a.CONFIRMER=u4.user_id
		left join hos_dept_dict d1 on a.group_id=d1.group_id and a.hos_id=d1.hos_id and a.app_dept=d1.dept_id and d1.is_stop=0
		left join MAT_PROTOCOL_MAIN pt on a.group_id=pt.group_id and a.hos_id=pt.hos_id and a.copy_code=pt.copy_code and a.protocol_code=pt.protocol_code
		left join hos_emp_dict hd on a.group_id=hd.group_id and a.hos_id=hd.hos_id and a.examiner=hd.emp_id and hd.is_stop=0
		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.in_id=#{in_id,jdbcType=NUMERIC}
		group by a.in_id,a.IN_NO, b.BUS_TYPE_NAME, su.sup_code, su.SUP_NAME, s.STORE_CODE, s.STORE_NAME, 
			u1.user_name, a.IN_DATE, a.CHECK_DATE, u2.user_name, u4.user_name, a.CONFIRM_DATE, 
			a.BRIEF, u3.emp_name, d1.dept_code, d1.dept_name, t.STOCK_TYPE_NAME, p.PROJ_CODE, 
			p.PROJ_NAME, a.PROTOCOL_CODE, pt.PROTOCOL_NAME, a.bill_no, a.bill_date,hd.emp_name,a.DELIVERY_CODE ,a.come_from,m.field_desc,a.temperature
		order by a.in_id desc
        
	</select>
	<!-- 入库合并打印 -->
	<select id="queryMatInByNewCombinePrintByDetail"  parameterType="java.util.Map" resultMap="matStorageInDetail" >
	select d.in_id           as id,
       i.INV_CODE,
       i.INV_NAME ,
       u.UNIT_NAME       as unit_code,
       i.inv_model,
       d.PRICE,
       sum(d.AMOUNT) AMOUNT,
       sum(d.AMOUNT_MONEY) AMOUNT_MONEY,
       d.ALLOT_MONEY,
       f.FAC_CODE        as FAC_CODE,
       f.FAC_NAME,
       d.NOTE,
       mtd.mat_type_name,
       p.PACK_NAME,
       d.NUM_EXCHANGE,
       d.NUM,
       d.SN,
       ld.LOCATION_CODE,
       ld.LOCATION_NAME,
       d.SALE_PRICE,
       d.SALE_MONEY,
       d.SELL_PRICE,
       d.SELL_MONEY,
       d.ALLOT_PRICE,
       micr.CERT_ID,
       micr.CERT_CODE,
       d.DISINFECT_NO,
       i.bid_code
  from mat_in_detail d
  left join mat_inv_dict i
    on d.group_id = i.group_id
   and d.hos_id = i.hos_id
   and d.copy_code = i.copy_code
   and d.inv_id = i.inv_id
   and d.inv_no = i.inv_no
  left join mat_type_dict mtd
    on d.group_id = mtd.group_id
   and d.hos_id = mtd.hos_id
   and d.copy_code = mtd.copy_code
   and i.mat_type_id = mtd.mat_type_id
   and i.mat_type_no = mtd.mat_type_no
  left join mat_location_dict ld
    on d.group_id = ld.group_id
   and d.hos_id = ld.hos_id
   and d.copy_code = ld.copy_code
   and d.location_id = ld.location_id
  left join hos_fac_dict f
    on i.group_id = f.group_id
   and i.hos_id = f.hos_id
   and i.fac_id = f.fac_id
   and i.fac_no = f.fac_no
  left join hos_unit u
    on d.group_id = u.group_id
   and d.hos_id = u.hos_id
   and i.unit_code = u.unit_code
  left join hos_package p
    on d.group_id = p.group_id
   and d.hos_id = p.hos_id
   and d.pack_code = p.pack_code
  left join mat_inv_cert_rela micr
    on micr.group_id = d.group_id
   and micr.hos_id = d.hos_id
   and micr.copy_code = d.copy_code
   and micr.cert_id = d.cert_id
   and micr.inv_id = d.inv_id
  left join mat_inv_cert c
    on micr.group_id = c.group_id
   and micr.hos_id = c.hos_id
   and micr.copy_code = c.copy_code
   and micr.cert_id = c.cert_id
   and micr.cert_code = c.cert_code
 where d.group_id = #{group_id}
   and d.hos_id = #{hos_id}
   and d.copy_code = #{copy_code}
   and d.in_id = #{in_id}
 group by d.in_id, i.INV_CODE,i.INV_NAME,u.UNIT_NAME,d.ALLOT_MONEY,f.FAC_CODE,f.FAC_NAME,
          d.NOTE,
          mtd.mat_type_name,
          p.PACK_NAME,
          d.PRICE,
          d.NUM_EXCHANGE,
          d.NUM,
          d.SN,
          ld.LOCATION_CODE,
          ld.LOCATION_NAME,
          d.SALE_PRICE,
          d.SALE_MONEY,
          d.SELL_PRICE,
          d.SELL_MONEY,
          d.ALLOT_PRICE,
          micr.CERT_ID,
          micr.CERT_CODE,
          d.DISINFECT_NO,
          i.bid_code,
          i.inv_model,
          c.end_date
 order by d.in_id

</select>
	<select id="queryMatInPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		select a.in_id as id,a.IN_NO,b.BUS_TYPE_NAME,su.sup_code,su.SUP_NAME,s.STORE_CODE,s.STORE_NAME,u1.user_name MAKER,
		to_char(a.IN_DATE, 'yyyy-MM-dd') in_date,
		#{hos_name,jdbcType=VARCHAR} || s.store_name || #{print_title,jdbcType=VARCHAR} HEAD,  
		to_char(a.CHECK_DATE, 'yyyy-MM-dd') check_date,
		u2.user_name CHECKER,u4.user_name CONFIRMER,
		to_char(a.CONFIRM_DATE, 'yyyy-MM-dd') confirm_date,
		a.BRIEF,hed.emp_name STOCKER,d1.dept_code APP_DEPT_CODE,d1.dept_name APP_DEPT_NAME,
		t.STOCK_TYPE_NAME,
		p.PROJ_CODE,p.PROJ_NAME,
		a.PROTOCOL_CODE,pt.PROTOCOL_NAME,
		a.bill_no, to_char(a.bill_date, 'yyyy-MM-dd') bill_date, 
		SUM(mid.amount_money) MONEY_SUM,  
		SUM(mid.amount_money) MONEY_SUM_UPPER, 
		sum(mid.amount) as AMOUNT_SUM,
		a.DELIVERY_CODE,
		hd.emp_name as EXAMINER,a.come_from as fd,m.field_desc as come_from
		from mat_in_main a 
		left join mat_data_dict m on m.data_code = '04014'
        and a.come_from = m.field_value
        and m.field_code = 'IN_FROM' 
		left join mat_in_detail mid
			on a.group_id = mid.group_id and a.hos_id = mid.hos_id 
			and a.copy_code = mid.copy_code and a.in_id = mid.in_id 
		left join hos_proj_dict p on a.group_id=p.group_id and a.hos_id=p.hos_id and a.proj_id=p.proj_id and p.is_stop=0
		left join mat_stock_type t on a.group_id=t.group_id and a.hos_id=t.hos_id and a.copy_code=t.copy_code and a.stock_type_code=t.stock_type_code
		left join mat_bus_type b on a.BUS_TYPE_CODE=b.bus_type_code
		left join hos_store_dict s on a.group_id=s.group_id and a.hos_id=s.hos_id and a.store_id=s.store_id and a.store_no=s.store_no
		left join hos_sup_dict su on a.group_id=su.group_id and a.hos_id=su.hos_id and a.sup_id=su.sup_id 
		<!--保留历史 1 为sup_no关联  0 为is_stop= 0  gaopei -->
		 <if test="show_history == 1">
			   and a.sup_no=su.sup_no
	     </if>
		 <if test="show_history == 0">
		       and su.is_stop = 0
		 </if>  
		left join sys_user u1 on a.group_id=u1.group_id and a.hos_id=u1.hos_id and a.MAKER=u1.user_id
		left join sys_user u2 on a.group_id=u2.group_id and a.hos_id=u2.hos_id and a.CHECKER=u2.user_id
		left join hos_emp_dict hed on a.group_id=hed.group_id and a.hos_id=hed.hos_id and a.stocker =hed.emp_id and hed.is_stop=0
		left join sys_user u4 on a.group_id=u4.group_id and a.hos_id=u4.hos_id and a.CONFIRMER=u4.user_id
		left join hos_dept_dict d1 on a.group_id=d1.group_id and a.hos_id=d1.hos_id and a.app_dept=d1.dept_id and d1.is_stop=0
		left join MAT_PROTOCOL_MAIN pt on a.group_id=pt.group_id and a.hos_id=pt.hos_id and a.copy_code=pt.copy_code and a.protocol_code=pt.protocol_code
		left join hos_emp_dict hd on a.group_id=hd.group_id and a.hos_id=hd.hos_id and a.examiner=hd.emp_id and hd.is_stop=0
		where a.group_id = #{group_id,jdbcType=NUMERIC}
			and a.hos_id = #{hos_id,jdbcType=NUMERIC}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.in_id in  (${paraId})
		group by a.in_id, a.IN_NO, b.BUS_TYPE_NAME, su.sup_code, su.SUP_NAME, s.STORE_CODE, s.STORE_NAME, 
			u1.user_name, a.IN_DATE, a.CHECK_DATE, u2.user_name, u4.user_name, a.CONFIRM_DATE, 
			a.BRIEF, hed.emp_name, d1.dept_code, d1.dept_name, t.STOCK_TYPE_NAME, p.PROJ_CODE, 
			p.PROJ_NAME, a.PROTOCOL_CODE, pt.PROTOCOL_NAME, a.bill_no, a.bill_date ,hd.emp_name,a.DELIVERY_CODE,a.come_from,m.field_desc
		order by a.in_id 	
			
	</select>
	
	<!-- 入库明细表模板打印 -->
	<select id="queryMatInPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		select d.in_id as id,i.INV_CODE,i.INV_NAME,i.INV_MODEL,u.UNIT_NAME unit_code ,d.PRICE,d.AMOUNT,d.AMOUNT_MONEY,d.ALLOT_MONEY,
		f.FAC_CODE FAC_CODE,f.FAC_NAME,d.NOTE, mtd.mat_type_name as MAT_TYPE_NAME,mtd.mat_type_code as MAT_TYPE_CODE, 
		p.PACK_NAME,d.NUM_EXCHANGE,d.NUM,d.BATCH_SN,d.BATCH_NO,d.SN,d.BAR_CODE,
		to_char(d.INVA_DATE,'yyyy-MM-dd') as INVA_DATE, 
		ld.LOCATION_CODE,ld.LOCATION_NAME,
		to_char(d.DISINFECT_DATE,'yyyy-MM-dd') as DISINFECT_DATE,
		d.SALE_PRICE,d.SALE_MONEY,d.SELL_PRICE,
		d.SELL_MONEY,d.ALLOT_PRICE,d.CERT_ID, d.CERT_CODE,to_char(d.FAC_DATE, 'yyyy-MM-dd') fac_date,
		d.DISINFECT_NO, i.bid_code,to_char(c.start_date,'yyyy-MM-dd') as start_date,to_char(c.end_date,'yyyy-MM-dd') as end_date, 
   		 RANK () OVER (ORDER BY d.in_detail_id) AS rowno,
   		 mft.fim_type_name,
   		 case b.is_sec_whg
            when 0 then '否'
            when 1 then '是'
          end as is_sec_whg,
		 case b.is_per_bar
			when 0 then '否'
            when 1 then '是'
          end as is_per_bar,d.pack_price
		from mat_in_detail d 
		left join mat_inv_dict i on d.group_id=i.group_id and d.hos_id=i.hos_id and d.copy_code=i.copy_code and d.inv_id=i.inv_id and d.inv_no=i.inv_no
		left join mat_inv_dict b on d.group_id = b.group_id
			and d.hos_id = b.hos_id
			and d.copy_code = b.copy_code
			and d.inv_id = b.inv_id
			and d.inv_no = b.inv_no 
		left join mat_type_dict mtd 
			on d.group_id = mtd.group_id and d.hos_id = mtd.hos_id
			and d.copy_code = mtd.copy_code and i.mat_type_id = mtd.mat_type_id 
			and i.mat_type_no = mtd.mat_type_no 
	    left join mat_fim_type mft
			    on mtd.group_id=mft.group_id and mtd.hos_id=mft.hos_id
			    and mtd.copy_code=mft.copy_code and mtd.fim_type_code=mft.fim_type_code
			    and mft.is_stop=0
		left join mat_store_inv msi on d.group_id = msi.group_id
                 and d.hos_id = msi.hos_id
                 and d.copy_code = msi.copy_code
                 and d.inv_id = msi.inv_id
                 and msi.store_id = #{store_id,jdbcType=INTEGER}
        left join mat_location_dict ld on msi.group_id = ld.group_id and msi.hos_id = ld.hos_id and msi.copy_code = ld.copy_code and msi.location_id = ld.location_id 
		left join hos_fac_dict f on i.group_id = f.group_id AND i.hos_id = f.hos_id and i.fac_id=f.fac_id and i.fac_no = f.fac_no
		left join hos_unit u on d.group_id=u.group_id and d.hos_id=u.hos_id and i.unit_code=u.unit_code
		left join hos_package p on d.group_id=p.group_id and d.hos_id=p.hos_id and d.pack_code=p.pack_code
    left join mat_inv_cert_rela micr on micr.group_id = d.group_id and micr.hos_id = d.hos_id and micr.copy_code = d.copy_code and micr.cert_id=d.cert_id and micr.inv_id=d.inv_id
    left join mat_inv_cert c on micr.group_id=c.group_id and micr.hos_id=c.hos_id and micr.copy_code=c.copy_code and micr.cert_id=c.cert_id and micr.cert_code=c.cert_code
  
		where d.group_id = #{group_id,jdbcType=NUMERIC}
			and d.hos_id = #{hos_id,jdbcType=NUMERIC}
			and d.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="p_num ==1">
				and d.in_id in (${paraId})
				
			</if>
			<if test="p_num ==0">
				and d.in_id=#{in_id,jdbcType=NUMERIC}
			</if>	
			 order by d.in_detail_id,ld.location_name,i.inv_code 
	</select>
	
	<!-- 入库明细表模板打印按物资类别 -->
	<select id="queryMatInPrintTemlateByDetailType" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT tmp.*, rank() over (order by id, fim_type_code, in_detail_id desc) as rowno 
		FROM( 
			select d.in_id as id, to_char(i.INV_CODE) inv_code,to_char(i.INV_NAME) as inv_name, i.INV_MODEL, u.UNIT_NAME unit_code,
				d.PRICE, d.AMOUNT, d.AMOUNT_MONEY, d.ALLOT_MONEY, 
				f.FAC_CODE FAC_CODE, f.FAC_NAME, d.NOTE, mtd.mat_type_name, 
				p.PACK_NAME, d.NUM_EXCHANGE, d.NUM, d.BATCH_SN, d.BATCH_NO, d.SN, d.BAR_CODE,
				to_char(d.INVA_DATE,'yyyy-MM-dd') as INVA_DATE, 
				ld.LOCATION_CODE, ld.LOCATION_NAME, 
				to_char(d.DISINFECT_DATE,'yyyy-MM-dd') as DISINFECT_DATE, 
				d.SALE_PRICE, d.SALE_MONEY, d.SELL_PRICE, 
				d.SELL_MONEY, d.ALLOT_PRICE, d.CERT_ID, d.CERT_CODE, to_char(d.FAC_DATE, 'yyyy-MM-dd') fac_date, 
				d.DISINFECT_NO, i.bid_code, to_char(c.start_date,'yyyy-MM-dd') as start_date, 
				to_char(c.end_date,'yyyy-MM-dd') as end_date, mft.fim_type_code, mft.fim_type_name, d.in_detail_id 
			from mat_in_detail d 
			left join mat_inv_dict i on d.group_id=i.group_id and d.hos_id=i.hos_id and d.copy_code=i.copy_code and d.inv_id=i.inv_id and d.inv_no=i.inv_no
			left join mat_type_dict mtd 
				on d.group_id = mtd.group_id and d.hos_id = mtd.hos_id
				and d.copy_code = mtd.copy_code and i.mat_type_id = mtd.mat_type_id 
				and i.mat_type_no = mtd.mat_type_no 
			 left join mat_fim_type mft
			    on mtd.group_id=mft.group_id and mtd.hos_id=mft.hos_id
			    and mtd.copy_code=mft.copy_code and mtd.fim_type_code=mft.fim_type_code
			    and mft.is_stop=0
			left join mat_store_inv msi on d.group_id = msi.group_id
	                 and d.hos_id = msi.hos_id
	                 and d.copy_code = msi.copy_code
	                 and d.inv_id = msi.inv_id
	                 and msi.store_id = #{store_id,jdbcType=INTEGER}
	        left join mat_location_dict ld on msi.group_id = ld.group_id and msi.hos_id = ld.hos_id and msi.copy_code = ld.copy_code and msi.location_id = ld.location_id 
			left join hos_fac_dict f on i.group_id = f.group_id AND i.hos_id = f.hos_id and i.fac_id=f.fac_id and i.fac_no = f.fac_no
			left join hos_unit u on d.group_id=u.group_id and d.hos_id=u.hos_id and i.unit_code=u.unit_code
			left join hos_package p on d.group_id=p.group_id and d.hos_id=p.hos_id and d.pack_code=p.pack_code
		    left join mat_inv_cert_rela micr on micr.group_id = d.group_id and micr.hos_id = d.hos_id and micr.copy_code = d.copy_code and micr.cert_id=d.cert_id and micr.inv_id=d.inv_id
		    left join mat_inv_cert c on micr.group_id=c.group_id and micr.hos_id=c.hos_id and micr.copy_code=c.copy_code and micr.cert_id=c.cert_id and micr.cert_code=c.cert_code
			<!-- left join mat_fim_type mft 
				on mtd.group_id = mft.group_id 
				and mtd.hos_id = mft.hos_id 
				and mtd.copy_code = mft.copy_code
				and mtd.fim_type_code = mft.fim_type_code -->
			where d.group_id = #{group_id,jdbcType=NUMERIC}
				and d.hos_id = #{hos_id,jdbcType=NUMERIC}
				and d.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="p_num ==1">
					and d.in_id in (${paraId})
					
				</if>
				<if test="p_num ==0">
					and d.in_id=#{in_id,jdbcType=NUMERIC}
				</if>	 
			union all 
			select d.in_id,  NULL,to_char('小计：'), NULL, NULL,
				NULL, NULL, SUM(d.amount_money), SUM(d.allot_money), 
				NULL, NULL, NULL, NULL, 
				NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, 
				NULL, NULL, 
				NULL, 
				NULL, SUM(d.sale_money), NULL, 
				SUM(d.sell_money), NULL, NULL, NULL, NULL, 
				NULL, NULL, NULL, 
				NULL, mft.fim_type_code, mft.fim_type_name, 0 
			from mat_in_detail d 
			left join mat_inv_dict i 
				on d.group_id=i.group_id 
				and d.hos_id=i.hos_id 
				and d.copy_code=i.copy_code 
				and d.inv_id=i.inv_id 
				and d.inv_no=i.inv_no
			left join mat_type_dict mtd 
				on d.group_id = mtd.group_id 
				and d.hos_id = mtd.hos_id
				and d.copy_code = mtd.copy_code 
				and i.mat_type_id = mtd.mat_type_id 
				and i.mat_type_no = mtd.mat_type_no 
			left join mat_fim_type mft 
				on mtd.group_id = mft.group_id 
				and mtd.hos_id = mft.hos_id 
				and mtd.copy_code = mft.copy_code
				and mtd.fim_type_code = mft.fim_type_code
			where d.group_id = #{group_id,jdbcType=NUMERIC}
				and d.hos_id = #{hos_id,jdbcType=NUMERIC}
				and d.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="p_num ==1">
					and d.in_id in (${paraId})
					
				</if>
				<if test="p_num ==0">
					and d.in_id=#{in_id,jdbcType=NUMERIC}
				</if>	
			group by d.in_id,  mft.fim_type_code ,mft.fim_type_name
		) tmp
		
		 order by location_name,inv_code 
	</select>
	
	<!-- 冲账查主表数据 -->
	<select id="queryMatInOffsetMainByCode" parameterType="java.util.Map" resultType="java.util.Map" >
		select mim.group_id, mim.hos_id, mim.copy_code, mim.bus_type_code, 
			mim.sup_id, mim.sup_no, hsd.sup_code, hsd.sup_name, 
			mim.stocker, hed.emp_code, hed.emp_name, 
			mim.store_id, mim.store_no, hs.store_code, hs.store_name, 
			mim.bill_no, mim.bill_date, mim.delivery_code, 
			mim.app_dept, hdd.dept_code, hdd.dept_name, mim.stock_type_code, 
			mim.proj_id, hpd.proj_code, hpd.proj_name, 
			mim.protocol_code, mpm.protocol_id, mpm.protocol_name, 
			mim.examiner, hd.emp_code examiner_code, hd.emp_name examiner_name 
		from mat_in_main mim
		left join hos_sup_dict hsd on mim.group_id = hsd.group_id  and mim.hos_id=hsd.hos_id
		     and mim.sup_id = hsd.sup_id and mim.sup_no=hsd.sup_no
		left join hos_store_dict hs on mim.group_id = hs.group_id and mim.hos_id =hs.hos_id
		     and mim.store_id=hs.store_id and mim.store_no=hs.store_no 
		left join hos_dept_dict hdd on mim.group_id = hdd.group_id and mim.hos_id=hdd.hos_id 
		     and mim.app_dept = hdd.dept_id 
		left join hos_emp_dict hed on mim.group_id = hed.group_id and mim.hos_id= hed.hos_id
		     and mim.stocker = hed.emp_id and hed.is_stop = 0 
		left join hos_proj_dict hpd on mim.group_id = hpd.group_id and mim.hos_id = hpd.hos_id
		     and mim.proj_id = hpd.proj_id 
		left join mat_protocol_main mpm on mim.group_id = mpm.group_id and mim.hos_id = mpm.hos_id
		     and mim.copy_code = mpm.copy_code and mim.protocol_code = mpm.protocol_code
		left join hos_emp_dict hd on mim.group_id=mim.group_id and mim.hos_id=hd.hos_id
			and mim.examiner=hd.emp_id and hd.is_stop=0
		WHERE mim.group_id = #{group_id,jdbcType=NUMERIC}
			AND mim.hos_id = #{hos_id,jdbcType=NUMERIC}
			AND mim.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mim.in_id = #{in_id,jdbcType=NUMERIC}
	</select>
	
	<!-- 冲账查明细表数据 -->
	<select id="mergeOffsetMatInMain" parameterType="java.util.Map" resultType="java.util.Map" >
		WITH  tmp_imme AS(
	      SELECT inv_id, batch_sn, batch_no, bar_code,price, SUM(amount) AS amount
	      FROM (
	        SELECT inv_id, batch_sn, batch_no, bar_code,price, SUM(nvl(amount, 0)) AS amount
	        FROM mat_out_main mom
	        LEFT JOIN mat_out_detail matod 
	          ON mom.group_id = matod.group_id
	          AND mom.hos_id = matod.hos_id
	          AND mom.copy_code = matod.copy_code
	          AND mom.out_id = matod.out_id 
	        WHERE matod.group_id = #{group_id,jdbcType=INTEGER}
	          AND matod.hos_id = #{hos_id,jdbcType=INTEGER}
	          AND matod.copy_code = #{copy_code,jdbcType=VARCHAR}
	          AND mom.store_id = #{store_id,jdbcType=INTEGER}
	          <![CDATA[
	          AND mom.state < 3
	          AND mom.bus_type_code <> '21'
	          AND matod.amount_money > 0
	          ]]>
	        GROUP BY inv_id, batch_sn, batch_no, bar_code,price
	        UNION ALL
	        SELECT inv_id AS inv_id, batch_sn AS batch_sn, batch_no AS batch_no, bar_code AS bar_code,price, -1 * SUM(nvl(amount, 0)) AS amount
	        FROM mat_in_main mim
	        LEFT JOIN mat_in_detail matid 
	          ON mim.group_id = matid.group_id
	          AND mim.hos_id = matid.hos_id
	          AND mim.copy_code = matid.copy_code
	          AND mim.in_id = matid.in_id 
	        WHERE matid.group_id = #{group_id,jdbcType=INTEGER}
	          AND matid.hos_id = #{hos_id,jdbcType=INTEGER}
	          AND matid.copy_code = #{copy_code,jdbcType=VARCHAR}
	          AND mim.store_id = #{store_id,jdbcType=INTEGER}
	          <![CDATA[
	          AND mim.in_id not in ${in_ids} --退货单加载使用
	          AND mim.state < 3
	          AND mim.bus_type_code  in ('10','12','16','22')
	          and matid.amount_money < 0
	          ]]>
	        GROUP BY inv_id, batch_sn, batch_no, bar_code,price
	      )
	      GROUP BY inv_id, batch_sn, batch_no, bar_code,price
	      ORDER BY inv_id ASC
	    ), 
	    tmp_detail AS(
	      SELECT midet.group_id, midet.hos_id, midet.copy_code, midet.in_id, midet.in_detail_id, 
	        midet.inv_id, midet.inv_no, midet.batch_no, midet.bar_code, midet.batch_sn, midet.inva_date, 
	        midet.disinfect_date, midet.location_id, midet.note, midet.price, midet.amount, midet.amount_money, 
	        midet.sale_price, midet.sale_money, midet.sell_price, midet.sell_money, midet.allot_price, midet.allot_money, 
	        mfb.left_amount AS cur_amount, mfb.left_amount - nvl(imme.amount, 0) AS imme_amount,midet.cert_id
	      FROM MAT_IN_DETAIL midet
	      LEFT JOIN mat_fifo_balance mfb 
	        ON midet.group_id = mfb.group_id
	        AND midet.hos_id = mfb.hos_id
	        AND midet.copy_code = mfb.copy_code
	        AND midet.inv_id = mfb.inv_id
	        AND midet.batch_sn = mfb.batch_sn
	        AND midet.batch_no = mfb.batch_no
	        AND midet.bar_code = mfb.bar_code
	        and nvl(midet.price,0) = nvl(mfb.price,0)
	        AND mfb.store_id = #{store_id,jdbcType=INTEGER}
	      LEFT JOIN tmp_imme imme 
	        ON midet.inv_id = imme.inv_id
	        AND midet.batch_sn = imme.batch_sn
	        AND midet.batch_no = imme.batch_no
	        AND midet.bar_code = imme.bar_code
	        and nvl(midet.price,0) = nvl(imme.price,0)
	      WHERE midet.group_id = #{group_id,jdbcType=INTEGER}
	        AND midet.hos_id = #{hos_id,jdbcType=INTEGER}
	        AND midet.copy_code = #{copy_code,jdbcType=VARCHAR}
	        AND midet.in_id in ${in_ids}
	      ORDER BY midet.in_detail_id ASC
	    ),
	    tmp_main AS(
	      SELECT main.group_id, main.hos_id, main.copy_code, <!-- main.in_id, --> main.inv_id, main.inv_no, 
	        main.batch_no, main.bar_code, main.inva_date, main.disinfect_date, main.location_id, 
	        main.note, main.price, main.amount, main.amount_money, main.sale_price, main.sale_money, 
	        main.sell_price, main.sell_money, main.allot_price, main.allot_money, 
	        SUM(mfb.left_amount) AS cur_amount, SUM(mfb.left_amount) - main.out_amount AS imme_amount
	      FROM (
	        SELECT detail.*, nvl(imme.amount, 0) AS out_amount
	        FROM (
	          SELECT group_id, hos_id, copy_code, <!-- in_id, --> inv_id, inv_no, batch_no, bar_code, inva_date, 
	            disinfect_date, location_id, note, price, SUM(amount) AS amount, SUM(amount_money) AS amount_money, 
	            sale_price, SUM(sale_money) AS sale_money, sell_price, SUM(sell_money) AS sell_money, 
	            allot_price, SUM(allot_money) AS allot_money 
	          FROM tmp_detail
	          GROUP BY group_id, hos_id, copy_code, <!-- in_id, --> inv_id, inv_no, batch_no, bar_code, inva_date, 
	            disinfect_date, location_id, note, price, sell_price, sale_price, allot_price
	        ) detail
	        LEFT JOIN (
	          SELECT inv_id, batch_no, bar_code,price, SUM(amount) AS amount
	          FROM tmp_imme
	          GROUP BY inv_id, batch_no, bar_code,price
	        ) imme 
	          ON detail.inv_id = imme.inv_id
	          AND detail.batch_no = imme.batch_no
	          AND detail.bar_code = imme.bar_code 
	          and nvl(detail.price,0) = nvl(imme.price,0)
	      ) main
	      LEFT JOIN mat_fifo_balance mfb 
	        ON main.group_id = mfb.group_id
	        AND main.hos_id = mfb.hos_id
	        AND main.copy_code = mfb.copy_code
	        AND main.inv_id = mfb.inv_id
	        AND main.batch_no = mfb.batch_no
	        AND main.bar_code = mfb.bar_code
	        and nvl(main.price,0) = nvl(mfb.price,0)
	        AND mfb.store_id = #{store_id,jdbcType=INTEGER}
	      GROUP BY main.group_id, main.hos_id, main.copy_code, <!-- main.in_id, --> main.inv_id, main.inv_no, 
	        main.batch_no, main.bar_code, main.inva_date, main.disinfect_date, main.location_id, 
	        main.note, main.price, main.amount, main.amount_money, main.sale_price, main.sale_money, 
	        main.sell_price, main.sell_money, main.allot_price, main.allot_money, main.out_amount
	    )
	    SELECT main.group_id, main.hos_id, main.copy_code, <!-- main.in_id, --> main.inv_id, main.inv_no, main.batch_no, 
	      main.price, main.cur_amount, main.imme_amount, (-1)*main.amount as amount, (-1)*main.amount_money as amount_money, 
	      main.sale_price,(-1)*main.sale_money sale_money, main.sell_price, (-1)*main.sell_money sell_money, main.allot_price, 
	      (-1)*main.allot_money allot_money, main.bar_code,main.inva_date, main.disinfect_date, main.location_id, main.note, 
	      mid.inv_code, mid.inv_name, mid.inv_model,mid.unit_code, hu.unit_name, mld.location_code, mld.location_name, 
	      (-1)*main.amount as sum_amount,
	      hfd.fac_name,ict.cert_id,ict.cert_code, 
	      '[' || to_char(WM_CONCAT('{"in_detail_id":' || detail.in_detail_id || ',"inv_id":' || detail.inv_id 
	      || ',"inv_code":"' || to_char(mid.inv_code) || '","inv_name":"' || to_char(mid.inv_name) 
	      || '","batch_sn":' || detail.batch_sn || ',"cur_amount":' || detail.cur_amount 
	      || ',"imme_amount":' || detail.imme_amount || ',"amount":' || (-1)*detail.amount 
	      || ',"price":' || detail.price || ',"amount_money":' || (-1)*detail.amount_money 
	      || ',"sale_price":' || detail.sale_price || ',"sale_money":' || (-1)*detail.sale_money 
	      || ',"sell_price":' || detail.sell_price || ',"sell_money":' || (-1)*detail.sell_money 
	      || '}')) || ']' AS inv_detail_data
	    FROM tmp_main main
	    LEFT JOIN mat_inv_dict mid 
	      ON main.group_id = mid.group_id
	      AND main.hos_id = mid.hos_id
	      AND main.copy_code = mid.copy_code
	      AND main.inv_id = mid.inv_id
	      AND main.inv_no = mid.inv_no
	    LEFT JOIN hos_unit hu 
	      ON mid.group_id = hu.group_id
	      AND mid.hos_id = hu.hos_id
	      AND mid.unit_code = hu.unit_code 
	    LEFT JOIN mat_location_dict mld 
	      ON main.group_id = mld.group_id
	      AND main.hos_id = mld.hos_id
	      AND main.copy_code = mld.copy_code
	      AND main.location_id = mld.location_id
	      AND mld.is_stop = 0 
	    LEFT JOIN tmp_detail detail
	      ON main.inv_id = detail.inv_id
	      AND main.batch_no = detail.batch_no
	      AND main.price = detail.price
	      AND nvl(main.bar_code, '-') = nvl(detail.bar_code, '-') 
	    left join hos_fac_dict hfd on hfd.group_id = mid.group_id
	      and hfd.hos_id = mid.hos_id
	      and hfd.fac_id = mid.fac_id
	      and hfd.fac_no = mid.fac_no
	    left join mat_inv_cert_rela ict 
	         on ict.group_id = detail.group_id and ict.hos_id = detail.hos_id
	         and ict.copy_code = detail.copy_code and ict.inv_id = detail.inv_id
	         and ict.cert_id = detail.cert_id
	    GROUP BY main.group_id, main.hos_id, main.copy_code, <!-- main.in_id, --> main.inv_id, main.inv_no, main.batch_no, 
	      main.price, main.cur_amount, main.imme_amount, main.amount, main.amount_money, main.sale_price, 
	      main.sale_money, main.sell_price, main.sell_money, main.allot_price, main.allot_money, main.bar_code, 
	      main.inva_date, main.disinfect_date, main.location_id, main.note, mid.inv_code, mid.inv_name, mid.inv_model, 
	      mid.unit_code, hu.unit_name,hfd.fac_name,ict.cert_id,ict.cert_code, mld.location_code, mld.location_name, main.amount
	    ORDER BY inv_detail_data
		
	</select>
	
	
	<select id="queryOrderIds" parameterType="java.util.Map" resultType="String">
		with order_tmp as (
				 select distinct group_id,hos_id,copy_code,order_id,sum(amount) order_amount
     			 from  mat_order_detail 
     			 <where>
					<if test="group_id != null and group_id !='' "> 
						and group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id != null and hos_id !='' "> 
						and hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code !='' "> 
						and copy_code = #{copy_code,jdbcType=VARCHAR}
					</if>
				</where>
			group by group_id,hos_id,copy_code,order_id
		),in_tmp as (
			select group_id,hos_id,copy_code,order_id,sum(in_amount) in_amount 
			from mat_in_order_rela
			<where>
				<if test="group_id != null and group_id !='' "> 
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id !='' "> 
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code !='' "> 
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="flag ==1">
					and in_id = #{in_id,jdbcType=INTEGER}
				</if>
			</where>
			group by group_id,hos_id,copy_code,order_id
		)
		
		select to_char(wm_concat(ot.order_id))
		from order_tmp ot
		left join in_tmp it on ot.group_id=it.group_id and ot.hos_id=it.hos_id 
			and ot.copy_code=it.copy_code and ot.order_id =it.order_id
		left join mat_order_main mom on ot.group_id = mom.group_id and ot.hos_id = mom.hos_id
		    and ot.copy_code = mom.copy_code and ot.order_id = mom.order_id
		<where>
			<if test="whereSql !=null and whereSql !='' ">
				${whereSql}
			</if>
			<if test="state != null and state !='' ">
				and mom.state = #{state}
			</if>
		</where>
	</select>
	
	<select id="queryOrderIdById" parameterType="java.util.Map" resultType="String">
		with order_tmp as (
				 select distinct a.group_id,a.hos_id,a.copy_code,a.order_id,sum(a.amount) order_amount
     			 from mat_order_detail b 
     			 <where>
					<if test="group_id != null and group_id !='' "> 
						and group_id = #{group_id,jdbcType=INTEGER}
					</if>
					<if test="hos_id != null and hos_id !='' "> 
						and hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code !='' "> 
						and copy_code = #{copy_code,jdbcType=VARCHAR}
					</if>
				</where>
			group by a.group_id,a.hos_id,a.copy_code,a.order_id
		),in_tmp as (
			select group_id,hos_id,copy_code,order_id,sum(in_amount) in_amount 
			from mat_in_order_rela
			<where>
				<if test="group_id != null and group_id !='' "> 
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id !='' "> 
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code !='' "> 
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="flag ==1">
					<if test="in_id !=null and in_id !='' ">
						and in_id = #{in_id,jdbcType=INTEGER}
					</if>
				</if>
			</where>
			group by group_id,hos_id,copy_code,order_id
		)
		
		select to_char(wm_concat(it.order_id))
		from in_tmp it
		left join order_tmp ot on ot.group_id = it.group_id
			and ot.hos_id = it.hos_id
			and ot.copy_code = it.copy_code
			and ot.order_id = it.order_id 
		left join mat_order_main mom on it.group_id = mom.group_id
			and it.hos_id = mom.hos_id
			and it.copy_code = mom.copy_code
			and it.order_id = mom.order_id
		<where>
			(ot.order_amount - it.in_amount) != 0
			<if test="state != null and state !='' ">
				and mom.state = #{state}
			</if>
		</where>
	</select>
	<!-- 更新订单的状态 -->
	<select id="updateOrderStates" parameterType="java.util.Map">
		update mat_order_main set state = #{state}
		<where>
			<if test="group_id != null and group_id !='' "> 
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' "> 
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' "> 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="orderIds != null and orderIds !='' "> 
				and order_id in (${orderIds})
			</if>
		</where>
	</select>
	
	<!-- 删除入库单时查询订单id -->
	<select id="queryMatOrderId" parameterType="java.util.List" resultType="String">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.in_id,jdbcType=VARCHAR} as in_id
				from dual
			</foreach>
		)
		select to_char(wm_concat(order_id)) 
		from (
			select distinct b.order_id
      		from list_temp a
      		left join mat_in_order_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id 
        		and a.copy_code=b.copy_code and a.in_id = b.in_id
		)
	</select>
	
	<!-- 获取删除的order_id -->
	<select id="queryDeleteOldIds"  parameterType="java.util.Map" resultType="String">
		select  to_char(wm_concat(order_id)) 
		from mat_in_order_rela
		<where>
			<if test="group_id != null and group_id !='' "> 
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' "> 
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' "> 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id !='' "> 
				and in_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="orderNewIds != null and orderNewIds !='' "> 
				and order_id not in (${orderNewIds})
			</if>
		</where>
	</select>
	
	<select id="queryModeStartDate" parameterType="java.util.Map" resultType="String">
		select start_year||'-'||start_month||'-01'
		from sys_mod_start
		<where>
			<if test="group_id != null and group_id !='' ">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !='' "> 
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' "> 
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="mod_code != null and mod_code !='' "> 
				and mod_code = #{mod_code,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<!-- 入库明细查询 -->
	<select id="queryDetails" parameterType="java.util.Map" resultType="java.util.Map" >
		select null as group_id,
       null as hos_id,
       null as copy_code,
       null as in_id,
       '合计' as in_no,
       null as store_name,
       null as delivery_code,
       null as bid_code,
       null as inv_code,
       null as inv_name,
       null as unit_name,
       null as inv_model,
       null as price,
       sum(a.amount) as amount,
       sum(a.amount_money) as amount_money,
       null as batch_no,
       null as bar_code,
       null as sup_name,
       null as fac_name,
       null as state_name ,
       null as bill_no,
       null as maker_name ,
       null as in_date,
       null as confirm_date,
       null as bus_type_name,
       null as inva_date,
       null as fac_date,
       null as temperature,null as mat_type_name
 from mat_in_detail a
left join mat_in_main b on a.group_id=b.group_id
and a.hos_id=b.hos_id
and a.copy_code=b.copy_code
and a.in_id=b.in_id
left join mat_inv_dict d on a.group_id=d.group_id
and a.hos_id=d.hos_id
and a.copy_code=d.copy_code
and a.inv_id=d.inv_id
and a.inv_no=d.inv_no
left join mat_sys_list h on h.table_code = 'MAT_IN_MAIN' 
and h.field_code = 'STATE' 
and b.state = h.field_value
left join mat_bus_type j on b.bus_type_code=j.bus_type_code
and j.sel_flag='in' 
where a.group_id=#{group_id,jdbcType=INTEGER}
      and a.hos_id=#{hos_id,jdbcType=INTEGER}
      and a.copy_code=#{copy_code,jdbcType=VARCHAR} 
      <if test="begin_in_date != null and begin_in_date != ''">
          AND to_char(b.in_date,'yyyy-MM-dd') &gt;= #{begin_in_date}
        </if>
        <if test="end_in_date != null and end_in_date != ''">
          AND to_char(b.in_date,'yyyy-MM-dd') &lt;= #{end_in_date}
        </if>
        <if test="begin_confirm_date != null and begin_confirm_date != ''">
          AND to_char(b.confirm_date,'yyyy-MM-dd') &gt;= #{begin_confirm_date}
        </if>
        <if test="end_confirm_date != null and end_confirm_date != ''">
          AND to_char(b.confirm_date,'yyyy-MM-dd') &lt;= #{end_confirm_date}
        </if>
        <if test="bus_type_code != null and bus_type_code != ''">
          AND b.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
        </if> 
        <if test="state != null and state != ''">
          AND b.state = #{state,jdbcType=VARCHAR}
        </if>
        <if test="store_id != null and store_id != ''">
          AND b.store_id = #{store_id,jdbcType=VARCHAR}
        </if>
        <if test="sup_id != null and sup_id != ''">
          AND b.sup_id = #{sup_id,jdbcType=VARCHAR}
        </if>
        <if test="proj_id != null and proj_id != ''">
          AND b.proj_id = #{proj_id,jdbcType=VARCHAR}
        </if>
        <if test="in_no != null and in_no != ''">
          AND b.in_no like '${in_no}%'
        </if>
        <if test="invoice_no != null and invoice_no != ''">
          AND b.bill_no like '${invoice_no}%'
        </if>
        
        <if test="brief != null and brief != ''">
          AND b.brief like '%${brief}%'
        </if>
        <if test="batch_no != null and batch_no != ''">
          AND a.batch_no like '%${batch_no}%'
        </if>
        <if test="inv_code != null and inv_code != ''">
          AND (
              d.inv_code like '%${inv_code}%'
              or upper(d.inv_name) like '%${inv_code}%'
              or upper(d.inv_model) like '%${inv_code}%'
              or upper(d.spell_code) like '%${inv_code}%'
              or upper(d.wbx_code) like '%${inv_code}%'
              or upper(d.bid_code) like '%${inv_code}%'
              or lower(d.spell_code) like '%${inv_code}%'
              or lower(d.bid_code) like '%${inv_code}%'
              or lower(d.wbx_code) like '%${inv_code}%'
              or lower(d.inv_name) like '%${inv_code}%'
              or d.alias like '%${inv_code}%'
            
          )
        </if>
        <if test="inv_model != null and inv_model != ''">
           AND  d.inv_model like '%${inv_model}%'
        </if>
          <if test="bar_code != null and bar_code != ''">
           AND  a.bar_code like '%${bar_code}%'
        </if>
        <if test="affirm != null and affirm != ''">
			AND b.confirmer = #{affirm}
		</if>
        <!-- 添加用户数据权限 -->
        and exists (
          select 1 from v_user_data_perm tem1
          where tem1.group_id =#{group_id,jdbcType=INTEGER}
             and tem1.hos_id =#{hos_id,jdbcType=INTEGER}
            and tem1.is_read=1
            and tem1.is_write = 1
                and tem1.table_code='HOS_STORE_DICT'
            and tem1.user_id=#{user_id}
            and b.store_id =tem1.perm_code
        )
        <!-- 添加业务类型读写权限 -->
          and exists  (select 1
            from v_user_data_perm
            where group_id = #{group_id,jdbcType=INTEGER}
              and hos_id = #{hos_id,jdbcType=INTEGER}
              and user_id = #{user_id,jdbcType=INTEGER}
              and table_code = 'MAT_BUS_TYPE'
              and (is_read = 1
              or is_write = 1)
              and b.bus_type_code =perm_code
              )
              

union all

select a.group_id,
       a.hos_id,
       a.copy_code,
       b.in_id,
       to_char(b.in_no) as in_no,
       c.store_name,
       b.delivery_code,
       d.bid_code,
       d.inv_code,
       d.inv_name,
       e.unit_name,
       d.inv_model,
       a.price,
       a.amount,
       a.amount_money,
       a.batch_no,
       a.bar_code,
       f.sup_name,
       g.fac_name,
       h.field_desc as state_name,
       b.bill_no,
       i.user_name as maker_name,
       b.in_date,
       b.confirm_date,
       j.bus_type_name,
       a.inva_date,
       a.fac_date,
       b.temperature,mtdd.mat_type_name
 from mat_in_detail a
left join mat_in_main b on a.group_id=b.group_id
and a.hos_id=b.hos_id
and a.copy_code=b.copy_code
and a.in_id=b.in_id
left join hos_store_dict c on b.group_id=c.group_id
and b.hos_id=c.hos_id
and b.store_id=c.store_id
<if test="show_history == 1">
		and b.store_no=c.store_no
</if>
<if test="show_history == 0">
		and c.is_stop=0
</if>

left join mat_inv_dict d on a.group_id=d.group_id
and a.hos_id=d.hos_id
and a.copy_code=d.copy_code
and a.inv_id=d.inv_id
and a.inv_no=d.inv_no
 	left join mat_type_dict mtdd on d.group_id = mtdd.group_id
		and d.hos_id = mtdd.hos_id
		and d.copy_code = mtdd.copy_code
		and d.mat_type_id = mtdd.mat_type_id
		and d.mat_type_no = mtdd.mat_type_no 
left join hos_unit e on d.group_id=e.group_id
and d.hos_id=e.hos_id
and d.unit_code=e.unit_code
left join hos_sup_dict f on b.group_id=f.group_id
and b.hos_id=f.hos_id
and b.sup_id=f.sup_id
<if test="show_history == 1">
		and b.sup_no=f.sup_no
</if>
<if test="show_history == 0">
		and f.is_stop=0
</if>

left join hos_fac_dict g on d.group_id=g.group_id
and d.hos_id=g.hos_id
and d.fac_id=g.fac_id
<if test="show_history == 1">
		and d.fac_no=g.fac_no
</if>
<if test="show_history == 0">
		and g.is_stop=0
</if>

left join mat_sys_list h on h.table_code = 'MAT_IN_MAIN' 
and h.field_code = 'STATE' 
and b.state = h.field_value
left join sys_user i on b.group_id=i.group_id
and b.hos_id=i.hos_id
and b.maker=i.user_id
left join mat_bus_type j on b.bus_type_code=j.bus_type_code
and j.sel_flag='in' 
where a.group_id=#{group_id,jdbcType=INTEGER}
      and a.hos_id=#{hos_id,jdbcType=INTEGER}
      and a.copy_code=#{copy_code,jdbcType=VARCHAR} 
      <if test="begin_in_date != null and begin_in_date != ''">
					AND to_char(b.in_date,'yyyy-MM-dd') &gt;= #{begin_in_date}
				</if>
				<if test="end_in_date != null and end_in_date != ''">
					AND to_char(b.in_date,'yyyy-MM-dd') &lt;= #{end_in_date}
				</if>
				<if test="begin_confirm_date != null and begin_confirm_date != ''">
					AND to_char(b.confirm_date,'yyyy-MM-dd') &gt;= #{begin_confirm_date}
				</if> 
				<if test="end_confirm_date != null and end_confirm_date != ''">
					AND to_char(b.confirm_date,'yyyy-MM-dd') &lt;= #{end_confirm_date}
				</if>
				<if test="bus_type_code != null and bus_type_code != ''">
					AND b.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
				</if> 
        <if test="state != null and state != ''">
					AND b.state = #{state,jdbcType=VARCHAR}
				</if>
				<if test="store_id != null and store_id != ''">
					AND b.store_id = #{store_id,jdbcType=VARCHAR}
				</if>
				<if test="sup_id != null and sup_id != ''">
					AND b.sup_id = #{sup_id,jdbcType=VARCHAR}
				</if>
				<if test="proj_id != null and proj_id != ''">
					AND b.proj_id = #{proj_id,jdbcType=VARCHAR}
				</if>
				<if test="in_no != null and in_no != ''">
					AND b.in_no like '${in_no}%'
				</if>
				<if test="invoice_no != null and invoice_no != ''">
					AND b.bill_no like '${invoice_no}%'
				</if>
				
				<if test="brief != null and brief != ''">
					AND b.brief like '%${brief}%'
				</if>
				<if test="batch_no != null and batch_no != ''">
					AND a.batch_no like '%${batch_no}%'
				</if>
				 <if test="maker != null and maker != ''">
				AND b.maker = #{maker,jdbcType=INTEGER}
				</if>
				<if test="inv_code != null and inv_code != ''">
					AND (
							d.inv_code like '%${inv_code}%'
							or upper(d.inv_name) like '%${inv_code}%'
							or upper(d.inv_model) like '%${inv_code}%'
							or upper(d.spell_code) like '%${inv_code}%'
							or upper(d.wbx_code) like '%${inv_code}%'
							or upper(d.bid_code) like '%${inv_code}%'
							or lower(d.spell_code) like '%${inv_code}%'
							or lower(d.bid_code) like '%${inv_code}%'
							or lower(d.wbx_code) like '%${inv_code}%'
							or lower(d.inv_name) like '%${inv_code}%'
							or d.alias like '%${inv_code}%'
						
					)
				</if>
        <if test="inv_model != null and inv_model != ''">
					 AND  d.inv_model like '%${inv_model}%'
				</if>
			    <if test="bar_code != null and bar_code != ''">
					 AND  a.bar_code like '%${bar_code}%'
				</if>
				  <if test="mat_type_code != null and mat_type_code != ''">
					AND mtdd.mat_type_code like '${mat_type_code}%'
				</if>
				<if test="affirm != null and affirm != ''">
					AND b.confirmer = #{affirm}
				</if>
        <!-- 添加用户数据权限 -->
				and exists (
					select 1 from v_user_data_perm tem1
					where tem1.group_id =#{group_id,jdbcType=INTEGER}
             and tem1.hos_id =#{hos_id,jdbcType=INTEGER}
						and tem1.is_read=1
						and tem1.is_write = 1
		      			and tem1.table_code='HOS_STORE_DICT'
						and tem1.user_id=#{user_id}
            and b.store_id =tem1.perm_code
				)
				<!-- 添加业务类型读写权限 -->
					and exists  (select 1
						from v_user_data_perm
						where group_id = #{group_id,jdbcType=INTEGER}
							and hos_id = #{hos_id,jdbcType=INTEGER}
							and user_id = #{user_id,jdbcType=INTEGER}
							and table_code = 'MAT_BUS_TYPE'
							and (is_read = 1
							or is_write = 1)
							and b.bus_type_code =perm_code
							)
              
		
	</select>
	
	<!-- 关闭材料 -->
	<update id="updateMatStorageInCloseInv" parameterType="java.util.List">
		update mat_order_detail set 
			is_closed = 1
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and order_id = #{item.order_id,jdbcType=INTEGER}
			and order_detail_id = #{item.order_detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 取消关闭材料 -->
	<update id="updateMatStorageInCancleCloseInv" parameterType="java.util.List">
		update mat_order_detail set 
			is_closed = 0
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and order_id = #{item.order_id,jdbcType=INTEGER}
			and order_detail_id = #{item.order_detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 确认前单据状态判断 -->
	<select id="existsMatInStateForConfirm" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(1) 
		FROM mat_in_main
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id in(${in_ids})
			AND state = 3
	</select>
	
	<!-- 根据供应商查询材料 -->
	<select id="queryMatChoiceInvBySup" parameterType="java.util.Map" resultType="java.util.Map">
		select a.group_id,a.hos_id,a.copy_code,a.inv_id,a.inv_no,a.inv_code,a.inv_name,a.inv_model,a.plan_price price,
	      a.unit_code,b.unit_name,d.sup_id,d.sup_no, d.sup_code,d.sup_name,e.fac_id,e.fac_no,e.fac_code,e.fac_name,
	      f.mat_type_code,f.mat_type_name,f.mat_type_id,f.mat_type_no,mic.cert_code
	    from mat_inv_dict a
	    left join hos_unit b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.unit_code=b.unit_code and b.is_stop = 0
	    left join mat_inv_sup c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.copy_code=c.copy_code
	         and a.inv_id=c.inv_id
	    left join hos_sup_dict d on c.group_id=d.group_id and c.hos_id=d.hos_id and c.sup_id=d.sup_id and d.is_stop = 0
	    left join hos_fac_dict e on a.group_id=e.group_id and a.hos_id=e.hos_id and a.fac_id=e.fac_id and a.fac_no=e.fac_no
	    left join mat_type_dict f on a.group_id=f.group_id and a.hos_id=f.hos_id and a.copy_code=f.copy_code 
	         and a.mat_type_id=f.mat_type_id and a.mat_type_no=f.mat_type_no
	    left join (
	         SELECT MAX(a.cert_id) AS cert_id,  a.inv_id, a.group_id, a.hos_id, a.copy_code
	         FROM mat_inv_cert  b
	         LEFT JOIN mat_inv_cert_rela a ON a.group_id = b.group_id
	        	AND a.hos_id = b.hos_id
	          	AND a.copy_code = b.copy_code
	          	AND a.cert_id = b.cert_id 
	         WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
	          	AND a.hos_id = #{hos_id,jdbcType=INTEGER}
	          	AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
	          	AND b.cert_state = 1
	       	GROUP BY a.inv_id, a.group_id, a.hos_id, a.copy_code
	       	ORDER BY a.inv_id
	    ) mcr on a.group_id = mcr.group_id  and a.hos_id = mcr.hos_id 
	      	and a.copy_code = mcr.copy_code and a.inv_id = mcr.inv_id
	    left join mat_inv_cert mic on  mcr.group_id = mic.group_id 
	      	and mcr.hos_id=mic.hos_id and mcr.copy_code= mic.copy_code and mcr.cert_id=mic.cert_id
	    left join mat_store_inv msi on a.group_id=msi.group_id and a.hos_id=msi.hos_id and a.copy_code=msi.copy_code
     		and a.inv_id=msi.inv_id 
		<where>
			<if test="group_id != null and group_id !=''">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id !=''">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !=''">
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="sup_id != null and sup_id !=''">
				and d.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="mat_type_id != null and mat_type_id !=''">
				and f.mat_type_id = #{mat_type_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id !=''">
				and msi.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				and ( 
					a.inv_code like '%${inv_code}%'
				or upper(a.inv_name) like '%${inv_code}%'
				or upper(a.spell_code) like '%${inv_code}%'
				or upper(a.wbx_code) like '%${inv_code}%'
				or lower(a.spell_code) like '%${inv_code}%'
				or lower(a.wbx_code) like '%${inv_code}%'
				or lower(a.inv_name) like '%${inv_code}%'
				)
			</if>
			and a.use_state = 1
			and a.is_stop = 0
			and a.is_com = 0
		</where>
		order by a.inv_code 
	</select>
	
	<select id="queryChoiceInvBySupData" parameterType="java.util.List" resultType="java.util.Map">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.inv_no,jdbcType=INTEGER} as inv_no,
					#{item.sup_id,jdbcType=INTEGER} as sup_id
				from dual
			</foreach>
		)
		select a.group_id,a.hos_id,a.copy_code,dd.bid_code,a.inv_id,a.inv_no,dd.inv_code,dd.inv_name,dd.inv_model,dd.plan_price price,
			dd.unit_code,b.unit_name,d.sup_id,d.sup_no, d.sup_code,d.sup_name,e.fac_id,e.fac_no,e.fac_code,e.fac_name,
			mic.cert_id,mic.cert_code
		from list_temp a
		left join mat_inv_dict dd on a.group_id=dd.group_id and a.hos_id=dd.hos_id and a.copy_code=dd.copy_code
			and a.inv_id=dd.inv_id and a.inv_no=dd.inv_no
		left join hos_unit b on dd.group_id=b.group_id and dd.hos_id=b.hos_id and dd.unit_code=b.unit_code and b.is_stop = 0
		left join mat_inv_sup c on a.group_id=c.group_id and a.hos_id=c.hos_id and a.copy_code=c.copy_code
		     and a.inv_id=c.inv_id and a.sup_id=c.sup_id
		left join hos_sup_dict d on c.group_id=d.group_id and c.hos_id=d.hos_id and c.sup_id=d.sup_id and d.is_stop = 0
		left join hos_fac_dict e on dd.group_id=e.group_id and dd.hos_id=e.hos_id and dd.fac_id=e.fac_id and dd.fac_no=e.fac_no
		left join (
     		select max(aa.cert_id) as cert_id,aa.inv_id, aa.group_id, aa.hos_id , aa.copy_code
     		from mat_inv_cert bb
    		left join mat_inv_cert_rela aa on aa.group_id = bb.group_id and aa.hos_id = bb.hos_id
  				and aa.copy_code = bb.copy_code and aa.cert_id = bb.cert_id 
  			where bb.cert_state = 1
  				group by aa.inv_id, aa.group_id, aa.hos_id, aa.copy_code
  				order by aa.inv_id
		) mir on  dd.group_id = mir.group_id and dd.hos_id = mir.hos_id and dd.copy_code = mir.copy_code
			and dd.inv_id = mir.inv_id 
		left join mat_inv_cert mic on mir.group_id = mic.group_id and mir.hos_id = mic.hos_id
			and mir.copy_code = mic.copy_code and mir.cert_id = mic.cert_id
		where mic.cert_state = 1
		order by dd.inv_code
	</select>
	
	<!-- 根据入库单ID查询订单号 -->
	<select id="queryMatOrderIdByDelivery" parameterType="java.util.List" resultType="String">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.in_id,jdbcType=INTEGER} as in_id,
					#{item.is_com,jdbcType=INTEGER} as is_com
				from dual
			</foreach>
		)
		
		select to_char(wm_concat(order_id)) 
		from (
      		select distinct c.order_id
          	from list_temp a
          	left join sup_delivery_in_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id 
            	and a.copy_code=b.copy_code and a.in_id = b.in_id and a.is_com=b.is_com
         	left join sup_delivery_order_rela c on b.group_id=c.group_id and b.hos_id=c.hos_id
              	and b.copy_code=c.copy_code and b.delivery_id=c.delivery_id 
 		)
 		
	</select>
	
	<!-- 批量插入送货单与入库单关系表 -->
	<insert id="insertBatchDeliveryInRela"  parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			INSERT INTO sup_delivery_in_rela (
				group_id ,
				hos_id,
				copy_code,
				in_id,
				in_detail_id,
				delivery_id,
				delivery_no,
				inv_id,
				price,
				in_amount,
				delivery_amount,
				is_com
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.in_id,jdbcType=INTEGER},
				#{item.in_detail_id,jdbcType=INTEGER},
				#{item.delivery_id,jdbcType=INTEGER},
				#{item.delivery_no,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER}	,
				#{item.price,jdbcType=INTEGER},
				#{item.in_amount,jdbcType=INTEGER}	,
				#{item.delivery_amount,jdbcType=INTEGER},
				#{item.is_com,jdbcType=INTEGER}				
			)
		</foreach>
	</insert>
	
	<!-- 查询删除的材料所在的订单 -->
	<select id="queryDeliveryOrderIds"  parameterType="java.util.List" resultType="String">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.in_id,jdbcType=INTEGER} as in_id,
					#{item.delivery_id,jdbcType=INTEGER} as delivery_id,
					#{item.delivery_no,jdbcType=VARCHAR} as delivery_no,
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.is_com,jdbcType=INTEGER} as is_com
				from dual
			</foreach>
		),old_tmp as (
			select group_id,hos_id,copy_code,in_id,delivery_id,delivery_no,inv_id
			from sup_delivery_in_rela 
			where in_id in (
				select distinct in_id
				from list_temp
			) and is_com = 0
		)
		
		select to_char(wm_concat(order_id)) 
		from (
			select distinct b.order_id
			from (
	      		select group_id,hos_id,copy_code,in_id,delivery_id,delivery_no,inv_id
	      		from old_tmp
	      		minus
	      		select group_id,hos_id,copy_code,in_id,delivery_id,delivery_no,inv_id
	      		from list_temp
	 		) a 
	 		left join sup_delivery_order_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
	 			and a.delivery_id=b.delivery_id and a.delivery_no=b.delivery_no and a.inv_id=b.inv_id 
		)
 		
	</select>
	
	<!-- 更新订单的状态 -->
	<update id="updateOrderStateByDelivery" parameterType="java.util.Map">
		update mat_order_main set state=#{state,jdbcType=INTEGER}
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="deliveryOrderIds != null and deliveryOrderIds != ''">
				AND order_id in (${deliveryOrderIds}) 
			</if>
		</where>
	</update>
	
	<!-- 根入库单Id删除入库单与送货单对应关系表 -->
	<delete id="deleteDeliveryInRelaByInId" parameterType="java.util.Map" >
		delete from sup_delivery_in_rela
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != ''">
				AND in_id =#{in_id,jdbcType=INTEGER}
			</if>
			<if test="is_com != null and is_com != ''">
				AND is_com =#{is_com,jdbcType=INTEGER}
			</if>
		</where>
	
	</delete>
	
	<select id="querySupDeliveryInOrderIsExists" parameterType="java.util.Map" resultType="java.util.Map">
		select a.group_id,a.hos_id,a.copy_code,a.in_id,a.inv_id,a.delivery_id,a.delivery_no,a.delivery_amount,a.in_amount,a.in_detail_id,a.is_com,b.order_id
		from sup_delivery_in_rela a
		join sup_delivery_order_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
		     and a.delivery_id=b.delivery_id and a.delivery_no=b.delivery_no and a.inv_id=b.inv_id
		<where>
			<if test="group_id != null and group_id != ''">
				AND a.group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="deliveryOrderIds != null and deliveryOrderIds != ''">
				AND b.order_id in (${deliveryOrderIds}) 
			</if>
			<if test="is_com != null and is_com != ''">
				AND a.is_com =#{is_com,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<!-- 冲账查明细表数据 -->
	<select id="queryMatStorageMegerBackDetail" parameterType="java.util.Map" resultType="java.util.Map" >
						select a.group_id,
				       a.hos_id,
				       a.copy_code,
				       a.store_id,
				       b.inv_id,
				       b.inv_no,
				       c.inv_code,
				       c.inv_name,
				       sum(b.amount) as amount,
				       b.price,
				       b.batch_no,
				       b.bar_code,
				       0 as is_check_imme
				from mat_in_main a
				left join mat_in_detail b on a.group_id=b.group_id
				and a.hos_id=b.hos_id
				and a.copy_code=b.copy_code
				and a.in_id=b.in_id
				left join mat_inv_dict c on 
				b.group_id = c.group_id
				and b.hos_id = c.hos_id
				and b.copy_code = c.copy_code
				and b.inv_id = c.inv_id
				and b.inv_no = c.inv_no 
				where  
				a.group_id=#{group_id,jdbcType=INTEGER}
				and a.hos_id=#{hos_id,jdbcType=INTEGER}
				and a.copy_code=#{copy_code,jdbcType=VARCHAR}
				and a.in_id in ${in_ids}
				
				group by a.group_id,
				       a.hos_id,
				       a.copy_code,
				       a.store_id,
				       b.inv_id,
				       b.inv_no,
				       c.inv_code,
				       c.inv_name,
				       b.price,
				       b.batch_no,
				       b.bar_code
		
		
		
	</select>
	
	
	<select id="queryInList" parameterType="java.util.Map" resultMap="matStorageInMain">
		
      select distinct a.group_id, a.amount_money
        
      from mat_in_main a
      left join mat_in_detail bb on a.group_id = bb.group_id
      and a.hos_id = bb.hos_id
      and a.copy_code = bb.copy_code
      and a.in_id = bb.in_id 
      left join mat_inv_dict mid on bb.group_id = mid.group_id
      and bb.hos_id = mid.hos_id
      and bb.copy_code = mid.copy_code
      and bb.inv_id = mid.inv_id
      and mid.is_stop = 0 
      left join mat_type_dict mtd on mid.group_id = mtd.group_id
      and mid.hos_id = mtd.hos_id
      and mid.copy_code = mtd.copy_code
      and mid.mat_type_id = mtd.mat_type_id
      and mid.mat_type_no = mtd.mat_type_no 
      left join mat_data_dict b on a.come_from = b.field_value 
      left join hos_emp c on a.group_id = c.group_id
      and a.hos_id = c.hos_id
      and a.stocker = c.emp_id 
      left join hos_emp_dict d on a.group_id = d.group_id
      and a.hos_id = d.hos_id
      and a.examiner = d.emp_id
      and d.is_stop = 0 
      left join sys_user f on a.group_id = f.group_id
      and a.hos_id = f.hos_id
      and a.maker = f.user_id 
      left join mat_sys_list h on h.table_code = 'MAT_IN_MAIN'
      and h.field_code = 'STATE'
      and a.state = h.field_value 
      left join mat_bill_detail i on a.group_id = i.group_id
      and a.hos_id = i.hos_id
      and a.copy_code = i.copy_code
      and a.in_id = i.in_id 
      left join hos_sup_dict j on a.group_id = j.group_id
      and a.hos_id = j.hos_id
      and a.sup_id = j.sup_id
      and a.sup_no = j.sup_no 
      left join sys_user k on a.group_id = k.group_id
      and a.hos_id = k.hos_id
      and a.confirmer = k.user_id 
      left join hos_store_dict l on a.group_id = l.group_id
      and a.hos_id = l.hos_id
      and a.store_id = l.store_id
      and a.store_no = l.store_no 
      left join mat_bus_type m on a.bus_type_code = m.bus_type_code 
        left join sys_user qq on a.group_id = qq.group_id
      and a.hos_id = qq.hos_id
      and a.checker = qq.user_id 
      where a.group_id = #{group_id,jdbcType=INTEGER}
        and a.hos_id = #{hos_id,jdbcType=INTEGER}
        and a.copy_code = #{copy_code,jdbcType=VARCHAR}
        and m.bus_type_code in (8, 4, 2, 22, 10, 6, 16, 18, 47, 12)
        and b.field_code = 'IN_FROM'
        and b.data_code = '04014'
       <if test="in_id != null and in_id != ''"> 
			AND a.in_id=#{in_id,jdbcType=INTEGER}
		</if>
      order by a.in_id desc
	</select>
	
	<select id="queryBillCountByInId" parameterType="java.util.Map" resultType="Integer">
		select count(0) from mat_bill_detail
		where group_id = #{group_id, jdbcType=INTEGER}
		and hos_id = #{hos_id, jdbcType=INTEGER}
		and copy_code = #{copy_code, jdbcType=VARCHAR}
		and in_id = #{in_id, jdbcType=INTEGER}
	</select>
	
	<!-- 修改订单状态 -->
	<update id="updateOrderStateByInRela" parameterType="java.util.Map">
		DECLARE 
			p_in_amount numeric(18, 6);
			p_order_amount numeric(18, 6);
			p_order_id numeric(18, 0);
			p_state numeric(1, 0);
			p_04033 numeric(1, 0);
			p_count numeric(4, 0);
		BEGIN
			--获取订单是否需要审核功能
			SELECT para_value 
			INTO p_04033 
			FROM acc_para 
			WHERE group_id = #{map.group_id,jdbcType=INTEGER}
				AND hos_id = #{map.hos_id,jdbcType=INTEGER}
				AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
				AND mod_code = '04'
				AND para_code = '04033';
			  
			for order_id in (
				SELECT distinct order_id
				FROM mat_in_order_rela 
				WHERE group_id = #{map.group_id,jdbcType=INTEGER} 
					AND hos_id = #{map.hos_id,jdbcType=INTEGER}
					AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
					AND in_id in (
						<foreach collection="list" item="item" separator="union all">
							SELECT #{item.in_id,jdbcType=INTEGER} FROM DUAL
						</foreach>
					)
			)
			loop 
				--获取订单入库数量
				SELECT count(0)
				INTO p_count
				FROM mat_in_order_rela 
				WHERE group_id = #{map.group_id,jdbcType=INTEGER}
					AND hos_id = #{map.hos_id,jdbcType=INTEGER}
					AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
					AND order_id = p_order_id;
				
				if p_count = 0 then
					p_in_amount := 0;
				else
					SELECT sum(in_amount)
					INTO p_in_amount
					FROM mat_in_order_rela 
					WHERE group_id = #{map.group_id,jdbcType=INTEGER}
						AND hos_id = #{map.hos_id,jdbcType=INTEGER}
						AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
						AND order_id = p_order_id;
				end if;
				
				--获取订单数量
				SELECT sum(amount) 
				INTO p_order_amount 
				FROM mat_order_detail 
				WHERE group_id = #{map.group_id,jdbcType=INTEGER}
					AND hos_id = #{map.hos_id,jdbcType=INTEGER}
					AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
					AND order_id = p_order_id;
				
				if nvl(p_order_amount, 0) = 0 then 
					p_order_amount := 0;
				end if;
				
				--判断订单状态
				if p_in_amount = 0 then 
					if p_04033 = 1 then 
						p_state := 2;
					else
						p_state := 1;
					end if;
				elsif p_order_amount > p_in_amount then 
					p_state := 3;
				elsif p_order_amount = p_in_amount then 
					p_state := 4;
				end if;
				
				--更新订单状态
				UPDATE mat_order_main 
				SET state = p_state 
				WHERE group_id = #{map.group_id,jdbcType=INTEGER}
					AND hos_id = #{map.hos_id,jdbcType=INTEGER}
					AND copy_code = #{map.copy_code,jdbcType=VARCHAR}
					AND order_id = p_order_id;
			
			end loop;
		end;
	</update>
</mapper>

