<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.base.MatCommonMapper">   
  
	<resultMap id="matInv" type="java.util.Map">    
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" /> 
		<result property="bid_code" column="bid_code" />
		<result property="inv_id" column="inv_id" />  
		<result property="inv_no" column="inv_no" />    
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="alias" column="alias" /> 
		<result property="mat_type_id" column="mat_type_id" />
		<result property="mat_type_code" column="mat_type_code" />
		<result property="mat_type_name" column="mat_type_name" />
		<result property="inv_model" column="inv_model" /> 
		<result property="unit_code" column="unit_code" />
		<result property="unit_name" column="unit_name" />
		<result property="fac_id" column="fac_id" />
		<result property="fac_no" column="fac_no" />
		<result property="fac_code" column="fac_code" />
		<result property="fac_name" column="fac_name" />
		<result property="plan_price" column="plan_price" />
		<result property="sell_price" column="sell_price" />
		<result property="sale_price" column="sale_price" />
		<result property="pack_code" column="pack_code" />
		<result property="pack_name" column="pack_name" />
		<result property="num_exchange" column="num_exchange" />
		<result property="map_amount" column="map_amount" />
		<result property="amount" column="amount" />
		<result property="last_extends" column="last_extends" />
		<result property="last_plan" column="last_plan" />
		<result property="this_plan" column="this_plan" />
		<result property="cur_amount" column="cur_amount" />
		<result property="cur_money" column="cur_money" />
		<result property="imme_amount" column="imme_amount" />
		<result property="cert_code" column="cert_code" />
		<result property="brand_name" column="brand_name" />
		<result property="price" column="price" />
		<result property="location_id" column="location_id" />
		<result property="location_code" column="location_code" />
		<result property="location_name" column="location_name" />
		<result property="is_com" column="is_com" />
		<result property="is_single_ven" column="is_single_ven" />
		<result property="is_charge" column="is_charge" />
		<result property="is_highvalue" column="is_highvalue" />
		<result property="is_batch" column="is_batch" />
		<result property="is_bar" column="is_bar" />
		<result property="is_per_bar" column="is_per_bar" />
		<result property="is_inv_bar" column="is_inv_bar" />
		<result property="is_dual" column="is_dual" />
		<result property="is_quality" column="is_quality" />
		<result property="is_disinfect" column="is_disinfect" />
		<result property="is_cert" column="is_cert" />
		<result property="is_sec_whg" column="is_sec_whg" />
		<result property="is_shel_make" column="is_shel_make" />
		<result property="sup_id" column="sup_id" />
		<result property="sup_no" column="sup_no" />
		<result property="sup_code" column="sup_code" />
		<result property="sup_name" column="sup_name" />
		<result property="batch_no" column="batch_no" />
		<result property="batch_sn" column="batch_sn" />
		<result property="bar_code" column="bar_code" />
		<result property="bar_code_new" column="bar_code_new" />
		<result property="inva_date" column="inva_date" />
		<result property="disinfect_date" column="disinfect_date" />
		<result property="cert_id" column="cert_id" />
		<result property="cert_code" column="cert_code" />
		<result property="is_default" column="is_default" />
		<result property="bid_code" column="bid_code" />
		<result property="sup_name" column="sup_name" />
		<result property="all_cur_amount" column="all_cur_amount" />
		<result property="all_imme_amount" column="all_imme_amount" />
		<result property="amount_money" column="amount_money" />
		<result property="show_zero" column="show_zero" />
		<result property="location_new_id" column="location_new_id" />
		<result property="location_new_code" column="location_new_code" />
		<result property="location_new_name" column="location_new_name" />
		<result property="inv_structure" column="inv_structure" />
		<result property="out_amount" column="out_amount" />
		<result property="inv_msg" column="inv_msg" />
		<result property="memory_encoding" column="memory_encoding" />
	</resultMap>

	<resultMap id="matInvPicture" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="inv_id" column="inv_id" />
		<result property="picture_name" column="picture_name" />
		<result property="picture_url" column="picture_url" />
	</resultMap>

	<resultMap id="matCodeName" type="java.util.Map">
		<result property="code" column="code" />
		<result property="name" column="name" />
	</resultMap>

	<resultMap id="certMap" type="java.util.Map">
		<result property="end_date" column="end_date" />
		<result property="days" column="days" />
	</resultMap>
	<!-- 查询材料图片 -->
	<select id="queryInvPicture" parameterType="java.util.Map"
		resultMap="matInvPicture">

		SELECT
		group_id,
		hos_id,
		copy_code,
		inv_id,
		picture_name,
		picture_url
		FROM MAT_INV_PICTURE
		<where>
			<if test="group_id != null ">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null ">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null ">
				AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="picture_name != null ">
				AND picture_name = #{picture_name,jdbcType=VARCHAR}
			</if>
			<if test="picture_url != null ">
				AND picture_url = #{picture_url,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>

	<!-- 获取编码规则 -->
	<select id="getMatHosRules" parameterType="java.util.Map"
		resultType="String">
		SELECT
		level1||'-'||level2||'-'||level3||'-'||level4||'-'||level5||'-'||level6||'-'||level7||'-'||level8||'-'||level9||'-'||level10
		from hos_rules
		where group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and mod_code = #{mod_code,jdbcType=VARCHAR}
		and proj_code = #{proj_code,jdbcType=VARCHAR}
	</select>
	<!-- 获取c_max字段的最大值 -->
	<select id="getMatMaxNo" parameterType="java.util.Map"
		resultType="String">
		SELECT MAX(${c_max})
		from ${table_name}
		where
		group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		<if test="copy_code != null and copy_code != ''">
			and copy_code =#{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="c_name != null and c_name != ''">
			and ${c_name} = #{c_value,jdbcType=VARCHAR}
		</if>
		<if test="c_name1 != null and c_name1 != ''">
			and ${c_name1} = #{c_value1,jdbcType=VARCHAR}
		</if>
		<if test="c_name2 != null and c_name2 != ''">
			and ${c_name2} = #{c_value2,jdbcType=VARCHAR}
		</if>
		<if test="c_name3 != null and c_name3 != ''">
			and ${c_name3} = #{c_value3,jdbcType=VARCHAR}
		</if>
		<if test="c_name4 != null and c_name4 != ''">
			and ${c_name4} = #{c_value4,jdbcType=VARCHAR}
		</if>
	</select>
	<!-- 返回编码和名称用于判断是否重复 -->
	<select id="existsMatCodeName" parameterType="java.util.Map"
		resultMap="matCodeName">
		SELECT ${c_code} code, ${c_name} name
		from ${table_name}
		where
		group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		<if test="copy_code != null and copy_code != ''">
			and copy_code =#{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="c_id != null and c_id != ''">
			and ${c_id} &lt;&gt; #{c_id_value,jdbcType=INTEGER}
		</if>
		<if test="c_code != null and c_code != ''">
			and (${c_code} = #{c_code_value,jdbcType=VARCHAR}
			<if test="c_name != null and c_name != ''">
				or ${c_name} = #{c_name_value,jdbcType=VARCHAR}
			</if>
			)
		</if>
	</select>

	<!-- 添加校验名称编码是否重复 -->
	<select id="existsCodeNameByAdd" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(1) 
		FROM (
			SELECT 1
			FROM ${table_code}  
			WHERE group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ${col_code} = #{code_val,jdbcType=VARCHAR}
				${whereSql}
			UNION ALL 
			SELECT 1
			FROM ${table_code}  
			WHERE group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ${col_name} = #{name_val,jdbcType=VARCHAR}
				${whereSql}
		) tmp
	</select>
	<!-- 修改校验名称是否重复 -->
	<select id="existsNameByUpdate" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(1)
		FROM ${table_code}  
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND ${col_code} &lt;&gt; #{code_val,jdbcType=VARCHAR}
			AND ${col_name} = #{name_val,jdbcType=VARCHAR}
			${whereSql}
	</select>
	
	<!-- 获取最大排序号 -->
	<select id="getMaxSortCodeByTable" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT max(sort_code) 
		FROM ${table_code}
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			${whereSql}
	</select>
	<!-- 获取物流模块指定系统参数的值 -->
	<select id="getMatAccPara" parameterType="java.util.Map"
		resultType="String">
		SELECT para_value
		from ACC_PARA
		where
		group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		<if test="copy_code != null and copy_code != ''">
			and copy_code =#{copy_code,jdbcType=VARCHAR}
		</if>
		and mod_code = '04'
		and para_code = #{para_code,jdbcType=VARCHAR}
		and is_stop = 0
	</select>
	<!-- 获取物流模块所有系统参数的值 -->
	<select id="queryMatParas" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT 'para_'||para_code para_code, para_value
		from
		ACC_PARA
		where
		group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and mod_code = '04'
		and is_stop = 0
	</select>

	<!-- 业务数据选择物资材料所用 -->
	<select id="queryMatInvList" parameterType="java.util.Map"
		resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
		group_id, hos_id, copy_code, inv_id, inv_no, inv_code, bid_code,inv_name,
		mat_type_id, mat_type_no, inv_model, unit_code,
		is_com, is_highvalue, is_batch, is_bar, is_per_bar, is_quality,
		is_single_ven, is_disinfect, fac_id, plan_price, sell_price, wbx_code,
		spell_code, is_zero_store, fac_no,use_state
		FROM mat_inv_dict
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and use_state = 1
		and is_stop =0
		<if test="is_com != null and is_com != ''">
			and is_com = #{is_com,jdbcType=INTEGER}
		</if>
		<if test="key != null and key != ''">
			and (
			inv_code like '%${key}%' or
			inv_name like '%${key}%' or
			bid_code like '%${key}%' or
			spell_code like '%${key}%' or
			wbx_code like '%${key}%' or
			alias like '%${key}%' or
			alias_spell like '%${key}%'
			)
		</if>
		<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
		<if test="cur_date != null and cur_date != '' ">
			and inv_id not in (
			select inv_id
			from mat_inv_dict
			where
			group_id =#{group_id,jdbcType=INTEGER}
			and hos_id =#{hos_id,jdbcType=INTEGER}
			and copy_code =#{copy_code,jdbcType=VARCHAR}
			and use_state = 1
			and is_stop = 0
			AND edate is not null
			AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
			)
		</if>
		), store_inv_tmp AS(
		SELECT inv_id FROM mat_store_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
			and store_id = #{store_id,jdbcType=INTEGER}
		</if>

		), inv_cert_tmp as(
		select inv_id, group_id, hos_id, copy_code,max(cert_id) cert_id
		from mat_inv_cert_rela
		where group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		group by inv_id, group_id, hos_id, copy_code
		)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			, sup_inv_tmp AS(
			SELECT inv_id FROM mat_inv_sup
			WHERE group_id =
			#{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and sup_id = #{sup_id,jdbcType=INTEGER}
			)
		</if>
		SELECT
		a.inv_id, a.inv_no, a.inv_code,a.bid_code, a.inv_name, a.mat_type_id,
		b.mat_type_name, a.inv_model, a.unit_code, c.unit_name,
		a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar, a.is_quality,
		a.is_single_ven, a.is_disinfect, f.pack_code,
		g.pack_name pack_name, f.map_amount num_exchange, a.fac_id, e.fac_no, e.fac_name,
		a.plan_price, a.sell_price, a.wbx_code,a.spell_code,
		case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
		nvl(maih.cur_amount, 0) end cur_amount, a.plan_price as price,
		msi.location_id, mld.location_code location_new_code,
		mld.location_name location_new_name
		,mic.cert_id,mic.cert_code,hsd.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name
		from inv_tmp a
		left join mat_type_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and a.mat_type_no = b.mat_type_no
		left join hos_unit c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.unit_code = c.unit_code
		left join hos_fac_dict e
		on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.fac_id = e.fac_id
		and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
		on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and a.inv_id = f.inv_id
		left join hos_package g
		on f.group_id = g.group_id
		and f.hos_id = g.hos_id
		and f.pack_code = g.pack_code
		left join mat_inv_hold mih
		on a.group_id = mih.group_id
		and a.hos_id = mih.hos_id
		and a.copy_code = mih.copy_code
		and mih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih
		on a.group_id = maih.group_id
		and a.hos_id = maih.hos_id
		and a.copy_code = maih.copy_code
		and maih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = maih.inv_id
		<!-- left join mat_location_inv mli on a.group_id = mli.group_id and a.hos_id 
			= mli.hos_id and a.copy_code = mli.copy_code and a.inv_id = mli.inv_id -->
		left join mat_store_inv msi on a.group_id = msi.group_id
		and a.hos_id = msi.hos_id
		and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id =#{store_id,jdbcType=INTEGER}
		left join mat_location_dict mld on msi.group_id = mld.group_id
		and msi.hos_id = mld.hos_id
		and msi.copy_code = mld.copy_code
		and msi.location_id = mld.location_id
		and msi.store_id = mld.store_id
		and mld.is_stop = 0
		left join inv_cert_tmp ict
		on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic
		on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		left join mat_inv_sup mis on mis.group_id=a.group_id and a.hos_id=mis.hos_id and a.copy_code=mis.copy_code
         	and a.inv_id=mis.inv_id and mis.is_default=1
    	left join hos_sup_dict hsd on mis.group_id=hsd.group_id and mis.hos_id=hsd.hos_id and mis.sup_id=hsd.sup_id
         	and hsd.is_stop = 0
		where exists(select inv_id from store_inv_tmp where store_inv_tmp.inv_id = a.inv_id)
		<if test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			and ( 
			not exists(
				select inv_id from mat_inv_sup where mat_inv_sup.inv_id = a.inv_id
				) or exists(
					select inv_id from sup_inv_tmp where sup_inv_tmp.inv_id = a.inv_id
				)
			)
		</if>
		<if test="inv_ids != null and inv_ids != ''">
			and a.inv_id not in (${inv_ids})
		</if>
		<if test="mat_type_code != null and mat_type_code != ''">
			AND b.mat_type_code like '${mat_type_code}%'
		</if>
		<if test="by_is_zero != null and by_is_zero == 1">
			and (case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
			nvl(maih.cur_amount, 0) end &gt; 0 or is_zero_store=1)
		</if>
			<if test="by_is_zero == null or by_is_zero == 0">
			<!-- 页面条件（优先级低于系统参数）过滤无库存 -->
			<if test="is_zero != null and is_zero == 1">
				AND (
					nvl(mih.cur_amount, 0) + nvl(maih.cur_amount, 0) > 0
				)
			</if>
			<if test="is_zero == null or is_zero == 0">
			<!-- 	AND a.use_state = 1  -->
				<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
				<if test="cur_date != null and cur_date != '' ">
					AND a.inv_id not in (
						SELECT inv_id
						FROM mat_inv_dict
						WHERE group_id =#{group_id,jdbcType=INTEGER}
							AND hos_id =#{hos_id,jdbcType=INTEGER}
							AND copy_code =#{copy_code,jdbcType=VARCHAR}
							AND is_stop = 0
							AND edate is not null
							AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
					)
				</if>
			</if>
		</if>
		<if test="show_zero == 1">
			and mih.cur_amount &lt;&gt; 0
		</if>

		<if test="inv_code != null and inv_code != ''">
			and (
			a.inv_code like '%${inv_code}%'
			or upper(a.inv_name) like '%${inv_code}%'
			or upper(a.spell_code) like '%${inv_code}%'
			or upper(a.wbx_code) like '%${inv_code}%'
			or lower(a.spell_code) like '%${inv_code}%'
			or lower(a.wbx_code) like '%${inv_code}%'
			or lower(a.inv_name) like '%${inv_code}%')
		</if>
		<if test="bid_code != null and bid_code != ''">
			and (
			a.bid_code like '%${bid_code}%'
			or upper(a.inv_name) like '%${bid_code}%'
			or upper(a.spell_code) like '%${bid_code}%'
			or upper(a.wbx_code) like '%${bid_code}%'
			or lower(a.spell_code) like '%${bid_code}%'
			or lower(a.wbx_code) like '%${bid_code}%'
			or lower(a.inv_name) like '%${bid_code}%')
		</if>
		<if test="inv_model != null and inv_model != ''">
			and (
			a.inv_model like '%${inv_model}%'
			or upper(a.inv_name) like '%${inv_model}%'
			or upper(a.spell_code) like '%${inv_model}%'
			or upper(a.wbx_code) like '%${inv_model}%'
			or lower(a.spell_code) like '%${inv_model}%'
			or lower(a.wbx_code) like '%${inv_model}%'
			or lower(a.inv_name) like '%${inv_model}%')
		</if>
		<if test="is_apply != null and is_apply !=''">
			and msi.is_apply = 1
		</if>
		order by a.inv_name,a.inv_model
	</select>
	
	<!-- 业务数据选择物资材料所用 //材料字典列表代销入库-->
	<select id="queryMatAffiInvListIn" parameterType="java.util.Map"
		resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
		group_id, hos_id, copy_code, inv_id, inv_no, inv_code, bid_code,inv_name,
		mat_type_id, mat_type_no, inv_model, unit_code,
		is_com, is_highvalue, is_batch, is_bar, is_per_bar, is_quality,
		is_single_ven, is_disinfect, fac_id, plan_price, sell_price, wbx_code,
		spell_code, is_zero_store, fac_no,use_state
		FROM mat_inv_dict
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and use_state = 1
		and is_stop =0
		<if test="is_com != null and is_com != ''">
			and is_com = #{is_com,jdbcType=INTEGER}
		</if>
		<if test="key != null and key != ''">
			and (
			inv_code like '%${key}%' or
			inv_name like '%${key}%' or
			bid_code like '%${key}%' or
			spell_code like '%${key}%' or
			wbx_code like '%${key}%' or
			alias like '%${key}%' or
			alias_spell like '%${key}%'
			)
		</if>
		<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
		<if test="cur_date != null and cur_date != '' ">
			and inv_id not in (
			select inv_id
			from mat_inv_dict
			where
			group_id =#{group_id,jdbcType=INTEGER}
			and hos_id =#{hos_id,jdbcType=INTEGER}
			and copy_code =#{copy_code,jdbcType=VARCHAR}
			and use_state = 1
			and is_stop = 0
			AND edate is not null
			AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
			)
		</if>
		), store_inv_tmp AS(
		SELECT inv_id FROM mat_store_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
			and store_id = #{store_id,jdbcType=INTEGER}
		</if>

		), inv_cert_tmp as(
		select inv_id, group_id, hos_id, copy_code,max(cert_id) cert_id
		from mat_inv_cert_rela
		where group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		group by inv_id, group_id, hos_id, copy_code
		)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			, sup_inv_tmp AS(
			SELECT inv_id FROM mat_inv_sup
			WHERE group_id =
			#{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and sup_id = #{sup_id,jdbcType=INTEGER}
			)
		</if>
		SELECT
		a.inv_id, a.inv_no, a.inv_code,a.bid_code, a.inv_name, a.mat_type_id,
		b.mat_type_name, a.inv_model, a.unit_code, c.unit_name,
		a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar, a.is_quality,
		a.is_single_ven, a.is_disinfect, f.pack_code,
		g.pack_name pack_name, f.map_amount num_exchange, a.fac_id, e.fac_no, e.fac_name,
		a.plan_price, a.sell_price, a.wbx_code,a.spell_code,
		case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
		nvl(maih.cur_amount, 0) end cur_amount, a.plan_price as price,
		msi.location_id, mld.location_code location_new_code,
		mld.location_name location_new_name
		,mic.cert_id,mic.cert_code,hsd.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name
		from inv_tmp a
		left join mat_type_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and a.mat_type_no = b.mat_type_no
		left join hos_unit c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.unit_code = c.unit_code
		left join hos_fac_dict e
		on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.fac_id = e.fac_id
		and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
		on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and a.inv_id = f.inv_id
		left join hos_package g
		on f.group_id = g.group_id
		and f.hos_id = g.hos_id
		and f.pack_code = g.pack_code
		left join mat_inv_hold mih
		on a.group_id = mih.group_id
		and a.hos_id = mih.hos_id
		and a.copy_code = mih.copy_code
		and mih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih
		on a.group_id = maih.group_id
		and a.hos_id = maih.hos_id
		and a.copy_code = maih.copy_code
		and maih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = maih.inv_id
		<!-- left join mat_location_inv mli on a.group_id = mli.group_id and a.hos_id 
			= mli.hos_id and a.copy_code = mli.copy_code and a.inv_id = mli.inv_id -->
		left join mat_store_inv msi on a.group_id = msi.group_id
		and a.hos_id = msi.hos_id
		and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id =#{store_id,jdbcType=INTEGER}
		left join mat_location_dict mld on msi.group_id = mld.group_id
		and msi.hos_id = mld.hos_id
		and msi.copy_code = mld.copy_code
		and msi.location_id = mld.location_id
		and msi.store_id = mld.store_id
		and mld.is_stop = 0
		left join inv_cert_tmp ict
		on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic
		on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		left join mat_inv_sup mis on mis.group_id=a.group_id and a.hos_id=mis.hos_id and a.copy_code=mis.copy_code
         	and a.inv_id=mis.inv_id and mis.is_default=1 and mis.sup_id = #{sup_id,jdbcType=INTEGER} 
    	left join hos_sup_dict hsd on mis.group_id=hsd.group_id and mis.hos_id=hsd.hos_id and mis.sup_id=hsd.sup_id
         	and hsd.is_stop = 0 and mis.sup_id = #{sup_id,jdbcType=INTEGER} 
		where exists(select inv_id from store_inv_tmp where store_inv_tmp.inv_id = a.inv_id)
		<if test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			and ( 
			not exists(
				select inv_id from mat_inv_sup where mat_inv_sup.inv_id = a.inv_id
				) or exists(
					select inv_id from sup_inv_tmp where sup_inv_tmp.inv_id = a.inv_id
				)
			)
		</if>
		<if test="inv_ids != null and inv_ids != ''">
			and a.inv_id not in (${inv_ids})
		</if>
		<if test="mat_type_code != null and mat_type_code != ''">
			AND b.mat_type_code like '${mat_type_code}%'
		</if>
		<if test="by_is_zero != null and by_is_zero == 1">
			and (case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
			nvl(maih.cur_amount, 0) end &gt; 0 or is_zero_store=1)
		</if>
			<if test="by_is_zero == null or by_is_zero == 0">
			<!-- 页面条件（优先级低于系统参数）过滤无库存 -->
			<if test="is_zero != null and is_zero == 1">
				AND (
					nvl(mih.cur_amount, 0) + nvl(maih.cur_amount, 0) > 0
				)
			</if>
			<if test="is_zero == null or is_zero == 0">
			<!-- 	AND a.use_state = 1  -->
				<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
				<if test="cur_date != null and cur_date != '' ">
					AND a.inv_id not in (
						SELECT inv_id
						FROM mat_inv_dict
						WHERE group_id =#{group_id,jdbcType=INTEGER}
							AND hos_id =#{hos_id,jdbcType=INTEGER}
							AND copy_code =#{copy_code,jdbcType=VARCHAR}
							AND is_stop = 0
							AND edate is not null
							AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
					)
				</if>
			</if>
		</if>
		<if test="show_zero == 1">
			and mih.cur_amount &lt;&gt; 0
		</if>

		<if test="inv_code != null and inv_code != ''">
			and (
			a.inv_code like '%${inv_code}%'
			or upper(a.inv_name) like '%${inv_code}%'
			or upper(a.spell_code) like '%${inv_code}%'
			or upper(a.wbx_code) like '%${inv_code}%'
			or lower(a.spell_code) like '%${inv_code}%'
			or lower(a.wbx_code) like '%${inv_code}%'
			or lower(a.inv_name) like '%${inv_code}%')
		</if>
		<if test="bid_code != null and bid_code != ''">
			and (
			a.bid_code like '%${bid_code}%'
			or upper(a.inv_name) like '%${bid_code}%'
			or upper(a.spell_code) like '%${bid_code}%'
			or upper(a.wbx_code) like '%${bid_code}%'
			or lower(a.spell_code) like '%${bid_code}%'
			or lower(a.wbx_code) like '%${bid_code}%'
			or lower(a.inv_name) like '%${bid_code}%')
		</if>
		<if test="inv_model != null and inv_model != ''">
			and (
			a.inv_model like '%${inv_model}%'
			or upper(a.inv_name) like '%${inv_model}%'
			or upper(a.spell_code) like '%${inv_model}%'
			or upper(a.wbx_code) like '%${inv_model}%'
			or lower(a.spell_code) like '%${inv_model}%'
			or lower(a.wbx_code) like '%${inv_model}%'
			or lower(a.inv_name) like '%${inv_model}%')
		</if>
		<if test="is_apply != null and is_apply !=''">
			and msi.is_apply = 1
		</if>
			<if test="sup_id != null and sup_id !=''">
			and mis.sup_id=#{sup_id,jdbcType=INTEGER}
		</if>
		order by a.inv_name,a.inv_model
	</select>


	<!-- 业务数据选择物资材料所用 科室申领 -->
	<select id="queryMatInvListApply" parameterType="java.util.Map" resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
			a.group_id, a.hos_id, a.copy_code, a.inv_id, a.inv_no, a.inv_code, a.bid_code,a.inv_name,a.mat_type_id, a.mat_type_no,
			a.inv_model, a.unit_code, a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar,a.is_quality, a.is_single_ven,
			a.is_disinfect, a.fac_id, a.plan_price, a.sell_price, a.wbx_code, a.spell_code, a.is_zero_store,
			a.use_state, a.fac_no,a.alias, a.inv_structure
		FROM mat_inv_dict a
		left join mat_type_dict b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.mat_type_id=b.mat_type_id
			and a.mat_type_no=b.mat_type_no
		WHERE a.group_id =#{group_id,jdbcType=INTEGER}
		and a.hos_id =#{hos_id,jdbcType=INTEGER}
		and a.copy_code =#{copy_code,jdbcType=VARCHAR}
		and a.is_stop = 0
		<if test="is_com != null and is_com != ''">
			and a.is_com = #{is_com,jdbcType=INTEGER}
		</if>
		<if test="key != null and key != ''">
			and (
			a.inv_code like '%${key}%' or
			a.bid_code like '%${key}%' or
			a.inv_name like '%${key}%' or
			a.spell_code like '%${key}%' or
			a.wbx_code like '%${key}%' or
			a.alias like '%${key}%' or
			a.alias_spell like '%${key}%'
			)
		</if>
		<if test="inv_code != null and inv_code != ''">
			and (
			a.inv_code like '%${inv_code}%' or
			a.bid_code like '%${inv_code}%' or
			a.inv_name like '%${inv_code}%' or
			a.spell_code like '%${inv_code}%' or
			a.wbx_code like '%${inv_code}%' or
			a.alias like '%${inv_code}%' or
			a.alias_spell like '%${inv_code}%'
			)
		</if>
		<if test="mat_type_code != null and mat_type_code != ''">
			and b.mat_type_code like '${mat_type_code}%'
		</if>
		<if test="bid_code != null and bid_code != ''">
			and a.bid_code = #{bid_code}
		</if>
		<if test="inv_model != null and inv_model != ''">
			and a.inv_model = #{inv_model}
		</if>
		), 
		store_inv_tmp AS(
			select inv_id, group_id, hos_id, copy_code,location_id,store_id
			from mat_store_inv
			WHERE group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="store_id != null and store_id != ''">
				and store_id = #{store_id,jdbcType=INTEGER}
			</if>
		), 
		app_tmp AS (
			SELECT b.inv_id, sum(b.app_amount - nvl(c.out_amount, 0)) out_amount
			FROM mat_apply_main a
			left join mat_apply_detail b
				on a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.apply_id = b.apply_id
			LEFT JOIN (
				select apply_id, app_detail_id, sum(rela_amount) out_amount
				from mat_apply_out_rela
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					and rela_type &lt;&gt; 5
				group by apply_id, app_detail_id
			) c
				on a.apply_id = c.apply_id
				and b.detail_id = c.app_detail_id
			where a.group_id = #{group_id,jdbcType=INTEGER}
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="store_id != null and store_id != ''">
					and a.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				and a.dept_id = #{dept_id,jdbcType=INTEGER}
				and b.app_amount &lt;&gt; nvl(c.out_amount, 0)
			group by b.inv_id
		),
		out_temp as
		(
		    select store_id,inv_id
		    , sum(amount) as amount
		    from (
		      select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date ,b.disinfect_date
		      , sum(nvl(b.amount, 0)) as amount,a.store_id
		      from mat_out_main a
		      left join mat_out_detail b on a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.out_id = b.out_id
		      where a.group_id = #{group_id,jdbcType=INTEGER}
		      AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		      AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		      <if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id,jdbcType=INTEGER}
			  </if>
		      AND <![CDATA[ a.state < 3 ]]>
		      AND <![CDATA[ a.bus_type_code <> '21' ]]>
		      AND <![CDATA[ b.amount_money > 0 ]]>
		      group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date,a.store_id
		      union all
		      select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date
		      , -1 * sum(nvl(b.amount, 0)) as amount,a.store_id
		      from mat_in_main a
		      left join mat_in_detail b on a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.in_id = b.in_id
		      AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		      AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		      <if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id,jdbcType=INTEGER}
			  </if>
		      AND <![CDATA[ a.state < 3 ]]>
		      AND a.bus_type_code in (10,12,16,22)
		      and <![CDATA[ b.amount_money < 0 ]]>
		      group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id ,b.inva_date ,b.disinfect_date,a.store_id
		    )
		    group by inv_id,store_id
		),
		affi_out_temp as
		(
		    select store_id,inv_id
		    , sum(amount) as amount
		    from (
		      select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date ,b.disinfect_date
		      , sum(nvl(b.amount, 0)) as amount,a.store_id
		      from mat_affi_out a
		      left join mat_affi_out_detail b on a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.out_id = b.out_id
		      where a.group_id = #{group_id,jdbcType=INTEGER}
		      AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		      AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		      <if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id,jdbcType=INTEGER}
			  </if>
		      AND <![CDATA[ a.state < 3 ]]>
		      AND <![CDATA[ a.bus_type_code <> '30' ]]>
		      AND <![CDATA[ b.amount_money > 0 ]]>
		      group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date,a.store_id
		      union all
		      select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date
		      , -1 * sum(nvl(b.amount, 0)) as amount,a.store_id
		      from mat_affi_in a
		      left join mat_affi_in_detail b on a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.in_id = b.in_id
		      AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		      AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		      <if test="store_id != null and store_id != ''">
				AND a.store_id = #{store_id,jdbcType=INTEGER}
			  </if>
		      AND <![CDATA[ a.state < 3 ]]>
		      AND a.bus_type_code ='29'
		      and <![CDATA[ b.amount_money < 0 ]]>
		      group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id ,b.inva_date ,b.disinfect_date,a.store_id
		    )
		    group by inv_id,store_id
		)
		
		
		SELECT
			a.inv_id, a.inv_no, a.inv_code,a.bid_code, a.inv_name, a.mat_type_id,
			b.mat_type_name, a.inv_model,
			a.unit_code, c.unit_name, a.is_com, a.is_highvalue, a.is_batch, a.is_bar,
			a.is_per_bar, a.is_quality,
			a.is_single_ven, a.is_disinfect, f.pack_code, g.pack_name pack_name, f.map_amount
			num_exchange,
			a.fac_id, e.fac_no, e.fac_name, a.plan_price, a.sell_price,
			a.wbx_code,a.spell_code,hs.sup_name,
			case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
			nvl(maih.cur_amount, 0) end cur_amount,
			case when a.is_com = 0 then nvl(mih.cur_amount, 0)-nvl(miho.amount, 0) else
			nvl(maih.cur_amount, 0)-nvl(maiho.amount, 0) end imme_amount,
			a.plan_price as price, msi.location_id location_new_id, mld.location_code
			location_new_code,
			mld.location_name location_new_name, a.alias, a.inv_structure, app_tmp.out_amount
		from inv_tmp a
		left join mat_type_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.mat_type_id = b.mat_type_id
			and a.mat_type_no = b.mat_type_no
		left join hos_unit c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
		left join hos_fac_dict e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
			and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
			on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.copy_code = f.copy_code
			and a.inv_id = f.inv_id
		left join hos_package g
			on f.group_id = g.group_id
			and f.hos_id = g.hos_id
			and f.pack_code = g.pack_code
		left join mat_inv_hold mih
			on a.group_id = mih.group_id
			and a.hos_id = mih.hos_id
			and a.copy_code = mih.copy_code
			and mih.store_id = #{store_id,jdbcType=INTEGER}
			and a.inv_id = mih.inv_id
	    left join out_temp miho
	    on miho.store_id=mih.store_id
	    and miho.inv_id=mih.inv_id
		left join mat_affi_inv_hold maih
			on a.group_id = maih.group_id
			and a.hos_id = maih.hos_id
			and a.copy_code = maih.copy_code
			and maih.store_id = #{store_id,jdbcType=INTEGER}
			and a.inv_id = maih.inv_id
	    left join affi_out_temp maiho
	    on maiho.store_id=maih.store_id
	    and maiho.inv_id=maih.inv_id
		<!-- left join mat_location_inv mli on a.group_id = mli.group_id and a.hos_id 
			= mli.hos_id and a.copy_code = mli.copy_code and a.inv_id = mli.inv_id -->
		left join store_inv_tmp msi
			on a.group_id = msi.group_id
			and a.hos_id = msi.hos_id
			and a.copy_code = msi.copy_code
			and a.inv_id = msi.inv_id
		left join mat_location_dict mld
			on msi.group_id = mld.group_id
			and msi.hos_id = mld.hos_id
			and msi.copy_code = mld.copy_code
			and msi.location_id = mld.location_id
			and msi.store_id = mld.store_id
			and mld.is_stop = 0
	    left join mat_inv_sup mis on a.group_id = mis.group_id
			and a.hos_id = mis.hos_id
			and a.copy_code = mis.copy_code
			and a.inv_id = mis.inv_id
			and mis.is_default = 1 
		left join hos_sup hs on mis.group_id = hs.group_id
			and mis.hos_id = hs.hos_id
			and mis.sup_id = hs.sup_id
			and hs.is_stop = 0 
		left join app_tmp
			on a.inv_id = app_tmp.inv_id
		where exists(
			select inv_id from store_inv_tmp where store_inv_tmp.inv_id = a.inv_id
		)
		<!-- 20170822 hsy增加有库存的停用材料可以申请 -->
		<!-- 系统参数（优先级比较高）判断是否只显示有库存或者0库存管理的材料 -->
		<if test="by_is_zero != null and by_is_zero == 1">
			and (
				case when a.is_com = 0 then nvl(mih.cur_amount, 0) else nvl(maih.cur_amount, 0) end &gt; 0 
				or 
				(
					a.use_state = 1 AND a.is_zero_store=1
					<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
					<if test="cur_date != null and cur_date != '' ">
						AND a.inv_id not in (
							SELECT inv_id
							FROM mat_inv_dict
							WHERE group_id =#{group_id,jdbcType=INTEGER}
								AND hos_id =#{hos_id,jdbcType=INTEGER}
								AND copy_code =#{copy_code,jdbcType=VARCHAR}
								AND is_stop = 0
								AND edate is not null
								AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
						)
					</if>
				)
			)
		</if>
		<if test="by_is_zero == null or by_is_zero == 0">
			<if test="is_zero != null and is_zero == 1">
				AND (
					nvl(mih.cur_amount, 0) + nvl(maih.cur_amount, 0) > 0
				)
			</if>
			<if test="is_zero == null or is_zero == 0">
				AND a.use_state = 1 
			
				<if test="cur_date != null and cur_date != '' ">
					AND a.inv_id not in (
						SELECT inv_id
						FROM mat_inv_dict
						WHERE group_id =#{group_id,jdbcType=INTEGER}
							AND hos_id =#{hos_id,jdbcType=INTEGER}
							AND copy_code =#{copy_code,jdbcType=VARCHAR}
							AND is_stop = 0
							AND edate is not null
							AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
					)
				</if>
			</if>
		</if>
		<if test="sup_id != null and sup_id != ''">
			and hs.sup_id=#{sup_id}
		</if>
		<!-- order by a.inv_name,a.inv_model -->
	</select>



	<!-- 业务数据选择物资材料所用(专购品入库) -->
	<select id="queryMatInvListSpecial" parameterType="java.util.Map"
		resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
		group_id, hos_id, copy_code, inv_id, inv_no, inv_code, bid_code,inv_name,
		mat_type_id, mat_type_no, inv_model, unit_code,
		is_com, is_highvalue, is_batch, is_bar, is_per_bar, is_quality,
		is_single_ven, is_disinfect, fac_id, plan_price, sell_price,
		wbx_code, spell_code, is_zero_store, fac_no
		FROM mat_inv_dict
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and use_state = 1
		and is_stop =0
		<if test="is_com != null and is_com != ''">
			and is_com = #{is_com,jdbcType=INTEGER}
		</if>
		<if test="key != null and key != ''">
			and (
			inv_code like '%${key}%' or
			inv_name like '%${key}%'
			or
			bid_code like '%${key}%' or
			spell_code like '%${key}%' or
			wbx_code like '%${key}%' or
			alias like '%${key}%' or
			alias_spell like '%${key}%'
			)
		</if>
		), store_inv_tmp AS(
		select inv_id,group_id, hos_id, copy_code, location_id,store_id
		from mat_store_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
			and store_id = #{store_id,jdbcType=INTEGER}
		</if>
		), inv_cert_tmp as(
		select inv_id, group_id, hos_id, copy_code,max(cert_id) cert_id
		from mat_inv_cert_rela
		where group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		group by inv_id, group_id, hos_id, copy_code
		)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			, sup_inv_tmp AS(
			SELECT inv_id FROM mat_inv_sup
			WHERE group_id =
			#{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and sup_id = #{sup_id,jdbcType=INTEGER}
			)
		</if>
		select a.inv_id, a.inv_no, a.inv_code, a.bid_code, a.inv_name
		, a.mat_type_id, b.mat_type_name, a.inv_model, a.unit_code, c.unit_name
		, a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar
		, a.is_quality, a.is_single_ven, a.is_disinfect, f.pack_code,
		g.pack_name as pack_name
		, f.map_amount as num_exchange, a.fac_id, e.fac_no, e.fac_name,
		a.plan_price
		, a.sell_price, a.wbx_code, a.spell_code, case when a.is_com = 0 then
		nvl(mih.cur_amount, 0) else nvl(maih.cur_amount, 0) end as cur_amount,
		a.plan_price as price
		, mli.location_id location_new_id, mld.location_code location_new_code,
		mld.location_name location_new_name, mic.cert_id, mic.cert_code
		from
		inv_tmp a
		left join mat_type_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and a.mat_type_no = b.mat_type_no
		left join hos_unit c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.unit_code = c.unit_code
		left join hos_fac_dict e
		on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.fac_id = e.fac_id
		and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
		on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and a.inv_id = f.inv_id
		left join hos_package g
		on f.group_id = g.group_id
		and f.hos_id = g.hos_id
		and f.pack_code = g.pack_code
		left join mat_inv_hold mih
		on a.group_id = mih.group_id
		and a.hos_id = mih.hos_id
		and a.copy_code = mih.copy_code
		and mih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih
		on a.group_id = maih.group_id
		and a.hos_id = maih.hos_id
		and a.copy_code = maih.copy_code
		and maih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = maih.inv_id
		left join store_inv_tmp mli on a.group_id = mli.group_id
		and a.hos_id = mli.hos_id
		and a.copy_code = mli.copy_code
		and a.inv_id = mli.inv_id
		left join mat_location_dict mld on mli.group_id = mld.group_id
		and mli.hos_id = mld.hos_id
		and mli.copy_code = mld.copy_code
		and mli.location_id = mld.location_id
		and mli.store_id = mld.store_id
		and mld.is_stop = 0
		left join inv_cert_tmp ict
		on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic
		on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		where exists(select inv_id from store_inv_tmp where
		store_inv_tmp.inv_id = a.inv_id)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			and ( not exists(select inv_id from mat_inv_sup where
			mat_inv_sup.inv_id = a.inv_id)
			or exists(select inv_id from sup_inv_tmp where sup_inv_tmp.inv_id =
			a.inv_id)
			)
		</if>
		order by a.inv_name,a.inv_model
	</select>

	<!-- 业务数据选择物资材料所用 (入库) -->
	<select id="queryMatInvListIn" parameterType="java.util.Map"
		resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
		group_id, hos_id, copy_code, inv_id, inv_no, inv_code, bid_code,inv_name,
		mat_type_id, mat_type_no,
		inv_model, unit_code, is_com, is_highvalue, is_batch, is_bar, is_per_bar,
		is_quality, is_single_ven,
		is_disinfect, fac_id, plan_price, sell_price, is_zero_store, is_inv_bar,
		bar_code_new, fac_no, alias, inv_structure,is_sec_whg, memory_encoding
		FROM mat_inv_dict
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and use_state = 1
		and is_stop = 0
		<if test="is_com != null and is_com != ''">
			and is_com = #{is_com,jdbcType=INTEGER}
		</if> 
		<if test="key != null and key != ''">
			and (
			 upper(inv_code) like '%${key}%' or
			upper(inv_name)like '%${key}%'or
			upper(bid_code) like '%${key}%' or
			upper(spell_code) like '%${key}%' or
			upper(wbx_code) like '%${key}%' or
			upper(alias) like '%${key}%' or
			upper(alias_spell)like '%${key}%' or
			
			lower(inv_code) like '%${key}%' or
			lower(inv_name)like '%${key}%'or
			lower(bid_code) like '%${key}%' or
			lower(spell_code) like '%${key}%' or
			lower(wbx_code) like '%${key}%' or
			lower(alias) like '%${key}%' or
			lower(alias_spell)like '%${key}%'
			)
		</if>
		), store_inv_tmp AS(
		SELECT inv_id ,location_id,group_id,hos_id,copy_code FROM mat_store_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and store_id = #{store_id,jdbcType=INTEGER}
		), inv_cert_tmp as(
		select inv_id, group_id, hos_id, copy_code,max(cert_id) cert_id
		from mat_inv_cert_rela
		where group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		group by inv_id, group_id, hos_id, copy_code
		)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			, sup_inv_tmp AS(
			SELECT inv_id FROM mat_inv_sup
			WHERE group_id =
			#{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and sup_id = #{sup_id,jdbcType=INTEGER}
			)
		</if>
		SELECT
		a.inv_id, a.inv_no, a.inv_code,a.bid_code, a.inv_name, a.mat_type_id,
		b.mat_type_name, a.inv_model,
		a.unit_code, c.unit_name, a.is_com, a.is_highvalue, a.is_batch, a.is_bar,
		a.is_per_bar, a.is_quality,
		a.is_single_ven, a.is_disinfect, f.pack_code, g.pack_name pack_name, f.map_amount
		num_exchange,
		a.fac_id, e.fac_no, e.fac_name, a.plan_price, a.sell_price,
		case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
		nvl(maih.cur_amount, 0) end cur_amount,
		a.plan_price as price, sit.location_id location_new_id , mld.location_code
		location_new_code,
		mld.location_name location_new_name, mic.cert_id, mic.cert_code, a.is_inv_bar,
		a.bar_code_new,
		a.alias, a.inv_structure,a.is_sec_whg, a.memory_encoding
		from inv_tmp a
		left join mat_type_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and a.mat_type_no = b.mat_type_no
		left join hos_unit c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.unit_code = c.unit_code
		left join hos_fac_dict e
		on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.fac_id = e.fac_id
		and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
		on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and a.inv_id = f.inv_id
		left join hos_package g
		on f.group_id = g.group_id
		and f.hos_id = g.hos_id
		and f.pack_code = g.pack_code
		left join mat_inv_hold mih
		on a.group_id = mih.group_id
		and a.hos_id = mih.hos_id
		and a.copy_code = mih.copy_code
		and mih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih
		on a.group_id = maih.group_id
		and a.hos_id = maih.hos_id
		and a.copy_code = maih.copy_code
		and maih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = maih.inv_id
		<!-- left join mat_location_inv mli on a.group_id = mli.group_id and a.hos_id 
			= mli.hos_id and a.copy_code = mli.copy_code and a.inv_id = mli.inv_id -->
		left join store_inv_tmp sit on a.group_id = sit.group_id
		and a.hos_id = sit.hos_id
		and a.copy_code = sit.copy_code
		and a.inv_id = sit.inv_id
		left join mat_location_dict mld
		on sit.group_id = mld.group_id
		and sit.hos_id = mld.hos_id
		and sit.copy_code = mld.copy_code
		and sit.location_id = mld.location_id
		and mld.is_stop = 0
		left join inv_cert_tmp ict
		on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic 
		on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		where exists(select inv_id from store_inv_tmp where
		store_inv_tmp.inv_id = a.inv_id)
		and exists (select  vu.perm_code from  V_USER_DATA_PERM vu
		 where  
			vu.group_id =  #{group_id} AND vu.hos_id =#{hos_id}
			AND vu.user_id = #{user_id,jdbcType=INTEGER}  
			AND vu.table_code = 'MAT_TYPE_DICT' 
			AND vu.perm_code = b.mat_type_id AND vu.is_read = 1 and vu.is_write = 1
			)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			and ( not exists(select inv_id from mat_inv_sup where
			mat_inv_sup.inv_id = a.inv_id)
			or exists(select inv_id from sup_inv_tmp where sup_inv_tmp.inv_id =
			a.inv_id)
			)
		</if>
		order by a.inv_model, a.inv_code
	</select>


	<!-- 业务数据选择物资材料所用 (期初入库) -->
	<select id="queryMatInvListInitial" parameterType="java.util.Map"
		resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
		group_id, hos_id, copy_code, inv_id, inv_no, inv_code, bid_code,inv_name,
		mat_type_id, mat_type_no, inv_model, unit_code,
		is_com, is_highvalue, is_batch, is_bar, is_per_bar, is_quality,
		is_single_ven, is_disinfect, fac_id, plan_price, sell_price,
		is_zero_store, fac_no
		FROM mat_inv_dict
		WHERE group_id =#{group_id,jdbcType=INTEGER}
		and hos_id =#{hos_id,jdbcType=INTEGER}
		and copy_code =#{copy_code,jdbcType=VARCHAR}
		and use_state = 1
		and is_stop = 0
		<if test="is_com != null and is_com != ''">
			and is_com = #{is_com,jdbcType=INTEGER}
		</if>
		<if test="key != null and key != ''">
			and (
			inv_code like '%${key}%' or
			inv_name like '%${key}%'
			or
			bid_code like '%${key}%' or
			spell_code like '%${key}%' or
			wbx_code like '%${key}%' or
			alias like '%${key}%' or
			alias_spell like '%${key}%'
			)
		</if>
		), store_inv_tmp AS(
		SELECT inv_id FROM mat_store_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and store_id = #{store_id,jdbcType=INTEGER}
		), inv_cert_tmp as(
		select inv_id, group_id, hos_id, copy_code,max(cert_id) cert_id
		from mat_inv_cert_rela
		where group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		group by inv_id, group_id, hos_id, copy_code
		)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			, sup_inv_tmp AS(
			SELECT inv_id FROM mat_inv_sup
			WHERE group_id =
			#{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and sup_id = #{sup_id,jdbcType=INTEGER}
			)
		</if>
		SELECT
		a.inv_id, a.inv_no, a.inv_code,a.bid_code, a.inv_name, a.mat_type_id,
		b.mat_type_name, a.inv_model, a.unit_code, c.unit_name,
		a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar, a.is_quality,
		a.is_single_ven, a.is_disinfect, f.pack_code,
		g.pack_name pack_name, f.map_amount num_exchange, a.fac_id, e.fac_no, e.fac_name,
		a.plan_price, a.sell_price,
		case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
		nvl(maih.cur_amount, 0) end cur_amount, a.plan_price as price,
		mld.location_id, mld.location_code, mld.location_name
		,mic.cert_id,mic.cert_code
		from inv_tmp a
		left join mat_type_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and a.mat_type_no = b.mat_type_no
		left join hos_unit c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.unit_code = c.unit_code
		left join hos_fac_dict e
		on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.fac_id = e.fac_id
		and a.fac_no = e.fac_no
		left join mat_inv_unit_map f
		on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and a.inv_id = f.inv_id
		left join hos_package g
		on f.group_id = g.group_id
		and f.hos_id = g.hos_id
		and f.pack_code = g.pack_code
		left join mat_inv_hold mih
		on a.group_id = mih.group_id
		and a.hos_id = mih.hos_id
		and a.copy_code = mih.copy_code
		and mih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih
		on a.group_id = maih.group_id
		and a.hos_id = maih.hos_id
		and a.copy_code = maih.copy_code
		and maih.store_id = #{store_id,jdbcType=INTEGER}
		and a.inv_id = maih.inv_id
		left join mat_location_inv mli
		on a.group_id = mli.group_id
		and a.hos_id = mli.hos_id
		and a.copy_code = mli.copy_code
		and a.inv_id = mli.inv_id
		left join mat_location_dict mld
		on mli.group_id = mld.group_id
		and mli.hos_id = mld.hos_id
		and mli.copy_code = mld.copy_code
		and mli.location_id = mld.location_id
		and mld.is_stop = 0
		left join inv_cert_tmp ict
		on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic
		on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		where exists(select inv_id from store_inv_tmp where
		store_inv_tmp.inv_id = a.inv_id)
		<if
			test="by_sup_inv != null and by_sup_inv == 1 and sup_id != null and sup_id != ''">
			and ( not exists(select inv_id from mat_inv_sup where
			mat_inv_sup.inv_id = a.inv_id)
			or exists(select inv_id from sup_inv_tmp where sup_inv_tmp.inv_id =
			a.inv_id)
			)
		</if>
		order by a.inv_model, a.inv_code
	</select>

	<!--材料字典列表(没有材料库存,不带仓库) -->
	<select id="queryMatInvListNotStore" parameterType="java.util.Map" resultMap="matInv">
		WITH inv_tmp AS(
		SELECT
			group_id, hos_id, copy_code,bid_code, inv_id, inv_no, inv_code, inv_name,
			mat_type_id, mat_type_no, inv_model, unit_code,
			is_com, is_highvalue, is_batch, is_bar, is_per_bar, is_quality,is_single_ven, is_disinfect,
			fac_id, plan_price, sell_price, is_sec_whg, use_state, fac_no, alias,inv_structure
		FROM mat_inv_dict
		WHERE group_id =#{group_id,jdbcType=INTEGER}
			and hos_id =#{hos_id,jdbcType=INTEGER}
			and copy_code =#{copy_code,jdbcType=VARCHAR}
			and use_state = 1 <!-- 科室申请过滤停用材料 -->
			and is_stop = 0
			<if test="is_com != null and is_com != ''">
				and is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="key != null and key != ''">
				and (
				inv_code like '%${key}%' or
				inv_name like '%${key}%' or
				bid_code like '%${key}%' or
				spell_code like '%${key}%' or
				wbx_code like '%${key}%' or
				alias like '%${key}%' or
				alias_spell like '%${key}%'
				)
			</if>
			<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
			<if test="cur_date != null and cur_date != '' ">
				and inv_id not in (
					select inv_id from mat_inv_dict
					where group_id =#{group_id,jdbcType=INTEGER}
						and hos_id =#{hos_id,jdbcType=INTEGER}
						and copy_code =#{copy_code,jdbcType=VARCHAR}
						and use_state = 1
						and is_stop = 0
						AND edate is not null
						AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
				)
			</if>
		)
		SELECT
			a.inv_id, a.inv_no, a.inv_code,a.bid_code , hsd.sup_name, a.inv_name, a.mat_type_id, b.mat_type_name,
			a.inv_model, a.unit_code, c.unit_name, a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar, a.is_quality,
			a.is_single_ven, a.is_disinfect, f.pack_code, g.pack_name pack_name, f.map_amount num_exchange, a.fac_id,
			e.fac_no, e.fac_name, a.plan_price, a.sell_price, a.plan_price as price,
			msi.location_id, mld.location_code, mld.location_name, a.alias, a.inv_structure, a.is_sec_whg,
			case when a.is_com = 0 then nvl(mih.cur_amount, 0) else nvl(maih.cur_amount, 0) end cur_amount
		from inv_tmp a
		left join mat_inv_sup mis on a.group_id = mis.group_id
			and a.hos_id = mis.hos_id
			and a.copy_code = mis.copy_code
			and a.inv_id = mis.inv_id
			and mis.is_default=1
		left join hos_sup_dict hsd on mis.group_id = hsd.group_id
			and mis.hos_id =hsd.hos_id
			and mis.sup_id =hsd.sup_id
			and hsd.is_stop = 0 
		left join mat_type_dict b on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.mat_type_id = b.mat_type_id
			and a.mat_type_no = b.mat_type_no
		left join hos_unit c on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
			and c.is_stop = 0
		left join hos_fac_dict e on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
			and a.fac_no = e.fac_no
		left join mat_inv_unit_map f on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.copy_code = f.copy_code
			and a.inv_id = f.inv_id
		left join mat_store_inv msi on a.group_id = msi.group_id
			and a.hos_id = msi.hos_id
			and a.copy_code=msi.copy_code
			and a.inv_id = msi.inv_id
			and msi.is_apply = 1
			<!-- and msi.is_apply = 1 -->
		left join mat_inv_hold mih on msi.group_id = mih.group_id
			and msi.hos_id = mih.hos_id
			and msi.copy_code = mih.copy_code
			and msi.store_id = mih.store_id
			and msi.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih on msi.group_id = maih.group_id
			and msi.hos_id = maih.hos_id
			and msi.copy_code = maih.copy_code
			and msi.store_id = maih.store_id
			and msi.inv_id = maih.inv_id
		left join hos_package g on f.group_id = g.group_id
			and f.hos_id = g.hos_id
			and f.pack_code = g.pack_code
		<!-- left join mat_location_inv mli on a.group_id = mli.group_id and a.hos_id 
			= mli.hos_id and a.copy_code = mli.copy_code and a.inv_id = mli.inv_id left 
			join mat_location_dict mld on mli.group_id = mld.group_id and mli.hos_id 
			= mld.hos_id and mli.copy_code = mld.copy_code and mli.location_id = mld.location_id 
			and mld.is_stop = 0 -->
		left join mat_location_dict mld on msi.group_id = mld.group_id
			and msi.hos_id = mld.hos_id
			and msi.copy_code = mld.copy_code
			and msi.location_id = mld.location_id
			and msi.store_id = mld.store_id
			and mld.is_stop = 0
		<where>
			<!-- 判断是否只显示有库存或者0库存管理的材料 -->
			<if test="by_is_zero != null and by_is_zero == 1">
				and (case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
				nvl(maih.cur_amount, 0) end &gt; 0 or is_zero_store=1)
			</if>
		<if test="by_is_zero == null or by_is_zero == 0">
			<if test="is_zero != null and is_zero == 1">
				AND (
					nvl(mih.cur_amount, 0) + nvl(maih.cur_amount, 0) &gt; 0
				)
			</if>
			<if test="is_zero == null or is_zero == 0">
				AND a.use_state = 1 
				<if test="cur_date != null and cur_date != '' ">
					AND a.inv_id not in (
						SELECT inv_id
						FROM mat_inv_dict
						WHERE group_id =#{group_id,jdbcType=INTEGER}
							AND hos_id =#{hos_id,jdbcType=INTEGER}
							AND copy_code =#{copy_code,jdbcType=VARCHAR}
							AND is_stop = 0
							AND edate is not null
							AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
					)
				</if>
			</if>
		</if>
		    
		    
		   
		</where>
		order by a.inv_code
	</select>

	<!-- 代销选择物资材料所用 -->
	<select id="queryMatAffiInvList" parameterType="java.util.Map"
		resultMap="matInv">
		with inv_temp as (
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id, --材料ID
		e.inv_no, -- 材料变更号
		e.inv_code, --材料编码
		e.inv_name, --材料名称
		e.inv_model, --规格型号
		h.unit_name, --计量单位
		f.mat_type_name, --材料类别名称
		g.fac_name, --生成产商名称
		e.spell_code, --拼音码
		e.wbx_code, --五笔码
		a.batch_no, --批号
		a.bar_code, --条形码
		sum(nvl(a.left_amount, 0)) as left_amount, --当前库存数量
		sum(nvl(a.left_money, 0)) as left_money, --当前库存数量
		a.price, --单价
		nvl(a.sale_price, 0) as sale_price, --批发单价
		nvl(e.sell_price, 0) as sell_price, --零售单价
		a.location_id, --货位ID
		b.location_code, --货位编码
		b.location_name, --货位名称
		cc.inva_date, --有效期
		cc.disinfect_date, --灭菌日期
		e.alias, e.alias_spell,e.bid_code
		from mat_affi_fifo a
		left join mat_location_dict b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.location_id = b.location_id
		and b.is_stop=0
		left join mat_affi_in_detail cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id
			and a.copy_code=cc.copy_code and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn
			and a.bar_code=cc.bar_code and a.price=cc.price
		left join mat_affi_in dd on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id and cc.copy_code=dd.copy_code
			and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity c
		on a.group_id = c.group_id and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d
		on a.group_id = d.group_id and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e
		on a.group_id = e.group_id and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code and a.inv_id = e.inv_id
		and e.is_stop = 0 and e.use_state = 1
		left join mat_type_dict f
		on a.group_id = f.group_id and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g
		on a.group_id = g.group_id and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id and e.fac_no = g.fac_no
		left join hos_unit h
		on a.group_id = h.group_id and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		where
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER} 
		<if test="sup_id!=null and sup_id!=''">
		AND a.sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		and dd.bus_type_code in (1,27) 
		GROUP BY a.group_id, a.hos_id, a.copy_code, a.inv_id, e.inv_no, e.inv_code,
		e.inv_name, e.spell_code, e.alias, e.alias_spell,
		e.wbx_code, a.batch_no, a.bar_code, a.price, a.sale_price, e.sell_price,
		a.location_id, b.location_code,
		b.location_name, cc.inva_date, cc.disinfect_date, e.inv_model, f.mat_type_name,
		g.fac_name, h.unit_name,e.bid_code
		),
		out_temp as (
		select inv_id, batch_no, bar_code, price, sum(amount) amount
		from(
		--出库未确认
		select
		b.inv_id,
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		sum(nvl(b.amount, 0)) as amount
		from mat_affi_out a
		left join mat_affi_out_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '29' ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price
		--退货未确认
		union all
		select
		b.inv_id,
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		-1 * sum(nvl(b.amount, 0)) as amount
		from mat_affi_in a
		left join mat_affi_in_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.in_id = b.in_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		<if test="sup_id!=null and sup_id!=''">
		AND a.sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code = '30'
		<if test="in_id != null and in_id != ''">
						<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price
		)
		group by inv_id, batch_no, bar_code, price
		),inv_cert_tmp as(
		select a.inv_id,a.group_id,a.hos_id,a.copy_code,min(a.cert_id) cert_id
		from mat_inv_cert_rela a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		group by a.inv_id,a.group_id,a.hos_id,a.copy_code
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_no, --批号
		a.bar_code, --条形码
		a.left_amount as cur_amount, --当前库存数量
		a.left_money as cur_money, --当前库存金额
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_id, --货位ID
		a.location_code, --货位编码
		a.location_name, --货位名称
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		mic.cert_id,
		mic.cert_code,a.bid_code
		from inv_temp a
		left join out_temp b
		on a.inv_id = b.inv_id
		and a.batch_no= b.batch_no
		and a.bar_code= b.bar_code
		and a.price = b.price
		left join inv_cert_tmp ict
		on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic
		on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		<where>
			nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.bid_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>
		</where>
		order by a.inv_code, a.inva_date
	</select>
	<!-- 业务数据选择物资材料所用 库存盘点 -->
	<select id="queryMatStockInvList" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with
		inv_temp
		as
		(
		select a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id
		, e.inv_no, e.inv_code, e.inv_name, e.inv_model, h.unit_name
		, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code, a.batch_no
		, a.bar_code, sum(nvl(a.out_amount, 0)) as out_amount,
		sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0))
		as left_money, a.price
		, nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
		sell_price, msi.location_id location_new_id, b.location_code
		location_new_code , b.location_name location_new_name
		, cc.inva_date, cc.disinfect_date, e.alias, e.alias_spell, a.location_id
		from mat_fifo_balance a
		<!-- left join mat_location_dict b on a.group_id = b.group_id and a.hos_id 
			= b.hos_id and a.copy_code = b.copy_code and a.location_id = b.location_id 
			and b.is_stop = 0 -->
		left join mat_store_inv msi on a.group_id=msi.group_id
		and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join
		mat_location_dict b on a.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and b.is_stop = 0
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               and  b.group_id = #{group_id,jdbcType=INTEGER}
		       AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		       AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
		<!-- left join mat_batch_validity c on a.group_id = c.group_id
		and a.hos_id =
		c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and
		a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id
		and a.hos_id =
		d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and
		a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER} 
		
		
		group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
		e.inv_code, e.inv_name,
		e.spell_code, e.alias, e.alias_spell, e.wbx_code, a.batch_no, a.bar_code, a.price,
		a.sale_price, e.sell_price,
		msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
		e.inv_model,
		f.mat_type_name, g.fac_name, h.unit_name,a.location_id
		),
		out_temp
		as
		(
		select inv_id, batch_no, bar_code, price, location_id
		, sum(amount) as amount
		from (
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		, sum(nvl(b.amount, 0)) as amount
		from mat_out_main a
		left join mat_out_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		union all
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		, -1 * sum(nvl(b.amount, 0)) as amount
		from mat_in_main a
		left join mat_in_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.in_id = b.in_id

		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		and a.bus_type_code in (10,12,16,22)
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
						<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		)
		group by inv_id, batch_no, bar_code, price, location_id
		),
		inv_cert_tmp
		as
		(
		select a.inv_id, a.group_id, a.hos_id, a.copy_code, min(a.cert_id) as
		cert_id
		from mat_inv_cert_rela a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		group by a.inv_id, a.group_id, a.hos_id, a.copy_code
		)
		select a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_no, --批号
		a.bar_code, --条形码
		a.out_amount as out_amount, --已出库数量
		a.left_amount as cur_amount, --当前库存数量
		a.left_money as cur_money, --当前库存金额
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_new_id, --货位ID
		a.location_new_code, --货位编码
		a.location_new_name, --货位名称
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		mic.cert_id,
		mic.cert_code
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id
		and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price
		and a.location_id = b.location_id
		left join inv_cert_tmp ict on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		<where>
			nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
			
			<!-- <if test="bus_type_code == null or bus_type_code != '21'"> and nvl(a.left_amount, 
				0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
				== '21'"> and a.out_amount > 0 </if> -->
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.bid_code like '%${key}%' or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>

			<!-- 2017-03-08材料入库：选择材料页查询列表参数 -->
			<if test="inv_id != null and inv_id != '' ">
				and a.inv_id = #{inv_id}
			</if>
		</where>
		order by a.inv_model, a.inv_code, a.batch_no, a.inva_date
	</select>

	<!-- 业务数据选择物资材料所用 材料调拨 -->
	<select id="queryMatStockInvListTran" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with
		inv_temp
		as
		(
		select a.group_id, a.hos_id, a.copy_code, e.bid_code,
		a.inv_id
		, e.inv_no, e.inv_code, e.inv_name, e.inv_model, h.unit_name
		, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code, a.batch_no
		, a.bar_code, sum(nvl(a.out_amount, 0)) as out_amount,
		sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0))
		as left_money, a.price
		, nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
		sell_price, msi.location_id location_new_id, b.location_code
		location_new_code , b.location_name location_new_name
		, cc.inva_date, cc.disinfect_date, e.alias, e.alias_spell, a.location_id,
		e.inv_structure
		from mat_fifo_balance a
		<!-- left join mat_location_dict b on a.group_id = b.group_id and a.hos_id 
			= b.hos_id and a.copy_code = b.copy_code and a.location_id = b.location_id 
			and b.is_stop = 0 -->
		left join mat_store_inv msi on a.group_id=msi.group_id
		and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join
		mat_location_dict b on a.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and b.is_stop = 0
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               and  b.group_id = #{group_id,jdbcType=INTEGER}
		       AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		       AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
		<!-- left join mat_batch_validity c on a.group_id = c.group_id
		and a.hos_id =
		c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and
		a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id
		and a.hos_id =
		d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and
		a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER} 
		and a.left_amount &gt; 0
		
		group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
		e.inv_code, e.inv_name,
		e.spell_code, e.alias, e.alias_spell, e.wbx_code, a.batch_no, a.bar_code, a.price,
		a.sale_price, e.sell_price,
		msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
		e.inv_model,
		f.mat_type_name, g.fac_name, h.unit_name, a.location_id, e.inv_structure
		),
		out_temp
		as
		(
		select inv_id, batch_no, bar_code, price, location_id,inva_date ,disinfect_date
		, sum(amount) as amount
		from (
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date
		, sum(nvl(b.amount, 0)) as amount
		from mat_out_main a
		left join mat_out_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id ,b.inva_date , b.disinfect_date
		union all
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date ,b.disinfect_date
		, -1 * sum(nvl(b.amount, 0)) as amount
		from mat_in_main a
		left join mat_in_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.in_id = b.in_id

		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code in (10,12,16,22)
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
						<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id ,b.inva_date , b.disinfect_date
		)
		group by inv_id, batch_no, bar_code, price, location_id ,inva_date ,disinfect_date
		),
		inv_cert_tmp
		as
		(
		select a.inv_id, a.group_id, a.hos_id, a.copy_code, min(a.cert_id) as
		cert_id
		from mat_inv_cert_rela a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		group by a.inv_id, a.group_id, a.hos_id, a.copy_code
		)
		select a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.alias,
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.inv_structure,
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_no, --批号
		a.bar_code, --条形码
		a.out_amount as out_amount, --已出库数量
		a.left_amount as cur_amount, --当前库存数量
		a.left_money as cur_money, --当前库存金额
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_new_id, --货位ID
		a.location_new_code, --货位编码
		a.location_new_name, --货位名称
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		mic.cert_id,
		mic.cert_code
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id
		and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price
		and nvl(a.inva_date, to_date('2000-01-01','yyyy-MM-dd')) = nvl(b.inva_date, to_date('2000-01-01','yyyy-MM-dd'))
		and nvl(a.disinfect_date, to_date('2000-01-01','yyyy-MM-dd')) = nvl(b.disinfect_date, to_date('2000-01-01','yyyy-MM-dd'))
		and a.location_id = b.location_id
		left join inv_cert_tmp ict on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		<where>
			nvl(a.left_amount, 0) - nvl(b.amount, 0)   &gt;	 0
			<!-- <if test="bus_type_code == null or bus_type_code != '21'"> and nvl(a.left_amount, 
				0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
				== '21'"> and a.out_amount > 0 </if> -->
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.bid_code like '%${key}%' or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>

			<!-- 2017-03-08材料入库：选择材料页查询列表参数 -->
			<if test="inv_id != null and inv_id != '' ">
				and a.inv_id = #{inv_id}
			</if>
			<if test="invMsg!=null and invMsg!=''">
				<foreach collection="invMsg" item="invObj">
				  and a.inv_id || ',' || a.batch_no || ',' || a.bar_code|| ',' || a.inva_date || ',' || a.disinfect_date || ',' || a.price!= #{invObj}
				</foreach>
			</if>
		</where>
		order by a.inv_model, a.inv_code, a.batch_no, a.inva_date
	</select>


	<!-- 业务数据选择物资材料所用 材料出库 -->
	<select id="queryMatStockInvListOut" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with
		inv_temp
		as
		(
		select a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id
		, e.inv_no, e.inv_code, e.inv_name, e.inv_model, h.unit_name
		, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code, a.batch_no
		, a.bar_code, sum(nvl(a.out_amount, 0)) as out_amount,
		sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0))
		as left_money, a.price
		, nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
		sell_price, msi.location_id location_new_id, b.location_code
		location_new_code , b.location_name location_new_name
		, cc.inva_date, cc.disinfect_date, e.alias, e.alias_spell, a.location_id,
		e.inv_structure
		from mat_fifo_balance a
		<!-- left join mat_location_dict b on a.group_id = b.group_id and a.hos_id 
			= b.hos_id and a.copy_code = b.copy_code and a.location_id = b.location_id 
			and b.is_stop = 0 -->
		left join mat_store_inv msi on a.group_id=msi.group_id
		and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict b on a.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and b.is_stop = 0
		left join (
		SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE a.group_id = #{group_id,jdbcType=INTEGER}
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				<!-- 	AND b.store_id = #{store_id,jdbcType=INTEGER} -->
               		AND b.state = 3
                	AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
		) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
             

		<!-- left join mat_batch_validity c on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code and h.is_stop = 0
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		and a.left_amount &gt; 0 
		
		
		group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
		e.inv_code, e.inv_name,
		e.spell_code, e.alias, e.alias_spell, e.wbx_code, a.batch_no, a.bar_code, a.price,
		a.sale_price, e.sell_price,
		msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
		e.inv_model,
		f.mat_type_name, g.fac_name, h.unit_name, a.location_id, e.inv_structure
		),
		out_temp
		as
		(
		select inv_id, batch_no, bar_code, price, location_id,inva_date ,disinfect_date
		, sum(amount) as amount
		from (
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date ,b.disinfect_date
		, sum(nvl(b.amount, 0)) as amount
		from mat_out_main a
		left join mat_out_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
	 	AND a.store_id = #{store_id,jdbcType=INTEGER} 
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code not in ('21','48','49','50') ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
			<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date
		union all
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.inva_date , b.disinfect_date
		, -1 * sum(nvl(b.amount, 0)) as amount
		from mat_in_main a
		left join mat_in_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.in_id = b.in_id

		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
	 	AND a.store_id = #{store_id,jdbcType=INTEGER} 
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code in (10,12,16,22)
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
			<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id ,b.inva_date ,b.disinfect_date
		)
		group by inv_id, batch_no, bar_code, price, location_id ,inva_date, disinfect_date
		),
		inv_cert_tmp
		as
		(
		select micr.group_id, micr.hos_id, micr.copy_code, micr.inv_id,
		max(micr.cert_id) as cert_id
		from mat_inv_cert_rela micr
		left join mat_inv_cert mic on mic.cert_id = micr.cert_id
		where micr.group_id = #{group_id,jdbcType=INTEGER}
		and micr.hos_id = #{hos_id,jdbcType=INTEGER}
		and micr.copy_code = #{copy_code,jdbcType=VARCHAR}
		and mic.cert_state = 1
		group by micr.group_id, micr.hos_id, micr.copy_code, micr.inv_id

		)
		select a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.alias,
		a.inv_structure,
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_no, --批号
		a.bar_code, --条形码
		a.out_amount as out_amount, --已出库数量
		a.left_amount as cur_amount, --当前库存数量
		a.left_money as cur_money, --当前库存金额
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_new_id, --货位ID
		a.location_new_code, --货位编码
		a.location_new_name, --货位名称
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		mic.cert_id,
		mic.cert_code
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id
		and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price
		and nvl(a.inva_date, to_date('2000-01-01','yyyy-MM-dd')) = nvl(b.inva_date, to_date('2000-01-01','yyyy-MM-dd'))
		and nvl(a.disinfect_date, to_date('2000-01-01','yyyy-MM-dd')) = nvl(b.disinfect_date, to_date('2000-01-01','yyyy-MM-dd'))
		and a.location_id = b.location_id
		left join inv_cert_tmp ict on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		<where>

			 nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt;	 0
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.bid_code like '%${key}%' or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>

			<!-- 2017-03-08材料入库：选择材料页查询列表参数 -->
			<if test="inv_id != null and inv_id != '' ">
				and a.inv_id = #{inv_id}
			</if>
			
			<!-- <if test="invMsg!=null and invMsg!=''">
				<foreach collection="invMsg" item="invObj">
				and not regexp_like(a.inv_id||','||a.batch_no||','||a.bar_code||','||a.price ,'^${invObj}0*')
				</foreach>
			</if> -->
			
			and rownum &lt; 200
			 
		</where>
		order by a.inv_model, a.inv_code, a.batch_no, a.inva_date
	</select>

	<!-- 业务数据选择物资材料所用 科室退库 -->
	<select id="queryMatStockInvListOutByBack" parameterType="java.util.Map" resultType="java.util.TreeMap">
		   select mid.inv_code,
			       mid.inv_name,
			       mid.alias,
			       mtd.mat_type_name,
			       mid.inv_model,
			       hu.unit_name,
			       mid.inv_structure,
			       mout.price,
			       sum(mout.amount) as cur_amount,
			       hfd.fac_name, 
			       mout.batch_no,
			       mout.bar_code,
			       mid.is_charge,
			       mout.inv_id,
			       mout.inv_no,
			       mid.bid_code,
			       mic.cert_code,
			       mld.location_name,mout.inva_date,mout.disinfect_date
			  from mat_out_main mom
			  left join mat_out_detail mout
			    on mom.group_id = mout.group_id
			   and mom.hos_id = mout.hos_id
			   and mom.copy_code = mout.copy_code
			   and mom.out_id = mout.out_id
			  left join mat_inv_dict mid
			    on mout.group_id = mid.group_id
			   and mout.hos_id = mid.hos_id
			   and mout.copy_code = mid.copy_code
			   and mout.inv_id = mid.inv_id
			   and mid.is_stop = 0
			  left join mat_type_dict mtd
			    on mid.group_id = mtd.group_id
			   and mid.hos_id = mtd.hos_id
			   and mid.copy_code = mtd.copy_code
			   and mid.mat_type_id = mtd.mat_type_id
			   and mtd.is_stop = 0
			  left join hos_unit hu
			    on mid.group_id = hu.group_id
			   and mid.hos_id = hu.hos_id
			   and mid.unit_code = hu.unit_code
			  left join hos_fac_dict hfd
			    on mid.group_id = hfd.group_id
			   and mid.hos_id = hfd.hos_id
			   and mid.fac_id = hfd.fac_id
			   and hfd.is_stop = 0
			  left join (
		      	select micr.group_id, micr.hos_id, micr.copy_code, micr.inv_id,
		        	max(micr.cert_id) as cert_id
		       	from mat_inv_cert_rela micr
		       	left join mat_inv_cert mic on mic.cert_id = micr.cert_id
		       	where micr.group_id = #{group_id}
			       and micr.hos_id = #{hos_id}
			       and micr.copy_code = #{copy_code}
			       and mic.cert_state = 1
		       	group by micr.group_id, micr.hos_id, micr.copy_code, micr.inv_id
       		  ) ict on mout.group_id = ict.group_id
			   	and mout.hos_id = ict.hos_id
			   	and mout.copy_code = ict.copy_code
			   	and mout.inv_id = ict.inv_id
			  left join mat_inv_cert mic on mic.group_id = ict.group_id
			   	and mic.hos_id = ict.hos_id
			   	and mic.copy_code = ict.copy_code
			   	and mic.cert_id = ict.cert_id
			  left join mat_store_inv msi on mom.group_id = msi.group_id
			   	and mom.hos_id = msi.hos_id
			   	and mom.copy_code = msi.copy_code
			   	and mom.store_id = msi.store_id
			   	and mout.inv_id = msi.inv_id
			  left join mat_location_dict mld on msi.group_id = mld.group_id
			   	and msi.hos_id = mld.hos_id
			   	and msi.copy_code = mld.copy_code
			   	and msi.location_id = mld.location_id				
		 	  where mom.group_id = #{group_id}
			   	and mom.hos_id = #{hos_id}
			   	and mom.copy_code = #{copy_code}
			   	and mom.store_id = #{store_id}
			   	and mom.dept_id = #{dept_id}
			   	<!-- liusiqi 180416 采购退货的要计算在内,已经退完货的材料不再显示 -->
			   	<!-- and mout.amount &gt; 0 -->
		   		<if test="key != null and key != ''">
					and (
						mid.inv_code like '%${key}%' or
						mid.inv_name like '%${key}%' or
						mid.bid_code like '%${key}%' or
						mid.spell_code like '%${key}%' or
						mid.wbx_code like '%${key}%' or
						mid.alias like '%${key}%' or
						mid.alias_spell like '%${key}%'
					)
				</if>
				<if test="invMsg!=null and invMsg!=''">
					<foreach collection="invMsg" item="invObj">
				  		and mid.inv_id || ',' || mout.batch_no || ',' || mout.bar_code|| ',' || mout.inva_date || ',' || mout.disinfect_date || ',' || mout.price!= #{invObj}
					</foreach>
				</if>
			 	group by mid.inv_code,
			          mid.inv_name,
			          mid.alias,
			          mtd.mat_type_name,
			          mid.inv_model,
			          hu.unit_name,
			          mid.inv_structure,
			          mout.price,
			          hfd.fac_name,
			          mout.batch_no,
			          mout.bar_code,
			          mid.is_charge,
			          mout.inv_id,
			          mout.inv_no,
			          mid.bid_code,
			          mic.cert_code,
			          mld.location_name,mout.inva_date,mout.disinfect_date 
			          having sum(mout.amount)  &gt; 0
			order by mid.inv_model, mid.inv_code 
		
	 </select>


	<!-- 业务数据选择物资材料所用 材料退货 -->
	<select id="queryMatStockInvListBack" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with
		inv_temp
		as
		(
		select a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id
		, e.inv_no, e.inv_code, e.inv_name, e.inv_model, h.unit_name
		, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code, a.batch_no
		, a.bar_code, sum(nvl(a.out_amount, 0)) as out_amount,
		sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0))
		as left_money, a.price
		, nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
		sell_price, msi.location_id location_new_id, b.location_code
		location_new_code , b.location_name location_new_name
		, cc.inva_date, cc.disinfect_date, e.alias, e.alias_spell, a.location_id
		from mat_fifo_balance a
		<!-- left join mat_location_dict b on a.group_id = b.group_id and a.hos_id 
			= b.hos_id and a.copy_code = b.copy_code and a.location_id = b.location_id 
			and b.is_stop = 0 -->
		left join mat_store_inv msi on a.group_id=msi.group_id
		and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join
		mat_location_dict b on a.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and b.is_stop = 0
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               and  b.group_id = #{group_id,jdbcType=INTEGER}
		       AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		       AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
		<!-- left join mat_batch_validity c on a.group_id = c.group_id
		and a.hos_id =
		c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and
		a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id
		and a.hos_id =
		d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and
		a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND a.sup_id = #{sup_id,jdbcType=INTEGER} 
		
		
		group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
		e.inv_code, e.inv_name,
		e.spell_code, e.alias, e.alias_spell, e.wbx_code, a.batch_no, a.bar_code, a.price,
		a.sale_price, e.sell_price,
		msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
		e.inv_model,
		f.mat_type_name, g.fac_name, h.unit_name,a.location_id
		),
		out_temp
		as
		(
		select inv_id, batch_no, bar_code, price, location_id
		, sum(amount) as amount
		from (
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		, sum(nvl(b.amount, 0)) as amount
		from mat_out_main a
		left join mat_out_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		union all
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		, -1 * sum(nvl(b.amount, 0)) as amount
		from mat_in_main a
		left join mat_in_detail b on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.in_id = b.in_id

		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code in (10,12,16,22)
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
								<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id
		)
		group by inv_id, batch_no, bar_code, price, location_id
		),
		inv_cert_tmp
		as
		(
		select a.inv_id, a.group_id, a.hos_id, a.copy_code, min(a.cert_id) as
		cert_id
		from mat_inv_cert_rela a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		group by a.inv_id, a.group_id, a.hos_id, a.copy_code
		)
		select a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_no, --批号
		a.bar_code, --条形码
		a.out_amount as out_amount, --已出库数量
		a.left_amount as cur_amount, --当前库存数量
		a.left_money as cur_money, --当前库存金额
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_new_id, --货位ID
		a.location_new_code, --货位编码
		a.location_new_name, --货位名称
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		mic.cert_id,
		mic.cert_code
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id
		and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price
		and a.location_id = b.location_id
		left join inv_cert_tmp ict on ict.group_id = a.group_id
		and ict.hos_id = a.hos_id
		and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic on mic.group_id = ict.group_id
		and mic.hos_id = ict.hos_id
		and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id
		and mic.cert_state = 1
		<where>
			nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
			<!-- <if test="bus_type_code == null or bus_type_code != '21'"> and nvl(a.left_amount, 
				0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
				== '21'"> and a.out_amount > 0 </if> -->
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.bid_code like '%${key}%' or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>

			<!-- 2017-03-08材料入库：选择材料页查询列表参数 -->
			<if test="inv_id != null and inv_id != '' ">
				and a.inv_id = #{inv_id}
			</if>
		</where>
		order by a.inv_model, a.inv_code, a.batch_no, a.inva_date
	</select>

	<!-- 业务数据选择物资材料所用 -->
	<select id="queryMatStockInvDetailList" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with inv_temp as (
		select a.group_id, a.hos_id, a.copy_code, a.inv_id, e.inv_no
		, e.inv_code, e.inv_name, e.inv_model, h.unit_name, f.mat_type_name
		, g.fac_name, e.spell_code, e.wbx_code, a.batch_sn, a.batch_no
		, a.bar_code, nvl(a.out_amount, 0) as out_amount, nvl(a.left_amount, 0)
		as left_amount, nvl(a.price, 0) as price, nvl(a.sale_price, 0) as
		sale_price
		, nvl(e.sell_price, 0) as sell_price, nvl(msi.location_id, 0) as
		location_new_id, b.location_code location_new_code, b.location_name
		location_new_name, cc.inva_date
		, cc.disinfect_date, e.alias, e.alias_spell, a.location_id
		from
		mat_fifo_balance a
		left join mat_store_inv msi on a.group_id = msi.group_id
		and a.hos_id = msi.hos_id
		and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict b on msi.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and msi.store_id = b.store_id
		and b.is_stop = 0
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               and  b.group_id = #{group_id,jdbcType=INTEGER}
		       AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		       AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
		<!-- left join mat_batch_validity c
		on a.group_id = c.group_id and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d
		on a.group_id = d.group_id and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e
		on a.group_id = e.group_id and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code and a.inv_id = e.inv_id
		and e.is_stop = 0
		<!-- and e.use_state = 1 --><!-- 20170331停用可以出库 -->
		left join mat_type_dict f
		on a.group_id = f.group_id and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g
		on a.group_id = g.group_id and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id and e.fac_no = g.fac_no
		left join hos_unit h
		on a.group_id = h.group_id and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code

		where a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			<if test="inv_id != null and inv_id != ''">
				AND a.inv_id = #{inv_id,jdbcType=INTEGER}
			</if> 
			<if test="batch_no != null and batch_no != ''">
				AND a.batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="bar_code != null and bar_code != ''">
				AND a.bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
			<if test="price != null and price != ''">
				AND a.price = #{price,jdbcType=NUMERIC}
			</if>
			<if test="inva_date != null and inva_date != ''">
				and cc.inva_date = #{inva_date,jdbcType=DATE}
			</if>
			<if test="disinfect_date != null and disinfect_date != ''">
				and cc.disinfect_date = #{disinfect_date,jdbcType=DATE}
			</if>
			
			<!-- <if test="apply_id != null and apply_id != ''"> AND j.apply_id= #{apply_id,jdbcType=NUMERIC} 
				</if> -->
			<!-- <if test="location_id != null"> AND nvl(a.location_id,0) = #{location_id,jdbcType=INTEGER} 
				</if> -->
		),
		out_temp as (
		select inv_id, batch_no, batch_sn, bar_code, price, location_id, sum(amount)
		amount
		from(
		--出库未确认
		select
		b.inv_id,
		b.batch_sn, --批次
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		nvl(b.location_id,0) location_id, --货位
		sum(nvl(b.amount, 0)) as amount

		from mat_out_main a
		left join mat_out_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND b.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND b.batch_no = #{batch_no,jdbcType=INTEGER}
		</if>
		<if test="bar_code != null and bar_code != ''">
			AND b.bar_code = #{bar_code,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND b.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="inva_date != null and inva_date != ''">
			and b.inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
			and b.disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null">
			AND nvl(b.location_id,0) = #{location_id,jdbcType=INTEGER}
		</if>
		group by b.inv_id, b.batch_sn, b.batch_no, b.bar_code, b.price,
		b.location_id
		--退货未确认
		union all
		select
		b.inv_id,
		b.batch_sn, --批次
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		nvl(b.location_id,0) location_id, --货位
		-1 * sum(nvl(b.amount, 0)) as amount

		from mat_in_main a
		left join mat_in_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.in_id = b.in_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code in (10,12,16,22) ]]>
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
						<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND b.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND b.batch_no = #{batch_no,jdbcType=INTEGER}
		</if>
		<if test="bar_code != null and bar_code != ''">
			AND b.bar_code = #{bar_code,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND b.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="inva_date != null and inva_date != ''">
			and b.inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
			and b.disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null">
			AND nvl(b.location_id,0) = #{location_id,jdbcType=INTEGER}
		</if>
		group by b.inv_id, b.batch_sn, b.batch_no, b.bar_code, b.price,
		b.location_id,b.note
		)
		group by inv_id, batch_no, batch_sn, bar_code, price, location_id
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_sn, --批次
		a.batch_no, --批号
		a.bar_code, --条形码
		a.out_amount as out_amount, --已出库数量
		a.left_amount as cur_amount, --当前库存数量
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_new_id ,
		a.location_new_name,
		a.location_new_code,
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		a.alias,
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		a.out_amount as all_out_amount,  <!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->
		a.left_amount as all_cur_amount,  <!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS all_imme_amount <!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->

		from inv_temp a
		left join out_temp b
		on a.inv_id = b.inv_id
		and a.batch_sn= b.batch_sn
		and a.batch_no= b.batch_no
		and a.bar_code= b.bar_code
		and a.price = b.price
		and a.location_id = b.location_id
		left join mat_apply_detail mpd on
		a.group_id=mpd.group_id
		and a.hos_id=mpd.hos_id
		and a.copy_code =mpd.hos_id
		and a.inv_id=mpd.inv_id
		<where>
		   <if test="bus_type_code == null ">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
			</if>
			<if test="bus_type_code != null ">
				<if test="bus_type_code == '21'">
					and a.out_amount &gt; 0
				</if>
				<if
					test="bus_type_code == '11' or bus_type_code == '17' or bus_type_code == '19' or bus_type_code == '23'">
					<if test="flag == 1">
						and (nvl(a.left_amount, 0) - nvl(b.amount, 0)) &gt; 0
					</if>
					<if test="flag == 0">
						and a.out_amount &gt; 0
					</if>

				</if>
				<if
					test="bus_type_code != '21' and bus_type_code != '11' and bus_type_code != '17' and bus_type_code != '19' and bus_type_code != '23'">
					and nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
				</if>
			</if>
			<!-- <if test="bus_type_code == null or bus_type_code != '21'"> and nvl(a.left_amount, 
				0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
				== '21'"> and a.out_amount > 0 </if> -->
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>
		</where>

		<if test="flag == 1">
			order by a.inv_name, nvl(a.inva_date,to_date('1999-01-01','yyyy-MM-dd')),a.batch_no,  a.batch_sn,a.bar_code
		</if>
		<if test="flag == 0">
			order by a.inv_code, a.batch_no desc, a.inva_date desc,
			a.batch_sn desc,a.bar_code desc  
		</if>
		
		<if test="flag == ''">
			order by a.inv_code, nvl(a.inva_date,to_date('1999-01-01','yyyy-MM-dd')),a.batch_no,  a.batch_sn
		</if>

		<!-- <if test="bus_type_code == null or bus_type_code != '21'"> order by 
			a.inv_name, a.batch_no, a.inva_date, a.batch_sn </if> <if test="bus_type_code 
			!= null and bus_type_code == '21'"> order by a.inv_code, a.batch_no desc, 
			a.inva_date desc, a.batch_sn desc </if> -->
	</select>

	<!-- 判断材料库存是否充足 --> 
	<select id="existsMatStockInvIsEnough" parameterType="java.util.List"
		resultType="String">
		with list_temp as (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER} as group_id,
			#{item.hos_id,jdbcType=INTEGER} as hos_id,
			#{item.copy_code,jdbcType=VARCHAR} as copy_code,
			<if test="item.out_id != null and item.out_id != ''">
				#{item.out_id,jdbcType=INTEGER} as out_id,
			</if>
			<if test="item.out_id == null or item.out_id == ''">
				0 as out_id,
			</if>
			<if test="item.in_id != null and item.in_id != ''">
				#{item.in_id,jdbcType=INTEGER} as in_id,
			</if>
			<if test="item.in_id == null or item.in_id == ''">
				0 as in_id,
			</if>
			#{item.store_id,jdbcType=INTEGER} as store_id,
			#{item.inv_id,jdbcType=INTEGER} as inv_id,
			#{item.batch_no,jdbcType=VARCHAR} as batch_no,
			#{item.batch_sn,jdbcType=INTEGER} as batch_sn,
			#{item.bar_code,jdbcType=VARCHAR} as bar_code,
			#{item.price,jdbcType=NUMERIC} as price,
			#{item.location_id,jdbcType=VARCHAR} as location_id,
			#{item.amount,jdbcType=INTEGER} as amount
			from dual
		</foreach>
		),
		inv_temp as (
		select
		group_id,
		hos_id,
		copy_code,
		store_id,
		inv_id,
		batch_sn, --批次
		batch_no, --批号
		bar_code, --条形码
		price,
		location_id,
		amount,
		sum(imme_amount) as imme_amount
		from (
		--出库未确认数量
		select
		lt.group_id,
		lt.hos_id,
		lt.copy_code,
		lt.store_id,
		lt.inv_id,
		lt.batch_sn, --批次
		lt.batch_no, --批号
		lt.bar_code, --条形码
		lt.price, --单价
		lt.location_id, --货位
		lt.amount,
		sum(nvl(modet.amount, 0)) as imme_amount
		from list_temp lt
		left join mat_out_main mom
		on lt.group_id = mom.group_id and lt.hos_id = mom.hos_id
		and lt.copy_code = mom.copy_code and lt.store_id = mom.store_id 
					<![CDATA[ 
					and (lt.out_id = 0 or lt.out_id <> mom.out_id) 
					and mom.state < 3 
					and mom.bus_type_code <> '21' ]]>
		left join mat_out_detail modet
		on lt.group_id = modet.group_id and lt.hos_id = modet.hos_id
		and lt.copy_code = modet.copy_code and mom.out_id = modet.out_id
		and lt.inv_id = modet.inv_id and lt.batch_no = modet.batch_no
		and lt.batch_sn = modet.batch_sn and lt.bar_code = modet.bar_code
		and lt.location_id = modet.location_id and lt.price = modet.price
		AND <![CDATA[ modet.amount_money > 0 ]]>
		group by lt.group_id, lt.hos_id, lt.copy_code, lt.store_id, lt.inv_id,
		lt.batch_sn,
		lt.batch_no, lt.bar_code, lt.price, lt.location_id, lt.amount
		--退货未确认数量
		union all
		select
		lt.group_id,
		lt.hos_id,
		lt.copy_code,
		lt.store_id,
		lt.inv_id,
		lt.batch_sn, --批次
		lt.batch_no, --批号
		lt.bar_code, --条形码
		lt.price, --单价
		lt.location_id, --货位
		lt.amount,
		-1 * sum(nvl(midet.amount, 0)) as imme_amount --退货记录的是负数
		from list_temp lt
		left join mat_in_main mim
		on lt.group_id = mim.group_id and lt.hos_id = mim.hos_id
		and lt.copy_code = mim.copy_code and lt.store_id = mim.store_id 
					<![CDATA[ 
					and (lt.in_id = 0 or lt.in_id <> mim.in_id) 
					and mim.state < 3 
					and mim.bus_type_code  in (10,12,16,22) ]]>
		left join mat_in_detail midet
		on lt.group_id = midet.group_id and lt.hos_id = midet.hos_id
		and lt.copy_code = midet.copy_code and mim.in_id = midet.in_id
		and lt.inv_id = midet.inv_id and lt.batch_no = midet.batch_no
		and lt.batch_sn = midet.batch_sn and lt.bar_code = midet.bar_code
		and lt.location_id = midet.location_id and lt.price = midet.price
		and <![CDATA[ midet.amount_money < 0 ]]>
		group by lt.group_id, lt.hos_id, lt.copy_code, lt.store_id, lt.inv_id,
		lt.batch_sn,
		lt.batch_no, lt.bar_code, lt.price, lt.location_id, lt.amount
		)
		group by group_id, hos_id, copy_code, store_id, inv_id, batch_sn, batch_no,
		bar_code, price, location_id, amount
		)
		select to_char(wm_concat(to_char('<![CDATA[</br>]]>'||mid.inv_code||'
		'||mid.inv_name)))
		from inv_temp it
		left join mat_fifo_balance mfb
		on it.group_id = mfb.group_id and it.hos_id = mfb.hos_id
		and it.copy_code = mfb.copy_code and it.store_id = mfb.store_id
		and it.inv_id = mfb.inv_id and it.batch_no = mfb.batch_no
		and it.batch_sn = mfb.batch_sn and it.bar_code = mfb.bar_code
		and it.location_id = mfb.location_id and it.price = mfb.price
		left join
		mat_inv_dict mid
		on it.group_id = mid.group_id and it.hos_id = mid.hos_id
		and it.copy_code = mid.copy_code and it.inv_id = mid.inv_id
		and mid.is_stop = 0
		where <![CDATA[
			(
				(it.amount > 0 and mfb.left_amount - it.imme_amount - it.amount < 0)
				or (it.amount < 0 and mfb.out_amount - (-1 * it.amount) < 0)
			)
			AND rownum <= 50]]>
	</select>

	<!-- 退库判断科室领用数量是否充足 -->
	<select id="existsMatStockInvIsAppEnough" parameterType="java.util.List" resultType="String">
		with list_temp as (
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.group_id,jdbcType=INTEGER} as group_id,
				#{item.hos_id,jdbcType=INTEGER} as hos_id,
				#{item.copy_code,jdbcType=VARCHAR} as copy_code,
				<if test="item.out_id != null and item.out_id != ''">
					#{item.out_id,jdbcType=INTEGER} as out_id,
				</if>
				<if test="item.out_id == null or item.out_id == ''">
					0 as out_id,
				</if>
				#{item.store_id,jdbcType=INTEGER} as store_id,
				#{item.dept_id,jdbcType=INTEGER} as dept_id,
				#{item.inv_id,jdbcType=VARCHAR} as inv_id,
				#{item.batch_no,jdbcType=VARCHAR} as batch_no,
				<!-- #{item.batch_sn,jdbcType=INTEGER} as batch_sn, -->
				#{item.bar_code,jdbcType=VARCHAR} as bar_code,
				#{item.price,jdbcType=NUMERIC} as price,
				#{item.location_id,jdbcType=VARCHAR} as location_id,
				#{item.amount,jdbcType=INTEGER} as amount
			from dual
		</foreach>
		),
		inv_temp as (
		select lt.group_id, lt.hos_id, lt.copy_code, lt.store_id, lt.inv_id,
			<!-- lt.batch_sn, -->lt.batch_no, lt.bar_code, lt.price, lt.location_id,
			lt.amount, sum(nvl(modet.amount, 0)) as imme_amount
		from list_temp lt
		left join mat_out_main mom on lt.group_id = mom.group_id and lt.hos_id = mom.hos_id
			and lt.copy_code = mom.copy_code and lt.store_id = mom.store_id
			and lt.dept_id = mom.dept_id
			and (lt.out_id = 0 or lt.out_id &lt;&gt; mom.out_id)
		left join mat_out_detail modet on lt.group_id = modet.group_id and lt.hos_id = modet.hos_id
			and lt.copy_code = modet.copy_code and mom.out_id = modet.out_id
			and lt.inv_id = modet.inv_id and lt.batch_no = modet.batch_no
			<!-- and lt.batch_sn = modet.batch_sn -->
			and lt.bar_code = modet.bar_code
			and nvl(lt.location_id,0) = nvl(modet.location_id,0) and lt.price = modet.price
		where ((modet.amount > 0 and mom.state = 3) or (nvl(modet.amount, 0) &lt;=0))
		group by lt.group_id, lt.hos_id, lt.copy_code, lt.store_id, lt.inv_id,
			<!-- lt.batch_sn, -->lt.batch_no, lt.bar_code, lt.price, lt.location_id, lt.amount
		)
		select to_char(wm_concat(to_char('<![CDATA[</br>]]>'||mid.inv_code||'
		'||mid.inv_name)))
		from inv_temp it
		left join mat_inv_dict mid
		on it.group_id = mid.group_id and it.hos_id = mid.hos_id
		and it.copy_code = mid.copy_code and it.inv_id = mid.inv_id
		and mid.is_stop = 0
		where (-1 * it.amount) - it.imme_amount > 0
		AND rownum &lt;= 50
	</select>

	<!-- 代销及时库存是否够用 -->
	<select id="existsMatAffiInvIsEnough" parameterType="java.util.List"
		resultType="String">
		with list_temp as (
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER} as group_id,
			#{item.hos_id,jdbcType=INTEGER} as hos_id,
			#{item.copy_code,jdbcType=VARCHAR} as copy_code,
			<if test="item.out_id != null and item.out_id != ''">
				#{item.out_id,jdbcType=VARCHAR} as out_id,
			</if>
			<if test="item.out_id == null or item.out_id == ''">
				0 as out_id,
			</if>
			<if test="item.in_id != null and item.in_id != ''">
				#{item.in_id,jdbcType=INTEGER} as in_id,
			</if>
			<if test="item.in_id == null or item.in_id == ''">
				0 as in_id,
			</if>
			#{item.store_id,jdbcType=INTEGER} as store_id,
			#{item.inv_id,jdbcType=VARCHAR} as inv_id,
			#{item.batch_no,jdbcType=VARCHAR} as batch_no,
			#{item.batch_sn,jdbcType=VARCHAR} as batch_sn,
			#{item.bar_code,jdbcType=VARCHAR} as bar_code,
			#{item.price,jdbcType=NUMERIC} as price,
			#{item.location_id,jdbcType=VARCHAR} as location_id,
			#{item.amount,jdbcType=INTEGER} as amount
			from dual
		</foreach>
		),
		inv_temp as (
		select
		group_id,
		hos_id,
		copy_code,
		store_id,
		inv_id,
		batch_sn, --批次
		batch_no, --批号
		bar_code, --条形码
		price,
		location_id,
		amount,
		sum(imme_amount) as imme_amount
		from(
		select
		lt.group_id,
		lt.hos_id,
		lt.copy_code,
		lt.store_id,
		lt.inv_id,
		lt.batch_sn, --批次
		lt.batch_no, --批号
		lt.bar_code, --条形码
		lt.price,
		lt.location_id,
		lt.amount,
		sum(modet.amount) as imme_amount
		from list_temp lt
		left join mat_affi_out mom
		on lt.group_id = mom.group_id and lt.hos_id = mom.hos_id
		and lt.copy_code = mom.copy_code and lt.store_id = mom.store_id 
					<![CDATA[ 
					and (lt.out_id = 0 or lt.out_id <> mom.out_id) 
					and mom.state < 3 
					and mom.bus_type_code <> '30' ]]>
		left join mat_affi_out_detail modet
		on lt.group_id = modet.group_id and lt.hos_id = modet.hos_id
		and lt.copy_code = modet.copy_code and mom.out_id = modet.out_id
		and lt.inv_id = modet.inv_id and lt.batch_no = modet.batch_no
		and lt.batch_sn = modet.batch_sn and lt.bar_code = modet.bar_code
		and lt.location_id = modet.location_id and lt.price = modet.price
		group by lt.group_id, lt.hos_id, lt.copy_code, lt.store_id, lt.inv_id,
		lt.batch_sn,
		lt.batch_no, lt.bar_code, lt.price, lt.location_id, lt.amount
		union all
		select
		lt.group_id,
		lt.hos_id,
		lt.copy_code,
		lt.store_id,
		lt.inv_id,
		lt.batch_sn, --批次
		lt.batch_no, --批号
		lt.bar_code, --条形码
		lt.price,
		lt.location_id,
		lt.amount,
		-1 * sum(midet.amount) as imme_amount --退货记录的是负数
		from list_temp lt
		left join mat_affi_in mim
		on lt.group_id = mim.group_id and lt.hos_id = mim.hos_id
		and lt.copy_code = mim.copy_code and lt.store_id = mim.store_id 
					<![CDATA[ 
					and (lt.in_id = 0 or lt.in_id <> mim.in_id) 
					and mim.state < 3 
					and mim.bus_type_code = '29' ]]>
		left join mat_affi_in_detail midet
		on lt.group_id = midet.group_id and lt.hos_id = midet.hos_id
		and lt.copy_code = midet.copy_code and mim.in_id = midet.in_id
		and lt.inv_id = midet.inv_id and lt.batch_no = midet.batch_no
		and lt.batch_sn = midet.batch_sn and lt.bar_code = midet.bar_code
		and lt.location_id = midet.location_id and lt.price = midet.price
		group by lt.group_id, lt.hos_id, lt.copy_code, lt.store_id, lt.inv_id,
		lt.batch_sn,
		lt.batch_no, lt.bar_code, lt.price, lt.location_id, lt.amount
		)
		group by group_id, hos_id, copy_code, store_id, inv_id, batch_sn, batch_no,
		bar_code, price, location_id, amount
		)
		select to_char(wm_concat(to_char('<![CDATA[</br>]]>'||mid.inv_code||'
		'||mid.inv_name)))
		from inv_temp it
		left join mat_affi_fifo mfb on
		it.group_id = mfb.group_id and it.hos_id = mfb.hos_id
		and it.copy_code = mfb.copy_code and it.store_id = mfb.store_id
		and it.inv_id = mfb.inv_id and it.batch_no = mfb.batch_no
		and it.batch_sn = mfb.batch_sn and it.bar_code = mfb.bar_code
		and it.location_id = mfb.location_id and it.price = mfb.price
		left join mat_inv_dict mid
		on it.group_id = mid.group_id and it.hos_id = mid.hos_id
		and it.copy_code = mid.copy_code and it.inv_id = mid.inv_id
		and mid.is_stop = 0
		where <![CDATA[
			(
				(it.amount > 0 and mfb.left_amount - it.imme_amount - it.amount < 0)
				or it.amount < 0 and mfb.out_amount - (-1 * it.amount) < 0
			)
			AND rownum <= 50]]>
	</select>

	<!-- 业务数据选择物资材料所用2 -->
	<select id="queryMatInvListDept" resultMap="matInv">
		SELECT
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id,
		a.inv_no,
		a.inv_code,
		a.inv_name,
		a.mat_type_id,
		b.mat_type_name,
		a.inv_model,
		a.is_com,
		a.unit_code,
		c.unit_name,
		aa.sup_id,
		d.sup_no,
		d.sup_name,
		a.fac_id,
		e.fac_no,
		e.fac_name,
		a.plan_price,
		a.sell_price,
		f.pack_code,
		g.pack_name,
		f.map_amount num_exchange,
		a.alias,
		a.alias_spell,
		aa.is_default,
		a.inv_structure,case when a.is_com=0 then mih.cur_amount else maih.cur_amount end cur_amount
		from mat_inv_dict a
		left join mat_type_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.mat_type_id = b.mat_type_id
		and a.mat_type_no = b.mat_type_no
		and b.is_stop = 0
		left join hos_unit c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.unit_code = c.unit_code
		LEFT JOIN (
		SELECT sup_id, inv_id, group_id, hos_id, copy_code,is_default
		FROM mat_inv_sup
		<where>
			<if test="group_id !=null and group_id !='' ">
				and group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			and is_default = 1
		</where>

		) aa on
		a.group_id = aa.group_id
		and a.hos_id = aa.hos_id
		and a.copy_code = aa.copy_code
		and a.inv_id = aa.inv_id
		LEFT JOIN hos_sup_dict d ON aa.group_id = d.group_id
		AND aa.hos_id = d.hos_id
		AND aa.sup_id = d.sup_id
		AND d.is_stop = 0
		left join hos_fac_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.fac_id = e.fac_id
		and a.fac_no = e.fac_no
		left join mat_inv_unit_map f on f.inv_id = a.inv_id
		and f.hos_id = a.hos_id
		and f.group_id = a.group_id
		and f.copy_code = a.copy_code
		left join hos_package g on f.group_id = g.group_id
		and f.hos_id = g.hos_id
		and f.pack_code = g.pack_code
		<if test="store_id != null and store_id != '' and store_id != 'undefined' ">
			join mat_store_inv msi on msi.inv_id = a.inv_id
			and msi.group_id =
			a.group_id
			and msi.hos_id = a.hos_id
			and msi.copy_code = a.copy_code
			and msi.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		left join mat_inv_hold mih on a.group_id=mih.group_id and a.hos_id=mih.hos_id and a.copy_code=mih.copy_code
			and a.inv_id=mih.inv_id and mih.store_id=#{store_id,jdbcType=INTEGER}
		left join mat_affi_inv_hold maih on a.group_id=maih.group_id and a.hos_id=maih.hos_id and a.copy_code=maih.copy_code
			and a.inv_id=maih.inv_id and maih.store_id=#{store_id,jdbcType=INTEGER}
		where a.group_id =#{group_id,jdbcType=INTEGER}
		and a.hos_id =#{hos_id,jdbcType=INTEGER}
		and a.copy_code =#{copy_code,jdbcType=VARCHAR}
		and a.is_stop = 0
		and a.use_state = 1
		<if test="sup_id != null and sup_id != ''">
			and a.sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="sup_id != null and sup_id != ''">
			and a.sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="key != null and key != ''">
			and (
			a.inv_code like '%${key}%' or
			a.inv_name like '%${key}%' or
			a.spell_code like '%${key}%' or
			a.wbx_code like '%${key}%' or
			a.alias like '%${key}%' or
			a.alias_spell like '%${key}%'
			)
		</if>
		<if test="mat_ref_chrage_exists != null and mat_ref_chrage_exists != ''">
			and NOT EXISTS (select 1 from MAT_REF_CHARGE mrc where a.inv_id =
			mrc.inv_id)
		</if>
		order by a.inv_code
	</select>

	<!-- 代销出库材料列表 查的mat_affi_fifo表 -->
	<select id="queryMatAffiOutInvList" resultMap="matInv">
		with w_maf as (
		select
		maf.group_id ,
		maf.hos_id ,
		maf.copy_code ,
		maf.inv_id ,--物资材料ID
		mid.inv_no ,--材料变更号
		mid.inv_code ,--材料编码
		mid.inv_name ,--材料名称
		mid.inv_model ,--规格型号
		mid.unit_code ,--计量单位编码
		hu.unit_name,--计量单位名称
		mtd.mat_type_name,--材料类别名称
		hfd.fac_name,--生产厂商名称
		mid.spell_code, --拼音码
		mid.wbx_code, --五笔码
		maf.batch_no ,--批号
		maf.bar_code ,--个体码
		sum(maf.out_amount) out_amount,--已出库数量
		sum(maf.left_amount) left_amount,--当前库存数量
		maf.price ,--单价
		maf.sale_price,--批发单价
		mid.sell_price,--零售单价
		maf.location_id ,--货位ID
		mld.location_code ,--货位编码
		mld.location_name ,--货位名称
		cc.inva_date ,--有效期
		cc.disinfect_date --灭菌日期
		,mid.is_charge,
		mid.is_per_bar,
		mid.is_highvalue,
		mid.alias,
		mid.alias_spell,
		hsd.sup_no,
		maf.sup_id,
		hsd.sup_code,
		hsd.sup_name
		from mat_affi_fifo maf
		left join mat_location_dict mld on maf.group_id = mld.group_id
		and maf.hos_id = mld.hos_id
		and maf.copy_code = mld.copy_code
		and maf.location_id = mld.location_id
		and maf.store_id=mld.store_id
		and mld.is_stop = 0
		left join mat_affi_in_detail cc 
		on maf.group_id=cc.group_id 
		and maf.hos_id=cc.hos_id 
		and maf.copy_code=cc.copy_code 
        and maf.inv_id=cc.inv_id 
        and maf.batch_no=cc.batch_no 
        and maf.batch_sn = cc.batch_sn 
        and maf.bar_code=cc.bar_code
        and maf.price=cc.price
        left join mat_affi_in dd 
        on cc.group_id=dd.group_id 
        and cc.hos_id=dd.hos_id 
        and cc.copy_code=dd.copy_code
        and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity mbv on maf.group_id = mbv.group_id
		and maf.hos_id = mbv.hos_id
		and maf.copy_code = mbv.copy_code
		and maf.inv_id = mbv.inv_id
		and maf.batch_no = mbv.batch_no
		left join mat_batch_disinfect mbd on mbd.group_id = maf.group_id
		and mbd.hos_id = maf.hos_id
		and mbd.copy_code = maf.copy_code
		and mbd.inv_id = maf.inv_id
		and mbd.batch_no = maf.batch_no -->
		left join mat_inv_dict mid 
		on maf.group_id = mid.group_id
		and maf.hos_id = mid.hos_id
		and maf.copy_code = mid.copy_code
		and maf.inv_id = mid.inv_id
		and mid.is_stop = 0
		<!-- and mid.use_state = 1 --><!-- 20170331停用可以出库 -->
		left join hos_sup_dict hsd on maf.group_id = hsd.group_id
		and maf.hos_id = hsd.hos_id
		and maf.sup_id = hsd.sup_id
		and hsd.is_stop = 0
		left join mat_type_dict mtd on mtd.hos_id = mid.hos_id
		and mtd.group_id = mid.group_id
		and mtd.copy_code = mid.copy_code
		and mtd.mat_type_id = mid.mat_type_id
		and mtd.is_stop = 0
		left join hos_fac_dict hfd on hfd.hos_id = mid.hos_id
		and hfd.group_id = mid.group_id
		and hfd.fac_id = mid.fac_id
		and hfd.fac_no = mid.fac_no
		left join hos_unit hu on mid.group_id = hu.group_id
		and mid.hos_id = hu.hos_id
		and mid.unit_code = hu.unit_code
		and hu.is_stop = 0
		where maf.group_id = #{group_id,jdbcType=INTEGER}
		and maf.hos_id = #{hos_id,jdbcType=INTEGER}
		and maf.copy_code = #{copy_code,jdbcType=VARCHAR}

		<if test="store_id != null and store_id != ''">
			AND maf.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND maf.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
			AND mid.inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND maf.batch_no = #{batch_no,jdbcType=VARCHAR}
		</if>
		<if test="batch_sn != null and batch_sn != ''">
			AND maf.batch_sn = #{batch_sn,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND maf.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="location_id != null">
			AND maf.location_id = #{location_id,jdbcType=INTEGER}
		</if>
		and mid.is_com = 1 
		and dd.bus_type_code in(1,27,8)
		group by maf.group_id ,maf.hos_id ,maf.copy_code ,maf.inv_id ,mid.inv_no
		,mid.inv_code ,mid.inv_name ,
		mid.inv_model ,mid.unit_code
		,hu.unit_name,mtd.mat_type_name,hfd.fac_name,mid.spell_code,
		mid.wbx_code,
		maf.batch_no ,maf.bar_code ,maf.price
		,maf.sale_price,mid.sell_price,maf.location_id , mid.alias,
		mid.alias_spell,
		mld.location_code ,mld.location_name ,cc.inva_date
		,cc.disinfect_date,mid.is_charge,mid.is_per_bar,mid.is_highvalue,
		hsd.sup_no,maf.sup_id,hsd.sup_code,hsd.sup_name
		order by maf.inv_id asc

		),
		w_maod as (
			select inv_id, batch_no, bar_code, price, location_id, sum(amount) amount
			from(
				--出库未确认
				select
					inv_id ,
					batch_no ,--批号
					bar_code ,--条形码
					maod.price, --单价
					maod.location_id, --货位
					sum(nvl(amount,0)) amount
				from mat_affi_out_detail maod
				left join mat_affi_out mao on
				maod.group_id = mao.group_id
				and maod.hos_id = mao.hos_id
				and maod.copy_code = mao.copy_code
				and maod.out_id = mao.out_id
				
				where 
				maod.group_id = #{group_id,jdbcType=INTEGER}
				and maod.hos_id = #{hos_id,jdbcType=INTEGER}
				and maod.copy_code = #{copy_code,jdbcType=VARCHAR}
				and <![CDATA[ mao.state < 3 ]]>
				and <![CDATA[ mao.bus_type_code <> '30' ]]>
				<if test="out_id != null and out_id != ''">
								<![CDATA[ AND mao.out_id <> #{out_id,jdbcType=INTEGER} ]]>
				</if>
				<if test="tran_id != null and tran_id != ''">
					AND NOT EXISTS(
					select 1 from mat_affi_tran_rela
					where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					and tran_id = #{tran_id,jdbcType=INTEGER}
					and out_id = mao.out_id
					)
				</if>
				<if test="store_id != null and store_id != ''">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="inv_id != null and inv_id != ''">
					AND maod.inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="inv_no != null and inv_no != ''">
					AND maod.inv_no = #{inv_no,jdbcType=INTEGER}
				</if>
				<if test="batch_no != null and batch_no != ''">
					AND maod.batch_no = #{batch_no,jdbcType=VARCHAR}
				</if>
				<if test="batch_sn != null and batch_sn != ''">
					AND maod.batch_sn = #{batch_sn,jdbcType=INTEGER}
				</if>
				<if test="price != null and price != ''">
					AND maod.price = #{price,jdbcType=NUMERIC}
				</if>
				<if test="location_id != null">
					AND maod.location_id = #{location_id,jdbcType=INTEGER}
				</if>
				group by inv_id,batch_no,bar_code, maod.price, maod.location_id
				--退货未确认
				union all
				select
					inv_id ,
					batch_no ,--批号
					bar_code ,--条形码
					maid.price, --单价
					maid.location_id, --货位
					-1 * sum(nvl(amount,0)) amount
				from mat_affi_in_detail maid
				left join mat_affi_in mai
					on maid.group_id = mai.group_id
					and maid.hos_id = mai.hos_id
					and maid.copy_code = mai.copy_code
					and maid.in_id = mai.in_id
				where 
				maid.group_id = #{group_id,jdbcType=INTEGER}
				and maid.hos_id = #{hos_id,jdbcType=INTEGER}
				and maid.copy_code = #{copy_code,jdbcType=VARCHAR}
				and <![CDATA[ mai.state < 3 ]]>
				and <![CDATA[ mai.bus_type_code = '29' ]]>
				<if test="in_id != null and in_id != ''">
								<![CDATA[ AND mai.in_id <> #{in_id,jdbcType=INTEGER} ]]>
				</if>
				<if test="store_id != null and store_id != ''">
					AND mai.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="inv_id != null and inv_id != ''">
					AND maid.inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="inv_no != null and inv_no != ''">
					AND maid.inv_no = #{inv_no,jdbcType=INTEGER}
				</if>
				<if test="batch_no != null and batch_no != ''">
					AND maid.batch_no = #{batch_no,jdbcType=VARCHAR}
				</if>
				<if test="batch_sn != null and batch_sn != ''">
					AND maid.batch_sn = #{batch_sn,jdbcType=INTEGER}
				</if>
				<if test="price != null and price != ''">
					AND maid.price = #{price,jdbcType=NUMERIC}
				</if>
				<if test="location_id != null">
					AND maid.location_id = #{location_id,jdbcType=INTEGER}
				</if>
				group by inv_id,batch_no,bar_code, maid.price, maid.location_id
			)
			group by inv_id, batch_no, bar_code, price, location_id
		)
		select
		w_maf.group_id ,
		w_maf.hos_id ,
		w_maf.copy_code ,
		w_maf.inv_id ,--物资材料ID
		w_maf.inv_no ,--材料变更号
		w_maf.inv_code ,--材料编码
		w_maf.inv_name ,--材料名称
		w_maf.inv_model ,--规格型号
		w_maf.unit_code ,--计量单位编码
		w_maf.unit_name ,--计量单位名称
		w_maf.mat_type_name,--材料类别名称
		w_maf.fac_name ,--生产厂商名称
		w_maf.batch_no ,--批号
		w_maf.bar_code ,--个体码
		w_maf.out_amount as out_amount,--已出库数量
		w_maf.left_amount as cur_amount,--当前库存数量
		w_maf.left_amount * w_maf.price as cur_money,--当前库存金额
		w_maf.price ,--单价
		w_maf.sale_price,--批发单价
		w_maf.sell_price ,--零售单价
		w_maf.location_id ,--货位ID
		w_maf.location_code ,--货位编码
		w_maf.location_name ,--货位名称
		w_maf.inva_date ,--有效期
		w_maf.disinfect_date ,--灭菌期
		w_maf.is_charge,
		w_maf.is_per_bar,
		w_maf.is_highvalue,
		w_maf.alias,
		w_maf.sup_id,
		w_maf.sup_no,
		w_maf.sup_code,
		w_maf.sup_name,
		nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) as imme_amount --及时库存
		from w_maf
		left join
		w_maod on w_maf.inv_id = w_maod.inv_id
		and w_maf.batch_no= w_maod.batch_no
		and w_maf.bar_code= w_maod.bar_code
		and w_maf.price = w_maod.price
		and w_maf.location_id = w_maod.location_id
		<where>
			<if test="bus_type_code == null or bus_type_code != '30'">
				and nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) > 0
			</if>
			<if test="bus_type_code != null and bus_type_code == '30'">
				and w_maf.out_amount > 0
			</if>
			<if test="key != null and key != ''">
				and (
				w_maf.inv_code like '%${key}%' or
				w_maf.inv_name like '%${key}%'
				or
				w_maf.spell_code like '%${key}%' or
				w_maf.wbx_code like '%${key}%' or
				w_maf.alias like '%${key}%' or
				w_maf.alias_spell like '%${key}%'
				)
			</if>
		</where>
		order by w_maf.inv_code, w_maf.batch_no, w_maf.inva_date

	</select>
	
	<!-- 代销出库材料列表 查的mat_affi_fifo表 -->
	<select id="queryMatAffiTranInvList" resultMap="matInv">
		with w_maf as (
		select
		maf.group_id ,
		maf.hos_id ,
		maf.copy_code ,
		maf.inv_id ,--物资材料ID
		mid.inv_no ,--材料变更号
		mid.inv_code ,--材料编码
		mid.inv_name ,--材料名称
		mid.inv_model ,--规格型号
		mid.unit_code ,--计量单位编码
		hu.unit_name,--计量单位名称
		mtd.mat_type_name,--材料类别名称
		hfd.fac_name,--生产厂商名称
		mid.spell_code, --拼音码
		mid.wbx_code, --五笔码
		maf.batch_no ,--批号
		maf.bar_code ,--个体码
		sum(maf.out_amount) out_amount,--已出库数量
		sum(maf.left_amount) left_amount,--当前库存数量
		maf.price ,--单价
		maf.sale_price,--批发单价
		mid.sell_price,--零售单价
		maf.location_id ,--货位ID
		mld.location_code ,--货位编码
		mld.location_name ,--货位名称
		cc.inva_date ,--有效期
		cc.disinfect_date --灭菌日期
		,mid.is_charge,
		mid.is_per_bar,
		mid.is_highvalue,
		mid.alias,
		mid.alias_spell,
		hsd.sup_no,
		maf.sup_id,
		hsd.sup_code,
		hsd.sup_name
		from mat_affi_fifo maf
		left join mat_location_dict mld on maf.group_id = mld.group_id
		and maf.hos_id = mld.hos_id
		and maf.copy_code = mld.copy_code
		and maf.location_id = mld.location_id
		and maf.store_id=mld.store_id
		and mld.is_stop = 0
		left join mat_affi_in_detail cc 
		on maf.group_id=cc.group_id 
		and maf.hos_id=cc.hos_id 
		and maf.copy_code=cc.copy_code 
        and maf.inv_id=cc.inv_id 
        and maf.batch_no=cc.batch_no 
        and maf.batch_sn = cc.batch_sn 
        and maf.bar_code=cc.bar_code
        and maf.price=cc.price
        left join mat_affi_in dd 
        on cc.group_id=dd.group_id 
        and cc.hos_id=dd.hos_id 
        and cc.copy_code=dd.copy_code
        and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity mbv on maf.group_id = mbv.group_id
		and maf.hos_id = mbv.hos_id
		and maf.copy_code = mbv.copy_code
		and maf.inv_id = mbv.inv_id
		and maf.batch_no = mbv.batch_no
		left join mat_batch_disinfect mbd on mbd.group_id = maf.group_id
		and mbd.hos_id = maf.hos_id
		and mbd.copy_code = maf.copy_code
		and mbd.inv_id = maf.inv_id
		and mbd.batch_no = maf.batch_no -->
		left join mat_inv_dict mid 
		on maf.group_id = mid.group_id
		and maf.hos_id = mid.hos_id
		and maf.copy_code = mid.copy_code
		and maf.inv_id = mid.inv_id
		and mid.is_stop = 0
		<!-- and mid.use_state = 1 --><!-- 20170331停用可以出库 -->
		left join hos_sup_dict hsd on maf.group_id = hsd.group_id
		and maf.hos_id = hsd.hos_id
		and maf.sup_id = hsd.sup_id
		and hsd.is_stop = 0
		left join mat_type_dict mtd on mtd.hos_id = mid.hos_id
		and mtd.group_id = mid.group_id
		and mtd.copy_code = mid.copy_code
		and mtd.mat_type_id = mid.mat_type_id
		and mtd.is_stop = 0
		left join hos_fac_dict hfd on hfd.hos_id = mid.hos_id
		and hfd.group_id = mid.group_id
		and hfd.fac_id = mid.fac_id
		and hfd.fac_no = mid.fac_no
		left join hos_unit hu on mid.group_id = hu.group_id
		and mid.hos_id = hu.hos_id
		and mid.unit_code = hu.unit_code
		and hu.is_stop = 0
		where maf.group_id = #{group_id,jdbcType=INTEGER}
		and maf.hos_id = #{hos_id,jdbcType=INTEGER}
		and maf.copy_code = #{copy_code,jdbcType=VARCHAR}

		<if test="store_id != null and store_id != ''">
			AND maf.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND maf.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
			AND mid.inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND maf.batch_no = #{batch_no,jdbcType=VARCHAR}
		</if>
		<if test="batch_sn != null and batch_sn != ''">
			AND maf.batch_sn = #{batch_sn,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND maf.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="location_id != null">
			AND maf.location_id = #{location_id,jdbcType=INTEGER}
		</if>
		and mid.is_com = 1 
		and dd.bus_type_code in(1,27)
		group by maf.group_id ,maf.hos_id ,maf.copy_code ,maf.inv_id ,mid.inv_no
		,mid.inv_code ,mid.inv_name ,
		mid.inv_model ,mid.unit_code
		,hu.unit_name,mtd.mat_type_name,hfd.fac_name,mid.spell_code,
		mid.wbx_code,
		maf.batch_no ,maf.bar_code ,maf.price
		,maf.sale_price,mid.sell_price,maf.location_id , mid.alias,
		mid.alias_spell,
		mld.location_code ,mld.location_name ,cc.inva_date
		,cc.disinfect_date,mid.is_charge,mid.is_per_bar,mid.is_highvalue,
		hsd.sup_no,maf.sup_id,hsd.sup_code,hsd.sup_name
		order by maf.inv_id asc

		),
		w_maod as (
			select inv_id, batch_no, bar_code, price, location_id, sum(amount) amount
			from(
				--出库未确认
				select
					inv_id ,
					batch_no ,--批号
					bar_code ,--条形码
					maod.price, --单价
					maod.location_id, --货位
					sum(nvl(amount,0)) amount
				from mat_affi_out_detail maod
				left join mat_affi_out mao on
				maod.group_id = mao.group_id
				and maod.hos_id = mao.hos_id
				and maod.copy_code = mao.copy_code
				and maod.out_id = mao.out_id
				
				where 
				maod.group_id = #{group_id,jdbcType=INTEGER}
				and maod.hos_id = #{hos_id,jdbcType=INTEGER}
				and maod.copy_code = #{copy_code,jdbcType=VARCHAR}
				and <![CDATA[ mao.state < 3 ]]>
				and <![CDATA[ mao.bus_type_code <> '30' ]]>
				<if test="out_id != null and out_id != ''">
								<![CDATA[ AND mao.out_id <> #{out_id,jdbcType=INTEGER} ]]>
				</if>
				<if test="tran_id != null and tran_id != ''">
					AND NOT EXISTS(
					select 1 from mat_affi_tran_rela
					where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					and tran_id = #{tran_id,jdbcType=INTEGER}
					and out_id = mao.out_id
					)
				</if>
				<if test="store_id != null and store_id != ''">
					AND mao.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="inv_id != null and inv_id != ''">
					AND maod.inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="inv_no != null and inv_no != ''">
					AND maod.inv_no = #{inv_no,jdbcType=INTEGER}
				</if>
				<if test="batch_no != null and batch_no != ''">
					AND maod.batch_no = #{batch_no,jdbcType=VARCHAR}
				</if>
				<if test="batch_sn != null and batch_sn != ''">
					AND maod.batch_sn = #{batch_sn,jdbcType=INTEGER}
				</if>
				<if test="price != null and price != ''">
					AND maod.price = #{price,jdbcType=NUMERIC}
				</if>
				<if test="location_id != null">
					AND maod.location_id = #{location_id,jdbcType=INTEGER}
				</if>
				group by inv_id,batch_no,bar_code, maod.price, maod.location_id
				--退货未确认
				union all
				select
					inv_id ,
					batch_no ,--批号
					bar_code ,--条形码
					maid.price, --单价
					maid.location_id, --货位
					-1 * sum(nvl(amount,0)) amount
				from mat_affi_in_detail maid
				left join mat_affi_in mai
					on maid.group_id = mai.group_id
					and maid.hos_id = mai.hos_id
					and maid.copy_code = mai.copy_code
					and maid.in_id = mai.in_id
				where 
				maid.group_id = #{group_id,jdbcType=INTEGER}
				and maid.hos_id = #{hos_id,jdbcType=INTEGER}
				and maid.copy_code = #{copy_code,jdbcType=VARCHAR}
				and <![CDATA[ mai.state < 3 ]]>
				and <![CDATA[ mai.bus_type_code = '29' ]]>
				<if test="in_id != null and in_id != ''">
								<![CDATA[ AND mai.in_id <> #{in_id,jdbcType=INTEGER} ]]>
				</if>
				<if test="store_id != null and store_id != ''">
					AND mai.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="inv_id != null and inv_id != ''">
					AND maid.inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="inv_no != null and inv_no != ''">
					AND maid.inv_no = #{inv_no,jdbcType=INTEGER}
				</if>
				<if test="batch_no != null and batch_no != ''">
					AND maid.batch_no = #{batch_no,jdbcType=VARCHAR}
				</if>
				<if test="batch_sn != null and batch_sn != ''">
					AND maid.batch_sn = #{batch_sn,jdbcType=INTEGER}
				</if>
				<if test="price != null and price != ''">
					AND maid.price = #{price,jdbcType=NUMERIC}
				</if>
				<if test="location_id != null">
					AND maid.location_id = #{location_id,jdbcType=INTEGER}
				</if>
				group by inv_id,batch_no,bar_code, maid.price, maid.location_id
			)
			group by inv_id, batch_no, bar_code, price, location_id
		)
		select
		w_maf.group_id ,
		w_maf.hos_id ,
		w_maf.copy_code ,
		w_maf.inv_id ,--物资材料ID
		w_maf.inv_no ,--材料变更号
		w_maf.inv_code ,--材料编码
		w_maf.inv_name ,--材料名称
		w_maf.inv_model ,--规格型号
		w_maf.unit_code ,--计量单位编码
		w_maf.unit_name ,--计量单位名称
		w_maf.mat_type_name,--材料类别名称
		w_maf.fac_name ,--生产厂商名称
		w_maf.batch_no ,--批号
		w_maf.bar_code ,--个体码
		w_maf.out_amount as out_amount,--已出库数量
		w_maf.left_amount as cur_amount,--当前库存数量
		w_maf.left_amount * w_maf.price as cur_money,--当前库存金额
		w_maf.price ,--单价
		w_maf.sale_price,--批发单价
		w_maf.sell_price ,--零售单价
		w_maf.location_id ,--货位ID
		w_maf.location_code ,--货位编码
		w_maf.location_name ,--货位名称
		w_maf.inva_date ,--有效期
		w_maf.disinfect_date ,--灭菌期
		w_maf.is_charge,
		w_maf.is_per_bar,
		w_maf.is_highvalue,
		w_maf.alias,
		w_maf.sup_id,
		w_maf.sup_no,
		w_maf.sup_code,
		w_maf.sup_name,
		nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) as imme_amount --及时库存
		from w_maf
		left join
		w_maod on w_maf.inv_id = w_maod.inv_id
		and w_maf.batch_no= w_maod.batch_no
		and w_maf.bar_code= w_maod.bar_code
		and w_maf.price = w_maod.price
		and w_maf.location_id = w_maod.location_id
		<where>
			<if test="bus_type_code == null or bus_type_code != '30'">
				and nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) > 0
			</if>
			<if test="bus_type_code != null and bus_type_code == '30'">
				and w_maf.out_amount > 0
			</if>
			<if test="key != null and key != ''">
				and (
				w_maf.inv_code like '%${key}%' or
				w_maf.inv_name like '%${key}%'
				or
				w_maf.spell_code like '%${key}%' or
				w_maf.wbx_code like '%${key}%' or
				w_maf.alias like '%${key}%' or
				w_maf.alias_spell like '%${key}%'
				)
			</if>
		</where>
		order by w_maf.inv_code, w_maf.batch_no, w_maf.inva_date

	</select>

	<select id="queryMatAffiOutDetailInvList" resultMap="matInv">
		with w_maf as (
		select distinct
		maf.group_id ,
		maf.hos_id ,
		maf.copy_code ,
		maf.inv_id ,--物资材料ID
		mid.inv_no ,--材料变更号
		mid.inv_code ,--材料编码
		mid.inv_name ,--材料名称
		mid.inv_model ,--规格型号
		mid.unit_code ,--计量单位编码
		hu.unit_name,--计量单位名称
		mtd.mat_type_name,--材料类别名称
		hfd.fac_name,--生产厂商名称
		mid.spell_code, --拼音码
		mid.wbx_code, --五笔码
		maf.batch_sn , --批次
		maf.batch_no ,--批号
		maf.bar_code ,--个体码
		maf.out_amount,--已出库数量
		maf.left_amount,--当前库存数量
		maf.price ,--单价
		maf.sale_price,--批发单价
		mid.sell_price,--零售单价
		nvl(maf.location_id,0) location_id,--货位ID
		mld.location_code ,--货位编码
		mld.location_name ,--货位名称
		cc.inva_date ,--有效期
		cc.disinfect_date, --灭菌日期
		mid.alias,
		mid.alias_spell
		from mat_affi_fifo maf
		left join mat_location_dict mld on maf.group_id = mld.group_id
		and maf.hos_id = mld.hos_id
		and maf.copy_code = mld.copy_code
		and maf.location_id = mld.location_id
		and mld.is_stop = 0
		left join mat_affi_in_detail cc on maf.group_id=cc.group_id and maf.hos_id=cc.hos_id and maf.copy_code=cc.copy_code 
            and maf.inv_id=cc.inv_id and maf.batch_no=cc.batch_no and maf.batch_sn = cc.batch_sn and maf.bar_code=cc.bar_code
            and maf.price=cc.price
        left join mat_affi_in dd on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id and cc.copy_code=dd.copy_code 
         	and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity mbv on maf.group_id = mbv.group_id
		and maf.hos_id = mbv.hos_id
		and maf.copy_code = mbv.copy_code
		and maf.inv_id = mbv.inv_id
		and maf.batch_no = mbv.batch_no
		left join mat_batch_disinfect mbd on mbd.group_id = maf.group_id
		and mbd.hos_id = maf.hos_id
		and mbd.copy_code = maf.copy_code
		and mbd.inv_id = maf.inv_id
		and mbd.batch_no = maf.batch_no -->
		left join mat_inv_dict mid on maf.group_id = mid.group_id 
		and maf.hos_id = mid.hos_id
		and maf.copy_code = mid.copy_code
		and maf.inv_id = mid.inv_id
		and mid.is_stop = 0
		<!-- and mid.use_state = 1 --><!-- 20170331停用可以出库 -->
		left join mat_type_dict mtd on mtd.hos_id = mid.hos_id
		and mtd.group_id = mid.group_id
		and mtd.copy_code = mid.copy_code
		and mtd.mat_type_id = mid.mat_type_id
		and mtd.is_stop = 0
		left join hos_fac_dict hfd on hfd.hos_id = mid.hos_id
		and hfd.group_id = mid.group_id
		and hfd.fac_id = mid.fac_id
		and hfd.fac_no = mid.fac_no
		left join hos_unit hu on mid.group_id = hu.group_id
		and mid.hos_id = hu.hos_id
		and mid.unit_code = hu.unit_code
		and hu.is_stop = 0
		where maf.group_id = #{group_id,jdbcType=INTEGER}
			and maf.hos_id = #{hos_id,jdbcType=INTEGER}
			and maf.copy_code = #{copy_code,jdbcType=VARCHAR}
			--and maf.left_amount > 0
			<if test="store_id != null and store_id != ''">
				AND maf.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND maf.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<!-- <if test="inv_no != null and inv_no != ''"> AND mid.inv_no = #{inv_no,jdbcType=INTEGER} 
				</if> -->
			<if test="batch_no != null and batch_no != ''">
				AND maf.batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="batch_sn != null and batch_sn != ''">
				AND maf.batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
			<if test="bar_code != null and bar_code != ''">
				AND maf.bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
			<if test="price != null and price != ''">
				AND maf.price = #{price,jdbcType=NUMERIC}
			</if>
			<if test="location_id != null">
				AND nvl(maf.location_id,0) = #{location_id,jdbcType=INTEGER}
			</if>
			<if test="inva_date != null and inva_date != ''">
				and cc.inva_date = #{inva_date,jdbcType=DATE}
			</if>
			<if test="disinfect_date != null and disinfect_date != ''">
				and cc.disinfect_date = #{disinfect_date,jdbcType=DATE}
			</if>
			and dd.bus_type_code  in (1,27,8)
		and mid.is_com = 1
		order by maf.inv_id asc

		),
		w_maod as (
		select inv_id, batch_no, batch_sn, bar_code, price, location_id, sum(amount)
		amount
		from(
		--出库未确认的单据
		select
		inv_id ,
		batch_no ,--批号
		batch_sn ,--批次
		bar_code ,--条形码
		maod.price, --单价
		nvl(maod.location_id,0) location_id, --货位
		sum(nvl(amount,0)) amount
		from mat_affi_out_detail maod
		left join mat_affi_out mao on maod.group_id = mao.group_id
		and maod.hos_id = mao.hos_id
		and maod.copy_code = mao.copy_code
		and maod.out_id = mao.out_id
		and <![CDATA[ mao.state < 3 ]]>
		and <![CDATA[ mao.bus_type_code <> '30' ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND mao.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_affi_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = mao.out_id
			)
		</if>
		where maod.group_id = #{group_id,jdbcType=INTEGER}
		and maod.hos_id = #{hos_id,jdbcType=INTEGER}
		and maod.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
			AND mao.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND maod.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
			AND maod.inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND maod.batch_no = #{batch_no,jdbcType=VARCHAR}
		</if>
		<if test="batch_sn != null and batch_sn != ''">
			AND maod.batch_sn = #{batch_sn,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND maod.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="inva_date != null and inva_date != ''">
			and maod.inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
			and maod.disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null">
			AND nvl(maod.location_id,0) = #{location_id,jdbcType=INTEGER}
		</if>
		group by inv_id,batch_no,batch_sn,bar_code, maod.price,
		maod.location_id
		--退货未确认的单据
		union all
		select
		inv_id ,
		batch_no ,--批号
		batch_sn ,--批次
		bar_code ,--条形码
		maid.price, --单价
		maid.location_id, --货位
		-1 * sum(nvl(amount,0)) amount
		from mat_affi_in_detail maid
		left join mat_affi_in mai
		on maid.group_id = mai.group_id
		and maid.hos_id = mai.hos_id
		and maid.copy_code = mai.copy_code
		and maid.in_id = mai.in_id
		and <![CDATA[ mai.state < 3 ]]>
		and <![CDATA[ mai.bus_type_code = '29' ]]>
		<if test="in_id != null and in_id != ''">
						<![CDATA[ AND mai.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		where maid.group_id = #{group_id,jdbcType=INTEGER}
		and maid.hos_id = #{hos_id,jdbcType=INTEGER}
		and maid.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="store_id != null and store_id != ''">
			AND mai.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND maid.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
			AND maid.inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND maid.batch_no = #{batch_no,jdbcType=VARCHAR}
		</if>
		<if test="batch_sn != null and batch_sn != ''">
			AND maid.batch_sn = #{batch_sn,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND maid.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="inva_date != null and inva_date != ''">
			and maid.inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
			and maid.disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null">
			AND nvl(maid.location_id,0) = #{location_id,jdbcType=INTEGER}
		</if>
		group by inv_id,batch_no,batch_sn,bar_code, maid.price,
		maid.location_id
		)
		group by inv_id, batch_no, batch_sn, bar_code, price, location_id
		)
		select
		w_maf.group_id ,
		w_maf.hos_id ,
		w_maf.copy_code ,
		w_maf.inv_id ,--物资材料ID
		w_maf.inv_no ,--材料变更号
		w_maf.inv_code ,--材料编码
		w_maf.inv_name ,--材料名称
		w_maf.inv_model ,--规格型号
		w_maf.unit_code ,--计量单位编码
		w_maf.unit_name ,--计量单位名称
		w_maf.mat_type_name,--材料类别名称
		w_maf.fac_name ,--生产厂商名称
		w_maf.batch_no ,--批号
		w_maf.batch_sn ,--批次
		w_maf.bar_code ,--个体码
		w_maf.out_amount as out_amount,--已出库数量
		w_maf.left_amount as cur_amount,--当前库存数量
		w_maf.left_amount * w_maf.price as cur_money,--当前库存数量
		w_maf.price ,--单价
		w_maf.sale_price,--批发单价
		w_maf.sell_price ,--零售单价
		w_maf.location_id ,--货位ID
		w_maf.location_code ,--货位编码
		w_maf.location_name ,--货位名称
		w_maf.inva_date ,--有效期
		w_maf.disinfect_date ,--灭菌期
		w_maf.alias,
		nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) as imme_amount, --及时库存
		w_maf.out_amount as all_out_amount,  <!-- 用于方法hrp.mat.servicesImpl.base.getAffiInvJsonByAffiInvList -->
		w_maf.left_amount as all_cur_amount,  <!-- 用于方法hrp.mat.servicesImpl.base.getAffiInvJsonByAffiInvList -->
		nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) as all_imme_amount  <!-- 
			用于方法hrp.mat.servicesImpl.base.getAffiInvJsonByAffiInvList -->
		from w_maf
		left join w_maod on w_maf.inv_id = w_maod.inv_id
		and w_maf.batch_no= w_maod.batch_no
		and w_maf.batch_sn = w_maod.batch_sn
		and w_maf.bar_code= w_maod.bar_code
		and w_maf.price = w_maod.price
		and w_maf.location_id = w_maod.location_id
		<where>
			<if test="bus_type_code == null or bus_type_code != '30'">
				and nvl(w_maf.left_amount,0) - nvl(w_maod.amount,0) > 0
			</if>
			<if test="bus_type_code != null and bus_type_code == '30'">
				and w_maf.out_amount > 0
			</if>
			<if test="key != null and key != ''">
				and (
				w_maf.inv_code like '%${key}%' or
				w_maf.inv_name like '%${key}%'
				or
				w_maf.spell_code like '%${key}%' or
				w_maf.wbx_code like '%${key}%' or
				w_maf.alias like '%${key}%' or
				w_maf.alias_spell like '%${key}%'
				)
			</if>
		</where>
		<if test="bus_type_code == null or bus_type_code != '30'">
			order by w_maf.inv_code, w_maf.batch_no, w_maf.inva_date, w_maf.batch_sn
		</if>
		<if test="bus_type_code != null and bus_type_code == '30'">
			order by w_maf.inv_code, w_maf.batch_no desc, w_maf.inva_date desc,
			w_maf.batch_sn desc
		</if>

	</select>

	<!-- 公用判断日期是否在会计期间 -->
	<select id="existsAccYearMonthCheck" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM acc_year_month
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and acc_year||acc_month =
		#{year,jdbcType=VARCHAR}||#{month,jdbcType=VARCHAR}
	</select>
	<!-- 公用判断日期是否已结账 -->
	<select id="existsMatYearMonthIsAccount" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM acc_year_month
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and begin_date &gt;=
		to_date(#{year,jdbcType=VARCHAR}||#{month,jdbcType=VARCHAR}||#{day,jdbcType=VARCHAR},'yyyy-mm-dd')
		and end_date
		&lt;=to_date(#{year,jdbcType=VARCHAR}||#{month,jdbcType=VARCHAR}||#{day,jdbcType=VARCHAR},'yyyy-mm-dd')
		and mat_flag = 1
	</select>
	<!-- 判断日期是否在物流系统启用日期之前 -->
	<select id="existsDateCheckBefore" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM SYS_MOD_START a
		LEFT JOIN ACC_YEAR_MONTH b
		ON a.group_id = b.group_id
		AND a.hos_id = b.hos_id
		AND a.copy_code = b.copy_code
		AND a.start_year = b.acc_year
		AND a.start_month = b.acc_month
		WHERE a.group_id =
		#{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		and a.mod_code = '04'
		and b.begin_date > #{in_date,jdbcType=DATE}
	</select>
	<!-- 获取物流启用时间 -->
	<select id="getMatStartDate" resultType="String" parameterType="java.util.Map">
		SELECT start_year || '-' || start_month
		FROM SYS_MOD_START
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and mod_code = '04'
	</select>
	<!-- 获取仓库在物流中的别名一般用于生成单号 -->
	<select id="queryStoreAliasById" resultType="String"
		parameterType="java.util.Map">
		SELECT alias
		FROM mat_store
		WHERE group_id
		= #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and store_id = #{store_id,jdbcType=INTEGER}
	</select>
	<!-- 获取业务类型的简称一般用于生成单号 -->
	<select id="queryBusTypeFlagByCode" resultType="String"
		parameterType="java.util.Map">
		SELECT type_flag
		FROM mat_bus_type
		WHERE
		bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
	</select>
	<!-- 取出当前物流的未结账最小会计期间 -->
	<resultMap id="matCurYearMonth" type="java.util.Map">
		<result property="acc_year" column="acc_year" />
		<result property="acc_month" column="acc_month" />
		<result property="begin_date" column="begin_date" />
		<result property="end_date" column="end_date" />
	</resultMap>
	<resultMap id="matLastYearMonth" type="java.util.Map">
		<result property="last_year" column="last_year" />
		<result property="last_month" column="last_month" />
		<result property="last_begin_date" column="last_begin_date" />
		<result property="last_end_date" column="last_end_date" />
	</resultMap>
    <!-- 取出当前物流耐用品的未结账最小会计期间 -->
    <resultMap id="matDuraCurYearMonth" type="java.util.Map">
        <result property="acc_year" column="acc_year" />
        <result property="acc_month" column="acc_month" />
    </resultMap>
    <resultMap id="matDuraLastYearMonth" type="java.util.Map">
        <result property="last_year" column="last_year" />
        <result property="last_month" column="last_month" />
    </resultMap>
	<select id="queryMatCurYearMonth" parameterType="java.util.Map"
		resultMap="matCurYearMonth">
		SELECT acc_year,acc_month,begin_date,end_date
		FROM (
		select acc_year,acc_month,begin_date,end_date
		from acc_year_month
		where group_id=#{group_id} and hos_id=#{hos_id}
		and copy_code=#{copy_code} and nvl(mat_flag, 0) = 0
		and acc_year||acc_month >= (
		select
		start_year||start_month
		from sys_mod_start
		where
		group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		and mod_code = '04'
		)
		) RS
		WHERE acc_year||acc_month =(
		select MIN(acc_year||acc_month)
		from acc_year_month
		where group_id=#{group_id} and hos_id=#{hos_id}
		and copy_code=#{copy_code} and nvl(mat_flag, 0) = 0
		and acc_year||acc_month >= (
		select
		start_year||start_month
		from sys_mod_start
		where
		group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		and mod_code = '04'
		)
		)
	</select>
	<select id="queryMatLastYearMonth" parameterType="java.util.Map"
		resultMap="matLastYearMonth">
		SELECT acc_year as last_year,acc_month as last_month
		,begin_date as last_begin_date,end_date as last_end_date
		FROM (
		select acc_year,acc_month,begin_date,end_date
		from acc_year_month
		where group_id=#{group_id} and hos_id=#{hos_id}
		and copy_code=#{copy_code} and nvl(mat_flag, 0) = 1
		and acc_year||acc_month >= (
		select
		start_year||start_month
		from sys_mod_start
		where
		group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		and mod_code = '04'
		)
		) RS
		WHERE acc_year||acc_month =(
		select MAX(acc_year||acc_month)
		from acc_year_month
		where group_id=#{group_id} and hos_id=#{hos_id}
		and copy_code=#{copy_code} and nvl(mat_flag, 0) = 1
		and acc_year||acc_month >= (
		select
		start_year||start_month
		from sys_mod_start
		where
		group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		and mod_code = '04'
		)
		)
	</select>
    <select id="queryMatDuraCurYearMonth" parameterType="java.util.Map"
        resultMap="matDuraCurYearMonth">
        SELECT acc_year,acc_month
        FROM (
        select acc_year,acc_month,begin_date,end_date
        from acc_year_month
        where group_id=#{group_id} and hos_id=#{hos_id}
        and copy_code=#{copy_code} 
        ) RS
        WHERE acc_year||acc_month =(
        select MIN(acc_year||acc_month)
        from mat_dura_year_month
        where group_id=#{group_id} and hos_id=#{hos_id}
        and copy_code=#{copy_code} and nvl(dura_flag, 0) = 0
        and acc_year||acc_month >= (
        select
        start_year||start_month
        from sys_mod_start
        where
        group_id = #{group_id}
        AND hos_id = #{hos_id}
        AND copy_code = #{copy_code}
        and mod_code = '0413'
        )
       )
    </select>
    <select id="queryMatDuraLastYearMonth" parameterType="java.util.Map"
        resultMap="matDuraLastYearMonth">
        SELECT acc_year as last_year,acc_month as last_month
        FROM (
        select acc_year,acc_month,begin_date,end_date
        from acc_year_month
        where group_id=#{group_id} and hos_id=#{hos_id}
        and copy_code=#{copy_code} 
        ) RS
        WHERE acc_year||acc_month =(
        select MAX(acc_year||acc_month)
        from mat_dura_year_month
        where group_id=#{group_id} and hos_id=#{hos_id}
        and copy_code=#{copy_code} and nvl(dura_flag,0) = 1
        and acc_year||acc_month >= (
        select
        start_year||start_month
        from sys_mod_start
        where
        group_id = #{group_id}
        AND hos_id = #{hos_id}
        AND copy_code = #{copy_code}
        and mod_code = '0413'
        )
        )
    </select>
    <select id="queryMatDuraStartYearMonth" parameterType="java.util.Map"
        resultMap="matDuraCurYearMonth">
        
        select
        start_year acc_year,start_month acc_month
        from sys_mod_start
        where
        group_id = #{group_id}
        AND hos_id = #{hos_id}
        AND copy_code = #{copy_code}
        and mod_code = '0413'
       
    </select>
	<!-- 公用判断日期是否存在物流期间 -->
	<select id="existsMatYearMonthCheck" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM acc_year_month
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		and hos_id = #{hos_id,jdbcType=INTEGER}
		and copy_code = #{copy_code,jdbcType=VARCHAR}
		and acc_year||acc_month =
		#{year,jdbcType=VARCHAR}||#{month,jdbcType=VARCHAR}
		and acc_year||acc_month >= (
		select start_year||start_month
		from sys_mod_start
		where
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		and mod_code = '04'
		)
	</select>
	<!-- 公用判断日期是否在启用日期之后 -->
	<select id="existsMatStartDateCheck" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM sys_mod_start
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND mod_code = '04'
		AND <![CDATA[start_year||start_month <= #{year,jdbcType=VARCHAR}||#{month,jdbcType=VARCHAR}]]>
	</select>
	<!-- 判断材料库存是否有剩余 -->
	<select id="getHoldBalanceByInv" resultType="Integer"
		parameterType="java.util.Map">

		SELECT nvl(SUM(nvl(cur_amount, 0)), 0) amount
		FROM MAT_INV_HOLD
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_ids != null and inv_ids != ''">
				AND inv_id in (${inv_ids})
			</if>
			<if test="batch_no != null and batch_no != ''">
				AND batch_no = #{batch_no,jdbcType=INTEGER}
			</if>
			<if test="batch_sn != null and batch_sn != ''">
				AND batch_sn = #{batch_sn,jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<!-- 判断是否有不属于该仓库的材料 -->
	<select id="existsMatStoreIncludeInv" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE NOT EXISTS (
		SELECT 1 FROM mat_store_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND store_id = #{store_id,jdbcType=INTEGER}
		AND inv_id = a.inv_id
		)
			<![CDATA[AND rownum <= 50]]>
	</select>
	
	<!-- 判断是否有条码存在 -->
	<select id="existsMatSnInv" resultType="String"
		parameterType="java.util.Map">
		select count(*) from mat_affi_fifo  where bar_code= #{sn,jdbcType=VARCHAR}



	</select>

	<!-- 判断是否有不属于该供应商的材料 -->
	<select id="existsMatSupIncludeInv" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE
		EXISTS (
		SELECT 1 FROM mat_inv_sup
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND inv_id = a.inv_id
		)
		AND NOT EXISTS (
		SELECT 1 FROM mat_inv_sup
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		AND inv_id = a.inv_id
		)
			<![CDATA[AND rownum <= 50]]>
	</select>

	<!-- 判断供应商是否是材料的唯一供应商 -->
	<select id="existsMatInvOnlySup" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE EXISTS(
		SELECT SUM(left_amount) FROM mat_fifo_balance
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND sup_id &lt;&gt; #{sup_id,jdbcType=INTEGER}
		AND inv_id = a.inv_id
		HAVING SUM(left_amount) > 0
		)
			<![CDATA[AND rownum <= 50]]>
	</select>

	<!-- (代销)判断是否有不属于该供应商的材料 -->
	<select id="existsMatAffiSupIncludeInv" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE
		EXISTS (
		SELECT 1 FROM mat_inv_sup
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND inv_id = a.inv_id
		)
		AND NOT EXISTS (
		SELECT 1 FROM mat_inv_sup
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		AND inv_id = a.inv_id
		)
			<![CDATA[AND rownum <= 50]]>
	</select>

	<!-- (代销)判断该供应商是否在账表有库存 -->
	<select id="existsMatAffiSupIncludeInvAmount" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE EXISTS(
		SELECT SUM(left_amount) FROM mat_affi_fifo
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND sup_id &lt;&gt; #{sup_id,jdbcType=INTEGER}
		AND inv_id = a.inv_id
		HAVING SUM(left_amount) > 0
		)
		 
			<![CDATA[AND rownum <= 50]]>
	</select>


	<!-- 退货时看供应商是否一致 -->  
	<select id="existsMatInSupIsInv" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE
		a.inv_id not in (
		SELECT distinct mfb.inv_id FROM mat_fifo_balance mfb
		 left join (
	     select distinct a1.sup_id,b1.inv_id,b1.batch_no,b1.batch_sn from mat_in_main a1
	     left join mat_in_detail b1 on a1.in_id=b1.in_id
	     where a1.state>=3
	    
	     and a1.bus_type_code in ('1','2','16','18','47','22')
	    ) i  on mfb.inv_id=i.inv_id
	     and mfb.batch_no=i.batch_no
	     and mfb.batch_sn=i.batch_sn
		WHERE mfb.group_id = #{group_id,jdbcType=INTEGER}
		AND mfb.hos_id = #{hos_id,jdbcType=INTEGER}
		AND mfb.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND i.sup_id = #{sup_id,jdbcType=INTEGER}
		AND mfb.inv_id = a.inv_id
		)
			<![CDATA[AND rownum <= 50]]>
	</select>
	<!-- 退货时看供应商是否一致(代销) -->
	<select id="existsMatAffiSupIsInv" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE
		a.inv_id not in (
		SELECT distinct inv_id FROM mat_affi_fifo
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<!-- 代销退货可以退期初没有录入供应商的材料 -->
		AND (sup_id = #{sup_id,jdbcType=INTEGER} or sup_id = 0)
		AND inv_id = a.inv_id
		)
			<![CDATA[AND rownum <= 50]]>
	</select>

	<!-- (代销)判断供应商是否是材料的唯一供应商 -->
	<select id="existsMatAffiInvOnlySup" resultType="String"
		parameterType="java.util.Map">
		SELECT to_char(wm_concat(to_char(b.inv_code||' '||b.inv_name))) FROM (
		SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
		FROM DUAL
		CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}',
		',', ''))+1
		) a
		LEFT JOIN mat_inv_dict b
		ON b.group_id = #{group_id,jdbcType=INTEGER}
		AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND b.is_stop = 0
		AND a.inv_id = b.inv_id
		WHERE EXISTS(
		SELECT SUM(left_amount) FROM mat_affi_fifo
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND sup_id &lt;&gt; #{sup_id,jdbcType=INTEGER}
		AND inv_id = a.inv_id
		HAVING SUM(left_amount) > 0
		)
			<![CDATA[AND rownum <= 50]]>
	</select>

	<!-- 判断批号有效日期是否一致 -->
	<select id="queryMatInvBatchInva" parameterType="java.util.Map"
		resultType="java.util.Date">
		SELECT inva_date
		FROM MAT_BATCH_VALIDITY
		WHERE group_id =
		#{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		AND batch_no = #{batch_no,jdbcType=VARCHAR}
	</select>

	<!-- 判断批号灭菌日期是否一致 -->
	<select id="queryMatInvBatchDisinfect" parameterType="java.util.Map"
		resultType="java.util.Date">
		SELECT disinfect_date
		FROM MAT_BATCH_DISINFECT
		WHERE group_id
		= #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		AND batch_no = #{batch_no,jdbcType=VARCHAR}
	</select>

	<!-- 判断批号单价是否一致 -->
	<select id="queryMatInvBatchPrice" parameterType="java.util.Map"
		resultType="java.lang.Double">
		select price from mat_fifo_balance
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		AND batch_no = #{batch_no,jdbcType=VARCHAR}
		AND rownum = 1
	</select>

	<!-- 判断批号单价是否一致（代销） -->
	<select id="queryMatAffiInvBatchPrice" parameterType="java.util.Map"
		resultType="java.lang.Double">
		select price from mat_affi_fifo
		WHERE group_id =
		#{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		AND batch_no = #{batch_no,jdbcType=VARCHAR}
		AND rownum = 1
	</select>

	<!-- 采购计划 材料列表 -->
	<select id="queryMatInvListByPur" parameterType="java.util.Map" resultType="java.util.TreeMap">
		with inv_tmp as(
			select mid.group_id, mid.hos_id, mid.copy_code, mid.inv_id,
				mid.inv_no,mid.inv_code, mid.inv_name,mid.inv_model,
				hu.unit_code,hu.unit_name,mium.map_amount
				num_exchange,hp.pack_code,hp.pack_name,mid.is_com,mis.is_default,mid.plan_price
				price,hfd.fac_id,hfd.fac_code,hfd.fac_name,mis.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name,
				mid.bid_code
			from mat_inv_dict mid
			left join hos_unit hu on mid.group_id = hu.group_id
				and mid.hos_id = hu.hos_id
				and mid.unit_code=hu.unit_code
				and hu.is_stop=0
			left join mat_inv_unit_map mium on mid.group_id = mium.group_id
				and mid.hos_id = mium.hos_id
				and mid.copy_code = mium.copy_code
				and mid.inv_id = mium.inv_id
			left join hos_package hp on mium.group_id = hp.group_id
				and mium.hos_id = hp.hos_id
				and mium.pack_code = hp.pack_code
				and hp.is_stop =0
			left join hos_fac_dict hfd on mid.group_id = hfd.group_id
				and mid.hos_id =hfd.hos_id
				and mid.fac_id = hfd.fac_id
				and mid.fac_no = hfd.fac_no
			left join mat_inv_sup mis on mid.group_id = mis.group_id
				and mid.hos_id = mis.hos_id
				and mid.copy_code = mis.copy_code
				and mid.inv_id = mis.inv_id
				and mis.is_default = 1
			left join hos_sup_dict hsd on mis.group_id = hsd.group_id
				and mis.hos_id = hsd.hos_id
				and mis.sup_id = hsd.sup_id
				and hsd.is_stop = 0
			left join mat_type_dict mtd on mid.group_id=mtd.group_id and mid.hos_id=mtd.hos_id and mid.copy_code=mtd.copy_code
             	and mid.mat_type_id=mtd.mat_type_id 
        	<!-- join v_user_data_perm vus on vus.group_id = mtd.group_id
		        and vus.hos_id = mtd.hos_id
		        and vus.perm_code = mtd.mat_type_id
		        and vus.table_code = 'MAT_TYPE_DICT'
		        <if test="user_id !=null and user_id !='' ">
					and vus.user_id = #{user_id,jdbcType=INTEGER}
				</if>
		        and vus.is_read = 1
		        and vus.is_write = 1  -->
			<!-- left join mat_store_inv msi on mid.group_id = msi.group_id
				and mid.hos_id = msi.hos_id
				and mid.copy_code = msi.copy_code
				and mid.inv_id = msi.inv_id
				and msi.is_apply=1
			left join hos_store_dict hd on msi.group_id = hd.group_id
				and msi.hos_id = hd.hos_id
				and msi.store_id = hd.store_id
				and hd.is_stop=0
			join v_user_data_perm vus on vus.group_id = hd.group_id
				and vus.hos_id = hd.hos_id
				and vus.perm_code = hd.store_id
				and vus.table_code = 'HOS_STORE_DICT'
				<if test="user_id !=null and user_id !='' ">
					and vus.user_id = #{user_id,jdbcType=INTEGER}
				</if>
				and vus.is_read = 1
				and vus.is_write = 1 -->
		<where>
		
		mtd.mat_type_id in (select vus.perm_code from  v_user_data_perm vus 
		where  vus.group_id = #{group_id,jdbcType=INTEGER}
		        and vus.hos_id = #{hos_id,jdbcType=INTEGER}
		        and vus.table_code = 'MAT_TYPE_DICT'
		        <if test="user_id !=null and user_id !='' ">
					and vus.user_id = #{user_id,jdbcType=INTEGER}
				</if>
		        and vus.is_read = 1
		        and vus.is_write = 1 
		        )
			<if test="group_id !=null and group_id !='' ">
				and mid.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and mid.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="key != null and key != ''">
				and (
				mid.inv_code like '%${key}%' or
				mid.inv_name like '%${key}%' or
				mid.spell_code like '%${key}%' or
				mid.wbx_code like '%${key}%' or
				mid.alias like '%${key}%' or
				mid.alias_spell like '%${key}%'
				)
			</if>
			and mid.use_state = 1
			and mid.is_stop = 0
		</where>
		),com_tmp as (
		select group_id,hos_id,copy_code,inv_id,sum(nvl(cur_amount,0)) as cur_amount
		from mat_inv_hold
		<where>
			<if test="group_id !=null and group_id !='' ">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
		</where>
		group by group_id,hos_id,copy_code,inv_id
		),affi_tmp as (
		select group_id,hos_id,copy_code,inv_id,sum(nvl(cur_amount,0)) as cur_amount
		from mat_affi_inv_hold
		<where>
			<if test="group_id !=null and group_id !='' ">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
		</where>
		group by group_id,hos_id,copy_code,inv_id
		)
		select
		inv_tmp.group_id,inv_tmp.hos_id,inv_tmp.copy_code,inv_tmp.inv_id,inv_tmp.inv_no,inv_tmp.inv_code,inv_tmp.inv_name,inv_tmp.inv_model,
		inv_tmp.unit_code,inv_tmp.unit_name,inv_tmp.num_exchange,inv_tmp.pack_code,inv_tmp.pack_name,inv_tmp.fac_id,inv_tmp.fac_code,inv_tmp.fac_name,
		inv_tmp.sup_id,inv_tmp.sup_no,inv_tmp.sup_code,inv_tmp.sup_name,inv_tmp.price,inv_tmp.is_default,
		inv_tmp.bid_code,
		case when inv_tmp.is_com = 1 then nvl(affi_tmp.cur_amount,0) else
		nvl(com_tmp.cur_amount,0) end as cur_amount
		from inv_tmp inv_tmp
		left join com_tmp com_tmp on inv_tmp.group_id =com_tmp.group_id
		and inv_tmp.hos_id =com_tmp.hos_id
		and inv_tmp.copy_code=com_tmp.copy_code
		and inv_tmp.inv_id = com_tmp.inv_id
		left join com_tmp affi_tmp on inv_tmp.group_id =affi_tmp.group_id
		and inv_tmp.hos_id =affi_tmp.hos_id
		and inv_tmp.copy_code=affi_tmp.copy_code
		and inv_tmp.inv_id = affi_tmp.inv_id
		order by inv_tmp.inv_code
	</select>

	<!-- 查询 判断材料证件是否过期 -->
	<select id="queryMatCertDate" parameterType="java.util.Map"
		resultMap="certMap">
		select end_date , nvl(ROUND(TO_NUMBER(end_date -
		to_date(#{currentDate},'yyyy-MM-dd'))), 0) days
		from mat_inv_cert
		WHERE
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND cert_id = #{cert_id,jdbcType=INTEGER}
	</select>

	<!-- 查询采购科室 -->
	<select id="queryMatStockDept" parameterType="java.util.Map"
		resultType="java.lang.String">
		select a.dept_id || ',' || a.dept_no
		from hos_dept_dict a
		left join ACC_DEPT_ATTR b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.dept_id = b.dept_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.is_stop = 0 AND b.is_stock = 1
		AND rownum = 1
	</select>

	<!-- 显示供应商全部材料 常备材料 -->
	<select id="queryAllStorageMatbySupId" parameterType="java.util.Map"
		resultMap="matInv">
		with inv_temp as (
		select a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id,
		e.inv_no,
		e.inv_code,
		e.inv_name,
		e.inv_model,
		h.unit_name,
		f.mat_type_name,
		g.fac_name,
		e.spell_code,
		e.wbx_code,
		a.batch_no,
		a.bar_code,
		sum(nvl(a.left_amount, 0)) as left_amount,
		sum(nvl(a.left_money, 0)) as left_money,
		a.price,
		nvl(a.sale_price, 0) as sale_price,
		nvl(e.sell_price, 0) as sell_price,
		a.location_id,
		b.location_code,
		b.location_name,
		cc.inva_date,
		cc.disinfect_date,
		e.alias,
		e.alias_spell,
		a.sup_id
		from mat_fifo_balance a
		left join mat_location_dict b on a.group_id = b.group_id and a.hos_id =
		b.hos_id and a.copy_code = b.copy_code
		and a.location_id = b.location_id and b.is_stop = 0
		left join mat_in_detail cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn = cc.batch_sn and a.bar_code=cc.bar_code
             and a.price=cc.price
        left join mat_in_main dd on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id and cc.copy_code=dd.copy_code
        	 and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity c on a.group_id = c.group_id and a.hos_id =
		c.hos_id and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id and a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id and a.hos_id =
		d.hos_id and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id and a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id and a.hos_id =
		e.hos_id and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id and e.is_stop = 0 and e.use_state = 1
		left join mat_type_dict f on a.group_id = f.group_id and a.hos_id =
		f.hos_id and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		 left join (
       select distinct a1.sup_id,b1.inv_id,b1.batch_no,b1.batch_sn from mat_in_main a1
       left join mat_in_detail b1 on a1.in_id=b1.in_id
       where a1.state>=3
       and a1.store_id=#{store_id,jdbcType=INTEGER}
       and a1.bus_type_code in ('1','2','16','18','47','22')
      ) i  on a.inv_id=i.inv_id
       and a.batch_no=i.batch_no
       and a.batch_sn=i.batch_sn
		where a.group_id = #{group_id, jdbcType = INTEGER}
		AND a.hos_id = #{hos_id, jdbcType = INTEGER}
		AND a.copy_code = #{copy_code, jdbcType = VARCHAR}
		AND a.store_id = #{store_id, jdbcType = INTEGER}
		AND i.sup_id=#{sup_id, jdbcType = INTEGER} and dd.bus_type_code in (2,4,6,10,16,18) 
		and <![CDATA[ cc.amount > 0 ]]>
		group by a.group_id, a.hos_id, a.copy_code, a.inv_id, e.inv_no, e.inv_code,
		e.inv_name,
		e.spell_code, e.alias, e.alias_spell, e.wbx_code, a.batch_no, a.bar_code, a.price,
		a.sale_price, e.sell_price, a.location_id, b.location_code,
		b.location_name,
		cc.inva_date, cc.disinfect_date, e.inv_model, f.mat_type_name, g.fac_name,
		h.unit_name, a.sup_id
		),
		out_temp as (
		select inv_id, batch_no, bar_code, price, sum(amount) amount
		from(
		--出库未确认
		select
		b.inv_id,
		b.batch_no,
		b.bar_code,
		b.price,
		sum(nvl(b.amount, 0)) as amount
		from mat_out_main a
		left join mat_out_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=VARCHAR}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
	            <![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price
		--退货未确认
		union all
		select
		b.inv_id,
		b.batch_no,
		b.bar_code,
		b.price,
		-1 * sum(nvl(b.amount, 0)) as amount
		from mat_in_main a
		left join mat_in_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.in_id = b.in_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND a.sup_id=#{sup_id,jdbcType=VARCHAR}
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code in (10,12,16,22)
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
	            <![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price
		)
		group by inv_id, batch_no, bar_code, price
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id,
		a.inv_no,
		a.inv_code,
		a.inv_name,
		a.inv_model,
		a.unit_name,
		a.mat_type_name,
		a.fac_name,
		a.batch_no,
		a.bar_code,
		a.left_amount as cur_amount,
		--(-1)*a.left_amount as amount,
		--(-1)*(nvl(a.price,0)*nvl(a.left_amount,0)) as amount_money,
		(-1)*(nvl(a.left_amount,0)-nvl(b.amount,0)) as amount,
		(-1)*(nvl(a.price,0)*(nvl(a.left_amount,0)-nvl(b.amount,0))) as
		amount_money,
		a.left_money as cur_money,
		a.price,
		a.sale_price,
		a.sell_price,
		a.location_id,
		a.location_code,
		a.location_name,
		a.inva_date,
		a.disinfect_date,
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount
		from inv_temp a
		left join out_temp b
		on a.inv_id = b.inv_id
		and a.batch_no= b.batch_no
		and a.bar_code= b.bar_code
		and a.price = b.price
		and a.sup_id= #{sup_id,jdbcType=VARCHAR}
		<where>
			<if test="bus_type_code == null or bus_type_code != '21'">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
			</if>
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>
		</where>
		order by a.inv_code, a.inva_date
	</select>

	<!-- 显示供应商全部材料 代销材料 -->
	<select id="queryAllMatbySupId" parameterType="java.util.Map"
		resultMap="matInv">
		with inv_temp as (
		select a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id, --材料ID
		e.inv_no, -- 材料变更号
		e.inv_code, --材料编码
		e.inv_name, --材料名称
		e.inv_model, --规格型号
		h.unit_name, --计量单位
		f.mat_type_name, --材料类别名称
		g.fac_name, --生成产商名称
		e.spell_code, --拼音码
		e.wbx_code, --五笔码
		a.batch_no, --批号
		a.bar_code, --条形码
		sum(nvl(a.left_amount, 0)) as left_amount, --当前库存数量
		sum(nvl(a.left_money, 0)) as left_money, --当前库存数量
		a.price, --单价
		nvl(a.sale_price, 0) as sale_price, --批发单价
		nvl(e.sell_price, 0) as sell_price, --零售单价
		a.location_id, --货位ID
		b.location_code, --货位编码
		b.location_name, --货位名称
		cc.inva_date, --有效期
		cc.disinfect_date, --灭菌日期
		e.alias,
		e.alias_spell,
		a.sup_id
		from mat_affi_fifo a
		left join mat_location_dict b
		on a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.location_id = b.location_id
		and b.is_stop = 0
		left join mat_affi_in_detail cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn = cc.batch_sn and a.bar_code=cc.bar_code
             and a.price=cc.price
        left join mat_affi_in dd on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id and cc.copy_code=dd.copy_code
        	and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity c
		on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d
		on a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e
		on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and cc.inv_no=e.inv_no
		<!-- and e.is_stop = 0 -->
		and e.use_state = 1
		left join mat_type_dict f
		on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g
		on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h
		on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		where a.group_id = #{group_id, jdbcType = INTEGER}
		AND a.hos_id = #{hos_id, jdbcType = INTEGER}
		AND a.copy_code = #{copy_code, jdbcType = VARCHAR}
		AND a.store_id = #{store_id, jdbcType = INTEGER}
		AND a.sup_id=#{sup_id, jdbcType = INTEGER} and dd.bus_type_code in (1,27)
		group by a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id,
		e.inv_no,
		e.inv_code,
		e.inv_name,
		e.spell_code,
		e.alias,
		e.alias_spell,
		e.wbx_code,
		a.batch_no,
		a.bar_code,
		a.price,
		a.sale_price,
		e.sell_price,
		a.location_id,
		b.location_code,
		b.location_name,
		cc.inva_date,
		cc.disinfect_date,
		e.inv_model,
		f.mat_type_name,
		g.fac_name,
		h.unit_name,
		a.sup_id),
		out_temp as (
		select inv_id, batch_no, bar_code, price, sum(amount) amount
		from(
		--出库未确认
		select
		b.inv_id,
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		sum(nvl(b.amount, 0)) as amount
		from mat_affi_out a
		left join mat_affi_out_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=VARCHAR}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '29' ]]>
		<if test="out_id != null and out_id != ''">
            <![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price
		--退货未确认
		union all
		select
		b.inv_id,
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		-1 * sum(nvl(b.amount, 0)) as amount
		from mat_affi_in a
		left join mat_affi_in_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.in_id = b.in_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND a.sup_id=#{sup_id,jdbcType=VARCHAR}
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code = '30'
		<if test="in_id != null and in_id != ''">
            <![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price
		)
		group by inv_id, batch_no, bar_code, price
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_no, --批号
		a.bar_code, --条形码
		a.left_amount as cur_amount, --当前库存数量
		(-1)*a.left_amount as amount,
		(-1)*(nvl(a.price,0)*nvl(a.left_amount,0)) as amount_money,
		a.left_money as cur_money, --当前库存金额
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_id, --货位ID
		a.location_code, --货位编码
		a.location_name, --货位名称
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount
		from inv_temp a
		left join out_temp b
		on a.inv_id = b.inv_id
		and a.batch_no= b.batch_no
		and a.bar_code= b.bar_code
		and a.price = b.price
		and a.sup_id= #{sup_id,jdbcType=VARCHAR}
		<where>
			<if test="bus_type_code == null or bus_type_code != '21'">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
			</if>
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>
		</where>
		order by a.inv_code, a.inva_date
	</select>

	<!-- 查询采购科室 -->
	<select id="queryLoginUserMsg" parameterType="java.util.Map" resultType="java.util.Map">
		select 
			a.group_id, a.hos_id, a.user_id, a.user_code, a.user_name,
			b.emp_id, b.emp_no, b.emp_code, b.emp_name, c.dept_id, c.dept_no, c.dept_code, c.dept_name
		from sys_user a
		left join hos_emp_dict b on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.emp_code = b.emp_id
			and b.is_stop = 0
		left join hos_dept_dict c on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and b.dept_id = c.dept_id
			and c.is_stop = 0
		where a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.user_id = #{user_id,jdbcType=INTEGER}
			and a.emp_code is not null
		union
		select 
			a.group_id, a.hos_id, a.user_id, a.user_code, a.user_name,
			null, null, null, null, c.dept_id, c.dept_no, c.dept_code, c.dept_name
		from sys_user a
		left join hos_dept_dict c on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.user_code = c.dept_code
			and c.is_stop = 0
		where a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.user_id = #{user_id,jdbcType=INTEGER}
			and a.emp_code is null
	</select>

	<!-- 耐用品材料列表 -->
	<select id="queryMatDuraInvList" parameterType="java.util.Map" resultMap="matInv">
		SELECT mid.inv_id, mid.inv_no, mid.inv_code, mid.inv_name, mtd.mat_type_code,
			mtd.mat_type_name, mid.inv_model, hu.unit_name, hfd.fac_name, mid.plan_price price,
			mid.sell_price, mid.bid_code, mium.pack_code, hp.pack_name,
			mium.map_amount num_exchange,
			mld.location_id, mld.location_code, mld.location_name
		FROM mat_inv_dict mid
		LEFT JOIN mat_type_dict mtd ON mid.group_id = mtd.group_id
			AND mid.hos_id = mtd.hos_id
			AND mid.mat_type_id = mtd.mat_type_id
			AND mtd.is_stop = 0
		LEFT JOIN hos_unit hu ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code
			and hu.is_stop = 0
		LEFT JOIN hos_fac_dict hfd ON mid.group_id = hfd.group_id
			AND mid.hos_id = hfd.hos_id
			AND mid.fac_id = hfd.fac_id
			AND mid.fac_no = hfd.fac_no
		LEFT JOIN mat_inv_unit_map mium ON mid.group_id = mium.group_id
			AND mid.hos_id = mium.hos_id
			AND mid.copy_code = mium.copy_code
			AND mid.inv_id = mium.inv_id
		LEFT JOIN hos_package hp ON mium.group_id = hp.group_id
			AND mium.hos_id = hp.hos_id
			AND mium.pack_code = hp.pack_code
		<!-- LEFT JOIN mat_location_inv mli ON mid.group_id = mli.group_id AND 
			mid.hos_id = mli.hos_id AND mid.copy_code = mli.copy_code AND mid.inv_id 
			= mli.inv_id -->
		LEFT JOIN mat_store_inv msi ON mid.group_id = msi.group_id
			AND mid.hos_id = msi.hos_id
			AND mid.copy_code = msi.copy_code
			AND mid.inv_id = msi.inv_id
			AND msi.store_id =#{store_id,jdbcType=INTEGER}
		LEFT JOIN mat_location_dict mld ON msi.group_id = mld.group_id
			AND msi.hos_id = mld.hos_id
			AND msi.copy_code = mld.copy_code
			AND msi.location_id = mld.location_id
			AND msi.store_id = mld.store_id
			AND mld.is_stop = 0
		WHERE mid.group_id = #{group_id,jdbcType=INTEGER}
			AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mid.use_state = 1  <!-- 再用 -->
			AND mid.is_stop = 0  <!-- 最新 -->
			AND mid.is_dura = 1  <!-- 耐用品材料 -->
			<if test="key != null and key != ''">
				AND (
				mid.inv_code like '${key}%'
				OR mid.inv_name like '%${key}%'
				OR mid.spell_code like '%${key}%'
				OR mid.wbx_code like '%${key}%'
				OR mid.alias like '%${key}%'
				OR mid.alias_spell like '%${key}%'
				OR mid.bid_code like '%{key}%'
				)
			</if>
		order by mid.inv_code
	</select>

	<!-- 耐用品库房材料列表 -->
	<select id="queryMatDuraStoreInvList" parameterType="java.util.Map" resultMap="matInv">
		SELECT mid.inv_id, mid.inv_no, mid.inv_code, mid.inv_name,
			mtd.mat_type_code,mtd.mat_type_name, mid.inv_model, hu.unit_name, hfd.fac_name, mdsb.price, mid.bid_code, mdsb.bar_code,
			nvl(mdsb.left_amount,0) cur_amount, nvl(mdsb.left_amount,0) - nvl(vmdssi.amount, 0) imme_amount
		FROM mat_dura_store_balance mdsb
		LEFT JOIN v_mat_dura_store_stock_imme vmdssi ON mdsb.group_id = vmdssi.group_id
			AND mdsb.hos_id = vmdssi.hos_id
			AND mdsb.copy_code = vmdssi.copy_code
			AND mdsb.store_id = vmdssi.store_id
			AND mdsb.inv_id = vmdssi.inv_id
			AND mdsb.price = vmdssi.price
		LEFT JOIN mat_inv_dict mid ON mdsb.group_id = mid.group_id
			AND mdsb.hos_id = mid.hos_id
			AND mdsb.copy_code = mid.copy_code
			AND mdsb.inv_id = mid.inv_id
			AND mid.is_stop = 0
		LEFT JOIN mat_type_dict mtd ON mid.group_id = mtd.group_id
			AND mid.hos_id = mtd.hos_id
			AND mid.mat_type_id = mtd.mat_type_id
			AND mtd.is_stop = 0
		LEFT JOIN hos_unit hu ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code
			and hu.is_stop = 0
		LEFT JOIN hos_fac_dict hfd ON mid.group_id = hfd.group_id
			AND mid.hos_id = hfd.hos_id
			AND mid.fac_id = hfd.fac_id
			AND mid.fac_no = hfd.fac_no
		WHERE mdsb.group_id = #{group_id,jdbcType=INTEGER}
			AND mdsb.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mdsb.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mdsb.store_id = #{store_id,jdbcType=INTEGER}
			<if test="key != null and key != ''">
				AND (
				mid.inv_code like '${key}%'
				OR mid.inv_name like '%${key}%'
				OR mid.spell_code like '%${key}%'
				OR mid.wbx_code like '%${key}%'
				OR mid.alias like '%${key}%'
				OR mid.alias_spell like '%${key}%'
				OR mid.bid_code like '%{key}%'
				)
			</if>
			AND nvl(mdsb.left_amount,0) - nvl(vmdssi.amount, 0) > 0
		order by mid.inv_code
	</select>

	<!-- 耐用品库房材料条码列表 -->
	<select id="queryMatDuraStoreInvBarList" parameterType="java.util.Map" resultMap="matInv">
		SELECT mid.inv_id, mid.inv_no, mid.inv_code, mid.inv_name,
			mtd.mat_type_code, mtd.mat_type_name,
			mid.inv_model, hu.unit_name, hfd.fac_name, mdsb.price, mid.bid_code, mdsb.bar_code,
			nvl(mdsb.left_amount,0) cur_amount, 
			nvl(mdsb.left_amount,0) - nvl(vmdsbi.amount, 0) imme_amount
		FROM mat_dura_store_balance mdsb
		LEFT JOIN v_mat_dura_store_stock_imme vmdsbi ON mdsb.group_id = vmdsbi.group_id
			AND mdsb.hos_id = vmdsbi.hos_id
			AND mdsb.copy_code = vmdsbi.copy_code
			AND mdsb.store_id = vmdsbi.store_id
			AND mdsb.inv_id = vmdsbi.inv_id
			AND mdsb.price = vmdsbi.price
			AND mdsb.bar_code = vmdsbi.bar_code
		LEFT JOIN mat_inv_dict mid ON mdsb.group_id = mid.group_id
			AND mdsb.hos_id = mid.hos_id
			AND mdsb.copy_code = mid.copy_code
			AND mdsb.inv_id = mid.inv_id
			AND mid.is_stop = 0
		LEFT JOIN mat_type_dict mtd ON mid.group_id = mtd.group_id
			AND mid.hos_id = mtd.hos_id
			AND mid.mat_type_id = mtd.mat_type_id
			AND mtd.is_stop = 0
		LEFT JOIN hos_unit hu ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code
			and hu.is_stop = 0
		LEFT JOIN hos_fac_dict hfd ON mid.group_id = hfd.group_id
			AND mid.hos_id = hfd.hos_id
			AND mid.fac_id = hfd.fac_id
			AND mid.fac_no = hfd.fac_no
	    LEFT JOIN mat_dura_store_reg mds ON mdsb.group_id = mds.group_id
            AND mdsb.hos_id = mds.hos_id
            AND mdsb.copy_code = mds.copy_code
            AND mdsb.store_id = mds.store_id
            AND mdsb.inv_id = mds.inv_id
            and mdsb.bar_code = mds.bar_code
		WHERE mdsb.group_id = #{group_id,jdbcType=INTEGER}
			AND mdsb.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mdsb.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mdsb.store_id = #{store_id,jdbcType=INTEGER}
			<if test="key != null and key != ''">
				AND (
					mid.inv_code like '${key}%'
				OR mid.inv_name like '%${key}%'
				OR mid.spell_code like '%${key}%'
				OR mid.wbx_code like '%${key}%'
				OR mid.alias like '%${key}%'
				OR mid.alias_spell like '%${key}%'
				OR mid.bid_code like '%{key}%'
				)
			</if>
			AND nvl(mdsb.left_amount,0) - nvl(vmdsbi.amount, 0) > 0
		order by mid.inv_code
	</select>

	<!-- 耐用品科室材料列表 -->
	<select id="queryMatDuraDeptInvList" parameterType="java.util.Map" resultType="java.util.TreeMap">
		SELECT mid.inv_id, mid.inv_no, mid.inv_code, mid.inv_name, mddb.bar_code,
			mtd.mat_type_code,mtd.mat_type_name, mid.inv_model, hu.unit_name, hfd.fac_name, mddb.price, mid.bid_code,
			nvl(mddb.left_amount,0) cur_amount, 
			nvl(mddb.price,0)*nvl(mddb.left_amount,0) cur_money,
			nvl(mddb.left_amount,0) - nvl(vmdssi.amount, 0) imme_amount
		FROM mat_dura_dept_balance mddb
		LEFT JOIN v_mat_dura_dept_stock_imme vmdssi ON mddb.group_id = vmdssi.group_id
			AND mddb.hos_id = vmdssi.hos_id
			AND mddb.copy_code = vmdssi.copy_code
			AND mddb.dept_id = vmdssi.dept_id
			AND mddb.inv_id = vmdssi.inv_id
			AND mddb.price = vmdssi.price
		LEFT JOIN mat_inv_dict mid ON mddb.group_id = mid.group_id
			AND mddb.hos_id = mid.hos_id
			AND mddb.copy_code = mid.copy_code
			AND mddb.inv_id = mid.inv_id
			AND mid.is_stop = 0
		LEFT JOIN mat_type_dict mtd ON mid.group_id = mtd.group_id
			AND mid.hos_id = mtd.hos_id
			AND mid.mat_type_id = mtd.mat_type_id
			AND mid.mat_type_no = mtd.mat_type_no
		LEFT JOIN hos_unit hu ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code
			and hu.is_stop = 0
		LEFT JOIN hos_fac_dict hfd ON mid.group_id = hfd.group_id
			AND mid.hos_id = hfd.hos_id
			AND mid.fac_id = hfd.fac_id
			AND mid.fac_no = hfd.fac_no
		LEFT JOIN mat_dura_dept_reg mddr ON mddb.group_id = mddr.group_id
            AND mddb.hos_id = mddr.hos_id
            AND mddb.copy_code = mddr.copy_code 
            AND mddb.dept_id = mddr.dept_id
            AND mddb.inv_id = mddr.inv_id
		WHERE mddb.group_id = #{group_id,jdbcType=INTEGER}
			AND mddb.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mddb.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mddb.dept_id = #{dept_id,jdbcType=INTEGER}
			<if test="key != null and key != ''">
				AND (
				mid.inv_code like '${key}%'
				OR mid.inv_name like '%${key}%'
				OR mid.spell_code like '%${key}%'
				OR mid.wbx_code like '%${key}%'
				OR mid.alias like '%${key}%'
				OR mid.alias_spell like '%${key}%'
				OR mid.bid_code like '%{key}%'
				)
			</if>
			AND nvl(mddb.left_amount,0) - nvl(vmdssi.amount, 0) > 0
		order by mid.inv_code
	</select>

	<!-- 耐用品科室材料列表 -->
	<select id="queryMatDuraDeptInvBarList" parameterType="java.util.Map" resultMap="matInv">
		SELECT mid.inv_id, mid.inv_no, mid.inv_code, mid.inv_name,
			mtd.mat_type_code, mtd.mat_type_name,
			mid.inv_model, hu.unit_name, hfd.fac_name, mddb.price, mid.bid_code, mddr.bar_code,
			nvl(mddr.left_amount,0) as cur_amount, nvl(mddr.left_amount,0) - nvl(vmdsbi.amount, 0) as imme_amount
		FROM mat_dura_dept_balance mddb
		LEFT JOIN mat_dura_dept_balance mddr ON mddb.group_id = mddr.group_id
			AND mddb.hos_id = mddr.hos_id
			AND mddb.copy_code = mddr.copy_code
			AND mddb.dept_id = mddr.dept_id
			AND mddb.inv_id = mddr.inv_id
			AND mddb.price = mddr.price
		LEFT JOIN v_mat_dura_dept_stock_imme vmdsbi ON mddb.group_id = vmdsbi.group_id
			AND mddb.hos_id = vmdsbi.hos_id
			AND mddb.copy_code = vmdsbi.copy_code
			AND mddb.dept_id = vmdsbi.dept_id
			AND mddb.inv_id = vmdsbi.inv_id
			AND mddb.price = vmdsbi.price
			AND mddr.bar_code = vmdsbi.bar_code
		LEFT JOIN mat_inv_dict mid ON mddb.group_id = mid.group_id
			AND mddb.hos_id = mid.hos_id
			AND mddb.copy_code = mid.copy_code
			AND mddb.inv_id = mid.inv_id
			AND mid.is_stop = 0
		LEFT JOIN mat_type_dict mtd ON mid.group_id = mtd.group_id
			AND mid.hos_id = mtd.hos_id
			AND mid.mat_type_id = mtd.mat_type_id
			AND mtd.is_stop = 0
		LEFT JOIN hos_unit hu ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code
			and hu.is_stop = 0
		LEFT JOIN hos_fac_dict hfd ON mid.group_id = hfd.group_id
			AND mid.hos_id = hfd.hos_id
			AND mid.fac_id = hfd.fac_id
			AND mid.fac_no = hfd.fac_no
		WHERE mddb.group_id = #{group_id,jdbcType=INTEGER}
			AND mddb.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mddb.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mddb.dept_id = #{dept_id,jdbcType=INTEGER}
			<if test="key != null and key != ''">
				AND (
				mid.inv_code like '${key}%'
				OR mid.inv_name like '%${key}%'
				OR mid.spell_code like '%${key}%'
				OR mid.wbx_code like '%${key}%'
				OR mid.alias like '%${key}%'
				OR mid.alias_spell like '%${key}%'
				OR mid.bid_code like '%{key}%'
				)
			</if>
			and nvl(mddr.left_amount, 0) - nvl(vmdsbi.amount, 0)  > 0
		order by mid.inv_code
	</select>

	<!-- 条码出库验证条码是否存在 -->
	<select id="existsMatOutInvListByBar" parameterType="java.util.Map"
		resultType="java.lang.Long">
		SELECT inv_id
		FROM mat_fifo_balance
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND store_id = #{store_id,jdbcType=INTEGER}
		AND bar_code = #{bar_code,jdbcType=VARCHAR}
		AND rownum = 1
	</select>

	<!-- 条码出库材料列表 -->
	<select id="queryMatOutInvListByBar" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with inv_temp as
		(
		select a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
		e.inv_code, e.inv_name,
		e.inv_model, h.unit_name, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code,
		a.batch_no,
		a.bar_code, a.price, nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
		sell_price,
		sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0)) as left_money,
		msi.location_id location_new_id, b.location_code location_new_code ,
		b.location_name location_new_name, cc.inva_date, cc.disinfect_date,
		e.alias, a.location_id
		from mat_fifo_balance a
		<!-- left join mat_location_dict b on a.group_id = b.group_id and a.hos_id 
			= b.hos_id and a.copy_code = b.copy_code and a.location_id = b.location_id 
			and b.is_stop = 0 -->
		left join mat_store_inv msi on a.group_id=msi.group_id
		and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict b on a.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and b.is_stop = 0
		left join mat_in_detail cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn = cc.batch_sn and a.bar_code=cc.bar_code
             and a.price=cc.price
        left join mat_in_main dd on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id and cc.copy_code=dd.copy_code
        	and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity c on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND a.inv_id = #{inv_id,jdbcType=INTEGER} and dd.bus_type_code in (1,2,4,6,10,16,18) 
		and <![CDATA[ cc.amount > 0 ]]>
		<if test="bar_code_end == null or bar_code_end == ''">
			AND a.bar_code = #{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="bar_code_end != null and bar_code_end != ''">
			AND a.bar_code &gt; #{bar_code,jdbcType=VARCHAR}
			AND a.bar_code &lt;= #{bar_code_end,jdbcType=VARCHAR}
		</if>
		group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id,
		e.inv_no, e.inv_code, e.inv_name,
		e.spell_code, e.alias, e.wbx_code, a.batch_no, a.bar_code, a.price, a.sale_price,
		e.sell_price,
		msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
		e.inv_model,
		f.mat_type_name, g.fac_name, h.unit_name,a.location_id
		),
		out_temp as(
		select inv_id, batch_no, bar_code, price, location_id, sum(amount) as amount
		from v_mat_stock_imme
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND store_id = #{store_id,jdbcType=INTEGER}
		<if test="bar_code_end == null or bar_code_end == ''">
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="bar_code_end != null and bar_code_end != ''">
			AND bar_code &gt; #{bar_code,jdbcType=VARCHAR}
			AND bar_code &lt;= #{bar_code_end,jdbcType=VARCHAR}
		</if>
		group by inv_id, batch_no, bar_code, price, location_id
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id,  <!-- 材料ID -->
		a.inv_no,  <!-- 材料变更号 -->
		a.inv_code,  <!-- 材料编码 -->
		a.inv_name,  <!-- 材料名称 -->
		a.inv_model,  <!-- 规格型号 -->
		a.unit_name,  <!-- 计量单位 -->
		a.mat_type_name,  <!-- 材料类别名称 -->
		a.fac_name,  <!-- 生成产商名称 -->
		a.batch_no,  <!-- 批号 -->
		a.bar_code,  <!-- 条形码 -->
		a.left_amount as cur_amount,  <!-- 当前库存数量 -->
		a.left_money as cur_money,  <!-- 当前库存金额 -->
		nvl(a.left_amount, 0) - nvl(b.amount, 0) as amount,  <!-- 数量 -->
		a.price,  <!-- 单价 -->
		a.price * (nvl(a.left_amount, 0) - nvl(b.amount, 0)) as amount_money,  <!-- 
			金额 -->
		a.sale_price,  <!-- 批发单价 -->
		a.sale_price * (nvl(a.left_amount, 0) - nvl(b.amount, 0)) as
		sale_money,  <!-- 批发金额 -->
		a.sell_price,  <!-- 零售单价 -->
		a.sell_price * (nvl(a.left_amount, 0) - nvl(b.amount, 0)) as
		sell_money,  <!-- 零售金额 -->
		a.location_new_id,  <!-- 货位ID -->
		a.location_new_code,  <!-- 货位编码 -->
		a.location_new_name,  <!-- 货位名称 -->
		a.inva_date,  <!-- 有效期 -->
		a.disinfect_date,  <!-- 灭菌期 -->
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id
		and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price
		and a.location_id = b.location_id
		where nvl(a.left_amount, 0) -
		nvl(b.amount, 0) > 0
		order by a.inv_code, a.batch_no, a.inva_date,
		a.bar_code
	</select>

	<!-- 条码代销出库验证条码是否存在 -->
	<select id="existsMatAffiOutInvListByBar" parameterType="java.util.Map"
		resultType="java.lang.Long">
		SELECT inv_id
		FROM mat_affi_fifo
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND store_id = #{store_id,jdbcType=INTEGER}
		AND bar_code = #{bar_code,jdbcType=VARCHAR}
		AND rownum = 1
	</select>

	<!-- 条码代销出库材料列表 -->
	<select id="queryMatAffiOutInvListByBar" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with inv_temp as
		(
		select a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
		e.inv_code, e.inv_name,
		e.inv_model, h.unit_name, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code,
		a.batch_no,
		a.bar_code, a.price, nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
		sell_price,
		sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0)) as left_money,
		msi.location_id location_new_id, b.location_code location_new_code ,
		b.location_name location_new_name, cc.inva_date, cc.disinfect_date,
		e.alias,a.location_id,
		j.sup_id, j.sup_no, j.sup_code, j.sup_name
		from mat_affi_fifo a
		<!-- left join mat_location_dict b on a.group_id = b.group_id and a.hos_id 
			= b.hos_id and a.copy_code = b.copy_code and a.location_id = b.location_id 
			and b.is_stop = 0 -->
		left join mat_store_inv msi on a.group_id=msi.group_id
		and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict b on a.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and b.is_stop = 0
		left join mat_affi_in_detail cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn = cc.batch_sn and a.bar_code=cc.bar_code
             and a.price=cc.price
        left join mat_affi_in dd  on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id and cc.copy_code=dd.copy_code
        	and cc.in_id=dd.in_id
		<!-- left join mat_batch_validity c on a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id
		and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code
		and a.inv_id = e.inv_id
		and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id
		and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id
		and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id
		and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code
		left join hos_sup_dict j
		on a.group_id = j.group_id and a.hos_id = j.hos_id
		and a.sup_id = j.sup_id and j.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND a.inv_id = #{inv_id,jdbcType=INTEGER} and dd.bus_type_code =27
		<if test="bar_code_end == null or bar_code_end == ''">
			AND a.bar_code = #{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="bar_code_end != null and bar_code_end != ''">
			AND a.bar_code &gt; #{bar_code,jdbcType=VARCHAR}
			AND a.bar_code &lt;= #{bar_code_end,jdbcType=VARCHAR}
		</if>
		group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id,
		e.inv_no, e.inv_code, e.inv_name,
		e.spell_code, e.alias, e.wbx_code, a.batch_no, a.bar_code, a.price, a.sale_price,
		e.sell_price,
		msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
		e.inv_model,
		f.mat_type_name, g.fac_name, h.unit_name,a.location_id, j.sup_id, j.sup_no,
		j.sup_code, j.sup_name
		),
		out_temp as(
		select inv_id, batch_no, bar_code, price, location_id, sum(amount) as amount
		from v_mat_affi_stock_imme
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND store_id = #{store_id,jdbcType=INTEGER}
		<if test="bar_code_end == null or bar_code_end == ''">
			AND bar_code = #{bar_code,jdbcType=VARCHAR}
		</if>
		<if test="bar_code_end != null and bar_code_end != ''">
			AND bar_code &gt; #{bar_code,jdbcType=VARCHAR}
			AND bar_code &lt;= #{bar_code_end,jdbcType=VARCHAR}
		</if>
		group by inv_id, batch_no, bar_code, price, location_id
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.bid_code,
		a.inv_id,  <!-- 材料ID -->
		a.inv_no,  <!-- 材料变更号 -->
		a.inv_code,  <!-- 材料编码 -->
		a.inv_name,  <!-- 材料名称 -->
		a.inv_model,  <!-- 规格型号 -->
		a.unit_name,  <!-- 计量单位 -->
		a.mat_type_name,  <!-- 材料类别名称 -->
		a.fac_name,  <!-- 生成产商名称 -->
		a.batch_no,  <!-- 批号 -->
		a.bar_code,  <!-- 条形码 -->
		a.left_amount as cur_amount,  <!-- 当前库存数量 -->
		a.left_money as cur_money,  <!-- 当前库存金额 -->
		nvl(a.left_amount, 0) - nvl(b.amount, 0) as amount,  <!-- 数量 -->
		a.price,  <!-- 单价 -->
		a.price * (nvl(a.left_amount, 0) - nvl(b.amount, 0)) as amount_money,  <!-- 
			金额 -->
		a.sale_price,  <!-- 批发单价 -->
		a.sale_price * (nvl(a.left_amount, 0) - nvl(b.amount, 0)) as
		sale_money,  <!-- 批发金额 -->
		a.sell_price,  <!-- 零售单价 -->
		a.sell_price * (nvl(a.left_amount, 0) - nvl(b.amount, 0)) as
		sell_money,  <!-- 零售金额 -->
		a.location_new_id,  <!-- 货位ID -->
		a.location_new_code,  <!-- 货位编码 -->
		a.location_new_name,  <!-- 货位名称 -->
		a.inva_date,  <!-- 有效期 -->
		a.disinfect_date,  <!-- 灭菌期 -->
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		a.sup_id, a.sup_no, a.sup_code, a.sup_name
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id
		and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price
		and a.location_id = b.location_id
		where nvl(a.left_amount, 0) -
		nvl(b.amount, 0) > 0
		order by a.inv_code, a.batch_no, a.inva_date,
		a.bar_code
	</select>


	<!-- 材料退货查询列表 -->
	<select id="queryMatStockInvListBackNew" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		<!-- 查询入库供应商不一致，但是材料和批号一致的也可以退货 -->
		with sup_inv_temp as
		(
		select distinct a.store_id,b.inv_id,b.batch_no,a.sup_id from mat_in_main a
		left join mat_in_detail b on a.in_id=b.in_id
		<where>
			<if test="group_id !=null and group_id !='' ">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id !=null and store_id !='' ">
				and a.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="sup_id !=null and sup_id !='' ">
				AND a.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			and a.state=3
			and a.bus_type_code in ('1','2','16','18','47','22','12','48')
		</where>
		)
		, inv_temp as (
		select a.group_id, a.hos_id, a.copy_code, e.bid_code, sit.inv_id , e.inv_no, e.inv_code, e.inv_name, e.inv_model, h.unit_name
			, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code, sit.batch_no,a.batch_sn
			, a.bar_code, nvl(a.out_amount, 0) as out_amount, nvl(a.left_amount, 0) as left_amount,
			nvl(a.left_money, 0) as left_money, a.price, nvl(a.sale_price, 0) as sale_price,
			nvl(e.sell_price, 0) as sell_price, msi.location_id location_new_id, b.location_code location_new_code , b.location_name location_new_name
			, cc.inva_date, cc.disinfect_date, e.alias, e.alias_spell, a.location_id,a.sup_id
		from  sup_inv_temp sit 
		left join mat_fifo_balance a on sit.store_id=a.store_id 
			and sit.inv_id=a.inv_id
			and sit.batch_no=a.batch_no
			   and sit.sup_id=a.sup_id
		left join mat_store_inv msi on a.group_id=msi.group_id and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
			and a.inv_id = msi.inv_id and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict b on a.group_id = b.group_id and msi.hos_id = b.hos_id and msi.copy_code = b.copy_code
			and msi.location_id = b.location_id and b.is_stop = 0
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               and  b.group_id = #{group_id,jdbcType=INTEGER}
           AND b.hos_id = #{hos_id,jdbcType=INTEGER}
           AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
		<!-- left join mat_batch_validity c on a.group_id = c.group_id and a.hos_id =
		c.hos_id and a.copy_code = c.copy_code
		and a.inv_id = c.inv_id and a.batch_no = c.batch_no
		left join mat_batch_disinfect d on a.group_id = d.group_id and a.hos_id =
		d.hos_id and a.copy_code = d.copy_code
		and a.inv_id = d.inv_id and a.batch_no = d.batch_no -->
		left join mat_inv_dict e on a.group_id = e.group_id and a.hos_id = e.hos_id and a.copy_code = e.copy_code
			and a.inv_id = e.inv_id and e.is_stop = 0
		left join mat_type_dict f on a.group_id = f.group_id and a.hos_id = f.hos_id and a.copy_code = f.copy_code
			and e.mat_type_id = f.mat_type_id and f.is_stop = 0
		left join hos_fac_dict g on a.group_id = g.group_id and a.hos_id = g.hos_id and e.fac_id = g.fac_id and e.fac_no = g.fac_no
		left join hos_unit h on a.group_id = h.group_id and a.hos_id = h.hos_id and e.unit_code = h.unit_code and h.is_stop = 0
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER} 
		and <![CDATA[ nvl(a.left_amount, 0) >0 ]]>
		
		), out_temp as (
		select inv_id, batch_no, bar_code, price, location_id,batch_sn, sum(amount)
		as amount
		from (
		select b.inv_id, b.batch_no, b.bar_code, b.price,
		b.location_id,b.batch_sn,sum(nvl(b.amount, 0)) as amount
		from mat_out_main a
		left join mat_out_detail b on a.group_id = b.group_id and a.hos_id =
		b.hos_id and a.copy_code = b.copy_code and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
							<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price,
		b.location_id,b.batch_sn
		union all
		select b.inv_id, b.batch_no, b.bar_code, b.price, b.location_id,b.batch_sn,
		-1 * sum(nvl(b.amount, 0)) as amount
		from mat_in_main a
		left join mat_in_detail b on a.group_id = b.group_id and a.hos_id =
		b.hos_id and a.copy_code = b.copy_code and a.in_id = b.in_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND a.bus_type_code in (10,12,16,22)
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
							<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		group by b.inv_id, b.batch_no, b.bar_code, b.price,
		b.location_id,b.batch_sn
		)
		group by inv_id, batch_no, bar_code, price, location_id,batch_sn
		),inv_cert_tmp as (
		select a.inv_id, a.group_id, a.hos_id, a.copy_code, min(a.cert_id) as
		cert_id
		from mat_inv_cert_rela a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		and a.hos_id = #{hos_id,jdbcType=INTEGER}
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		group by a.inv_id, a.group_id, a.hos_id, a.copy_code
		)

		select group_id, hos_id, copy_code, bid_code, inv_id , inv_no, inv_code,
		inv_name, inv_model, unit_name
		, mat_type_name, fac_name, batch_no, bar_code,price, sale_price,
		sell_price
		, location_new_id, location_new_code, location_new_name, inva_date,
		disinfect_date, cert_id, cert_code
		, sum(out_amount) out_amount, sum(cur_amount) cur_amount,
		sum(cur_money) cur_money,sum(imme_amount) imme_amount,sup_id,sup_name,sup_code
		from (
		select a.group_id, a.hos_id, a.copy_code, a.bid_code, a.inv_id, a.inv_no,
		a.inv_code, a.inv_name, a.inv_model, a.unit_name
		, a.mat_type_name, a.fac_name, a.batch_no, a.bar_code, a.out_amount as
		out_amount
		, a.left_amount as cur_amount, a.left_money as cur_money, a.price,
		a.sale_price, a.sell_price
		, a.location_new_id, a.location_new_code, a.location_new_name,
		a.inva_date, a.disinfect_date
		, nvl(a.left_amount, 0) - nvl(b.amount, 0) as imme_amount, mic.cert_id,
		mic.cert_code,dd.sup_code,dd.sup_id,dd.sup_name
		from inv_temp a
		left join out_temp b on a.inv_id = b.inv_id and a.batch_no = b.batch_no
		and a.bar_code = b.bar_code
		and a.price = b.price and a.location_id = b.location_id and
		a.batch_sn=b.batch_sn
		left join inv_cert_tmp ict on ict.group_id = a.group_id and ict.hos_id =
		a.hos_id and ict.copy_code = a.copy_code
		and ict.inv_id = a.inv_id
		left join mat_inv_cert mic on mic.group_id = ict.group_id and mic.hos_id =
		ict.hos_id and mic.copy_code = ict.copy_code
		and mic.cert_id = ict.cert_id and mic.cert_state = 1
		   left join hos_sup_dict dd on
      a.group_id=dd.group_id
      and a.hos_id=dd.hos_id 
      and a.sup_id=dd.sup_id
            and dd.is_stop=0
		<where>
			<if test="bus_type_code == null ">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
			</if>
			<if test="bus_type_code != null ">
				<if test="bus_type_code == '21'">
					and a.out_amount > 0
				</if>
				<if
					test="bus_type_code == '11' or bus_type_code == '17' or bus_type_code == '19' or bus_type_code == '23'">
					and ((nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0) or (a.out_amount >
					0))
				</if>
				<if
					test="bus_type_code != '21' and bus_type_code != '11' and bus_type_code != '17' and bus_type_code != '19' and bus_type_code != '23'">
					and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
				</if>
			</if>

			<!-- <if test="bus_type_code == null or bus_type_code != '21'"> and nvl(a.left_amount, 
				0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
				== '21'"> and a.out_amount > 0 </if> -->
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%' or
				a.bid_code like '%${key}%' or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>
			<if test="inv_id != null and inv_id != '' ">
				and a.inv_id = #{inv_id}
			</if>
			<if test="invMsg!=null and invMsg!=''">
				<foreach collection="invMsg" item="invObj">
				  and a.inv_id || ',' || a.batch_no || ',' || a.bar_code|| ',' || a.inva_date || ',' || a.disinfect_date || ',' || a.price != #{invObj}
				</foreach>
			</if>
		</where>
		order by a.inv_code, a.batch_no, a.inva_date
		)
		group by group_id,
		hos_id, copy_code, bid_code, inv_id , inv_no, inv_code, inv_name,
		inv_model, unit_name
		, mat_type_name, fac_name, batch_no, bar_code,price, sale_price,
		sell_price
		, location_new_id, location_new_code, location_new_name, inva_date,
		disinfect_date, cert_id, cert_code,sup_id,sup_name,sup_code
	</select>

	<!-- 普通材料退库查询科室已领用材料列表 -->
	<select id="queryMatDeptStockInvList" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with dept_inv as(<!-- 科室已领用数量 -->
		SELECT a.group_id, a.hos_id, a.copy_code, a.store_id, a.dept_id,
		b.inv_id, b.price,
		b.sale_price, b.batch_no, b.bar_code, b.location_id, sum(b.amount) amount,
		sum(b.amount_money) amount_money, sum(b.sale_money) sale_money
		FROM mat_out_main a
		LEFT JOIN mat_out_detail b
		ON a.group_id = b.group_id AND a.hos_id = b.hos_id
		AND a.copy_code = b.copy_code AND a.out_id = b.out_id
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		GROUP BY a.group_id, a.hos_id, a.copy_code, a.store_id, a.dept_id,
		b.inv_id, b.price, b.sale_price, b.batch_no, b.bar_code, b.location_id
		), inv_cert_tmp as (
		select a.inv_id, a.group_id, a.hos_id, a.copy_code, min(a.cert_id) as
		cert_id
		from mat_inv_cert_rela a
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		group by a.inv_id, a.group_id, a.hos_id, a.copy_code
		)
		SELECT a.group_id,
		a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no, e.inv_code,
		e.inv_name,
		e.inv_model, h.unit_name, f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code,
		a.batch_no,
		a.bar_code, a.price, nvl(a.sale_price, 0) as sale_price, nvl(a.amount, 0) as
		out_amount,
		nvl(a.amount, 0) as left_amount, nvl(a.amount_money, 0) as left_money,
		nvl(e.sell_price, 0) as sell_price,
		msi.location_id location_new_id, b.location_code location_new_code, b.location_name
		location_new_name,
		c.inva_date, d.disinfect_date, e.alias, a.location_id, mic.cert_id, mic.cert_code
		FROM dept_inv a
		LEFT JOIN mat_store_inv msi
		ON a.group_id=msi.group_id AND a.hos_id = msi.hos_id
		AND a.copy_code = msi.copy_code AND a.inv_id = msi.inv_id
		AND msi.store_id = #{store_id,jdbcType=INTEGER}
		LEFT JOIN
		mat_location_dict b
		ON a.group_id = b.group_id AND msi.hos_id = b.hos_id
		AND msi.copy_code = b.copy_code AND msi.location_id = b.location_id
		AND b.is_stop = 0
		LEFT JOIN mat_batch_validity c
		ON a.group_id = c.group_id AND a.hos_id = c.hos_id
		AND a.copy_code = c.copy_code AND a.inv_id = c.inv_id
		AND a.batch_no = c.batch_no
		LEFT JOIN mat_batch_disinfect d
		ON a.group_id = d.group_id AND a.hos_id = d.hos_id
		AND a.copy_code = d.copy_code
		AND a.inv_id = d.inv_id AND a.batch_no = d.batch_no
		LEFT JOIN mat_inv_dict e
		ON a.group_id = e.group_id AND a.hos_id = e.hos_id
		AND a.copy_code = e.copy_code AND a.inv_id = e.inv_id
		AND e.is_stop = 0
		LEFT JOIN mat_type_dict f
		ON a.group_id = f.group_id AND a.hos_id = f.hos_id
		AND a.copy_code = f.copy_code AND e.mat_type_id = f.mat_type_id
		AND f.is_stop = 0
		LEFT JOIN hos_fac_dict g
		ON a.group_id = g.group_id AND a.hos_id = g.hos_id
		AND e.fac_id = g.fac_id AND e.fac_no = g.fac_no
		LEFT JOIN hos_unit h
		ON a.group_id = h.group_id AND a.hos_id = h.hos_id
		AND e.unit_code = h.unit_code
		LEFT JOIN inv_cert_tmp ict
		ON ict.group_id = a.group_id AND ict.hos_id = a.hos_id
		AND ict.copy_code = a.copy_code AND ict.inv_id = a.inv_id
		LEFT JOIN mat_inv_cert mic
		ON mic.group_id = ict.group_id AND mic.hos_id = ict.hos_id
		AND mic.copy_code = ict.copy_code AND mic.cert_id = ict.cert_id
		AND mic.cert_state = 1
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		<if test="sup_id !=null and sup_id!=''">
			AND a.sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="bus_type_code == null ">
			and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
		</if>
		<if test="bus_type_code != null ">
			<if test="bus_type_code == '21'">
				and a.out_amount > 0
			</if>
			<if
				test="bus_type_code == '11' or bus_type_code == '17' or bus_type_code == '19' or bus_type_code == '23'">
				and ((nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0) or (a.out_amount >
				0))
			</if>
			<if
				test="bus_type_code != '21' and bus_type_code != '11' and bus_type_code != '17' and bus_type_code != '19' and bus_type_code != '23'">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) > 0
			</if>
		</if>
		<!-- <if test="bus_type_code == null or bus_type_code != '21'"> AND nvl(a.left_amount, 
			0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
			== '21'"> AND a.out_amount > 0 </if> -->
		<if test="key != null and key != ''">
			AND (
			e.inv_code like '%${key}%' or
			e.inv_name like '%${key}%' or
			e.bid_code like '%${key}%' or
			e.spell_code like '%${key}%' or
			e.wbx_code like '%${key}%' or
			e.alias like '%${key}%' or
			e.alias_spell like '%${key}%'
			)
		</if>
	</select>

	<!-- 已结账期间列表（含未结账的本期间） -->
	<select id="getFinishedYearMonthList" parameterType="java.util.Map"
		resultType="java.util.Map">
		<!-- 已结账期间 -->
		SELECT acc_year, acc_month, begin_date, end_date
		FROM acc_year_month
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND nvl(mat_flag, 0) = 1
		AND acc_year||acc_month >= (
		SELECT start_year||start_month
		FROM sys_mod_start
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND mod_code = '04'
		)
		UNION
		<!-- 当前期间 -->
		SELECT acc_year,acc_month,begin_date,end_date
		FROM (
		SELECT acc_year,acc_month,begin_date,end_date
		FROM acc_year_month
		WHERE group_id=#{group_id} AND hos_id=#{hos_id}
		AND copy_code=#{copy_code} AND nvl(mat_flag, 0) = 0
		AND acc_year||acc_month >= (
		SELECT start_year||start_month
		FROM sys_mod_start
		WHERE group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND mod_code = '04'
		)
		) RS
		WHERE acc_year||acc_month =(
		SELECT MIN(acc_year||acc_month)
		FROM acc_year_month
		WHERE group_id=#{group_id} AND hos_id=#{hos_id}
		AND copy_code=#{copy_code} AND nvl(mat_flag, 0) = 0
		AND acc_year||acc_month >= (
		SELECT start_year||start_month
		FROM sys_mod_start
		WHERE group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND mod_code = '04'
		)
		)
		ORDER BY acc_year, acc_month
	</select>

	<!-- 物流子系统是否已启用 -->
	<select id="existsMatModStart" parameterType="java.util.Map"
		resultType="Integer">
		SELECT count(*)
		FROM sys_mod_start
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND mod_code = #{mod_code,jdbcType=VARCHAR}
	</select>

	<!-- 本期间物流子系统是否已启用 -->
	<select id="existsMatModStartByYearMonth" parameterType="java.util.Map"
		resultType="Integer">
		SELECT count(*)
		FROM sys_mod_start
		WHERE group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND mod_code = #{mod_code,jdbcType=VARCHAR}
		AND start_year || start_month &lt;= #{year,jdbcType=VARCHAR} ||
		#{month,jdbcType=VARCHAR}
	</select>

	<!-- 获取参数date日期所在的会计期间返回年月(201701) -->
	<select id="queryAccYearMonthByDate" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT acc_year || acc_month 
		FROM acc_year_month 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND to_date(#{date},'yyyy-MM-dd') between begin_date and end_date
	</select>
	
	<!-- 公用判断物流库房本期间是否已启用 -->
	<select id="existsMatStoreIsStart" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM mat_store_start
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND start_year || start_month &lt;= #{year,jdbcType=VARCHAR} || #{month,jdbcType=VARCHAR}
	</select>
	
	<!-- 公用返回本期间未启用的库房 -->
	<select id="queryMatStoreIsStart" resultType="String"
		parameterType="java.util.Map">
		SELECT store_code || ' ' || store_name 
		FROM hos_store_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND is_stop = 0
			<!-- 库房启用日期为空或库房启用期间大于判断的期间 -->
			AND not exists( 
				SELECT 1 FROM mat_store_start 
				WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER} 
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND store_id = #{store_id,jdbcType=INTEGER} 
					AND start_year || start_month &lt;= #{year,jdbcType=VARCHAR} || #{month,jdbcType=VARCHAR}
			)
	</select>
	
	<!-- 公用判断物流库房本期间是否已结账 -->
	<select id="existsMatStoreIsAccount" resultType="Integer"
		parameterType="java.util.Map">
		SELECT count(*)
		FROM mat_termend_store
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND is_account = 1
	</select>
	
	<!-- 公用返回本期间已结账的库房 -->
	<select id="queryMatStoreIsAccount" resultType="String"
		parameterType="java.util.Map">
		SELECT b.store_code || ' ' || b.store_name 
		FROM mat_termend_store a 
		LEFT JOIN hos_store_dict b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.store_id = b.store_id 
			AND b.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.year = #{year,jdbcType=VARCHAR}
			AND a.month = #{month,jdbcType=VARCHAR}
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			AND a.is_account = 1
	</select>
	
	<!-- 业务数据选择物资材料所用 代销科室退库  -->
	<select id="queryMatAffiOutBackInvList" parameterType="java.util.Map" resultType="java.util.TreeMap">
		 
		  select    mid.inv_code,
		             mid.inv_name,
		             mid.alias,
		             mtd.mat_type_name,
		             mid.inv_model,
		             hu.unit_name,
		             mid.inv_structure,
		             maod.price,
		             sum(maod.amount) as cur_amount,
		             hfd.fac_name, 
		             maod.batch_no,
		             maod.bar_code,
		             mid.is_charge,
		             maod.inv_id,
		             maod.inv_no,
		             mid.bid_code,
		             mic.cert_code,
		             mld.location_name, nvl(msi.location_id,0) as location_id,
		             maod.inva_date,maod.disinfect_date
		        from mat_affi_out mao
		        left join mat_affi_out_detail maod
		          on mao.group_id = maod.group_id
		         and mao.hos_id = maod.hos_id
		         and mao.copy_code = maod.copy_code
		         and mao.out_id = maod.out_id
		        left join mat_inv_dict mid
		          on maod.group_id = mid.group_id
		         and maod.hos_id = mid.hos_id
		         and maod.copy_code = mid.copy_code
		         and maod.inv_id = mid.inv_id
		         and mid.is_stop = 0
		        left join mat_type_dict mtd
		          on mid.group_id = mtd.group_id
		         and mid.hos_id = mtd.hos_id
		         and mid.copy_code = mtd.copy_code
		         and mid.mat_type_id = mtd.mat_type_id
		         and mtd.is_stop = 0
		        left join hos_unit hu
		          on mid.group_id = hu.group_id
		         and mid.hos_id = hu.hos_id
		         and mid.unit_code = hu.unit_code
		        left join hos_fac_dict hfd
		          on mid.group_id = hfd.group_id
		         and mid.hos_id = hfd.hos_id
		         and mid.fac_id = hfd.fac_id
		         and hfd.is_stop = 0
		        left join mat_inv_cert_rela ict
		          on maod.group_id = ict.group_id
		         and maod.hos_id = ict.hos_id
		         and maod.copy_code = ict.copy_code
		         and maod.inv_id = ict.inv_id
		        left join mat_inv_cert mic
		          on mic.group_id = ict.group_id
		         and mic.hos_id = ict.hos_id
		         and mic.copy_code = ict.copy_code
		         and mic.cert_id = ict.cert_id
		         and mic.cert_state = 1
		        left join mat_store_inv msi
		          on mao.group_id = msi.group_id
		         and mao.hos_id = msi.hos_id
		         and mao.copy_code = msi.copy_code
		         and mao.store_id = msi.store_id
		         and maod.inv_id = msi.inv_id
		        left join mat_location_dict mld
		          on msi.group_id = mld.group_id
		         and msi.hos_id = mld.hos_id
		         and msi.copy_code = mld.copy_code
		         and msi.location_id = mld.location_id 			
		 where mao.group_id = #{group_id}
		   and mao.hos_id = #{hos_id}
		   and mao.copy_code = #{copy_code}
		   and mao.store_id = #{store_id}
		   and mao.dept_id = #{dept_id}
		   and mao.state = 3
		   <if test="key != null and key != ''">
				and ( 
				mid.inv_code like '%${key}%' or
				mid.inv_name like '%${key}%'
				or
				mid.bid_code like '%${key}%' or
				mid.spell_code like '%${key}%' or
				mid.wbx_code like '%${key}%' or
				mid.alias like '%${key}%' or
				mid.alias_spell like '%${key}%'
				)
			</if>
			 group by mid.inv_code,
			          mid.inv_name,
			          mid.alias,
			          mtd.mat_type_name,
			          mid.inv_model,
			          hu.unit_name,
			          mid.inv_structure,
			          maod.price,
			          hfd.fac_name,
			          maod.batch_no,
			          maod.bar_code,
			          mid.is_charge,
			          maod.inv_id,
			          maod.inv_no,
			          mid.bid_code,
			          mic.cert_code,
			          mld.location_name ,msi.location_id,maod.inva_date,maod.disinfect_date
		
	 </select>
	 
	 <select id="queryAccYearAndMonth" parameterType="java.util.Map" resultType="java.util.TreeMap">
	 	select acc_year as year,acc_month as month,begin_date,end_date
	 	from acc_year_month
	 	<where>
	 		<if test="group_id !=null and group_id !='' ">
	 			and group_id = #{group_id,jdbcType=INTEGER}
	 		</if>
	 		<if test="hos_id !=null and hos_id !='' ">
	 			and hos_id = #{hos_id,jdbcType=INTEGER}
	 		</if>
	 		<if test="copy_code !=null and copy_code !='' ">
	 			and copy_code = #{copy_code,jdbcType=VARCHAR}
	 		</if>
			<if test="dateString !=null">
	 			<![CDATA[ 
	 				and begin_date <= to_date(#{dateString},'yyyy/MM/dd') 
	 				and end_date >= to_date(#{dateString},'yyyy/MM/dd')
	 			]]>
	 		</if>
	 	</where>
	 </select>
	 
	 <select id="getInvaTimeByBatchNo" parameterType="map" resultMap="matInv">
	 	select max(inva_date) as inva_date from mat_in_detail
	 	<where>
	 		<if test="group_id!=null and group_id!=''">
				and group_id=#{group_id,jdbcType=VARCHAR}
	 		</if>
	 		<if test="hos_id!=null and hos_id!=''">
				and hos_id=#{hos_id,jdbcType=VARCHAR}
	 		</if>
	 		<if test="copy_code!=null and copy_code!=''">
				and copy_code=#{copy_code,jdbcType=VARCHAR}
	 		</if>
	 		<if test="inv_id!=null and inv_id!=''">
				and inv_id=#{inv_id,jdbcType=VARCHAR}
	 		</if>
	 		<if test="batch_no!=null and batch_no!=''">
				and batch_no=#{batch_no,jdbcType=VARCHAR}
	 		</if>
	 	</where>
	 </select>
	
	<!-- 批量判断是否存在不等于该状态的单据 --> 
	<select id="existsStateBatch" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM ${table} 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND ${t_id} in (${t_id_value})
			AND ${check_state} &lt;&gt; #{check_state_value,jdbcType=INTEGER}
	</select>

	<!-- 普通材料获取库存 --> 
	<select id="getInvStockByInvMsg" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT nvl(SUM(mfb.left_amount),0) || '@' || nvl(SUM(mfb.left_amount - nvl(vmsi.amount, 0)),0)
		FROM mat_fifo_balance mfb 
		LEFT JOIN v_mat_stock_imme vmsi 
			ON mfb.group_id = vmsi.group_id 
			AND mfb.hos_id = vmsi.hos_id 
			AND mfb.copy_code = vmsi.copy_code
			AND mfb.store_id = vmsi.store_id 
			AND mfb.inv_id = vmsi.inv_id 
			AND mfb.price = vmsi.price 
			AND mfb.batch_no = vmsi.batch_no 
			AND mfb.batch_sn = vmsi.batch_sn 
			AND mfb.bar_code = vmsi.bar_code 
			AND mfb.location_id = vmsi.location_id 
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               <if test="in_id != null and in_id != ''">
			      AND b.in_id != #{in_id,jdbcType=BIGINT} 
			  </if>
               and  b.group_id = #{group_id,jdbcType=INTEGER}
		       AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		       AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on mfb.group_id=cc.group_id and mfb.hos_id=cc.hos_id and mfb.copy_code=cc.copy_code 
             and mfb.inv_id=cc.inv_id and mfb.batch_no=cc.batch_no and mfb.batch_sn=cc.batch_sn 
		WHERE mfb.group_id = #{group_id,jdbcType=BIGINT}
			AND mfb.hos_id = #{hos_id,jdbcType=BIGINT}
			AND mfb.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mfb.store_id = #{store_id,jdbcType=BIGINT}
			AND mfb.inv_id = #{inv_id,jdbcType=BIGINT}
			<if test="price != null and price != ''">
			AND mfb.price = #{price,jdbcType=NUMERIC} 
			</if>
			<if test="batch_no != null and batch_no != ''">
			AND mfb.batch_no = #{batch_no,jdbcType=VARCHAR} 
			</if>
			<if test="batch_sn != null and batch_sn != ''">
			AND mfb.batch_sn = #{batch_sn,jdbcType=BIGINT} 
			</if>
			<if test="bar_code != null and bar_code != ''">
			AND mfb.bar_code = #{bar_code,jdbcType=VARCHAR} 
			</if>
			<if test="location_id != null and location_id != ''">
			AND mfb.location_id = #{location_id,jdbcType=BIGINT} 
			</if>
			<if test="inva_date != null and inva_date != ''">
			AND cc.inva_date = #{inva_date,jdbcType=DATE} 
			</if>
			<if test="disinfect_date != null and disinfect_date != ''">
			AND cc.disinfect_date = #{disinfect_date,jdbcType=DATE} 
			</if>
			
			
	</select>

	<!-- 代销材料获取库存 --> 
	<select id="getAffiInvStockByInvMsg" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT nvl(SUM(maf.left_amount),0) || '@' || nvl(SUM(maf.left_amount - nvl(vmasi.amount, 0)),0)
		FROM mat_affi_fifo maf 
		LEFT JOIN v_mat_affi_stock_imme vmasi 
			ON maf.group_id = vmasi.group_id 
			AND maf.hos_id = vmasi.hos_id 
			AND maf.copy_code = vmasi.copy_code
			AND maf.store_id = vmasi.store_id 
			AND maf.inv_id = vmasi.inv_id 
			AND maf.price = vmasi.price 
			AND maf.batch_no = vmasi.batch_no 
			AND maf.batch_sn = vmasi.batch_sn 
			AND maf.bar_code = vmasi.bar_code 
			AND maf.location_id = vmasi.location_id
		left join mat_affi_in_detail cc on  maf.group_id=cc.group_id and maf.hos_id=cc.hos_id and maf.copy_code=cc.copy_code
			and maf.inv_id=cc.inv_id and maf.batch_no=cc.batch_no and maf.batch_sn=cc.batch_sn and maf.bar_code=cc.bar_code
			and maf.price=cc.price
		left join mat_affi_in dd on cc.group_id=dd.group_id and cc.hos_id=dd.hos_id 
     		and cc.copy_code=dd.copy_code and cc.in_id=dd.in_id
		WHERE maf.group_id = #{group_id,jdbcType=BIGINT}
			AND maf.hos_id = #{hos_id,jdbcType=BIGINT}
			AND maf.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND maf.store_id = #{store_id,jdbcType=BIGINT}
			AND maf.inv_id = #{inv_id,jdbcType=BIGINT}
			<if test="price != null and price != ''">
			AND maf.price = #{price,jdbcType=NUMERIC} 
			</if>
			<if test="batch_no != null and batch_no != ''">
			AND maf.batch_no = #{batch_no,jdbcType=VARCHAR} 
			</if>
			<if test="batch_sn != null and batch_sn != ''">
			AND maf.batch_sn = #{batch_sn,jdbcType=BIGINT} 
			</if>
			<if test="bar_code != null and bar_code != ''">
			AND maf.bar_code = #{bar_code,jdbcType=VARCHAR} 
			</if>
			<if test="location_id != null and location_id != ''">
			AND maf.location_id = #{location_id,jdbcType=BIGINT} 
			</if>
			<if test="inva_date != null and inva_date != ''">
			AND cc.inva_date = #{inva_date,jdbcType=DATE} 
			</if>
			<if test="disinfect_date != null and disinfect_date != ''">
			AND cc.disinfect_date = #{disinfect_date,jdbcType=DATE} 
			</if>
			<if test="in_id != null and in_id != ''">
			AND cc.in_id != #{in_id,jdbcType=BIGINT} 
			</if>
			and dd.bus_type_code = 27
	</select>
	
	<!-- 科室配套表筛选材料 -->
	<select id="queryMatInvListByMatch" parameterType="java.util.Map" resultType="java.util.Map">
		WITH inv_tmp AS(
			SELECT
				group_id, hos_id, copy_code, inv_id, inv_no, inv_code, bid_code,inv_name,
				mat_type_id, mat_type_no, inv_model, unit_code,
				is_com, is_highvalue, is_batch, is_bar, is_per_bar, is_quality,
				is_single_ven, is_disinfect, fac_id, plan_price, sell_price, wbx_code,
				spell_code, is_zero_store, fac_no,use_state,source_plan
			FROM mat_inv_dict
			WHERE group_id =#{group_id,jdbcType=INTEGER}
				and hos_id =#{hos_id,jdbcType=INTEGER}
				and copy_code =#{copy_code,jdbcType=VARCHAR}
				and use_state = 1
				and is_stop =0
				<if test="is_com != null and is_com != ''">
					and is_com = #{is_com,jdbcType=INTEGER}
				</if>
				<if test="key != null and key != ''">
					and ( inv_code like '%${key}%' or
						inv_name like '%${key}%' or
						bid_code like '%${key}%' or
						spell_code like '%${key}%' or
						wbx_code like '%${key}%' or
						alias like '%${key}%' or
						alias_spell like '%${key}%'
						)
				</if>
				<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
				<if test="cur_date != null and cur_date != '' ">
					and inv_id not in (
						select inv_id from mat_inv_dict
						where group_id =#{group_id,jdbcType=INTEGER}
							and hos_id =#{hos_id,jdbcType=INTEGER}
							and copy_code =#{copy_code,jdbcType=VARCHAR}
							and use_state = 1
							and is_stop = 0
							AND edate is not null
							AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
						)
				</if>
			), store_inv_tmp AS(
				SELECT inv_id FROM mat_store_inv
				WHERE group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					<if test="store_id != null and store_id != ''">
						and store_id = #{store_id,jdbcType=INTEGER}
					</if>
			), inv_cert_tmp as(
				select inv_id, group_id, hos_id, copy_code,max(cert_id) cert_id
				from mat_inv_cert_rela
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					group by inv_id, group_id, hos_id, copy_code
			)
		SELECT a.inv_id, a.inv_no, a.inv_code,a.bid_code, a.inv_name, a.mat_type_id,
			b.mat_type_name, a.inv_model, a.unit_code, c.unit_name,
			a.is_com, a.is_highvalue, a.is_batch, a.is_bar, a.is_per_bar, a.is_quality,
			a.is_single_ven, a.is_disinfect, f.pack_code,
			g.pack_name pack_name, f.map_amount num_exchange, a.fac_id, e.fac_no, e.fac_name,
			a.plan_price, a.sell_price, a.wbx_code,a.spell_code,
			case when a.is_com = 0 then nvl(mih.cur_amount, 0) else nvl(maih.cur_amount, 0) end cur_amount, 
			a.plan_price as price, msi.location_id, mld.location_code location_new_code, mld.location_name location_new_name
			,mic.cert_id,mic.cert_code,hs.sup_id,hs.sup_no,hs.sup_code,hs.sup_name,mi.inv_structure
		from inv_tmp a
		left join mat_type_dict b on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.mat_type_id = b.mat_type_id
			and a.mat_type_no = b.mat_type_no
		left join hos_unit c on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
			and c.is_stop = 0
		left join hos_fac_dict e on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
			and a.fac_no = e.fac_no
		left join mat_inv_unit_map f on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.copy_code = f.copy_code
			and a.inv_id = f.inv_id
		left join hos_package g on f.group_id = g.group_id
			and f.hos_id = g.hos_id
			and f.pack_code = g.pack_code
		left join mat_inv mi on a.group_id = mi.group_id
			and a.hos_id = mi.hos_id 
			and a.copy_code = mi.copy_code
			and a.inv_id = mi.inv_id
		left join mat_inv_hold mih on a.group_id = mih.group_id
			and a.hos_id = mih.hos_id
			and a.copy_code = mih.copy_code
			and mih.store_id = #{store_id,jdbcType=INTEGER}
			and a.inv_id = mih.inv_id
		left join mat_affi_inv_hold maih on a.group_id = maih.group_id
			and a.hos_id = maih.hos_id
			and a.copy_code = maih.copy_code
			and maih.store_id = #{store_id,jdbcType=INTEGER}
			and a.inv_id = maih.inv_id
		left join mat_store_inv msi on a.group_id = msi.group_id
			and a.hos_id = msi.hos_id
			and a.copy_code = msi.copy_code
			and a.inv_id = msi.inv_id
			and msi.store_id =#{store_id,jdbcType=INTEGER}
		left join mat_location_dict mld on msi.group_id = mld.group_id
			and msi.hos_id = mld.hos_id
			and msi.copy_code = mld.copy_code
			and msi.location_id = mld.location_id
			and msi.store_id = mld.store_id
			and mld.is_stop = 0
		left join inv_cert_tmp ict on ict.group_id = a.group_id
			and ict.hos_id = a.hos_id
			and ict.copy_code = a.copy_code
			and ict.inv_id = a.inv_id
		left join mat_inv_cert mic on mic.group_id = ict.group_id
			and mic.hos_id = ict.hos_id
			and mic.copy_code = ict.copy_code
			and mic.cert_id = ict.cert_id
			and mic.cert_state = 1
		left join mat_inv_sup mis on a.group_id=mis.group_id and a.hos_id=mis.hos_id and a.copy_code=mis.copy_code
         	and a.inv_id=mis.inv_id and mis.is_default = 1
    	left join hos_sup_dict hs on mis.group_id=hs.group_id and mis.hos_id=hs.hos_id and mis.sup_id=hs.sup_id
         	and hs.is_stop = 0 
		<where>
			<if test="sup_id !=null and sup_id !=''">
				and mis.sup_id=#{sup_id,jdbcType=INTEGER}
			</if>
			<if test="inv_ids != null and inv_ids != ''">
				and a.inv_id not in (${inv_ids})
			</if>
			<if test="mat_type_code != null and mat_type_code != ''">
				AND b.mat_type_code like '${mat_type_code}%'
			</if>
				<if test="source_plan != null and source_plan != ''">
				AND a.source_plan =#{source_plan,jdbcType=INTEGER}
			</if>
			<if test="by_is_zero != null and by_is_zero == 1">
				and (case when a.is_com = 0 then nvl(mih.cur_amount, 0) else
				nvl(maih.cur_amount, 0) end &gt; 0 or is_zero_store=1)
			</if>
				<if test="by_is_zero == null or by_is_zero == 0">
				<!-- 页面条件（优先级低于系统参数）过滤无库存 -->
				<if test="is_zero != null and is_zero == 1">
					AND (
						nvl(mih.cur_amount, 0) + nvl(maih.cur_amount, 0) > 0
					)
				</if>
				<if test="is_zero == null or is_zero == 0">
				<!-- 	AND a.use_state = 1  -->
					<!-- 有些材料过期了但是状态没有自动更新，需在这里过滤停用日期小于当前日期的材料 -->
					<if test="cur_date != null and cur_date != '' ">
						AND a.inv_id not in (
							SELECT inv_id
							FROM mat_inv_dict
							WHERE group_id =#{group_id,jdbcType=INTEGER}
								AND hos_id =#{hos_id,jdbcType=INTEGER}
								AND copy_code =#{copy_code,jdbcType=VARCHAR}
								AND is_stop = 0
								AND edate is not null
								AND edate &lt; to_date(#{cur_date,jdbcType=VARCHAR},'yyyy/MM/dd')
						)
					</if>
				</if>
			</if>
			<if test="show_zero == 1">
				and mih.cur_amount &lt;&gt; 0
			</if>
	
			<if test="inv_code != null and inv_code != ''">
				and ( a.inv_code like '%${inv_code}%'
				or upper(a.inv_name) like '%${inv_code}%'
				or upper(a.spell_code) like '%${inv_code}%'
				or upper(a.wbx_code) like '%${inv_code}%'
				or lower(a.spell_code) like '%${inv_code}%'
				or lower(a.wbx_code) like '%${inv_code}%'
				or lower(a.inv_name) like '%${inv_code}%')
			</if>
			<if test="bid_code != null and bid_code != ''">
				and ( a.bid_code like '%${bid_code}%'
				or upper(a.inv_name) like '%${bid_code}%'
				or upper(a.spell_code) like '%${bid_code}%'
				or upper(a.wbx_code) like '%${bid_code}%'
				or lower(a.spell_code) like '%${bid_code}%'
				or lower(a.wbx_code) like '%${bid_code}%'
				or lower(a.inv_name) like '%${bid_code}%')
			</if> 
			<if test="inv_model != null and inv_model != ''">
				and ( a.inv_model like '%${inv_model}%'
				or upper(a.inv_name) like '%${inv_model}%'
				or upper(a.spell_code) like '%${inv_model}%'
				or upper(a.wbx_code) like '%${inv_model}%'
				or lower(a.spell_code) like '%${inv_model}%'
				or lower(a.wbx_code) like '%${inv_model}%'
				or lower(a.inv_name) like '%${inv_model}%')
			</if>
		</where> 
		order by a.inv_code
	</select>
	
	<!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->
	<select id="queryMatFifoByInvList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.group_id, a.hos_id, a.copy_code, a.inv_id, b.inv_no, b.inv_code, b.inv_name, 
			b.inv_model, e.unit_name, c.mat_type_name, d.fac_name, a.batch_sn, a.batch_no, 
			a.bar_code, nvl(a.out_amount, 0) as out_amount, nvl(a.left_amount, 0) as left_amount, 
			nvl(a.price, 0) as price, nvl(a.sale_price, 0) as sale_price, nvl(b.sell_price, 0) as sell_price, 
			nvl(g.location_id, 0) as location_new_id, h.location_code location_new_code, 
			h.location_name location_new_name, f.inva_date, f.disinfect_date, a.location_id, 
			nvl(a.left_amount, 0) - nvl(i.amount, 0) AS imme_amount, 
			<!-- 用于计算各批次、条码总库存 -->
			a.out_amount as all_out_amount, a.left_amount as all_cur_amount, 
			nvl(a.left_amount, 0) - nvl(i.amount, 0) AS all_imme_amount 
		FROM mat_fifo_balance a 
		LEFT JOIN mat_inv_dict b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.inv_id = b.inv_id 
			AND b.is_stop = 0 
		LEFT JOIN mat_type_dict c 
			ON b.group_id = c.group_id 
			AND b.hos_id = c.hos_id 
			AND b.copy_code = c.copy_code 
			AND b.mat_type_id = c.mat_type_id 
		LEFT JOIN hos_fac_dict d 
			ON b.group_id = d.group_id 
			AND b.hos_id = d.hos_id 
			AND b.fac_id = d.fac_id 
			AND d.is_stop = 0 
		LEFT JOIN hos_unit e 
			ON b.group_id = e.group_id 
			AND b.hos_id = e.hos_id 
			AND b.unit_code = e.unit_code 
		LEFT JOIN (
       		SELECT a.group_id, a.hos_id, a.copy_code, a.inv_id, a.batch_no, a.batch_sn, a.bar_code, 
                    max(a.inva_date) AS inva_date, max(a.disinfect_date) AS disinfect_date
               FROM mat_in_detail a
               LEFT JOIN mat_in_main b
				ON a.in_id = b.in_id
			WHERE b.state = 3
				AND  b.group_id = #{group_id,jdbcType=INTEGER}
				AND b.hos_id = #{hos_id,jdbcType=INTEGER}
				AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
			GROUP BY a.group_id, a.hos_id, a.copy_code, a.inv_id, a.batch_no, a.batch_sn, a.bar_code
		) f 
			ON a.group_id = f.group_id 
			AND a.hos_id = f.hos_id 
			AND a.copy_code = f.copy_code 
			AND a.inv_id = f.inv_id 
			AND a.batch_no = f.batch_no 
			AND a.batch_sn = f.batch_sn 
			AND a.bar_code = f.bar_code 
		LEFT JOIN mat_store_inv g 
			ON a.group_id = g.group_id
			AND a.hos_id = g.hos_id
			AND a.copy_code = g.copy_code
			AND a.store_id = g.store_id
			AND a.inv_id = g.inv_id
		LEFT JOIN mat_location_dict h 
			ON g.group_id = h.group_id
			AND g.hos_id = h.hos_id
			AND g.copy_code = h.copy_code
			AND g.location_id = h.location_id
			AND g.store_id = h.store_id
			AND h.is_stop = 0
		LEFT JOIN v_mat_stock_imme i 
			ON a.group_id = i.group_id 
			AND a.hos_id = i.hos_id 
			AND a.copy_code = i.copy_code 
			AND a.store_id = i.store_id 
			AND a.inv_id = i.inv_id 
			AND a.price = i.price 
			AND a.batch_no = i.batch_no 
			AND a.batch_sn = i.batch_sn 
			AND a.bar_code = i.bar_code 
			AND a.location_id = i.location_id 
		WHERE a.group_id = #{group_id,jdbcType=BIGINT}
			AND a.hos_id = #{hos_id,jdbcType=BIGINT}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			<if test="inv_ids != null and inv_ids != ''">
			AND a.inv_id in (${inv_ids})
			</if>
			<if test="flag == 1"> 
			AND nvl(a.left_amount, 0) - nvl(i.amount, 0) &gt; 0
		ORDER BY a.inv_id, nvl(f.inva_date,to_date('1999-01-01','yyyy-MM-dd')) ,a.batch_no, a.batch_sn, a.bar_code
			</if>
			<if test="flag == 0">
			AND a.out_amount &gt; 0
		ORDER BY a.inv_id, a.batch_no desc, f.inva_date desc, a.batch_sn desc, a.bar_code desc  
			</if>
	</select>
	
	<!-- 用于方法hrp.mat.servicesImpl.base.getAffiInvJsonByInvList -->
	<select id="queryMatAffiFifoByInvList" parameterType="java.util.Map" resultType="java.util.TreeMap">
		SELECT a.group_id, a.hos_id, a.copy_code, a.inv_id, b.inv_no, b.inv_code, b.inv_name, 
			b.inv_model, e.unit_name, c.mat_type_name, d.fac_name, a.batch_sn, a.batch_no, 
			a.bar_code, nvl(a.out_amount, 0) as out_amount, nvl(a.left_amount, 0) as left_amount, 
			nvl(a.price, 0) as price, nvl(a.sale_price, 0) as sale_price, nvl(b.sell_price, 0) as sell_price, 
			nvl(g.location_id, 0) as location_new_id, h.location_code location_new_code, 
			h.location_name location_new_name, f.inva_date, f.disinfect_date, a.location_id, 
			nvl(a.left_amount, 0) - nvl(i.amount, 0) AS imme_amount, 
			<!-- 用于计算各批次、条码总库存 -->
			a.out_amount as all_out_amount, a.left_amount as all_cur_amount, 
			nvl(a.left_amount, 0) - nvl(i.amount, 0) AS all_imme_amount 
		FROM mat_affi_fifo a 
		LEFT JOIN mat_inv_dict b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.inv_id = b.inv_id 
			AND b.is_stop = 0 
		LEFT JOIN mat_type_dict c 
			ON b.group_id = c.group_id 
			AND b.hos_id = c.hos_id 
			AND b.copy_code = c.copy_code 
			AND b.mat_type_id = c.mat_type_id 
		LEFT JOIN hos_fac_dict d 
			ON b.group_id = d.group_id 
			AND b.hos_id = d.hos_id 
			AND b.fac_id = d.fac_id 
			AND d.is_stop = 0 
		LEFT JOIN hos_unit e 
			ON b.group_id = e.group_id 
			AND b.hos_id = e.hos_id 
			AND b.unit_code = e.unit_code 
		LEFT JOIN (
       		SELECT a.group_id, a.hos_id, a.copy_code, a.inv_id, a.batch_no, a.batch_sn, a.bar_code, 
                    max(a.inva_date) AS inva_date, max(a.disinfect_date) AS disinfect_date
               FROM mat_affi_in_detail a
               LEFT JOIN mat_affi_in b
				ON a.in_id = b.in_id
			WHERE b.state = 3
				AND  b.group_id = #{group_id,jdbcType=INTEGER}
				AND b.hos_id = #{hos_id,jdbcType=INTEGER}
				AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND b.bus_type_code = 27
			GROUP BY a.group_id, a.hos_id, a.copy_code, a.inv_id, a.batch_no, a.batch_sn, a.bar_code
		) f 
			ON a.group_id = f.group_id 
			AND a.hos_id = f.hos_id 
			AND a.copy_code = f.copy_code 
			AND a.inv_id = f.inv_id 
			AND a.batch_no = f.batch_no 
			AND a.batch_sn = f.batch_sn 
			AND a.bar_code = f.bar_code 
		LEFT JOIN mat_store_inv g 
			ON a.group_id = g.group_id
			AND a.hos_id = g.hos_id
			AND a.copy_code = g.copy_code
			AND a.store_id = g.store_id
			AND a.inv_id = g.inv_id
		LEFT JOIN mat_location_dict h 
			ON g.group_id = h.group_id
			AND g.hos_id = h.hos_id
			AND g.copy_code = h.copy_code
			AND g.location_id = h.location_id
			AND g.store_id = h.store_id
			AND h.is_stop = 0
		LEFT JOIN v_mat_affi_stock_imme i 
			ON a.group_id = i.group_id 
			AND a.hos_id = i.hos_id 
			AND a.copy_code = i.copy_code 
			AND a.store_id = i.store_id 
			AND a.inv_id = i.inv_id 
			AND a.price = i.price 
			AND a.batch_no = i.batch_no 
			AND a.batch_sn = i.batch_sn 
			AND a.bar_code = i.bar_code 
			AND a.location_id = i.location_id 
		WHERE a.group_id = #{group_id,jdbcType=BIGINT}
			AND a.hos_id = #{hos_id,jdbcType=BIGINT}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			AND a.inv_id in (${inv_id})
			<if test="flag == 1">
			AND nvl(a.left_amount, 0) - nvl(i.amount, 0) &gt; 0
		ORDER BY a.inv_id, a.batch_no, f.inva_date, a.batch_sn, a.bar_code
			</if>
			<if test="flag == 0">
			AND a.out_amount &gt; 0
		ORDER BY a.inv_id, a.batch_no desc, f.inva_date desc, a.batch_sn desc, a.bar_code desc  
			</if>
	</select>
	
	<select id="queryMatStockSumInvList" parameterType="java.util.Map" resultType="java.util.Map">
	  with
        inv_temp
        as
        (
        select a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id
        , e.inv_no, e.inv_code, e.inv_name, e.inv_model, h.unit_name
        , f.mat_type_name, g.fac_name, e.spell_code, e.wbx_code, a.batch_no
        , a.bar_code, sum(nvl(a.out_amount, 0)) as out_amount,
        sum(nvl(a.left_amount, 0)) as left_amount, sum(nvl(a.left_money, 0))
        as left_money, a.price
        , nvl(a.sale_price, 0) as sale_price, nvl(e.sell_price, 0) as
        sell_price, msi.location_id location_new_id, b.location_code
        location_new_code , b.location_name location_new_name
        , cc.inva_date, cc.disinfect_date, e.alias, e.alias_spell, a.location_id
        from mat_fifo_balance a
        left join mat_store_inv msi on a.group_id=msi.group_id
        and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
        and a.inv_id = msi.inv_id
        and msi.store_id = #{store_id,jdbcType=INTEGER}
        left join
        mat_location_dict b on a.group_id = b.group_id
        and msi.hos_id = b.hos_id
        and msi.copy_code = b.copy_code
        and msi.location_id = b.location_id
        and b.is_stop = 0
        left join (
            SELECT a.group_id,
                         a.hos_id,
                         a.copy_code,
                         a.inv_id,
                         a.batch_no,
                         a.batch_sn,
                         max(a.inva_date) AS inva_date,
                         max(a.disinfect_date) AS disinfect_date
                    FROM mat_in_detail a
                    LEFT JOIN mat_in_main b
                      ON a.in_id = b.in_id
                   WHERE b.state = 3
                   and  b.group_id = #{group_id,jdbcType=INTEGER}
               AND b.hos_id = #{hos_id,jdbcType=INTEGER}
               AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                     AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
                   GROUP BY a.group_id,
                            a.hos_id,
                            a.copy_code,
                            a.inv_id,
                            a.batch_no,
                            a.batch_sn
            ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
                 and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
        left join mat_inv_dict e on a.group_id = e.group_id
        and a.hos_id = e.hos_id
        and a.copy_code = e.copy_code
        and a.inv_id = e.inv_id
        and e.is_stop = 0
        left join mat_type_dict f on a.group_id = f.group_id
        and a.hos_id = f.hos_id
        and a.copy_code = f.copy_code
        and e.mat_type_id = f.mat_type_id
        and f.is_stop = 0
        left join hos_fac_dict g on a.group_id = g.group_id
        and a.hos_id = g.hos_id
        and e.fac_id = g.fac_id
        and e.fac_no = g.fac_no
        left join hos_unit h on a.group_id = h.group_id
        and a.hos_id = h.hos_id
        and e.unit_code = h.unit_code
        where a.group_id = #{group_id,jdbcType=INTEGER}
        AND a.hos_id = #{hos_id,jdbcType=INTEGER}
        AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
        AND a.store_id = #{store_id,jdbcType=INTEGER} 
        
        
        group by a.group_id, a.hos_id, a.copy_code, e.bid_code, a.inv_id, e.inv_no,
        e.inv_code, e.inv_name,
        e.spell_code, e.alias, e.alias_spell, e.wbx_code, a.batch_no, a.bar_code, a.price,
        a.sale_price, e.sell_price,
        msi.location_id, b.location_code, b.location_name, cc.inva_date, cc.disinfect_date,
        e.inv_model,
        f.mat_type_name, g.fac_name, h.unit_name,a.location_id
        ),
        
        inv_cert_tmp
        as
        (
        select a.inv_id, a.group_id, a.hos_id, a.copy_code, min(a.cert_id) as
        cert_id
        from mat_inv_cert_rela a
        where a.group_id = #{group_id,jdbcType=INTEGER}
        and a.hos_id = #{hos_id,jdbcType=INTEGER}
        and a.copy_code = #{copy_code,jdbcType=VARCHAR}
        group by a.inv_id, a.group_id, a.hos_id, a.copy_code
        )
        select 
        a.inv_id||','||a.bar_code||','||a.price as inv_msg,
        a.group_id,
        a.hos_id,
        a.copy_code,
        a.bid_code,
        a.inv_id, --材料ID
        a.inv_no, --材料变更号
        a.inv_code, --材料编码
        a.inv_name, --材料名称
        a.inv_model, --规格型号
        a.unit_name, --计量单位
        a.mat_type_name, --材料类别名称
        a.fac_name, --生成产商名称
        a.bar_code, --条形码
        sum(nvl(a.out_amount,0)) as out_amount, --已出库数量
        sum(nvl(a.left_amount,0)) as cur_amount, --当前库存数量
        sum(nvl(a.left_money,0)) as cur_money, --当前库存金额
        a.price, --单价
        a.sale_price, --批发单价
        a.sell_price, --零售单价
        a.location_new_id, --货位ID
        a.location_new_code, --货位编码
        a.location_new_name, --货位名称
        mic.cert_id,
        mic.cert_code
        from inv_temp a
        left join inv_cert_tmp ict on ict.group_id = a.group_id
        and ict.hos_id = a.hos_id
        and ict.copy_code = a.copy_code
        and ict.inv_id = a.inv_id
        left join mat_inv_cert mic on mic.group_id = ict.group_id
        and mic.hos_id = ict.hos_id
        and mic.copy_code = ict.copy_code
        and mic.cert_id = ict.cert_id
        and mic.cert_state = 1
        <where>
          nvl(a.left_amount, 0)  &gt; 0
          
          <if test="key != null and key != ''">
            and (
            a.inv_code like '%${key}%' or
            a.inv_name like '%${key}%'
            or
            a.bid_code like '%${key}%' or
            a.spell_code like '%${key}%' or
            a.wbx_code like '%${key}%' or
            a.alias like '%${key}%' or
            a.alias_spell like '%${key}%'
            )
          </if>
    
          <!-- 2017-03-08材料入库：选择材料页查询列表参数 -->
          <if test="inv_id != null and inv_id != '' ">
            and a.inv_id = #{inv_id}
          </if>
        </where>
        group by 
        a.group_id,
        a.hos_id,
        a.copy_code,
        a.bid_code,
        a.inv_id, 
        a.inv_no, 
        a.inv_code, 
        a.inv_name,
        a.inv_model,
        a.unit_name,
        a.mat_type_name, 
        a.fac_name, 
        a.bar_code, 
        a.price,
        a.sale_price,
        a.sell_price,
        a.location_new_id, 
        a.location_new_code, 
        a.location_new_name, 
        mic.cert_id,
        mic.cert_code
        order by a.inv_code
	</select>
	
	<select id="queryInvBatchStockMsgsByInvMsg" parameterType="java.util.Map" resultMap="matInv">
		select 
		   mfb.group_id,mfb.hos_id,mfb.copy_code,
		   mfb.inv_id,mfb.batch_no,mfb.bar_code,mfb.price,
		   sum(nvl(mfb.left_amount,0)) cur_amount,
		   max(mid.inva_date) inva_date,
		   max(mid.disinfect_date) disinfect_date,
		   mfb.inv_id||','||mfb.bar_code||','||mfb.price as inv_msg
		from mat_fifo_balance mfb
  		left join (
	        select 
	        	a.group_id,a.hos_id,a.copy_code,
	            a.inv_id,a.batch_no,a.batch_sn,
	            max(a.inva_date) as inva_date,
	            max(a.disinfect_date) as disinfect_date
	        from mat_in_detail a
	        left join mat_in_main b
	        on a.in_id = b.in_id
	        where b.state = 3
	        and  b.group_id = #{group_id,jdbcType=INTEGER}
	        and b.hos_id = #{hos_id,jdbcType=INTEGER}
	        and b.copy_code = #{copy_code,jdbcType=VARCHAR}
	        and b.bus_type_code in (1, 2, 4, 6, 8, 10, 16, 18, 22)
	        group by a.group_id,a.hos_id,a.copy_code,
	                 a.inv_id,a.batch_no,a.batch_sn
        ) mid 
        on mid.group_id=mfb.group_id 
        and mid.hos_id=mfb.hos_id 
        and mid.copy_code=mfb.copy_code 
        and mid.inv_id=mfb.inv_id 
        and mid.batch_no=mfb.batch_no 
        and mid.batch_sn=mfb.batch_sn 
		where mfb.group_id=#{group_id,jdbcType=NUMERIC}
		and mfb.hos_id=#{hos_id,jdbcType=NUMERIC}
		and mfb.copy_code=#{copy_code,jdbcType=VARCHAR}
		and mfb.store_id=#{store_id,jdbcType=NUMERIC}
		${sql}
		and mfb.left_amount!=0
		group by 
		   mfb.group_id,mfb.hos_id,mfb.copy_code,
		   mfb.inv_id,mfb.batch_no,mfb.bar_code,mfb.price
   
	</select>
	
	
	<!-- 业务数据选择物资材料所用 -->
	<select id="queryMatApplyCheckInvDetailList" parameterType="java.util.Map"
		resultType="java.util.TreeMap">
		with inv_temp as (
		select a.group_id, a.hos_id, a.copy_code, a.inv_id, e.inv_no
		, e.inv_code, e.inv_name, e.inv_model, h.unit_name, f.mat_type_name
		, g.fac_name, e.spell_code, e.wbx_code, a.batch_sn, a.batch_no
		, a.bar_code, nvl(a.out_amount, 0) as out_amount, nvl(a.left_amount, 0)
		as left_amount, nvl(a.price, 0) as price, nvl(a.sale_price, 0) as
		sale_price
		, nvl(e.sell_price, 0) as sell_price, nvl(msi.location_id, 0) as
		location_new_id, b.location_code location_new_code, b.location_name
		location_new_name, cc.inva_date
		, cc.disinfect_date, e.alias, e.alias_spell, a.location_id
		from
		mat_fifo_balance a
		left join mat_store_inv msi on a.group_id = msi.group_id
		and a.hos_id = msi.hos_id
		and a.copy_code = msi.copy_code
		and a.inv_id = msi.inv_id
		and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict b on msi.group_id = b.group_id
		and msi.hos_id = b.hos_id
		and msi.copy_code = b.copy_code
		and msi.location_id = b.location_id
		and msi.store_id = b.store_id
		and b.is_stop = 0
		left join (
        SELECT a.group_id,
                     a.hos_id,
                     a.copy_code,
                     a.inv_id,
                     a.batch_no,
                     a.batch_sn,
                     max(a.inva_date) AS inva_date,
                     max(a.disinfect_date) AS disinfect_date
                FROM mat_in_detail a
                LEFT JOIN mat_in_main b
                  ON a.in_id = b.in_id
               WHERE b.state = 3
               and  b.group_id = #{group_id,jdbcType=INTEGER}
		       AND b.hos_id = #{hos_id,jdbcType=INTEGER}
		       AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
                 AND b.bus_type_code IN (1, 2, 4, 6, 8, 10, 16, 18, 22)
               GROUP BY a.group_id,
                        a.hos_id,
                        a.copy_code,
                        a.inv_id,
                        a.batch_no,
                        a.batch_sn
        ) cc on a.group_id=cc.group_id and a.hos_id=cc.hos_id and a.copy_code=cc.copy_code 
             and a.inv_id=cc.inv_id and a.batch_no=cc.batch_no and a.batch_sn=cc.batch_sn 
		<!-- left join mat_batch_validity c
		on a.group_id = c.group_id and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code and a.inv_id = c.inv_id
		and a.batch_no = c.batch_no
		left join mat_batch_disinfect d
		on a.group_id = d.group_id and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code and a.inv_id = d.inv_id
		and a.batch_no = d.batch_no -->
		left join mat_inv_dict e
		on a.group_id = e.group_id and a.hos_id = e.hos_id
		and a.copy_code = e.copy_code and a.inv_id = e.inv_id
		and e.is_stop = 0
		<!-- and e.use_state = 1 --><!-- 20170331停用可以出库 -->
		left join mat_type_dict f
		on a.group_id = f.group_id and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code and e.mat_type_id = f.mat_type_id
		and f.is_stop = 0
		left join hos_fac_dict g
		on a.group_id = g.group_id and a.hos_id = g.hos_id
		and e.fac_id = g.fac_id and e.fac_no = g.fac_no
		left join hos_unit h
		on a.group_id = h.group_id and a.hos_id = h.hos_id
		and e.unit_code = h.unit_code

		where a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.store_id = #{store_id,jdbcType=INTEGER}
			<if test="inv_id != null and inv_id != ''">
				AND a.inv_id = #{inv_id,jdbcType=INTEGER}
			</if> 
			<if test="batch_no != null and batch_no != ''">
				AND a.batch_no = #{batch_no,jdbcType=VARCHAR}
			</if>
			<if test="bar_code != null and bar_code != ''">
				AND a.bar_code = #{bar_code,jdbcType=VARCHAR}
			</if>
			
			<if test="inva_date != null and inva_date != ''">
				and cc.inva_date = #{inva_date,jdbcType=DATE}
			</if>
			<if test="disinfect_date != null and disinfect_date != ''">
				and cc.disinfect_date = #{disinfect_date,jdbcType=DATE}
			</if>
			
			<!-- <if test="apply_id != null and apply_id != ''"> AND j.apply_id= #{apply_id,jdbcType=NUMERIC} 
				</if> -->
			<!-- <if test="location_id != null"> AND nvl(a.location_id,0) = #{location_id,jdbcType=INTEGER} 
				</if> -->
		),
		out_temp as (
		select inv_id, batch_no, batch_sn, bar_code, price, location_id, sum(amount)
		amount
		from(
		--出库未确认
		select
		b.inv_id,
		b.batch_sn, --批次
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		nvl(b.location_id,0) location_id, --货位
		sum(nvl(b.amount, 0)) as amount

		from mat_out_main a
		left join mat_out_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.out_id = b.out_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code <> '21' ]]>
		AND <![CDATA[ b.amount_money > 0 ]]>
		<if test="out_id != null and out_id != ''">
						<![CDATA[ AND a.out_id <> #{out_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="tran_id != null and tran_id != ''">
			AND NOT EXISTS(
			select 1 from mat_tran_rela
			where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and tran_id = #{tran_id,jdbcType=INTEGER}
			and out_id = a.out_id
			)
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND b.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND b.batch_no = #{batch_no,jdbcType=INTEGER}
		</if>
		<if test="bar_code != null and bar_code != ''">
			AND b.bar_code = #{bar_code,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND b.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="inva_date != null and inva_date != ''">
			and b.inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
			and b.disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null">
			AND nvl(b.location_id,0) = #{location_id,jdbcType=INTEGER}
		</if>
		group by b.inv_id, b.batch_sn, b.batch_no, b.bar_code, b.price,
		b.location_id
		--退货未确认
		union all
		select
		b.inv_id,
		b.batch_sn, --批次
		b.batch_no, --批号
		b.bar_code, --条形码
		b.price, --单价
		nvl(b.location_id,0) location_id, --货位
		-1 * sum(nvl(b.amount, 0)) as amount

		from mat_in_main a
		left join mat_in_detail b
		on a.group_id = b.group_id and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code and a.in_id = b.in_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		AND <![CDATA[ a.state < 3 ]]>
		AND <![CDATA[ a.bus_type_code in (10,12,16,22) ]]>
		and <![CDATA[ b.amount_money < 0 ]]>
		<if test="in_id != null and in_id != ''">
						<![CDATA[ AND a.in_id <> #{in_id,jdbcType=INTEGER} ]]>
		</if>
		<if test="inv_id != null and inv_id != ''">
			AND b.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="batch_no != null and batch_no != ''">
			AND b.batch_no = #{batch_no,jdbcType=INTEGER}
		</if>
		<if test="bar_code != null and bar_code != ''">
			AND b.bar_code = #{bar_code,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
			AND b.price = #{price,jdbcType=NUMERIC}
		</if>
		<if test="inva_date != null and inva_date != ''">
			and b.inva_date = #{inva_date,jdbcType=DATE}
		</if>
		<if test="disinfect_date != null and disinfect_date != ''">
			and b.disinfect_date = #{disinfect_date,jdbcType=DATE}
		</if>
		<if test="location_id != null">
			AND nvl(b.location_id,0) = #{location_id,jdbcType=INTEGER}
		</if>
		group by b.inv_id, b.batch_sn, b.batch_no, b.bar_code, b.price,
		b.location_id,b.note
		)
		group by inv_id, batch_no, batch_sn, bar_code, price, location_id
		)
		select
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.inv_id, --材料ID
		a.inv_no, --材料变更号
		a.inv_code, --材料编码
		a.inv_name, --材料名称
		a.inv_model, --规格型号
		a.unit_name, --计量单位
		a.mat_type_name, --材料类别名称
		a.fac_name, --生成产商名称
		a.batch_sn, --批次
		a.batch_no, --批号
		a.bar_code, --条形码
		a.out_amount as out_amount, --已出库数量
		a.left_amount as cur_amount, --当前库存数量
		a.price, --单价
		a.sale_price, --批发单价
		a.sell_price, --零售单价
		a.location_new_id ,
		a.location_new_name,
		a.location_new_code,
		a.inva_date, --有效期
		a.disinfect_date, --灭菌期
		a.alias,
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS imme_amount,
		a.out_amount as all_out_amount,  <!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->
		a.left_amount as all_cur_amount,  <!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->
		nvl(a.left_amount, 0) - nvl(b.amount, 0) AS all_imme_amount <!-- 用于方法hrp.mat.servicesImpl.base.getInvJsonByInvList -->

		from inv_temp a
		left join out_temp b
		on a.inv_id = b.inv_id
		and a.batch_sn= b.batch_sn
		and a.batch_no= b.batch_no
		and a.bar_code= b.bar_code
		and a.price = b.price
		and a.location_id = b.location_id
		left join mat_apply_detail mpd on
		a.group_id=mpd.group_id
		and a.hos_id=mpd.hos_id
		and a.copy_code =mpd.hos_id
		and a.inv_id=mpd.inv_id
		<where>
		   <if test="bus_type_code == null ">
				and nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
			</if>
			<if test="bus_type_code != null ">
				<if test="bus_type_code == '21'">
					and a.out_amount &gt; 0
				</if>
				<if
					test="bus_type_code == '11' or bus_type_code == '17' or bus_type_code == '19' or bus_type_code == '23'">
					<if test="flag == 1">
						and (nvl(a.left_amount, 0) - nvl(b.amount, 0)) &gt; 0
					</if>
					<if test="flag == 0">
						and a.out_amount &gt; 0
					</if>

				</if>
				<if
					test="bus_type_code != '21' and bus_type_code != '11' and bus_type_code != '17' and bus_type_code != '19' and bus_type_code != '23'">
					and nvl(a.left_amount, 0) - nvl(b.amount, 0) &gt; 0
				</if>
			</if>
			<!-- <if test="bus_type_code == null or bus_type_code != '21'"> and nvl(a.left_amount, 
				0) - nvl(b.amount, 0) > 0 </if> <if test="bus_type_code != null and bus_type_code 
				== '21'"> and a.out_amount > 0 </if> -->
			<if test="key != null and key != ''">
				and (
				a.inv_code like '%${key}%' or
				a.inv_name like '%${key}%'
				or
				a.spell_code like '%${key}%' or
				a.wbx_code like '%${key}%' or
				a.alias like '%${key}%' or
				a.alias_spell like '%${key}%'
				)
			</if>
		</where>

		<if test="flag == 1">
			order by a.inv_name, a.batch_no, a.inva_date, a.batch_sn,a.bar_code
		</if>
		<if test="flag == 0">
			order by a.inv_code, a.batch_no desc, a.inva_date desc,
			a.batch_sn desc,a.bar_code desc  
		</if>

		<!-- <if test="bus_type_code == null or bus_type_code != '21'"> order by 
			a.inv_name, a.batch_no, a.inva_date, a.batch_sn </if> <if test="bus_type_code 
			!= null and bus_type_code == '21'"> order by a.inv_code, a.batch_no desc, 
			a.inva_date desc, a.batch_sn desc </if> -->
	</select>
	
	
	<!-- 查询供应商列表导入用 -->
	<select id="queryHosSupDict" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT sup_id, sup_no, sup_code, sup_name
		FROM hos_sup_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0 
			AND is_disable = 0 
	</select>
	
	<!-- 查询仓库列表导入用 -->
	<select id="queryHosStoreDict" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT store_id, store_no, store_code, store_name
		FROM hos_store_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0 
			AND is_disable = 0 
	</select>
	
	<!-- 查询科室列表导入用 -->
	<select id="queryHosDeptDict" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT dept_id, dept_no, dept_code, dept_name
		FROM hos_dept_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0 
			AND is_disable = 0 
	</select>
	
	<!-- 查询职工列表导入用 -->
	<select id="queryHosEmpDict" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT emp_id, emp_no, emp_code, emp_name
		FROM hos_emp_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0 
			AND is_disable = 0 
	</select>
	
	<!-- 查询项目列表导入用 -->
	<select id="queryHosProjDict" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT proj_id, proj_no, proj_code, proj_name
		FROM hos_proj_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0 
			AND is_disable = 0 
	</select>
	
	<!-- 查询采购类型列表导入用 -->
	<select id="queryMatStockType" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stock_type_code, stock_type_name 
		FROM mat_stock_type 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND copy_code =  #{copy_code,jdbcType=VARCHAR}
			AND is_stop = 0 
	</select>
	
	<!-- 查询采购协议列表导入用 -->
	<select id="queryMatProtocolMain" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT protocol_id, protocol_code, protocol_name 
		FROM mat_protocol_main 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND copy_code =  #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询材料列表导入用 -->
	<select id="queryMatInvDict" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT inv_id, inv_no, inv_code, inv_name  
		FROM mat_inv_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =  #{hos_id,jdbcType=INTEGER}
			AND copy_code =  #{copy_code,jdbcType=VARCHAR}
			AND is_stop = 0 
			AND use_state = 1
	</select>
</mapper>
