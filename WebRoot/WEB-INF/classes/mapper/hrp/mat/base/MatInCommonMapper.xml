<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.base.MatInCommonMapper">

	<resultMap id="matInMain" type="java.util.Map">  
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" /> 
		<result property="in_id" column="in_id" /> 
		<result property="in_no" column="in_no" />
		<result property="year" column="year" />
		<result property="month" column="month" />     
		<result property="bus_type_code" column="bus_type_code" />
		<result property="bus_type_name" column="bus_type_name" />
		<result property="sup_no" column="sup_no" /> 
		<result property="sup_id" column="sup_id" />
		<result property="sup_code" column="sup_code" />
		<result property="sup_name" column="sup_name" />
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="brief" column="brief" />
		<result property="stocker" column="stocker" />
		<result property="stocker_code" column="stocker_code" />
		<result property="stocker_name" column="stocker_name" />
		<result property="stock_type_code" column="stock_type_code" />
		<result property="stock_type_name" column="stock_type_name" />
		<result property="maker" column="maker" />
		<result property="maker_name" column="maker_name" />
		<result property="in_date" column="in_date" />
		<result property="checker" column="checker" />
		<result property="checker_name" column="checker_name" />
		<result property="check_date" column="check_date" />
		<result property="confirmer" column="confirmer" />
		<result property="confirmer_name" column="confirmer_name" />
		<result property="confirm_date" column="confirm_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="protocol_id" column="protocol_id" />
		<result property="protocol_code" column="protocol_code" />
		<result property="protocol_name" column="protocol_name" />
		<result property="app_dept" column="app_dept" />
		<result property="app_dept_id" column="app_dept_id" />
		<result property="app_dept_no" column="app_dept_no" />
		<result property="app_dept_code" column="app_dept_code" />
		<result property="app_dept_name" column="app_dept_name" />
		<result property="amount_money" column="amount_money" />
		<result property="proj_id" column="proj_id" />
		<result property="proj_no" column="proj_no" />
		<result property="proj_code" column="proj_code" />
		<result property="proj_name" column="proj_name" />
		<result property="come_from" column="come_from" />
		<result property="bill_no" column="bill_no"/>
		<result property="bill_date" column="bill_date"/>
		<result property="bill_state" column="bill_state"/>
		<result property="delivery_code" column="delivery_code"/>
		<result property="examiner" column="examiner"/>
		<result property="examiner_code" column="examiner_code"/>
		<result property="examiner_name" column="examiner_name"/>
		<result property="ra_state" column="ra_state"/>
		<result property="temperature" column="temperature"/>
		
	</resultMap>

	<resultMap id="matInDetail" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="sup_name" column="sup_name" />
		<result property="stocker_name" column="stocker_name" />
		<result property="maker_name" column="maker_name" />
		<result property="in_date" column="in_date" />
		<result property="bus_type_name" column="bus_type_name" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="in_id" column="in_id" />
		<result property="in_no" column="in_no" />
		<result property="in_detail_id" column="in_detail_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="bid_code" column="bid_code" />
		<result property="confirm_date" column="confirm_date" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_code" column="unit_code" />
		<result property="unit_name" column="unit_name" />
		<result property="batch_no" column="batch_no" />
		<result property="batch_sn" column="batch_sn" />
		<result property="price" column="price" />
		<result property="amount" column="amount" />
		<result property="amount_money" column="amount_money" />
		<result property="sell_price" column="sell_price" />
		<result property="sell_money" column="sell_money" />
		<result property="sale_price" column="sale_price" />
		<result property="sale_money" column="sale_money" />
		<result property="allot_price" column="allot_price" />
		<result property="allot_money" column="allot_money" />
		<result property="pack_code" column="pack_code" />
		<result property="pack_name" column="pack_name" />
		<result property="num_exchange" column="num_exchange" />
		<result property="pack_price" column="pack_price" />
		<result property="num" column="num" />
		<result property="sn" column="sn" />
		<result property="serial_no" column="serial_no" />
		<result property="is_per_bar" column="is_per_bar" />
		<result property="bar_code" column="bar_code" />
		<result property="inva_date" column="inva_date" />
		<result property="disinfect_date" column="disinfect_date" />
		<result property="location_id" column="location_id" />
		<result property="location_code" column="location_code" />
		<result property="location_name" column="location_name" />
		<result property="order_rela" column="order_rela" />
		<result property="note" column="note" />
		<result property="is_highvalue" column="is_highvalue" />
		<result property="is_batch" column="is_batch" />
		<result property="is_bar" column="is_bar" />
		<result property="is_quality" column="is_quality" />
		<result property="is_single_ven" column="is_single_ven" />
		<result property="is_disinfect" column="is_disinfect" />
		<result property="is_sec_whg" column="is_sec_whg" />
		<result property="cert_id" column="cert_id" />
		<result property="cert_code" column="cert_code" />
		<result property="fac_name" column="fac_name" />
		<result property="disinfect_no" column="disinfect_no" />
		<result property="fac_date" column="fac_date" />
		<result property="location_new_id" column="location_new_id" />
		<result property="location_new_name" column="location_new_name" /> 
		<result property="delivery_rela" column="delivery_rela" /> 
	</resultMap>

	<resultMap id="matInResource" type="com.chd.hrp.mat.entity.MatInResource">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="in_id" column="in_id" />
		<result property="source_id" column="source_id" />
		<result property="source_money" column="source_money" />
	</resultMap>

	<!-- 获取一个主表序列 -->
	<select id="queryMatInMainSeq" resultType="java.lang.Long"
		useCache="false" flushCache="true">
		SELECT MAT_IN_MAIN_SEQ.nextval as in_id
		FROM DUAL
	</select>

	<!-- 获取一个明细表序列 -->
	<select id="queryMatInDetailSeq" resultType="java.lang.Long"
		useCache="false" flushCache="true">
		SELECT MAT_IN_DETAIL_SEQ.nextval FROM DUAL
	</select>

	<!-- 入库单主表添加 -->
	<insert id="addMatInMain" parameterType="java.util.Map">
		INSERT INTO MAT_IN_MAIN (
		group_id, hos_id, copy_code, in_id, in_no, year, month, bus_type_code,
		store_id, store_no, 
		in_date, brief, maker, state, amount_money
		<if test="sup_no != null and sup_no != ''">, sup_no</if>
		<if test="sup_id != null and sup_id != ''">, sup_id</if>
		<if test="stocker != null and stocker != ''">, stocker</if>
		<if test="stock_type_code != null and stock_type_code != ''">, stock_type_code</if>
		<if test="checker != null and checker != ''">, checker</if>
		<if test="check_date != null and check_date != ''">, check_date</if>
		<if test="confirmer != null and confirmer != ''">, confirmer</if>
		<if test="confirm_date != null and confirm_date != ''">, confirm_date</if>
		<if test="protocol_code != null and protocol_code != ''">, protocol_code</if>
		<if test="app_dept != null and app_dept != ''">, app_dept</if>
		<if test="proj_id != null and proj_id != ''">, proj_id</if>
		<if test="come_from != null and come_from != ''">, come_from</if>
		<if test="bill_no != null and bill_no != ''">, bill_no</if>
		<if test="bill_date != null and bill_date != ''">, bill_date</if>
		<if test="bill_state != null ">, bill_state</if>
		<if test="delivery_code != null and delivery_code != ''">, delivery_code</if>
		<if test="examiner != null and examiner != ''">, examiner</if>
		<if test="temperature != null and temperature != ''">, temperature</if>
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{in_id,jdbcType=INTEGER},
		#{in_no,jdbcType=VARCHAR},
		#{year,jdbcType=VARCHAR},
		#{month,jdbcType=VARCHAR},
		#{bus_type_code,jdbcType=VARCHAR},
		#{store_id,jdbcType=INTEGER},
		#{store_no,jdbcType=INTEGER},
		#{in_date,jdbcType=DATE},
		#{brief,jdbcType=VARCHAR},
		#{maker,jdbcType=INTEGER},
		1,
		#{amount_money,jdbcType=NUMERIC}
		<if test="sup_no != null and sup_no != ''">, #{sup_no,jdbcType=INTEGER}</if>
		<if test="sup_id != null and sup_id != ''">, #{sup_id,jdbcType=INTEGER}</if>
		<if test="stocker != null and stocker != ''">, #{stocker,jdbcType=VARCHAR}</if>
		<if test="stock_type_code != null and stock_type_code != ''">, #{stock_type_code,jdbcType=VARCHAR}</if>
		<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
		<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
		<if test="confirmer != null and confirmer != ''">, #{confirmer,jdbcType=INTEGER}</if>
		<if test="confirm_date != null and confirm_date != ''">, #{confirm_date,jdbcType=DATE}</if>
		<if test="protocol_code != null and protocol_code != ''">, #{protocol_code,jdbcType=VARCHAR}</if>
		<if test="app_dept != null and app_dept != ''">, #{app_dept,jdbcType=INTEGER}</if>
		<if test="proj_id != null and proj_id != ''">, #{proj_id,jdbcType=INTEGER}</if>
		<if test="come_from != null and come_from != ''">, #{come_from,jdbcType=INTEGER}</if>
		<if test="bill_no != null and bill_no != ''">, #{bill_no,jdbcType=VARCHAR}</if>
		<if test="bill_date != null and bill_date != ''">,#{bill_date,jdbcType=DATE}</if>
		<if test="bill_state != null ">, #{bill_state,jdbcType=INTEGER}</if>
		<if test="delivery_code != null and delivery_code != ''">, #{delivery_code,jdbcType=VARCHAR}</if>
		<if test="examiner != null and examiner != ''">, #{examiner,jdbcType=INTEGER}</if>
		<if test="temperature != null and temperature != ''">, #{temperature,jdbcType=VARCHAR}</if>
		)
	</insert>

	<!-- 批量插入主表数据 -->
	<insert id="addMatInMainBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			INSERT INTO MAT_IN_MAIN (
			group_id, hos_id, copy_code, in_id, in_no, year, month, bus_type_code,
			store_id, store_no,
			in_date, brief, maker, state, amount_money
			<if test="item.sup_no != null and item.sup_no != ''">, sup_no</if>
			<if test="item.sup_id != null and item.sup_id != ''">, sup_id</if>
			<if test="item.stocker != null and item.stocker != ''">, stocker</if>
			<if test="item.stock_type_code != null and item.stock_type_code != ''">, stock_type_code</if>
			<if test="item.checker != null and item.checker != ''">, checker</if>
			<if test="item.check_date != null and item.check_date != ''">, check_date</if>
			<if test="item.confirmer != null and item.confirmer != ''">, confirmer</if>
			<if test="item.confirm_date != null and item.confirm_date != ''">, confirm_date</if>
			<if test="item.protocol_code != null and item.protocol_code != ''">, protocol_code</if>
			<if test="item.app_dept != null and item.app_dept != ''">, app_dept</if>
			<if test="item.proj_id != null and item.proj_id != ''">, proj_id</if>
			<if test="item.come_from != null and item.come_from != ''">, come_from</if>
			<if test="item.bill_no != null and item.bill_no != ''">, bill_no</if>
			<if test="item.bill_date != null and item.bill_date != ''">, bill_date</if>
			<if test="item.bill_state != null ">, bill_state</if>
			<if test="item.delivery_code != null and item.delivery_code != ''">, delivery_code</if>
			<if test="item.examiner != null and item.examiner != ''">, examiner</if>
			) VALUES (
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.in_id,jdbcType=INTEGER},
			#{item.in_no,jdbcType=VARCHAR},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.bus_type_code,jdbcType=VARCHAR},
			#{item.store_id,jdbcType=INTEGER},
			#{item.store_no,jdbcType=INTEGER},
			#{item.in_date,jdbcType=DATE},
			#{item.brief,jdbcType=VARCHAR},
			#{item.maker,jdbcType=INTEGER},
			1, 
			#{item.amount_money,jdbcType=NUMERIC}
			<if test="item.sup_no != null and item.sup_no != ''">, #{item.sup_no,jdbcType=INTEGER}</if>
			<if test="item.sup_id != null and item.sup_id != ''">, #{item.sup_id,jdbcType=INTEGER}</if>
			<if test="item.stocker != null and item.stocker != ''">, #{item.stocker,jdbcType=VARCHAR}</if>
			<if test="item.stock_type_code != null and item.stock_type_code != ''">, #{item.stock_type_code,jdbcType=VARCHAR}</if>
			<if test="item.checker != null and item.checker != ''">, #{item.checker,jdbcType=INTEGER}</if>
			<if test="item.check_date != null and item.check_date != ''">, #{item.check_date,jdbcType=DATE}</if>
			<if test="item.confirmer != null and item.confirmer != ''">, #{item.confirmer,jdbcType=INTEGER}</if>
			<if test="item.confirm_date != null and item.confirm_date != ''">, #{item.confirm_date,jdbcType=DATE}</if>
			<if test="item.protocol_code != null and item.protocol_code != ''">, #{item.protocol_code,jdbcType=VARCHAR}</if>
			<if test="item.app_dept != null and item.app_dept != ''">, #{item.app_dept,jdbcType=INTEGER}</if>
			<if test="item.proj_id != null and item.proj_id != ''">, #{item.proj_id,jdbcType=INTEGER}</if>
			<if test="item.come_from != null and item.come_from != ''">, #{item.come_from,jdbcType=INTEGER}</if>
			<if test="item.bill_no != null and item.bill_no != ''">, #{item.bill_no,jdbcType=VARCHAR}</if>
			<if test="item.bill_date != null and item.bill_date != ''">, #{item.bill_date,jdbcType=DATE}</if>
			<if test="item.bill_state != null ">, #{item.bill_state,jdbcType=INTEGER}</if>
			<if test="item.delivery_code != null and item.delivery_code != ''">, #{item.delivery_code,jdbcType=VARCHAR}</if>
			<if test="item.examiner != null and item.examiner != ''">, #{item.examiner,jdbcType=INTEGER}</if>
			)
		</foreach>
	</insert>
	<!-- 入库单明细表添加（批量） -->
	<insert id="addMatInDetailBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			INSERT INTO MAT_IN_DETAIL (
			in_detail_id, group_id, hos_id, copy_code, in_id, in_no, inv_id, inv_no, amount,
			price, amount_money, batch_no, batch_sn
			<if test="item.sn != null and item.sn != ''">, sn</if>
			<if test="item.serial_no != null and item.serial_no != ''">, serial_no</if>
			<if test="item.bar_code != null and item.bar_code != ''">, bar_code</if>
			<if test="item.sell_price != null">, sell_price</if>
			<if test="item.sell_money != null">, sell_money</if>
			<if test="item.sale_price != null">, sale_price</if>
			<if test="item.sale_money != null">, sale_money</if>
			<if test="item.allot_price != null">, allot_price</if>
			<if test="item.allot_money != null">, allot_money</if>
			<if test="item.pack_code != null and item.pack_code != ''">, pack_code</if>
			<if test="item.num_exchange != null">, num_exchange</if>
			<if test="item.pack_price != null">, pack_price</if>
			<if test="item.num != null">, num</if>
			<if test="item.inva_date != null and item.inva_date != ''">, inva_date</if>
			<if test="item.disinfect_date != null and item.disinfect_date != ''">, disinfect_date</if>
			<if test="item.location_id != null">, location_id</if>
			<if test="item.note != null and item.note != ''">, note</if>
			<if test="item.cert_id != null">, cert_id</if>
			<if test="item.cert_code != null">, cert_code</if>
			<if test="item.fac_date != null and item.fac_date != ''">, fac_date</if>
			<if test="item.disinfect_no != null and item.disinfect_no != ''">, disinfect_no</if>
			)
			values(
			#{item.in_detail_id,jdbcType=INTEGER},
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.in_id,jdbcType=INTEGER},
			#{item.in_no,jdbcType=VARCHAR},
			#{item.inv_id,jdbcType=INTEGER},
			#{item.inv_no,jdbcType=INTEGER},
			#{item.amount,jdbcType=FLOAT},
			#{item.price,jdbcType=FLOAT},
			#{item.amount_money,jdbcType=FLOAT},
			#{item.batch_no,jdbcType=VARCHAR},
			#{item.batch_sn,jdbcType=INTEGER}
			<if test="item.sn != null and item.sn != ''">, #{item.sn,jdbcType=VARCHAR}</if>
			<if test="item.serial_no != null and item.serial_no != ''">, #{item.serial_no,jdbcType=VARCHAR}</if>
			<if test="item.bar_code != null and item.bar_code != ''">, #{item.bar_code,jdbcType=VARCHAR}</if>
			<if test="item.sell_price != null">, #{item.sell_price,jdbcType=FLOAT}</if>
			<if test="item.sell_money != null">, #{item.sell_money,jdbcType=FLOAT}</if>
			<if test="item.sale_price != null">, #{item.sale_price,jdbcType=FLOAT}</if>
			<if test="item.sale_money != null">, #{item.sale_money,jdbcType=FLOAT}</if>
			<if test="item.allot_price != null">, #{item.allot_price,jdbcType=FLOAT}</if>
			<if test="item.allot_money != null">, #{item.allot_money,jdbcType=FLOAT}</if>
			<if test="item.pack_code != null and item.pack_code != ''">, #{item.pack_code,jdbcType=VARCHAR}</if>
			<if test="item.num_exchange != null">, #{item.num_exchange,jdbcType=INTEGER}</if>
			<if test="item.pack_price != null">, #{item.pack_price,jdbcType=INTEGER}</if>
			<if test="item.num != null">, #{item.num,jdbcType=INTEGER}</if>
			<if test="item.inva_date != null and item.inva_date != ''">, #{item.inva_date,jdbcType=DATE}</if>
			<if test="item.disinfect_date != null and item.disinfect_date != ''">, #{item.disinfect_date,jdbcType=DATE}</if>
			<if test="item.location_id != null">, #{item.location_id,jdbcType=INTEGER}</if>
			<if test="item.note != null and item.note != ''">, #{item.note,jdbcType=VARCHAR}</if>
			<if test="item.cert_id != null">, #{item.cert_id,jdbcType=INTEGER}</if>
			<if test="item.cert_code != null">, #{item.cert_code,jdbcType=INTEGER}</if>
			<if test="item.fac_date != null and item.fac_date != ''">, #{item.fac_date,jdbcType=DATE}</if>
			<if test="item.disinfect_no != null and item.disinfect_no != ''">, #{item.disinfect_no,jdbcType=VARCHAR}</if>
			);
			-- 重新赋值一下入库单证件号
			update mat_in_detail b set (cert_id, cert_code) = (
				select cert_id, cert_code from mat_inv_cert_rela 
			    where inv_id = b.inv_id
			      and group_id = b.group_id
			      and hos_id = b.hos_id
			      and copy_code = b.copy_code
			      and rownum = 1 
			)
			where b.group_id = #{item.group_id,jdbcType=INTEGER}
			  and b.hos_id = #{item.hos_id,jdbcType=INTEGER}
			  and b.copy_code = #{item.copy_code,jdbcType=VARCHAR}
			  and b.in_detail_id = #{item.in_detail_id,jdbcType=INTEGER}
			  and b.inv_id = #{item.inv_id,jdbcType=INTEGER}
			  and b.cert_id is null
			  and b.cert_code is null
		</foreach>
	</insert>

	<!-- 入库单主表修改 -->
	<update id="updateMatInMain" parameterType="java.util.Map">
		UPDATE mat_in_main
		SET
			<if test="bus_type_code != null">
			bus_type_code = #{bus_type_code,jdbcType=VARCHAR},
			</if>
			in_date = #{in_date,jdbcType=DATE},
			year = #{year},
			month = #{month},
			<!-- 期初供应商信息可以为空 -->
			sup_id = #{sup_id,jdbcType=INTEGER},
			sup_no = #{sup_no,jdbcType=INTEGER},
			store_id = #{store_id,jdbcType=INTEGER},
			store_no = #{store_no,jdbcType=INTEGER}, 
			amount_money = #{amount_money,jdbcType=FLOAT}
			<if test="brief != null">
				, brief = #{brief,jdbcType=VARCHAR}
			</if>
			<if test="stocker != null">
				, stocker = #{stocker,jdbcType=INTEGER}
			</if>
			<if test="stock_type_code != null">
				, stock_type_code = #{stock_type_code,jdbcType=INTEGER}
			</if>
			<if test="protocol_code != null">
				, protocol_code = #{protocol_code,jdbcType=VARCHAR}
			</if>
			<if test="app_dept != null">
				, app_dept = #{app_dept,jdbcType=INTEGER}
			</if>
			<if test="proj_id != null">
				, proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
			<if test="bill_no != null">
				, bill_no = #{bill_no,jdbcType=VARCHAR}
			</if>
			<if test="bill_date != null">
				, bill_date = #{bill_date,jdbcType=DATE}
			</if>
			<if test="bill_state != null">
				, bill_state = #{bill_state,jdbcType=INTEGER}
			</if>
			<if test="delivery_code != null">
				, delivery_code = #{delivery_code,jdbcType=VARCHAR}
			</if>
			<if test="examiner != null">
				, examiner = #{examiner,jdbcType=INTEGER}
			</if>
			<if test="temperature != null and temperature !='' ">
				, temperature = #{temperature,jdbcType=VARCHAR}
			</if>
		WHERE group_id =#{group_id,jdbcType=INTEGER}
			AND hos_id =#{hos_id,jdbcType=INTEGER}
			AND copy_code =#{copy_code,jdbcType=VARCHAR}
			AND in_id =#{in_id,jdbcType=INTEGER}
	</update>
	
	<!-- 	温州：修改入库单冲账状态 -->
	<update id="updateMatInMainRaState" parameterType="java.util.Map">
		UPDATE mat_in_main
		SET ra_state = #{ra_state,jdbcType=INTEGER}
		WHERE group_id =#{group_id,jdbcType=INTEGER}
			AND hos_id =#{hos_id,jdbcType=INTEGER}
			AND copy_code =#{copy_code,jdbcType=VARCHAR}
			<if test="old_in_id !=null and old_in_id !='' ">
				AND in_id =#{old_in_id,jdbcType=INTEGER}
			</if>
			<if test="in_ids != null and in_ids !='' ">
				AND in_id in ${in_ids}
			</if>
	</update>
	
	<update id="updateMatInMainRaStateNull" parameterType="java.util.List">
		UPDATE mat_in_main 
		set ra_state = ''
		WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id =#{item.group_id,jdbcType=INTEGER}
			and hos_id =#{item.hos_id,jdbcType=INTEGER}
			and copy_code =#{item.copy_code,jdbcType=VARCHAR}
			and ra_state =#{item.in_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 入库单明细表修改（批量） -->
	<update id="updateMatInDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_in_detail
			<trim prefix="SET" suffixOverrides=",">
					<if test="item.inv_id != null">
						inv_id = #{item.inv_id,jdbcType=INTEGER},
					</if>
					<if test="item.inv_no != null">
						inv_no = #{item.inv_no,jdbcType=INTEGER},
					</if>
					<if test="item.batch_no != null">
						batch_no = #{item.batch_no,jdbcType=VARCHAR},
					</if>
					<if test="item.batch_sn != null">
						batch_sn = #{item.batch_sn,jdbcType=INTEGER},
					</if>
					<if test="item.price != null">
						price = #{item.price,jdbcType=FLOAT},
					</if>
					<if test="item.amount != null">
						amount = #{item.amount,jdbcType=INTEGER},
					</if>
					<if test="item.amount_money != null">
						amount_money = #{item.amount_money,jdbcType=FLOAT},
					</if>
					<if test="item.sell_price != null">
						sell_price = #{item.sell_price,jdbcType=FLOAT},
					</if>
					<if test="item.sell_money != null">
						sell_money = #{item.sell_money,jdbcType=FLOAT},
					</if>
					<if test="item.sale_price != null">
						sale_price = #{item.sale_price,jdbcType=FLOAT},
					</if>
					<if test="item.sale_money != null">
						sale_money = #{item.sale_money,jdbcType=FLOAT},
					</if>
					<if test="item.allot_price != null">
						allot_price = #{item.allot_price,jdbcType=FLOAT},
					</if>
					<if test="item.allot_money != null">
						allot_money = #{item.allot_money,jdbcType=FLOAT},
					</if>
					<if test="item.pack_code != null">
						pack_code = #{item.pack_code,jdbcType=VARCHAR},
					</if>
					<if test="item.num_exchange!= null">
						num_exchange = #{item.num_exchange,jdbcType=INTEGER},
					</if>
					<if test="item.pack_price != null">
						pack_price = #{item.pack_price,jdbcType=FLOAT},
					</if>
					<if test="item.num != null">
						num = #{item.num,jdbcType=INTEGER},
					</if>
					<if test="item.sn != null">
						sn = #{item.sn,jdbcType=VARCHAR},
					</if>
					<if test="item.bar_code != null">
						bar_code = #{item.bar_code,jdbcType=VARCHAR},
					</if>
					<if test="item.inva_date != null">
						inva_date = #{item.inva_date,jdbcType=DATE},
					</if>
					<if test="item.disinfect_date != null">
						disinfect_date = #{item.disinfect_date,jdbcType=DATE},
					</if>
					<if test="item.location_id != null">
						location_id = #{item.location_id,jdbcType=INTEGER},
					</if>
					<if test="item.note != null">
						note = #{item.note,jdbcType=VARCHAR},
					</if>
					<if test="item.cert_id != null">
						cert_id = #{item.cert_id,jdbcType=INTEGER},
					</if>
					<if test="item.cert_code != null">
						cert_code = #{item.cert_code,jdbcType=INTEGER},
					</if>
					<if test="item.fac_date != null">
						fac_date = #{item.fac_date,jdbcType=DATE},
					</if>
					<if test="item.disinfect_no != null">
						disinfect_no = #{item.disinfect_no,jdbcType=VARCHAR},
					</if>
					<if test="item.delivery_code != null">
						delivery_code = #{item.delivery_code,jdbcType=VARCHAR},
					</if>
					<if test="item.examiner != null">
						examiner = #{item.examiner,jdbcType=INTEGER},
					</if>
				</trim>
			<where>
			<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
			</if>
			<if test="item.hos_id != null and item.hos_id != ''">
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>
			<if test="item.copy_code != null and item.copy_code != ''">
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>
			<if test="item.in_id != null and item.in_id != ''">
				and in_id = #{item.in_id,jdbcType=INTEGER}
			</if>
			<if test="item.in_detail_id != null and item.in_detail_id != ''">
				and in_detail_id = #{item.in_detail_id,jdbcType=INTEGER}
			</if>
			</where>
		</foreach>
	</update>

	<!-- 入库单明细表修改（批量） -->
	<update id="updateMatInMainConfirm" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE mat_in_main
			set
				year = #{item.year,jdbcType=VARCHAR},
				month = #{item.month,jdbcType=VARCHAR}, 
				confirm_date = #{item.confirm_date,jdbcType=DATE},
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				state = #{item.state,jdbcType=INTEGER}
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 入库单主表删除 -->
	<delete id="deleteMatInMain" parameterType="java.util.Map">
		DELETE FROM mat_in_main
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</delete>

	<!-- 入库单明细表删除 -->
	<delete id="deleteMatInDetail" parameterType="java.util.Map">
		DELETE FROM mat_in_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</delete>

	<!-- 修改保存时删除页面中不存在的明细数据 -->
	<delete id="deleteMatInDetailForUpdate" parameterType="java.util.Map">
		DELETE FROM mat_in_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
			AND in_detail_id not in (${detail_ids})
	</delete>

	<!-- 入库单主表批量删除 -->
	<delete id="deleteMatInMainBatch" parameterType="java.util.List">
		DELETE FROM mat_in_main
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<!-- 批量判断入库单是否可删除、修改 -->
	<select id="existsMatInMainStateBatch" parameterType="java.util.List" resultType="java.lang.String">
		SELECT count(1)
		FROM mat_in_main
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND in_id = #{item.in_id,jdbcType=INTEGER}
			AND state > 1
		</foreach>
	</select>

	<!-- 入库单明细表批量删除 -->
	<delete id="deleteMatInDetailBatch" parameterType="java.util.List">
		DELETE FROM mat_in_detail
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</delete>
 
	<!-- 用于入库单主表加载 -->
	<select id="queryMatInMainByCode" resultMap="matInMain" parameterType="java.util.Map">
		SELECT
			a.group_id, a.hos_id, a.copy_code, a.in_id, a.in_no, a.year, a.month,
			a.bus_type_code, a.sup_no, a.sup_id, f.sup_code, f.sup_name,
			a.store_id, a.store_no, g.store_code, g.store_name, a.brief,
			a.stocker, i.emp_code as stocker_code, i.emp_name as stocker_name,
			a.in_date, a.maker, b.user_name maker_name, a.stock_type_code,
			a.checker, c.user_name checker_name, a.check_date,
			a.confirmer, d.user_name confirmer_name, a.confirm_date, a.state, e.field_value
			state_name, a.protocol_code ||','|| nvl(k.IS_PRICE_CONT,0)||','|| nvl(k.IS_TOTAL_CONT,0)  protocol_id, k.pact_code protocol_code,
			k.pact_name protocol_name, a.app_dept,j.dept_id app_dept_id,j.dept_no app_dept_no,j.dept_code as app_dept_code, j.dept_name as
			app_dept_name, a.proj_id, l.proj_no, l.proj_code, l.proj_name,
			a.amount_money, a.bill_no, a.bill_date, a.bill_state, a.delivery_code,
			a.examiner,hd.emp_code examiner_code,hd.emp_name examiner_name,a.come_from,a.temperature
		FROM mat_in_main a
		left join sys_user b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.maker = b.user_id
		left join sys_user c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.checker = c.user_id
		left join sys_user d
			on a.group_id = d.group_id
			and a.hos_id = d.hos_id
			and a.confirmer = d.user_id
		left join mat_sys_list e
			on e.table_code = 'MAT_IN_MAIN'
			and e.field_code = 'STATE'
			and a.state = e.field_value
		left join hos_sup_dict f
			on a.group_id = f.group_id and a.hos_id = f.hos_id
			and a.sup_id = f.sup_id 
			<!--保留历史 1 为sup_no关联  0 为is_stop= 0  gaopei -->
			 <if test="show_history != null and show_history == 1">
				    and a.sup_no = f.sup_no
		     </if>
			 <if test="show_history == null or show_history == 0">
			       and f.is_stop = 0
			 </if>  
		left join hos_store_dict g
			on a.group_id = g.group_id and a.hos_id = g.hos_id
			and a.store_id = g.store_id and a.store_no = g.store_no
		left join hos_emp_dict i
			on a.group_id = i.group_id and a.hos_id = i.hos_id
			and a.stocker = i.emp_id and i.is_stop = 0
		left join hos_dept_dict j
			on a.group_id = j.group_id and a.hos_id = j.hos_id
			and a.app_dept = j.dept_id and j.is_stop = 0
		
        left join pact_main_fkxy k
            on a.group_id = k.group_id and a.hos_id = k.hos_id
            and a.copy_code = k.copy_code and a.protocol_code = k.pact_code
		left join hos_proj_dict l
			on a.group_id = l.group_id and a.hos_id = l.hos_id
			and a.proj_id = l.proj_id and l.is_stop = 0
		left join hos_emp_dict hd 
			on a.group_id = hd.group_id and a.hos_id = hd.hos_id
			and a.examiner = hd.emp_id and hd.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.in_id = #{in_id,jdbcType=INTEGER}
	</select>

	<!-- 用于入库单明细表加载 -->
	<select id="queryMatInDetailByCode" resultMap="matInDetail" parameterType="java.util.Map"> 
		select a.group_id, a.hos_id, a.copy_code, b.bid_code, a.in_id
		  , a.in_detail_id, a.inv_id, a.inv_no, b.inv_code, b.inv_name
		  , b.inv_model, b.unit_code, c.unit_name, a.amount, a.price
		  , a.amount_money, a.pack_code, e.pack_name, a.num_exchange, a.pack_price
		  , a.num, a.batch_no, a.batch_sn, a.sn,a.serial_no,a.bar_code
		  , a.sell_price, a.sell_money, a.sale_price, a.sale_money, a.allot_price
		  , a.allot_money, a.inva_date, a.disinfect_date, a.location_id location_new_id, d.location_name location_new_name
		  , a.note, f.order_rela, b.is_highvalue, b.is_batch, b.is_bar
		  , b.is_per_bar, b.is_quality, b.is_single_ven, b.is_disinfect, hf.fac_name
		  , a.cert_id, a.cert_code, a.fac_date, a.disinfect_no,g.delivery_rela,b.is_sec_whg
		from mat_in_detail a
		left join mat_inv_dict b on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.inv_id = b.inv_id
			and a.inv_no = b.inv_no 
		left join hos_unit c on b.group_id = c.group_id and b.hos_id = c.hos_id
			and b.unit_code = c.unit_code  and c.is_stop = 0
		left join mat_store_inv msi on a.group_id = msi.group_id
			and a.hos_id = msi.hos_id and a.copy_code = msi.copy_code
			and a.inv_id = msi.inv_id
			and msi.store_id = #{store_id,jdbcType=INTEGER}
		left join mat_location_dict d on a.group_id = d.group_id
			and a.hos_id = d.hos_id
			and a.copy_code = d.copy_code 
			and msi.location_id = d.location_id 
		left join hos_package e on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.pack_code = e.pack_code 
		left join hos_fac_dict hf on hf.group_id = b.group_id
			and hf.hos_id = b.hos_id
			and hf.fac_id = b.fac_id
			and hf.fac_no = b.fac_no 
		<!-- left join mat_inv_cert mic on mic.group_id = a.group_id
		and mic.hos_id = a.hos_id
		and mic.copy_code = a.copy_code
		and mic.cert_id = a.cert_id
		and mic.cert_state = 1  -->
		left join (
		    select in_detail_id, '[' || to_char(wm_concat('{"order_id":' || order_id || ',"order_detail_id":' || order_detail_id || ',"in_amount":' || in_amount || ',"order_amount":' || order_amount || '}')) || ']' as order_rela
		    from mat_in_order_rela
		   	where group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and in_id = #{in_id,jdbcType=INTEGER}
		    group by in_detail_id
		) f on a.in_detail_id = f.in_detail_id 
		left join (
	       	select in_detail_id,'[' || to_char(wm_concat('{"delivery_id":' || delivery_id || ',"delivery_no":' || delivery_no || ',"inv_id":' || inv_id || ',"in_amount":' || in_amount || ',"delivery_amount":' || delivery_amount || '}')) || ']' as delivery_rela
	       	from sup_delivery_in_rela 
	       	where group_id = #{group_id,jdbcType=INTEGER}
				and hos_id = #{hos_id,jdbcType=INTEGER}
				and copy_code = #{copy_code,jdbcType=VARCHAR}
				and in_id = #{in_id,jdbcType=INTEGER}
				and is_com = 0 
	       	group by in_detail_id
	    ) g on a.in_detail_id=g.in_detail_id
		where a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.in_id = #{in_id,jdbcType=INTEGER}
		order by a.in_detail_id
		<!--  order by d.location_name,b.inv_code 	 -->
	</select> 

	<!-- 查询入库资金来源 -->
	<select id="queryMatInResource" resultMap="matInResource"
		parameterType="java.util.Map">
		SELECT group_id, hos_id, copy_code, in_id, source_id, source_money
		FROM MAT_IN_RESOURCE
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询入库资金来源 -->
	<select id="queryMatInResourceList" resultMap="matInResource" parameterType="java.util.Map">
		SELECT group_id, hos_id, copy_code, in_id, source_id, source_money
		FROM MAT_IN_RESOURCE
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</select>
	<!-- 插入入库资金来源 -->
	<insert id="insertMatInResource" parameterType="java.util.Map">
		INSERT INTO MAT_IN_RESOURCE(
			group_id, hos_id, copy_code, in_id, source_id, source_money
		)
		SELECT
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{in_id,jdbcType=INTEGER},
			source_id,
			#{source_money,jdbcType=FLOAT}
		FROM hos_source
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND source_attr = 1
			AND rownum = 1
		ORDER BY source_code
	</insert>
	
	<!-- 插入入库资金来源 -->
	<insert id="insertMatInResourceBatch" parameterType="java.util.List">
		INSERT INTO MAT_IN_RESOURCE(
			group_id, hos_id, copy_code, in_id, source_id, source_money
		)
		SELECT a.group_id, a.hos_id, a.copy_code, 
			a.in_id, b.source_id, a.source_money
		FROM(
		<foreach collection="list" item="item" index="index" separator="union all">
			SELECT
				#{item.group_id,jdbcType=INTEGER} as group_id,
				#{item.hos_id,jdbcType=INTEGER} as hos_id,
				#{item.copy_code,jdbcType=VARCHAR} as copy_code,
				#{item.in_id,jdbcType=INTEGER} as in_id,
				#{item.source_money,jdbcType=FLOAT} as source_money
			FROM dual
		</foreach>
		) a
		LEFT JOIN hos_source b
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id
			AND b.source_attr = 1
			AND rownum=1
		ORDER BY b.source_code
	</insert>
	
	<!-- 修改入库资金来源 -->
	<update id="updateMatInResource" parameterType="java.util.Map">
		UPDATE MAT_IN_RESOURCE
		SET source_money = #{source_money,jdbcType=FLOAT}
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</update>
	
	<!-- 删除入库资金来源 -->
	<delete id="deleteMatInResource" parameterType="java.util.Map">
		DELETE FROM MAT_IN_RESOURCE
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id = #{in_id,jdbcType=INTEGER}
	</delete>
	
	<!-- 批量删除入库资金来源 -->
	<delete id="deleteMatInResourceBatch" parameterType="java.util.List">
		DELETE FROM MAT_IN_RESOURCE
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<!-- 入库确认 -->
	<select id="confirmCommonIn" statementType="CALLABLE"
		parameterType="java.util.Map" resultType="java.lang.String">
		<![CDATA[
			{call mat_in_confirm(#{group_id,jdbcType=INTEGER}, #{hos_id,jdbcType=INTEGER}, 
				#{copy_code,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, #{in_ids,jdbcType=VARCHAR},#{confirm_date,jdbcType=VARCHAR}, 
				#{msg, mode=OUT, jdbcType=VARCHAR})}
		]]>
	</select>

	<select id="confirmCommonInBack" statementType="CALLABLE"
		parameterType="java.util.Map" resultType="java.lang.String">
		<![CDATA[
			{call mat_in_back_confirm(#{group_id,jdbcType=INTEGER}, #{hos_id,jdbcType=INTEGER}, 
				#{copy_code,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, #{in_ids,jdbcType=VARCHAR}, #{confirm_date,jdbcType=VARCHAR}, 
				#{msg, mode=OUT, jdbcType=VARCHAR})}
		]]>
	</select>
	
	<!-- 根据主键Ids获取主表List -->
	<select id="queryMatInMainByIds" parameterType="java.util.Map"
		resultMap="matInMain">
		SELECT group_id, hos_id, copy_code, in_id,
			in_no, year, month, bus_type_code, sup_no, sup_id, amount_money, 
			store_id, store_no, in_date, brief, stocker, maker, 1 state, protocol_code,
			app_dept, proj_id,stock_type_code, bill_state
		FROM MAT_IN_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND in_id in (${in_ids})
	</select>

	<!-- 根据主键Ids获取明细表List -->
	<select id="queryMatInDetailByIds" parameterType="java.util.Map"
		resultMap="matInDetail">
		SELECT a.group_id, a.hos_id, a.copy_code,
			a.in_id, a.in_detail_id, a.inv_id, a.inv_no, a.batch_no, a.batch_sn,
			a.price, a.amount, a.amount_money, a.sell_price, a.sell_money,
			a.sale_price, a.sale_money, a.allot_price,
			a.allot_money, a.pack_code, a.num_exchange, a.pack_price, a.num, a.sn, a.bar_code,
			a.inva_date,
			a.disinfect_date, a.location_id, a.note, b.is_per_bar, b.is_highvalue
			,a.fac_date,a.disinfect_no,a.cert_id
		FROM MAT_IN_DETAIL a
		LEFT JOIN MAT_INV_DICT b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id
			AND a.copy_code = b.copy_code AND a.inv_id = b.inv_id
			AND b.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.in_id in (${in_ids})
	</select>

	<!-- 获取上一张入库单ID -->
	<select id="queryMatInBefore" parameterType="java.util.Map"
		resultType="String">
		SELECT MAX(in_id)
		FROM MAT_IN_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
			AND in_id &lt; #{in_id,jdbcType=INTEGER}
	</select>

	<!-- 获取下一张入库单ID -->
	<select id="queryMatInNext" parameterType="java.util.Map"
		resultType="String">
		SELECT MIN(in_id)
		FROM MAT_IN_MAIN
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND store_id = #{store_id,jdbcType=INTEGER}
			AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
			AND in_id &gt; #{in_id,jdbcType=INTEGER}
	</select>
	
	<!-- 	关系表 -->
	<insert id="addRelaBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			INSERT INTO sup_delivery_in_rela (
				group_id		,
				hos_id		,
				copy_code		,
				in_id		,
				in_detail_id		,
				delivery_id		,
				delivery_no		,
				inv_id		,
				price		,
				in_amount		,
				delivery_amount,
				is_com
			) values (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.in_id,jdbcType=INTEGER},
				#{item.in_detail_id,jdbcType=INTEGER},
				#{item.delivery_id,jdbcType=INTEGER},
				#{item.delivery_no,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.price,jdbcType=INTEGER},
				#{item.in_amount,jdbcType=INTEGER},
				#{item.delivery_amount,jdbcType=INTEGER},
				#{item.is_com,jdbcType=INTEGER}
			)
		</foreach>
	</insert>
	
	<!-- 批量删除入库数量对应关系 -->
	<delete id="deleteMatInAmountBatch" parameterType="java.util.List">
		DELETE FROM sup_delivery_in_rela
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and in_id = #{item.in_id,jdbcType=INTEGER}
			and is_com = #{item.is_com,jdbcType=INTEGER}
<!-- 			<if test="item.in_detail_id != null and item.in_detail_id != ''"> -->
<!-- 				and in_detail_id = #{item.in_detail_id,jdbcType=INTEGER} -->
<!-- 			</if> -->
			
		</foreach>
	</delete>
	
	<delete id="deleteDeliveryInRela" parameterType="java.util.List">
		DELETE FROM sup_delivery_in_rela
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and in_id = #{in_id,jdbcType=INTEGER}
	</delete>
	
	<select id="queryInvInDetail" parameterType="java.util.Map" resultMap="matInDetail">
	    with in_detail as(
		select 
	          mim.in_no,mim.confirm_date,mim.in_date,
	          midd.inv_code,midd.inv_name,midd.inv_model,
	          hu.unit_name,sum(nvl(mid.amount,0)) amount,
	          mid.price,sum(nvl(mid.amount_money,0)) amount_money,
	          mid.batch_no,mid.batch_sn,mid.bar_code,hsd.sup_name,
	          hfd.fac_name,m.user_name maker_name,hstd.store_name,
	          s.emp_name stocker_name, mbt.bus_type_name
	          
	        from mat_in_detail mid
	        left join mat_in_main mim
	        on mim.group_id=mid.group_id
	        and mim.hos_id=mid.hos_id
	        and mim.copy_code=mid.copy_code
	        and mim.in_id=mid.in_id
	        left join mat_inv_dict midd
	        on midd.group_id=mid.group_id
	        and midd.hos_id=mid.hos_id
	        and midd.copy_code=mid.copy_code
	        and midd.inv_id=mid.inv_id
	        and midd.inv_no=mid.inv_no
	        
	        left join hos_store_dict hstd 
	        on hstd.group_id=mim.group_id
	        and hstd.hos_id=mim.hos_id
	        and hstd.store_id=mim.store_id
	        and hstd.store_no=mim.store_no
	        left join hos_unit hu
	        on hu.group_id=midd.group_id
	        and hu.hos_id=midd.hos_id
	        and hu.unit_code=midd.unit_code
	        and hu.is_stop=0
	        left join hos_sup_dict hsd
	        on hsd.group_id=mim.group_id
	        and hsd.hos_id=mim.hos_id
	        and hsd.sup_id=mim.sup_id
	        and hsd.sup_no=mim.sup_no
	        left join hos_fac_dict hfd
	        on hfd.group_id=midd.group_id
	        and hfd.hos_id=midd.hos_id
	        and hfd.fac_id=midd.fac_id
	        and hfd.fac_no=midd.fac_no
	        left join sys_user m
	        on m.group_id=mim.group_id
	        and m.hos_id=mim.hos_id
	        and m.copy_code=mim.copy_code
	        and m.user_id=mim.maker
	        and m.is_stop=0
	        left join hos_emp s
	        on s.group_id=mim.group_id
	        and s.hos_id=mim.hos_id
	        and s.emp_id=mim.stocker
	        left join mat_bus_type mbt
	        on mbt.bus_type_code=mim.bus_type_code
	        and mbt.is_stop=0
	         
	       
	       
	    <where>
	      mim.bus_type_code <![CDATA[<>]]> 14 
	      and mim.state = 3
	        <if test="group_id != null and group_id != ''">
	          and mim.group_id = #{group_id}
	        </if>
	        <if test="hos_id != null and hos_id != ''">
	          and mim.hos_id = #{hos_id}
	        </if>
	        <if test="copy_code != null and copy_code != ''">
	          and mim.copy_code = #{copy_code}
	        </if>
	        <if test="inv_id!=null and inv_id!=''">
	          and mid.inv_id=#{inv_id}
	        </if>
	        <if test="startDate != null and startDate != '' ">
	          and mim.confirm_date &gt;= to_date(#{startDate},'yyyy-MM-dd')
	        </if>
	        <if test="endDate != null and endDate != '' ">
	          and mim.confirm_date &lt;=to_date( #{endDate},'yyyy-MM-dd')
	      </if>
	      <if test="store_id != null and store_id != ''">
	      and mim.store_id = #{store_id}
	      </if>
	      <if test="store_no != null and store_no != ''">
	      and mim.store_no = #{store_no}
	      </if>
	      <if test="sup_id != null and sup_id != ''">
	       and mim.sup_id = #{sup_id}
	      </if>
	      <if test="sup_id == null or sup_id == ''">
	       and mim.sup_id is null
	      </if>
	      <if test="fac_id != null and fac_id != ''">
	       and midd.fac_id = #{fac_id}
	      </if>
	      <if test="bus_type_code != null and bus_type_code != ''">
	       and mim.bus_type_code=#{bus_type_code}
	      </if>
	      <if test="mat_type_code != null and mat_type_code != ''">
	       and midd.mat_type_id=#{mat_type_code}
	      </if>
	      <if test="batch_no != null and batch_no != ''">
	       and mid.batch_no like  '%${batch_no}%'
	      </if>
	       <if test="bus_type_code == null and bus_type_code == ''">
		     and to_char(mim.bus_type_code) in (
					select perm_code from v_user_data_perm  
					where group_id = #{group_id,jdbcType=INTEGER}
						and hos_id = #{hos_id,jdbcType=INTEGER}
						and table_code = 'MAT_BUS_TYPE'
						and user_id = #{user_id,jdbcType=INTEGER}
						and (is_read = 1 or is_write = 1) 
				)
		    </if>
		    <if test="mat_type_code != null and mat_type_code != ''">
		     
		     and to_char(midd.mat_type_id) in (
					select perm_code from v_user_data_perm  
					where group_id = #{group_id,jdbcType=INTEGER}
						and hos_id = #{hos_id,jdbcType=INTEGER}
						and table_code = 'MAT_TYPE_DICT'
						and user_id = #{user_id,jdbcType=INTEGER}
						and (is_read = 1 or is_write = 1) 
				)
		    </if>
	    </where>
	    group by
	        mim.in_no,mim.confirm_date,mim.in_date,
	        midd.inv_code,midd.inv_name,midd.inv_model,
	        hu.unit_name,mid.price,
	        mid.batch_no,mid.batch_sn,mid.bar_code,hsd.sup_name,
	        hfd.fac_name,m.user_name ,hstd.store_name,
	        s.emp_name , mbt.bus_type_name   
	    order by
	        mim.confirm_date,hstd.store_name,
	        hsd.sup_name,hfd.fac_name
	    )
	    select 
		       in_no,confirm_date,in_date,inv_code,
		       to_char(inv_name) inv_name,inv_model, unit_name,amount,
		       price,amount_money,batch_no,batch_sn,
		       bar_code,sup_name,fac_name,maker_name,
		       store_name,stocker_name,to_char(bus_type_name) bus_type_name
		from in_detail
		union all
		select 
		       null in_no,null confirm_date,null in_date,
		       null inv_code,'合计' inv_name,null inv_model,
		       null unit_name,sum(nvl(amount, 0)) as amount,
		       null price,sum(nvl(amount_money, 0)) as amount_money,
		       null batch_no,null batch_sn,null bar_code,null sup_name,
		       null fac_name,null maker_name,null store_name,
		       null stocker_name,null bus_type_name
		from in_detail    
	      
	</select>
	
	<select id="queryMatInDis" parameterType="java.util.List" resultType="java.util.Map">
		select mior.in_detail_id  from mat_in_order_rela mior
		
		<where>
		  <foreach collection="list" item="item" index="index" open="(" separator="or" close=")">
		  
		  	mior.in_id = #{item.in_id,jdbcType=INTEGER}
		  
		  </foreach>
		
		
		</where>
	
	
	</select>
	
	<delete id="deleteMatInDis" parameterType="java.util.List" >
		delete zj_delivery_in_rela 
		
		<where>
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			IN_DETAIL_ID =
			#{item.IN_DETAIL_ID,jdbcType=INTEGER}
		</foreach>
	</where>
	</delete>
	
</mapper>

