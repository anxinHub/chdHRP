<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.matprepay.MatPrePayMainMapper">
	
	<resultMap id="matPrePayMain" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pre_pay_id" column="pre_pay_id"/>
	<result property="pre_pay_no" column="pre_pay_no"/>
	<result property="pay_bill_type" column="pay_bill_type"/>
	<result property="pay_date" column="pay_date"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="cheq_no" column="cheq_no"/>
	<result property="pay_type_code" column="pay_type_code"/>
	<result property="acct_code" column="acct_code"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="chk_date" column="chk_date"/>
	<result property="is_init" column="is_init"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	<result property="payable_money" column="payable_money"/>
	<result property="pre_pay_money" column="pre_pay_money"/>
	
	</resultMap>
	<!-- 预付款单详细信息   修改页面回值用 Map-->
	<resultMap id="updateMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pre_pay_id" column="pre_pay_id"/>
	<result property="pre_pay_no" column="pre_pay_no"/>
	<result property="pay_bill_type" column="pay_bill_type"/>
	<result property="pay_date" column="pay_date"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_code" column="sup_code"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_term_code" column="pay_term_code"/>
	<result property="pay_term_name" column="pay_term_name"/>
	<result property="cheq_no" column="cheq_no"/>
	<result property="pay_type_code" column="pay_type_code"/>
	<result property="acct_code" column="acct_code"/>
	<result property="payable_money" column="payable_money"/>
	<result property="pre_pay_money" column="pre_pay_money"/>
	<result property="note" column="note"/>
	<result property="maker" column="maker"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="chk_date" column="chk_date"/>
	<result property="is_init" column="is_init"/>
	<result property="state" column="state"/>
	
	</resultMap>
	<!-- 入库单 Map -->
	<resultMap id="inMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pre_pay_id" column="pre_pay_id"/>
	<result property="in_id" column="in_id"/>
	<result property="in_no" column="in_no"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="bus_type_name" column="bus_type_name"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_name" column="sup_name"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_name" column="store_name"/>
	<result property="app_dept" column="app_dept"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="stocker" column="stocker"/>
	<result property="emp_name" column="emp_name"/>
	<result property="in_date" column="in_date"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="confirmer" column="confirmer"/>
	<result property="confirmer_name" column="confirmer_name"/>
	<result property="confirm_date" column="confirm_date"/>
	<result property="payable_money" column="payable_money"/>
	<result property="out_money" column="out_money"/>
	<result property="payed_money" column="payed_money"/>
	<result property="pre_pay_money" column="pre_pay_money"/>
	<result property="init" column="init"/>
	</resultMap>
	
	<!-- 入库单明细 Map -->
	<resultMap id="inDetailMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="in_id" column="in_id"/>
	<result property="in_detail_id" column="in_detail_id"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_no" column="inv_no"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="batch_sn" column="batch_sn"/>
	<result property="batch_no" column="batch_no"/>
	<result property="sn" column="sn"/>
	<result property="price" column="price"/>
	<result property="amount" column="amount"/>
	<result property="payable_money" column="payable_money"/>
	<result property="out_money" column="out_money"/>
	<result property="payed_money" column="payed_money"/>
	<result property="pre_pay_money" column="pre_pay_money"/>
	</resultMap>
	
	<insert id="addMatPrePayMain" useGeneratedKeys="true" >
	
		INSERT INTO MAT_PRE_PAY_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		pre_pay_id
		,
		pre_pay_no
		,
		pay_date
		,
		pay_bill_type
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		cheq_no
		,
		pay_type_code
		,
		acct_code
		,
		payable_money
		,
		pre_pay_money
		,
		is_init
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		note
	
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		MAT_PRE_PAY_MAIN_SEQ.nextval ,
		#{pre_pay_no,jdbcType=VARCHAR},
		#{pay_date ,jdbcType=DATE},
		#{pay_bill_type,jdbcType=VARCHAR},
		#{sup_id,jdbcType=INTEGER},
		#{sup_no,jdbcType=INTEGER},
		#{pay_code,jdbcType=VARCHAR},
		#{cheq_no,jdbcType=VARCHAR},
		#{pay_type_code,jdbcType=VARCHAR},
		#{acct_code,jdbcType=VARCHAR},
		#{payable_money,jdbcType=INTEGER},
		#{pre_pay_money,jdbcType=INTEGER},
		#{is_init,jdbcType=INTEGER},
		#{maker,jdbcType=INTEGER},
		#{make_date,jdbcType=DATE},
		#{checker,jdbcType=INTEGER},
		#{chk_date,jdbcType=DATE},
		#{state,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		)
	
	</insert>
	<insert id="addBatchMatPrePayMain" parameterType="java.util.List" >
	
		INSERT INTO MAT_PRE_PAY_MAIN (
			pre_pay_id
			,
			group_id
			,
			hos_id
			,
			copy_code
			,
			pre_pay_no
			,
			pay_date
			,
			pay_bill_type
			,
			sup_id
			,
			sup_no
			,
			pay_code
			,
			cheq_no
			,
			pay_type_code
			,
			acct_code
			,
			payable_money
			,
			pre_pay_money
			,
			is_init
			,
			maker
			,
			make_date
			,
			checker
			,
			chk_date
			,
			state
			,
			note
		
		) select MAT_PRE_PAY_MAIN_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.pre_pay_no,jdbcType=VARCHAR}
			,
			#{item.pay_date,jdbcType=DATE}
			,
			#{item.pay_bill_type,jdbcType=VARCHAR}
			,
			#{item.sup_id,jdbcType=INTEGER}
			,
			#{item.sup_no,jdbcType=INTEGER}
			,
			#{item.pay_code,jdbcType=VARCHAR}
			,
			#{item.cheq_no,jdbcType=VARCHAR}
			,
			#{item.pay_type_code,jdbcType=VARCHAR}
			,
			#{item.acct_code,jdbcType=VARCHAR}
			,
			#{item.payable_money,jdbcType=INTEGER}
			,
			#{item.pre_pay_money,jdbcType=INTEGER}
			,
			#{item.is_init,jdbcType=INTEGER}
			,
			#{item.maker,jdbcType=INTEGER}
			,
			#{item.make_date,jdbcType=DATE},
			,
			#{item.checker,jdbcType=INTEGER}
			,
			#{item.chk_date,jdbcType=DATE},
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			 from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMatPrePayMain" parameterType="java.util.Map">
	
		UPDATE mat_pre_pay_main SET
		pre_pay_no = #{pre_pay_no,jdbcType=VARCHAR}
		,
		pay_date = #{pay_date,jdbcType=DATE}
		,
		pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
		,
		sup_id = #{sup_id,jdbcType=INTEGER}
		,
		sup_no = #{sup_no,jdbcType=INTEGER}
		,
		pay_code = #{pay_code,jdbcType=VARCHAR}
		,
		cheq_no = #{cheq_no,jdbcType=VARCHAR}
		,
		pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
		,
		acct_code = #{acct_code,jdbcType=VARCHAR}
		,
		payable_money = #{payable_money,jdbcType=INTEGER}
		,
		pre_pay_money = #{pre_pay_money,jdbcType=INTEGER}
		,
		maker = #{maker,jdbcType=INTEGER}
		,
		make_date = #{make_date,jdbcType=DATE}
		,
		checker = #{checker,jdbcType=INTEGER}
		,
		chk_date = #{chk_date,jdbcType=DATE}
		,
		is_init = #{is_init,jdbcType=INTEGER}
		,
		state = #{state,jdbcType=INTEGER}
		,
		note = #{note,jdbcType=VARCHAR}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		pre_pay_id =#{pre_pay_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMatPrePayMain" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE MAT_PRE_PAY_MAIN SET
				pre_pay_no = #{item.pre_pay_no,jdbcType=VARCHAR}
				,
				pay_date = #{item.pay_date,jdbcType=DATE}
				,
				pay_bill_type = #{item.pay_bill_type,jdbcType=VARCHAR}
				,
				sup_id = #{item.sup_id,jdbcType=INTEGER}
				,
				sup_no = #{item.sup_no,jdbcType=INTEGER}
				,
				pay_code = #{item.pay_code,jdbcType=VARCHAR}
				,
				cheq_no = #{item.cheq_no,jdbcType=VARCHAR}
				,
				pay_type_code = #{item.pay_type_code,jdbcType=VARCHAR}
				,
				acct_code = #{item.acct_code,jdbcType=VARCHAR}
				,
				payable_money = #{item.payable_money,jdbcType=INTEGER}
				,
				pre_pay_money = #{item.pre_pay_money,jdbcType=INTEGER}
				,
				acct_code = #{item.acct_code,jdbcType=VARCHAR}
				,
				is_init = #{item.is_init,jdbcType=INTEGER}
				,
				maker = #{item.maker,jdbcType=INTEGER}
				,
				make_date = #{item.make_date,jdbcType=DATE}
				,
				checker = #{item.checker,jdbcType=INTEGER}
				,
				chk_date = #{item.chk_date,jdbcType=DATE}
				,
				state = #{item.state,jdbcType=INTEGER}
				,
				note = #{item.note,jdbcType=VARCHAR}
		
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			pre_pay_id = #{item.pre_pay_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatPrePayMain" parameterType="java.util.Map">
	
		DELETE FROM MAT_PRE_PAY_MAIN WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		pre_pay_id = #{pre_pay_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMatPrePayMain" parameterType="java.util.List">
		DELETE FROM MAT_PRE_PAY_MAIN WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				pre_pay_id = #{item.pre_pay_id,jdbcType=INTEGER}
				 and 
				pre_pay_no = #{item.pre_pay_no,jdbcType=INTEGER}
			</foreach>
	
	</delete>
	<select id="queryMatPrePayMain" parameterType="java.util.Map" resultMap="matPrePayMain" >
		SELECT 
		mppm.group_id 	,
		mppm.hos_id		,
		mppm.copy_code	,
		mppm.pre_pay_id 	,
		mppm.pre_pay_no		,
		mppm.pay_date	,
		mppm.pay_bill_type	,
		mppm.sup_id		,
		mppm.sup_no		,
		hsd.sup_name 	,
		mppm.pay_code	,
		mppm.cheq_no	,
		mppm.pay_type_code	,
		mppm.acct_code	,
		mppm.payable_money		,
		mppm.pre_pay_money		,
		mppm.is_init		,
		mppm.maker		,
		su.user_name  maker_name ,
		mppm.make_date	,
		mppm.checker		,
		sysu.user_name  checker_name ,
		mppm.chk_date	,
		mppm.state		,
		mppm.note
		FROM MAT_PRE_PAY_MAIN mppm
		LEFT JOIN HOS_SUP_DICT hsd
			ON
				mppm.group_id = hsd.group_id
				and mppm.hos_id = hsd.hos_id
				and mppm.sup_id = hsd.sup_id
				and mppm.sup_no = hsd.sup_no
				and hsd.is_stop = 0
		LEFT JOIN SYS_USER su
			ON
				mppm.group_id = su.group_id
				and mppm.hos_id = su.hos_id
				and mppm.maker = su.user_id
		LEFT JOIN SYS_USER sysu
			ON
				mppm.group_id = sysu.group_id
				and mppm.hos_id = sysu.hos_id
				and mppm.checker = sysu.user_id
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mppm.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mppm.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mppm.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pre_pay_id != null and pre_pay_id != ''">
		AND mppm.pre_pay_id = #{pre_pay_id,jdbcType=INTEGER}
		</if>
		<if test="pre_pay_no != null and pre_pay_no != ''">
		AND mppm.pre_pay_no like '${pre_pay_no}%'
		</if>
		<if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
		AND mppm.pay_date  between to_date(#{beginDate},'yyyy-MM-dd') and to_date(#{endDate},'yyyy-MM-dd')
		</if>
		<if test="pay_bill_type != null and pay_bill_type != ''">
		AND mppm.pay_bill_type = #{pay_bill_type,jdbcType=VARCHAR}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND mppm.sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND mppm.sup_no = #{sup_no,jdbcType=INTEGER}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND mppm.pay_code = #{pay_code,jdbcType=VARCHAR}
		</if>
		<if test="cheq_no != null and cheq_no != ''">
		AND mppm.cheq_no = #{cheq_no,jdbcType=VARCHAR}
		</if>
		<if test="pay_type_code != null and pay_type_code != ''">
		AND mppm.pay_type_code = #{pay_type_code,jdbcType=VARCHAR}
		</if>
		<if test="acct_code != null and acct_code != ''">
		AND mppm.acct_code = #{acct_code,jdbcType=VARCHAR}
		</if>
		<if test="payable_money != null and payable_money != ''">
		AND mppm.payable_money = #{payable_money,jdbcType=INTEGER}
		</if>
		<if test="pre_pay_money != null and pre_pay_money != ''">
		AND mppm.pre_pay_money = #{pre_pay_money,jdbcType=INTEGER}
		</if>
		<if test="is_init != null and is_init != ''">
		AND mppm.is_init = #{is_init,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND mppm.maker = #{maker,jdbcType=INTEGER}
		</if>
		<!-- <if test="madeDate1 != null and madeDate1 != '' and madeDate2 != null and madeDate2 != ''">
		AND mppm.make_date between to_date(#{madeDate1},'yyyy-MM-dd') and to_date(#{madeDate2},'yyyy-MM-dd')
		</if> -->
		<if test="checker != null and checker != ''">
		AND mppm.checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="chk_date != null and chk_date != ''">
		AND mppm.chk_date = #{chk_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND mppm.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND mppm.note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by mppm.pre_pay_id asc
	</select>
	<select id="queryMatPrePayMainByCode" resultType="com.chd.hrp.mat.entity.MatPrePayMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id 	,
		hos_id		,
		copy_code	,
		pre_pay_id 	,
		pre_pay_no		,
		bill_code	,
		ori_no		,
		bill_type	,
		stock_type_code		,
		bill_date	,
		sup_id		,
		sup_no		,
		pay_code	,
		is_init		,
		payable_money		,
		bill_money		,
		maker		,
		make_date	,
		checker		,
		chk_date	,
		state		,
		note
		FROM MAT_PRE_PAY_MAIN 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		pre_pay_id = #{pre_pay_id,jdbcType=INTEGER} 
	</select>
	<!-- 多表联合查询 预付款单详细信息（修改页面回值用） -->
	<select id="queryMatPrePayMainReturnUpdate" resultMap="updateMap" parameterType="java.util.Map" >
	
		SELECT 
		mppm.group_id,
		mppm.hos_id,
		mppm.copy_code,
		mppm.pre_pay_id,
		mppm.pre_pay_no,
		<!-- t.in_id , -->
		mppm.pay_bill_type,
		mppm.pay_date,
		mppm.sup_id,
		mppm.sup_no,
		hsd.sup_code,
		hsd.sup_name,
		mppm.pay_code,
		mpt.pay_term_code,
		mpt.pay_term_name,
		mppm.cheq_no ,
		mppm.pay_type_code ,
		mppm.acct_code ,
		mppm.payable_money,
		mppm.pre_pay_money ,
		mppm.is_init,
		mppm.maker,
		mppm.make_date,
		mppm.checker,
		mppm.chk_date,
		mppm.state,
		mppm.note
		FROM MAT_PRE_PAY_MAIN  mppm 
	<!-- 	LEFT JOIN  (select group_id, hos_id, copy_code,  pre_pay_id, pre_pay_no, in_id, sum(payable_money) payable_money, 
					sum(bill_money)  bill_money
				from  MAT_PRE_PAY_DETAIL   group by  group_id , hos_id , copy_code ,  pre_pay_id , pre_pay_no ,in_id ) t
			on
				mppm.group_id = t.group_id
				and mppm.hos_id = t.hos_id
				and mppm.copy_code = t.copy_code
				and mppm.pre_pay_id = t.pre_pay_id
				and mppm.pre_pay_no = t.pre_pay_no -->
		LEFT JOIN hos_sup_dict  hsd
			on
				mppm.group_id = hsd.group_id
				and mppm.hos_id = hsd.hos_id
				and mppm.sup_id = hsd.sup_id
				and mppm.sup_no = hsd.sup_no
				and hsd.is_stop = 0
		LEFT JOIN MAT_PAY_TERM mpt
			on
				mppm.group_id = mpt.group_id
				and mppm.hos_id = mpt.hos_id
				and mppm.copy_code = mpt.copy_code
				and mppm.pay_code = mpt.pay_term_id
				and mpt.is_stop = 0
		WHERE 
		mppm.group_id = #{group_id,jdbcType=INTEGER}   and 
		mppm.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		mppm.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		mppm.pre_pay_id = #{pre_pay_id,jdbcType=INTEGER} 
	</select>
	<select id="queryMatPrePayMainByUniqueness" resultType="com.chd.hrp.mat.entity.MatBillMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id	,
		hos_id		,
		copy_code	,
		pre_pay_id		,
		pre_pay_no		,
		bill_code	,
		ori_no		,
		bill_type	,
		stock_type_code		,
		bill_date	,
		sup_id		,
		sup_no		,
		pay_code	,
		is_init		,
		payable_money		,
		bill_money	,
		maker		,
		make_date	,
		checker		,
		chk_date	,
		state		,
		note
		FROM MAT_PRE_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pre_pay_id != null and pre_pay_id != ''">
		AND pre_pay_id = #{pre_pay_id,jdbcType=INTEGER}
		</if>
		<if test="bill_code != null and bill_code != ''">
		AND bill_code = #{bill_code,jdbcType=VARCHAR}
		</if>
		<if test="pre_pay_no != null and pre_pay_no != ''">
		AND pre_pay_no = #{pre_pay_no,jdbcType=VARCHAR}
		</if>
		<if test="ori_no != null and ori_no != ''">
		AND ori_no = #{ori_no,jdbcType=VARCHAR}
		</if>
		<if test="bill_type != null and bill_type != ''">
		AND bill_type = #{bill_type,jdbcType=VARCHAR}
		</if>
		<if test="stock_type_code != null and stock_type_code != ''">
		AND stock_type_code = #{stock_type_code,jdbcType=VARCHAR}
		</if>
		<if test="bill_date != null and bill_date != ''">
		AND bill_date = #{bill_date,jdbcType=DATE}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND sup_no = #{sup_no,jdbcType=INTEGER}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="chk_date != null and chk_date != ''">
		AND chk_date = #{chk_date,jdbcType=DATE}
		</if>
		<if test="is_init != null and is_init != ''">
		AND is_init = #{is_init,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="payable_money != null and payable_money != ''">
		AND payable_money = #{payable_money,jdbcType=INTEGER}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND bill_money = #{bill_money,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 根据 付款单信息 查询 其付款单号是否已存在 -->
	<select id="queryMatPrePayMainExists" resultType="java.lang.Long"  parameterType="java.util.Map" >
	
		SELECT count(pre_pay_no)
		FROM MAT_PRE_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pre_pay_id != null and pre_pay_id != ''">
		AND pre_pay_id = #{pre_pay_id,jdbcType=INTEGER}
		</if>
		<if test="pre_pay_no != null and pre_pay_no != ''">
		AND pre_pay_no = #{pre_pay_no,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 入库单查询 （未全部付款的采购入库单） -->
	<select id="queryMatCommonIn" resultMap="inMap" parameterType="java.util.Map" >
		with in_count as(select group_id, hos_id , copy_code , in_id , sum(amount_money) num1 
						from mat_in_detail WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
						and copy_code = #{copy_code} group by group_id, hos_id , copy_code , in_id),
 			 pre_count as (select group_id, hos_id , copy_code , in_id , sum(pre_pay_money) num2 
 			 				from mat_pre_pay_detail WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
							and copy_code = #{copy_code} group by group_id, hos_id , copy_code , in_id),
 			 nopay_count as(select group_id, hos_id , copy_code , deliver_id in_id , sum(amount_money) num3 
 			 				from mat_nopay_deliver_d WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
							and copy_code = #{copy_code} group by group_id, hos_id , copy_code , deliver_id),
			 pay_count as(select t.group_id ,t.hos_id , t. copy_code ,t.in_id , sum(t.pay_money) num4
			 				from  (select mpd.group_id  ,mpd.hos_id  ,mpd.copy_code  ,mpd.bill_money  ,mpd.payed_money ,
			 						mpd.pay_money  , mbd.in_id , mbd.in_detail_id from  mat_pay_detail  mpd 
							       left join mat_bill_detail  mbd
							            on 
							                 mpd.group_id  = mbd.group_id
							                 and mpd.hos_id  = mbd.hos_id
							                 and mpd.copy_code = mbd.copy_code
							                 and mpd.bill_id = mbd.bill_id
							                 and mpd.bill_detail_id = mbd.bill_detail_id)t
					           WHERE t.group_id = ${group_id}  and t.hos_id = ${hos_id} and t.copy_code = #{copy_code}      
					           group by t.group_id ,t.hos_id , t.copy_code ,t.in_id )
		select 
			mim.group_id , mim.hos_id ,	mim.copy_code,  
			<if test=" init == 0">
			mim.in_id, mim.in_no, mim.bus_type_code, mbt.bus_type_name , 0  init ,
			</if>
			<if test="init == 1">
			mim.deliver_id  in_id, 	mim.deliver_no  in_no, 	1  init ,
			</if>
			mim.sup_id, mim.sup_no, sup.sup_name , 	mim.store_id, mim.store_no, hsd.store_name, mim.app_dept,
			hdd.dept_no, hdd.dept_code, hdd.dept_name, 	mim.stocker, he.emp_name, mim.in_date, 	mim.maker,
			sus.user_name  maker_name , mim.checker, sysu.user_name  checker_name , mim.confirmer, 
			su.user_name  confirmer_name , 	mim.confirm_date , 	a.in_money payable_money 
		from ${table}  mim 
		<if test=" init == 0">
		LEFT JOIN mat_bus_type mbt
				on 
					mim.bus_type_code = mbt.bus_type_code
		</if>
		LEFT JOIN hos_sup_dict sup
				on  
					mim.group_id = sup.group_id
					and mim.hos_id = sup.hos_id
					and mim.sup_id = sup.sup_id
					<!-- and mim.sup_no = sup.sup_no -->
					and sup.is_stop = 0
		LEFT JOIN hos_store_dict hsd
				on  
					mim.group_id = hsd.group_id
					and mim.hos_id = hsd.hos_id
					and mim.store_id = hsd.store_id
					<!-- and mim.store_no = hsd.store_no -->
					and hsd.is_stop = 0
			LEFT JOIN hos_dept_dict  hdd
				on
					mim.group_id = hdd.group_id
					and mim.hos_id = hdd.hos_id
					and mim.app_dept = hdd.dept_id
					and hdd.is_stop = 0
			LEFT JOIN hos_emp he
				on 
					mim.group_id = he.group_id
					and mim.hos_id = he.hos_id
					and mim.stocker = he.emp_id
			LEFT JOIN SYS_USER sus
				ON
				mim.group_id = sus.group_id
				and mim.hos_id = sus.hos_id
				and mim.maker = sus.user_id
			LEFT JOIN SYS_USER sysu
				ON
				mim.group_id = sysu.group_id
				and mim.hos_id = sysu.hos_id
				and mim.checker = sysu.user_id
			LEFT JOIN SYS_USER su
				ON
				mim.group_id = su.group_id
				and mim.hos_id = su.hos_id
				and mim.confirmer = su.user_id
			<if test=" init == 0">
			Left join (select in_id , sum(amount_money) in_money from mat_in_detail  where group_id = ${group_id} 
				 		and hos_id = ${hos_id} and copy_code  = #{copy_code}  group by in_id  ) a
				 on mim.in_id = a.in_id
			</if>
			<if test=" init == 1">
				left join (select deliver_id , sum(amount_money) in_money from mat_nopay_deliver_d 
						where group_id = #{group_id} and hos_id = #{hos_id} and 
						copy_code  = #{copy_code}  group by deliver_id ) a
				ON
					mim.deliver_id  = a.deliver_id
			</if>
		<where>
			<if test="group_id != null and group_id != ''">
			AND mim.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mim.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mim.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="sup_id != null and sup_id != ''">
			AND mim.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="app_dept != null and app_dept != ''">
			AND mim.app_dept = #{app_dept,jdbcType=INTEGER}
			</if>
			<if test="stocker != null and stocker != ''">
			AND mim.stocker = #{stocker,jdbcType=INTEGER}
			</if>
			<!-- 预付款单   入库类型为 采购入库 2 、专购品入库47 -->
			<if test="pay_bill_type == 1 and init == 0 ">
			AND mim.bus_type_code in (2,47)
			</if>
			<if test="store_id != null and store_id != ''">
			AND mim.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="in_no != null and in_no != '' and init == 0 ">
			AND mim.in_no like '${in_no}%'
			</if>
			<if test="in_no != null and in_no != '' and init == 1 ">
			AND mim.deliver_no like '${in_no}%'
			</if>
			<if test="brief != null and brief != ''">
			AND mim.brief like '%${brief}%'
			</if>
			<if test="pre_pay_id  != null and pre_pay_id != '' ">
			AND mim.in_id in ( select distinct(in_id) in_id  from MAT_PRE_PAY_DETAIL 
					where group_id = #{group_id,jdbcType=INTEGER}
					 	and hos_id = #{hos_id,jdbcType=INTEGER}
					 	and copy_code = #{copy_code,jdbcType=VARCHAR}
					 	and pre_pay_id = #{pre_pay_id,jdbcType=INTEGER}) 
			</if> 
			<!-- 剔除 已全部付款的  入库单-->
			<if test=" init == 0 ">
			and  mim.in_id not in (select in_count.in_id  from in_count 
									left  join pre_count 
									on 
										in_count.group_id = pre_count.group_id
										and in_count.hos_id = pre_count.hos_id 
										and in_count.copy_code = pre_count.copy_code
										and in_count.in_id  = pre_count.in_id 
									left  join pay_count 
									on 
										in_count.group_id = pay_count.group_id
										and in_count.hos_id = pay_count.hos_id 
										and in_count.copy_code = pay_count.copy_code
										and in_count.in_id  = pay_count.in_id 
       								where nvl(pre_count.num2,0) + nvl(pay_count.num4,0) = in_count.num1 )	
			</if>
			<!-- 剔除 已全部付款的  期初未付款送货单 -->
			<if test=" init == 1 ">
			and  mim.deliver_id not in ( select nopay_count.in_id  from nopay_count 
									left  join pre_count on 
										nopay_count.group_id = pre_count.group_id
										and nopay_count.hos_id = pre_count.hos_id 
										and nopay_count.copy_code = pre_count.copy_code
										and nopay_count.in_id  = pre_count.in_id 
									left  join pay_count 
									on 
										nopay_count.group_id = pay_count.group_id
										and nopay_count.hos_id = pay_count.hos_id 
										and nopay_count.copy_code = pay_count.copy_code
										and nopay_count.in_id  = pay_count.in_id 
       								where  nvl(pre_count.num2,0) + nvl(pay_count.num4,0) = nopay_count.num3 )	
			</if>
			and mim.state = #{state,jdbcType = INTEGER}
		</where>
		<if test=" init == 0">
		order by mim.in_no 
		</if>
		<if test=" init == 1">
		order by mim.deliver_no 
		</if>
	</select>
	
	<!-- 入库单明细查询 -->
	<select id="queryMatInDetail" resultMap="inDetailMap" parameterType="java.util.Map" >
		
		with pre_detail_sum as( select group_id , hos_id , copy_code , in_id , in_detail_id , sum(pre_pay_money) total
							from mat_pre_pay_detail WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
							and copy_code = ${copy_code} group by group_id, hos_id , copy_code , in_id , in_detail_id
						),
			pay_detail_sum as(select t.group_id ,t.hos_id , t. copy_code ,t.in_id , t.in_detail_id ,
								sum(t.pay_money) pay_money
								from  (select mpd.group_id  ,mpd.hos_id  ,mpd.copy_code  ,mpd.bill_money  ,
										mpd.payed_money  ,mpd.pay_money  , mbd.in_id , mbd.in_detail_id 
												from  mat_pay_detail  mpd 
								       left join mat_bill_detail  mbd
								            on 
								                 mpd.group_id  = mbd.group_id
								                 and mpd.hos_id  = mbd.hos_id
								                 and mpd.copy_code = mbd.copy_code
								                 and mpd.bill_id = mbd.bill_id
								                 and mpd.bill_detail_id = mbd.bill_detail_id)t
						          WHERE t.group_id = ${group_id}  and t.hos_id = ${hos_id} and t.copy_code = ${copy_code}       
						         group by t.group_id ,t.hos_id , t.copy_code ,t.in_id ,t.in_detail_id)
		
		select 
			mid.group_id,
			mid.hos_id,
			mid.copy_code,
			<if test=" init == 0">
			mid.in_id,
			mid.in_detail_id, 
			</if>
			<if test=" init == 1">
			mid.deliver_id  in_id,
			mid.detail_id   in_detail_id , 
			</if>
			mid.inv_id,
			mid.inv_no,
			mic.inv_code,
			mic.inv_name,
			mic.unit_code,
			hu.unit_name ,
			mic.inv_model,
			<if test=" init == 0 ">
			mid.batch_sn,
			mid.sn,
			</if>
			mid.batch_no,
			mid.price,
			mid.amount,
			mid.amount_money  payable_money ,
			nvl((t.out_money) ,0) out_money ,
			(nvl(b.payed_money, 0) + nvl(pay_detail_sum.pay_money,0)) as payed_money ,
			<if test=" pre_pay_id == null ">
			nvl((nvl(t.out_money,0) - nvl(b.payed_money,0)- nvl(pay_detail_sum.pay_money,0)) , 0) pre_pay_money
			</if>
			<if test=" pre_pay_id != null and pre_pay_id !='' ">
			mppd.pre_pay_money 
			</if>
		from ${table}  mid 
		<if test=" init == 0 ">
		LEFT JOIN (select  inv_id , batch_sn , nvl(sum(out_money),0) out_money  
					FROM MAT_FIFO_BALANCE   where group_id = ${group_id} and hos_id = ${hos_id} 
					and copy_code  = ${copy_code}  group by  inv_id , batch_sn) t
				ON 
					mid.inv_id = t.inv_id
					and mid.batch_sn = t.batch_sn
		</if>
		<if test=" init == 1 ">
		LEFT JOIN (select  inv_id , batch_sn , nvl(sum(out_money),0) out_money  
					FROM MAT_FIFO_BALANCE   where group_id = ${group_id} and hos_id = ${hos_id} 
					and copy_code  = ${copy_code}  group by  inv_id , batch_sn) t
				ON 
					mid.inv_id = t.inv_id
		</if>
		<if test=" init == 0">
		LEFT JOIN  (select in_id ,in_detail_id , nvl(sum(pre_pay_money), 0) payed_money from mat_pre_pay_detail 
						<where>
							group_id = ${group_id} and hos_id = ${hos_id} and copy_code  = ${copy_code} 
							<if test="pre_pay_id != null and pre_pay_id !=''">
								and pre_pay_id &lt;&gt; ${pre_pay_id}
							</if>
						</where>  
						 group by in_id ,in_detail_id  ) b
				on 
					mid.in_id = b.in_id
					and mid.in_detail_id = b.in_detail_id 
		left join pay_detail_sum 
			on 
				mid.in_id = pay_detail_sum.in_id
				and mid.in_detail_id = pay_detail_sum.in_detail_id 
		</if>
		<if test=" init == 1">
		LEFT JOIN  (select in_id ,in_detail_id , nvl(sum(pre_pay_money), 0) payed_money from mat_pre_pay_detail 
						<where>
							group_id = ${group_id} and hos_id = ${hos_id} and copy_code  = #{copy_code} 
							<if test="pre_pay_id != null and pre_pay_id !='' ">
								and pre_pay_id &lt;&gt; ${pre_pay_id}
							</if>
						</where>  
						 group by in_id ,in_detail_id  ) b
				on 
					mid.deliver_id = b.in_id
					and mid.detail_id = b.in_detail_id 
		left join pay_detail_sum 
			on 
				mid.deliver_id = pay_detail_sum.in_id
				and mid.detail_id = pay_detail_sum.in_detail_id 
		
		</if>
		<if test=" pre_pay_id != null and pre_pay_id !='' and init == 0">
		LEFT JOIN   mat_pre_pay_detail mppd
				on 
					mid.group_id = mppd.group_id
					and mid.hos_id = mppd.hos_id 
					and mid.copy_code = mppd.copy_code
					and mid.in_id = mppd.in_id
					and mid.in_detail_id = mppd.in_detail_id 
		</if>
		<if test=" pre_pay_id != null and pre_pay_id !='' and init == 1">
		LEFT JOIN  mat_pre_pay_detail  mppd
				on 
					mid.group_id = mppd.group_id
					and mid.hos_id = mppd.hos_id 
					and mid.copy_code = mppd.copy_code
					and mid.deliver_id = mppd.in_id
					and mid.detail_id = mppd.in_detail_id 
		</if>
		LEFT JOIN  MAT_INV_DICT mic
				on  
					mid.group_id = mic.group_id
					and mid.hos_id = mic.hos_id
					and mid.copy_code = mic.copy_code
					and mid.inv_id = mic.inv_id
					and mid.inv_no = mic.inv_no
		LEFT JOIN  hos_unit hu
				on  
					mic.group_id = hu.group_id
					and mic.hos_id = hu.hos_id
					and mic.unit_code = hu.unit_code
					and hu.is_stop = 0
		<where>
			<if test="group_id != null and group_id != ''">
			AND mid.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != '' and init == 0">
			AND mid.in_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="in_id != null and in_id != '' and init == 1">
			AND mid.deliver_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="pre_pay_id != null and pre_pay_id != '' and init == 0">
			AND mid.in_detail_id  in ( select in_detail_id from mat_pre_pay_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and pre_pay_id = #{pre_pay_id,jdbcType=INTEGER})
			</if>
			<!-- <if test="pre_pay_id == null and init == 0 ">
			AND mid.in_detail_id  not in ( select dd.in_detail_id from pre_detail_sum  pds
											left join  MAT_IN_DETAIL  dd
												on pds.group_id = dd.group_id 
												and pds.hos_id = dd.hos_id 
												and pds.copy_code = dd.copy_code 
												and pds.in_id = dd.in_id 
												and pds.in_detail_id  = dd.in_detail_id
											left join pay_detail_sum pay_s
												on pds.group_id = pay_s.group_id 
													and pds.hos_id = pay_s.hos_id 
													and pds.copy_code = pay_s.copy_code 
													and pds.in_id = pay_s.in_id 
													and pds.in_detail_id  = pay_s.in_detail_id
											where pds.group_id = #{group_id,jdbcType=INTEGER}
												and pds.hos_id = #{hos_id,jdbcType=INTEGER}
												and pds.copy_code = #{copy_code,jdbcType=VARCHAR}
												and pds.in_id = #{in_id,jdbcType=INTEGER}
												and nvl(pds.total,0) + nvl(pay_s.pay_money,0) = dd.amount_money)
			</if> -->
			<if test="pre_pay_id != null and pre_pay_id != '' and init == 1">
			AND mid.detail_id  in ( select in_detail_id from mat_pre_pay_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and pre_pay_id = #{pre_pay_id,jdbcType=INTEGER})
			</if>
			<!-- <if test="pre_pay_id == null and init == 1 ">
			AND mid.detail_id  not in ( select ndd.deliver_id from pre_detail_sum  pds
										left join MAT_NOPAY_DELIVER_D  ndd
											on pds.group_id = ndd.group_id 
											and pds.hos_id = n.hos_id 
											and pds.copy_code = ndd.copy_code 
											and pds.in_id = dd.deliver_id 
											and pds.in_detail_id  = dd.detail_id
										left join pay_detail_sum pay_s
											on pds.group_id = pay_s.group_id 
												and pds.hos_id = pay_s.hos_id 
												and pds.copy_code = pay_s.copy_code 
												and pds.in_id = pay_s.in_id 
												and pds.in_detail_id  = pay_s.in_detail_id
											where pds.group_id = #{group_id,jdbcType=INTEGER}
												and pds.hos_id = #{hos_id,jdbcType=INTEGER}
												and pds.copy_code = #{copy_code,jdbcType=VARCHAR}
												and pds.in_id = #{in_id,jdbcType=INTEGER}
												and nvl(pds.total,0) + nvl(pay_s.pay_money,0) = ndd.amount_money)
			</if>   -->
		</where>
		<if test=" init == 0">
		order by mid.in_no 
		</if>
		<if test=" init == 1">
		order by mid.deliver_no 
		</if>
	</select>
	
	<!-- 新增时查询预付款单明细对应的预付款单主表的Id -->
	<select id="queryMatPrePayMainMaxId" resultType="java.lang.Long" >
		select max(pre_pay_id)  from mat_pre_pay_main
	</select>
	
	<!-- 根据 入库单Id 查询入库单明细Id -->
	<select id="queryIn_detail_id" resultType="java.lang.Long" parameterType="java.util.Map" >
		select in_detail_id  from mat_in_detail
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != ''">
			AND in_id = #{in_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<!-- 审核、消审 -->
	<update id="updateMatPrePayMainState" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE MAT_PRE_PAY_MAIN SET
			checker = #{item.checker,jdbcType=INTEGER}
			,
			chk_date = #{item.chk_date,jdbcType=DATE}
			,
			state = #{item.state,jdbcType=INTEGER}
			
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					and group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=INTEGER}
				</if>
				<if test="item.pre_pay_id != null and item.pre_pay_id != ''">
					and pre_pay_id = #{item.pre_pay_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 入库主表模板打印 -->
	<select id="queryPrePayPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
		mppm.group_id 	,
		mppm.hos_id		,
		mppm.copy_code	,
		mppm.pre_pay_id 	,
		mppm.pre_pay_no		,
		to_char(mppm.pay_date, 'yyyy-MM-dd hh24:mi:ss') pay_date,
		mppm.sup_id		,
		mppm.sup_no		,
		hsd.sup_name 	,
		mppm.pay_code	,
		mpt.pay_term_code,
		mpt.pay_term_name as pay_name,
		mppm.cheq_no	,
		mppm.pay_type_code	,
		mppm.acct_code	,
		mppm.payable_money	sum_payable_money	,
		mppm.pre_pay_money	sum_pre_pay_money	,
		mppm.is_init		,
		mppm.maker		,
		su.user_name  maker_name ,
		to_char(mppm.make_date	, 'yyyy-MM-dd hh24:mi:ss') make_date,
		mppm.checker		,
		sysu.user_name  checker_name ,
		to_char(mppm.chk_date, 'yyyy-MM-dd hh24:mi:ss') chk_date,
		mppm.state		,
		mppm.note	,
		case when mppm.pay_bill_type='1' then '预付款单' end as pay_bill_type
		FROM MAT_PRE_PAY_MAIN mppm
		LEFT JOIN HOS_SUP_DICT hsd
			ON
				mppm.group_id = hsd.group_id
				and mppm.hos_id = hsd.hos_id
				and mppm.sup_id = hsd.sup_id
				and mppm.sup_no = hsd.sup_no
				and hsd.is_stop = 0
		LEFT JOIN SYS_USER su
			ON
				mppm.group_id = su.group_id
				and mppm.hos_id = su.hos_id
				and mppm.maker = su.user_id
		LEFT JOIN SYS_USER sysu
			ON
				mppm.group_id = sysu.group_id
				and mppm.hos_id = sysu.hos_id
				and mppm.checker = sysu.user_id
		LEFT JOIN MAT_PAY_TERM mpt
			on
				mppm.group_id = mpt.group_id
				and mppm.hos_id = mpt.hos_id
				and mppm.copy_code = mpt.copy_code
				and mppm.pay_code = mpt.pay_term_id
				and mpt.is_stop = 0
		where mppm.group_id = #{group_id,jdbcType=NUMERIC}
			and mppm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mppm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mppm.pre_pay_id=#{pre_pay_id,jdbcType=NUMERIC}

	</select>
	<select id="queryPrePayPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT mppm.pre_pay_id  as id,
		mppm.group_id 	,
		mppm.hos_id		,
		mppm.copy_code	,
		mppm.pre_pay_id 	,
		mppm.pre_pay_no		,
		to_char(mppm.pay_date, 'yyyy-MM-dd hh24:mi:ss') pay_date,
		mppm.sup_id		,
		mppm.sup_no		,
		hsd.sup_name 	,
		mppm.pay_code	,
		mpt.pay_term_code,
		mpt.pay_term_name as pay_name,
		mppm.cheq_no	,
		mppm.pay_type_code	,
		mppm.acct_code	,
		mppm.payable_money	sum_payable_money	,
		mppm.pre_pay_money	sum_pre_pay_money	,
		mppm.is_init		,
		mppm.maker		,
		su.user_name  maker_name ,
		to_char(mppm.make_date	, 'yyyy-MM-dd hh24:mi:ss') make_date,
		mppm.checker		,
		sysu.user_name  checker_name ,
		to_char(mppm.chk_date, 'yyyy-MM-dd hh24:mi:ss') chk_date,
		mppm.state		,
		mppm.note,
		case when mppm.pay_bill_type='1' then '预付款单' end as pay_bill_type
		FROM MAT_PRE_PAY_MAIN mppm
		LEFT JOIN HOS_SUP_DICT hsd
			ON
				mppm.group_id = hsd.group_id
				and mppm.hos_id = hsd.hos_id
				and mppm.sup_id = hsd.sup_id
				and mppm.sup_no = hsd.sup_no
				and hsd.is_stop = 0
		LEFT JOIN SYS_USER su
			ON
				mppm.group_id = su.group_id
				and mppm.hos_id = su.hos_id
				and mppm.maker = su.user_id
		LEFT JOIN SYS_USER sysu
			ON
				mppm.group_id = sysu.group_id
				and mppm.hos_id = sysu.hos_id
				and mppm.checker = sysu.user_id
		LEFT JOIN MAT_PAY_TERM mpt
			on
				mppm.group_id = mpt.group_id
				and mppm.hos_id = mpt.hos_id
				and mppm.copy_code = mpt.copy_code
				and mppm.pay_code = mpt.pay_term_id
				and mpt.is_stop = 0
		where mppm.group_id = #{group_id,jdbcType=NUMERIC}
			and mppm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mppm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mppm.pre_pay_id in  (${paraId})

	</select>
	<!-- 入库明细表模板打印 -->
	<select id="queryPrePayPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT mpp.pre_pay_id as id,
		mpp.group_id,
		mpp.hos_id,
		mpp.copy_code,
		mpp.pre_pay_id,
		mpp.pre_detail_id,
		mpp.in_id,
		mpp.in_detail_id,
		mpp.payable_money,
		mpp.pre_pay_money,
		to_char(mim.in_date, 'yyyy-MM-dd hh24:mi:ss') in_date,
		mim.brief,
		mppm.note,
		mim.in_no as inv_no,
		mim.store_id,
		hs.store_id,
		hs.store_name as store_name,
		mim.confirmer as confirmor_name,
		mppm.note as brief,
		mim.amount_money as documents_amount,
		mppm.sup_id,
		mppm.sup_no,
		hsd.sup_name as vendor_name
		FROM mat_pre_pay_detail mpp
		LEFT JOIN MAT_IN_MAIN mim 
			on 
				mpp.group_id=mim.group_id and mpp.hos_id=mim.hos_id
     			and mpp.copy_code=mim.copy_code and mpp.in_id=mim.in_id
		LEFT JOIN HOS_STORE hs 
			on 
				mim.group_id=hs.group_id and mim.hos_id=hs.hos_id and mim.store_id=hs.store_id
		LEFT JOIN MAT_PRE_PAY_MAIN mppm 
			on 
				mim.group_id=mppm.group_id and mim.hos_id=mppm.hos_id and mim.copy_code=mppm.copy_code
		LEFT JOIN HOS_SUP_DICT hsd 
			ON 
				mim.group_id = hsd.group_id and mim.hos_id = hsd.hos_id and mim.sup_id = hsd.sup_id
				and mim.sup_no = hsd.sup_no and hsd.is_stop = 0
		where mpp.group_id = #{group_id,jdbcType=NUMERIC}
			and mpp.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mpp.copy_code = #{copy_code,jdbcType=VARCHAR}
 			<if test="p_num ==1">
				and mpp.pre_pay_id in (${paraId})
				
			</if>
			<if test="p_num ==0">
				and mpp.pre_pay_id=#{pre_pay_id,jdbcType=NUMERIC}
			</if>	
			
		
	</select>
</mapper>

