<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.advice.MatRefChargeMapper">
	
	<resultMap id="refCharge" type="com.chd.hrp.mat.entity.MatRefCharge">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="plan_price" column="plan_price"/>
	<result property="is_com" column="is_com"/>
	<result property="unit_code" column="unit_code"/>
	<result property="charge_item_id" column="charge_item_id"/>
	<result property="charge_item_name" column="charge_item_name"/>
	</resultMap>
	
	<insert id="addMatRefCharge" useGeneratedKeys="true" >
	
		INSERT INTO MAT_REF_CHARGE (
		group_id
		,
		hos_id
		,
		copy_code
		,
		inv_id
		,
		charge_item_id
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{inv_id,jdbcType=INTEGER}
		,
		#{charge_item_id,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatchMatRefCharge" parameterType="java.util.List" >
	
		INSERT INTO MAT_REF_CHARGE (
		group_id
		,
		hos_id
		,
		copy_code
		,
		inv_id
		,
		charge_item_id
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.inv_id,jdbcType=INTEGER}
				,
				#{item.charge_item_id,jdbcType=INTEGER}
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMatRefCharge" parameterType="java.util.Map">
	
		UPDATE MAT_REF_CHARGE SET
		charge_item_id = #{charge_item_id,jdbcType=INTEGER}
		, 
		inv_id =#{inv_id,jdbcType=INTEGER}
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
inv_id =#{inv_id,jdbcType=INTEGER}
		and
charge_item_id = #{charge_item_id,jdbcType=INTEGER}		
	
	</update>
	<update id="updateBatchMatRefCharge" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE MAT_REF_CHARGE SET
			charge_item_id = #{item.charge_item_id},jdbcType=VARCHAR}
			
			WHERE 
			group_id = #{item.group_id},jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id},jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code},jdbcType=VARCHAR}
			 and 
			inv_id = #{item.inv_id},jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMatRefCharge" parameterType="java.util.Map">
	
		DELETE FROM MAT_REF_CHARGE WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		inv_id = #{inv_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMatRefCharge" parameterType="java.util.List">
		DELETE FROM MAT_REF_CHARGE WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				inv_id = #{item.inv_id,jdbcType=INTEGER}
				and 
				charge_item_id = #{item.charge_item_id,jdbcType=INTEGER}	
			</foreach>
	
	</delete>
	<select id="queryMatRefCharge" parameterType="java.util.Map" resultMap="refCharge" >
	
		SELECT 
		mrc.group_id,
		mrc.hos_id,
		mrc.copy_code,
		mrc.inv_id,
		mid.inv_code,
		mid.inv_name,
		mid.inv_model,
		mid.plan_price,
		mid.is_com,
		hu.unit_name unit_code,
		mrc.charge_item_id,
		ccia.charge_item_code||'.'||ccia.charge_item_name charge_item_name
		FROM MAT_REF_CHARGE mrc
		left join mat_inv_dict mid on
		mrc.group_id = mid.group_id
		and mrc.hos_id = mid.hos_id
		and mrc.copy_code = mid.copy_code
		and mrc.inv_id = mid.inv_id
        and mid.is_stop = 0
			left join HOS_UNIT hu on
			mid.group_id = hu.group_id
			and mid.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code
		left join COST_CHARGE_ITEM_ARRT ccia on
		mrc.group_id = ccia.group_id
		and mrc.hos_id = ccia.hos_id
		and mrc.copy_code = ccia.copy_code
		and mrc.charge_item_id = ccia.charge_item_id
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mrc.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mrc.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mrc.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND mrc.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="charge_item_id != null and charge_item_id != ''">
		AND mrc.charge_item_id = #{charge_item_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by mrc.group_id asc
	</select>
	<select id="queryMatRefChargeByCode" resultType="com.chd.hrp.mat.entity.MatRefCharge" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		inv_id,
		charge_item_id
		FROM MAT_REF_CHARGE 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		inv_id = #{inv_id,jdbcType=INTEGER} and
		charge_item_id = #{charge_item_id,jdbcType=INTEGER}
	
	</select>
	<select id="queryMatRefChargeByUniqueness" resultType="com.chd.hrp.mat.entity.MatRefCharge" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		inv_id,
		charge_item_id
		FROM MAT_REF_CHARGE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="charge_item_id != null and charge_item_id != ''">
		AND charge_item_id = #{charge_item_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>

</mapper>

