<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.purchase.make.MatPurMainMapper">
	<resultMap id="matPurPlanMake" type="java.util.Map" > 
		 
		<result property="group_id" column="group_id"/><!-- 集团ID -->
		<result property="hos_id" column="hos_id"/><!-- 医院ID -->
		<result property="copy_code" column="copy_code"/><!-- 账套编码 -->
		<result property="pur_id" column="pur_id"/><!-- 计划单ID -->
		<result property="pur_detail_id" column="pur_detail_id"/><!-- 计划单明细ID -->
		<result property="pur_code" column="pur_code"/><!-- 计划编号 -->
		<result property="dept_id" column="dept_id"/><!-- 科室ID -->
		<result property="dept_no" column="dept_no"/><!-- 科室变更ID -->
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/><!-- 编制部门 -->
		<result property="store_id" column="store_id"/><!-- 科室ID -->
		<result property="store_no" column="store_no"/><!-- 科室变更ID -->
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/><!-- 编制部门 -->
		<result property="brif" column="brif"/><!-- 摘要 -->
		<result property="pur_type" column="pur_type"/><!-- 单据类型 -->
		<result property="plan_type" column="plan_type"/><!-- 计划类型 -->
		
		<result property="pur_hos_id" column="pur_hos_id"/><!-- 采购单位ID -->
		<result property="pur_hos_no" column="pur_hos_no"/><!-- 采购单位ID -->
		<result property="pur_hos_code" column="pur_hos_code"/><!-- 采购单位ID -->
		<result property="pur_hos_name" column="pur_hos_name"/><!-- 采购单位名称 -->
		
		<result property="req_hos_id" column="req_hos_id"/><!-- 采购单位ID -->
		<result property="req_hos_no" column="req_hos_no"/><!-- 采购单位ID -->
		<result property="req_hos_code" column="req_hos_code"/><!-- 采购单位ID -->
		<result property="req_hos_name" column="req_hos_name"/><!-- 请购单位名称 -->
		
		<result property="pay_hos_id" column="pay_hos_id"/><!-- 付款单位ID -->
		<result property="pay_hos_no" column="pay_hos_no"/><!-- 采购单位ID -->
		<result property="pay_hos_code" column="pay_hos_code"/><!-- 采购单位ID -->
		<result property="pay_hos_name" column="pay_hos_name"/><!-- 付款单位名称 -->
		
		<result property="maker" column="maker"/><!-- 制单人 -->
		<result property="make_date" column="make_date"/><!-- 制单日期 -->
		<result property="checker" column="checker"/><!-- 审核人 -->
		<result property="check_date" column="check_date"/><!-- 审核日期 -->
		<result property="state" column="state"/><!-- 状态 -->
		<result property="is_dir" column="is_dir"/>
		<result property="dir_dept_id" column="dir_dept_id"/>
		<result property="dir_dept_no" column="dir_dept_no"/>
		<result property="dir_dept_code" column="dir_dept_code"/>
		<result property="dir_dept_name" column="dir_dept_name"/>
		<result property="stock_no" column="stock_no" />
		<result property="stock_id" column="stock_id" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="arrive_date" column="arrive_date"/><!-- 计划到货日期 -->
		<result property="checkboxstatus" column="checkboxstatus"/>

		<!-- 采购明细字段 返回结果集字段-->
		<result property="inv_id" column="inv_id"/><!-- 材料ID -->
		<result property="inv_no" column="inv_no"/><!-- 材料变更ID -->
		<result property="bid_code" column="bid_code"/><!-- 交易编码 -->
		<result property="inv_code" column="inv_code"/><!-- 材料编码 -->
		<result property="inv_name" column="inv_name"/><!-- 材料名称 -->
		<result property="inv_model" column="inv_model"/><!-- 规格型号 -->
		<result property="unit_name" column="unit_name"/><!-- 计量单位 -->
		<result property="unit_code" column="unit_code"/><!-- 计量单位编码  -->
		<result property="pack_code" column="pack_code"/><!-- 包装单位编码 -->
		<result property="pack_name" column="pack_name"/>
		<result property="num_exchange" column="num_exchange"/><!-- 转换量 -->
		<result property="cur_amount" column="cur_amount"/><!-- 当前库存 -->
		<result property="req_amount" column="req_amount"/><!-- 请购数量 -->
		<result property="num" column="num"/><!-- 包装数量 -->
		<result property="advise_num" column="advise_num"/><!-- 建议采购数量 -->
		<result property="amount" column="amount"/><!-- 采购数量 -->
		<result property="price" column="price"/><!-- 单价 -->
		<result property="amount_money" column="amount_money"/><!-- 金额 -->
		<result property="sup_no" column="sup_no"/><!-- 供应商变更号 -->
		<result property="sup_id" column="sup_id"/><!-- 供应商ID -->
		<result property="sup_code" column="sup_code"/><!-- 供应商ID -->
		<result property="sup_name" column="sup_name"/><!-- 供应商名称 -->
		<result property="fac_id" column="fac_id"/><!-- 生厂商ID -->
		<result property="fac_no" column="fac_no"/><!-- 生厂商变更ID -->
		<result property="fac_name" column="fac_name"/><!-- 生厂商名称 -->
		<result property="memo" column="memo"/><!-- 备注 -->
		<result property="req_code" column="req_code"/>
		<result property="app_dept_id" column="app_dept_id"/><!-- 申请科室id -->
		<result property="app_dept_name" column="app_dept_name"/><!-- 申请科室名称 -->
		<result property="app_date" column="app_date"/><!-- 申请日期 -->
		<!-- 科室需求计划主表 返回结果集字段 -->
		<result property="req_id" column="req_id"/><!-- 计划单ID -->
		<result property="req_detail_id" column="req_detail_id"/><!-- 计划单明细ID -->
		<result property="req_code" column="req_code"/><!-- 计划单号 -->
		<result property="maker_name" column="maker_name"/><!-- 制单人名称 -->
		<result property="checker_name" column="checker_name"/><!-- 审核人名字 -->
		<result property="rdate" column="rdate"/><!-- 需求日期 -->
		<result property="amount" column="amount" />
		<result property="price" column="price" />
		<result property="money" column="money" />

		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		<result property="sum_money" column="sum_money" />

		<result property="pack_code" column="pack_code" />
		<result property="pack_name" column="pack_name" />
		<result property="req_rela" column="req_rela"/><!-- 对应关系 字符串 -->
		<result property="pur_amount" column="pur_amount"/><!-- 科室需求采购计划关系 采购数量 -->

		<result property="secu_limit" column="secu_limit" />
		<result property="period_num" column="period_num" />
		<result property="period" column="period" />
		<result property="warn_amount" column="warn_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="secu_limit" column="secu_limit" />
		<result property="differ_amount" column="differ_amount" />
		<result property="differ_num" column="differ_num" />
		<result property="abs_differ" column="abs_differ" />
		<result property="abs_num" column="abs_num" />
		<result property="come_from" column="come_from"/>
		
		<result property="location_name" column="location_name"/><!-- 货位 -->
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="cur_all_amount" column="cur_all_amount"/><!-- 全院库存 -->
		
		<result property="three_in_amount" column="three_in_amount"/>
		<result property="three_out_amount" column="three_out_amount"/>
		<result property="six_in_amount" column="six_in_amount"/>
		<result property="six_out_amount" column="six_out_amount"/>
	</resultMap>
	
	<resultMap id="matReqMatReqStoreMainMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="req_id" column="req_id"/>
		<result property="req_code" column="req_code"/>
		<result property="make_date" column="make_date"/>
		<result property="dept_id" column="dept_id"/>
		<result property="apply_name" column="apply_name"/>
		<result property="store_name" column="store_name"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_name" column="unit_name"/>
		<result property="pack_name" column="pack_name"/>
		<result property="num" column="num"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="amount" column="amount"/>
		<result property="price" column="price"/>
		<result property="money" column="money"/>
		<result property="sup_name" column="sup_name"/>
		<result property="fac_name" column="fac_name"/>
		<result property="memo" column="memo"/>
		<result property="come_from" column="come_from"/>
		<result property="checkboxstatus" column="checkboxstatus"/>
	</resultMap>

	<!-- 查询 采购计划 -->
	<select id="queryMain" parameterType="java.util.Map" resultType="java.util.Map" >
		with rela_tmp as (
		     select a.group_id, a.hos_id, a.copy_code, a.pur_id,a.pur_detail_id, a.pur_amount, b.order_amount
		        from (
		          select group_id, hos_id, copy_code, pur_id, pur_detail_id,sum(nvl(amount, 0)) as pur_amount
		          from mat_pur_detail
		          <where>
		          	<if test="group_id !=null and group_id !='' ">
				    	and group_id = #{group_id,jdbcType=INTEGER}
				    </if>
				    <if test="hos_id !=null and hos_id !='' ">
				      	and hos_id = #{hos_id,jdbcType=INTEGER}
				    </if>
				    <if test="copy_code !=null and copy_code !='' ">
				      	and copy_code = #{copy_code,jdbcType=VARCHAR}
				    </if>
				    and is_closed = 0
		          </where>
		          group by group_id, hos_id, copy_code, pur_id, pur_detail_id
		        ) a left join (
		            select group_id, hos_id, copy_code, pur_id, pur_detail_id, sum(order_amount) as order_amount
		            from mat_pur_order_rela
		            <where>
			          	<if test="group_id !=null and group_id !='' ">
					    	and group_id = #{group_id,jdbcType=INTEGER}
					    </if>
					    <if test="hos_id !=null and hos_id !='' ">
					      	and hos_id = #{hos_id,jdbcType=INTEGER}
					    </if>
					    <if test="copy_code !=null and copy_code !='' ">
					      	and copy_code = #{copy_code,jdbcType=VARCHAR}
					    </if>
		           </where>
		           group by group_id, hos_id, copy_code, pur_id, pur_detail_id
		        ) b on a.group_id = b.group_id
		        	and a.hos_id = b.hos_id
		        	and a.copy_code = b.copy_code
		        	and a.pur_id = b.pur_id 
		        	and a.pur_detail_id=b.pur_detail_id
		),r_tmp as (
		        select aa.group_id,aa.hos_id,aa.copy_code,aa.pur_id, 
		        	nvl(aa.countnum,0) countnum, nvl(bb.equalnum,0) equalnum, nvl(cc.zeronum,0) zeronum
		        from (
		             select group_id,hos_id,copy_code,pur_id,count(0) countnum
		             from rela_tmp
		             group by group_id,hos_id,copy_code,pur_id 
		        ) aa
		        left join (
		             select group_id,hos_id,copy_code,pur_id,count(0) equalnum
		             from rela_tmp
		             where <![CDATA[ nvl(pur_amount,0) <= nvl(order_amount,0) ]]>
		             group by group_id,hos_id,copy_code,pur_id
		        ) bb on aa.group_id=bb.group_id and aa.hos_id=bb.hos_id and aa.copy_code=bb.copy_code and aa.pur_id=bb.pur_id
		        left join (
		             select group_id,hos_id,copy_code,pur_id,count(0) zeronum
		             from rela_tmp
		             where nvl(order_amount,0) = 0
		             group by group_id,hos_id,copy_code,pur_id
		        ) cc on aa.group_id=cc.group_id and aa.hos_id=cc.hos_id and aa.copy_code=cc.copy_code and aa.pur_id=cc.pur_id
		)
	
		select group_id,hos_id,copy_code,pur_id,pur_code,dept_name,store_name,brif,pur_type,pur_hos_name,req_hos_name,pay_hos_name,
          maker,make_date,arrive_date,checker,check_date,state,
          <if test="useAudit == 0">
          		case 
		          	when state = 0 then '已中止'
		          	when state = 2 then '未执行'
		          	when state = 3 then '执行完毕'
		          	else '部分执行' end as state_name,
          </if>
          <if test="useAudit == 1">
          		case 
          			when state = 0 then '已中止'
          			when state = 1 then '未审核'
          			when state = 2 then '已审核'
         		 	when state = 3 then '执行完毕'
          			else '部分执行' end as state_name,
          </if>
          is_dir,dir_dept_id,dir_dept_no,dir_dept_code,dir_dept_name,field_desc,come_from
		from (
			SELECT mpm.group_id, mpm.hos_id, mpm.copy_code,  mpm.pur_id,  mpm.pur_code,
			  hdd.dept_name, hsd.store_name, mpm.brif, mpm.pur_type ,
			  pur.hos_name as pur_hos_name,
			  req.hos_name as req_hos_name,
			  pay.hos_name as pay_hos_name,
			  su.user_name as maker, mpm.make_date, mpm.arrive_date,
			  sus.user_name as checker, mpm.check_date,
			  case when mior.zeronum = 0 and mior.equalnum = mior.countnum then 3 
              	when <![CDATA[ mior.zeronum = 0 and mior.equalnum < mior.countnum ]]> then 4 
              	when <![CDATA[ mior.zeronum > 0 and ( mior.equalnum = 0 or mior.zeronum = mior.countnum)  ]]> then mpm.state
              	when <![CDATA[ mior.zeronum > 0 and mior.zeronum != mior.countnum ]]> then 4
     		  else mpm.state end as state, 
     		  <!-- case  when mpm.state = 0 then '已中止'
					when mpm.state = 2 then '未执行'
          			when mpm.state = 3 then '执行完毕'
          			else '部分执行'
					end as state_name, -->
			  <!-- case when (mior.order_amount &gt; 0 and mior.pur_amount != mior.order_amount) then 4 
                   when (mior.order_amount &gt; 0 and mior.pur_amount = mior.order_amount) then 3 
        	  else mpm.state end as state, -->
			  mpm.is_dir,  mpm.dir_dept_id,  mpm.dir_dept_no,
			  hddd.dept_code dir_dept_code, hddd.dept_name dir_dept_name, mdd.field_desc field_desc, mpm.come_from
		FROM MAT_PUR_MAIN mpm
		left join HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
			and mpm.hos_id = hdd.hos_id
			and mpm.dept_id = hdd.dept_id
		    and hdd.dept_no = mpm.dept_no
		LEFT JOIN hos_store_dict hsd 
			ON mpm.group_id = hsd.group_id 
			AND mpm.hos_id = hsd.hos_id 
			AND mpm.store_id = hsd.store_id 
			AND mpm.store_no = hsd.store_no 
		left join mat_data_dict msl ON  mpm.pur_type = msl.field_value
			and msl.field_code = 'PUR_TYPE'
		 left join mat_data_dict mdd on mpm.come_from = mdd.field_value
      		and mdd.data_code='04005'
      		and mdd.field_code='PUR_FROM'	
		left join v_hos_dict pur on mpm.group_id = pur.group_id
         	and mpm.pur_hos_id = pur.hos_id
         	and pur.is_stop = 0
    	left join v_hos_dict req on mpm.group_id = req.group_id
         	and mpm.req_hos_id = req.hos_id
         	and req.is_stop = 0
    	left join v_hos_dict pay on mpm.group_id = pay.group_id
         	and mpm.pay_hos_id = pay.hos_id
         	and pay.is_stop = 0
		left join SYS_USER su ON mpm.group_id = su.group_id
			and mpm.hos_id = su.hos_id
			and mpm.copy_code = su.copy_code
			and mpm.maker = su.user_id
		left join SYS_USER sus ON mpm.group_id = sus.group_id
			and mpm.hos_id = sus.hos_id
			and mpm.copy_code = sus.copy_code
			and mpm.checker = sus.user_id
	    left join hos_dept_dict hddd on mpm.group_id = hddd.group_id and mpm.hos_id = hddd.hos_id
	    	and mpm.dir_dept_id = hddd.dept_id and hddd.dept_no = mpm.dir_dept_no
		left join r_tmp  mior on mpm.group_id = mior.group_id and mpm.hos_id = mior.hos_id
    		and mpm.copy_code = mior.copy_code and mpm.pur_id = mior.pur_id
		<!-- left join (
            select a.group_id,a.hos_id,a.copy_code,a.pur_id,a.pur_amount,b.order_amount from (
                    select group_id,hos_id,copy_code,pur_id,sum(nvl(amount,0)) as pur_amount 
                     from mat_pur_detail 
                     <where>
                     	<if test="group_id !=null and group_id !='' ">
				      		and group_id = #{group_id,jdbcType=INTEGER}
				      	</if>
				      	<if test="hos_id !=null and hos_id !='' ">
				      		and hos_id = #{hos_id,jdbcType=INTEGER}
				      	</if>
				      	<if test="copy_code !=null and copy_code !='' ">
				      		and copy_code = #{copy_code,jdbcType=VARCHAR}
				      	</if>
                     </where>
                     group by  group_id,hos_id,copy_code,pur_id
              ) a  left join (
                  select group_id,hos_id,copy_code,pur_id,sum(order_amount) as order_amount 
                     from mat_pur_order_rela
                     <where>
                     	<if test="group_id !=null and group_id !='' ">
				      		and group_id = #{group_id,jdbcType=INTEGER}
				      	</if>
				      	<if test="hos_id !=null and hos_id !='' ">
				      		and hos_id = #{hos_id,jdbcType=INTEGER}
				      	</if>
				      	<if test="copy_code !=null and copy_code !='' ">
				      		and copy_code = #{copy_code,jdbcType=VARCHAR}
				      	</if>
                     </where>
                     group by  group_id,hos_id,copy_code,pur_id
              ) b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code and a.pur_id=b.pur_id
        ) mior ON  mpm.group_id = mior.group_id AND mpm.hos_id = mior.hos_id
            AND mpm.copy_code = mior.copy_code AND mpm.pur_id = mior.pur_id --> 
		WHERE
			mpm.group_id = #{group_id}
			and mpm.hos_id = #{hos_id}
			and mpm.copy_code = #{copy_code}
			<if test="begin_date != null and begin_date != ''">
				and mpm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				and  mpm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="dept_id != null and dept_id != '' ">
				and mpm.dept_id = #{dept_id}
			</if>
			<if test="store_id != null and store_id != '' ">
				and mpm.store_id = #{store_id}
			</if>
			<if test="store_id == null or store_id == ''">
				AND( 
					EXISTS(
						SELECT 1
						FROM v_user_data_perm
						WHERE group_id = #{group_id,jdbcType=INTEGER} 
							AND hos_id = #{hos_id,jdbcType=INTEGER} 
							AND user_id = #{user_id,jdbcType=INTEGER} 
							AND table_code = 'HOS_STORE_DICT'
							AND perm_code = to_char(mpm.store_id) 
							AND is_read = 1 AND is_write = 1 
					) 
					OR
					mpm.store_id IS NULL
				)
			</if>
			
			<if test="pur_type != null and pur_type != '' ">
				and mpm.pur_type = #{pur_type}
			</if>
		    <if test="pur_code != null and pur_code != '' ">
				and  mpm.pur_code like '${pur_code}%'
				or Upper( mpm.pur_code) like '${pur_code}%'
				or lower( mpm.pur_code) like '${pur_code}%'
			</if>
			<if test="pur_id != null and pur_id != '' ">
				and  mpm.pur_id = #{pur_id}
			</if>
			<if test="brif != null and brif != '' ">
				and mpm.brif like '%${brif}%'
			</if>
			<if test="is_dir != null and is_dir != '' ">
				and mpm.is_dir = #{is_dir}
			</if>
			<if test="dir_dept_id != null and dir_dept_id != '' ">
				and mpm.dir_dept_id = #{dir_dept_id}
			</if>
			<if test="dir_dept_no != null and dir_dept_no != '' ">
				and mpm.dir_dept_no = #{dir_dept_no}
			</if>
			and mpm.is_collect = 0
		) 
		<where>
			<if test="state != null and state != '' ">
				and state = #{state}
			</if>
		</where> 
		order by pur_id desc
	</select>

	<!-- 根据计划单ID 查询采购计划 -->
	<select id="queryByCode" parameterType="java.util.Map"  resultMap="matPurPlanMake">
		SELECT
		  	mpm.group_id,
		      mpm.hos_id,
		      mpm.copy_code,
		      mpm.pur_id,
		      mpm.pur_code,
		      mpm.dept_id,
		      mpm.dept_no,
		      hdd.dept_code,
		      hdd.dept_name,
		      mpm.store_id, 
		      mpm.store_no, 
		      hsd.store_code, 
		      hsd.store_name, 
		      to_char(mpm.make_date,'yyyy-MM-dd') as make_date,
		      to_char(mpm.arrive_date,'yyyy-MM-dd') as arrive_date,
		      mpm.pur_type,
		      mpm.brif,
		      mpm.pur_hos_id,
		      pur.hos_no pur_hos_no,
		      pur.hos_code pur_hos_code,
		      pur.hos_name pur_hos_name,
		      mpm.req_hos_id,
		      req.hos_no req_hos_no,
		      req.hos_code req_hos_code,
		      req.hos_name req_hos_name,
		      mpm.pay_hos_id,
		      pay.hos_no pay_hos_no,
		      pay.hos_code pay_hos_code,
		      pay.hos_name pay_hos_name,
		      mpm.is_dir,
		      mpm.arrive_date,
		      mpm.dir_dept_id,
		      mpm.dir_dept_no,
		      hddd.dept_code dir_dept_code,
		      hddd.dept_name dir_dept_name,
		      mpm.come_from
		FROM MAT_PUR_MAIN mpm
		left join HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
			and mpm.hos_id = hdd.hos_id
			and mpm.dept_id = hdd.dept_id
			
				and hdd.dept_no = mpm.dept_no
			
		left join v_hos_dict pur on pur.group_id = mpm.group_id
         	and pur.hos_id = mpm.pur_hos_id
         	and pur.is_stop = 0
    	left join v_hos_dict req on req.group_id = mpm.group_id
         	and mpm.req_hos_id = req.hos_id
         	and req.is_stop = 0
    	left join v_hos_dict pay on mpm.group_id = pay.group_id
         	and mpm.pay_hos_id = pay.hos_id
         	and pay.is_stop = 0
		left join HOS_DEPT_DICT hddd ON mpm.group_id = hdd.group_id
			and mpm.hos_id = hddd.hos_id
			and mpm.dir_dept_id = hddd.dept_id
	
				and hddd.dept_no = mpm.dir_dept_no
		LEFT JOIN hos_store_dict hsd 
			ON mpm.group_id = hsd.group_id AND mpm.hos_id = hsd.hos_id 
			AND mpm.store_id = hsd.store_id AND mpm.store_no = hsd.store_no 
		WHERE
		     mpm.group_id = #{group_id}
		     and mpm.hos_id = #{hos_id}
		     and mpm.copy_code = #{copy_code}
		     and mpm.pur_id = #{pur_id}
	</select>

	<!-- 添加采购计划主表数据 -->
	<insert id="add" useGeneratedKeys="true">
		insert into mat_pur_main(
		       group_id,
		       hos_id,
		       copy_code,
		       pur_id,
		       pur_code
		       <if test="pur_type != null and pur_type != '' ">,pur_type </if>
		       <if test="dept_id != null and dept_id != '' ">,dept_id </if>
		       <if test="dept_no != null and dept_no != '' ">,dept_no </if>
		       <if test="maker != null and maker != '' ">,maker </if>
		       <if test="make_date != null and make_date != '' ">,make_date </if>
		       <if test="arrive_date != null and arrive_date != '' ">,arrive_date </if>
		       <if test="is_collect != null and is_collect != '' ">,is_collect </if>
		       <if test="state != null and state != '' ">,state </if>
		       <if test="is_dir != null and is_dir != '' ">,is_dir </if>
		       <if test="brif != null and brif != '' ">,brif </if>
		       <if test="pur_hos_id != null and pur_hos_id != '' ">,pur_hos_id</if>
		       <if test="req_hos_id != null and req_hos_id != '' ">,req_hos_id</if>
		       <if test="pay_hos_id != null and pay_hos_id != '' ">,pay_hos_id</if>
			   <if test="dir_dept_id != null and dir_dept_id != '' ">,dir_dept_id</if>
		       <if test="dir_dept_no != null and dir_dept_no != '' ">,dir_dept_no</if>
		       <if test="come_from != null and come_from != '' ">,come_from</if>
		       <if test="store_id != null and store_id != '' ">,store_id</if>
		       <if test="store_no != null and store_no != '' ">,store_no</if>
		)values(
		       #{group_id,jdbcType=INTEGER},
		       #{hos_id,jdbcType=INTEGER},
		       #{copy_code,jdbcType=VARCHAR},
		       #{pur_id,jdbcType=INTEGER},
		       #{pur_code,jdbcType=VARCHAR}
			   <if test="pur_type != null and pur_type != '' ">,#{pur_type,jdbcType=INTEGER} </if>
		       <if test="dept_id != null and dept_id != '' ">,#{dept_id,jdbcType=INTEGER} </if>
		       <if test="dept_no != null and dept_no != '' ">,#{dept_no,jdbcType=INTEGER} </if>
		       <if test="maker != null and maker != '' ">,#{maker,jdbcType=INTEGER} </if>
		       <if test="make_date != null and make_date != '' ">,to_date(#{make_date},'yyyy/MM/dd')</if>
		       <if test="arrive_date != null and arrive_date != '' ">,to_date(#{arrive_date},'yyyy/MM/dd') </if>
		       <if test="is_collect != null and is_collect != '' ">,#{is_collect,jdbcType=INTEGER} </if>
		       <if test="state != null and state != '' ">,#{state,jdbcType=INTEGER} </if>
		       <if test="is_dir != null and is_dir != '' ">, #{is_dir,jdbcType=INTEGER} </if>
		       <if test="brif != null and brif != '' ">,#{brif,jdbcType=VARCHAR}</if>
		       <if test="pur_hos_id != null and pur_hos_id != '' ">,#{pur_hos_id,jdbcType=INTEGER}</if>
		       <if test="req_hos_id != null and req_hos_id != '' ">,#{req_hos_id,jdbcType=INTEGER}</if>
		       <if test="pay_hos_id != null and pay_hos_id != '' ">,#{pay_hos_id,jdbcType=INTEGER}</if>
		       <if test="dir_dept_id != null and dir_dept_id != '' ">,#{dir_dept_id,jdbcType=INTEGER}</if>
		       <if test="dir_dept_no != null and dir_dept_no != '' ">,#{dir_dept_no,jdbcType=INTEGER}</if>
		       <if test="come_from != null and come_from != '' ">,#{come_from,jdbcType=INTEGER}</if>
		       <if test="store_id != null and store_id != '' ">,#{store_id,jdbcType=INTEGER}</if>
		       <if test="store_no != null and store_no != '' ">,#{store_no,jdbcType=INTEGER}</if>
		) 
	</insert>
	<!-- 查询采购计划主表ID -->
	<select id="queryMatPurNextId" resultType="java.lang.Long" useCache="false" flushCache="true">
		select  MAT_PUR_MAIN_SEQ.Nextval as pur_id from dual
	</select>
	
	<!-- 查询采购计划明细主表ID -->
	<select id="queryMatPurDetailNextId" resultType="java.lang.Long" useCache="false" flushCache="true">
		select  MAT_PUR_DETAIL_SEQ.Nextval as pur_id from dual
	</select>
	
	<!-- 添加采购计划明细 -->
	<insert id="addBatchMatPurDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MAT_PUR_DETAIL(
				pur_detail_id,
				group_id,
				hos_id,
				copy_code,
				pur_id,
				pur_code,
				inv_id,
				inv_no,
				price
				<if test="item.sup_no != null and item.sup_no != '' ">,sup_no </if>
			    <if test="item.sup_id != null and item.sup_id != '' ">,sup_id </if>
			    <if test="item.advise_num != null and item.advise_num != '' ">,advise_num</if>
			    <if test="item.amount != null and item.amount != '' ">,amount </if>
			    <if test="item.num != null and item.num != '' ">,num </if>
			    <if test="item.pack_code != null and item.pack_code != '' ">,pack_code </if>
			    <if test="item.req_amount != null and item.req_amount != '' ">,req_amount </if>
			    <if test="item.num_exchange != null and item.num_exchange != '' ">,num_exchange </if>
			    <if test="item.memo != null and item.memo != '' ">,memo </if>
			    <if test="item.is_closed != null and item.is_closed != '' ">,is_closed </if>
			    <if test="item.app_dept_id != null and item.app_dept_id != '' ">,app_dept_id</if>
			    <if test="item.app_dept_no != null and item.app_dept_no != '' ">,app_dept_no</if>
			    <if test="item.app_date != null and item.app_date != '' ">,app_date</if>
			)values(
				#{item.pur_detail_id,jdbcType=INTEGER},
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.pur_id,jdbcType=INTEGER},
				#{item.pur_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.price,jdbcType=FLOAT}
			    <if test="item.sup_no != null and item.sup_no != '' ">,#{item.sup_no,jdbcType=INTEGER} </if>
		        <if test="item.sup_id != null and item.sup_id != '' ">,#{item.sup_id,jdbcType=INTEGER} </if>
		        <if test="item.advise_num != null and item.advise_num != '' ">,#{item.advise_num,jdbcType=FLOAT} </if>
		        <if test="item.amount != null and item.amount != '' ">,#{item.amount,jdbcType=FLOAT} </if>
		        <if test="item.num != null and item.num != '' ">,#{item.num,jdbcType=INTEGER} </if>
		        <if test="item.pack_code != null and item.pack_code != '' ">,#{item.pack_code,jdbcType=VARCHAR} </if>
		        <if test="item.req_amount != null and item.req_amount != '' ">,#{item.req_amount,jdbcType=FLOAT}</if>
		        <if test="item.num_exchange != null and item.num_exchange != '' ">,#{item.num_exchange,jdbcType=FLOAT}</if>
		        <if test="item.memo != null and item.memo != '' ">,#{item.memo,jdbcType=VARCHAR}</if>
		        <if test="item.is_closed != null and item.is_closed != '' ">,#{item.is_closed,jdbcType=INTEGER} </if>
		        <if test="item.app_dept_id != null and item.app_dept_id != '' ">,#{item.app_dept_id,jdbcType=INTEGER}</if>
		        <if test="item.app_dept_no != null and item.app_dept_no != '' ">,#{item.app_dept_no,jdbcType=INTEGER}</if>
			    <if test="item.app_date != null and item.app_date != '' ">,#{item.app_date,jdbcType=DATE}</if>
			)
		</foreach>
	</insert>
	
	<update id="updateBatchMatPurDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update MAT_PUR_DETAIL 
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.advise_num != null and item.advise_num != ''">
					advise_num = #{item.advise_num,jdbcType=INTEGER},
				</if>
				<if test="item.amount != null and item.amount != ''">
					amount = #{item.amount,jdbcType=INTEGER},
				</if>
				<if test="item.price != null and item.price != ''">
					price = #{item.price,jdbcType=FLOAT},
				</if>
				<if test="item.num != null and item.num != ''">
					num = #{item.num,jdbcType=FLOAT},
				</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">
					num_exchange = #{item.num_exchange,jdbcType=FLOAT},
				</if>
				<if test="item.pack_code != null and item.pack_code != ''">
					pack_code = #{item.pack_code,jdbcType=VARCHAR},
				</if>
				<if test="item.sup_no != null and item.sup_no != ''">
					sup_no = #{item.sup_no,jdbcType=INTEGER},
				</if>
				<if test="item.sup_id != null and item.sup_id != ''">
					sup_id = #{item.sup_id,jdbcType=INTEGER},
				</if>
				<if test="item.memo != null and item.memo != ''">
					memo = #{item.memo,jdbcType=VARCHAR},
				</if>	
				<if test="item.is_closed != null and item.is_closed != ''">
					is_closed = #{item.is_closed,jdbcType=INTEGER},
				</if>
				<if test="item.app_dept_no != null and item.app_dept_no != ''">
					app_dept_no = #{item.app_dept_no,jdbcType=INTEGER},
				</if>
				<if test="item.app_dept_id != null and item.app_dept_id != ''">
					app_dept_id = #{item.app_dept_id,jdbcType=INTEGER},
				</if>
				<if test="item.app_date != null and item.app_date != ''">
					app_date = #{item.app_date,jdbcType=DATE},
				</if>	
			</trim>
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.pur_id != null and item.pur_id != ''">
					and pur_id = #{item.pur_id,jdbcType=INTEGER}
				</if>
				<if test="item.pur_code != null and item.pur_code != ''">
					and pur_code = #{item.pur_code,jdbcType=VARCHAR}
				</if>
				<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
					and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
				</if>
				<if test="item.inv_id != null and item.inv_id != ''">
					and inv_id = #{item.inv_id,jdbcType=INTEGER}
				</if>
			</where> 
		</foreach>
	</update>
	
	<select id="existsMatPurMainStateBatch" parameterType="java.util.List" resultType="java.lang.Long">
		SELECT count(1)
		FROM mat_pur_main
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and pur_id = #{item.pur_id,jdbcType=INTEGER}
			and state > 1
		</foreach>
	</select>
	

	<!-- 按主表ID查询 采购计划明细 -->
	<select id="queryMatPurDetail" parameterType="java.util.Map" resultMap="matPurPlanMake">
			 SELECT distinct
				 mpd.group_id,
				 mpd.hos_id,
				 mpd.copy_code,
				 mpd.pur_id,
				 mpd.pur_detail_id,
				 mpd.inv_id,
				 mpd.inv_no,
				 mid.bid_code, 
				 mid.inv_code,
				 mid.inv_name,
				 mid.inv_model,
				 mid.unit_code,
				 hu.unit_name,
				 case when 
				 	nvl(mpd.app_dept_id,'') is not null 
				 	and nvl(mpd.app_dept_no,'') is not null 
				 then  
				 	mpd.app_dept_id ||','|| mpd.app_dept_no 
				 else '' end as app_dept_id,
				 mpd.app_date,
      			 hdd.dept_code ||' '|| hdd.dept_name as app_dept_name,
      			 nvl(mih2.cur_all_amount,0) as cur_all_amount,
				 nvl(mih.cur_amount,0) as cur_amount,
				 nvl(mpd.advise_num,0) as  advise_num,
				 nvl(mpd.amount,0) as  amount,
				 nvl(mpd.price,0) as price,
				 mpd.amount*mpd.price as amount_money,
				 mpd.num,
				 mpd.num_exchange,
				 mpd.pack_code,
				 hp.pack_name as pack_name,
				 case when 
				 	nvl(mpd.sup_id,'') is not null 
				 	and nvl(mpd.sup_no,'') is not null 
				 then  
				 	mpd.sup_id || ',' || mpd.sup_no 
				 else '' end 
				 as sup_id,
				 hs.sup_code||' '||hs.sup_name as sup_name,
				 mpd.req_amount,
				 hfd.fac_id,
				 hfd.fac_no,
				 hfd.fac_name,
				 mpd.memo,
				 mrpr.req_rela,
				 mpd.is_closed,
				 mld.location_id,
				 mld.location_name,
				 mpm.store_id,
				 mpm.store_no
		    FROM MAT_PUR_DETAIL mpd
		    left join MAT_INV_DICT mid  ON  mpd.group_id = mid.group_id
			    and mpd.hos_id = mid.hos_id
			    and mpd.copy_code = mid.copy_code
			    and mpd.inv_id = mid.inv_id
			    and mpd.inv_no = mid.inv_no
		    left join HOS_PACKAGE hp  ON mpd.group_id = hp.group_id
			    and mpd.hos_id = hp.hos_id
			    and mpd.pack_code = hp.pack_code
			    and hp.is_stop = 0
		    left join HOS_FAC_DICT hfd ON mid.group_id = hfd.group_id
			    and mid.hos_id = hfd.hos_id
			    and mid.fac_id = hfd.fac_id
			    and mid.fac_no = hfd.fac_no
		    left join HOS_SUP hs  ON mpd.group_id = hs.group_id
		    	and mpd.hos_id = hs.hos_id
		    	and mpd.sup_id = hs.sup_id
		    	and hs.is_stop = 0
		    left join HOS_UNIT hu ON mpd.group_id = hu.group_id
			    and mpd.hos_id = hu.hos_id
			    and mid.unit_code = hu.unit_code
			    and hu.is_stop = 0
			left join HOS_DEPT_DICT hdd ON mpd.group_id = hdd.group_id 
				and mpd.hos_id = hdd.hos_id
         		and mpd.app_dept_id = hdd.dept_id and hdd.is_stop = 0
		    left join (
              SELECT inv_id,'['||to_char(wm_concat('{"req_id":'||req_id||',"req_amount":'||req_amount||',"pur_amount":'||pur_amount|| ',"inv_id":'|| inv_id || '}'))||']' req_rela
              FROM MAT_REQ_PUR_RELA
              WHERE
              		group_id = #{group_id}
			        and hos_id = #{hos_id}
			        and copy_code = #{copy_code}
			        and pur_id = #{pur_id}
              GROUP BY inv_id
        	) mrpr ON  mpd.inv_id = mrpr.inv_id
        	left join MAT_PUR_MAIN mpm
        	on mpd.group_id = mpm.group_id
        	and mpd.hos_id = mpm.hos_id
        	and mpd.copy_code = mpm.copy_code
        	and mpd.pur_id = mpm.pur_id
        	left join (select inv_id,sum(cur_amount) as cur_all_amount from MAT_inv_HOLD  group by inv_id)  mih2
		    ON
		        mid.inv_id = mih2.inv_id
        	left join (select store_id,inv_id,sum(cur_amount) as cur_amount from MAT_inv_HOLD  group by inv_id,store_id)  mih
		    ON
		        mid.inv_id = mih.inv_id
		        and mpm.store_id = mih.store_id
        	left join mat_store_inv msi
        	on msi.group_id = mpm.group_id
        	and msi.hos_id = mpm.hos_id
        	and msi.copy_code = mpm.copy_code
        	and msi.store_id = mpm.store_id
        	and msi.inv_id = mpd.inv_id
        	left join mat_location_dict mld
        	on mld.group_id = msi.group_id
        	and mld.hos_id = msi.hos_id
        	and mld.copy_code = msi.copy_code
        	and msi.location_id = mld.location_id
		  WHERE
		        mpd.group_id = #{group_id}
		        and mpd.hos_id = #{hos_id}
		        and mpd.copy_code = #{copy_code}
		        and mpd.pur_id = #{pur_id}
		        and mpd.amount &lt;&gt; 0
		       <!--  and nvl(mld.location_id,0) &lt;&gt; 0 -->
		 order by mpd.inv_id,mld.location_id
		 <!--  order by mpd.pur_detail_id -->
	</select>

	<!-- 删除采购计划主表 -->
	<delete id="deleteMatPurMain" parameterType="java.util.List">
		DELETE FROM MAT_PUR_MAIN WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and pur_id = #{item.pur_id}
		</foreach>
	</delete>

	<!-- 删除明细数据 -->
	<delete id="deleteDetailByPurId" parameterType="java.util.Map">
		delete from mat_pur_detail
		<where>
			<if test="group_id != null and group_id != ''">
				group_id = #{group_id,jdbcType=INTEGER}
			 </if>
			 <if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			 </if>
			 <if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			 </if>
			 <if test="pur_id != null and pur_id != ''">
				and pur_id = #{pur_id,jdbcType=INTEGER}
			 </if>
			 <if test="pur_code != null and pur_code != ''">
				and pur_code = #{pur_code,jdbcType=VARCHAR}
			 </if>
		</where>
	</delete>


	<!-- 删除采购计划明细 -->
	<delete id="deleteMatPurDetail" parameterType="java.util.List">
		DELETE FROM MAT_PUR_DETAIL 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.pur_id != null and item.pur_id != ''">
					and pur_id = #{item.pur_id,jdbcType=INTEGER}
				</if>
				<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
					and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
	</delete>
	
	
	
	<!-- 中止采购计划 -->
	<update id="updateMatPurPlanState" parameterType="java.util.List">
			UPDATE MAT_PUR_MAIN SET
				state = 0
			where
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and pur_id = #{item.pur_id}
				and state = #{item.planState}
		</foreach>
	</update>
	
	<!-- 修改采购计划主表 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE MAT_PUR_MAIN
			<trim prefix="SET" suffixOverrides=",">
				<if test="dept_id != null and dept_id != ''">
					dept_id = #{dept_id},
				</if>
				<if test="dept_no != null and dept_no != ''">
					dept_no = #{dept_no},
				</if>
				<if test="store_id != null and store_id != ''">
					store_id = #{store_id},
				</if>
				<if test="store_no != null and store_no != ''">
					store_no = #{store_no},
				</if>
				<if test="make_date != null and make_date != ''">
					make_date = to_date(#{make_date},'yyyy/MM/dd'),
				</if>
				<if test="arrive_date != null and arrive_date != ''">
					arrive_date = to_date(#{arrive_date},'yyyy/MM/dd'),
				</if>
				<if test="pur_type != null and pur_type != ''">
					pur_type = #{pur_type},
				</if>
				<if test="brif != null and brif != ''">
					brif = #{brif},
				</if>
				<if test="is_dir != null and is_dir != ''">
					is_dir = #{is_dir},
				</if>
				<if test="req_hos_id != null and req_hos_id != ''">
					req_hos_id = #{req_hos_id},
				</if>
				<if test="pay_hos_id != null and pay_hos_id != ''">
					pay_hos_id = #{pay_hos_id},
				</if>
				<if test="pur_hos_id != null and pur_hos_id != ''">
					pur_hos_id = #{pur_hos_id},
				</if>
				<if test="dir_dept_id != null and dir_dept_id != ''">
					dir_dept_id = #{dir_dept_id},
				</if>
				<if test="dir_dept_no != null and dir_dept_no != ''">
					dir_dept_no = #{dir_dept_no},
				</if>
			</trim>
		<where>
			<if test="group_id != null and group_id != ''">
				group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="pur_id != null and pur_id != ''">
				and pur_id = #{pur_id}
			</if>
		</where>
	</update>

	<!-- 查询科室需求计划主表 -->
	<select id="queryMatRequireMain" parameterType="java.util.Map" resultMap="matPurPlanMake">
		SELECT
		  mrm.group_id,
		  mrm.hos_id,
		  mrm.copy_code,
		  mrm.req_id,
		  mrm.req_code,
		  to_char(mrm.make_date,'yyyyMM') as make_date,
		  mrm.dept_id,
		  mrm.dept_no,
		  hdd.dept_code,
		  hdd.dept_name,
		  mrm.brif,
		  mrm.maker,
		  maker.user_name as maker_name,
		  checker.user_name as checker_name,
		  mrm.check_date,
		  1 checkboxstatus
		FROM MAT_REQUIRE_MAIN mrm
		left join hos_dept_dict hdd  on mrm.group_id = hdd.group_id
		    and mrm.hos_id = hdd.hos_id
		    and mrm.dept_id = hdd.dept_id
		    and mrm.dept_no = hdd.dept_no
		    
		left join SYS_USER maker ON mrm.group_id = maker.group_id
		    and mrm.hos_id = maker.hos_id
		    and mrm.copy_code = maker.copy_code
		    and mrm.maker = maker.user_id
		left join SYS_USER checker ON  mrm.group_id = checker.group_id
		    and mrm.hos_id = checker.hos_id
		    and mrm.copy_code =checker.copy_code
		    and mrm.maker = checker.user_id
		WHERE
		    mrm.group_id = #{group_id}
		    and mrm.hos_id = #{hos_id}
		    and mrm.copy_code = #{copy_code}
		    and mrm.stock_id = #{stock_id}
		    and to_char(mrm.make_date,'yyyy-MM') = #{make_date}
		    and mrm.req_id not in (
		    	select distinct  req_id from mat_req_pur_rela
          		where hos_id = #{hos_id}
                and group_id = #{group_id}
                and copy_code = #{copy_code}
		    )
		    <if test="req_code != null and req_code !='' ">
		        and mrm.req_code like #{req_code}||'%'
		    </if>
		    <if test="is_quote == 0">
				and mrm.state = 2
			</if>
			<if test="is_dir == 0">
				and mrm.is_dir = 0
			</if>
			<if test="is_dir == 1">
				and mrm.is_dir = 1
			</if>
		    and mrm.is_collect = 1

		<if test="is_quote == 1">
			union
			SELECT distinct
		        mrm.group_id,
		        mrm.hos_id,
		        mrm.copy_code,
		        mrm.req_id,
		        mrm.req_code,
		        to_char(mrm.make_date,'yyyyMM') as make_date,
		        mrm.dept_id,
		        mrm.dept_no,
		        hdd.dept_code,
		        hdd.dept_name,
		        mrm.brif,
		        mrm.maker,
		        maker.user_name as maker_name,
		        checker.user_name as checker_name,
		        mrm.check_date,
		        mpor.checkboxstatus
		      FROM (
		      	select distinct a.group_id, a.hos_id,a.copy_code,a.req_id,b.req_amount,a.amount,
		      	 case when a.amount-b.req_amount=0 then 0 else 1 end  checkboxstatus
		         from (
		         	select group_id,hos_id, copy_code,req_id,sum(nvl(amount,0)) amount
		         	from mat_require_detail
		         	group by group_id,hos_id,copy_code,req_id
		         ) a  join (
		         	select group_id,hos_id,copy_code,req_id,sum(nvl(req_amount,0)) req_amount
		         	from mat_req_pur_rela
		         	group by group_id,hos_id,copy_code,req_id
		         ) b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code =b.copy_code and a.req_id = b.req_id
		      ) mpor join MAT_REQUIRE_MAIN mrm on mpor.group_id = mrm.group_id
		           and mpor.hos_id = mrm.hos_id
		           and mpor.copy_code = mrm.copy_code
		           and mpor.req_id = mrm.req_id
		      left join hos_dept_dict hdd  on mrm.group_id = hdd.group_id
		        and mrm.hos_id = hdd.hos_id
		        and mrm.dept_id = hdd.dept_id
		        and mrm.dept_no = hdd.dept_no
		     left join SYS_USER maker ON mrm.group_id = maker.group_id
		        and mrm.hos_id = maker.hos_id
		        and mrm.copy_code = maker.copy_code
		        and mrm.maker = maker.user_id
		     left join SYS_USER checker ON  mrm.group_id = checker.group_id
		        and mrm.hos_id = checker.hos_id
		        and mrm.copy_code =checker.copy_code
		        and mrm.maker = checker.user_id
		     WHERE  mrm.group_id = #{group_id}
		        and mrm.hos_id = #{hos_id}
		        and mrm.copy_code = #{copy_code}
		        and mrm.stock_id = #{stock_id}
		        and to_char(mrm.make_date,'yyyy-MM') = #{make_date}
		        <if test="req_code != null and req_code !='' ">
		        	and mrm.req_code like #{req_code}||'%'
		        </if>
				<if test="is_dir == 0">
					and mrm.is_dir = 0
				</if>
				<if test="is_dir == 1">
					and mrm.is_dir = 1
				</if>
			    and mrm.is_collect = 1
		</if>
		order by req_id desc
	</select>

	<!-- 查询 材料当前库存明细 -->
	<select id="queryMatInvCurAmountDetail" parameterType="java.util.Map" resultMap="matPurPlanMake">
		SELECT
		  hs.group_id,
		  hs.hos_id,
		  hs.store_id,
		  hs.store_name,
		  mi.inv_id,
		  mi.inv_code,
		  mi.inv_name,
		  mi.inv_model,
		  mi.unit_code,
		  hu.unit_name,
		  mih.cur_amount
		FROM MAT_INV_HOLD mih
		left join HOS_STORE hs
		ON
		   mih.group_id = hs.group_id
		   and mih.hos_id = hs.hos_id
		   and mih.store_id = hs.store_id
		left join MAT_INV mi
		ON
		   mih.group_id = mi.group_id
		   and mih.hos_id = mi.hos_id
		   and mih.copy_code = mi.copy_code
		   and mih.inv_id = mi.inv_id
		left join HOS_UNIT hu
		ON
		   mi.group_id = hu.group_id
		   and mi.hos_id = hu.hos_id
		   and mi.unit_code = hu.unit_code
		   and hu.is_stop = 0
		WHERE
		   mih.group_id = #{group_id}
		   and mih.hos_id = #{hos_id}
		   and mih.copy_code = #{copy_code}
		   and mih.inv_id = #{inv_id}
		   <if test="store_id != null and store_id != ''">
		   and mih.store_id = #{store_id}
		   </if>
	</select>

	<!-- 按科室计划单ID查询 科室需求计划主表数据 -->
	<select id="queryMatRequireMainByCode" parameterType="java.util.Map" resultMap="matPurPlanMake">
		SELECT
		  mrm.group_id,
		  mrm.hos_id,
		  mrm.copy_code,
		  mrm.req_id,
		  mrm.req_code,
		  mrm.stock_id,
		  mrm.stock_no,
		  hsd.store_code,
		  hsd.store_name,
		  to_char(mrm.make_date,'yyyy-MM-dd') as make_date,
		  mrm.rdate
		FROM MAT_REQUIRE_MAIN mrm
		left join HOS_STORE_DICT hsd
		ON
		     mrm.group_id = hsd.group_id
		     and mrm.hos_id = hsd.hos_id
		     and mrm.stock_id = hsd.store_id
		     and mrm.stock_no = hsd.store_no
		WHERE
		     mrm.group_id = #{group_id}
		     and mrm.hos_id = #{hos_id}
		     and mrm.copy_code = #{copy_code}
		     and mrm.req_id = #{req_id}
		order by mrm.req_id desc
	</select>

	<!-- 安全库存导入 -->
	<select id="queryMatPurSafe" parameterType="java.util.Map" resultMap="matPurPlanMake">
		select
		  mid.group_id,
		  mid.hos_id,
		  mid.copy_code,
		  mid.inv_no,
		  mid.inv_id,
		  msi.store_id,
		  hsd.store_no,
		  hsd.store_code,
		  hsd.store_name,
		  mid.inv_code,
		  mid.inv_name,
		  mid.inv_model,
		  hu.unit_code,
		  hu.unit_name,
		  mid.plan_price price,
		  msi.package_code pack_code,
		  hp.pack_name,
		  nvl(msi.num_exchange,0) num_exchange,
		  nvl(msi.period_num,0) period_num,
		  msi.period,
		  nvl(msi.warn_amount,0) warn_amount,
		  nvl(mih.cur_amount,0) cur_amount,
		  nvl(msi.secu_limit,0)  secu_limit,
		  nvl(msi.secu_limit,0) - nvl(mih.cur_amount,0) differ_amount,
		  case when nvl(msi.secu_limit,0) - nvl(mih.cur_amount,0) !=0 then nvl(msi.num_exchange,0) /(nvl(msi.secu_limit,0) - nvl(mih.cur_amount,0))
		  else 0 end differ_num,
		  abs(nvl(msi.secu_limit,0) - nvl(mih.cur_amount,0)) abs_differ,
		  case when nvl(msi.secu_limit,0) - nvl(mih.cur_amount,0) !=0 then abs(nvl(msi.num_exchange,0) /(nvl(msi.secu_limit,0) - nvl(mih.cur_amount,0)))
		  else 0 end abs_num,
		  nvl(hfd.fac_id,0) fac_id,
	      nvl(hfd.fac_no,0) fac_no,
	      nvl(hfd.fac_name,'') fac_name,
	      nvl(hs.sup_id,0) sup_id,
	      nvl(hs.sup_no,0) sup_no,
	      nvl(hs.sup_code,'') sup_code,
	      nvl(hs.sup_name,'') sup_name,
			getMatPurAdviseNum(msi.group_id, msi.hos_id, msi.copy_code, msi.store_id, msi.inv_id) advise_num
		from mat_store_inv msi
		left join mat_inv_dict mid on msi.group_id = mid.group_id
			 and msi.hos_id = mid.hos_id
		     and msi.copy_code = mid.copy_code
		     and msi.inv_id = mid.inv_id
		     and mid.is_stop = 0
		left join hos_unit hu on mid.group_id = hu.group_id
		     and mid.hos_id = hu.hos_id
		     and mid.unit_code = hu.unit_code
		     and hu.is_stop = 0
		left join hos_store_dict hsd on hsd.store_id = msi.store_id
		     and hsd.group_id = msi.group_id
		     and hsd.hos_id = msi.hos_id
		     and hsd.is_stop = 0
		left join hos_package hp on hp.group_id = msi.group_id
		     and hp.hos_id = msi.hos_id
		     and hp.pack_code = msi.package_code
		     and hp.is_stop = 0
		left join mat_inv_hold mih on msi.store_id = mih.store_id
		     and msi.group_id = mih.group_id
		     and msi.hos_id = mih.hos_id
		     and msi.copy_code = mih.copy_code
		     and msi.inv_id = mih.inv_id
		left join hos_fac_dict hfd on hfd.fac_id = mid.fac_id
	         and hfd.group_id = mid.group_id
	         and hfd.hos_id = mid.hos_id
	         and hfd.fac_no = mid.fac_no
	    left join (
	         select
	          	group_id,hos_id,copy_code,inv_id,max(sup_id) sup_id
	          	from mat_inv_sup
	          	group by group_id,hos_id,copy_code,inv_id
      	) mis on mis.group_id = mid.group_id
        	and mis.hos_id = mid.hos_id
        	and mis.copy_code = mid.copy_code
        	and mis.inv_id = mid.inv_id
    	left join hos_sup_dict hs on hs.sup_id = mis.sup_id
         	and hs.group_id = mis.group_id
         	and hs.hos_id = mis.hos_id
         	and hs.is_stop = 0
		<where>
			 <if test="group_id != null and group_id != ''">
				msi.group_id = #{group_id,jdbcType=INTEGER}
			 </if>
			 <if test="hos_id != null and hos_id != ''">
				and msi.hos_id = #{hos_id,jdbcType=INTEGER}
			 </if>
			 <if test="copy_code != null and copy_code != ''">
				and msi.copy_code = #{copy_code,jdbcType=VARCHAR}
			 </if>
			 <if test="is_store == 0">
			 	and msi.store_id = #{store_id,jdbcType=INTEGER}
			 </if>

			 <if test="mat_type_code != null and mat_type_code != ''">
				and mid.mat_type_id  in  (
					select mat_type_id
					from mat_type
                	where mat_type_code like '${mat_type_code}%'
                   		and  is_last = 1
			            <if test="group_id != null and group_id != ''">
							and group_id = #{group_id,jdbcType=INTEGER}
						</if>
						<if test="hos_id != null and hos_id != ''">
							and hos_id = #{hos_id,jdbcType=INTEGER}
						</if>
						<if test="copy_code != null and copy_code != ''">
							and copy_code = #{copy_code,jdbcType=VARCHAR}
						</if>
			 	 )
			</if>

			<if test="inv_code != null and inv_code != ''">
				and (	 mid.inv_code like '%'||#{inv_code}||'%'
		      		  or mid.inv_name like '%'||#{inv_code}||'%'
		      		  or mid.spell_code like '%'||#{inv_code}||'%'
		      		  or mid.wbx_code like '%'||#{inv_code}||'%'
		      		)
			  </if>
				and msi.secu_limit  &gt; 0
			  <if test="is_warn != null and is_warn == 1">
				and nvl(msi.warn_amount,0) - nvl(mih.cur_amount,0) &gt; 0
			  </if>

		</where>
		order by mid.inv_code
	</select>

	<!-- 按多个科室计划单ID 批量查询科室计划单明细 -->
	<select id="queryMatRequireDetailByCode" parameterType="java.util.Map" resultMap="matPurPlanMake">
		SELECT
			mrd.group_id,
			mrd.hos_id,
			mrd.copy_code,
			mrd.inv_id,
			mrd.inv_no,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			mid.unit_code,
			hu.unit_name,
			aa.amount,
			mrd.price,
			aa.amount*mrd.price as amount_money,
			mrm.rdate,
			hp.pack_code,
			hp.pack_name,
			mrd.num_exchange,
			nvl(mih.cur_amount,0) as cur_amount,
			aa.amount as req_amount,
			mrd.num,
			mrd.sup_id,
			mrd.sup_no,
			hsd.sup_name,
			mid.fac_id,
			mid.fac_no,
			hfd.fac_name,
			mrd.memo,
			t.req_rela
		FROM MAT_REQUIRE_DETAIL mrd
		join (
	         select distinct a.group_id ,
	                a.hos_id ,
	                a.copy_code ,
	                a.req_id ,
	                a.inv_id ,
	                a.inv_no ,
	                nvl(a.amount,0) - nvl(b.req_amount,0) amount  from (
	               		select group_id,hos_id, copy_code,req_id,inv_id,inv_no,sum(nvl(amount,0)) amount from mat_require_detail
	               		group by group_id,hos_id,copy_code,req_id,inv_id,inv_no,pack_code
	                ) a left join (
	                	select group_id,hos_id,copy_code,req_id,inv_id,sum(nvl(req_amount,0)) req_amount from mat_req_pur_rela
	                	group by group_id,hos_id,copy_code,req_id,inv_id
	                ) b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code =b.copy_code and a.req_id = b.req_id and a.inv_id = b.inv_id
	         		where  nvl(a.amount,0) >nvl(b.req_amount,0)
	         			and a.group_id = #{group_id}
	              		and a.hos_id = #{hos_id}
	              		and a.copy_code = #{copy_code}
	              		and a.req_id IN (${req_ids})
	    )  aa on aa.inv_id = mrd.inv_id and aa.group_id = mrd.group_id and aa.hos_id = mrd.hos_id and aa.req_id = mrd.req_id
		left join  MAT_REQUIRE_MAIN mrm ON mrd.group_id = mrm.group_id
			and mrd.hos_id = mrm.hos_id
			and mrd.copy_code = mrm.copy_code
			and mrd.req_id = mrm.req_id
		left join MAT_INV_DICT mid ON mrd.group_id = mid.group_id
			and mrd.hos_id = mid.hos_id
			and mrd.copy_code = mid.copy_code
			and mrd.inv_id = mid.inv_id
			and mrd.inv_no = mid.inv_no
		left join hos_unit hu ON mid.unit_code = hu.unit_code
		left join hos_package hp ON mrd.group_id = hp.group_id
			and mrd.hos_id = hp.hos_id
			and mrd.pack_code = hp.pack_code
		left join (
			select a.inv_id,sum(a.cur_amount) as cur_amount
			from MAT_INV_HOLD a group by a.inv_id
		) mih ON mid.inv_id = mih.inv_id
		left join (
			SELECT t.inv_id,sum(t.amount) amount
			FROM MAT_REQUIRE_DETAIL t GROUP BY t.inv_id
		) r ON mid.inv_id = r.inv_id
		left join hos_sup_dict hsd ON mrd.group_id = hsd.group_id
			and mrd.hos_id = hsd.hos_id
			and mrd.sup_id = hsd.sup_id
			and mrd.sup_no = hsd.sup_no
		left join hos_fac_dict hfd ON mid.fac_id = hfd.fac_id and mid.fac_no=hfd.fac_no and mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id
		left join (
	        SELECT ab.inv_id, '[' || to_char(WM_CONCAT('{"req_id":' || ab.req_id || ',"req_amount":' || ab.amount || ',"pur_amount":' || ab.amount || ',"inv_id":' || ab.inv_id || '}')) || ']' AS req_rela
	        from (
	             select
	                a.req_id req_id,
	                a.inv_id inv_id,
	                nvl(a.amount,0) - nvl(b.req_amount,0) amount  from (
	                	select group_id,hos_id, copy_code,req_id,inv_id,inv_no,sum(nvl(amount,0)) amount from mat_require_detail
	               		group by group_id,hos_id,copy_code,req_id,inv_id,inv_no,pack_code
	                ) a left join (
	                	select group_id,hos_id,copy_code,req_id,inv_id,sum(nvl(req_amount,0)) req_amount from mat_req_pur_rela
	                	group by group_id,hos_id,copy_code,req_id,inv_id
	                ) b on a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code =b.copy_code and a.req_id = b.req_id and a.inv_id = b.inv_id
	         	where  nvl(a.amount,0) > nvl(b.req_amount,0)
	         		and a.group_id = #{group_id}
	              	and a.hos_id = #{hos_id}
	              	and a.copy_code = #{copy_code}
	              	and a.req_id IN (${req_ids})
	        ) ab group by ab.inv_id
	    ) t on t.inv_id = mrd.inv_id
		WHERE mrd.group_id = #{group_id}
			and mrd.hos_id = #{hos_id}
			and mrd.copy_code = #{copy_code}
			and mrd.req_id in (${req_ids})
		GROUP BY
			t.req_rela,aa.amount,mrd.group_id,mrd.hos_id,mrd.copy_code,mrd.inv_id,mrd.inv_no,mid.inv_code,mid.inv_name,
		    mid.inv_model,mid.unit_code,hu.unit_name,mrd.price,aa.amount*mrd.price,mrm.rdate,hp.pack_code,hp.pack_name,
			mrd.num_exchange,cur_amount,mrd.num,mrd.sup_id,mrd.sup_no,hsd.sup_name,mid.fac_id,mid.fac_no,hfd.fac_name,
			mrd.memo
		ORDER BY mrd.inv_id
	</select>

	<!-- 按ID查询需求计划单明细 -->
	<select id="queryMatReqByCode" parameterType="java.util.Map"
		resultMap="matPurPlanMake">
		SELECT
		  mrd.req_id,
		  mid.inv_code,
		  mid.inv_name,
		  mid.inv_model,
		  hu.unit_name,
		  mrd.amount,
		  mrd.price,
		  mrd.amount*mrd.price as amount_money,
		  mrm.rdate
		FROM MAT_REQUIRE_DETAIL mrd
		left join MAT_REQUIRE_MAIN mrm
		ON
		     mrd.group_id = mrm.group_id
			  and mrd.hos_id = mrm.hos_id
		      and mrd.copy_code = mrm.copy_code
		      and mrd.req_id = mrm.req_id
		left join MAT_INV_DICT mid
		    ON
		      mrd.group_id = mid.group_id
		      and mrd.hos_id = mid.hos_id
		      and mrd.copy_code = mid.copy_code
		      and mrd.inv_id = mid.inv_id
		      and mrd.inv_no = mid.inv_no
		left join hos_unit hu
			ON  
              mid.group_id= hu.group_id 
              and mid.hos_id=hu.hos_id 
              and mid.unit_code = hu.unit_code
		left join hos_package hp
			ON
			  mrd.group_id = hp.group_id
			  and mrd.hos_id = hp.hos_id
			  and mrd.pack_code = hp.pack_code
		WHERE
		      mrd.group_id = #{group_id}
		      and mrd.hos_id = #{hos_id}
		      and mrd.copy_code = #{copy_code}
		      and mrd.req_id = #{req_id}
		ORDER BY mrd.req_detail_id
	</select>

	<!-- 科室需求采购计划关系 添加 -->
	<insert id="addBatchMatReqPurRela" parameterType="java.util.List">
		insert into mat_req_pur_rela(
		       group_id,
		       hos_id,
		       copy_code,
		       req_id,
		       pur_id,
		       inv_id,
		       req_amount,
		       pur_amount
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			 select
					#{item.group_id},
					#{item.hos_id},
					#{item.copy_code},
					#{item.req_id},
					#{item.pur_id},
					#{item.inv_id},
					#{item.req_amount},
					#{item.pur_amount}
			from dual
		</foreach>
	</insert>

	<!-- 修改科室需求计划单状态为已执行 -->
	<update id="updateMatRequireMain" parameterType="java.util.List">
		UPDATE MAT_REQUIRE_MAIN SET
			STATE = 3
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and req_id = #{item.req_id}
		</foreach>
	</update>

	<!-- 修改科室需求计划单状态为已审核 -->
	<update id="updateMatRequireMainState" parameterType="java.util.List">
		UPDATE MAT_REQUIRE_MAIN SET
			STATE = 2
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and req_id = #{item.req_id}
		</foreach>
	</update>

	<!-- 查询 科室需求计划数量明细 -->
	<select id="queryReqAmountDetail" parameterType="java.util.Map"
		resultMap="matPurPlanMake">
		SELECT
	        mrm.req_id,
	        mrm.req_code,
	        mid.inv_id,
	        mid.inv_no,
	        mid.inv_code,
	        mid.inv_name,
	        mid.inv_model,
	        hu.unit_name,
	        mpd.price,
	        mrd.req_amount,
	        mrd.pur_amount as pur_amount,
	        mrd.pur_amount*mpd.price as amount_money
	    FROM MAT_REQ_PUR_RELA mrd
	    left join MAT_INV_DICT mid
	    ON
	        mrd.group_id = mid.group_id
	        and mrd.hos_id = mid.hos_id
	        and mrd.copy_code = mid.copy_code
	        and mrd.inv_id = mid.inv_id
	        and mid.is_stop = 0
	    left join HOS_UNIT hu
	    ON
	        mid.group_id = hu.group_id
			and mid.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code 
			and hu.is_stop = 0
	    left join MAT_REQUIRE_MAIN mrm
	    ON
	         mrd.group_id = mrm.group_id
	         and mrd.hos_id = mrm.hos_id
	         and mrd.copy_code = mrm.copy_code
	         and mrd.req_id = mrm.req_id
	   left join MAT_PUR_DETAIL mpd
	   ON
	        mrd.group_id = mpd.group_id
	        and mrd.hos_id = mpd.hos_id
	        and mrd.copy_code = mpd.copy_code
	        and mrd.pur_id = mpd.pur_id
	        and mrd.inv_id = mpd.inv_id
		WHERE
		    mrd.group_id = #{group_id}
		    and mrd.hos_id = #{hos_id}
		    and mrd.copy_code = #{copy_code}
		    and mrd.inv_id = #{inv_id}
		    and mrd.req_id = #{req_id}
	</select>

	<!-- 修改科室需求采购计划关系 -->
	<update id="updateBatchMatReqPurRela" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_REQ_PUR_RELA
			<set>
				pur_amount = #{item.pur_amount}
			</set>
			<where>
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and pur_id = #{item.pur_id}
				and inv_id = #{item.inv_id}
				and req_id = #{item.req_id}
			</where>
		</foreach>
	</update>

	<!-- 删除 科室需求采购计划关系 -->
	<delete id="deleteBatchMatReqPurRela" parameterType="java.util.List">
		DELETE FROM MAT_REQ_PUR_RELA WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			copy_code = #{item.copy_code}
			and
			pur_id = #{item.pur_id}
			and
			req_id = #{item.req_id}
			and
			inv_id = #{item.inv_id}
		</foreach>
	</delete>

	<!-- 按采购计划ID查询 仓库需求采购计划对应关系 -->
	<select id="queryMatStoreReqPurRela" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			group_id,
			hos_id,
			copy_code,
			req_id,
			req_detail_id,
			pur_id,
			pur_detail_id
		FROM mat_req_store_pur_rela
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.pur_id != null and item.pur_id != ''">
					and pur_id = #{item.pur_id,jdbcType=INTEGER}
				</if>
				<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
					and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
		
	</select>
	<!-- 按采购计划ID查询 科室需求采购计划对应关系 -->
	<select id="queryMatDeptReqPurRela" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			group_id,
			hos_id,
			copy_code,
			req_id,
			req_detail_id,
			pur_id,
			pur_detail_id
		FROM mat_req_dept_pur_rela
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.pur_id != null and item.pur_id != ''">
					and pur_id = #{item.pur_id,jdbcType=INTEGER}
				</if>
				<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
					and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
		
	</select>
	
	<!-- 查看单据号表中是否存在 -->
	<select id="queryIsExists" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(0) from MAT_NO_MANAGE
		where table_code = 'MAT_PUR_MAIN'
			and prefixe = 'CG'
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="make_year != null and make_year != '' ">
				and year= #{make_year}
			</if>
			<if test="make_month != null and make_month !=''">
				and month=#{make_month}
			</if>
	</select>

	<!-- 查询单据号表中最大单据号 -->
	<select id="queryMaxCode" resultType="java.lang.String" parameterType="java.util.Map">
		select max_no from MAT_NO_MANAGE
		where table_code = 'MAT_PUR_MAIN'
			and prefixe = 'CG'
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="make_year != null and make_year != ''">
				and year = #{make_year}
			</if>
			<if test="make_month != null and make_month !=''">
				and month = #{make_month}
			</if>
	</select>

	<!-- 更新单据号表中最大单据号 -->
	<update id="updateMatNoMatch" parameterType="java.util.Map">
		update mat_no_manage set max_no = #{max_code}
			where table_code = 'MAT_PUR_MAIN'
				and prefixe = 'CG'
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>

			<if test="make_year != null and make_year != ''">
				and year = #{make_year}
			</if>
			<if test="make_month != null and make_month !=''">
				and month = #{make_month}
			</if>

	</update>

	<!-- 向单据号表中插入数据 -->
	<insert id="addMatNoMatch" parameterType="java.util.Map">
		insert into mat_no_manage(group_id,hos_id,copy_code,table_code,year,month,max_no,prefixe)
		values(
			#{group_id ,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER} ,
			#{copy_code,jdbcType=VARCHAR},
			#{table_code,jdbcType=VARCHAR},
			#{make_year,jdbcType=VARCHAR},
			#{make_month,jdbcType=VARCHAR},
			#{max_no,jdbcType=INTEGER},
			#{prefixe,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 入库主表模板打印 -->
	<select id="queryMatMakePrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pur_id, mpm.pur_code
	      , hdd.dept_name, mpm.brif, msl.field_desc AS plan_type, pur.hos_name AS pur_hos_name, req.hos_name AS req_hos_name
	      , pay.hos_name AS pay_hos_name, su.user_name AS maker, to_char(mpm.make_date, 'yyyy-MM-dd hh24:mi:ss') as MAKE_DATE, 
	      sus.user_name AS checker, to_char(mpm.check_date, 'yyyy-MM-dd hh24:mi:ss') as CHECK_DATE
	      , mpm.state, mpm.is_dir, to_char(mpm.arrive_date, 'yyyy-MM-dd hh24:mi:ss') as ARRIVE_DATE, 
	      mpm.dir_dept_id, mpm.dir_dept_no, hddd.dept_code AS dir_dept_code, hddd.dept_name AS dir_dept_name, 
	      sum(mpd.price * mpd.amount) money_sum, 
	      sum(mpd.price * mpd.amount) money_sum_upper
	    FROM MAT_PUR_MAIN mpm
	    left join mat_pur_detail mpd 
	    	on mpm.group_id = mpd.group_id and mpm.hos_id = mpd.hos_id
	    	and mpm.copy_code = mpd.copy_code and mpm.pur_id = mpd.pur_id
	    left join HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
		    and mpm.hos_id = hdd.hos_id
		    and mpm.dept_id = hdd.dept_id
		    and hdd.is_stop = 0 
	    left join MAT_SYS_LIST msl ON mpm.pur_type = msl.field_value
	    	and msl.field_code = 'PUR_TYPE' 
	    left join v_hos_dict pur ON pur.hos_id = mpm.pur_hos_id
		    and pur.group_id = mpm.group_id
		    and pur.is_stop = 0 
	    left join v_hos_dict req ON req.group_id = mpm.group_id
		    and mpm.req_hos_id = req.hos_id
		    and req.is_stop = 0 
	    left join v_hos_dict pay ON mpm.group_id = pay.group_id
		    and mpm.pay_hos_id = pay.hos_id
		    and pay.is_stop = 0 
	    left join SYS_USER su ON mpm.group_id = su.group_id
		    and mpm.hos_id = su.hos_id
		    and mpm.copy_code = su.copy_code
		    and mpm.maker = su.user_id 
	    left join SYS_USER sus ON mpm.group_id = sus.group_id
		    and mpm.hos_id = sus.hos_id
		    and mpm.copy_code = sus.copy_code
		    and mpm.checker = sus.user_id 
		left join hos_dept_dict hddd ON hddd.dept_id = mpm.dir_dept_id
		    and hddd.group_id = mpm.group_id
		    and hddd.hos_id = mpm.hos_id
		    and hddd.is_stop = 0 
		where mpm.group_id = #{group_id,jdbcType=NUMERIC}
			and mpm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mpm.pur_id=#{pur_id,jdbcType=NUMERIC}
			and mpm.state &gt;1
		group by mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pur_id, mpm.pur_code
	      , hdd.dept_name, mpm.brif, msl.field_desc, pur.hos_name, req.hos_name
	      , pay.hos_name, su.user_name, mpm.make_date, sus.user_name, mpm.check_date
	      , mpm.state, mpm.is_dir, mpm.arrive_date, mpm.dir_dept_id, mpm.dir_dept_no
	      , hddd.dept_code, hddd.dept_name
	</select>
		<select id="queryMatMakePrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT mpm.pur_id as id,mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pur_id, mpm.pur_code
      , hdd.dept_name, mpm.brif, msl.field_desc AS plan_type_name, pur.hos_name AS pur_hos_name, req.hos_name AS req_hos_name
      , pay.hos_name AS pay_hos_name, su.user_name AS maker, to_char(mpm.make_date, 'yyyy-MM-dd hh24:mi:ss') as MAKE_DATE, 
      sus.user_name AS checker, to_char(mpm.check_date, 'yyyy-MM-dd hh24:mi:ss') as CHECK_DATE
      , mpm.state, case mpm.is_dir when 0 then '否' when 1 then '是' end is_dir, to_char(mpm.arrive_date, 'yyyy-MM-dd hh24:mi:ss') as ARRIVE_DATE, mpm.dir_dept_id, mpm.dir_dept_no
      , hddd.dept_code AS dir_dept_code, hddd.dept_name AS dir_dept_name,
      hsd.store_name
    FROM MAT_PUR_MAIN mpm
    left join HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
    and mpm.hos_id = hdd.hos_id
    and mpm.dept_id = hdd.dept_id
    and hdd.is_stop = 0 
    left join HOS_STORE_DICT hsd on mpm.group_id = hsd.group_id
    and mpm.hos_id = hsd.hos_id
    and mpm.store_id = hsd.store_id
    and hsd.is_stop =0
    left join MAT_SYS_LIST msl ON mpm.pur_type = msl.field_value
    and msl.field_code = 'PUR_TYPE' 
    left join v_hos_dict pur ON pur.hos_id = mpm.pur_hos_id
    and pur.group_id = mpm.group_id
    and pur.is_stop = 0 
    left join v_hos_dict req ON req.group_id = mpm.group_id
    and mpm.req_hos_id = req.hos_id
    and req.is_stop = 0 
    left join v_hos_dict pay ON mpm.group_id = pay.group_id
    and mpm.pay_hos_id = pay.hos_id
    and pay.is_stop = 0 
    left join SYS_USER su ON mpm.group_id = su.group_id
    and mpm.hos_id = su.hos_id
    and mpm.copy_code = su.copy_code
    and mpm.maker = su.user_id 
    left join SYS_USER sus ON mpm.group_id = sus.group_id
    and mpm.hos_id = sus.hos_id
    and mpm.copy_code = sus.copy_code
    and mpm.checker = sus.user_id 
      left join hos_dept_dict hddd ON hddd.dept_id = mpm.dir_dept_id
    and hddd.group_id = mpm.group_id
    and hddd.hos_id = mpm.hos_id
    and hddd.is_stop = 0 
		where mpm.group_id = #{group_id,jdbcType=NUMERIC}
			and mpm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mpm.pur_id in (${paraId})
	</select>
	
	<!-- 入库明细表模板打印 -->
	<select id="queryMatMakePrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT  mpd.pur_id as id,mpd.group_id, mpd.hos_id, mpd.copy_code, mpd.pur_id, mpd.inv_id, mid.bid_code
			, mpd.inv_no, mid.inv_code, mid.inv_name, mid.inv_model
			, hu.unit_name as unit_code, mih.cur_amount, mpd.amount, mpd.price, mpd.amount * mpd.price AS amount_money
			, mpd.num, mpd.num_exchange, mpd.pack_code, hp.pack_name AS pack_unit_name, mpd.sup_no
			, mpd.sup_id, hs.sup_code as sup_code, hs.sup_name AS sup_name, mpd.req_amount, hfd.fac_id, hfd.fac_no
			, hfd.fac_name, mpd.memo, mpm.state,hdd.dept_name as app_dept_name,to_char(mpd.app_date, 'yyyy-MM-dd hh24:mi:ss') as APP_DATE,
            mpd.ADVISE_NUM,mld.LOCATION_NAME
            
		FROM MAT_PUR_DETAIL mpd
		left join MAT_PUR_MAIN mpm ON mpd.group_id=mpm.group_id and mpd.hos_id=mpm.hos_id and mpd.copy_code = mpm.copy_code and mpd.pur_id = mpm.pur_id 
		left join MAT_INV_DICT mid ON mpd.group_id = mid.group_id
			and mpd.hos_id = mid.hos_id
			and mpd.copy_code = mid.copy_code
			and mpd.inv_id = mid.inv_id 
			and mpd.inv_no = mid.inv_no
		left join MAT_INV_UNIT_MAP mium ON mpd.group_id = mium.group_id
			and mpd.hos_id = mium.hos_id
			and mpd.copy_code = mium.copy_code
			and mpd.inv_id = mium.inv_id
			and mpd.pack_code = mium.pack_code 
		left join HOS_PACKAGE hp ON mium.group_id = hp.group_id
			and mium.hos_id = hp.hos_id
			and mium.pack_code = hp.pack_code 
		left join HOS_FAC_DICT hfd ON mid.group_id = hfd.group_id
			and mid.hos_id = hfd.hos_id
			and mid.fac_id = hfd.fac_id 
			and mid.fac_no = hfd.fac_no
		left join hos_sup_dict hs ON mpd.group_id = hs.group_id
			and mpd.hos_id = hs.hos_id
			and mpd.sup_id = hs.sup_id
			and mpd.sup_no = hs.sup_no 
		left join HOS_UNIT hu ON mpd.group_id = hu.group_id
			and mpd.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code 
		left join (
				SELECT group_id,hos_id,copy_code,inv_id, SUM(cur_amount) AS cur_amount
				FROM MAT_inv_HOLD
				GROUP BY group_id,hos_id,copy_code,inv_id
		) mih ON mid.group_id=mih.group_id and mid.hos_id=mih.hos_id and mid.copy_code=mih.copy_code and mid.inv_id = mih.inv_id 
		left join hos_dept_dict hdd on mpd.group_id=hdd.group_id and mpd.hos_id=hdd.hos_id
            and mpd.app_dept_id =hdd.dept_id and mpd.app_dept_no= hdd.dept_no
        left join mat_store_inv msi on msi.group_id = mpm.group_id
        and msi.hos_id = mpm.hos_id
        and msi.copy_code = mpm.copy_code
        and msi.store_id = mpm.store_id
        and msi.inv_id = mpd.inv_id 
            left join mat_location_dict mld on mld.group_id = msi.group_id
        and mld.hos_id = msi.hos_id
        and mld.copy_code = msi.copy_code
        and msi.location_id = mld.location_id 
		where mpd.group_id = #{group_id,jdbcType=NUMERIC}
			and mpd.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mpd.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="p_num ==1">
				and mpd.pur_id in (${paraId})
			</if>
			<if test="p_num ==0">
				and  mpd.pur_id=#{pur_id,jdbcType=NUMERIC}
			</if>	
		order by hs.sup_name
	</select>
	
	<!-- 模板打印(按供应商汇总明细打印) -->
	<select id="queryMatMakeDetailPrintTemlate" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT to_char(mpm.make_date, 'yyyy-MM-dd') make_date, 
			case 
				when mpm.come_from = 2 then ps.dept_name 
				else 
					case 
						when mpm.come_from = 3 then pd.dept_name 
					else pa.dept_name 
				end 
			end as dept_name, 
			mpd.inv_id, mid.bid_code, mpd.inv_no, mid.inv_code, mid.inv_name, mid.inv_model, mid.unit_code, 
			hu.unit_name, sum(mpd.amount) amount, mpd.price, sum(mpd.amount * mpd.price) AS money, 
			mpd.num, mpd.num_exchange, mpd.pack_code, hp.pack_name AS pack_unit_name, mpd.sup_no, 
			mpd.sup_id, hs.sup_name, sum(mpd.req_amount) req_amount, hfd.fac_id, hfd.fac_no, hfd.fac_name, 
			mpd.memo,mtd.mat_type_name
		FROM MAT_PUR_DETAIL mpd
		left join MAT_PUR_MAIN mpm ON mpd.pur_id = mpm.pur_id 
		left join MAT_INV_DICT mid ON mpd.group_id = mid.group_id
		and mpd.hos_id = mid.hos_id
		and mpd.copy_code = mid.copy_code
		and mpd.inv_id = mid.inv_id 
		and mpd.inv_no = mid.inv_no
		 left join mat_type_dict mtd on mpd.group_id = mtd.group_id
      and mpd.hos_id = mtd.hos_id
      and mpd.copy_code = mtd.copy_code
      and mid.mat_type_id=mtd.mat_type_id
      and mid.mat_type_no=mtd.mat_type_no
		left join MAT_INV_UNIT_MAP mium ON mpd.group_id = mium.group_id
		and mpd.hos_id = mium.hos_id
		and mpd.copy_code = mium.copy_code
		and mpd.inv_id = mium.inv_id
		and mpd.pack_code = mium.pack_code 
		left join HOS_PACKAGE hp ON mium.group_id = hp.group_id
		and mium.hos_id = hp.hos_id
		and mium.pack_code = hp.pack_code 
		left join HOS_FAC_DICT hfd ON mid.group_id = hfd.group_id
		and mid.hos_id = hfd.hos_id
		and mid.fac_id = hfd.fac_id 
		and mid.fac_no = hfd.fac_no
		left join HOS_SUP hs ON mpd.group_id = hs.group_id
		and mpd.hos_id = hs.hos_id
		and mpd.sup_id = hs.sup_id 
		left join HOS_UNIT hu ON mpd.group_id = hu.group_id
		and mpd.hos_id = hu.hos_id
		and mid.unit_code = hu.unit_code 
		left join hos_dept_dict hdd
			on mpd.group_id = hdd.group_id and mpd.hos_id = hdd.hos_id
			and mpd.app_dept_id = hdd.dept_id and mpd.app_dept_no = hdd.dept_no
      	left join (
			select a.apply_id, a.rela_id as pur_id, a.rela_detail_id as pur_detail_id, a.app_detail_id, 
				b.dept_id, b.dept_no, c.dept_code, c.dept_name 
			from mat_apply_pur_rela a
			left join mat_apply_main b 
				on a.group_id = b.group_id and a.hos_id =b.hos_id 
				and a.copy_code = b.copy_code and a.apply_id = b.apply_id 
             left join hos_dept_dict c 
             	on b.group_id = c.group_id and b.hos_id = c.hos_id 
				and b.dept_id = c.dept_id and b.dept_no = c.dept_no
			<where>
					a.group_id = #{group_id,jdbcType=INTEGER}
                and a.hos_id = #{hos_id,jdbcType=INTEGER}
                and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</where>
        ) pa 
        	on mpm.pur_id = pa.pur_id and mpd.pur_detail_id = pa.pur_detail_id
        left join(
			select  mrspr.pur_id, mrspr.pur_detail_id, cc.store_id as dept_id, cc.store_no as dept_no, 
				cc.store_code as dept_code, cc.store_name as dept_name
			from mat_req_store_pur_rela mrspr
			left join mat_req_store_main mss 
				on mrspr.group_id = mss.group_id and mrspr.hos_id =mss.hos_id 
				and mrspr.copy_code = mss.copy_code and mrspr.req_id= mss.req_id 
			left join hos_store_dict cc 
				on mss.group_id = cc.group_id and mss.hos_id = cc.hos_id 
				and mss.stock_id = cc.store_id and mss.stock_no = cc.store_no
			<where>
					mrspr.group_id = #{group_id,jdbcType=INTEGER}
				and mrspr.hos_id = #{hos_id,jdbcType=INTEGER}
				and mrspr.copy_code = #{copy_code,jdbcType=VARCHAR}
			</where>
		) ps 
			on mpm.pur_id = ps.pur_id and mpd.pur_detail_id=ps.pur_detail_id
        left join (
			select mrdpr.pur_id, mrdpr.pur_detail_id, mrm.dept_id, c1.dept_no, c1.dept_code, c1.dept_name
			from mat_req_dept_pur_rela mrdpr 
			left join mat_require_main mrm 
				on mrdpr.group_id = mrm.group_id and mrdpr.hos_id =mrm.hos_id 
				and mrdpr.copy_code = mrm.copy_code and mrdpr.req_id= mrm.req_id
			left join hos_dept_dict c1 
				on mrm.group_id = c1.group_id and mrm.hos_id = c1.hos_id 
				and mrm.dept_id = c1.dept_id and mrm.dept_no = c1.dept_no
			<where>
				 mrdpr.group_id = #{group_id,jdbcType=INTEGER}
				and mrdpr.hos_id = #{hos_id,jdbcType=INTEGER}
				and mrdpr.copy_code = #{copy_code,jdbcType=VARCHAR}
			</where>
		) pd 
			on mpm.pur_id = pd.pur_id and mpd.pur_detail_id = pd.pur_detail_id
		where mpd.group_id = #{group_id,jdbcType=NUMERIC}
			and mpd.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mpd.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mpd.pur_detail_id in (${paraId})
		group by to_char(mpm.make_date, 'yyyy-MM-dd'), 
			mpd.inv_id, mid.bid_code, mpd.inv_no, mid.inv_code, mid.inv_name, mid.inv_model, 
			mid.unit_code, hu.unit_name, mpd.price, mpd.num, mpd.num_exchange, mpd.pack_code, 
			hp.pack_name, mpd.sup_no, mpd.sup_id, hs.sup_name, hfd.fac_id, hfd.fac_no, hfd.fac_name, 
			mpd.memo,mtd.mat_type_name,  case 
				when mpm.come_from = 2 then ps.dept_name 
				else 
					case 
						when mpm.come_from = 3 then pd.dept_name 
					else pa.dept_name 
				end 
			end 
		order by mpd.sup_id
	</select>
	
	<!-- 查询仓库需求计划-->
	<select id="queryMatReqStoreMain" parameterType="java.util.Map" resultType="java.util.Map" >
		select
		     mrsm.group_id,mrsm.hos_id,mrsm.copy_code,mrsm.req_id,mrsm.req_code,
		     to_char(mrsm.make_date,'yyyy-MM-dd') as make_date,mrsd.req_detail_id,
		     mrsm.dept_id,mrsm.dept_no,hdd.dept_code,hdd.dept_name,
		     mrsm.stock_id as store_id,mrsm.stock_no as store_no,hsd.store_code,hsd.store_name,
		     mid.inv_code,mid.inv_name,mid.inv_model,mid.unit_code,hu.unit_name,mid.inv_id,mid.inv_no,
		     nvl(mrsd.amount,0) as req_amount,nvl(mrsd.amount,0) as pur_amount,
		     mdd.field_desc as come_from,
		     mid.bid_code,hfd.fac_name,sup.sup_name--, 0 checkboxstatus
		from mat_req_store_detail mrsd
		left join mat_req_store_main mrsm
		on
		     mrsd.group_id = mrsm.group_id and mrsd.hos_id = mrsm.hos_id
		     and mrsd.copy_code = mrsm.copy_code and mrsd.req_id = mrsm.req_id
		     and mrsd.req_code = mrsm.req_code
		left join hos_dept_dict hdd
		on
		     mrsm.group_id = hdd.group_id and mrsm.hos_id = hdd.hos_id
		     and mrsm.dept_id = hdd.dept_id and mrsm.dept_no = hdd.dept_no
		     
		left join hos_store_dict hsd
		on
		     mrsm.group_id = hsd.group_id and mrsm.hos_id = hsd.hos_id
		     and mrsm.stock_id = hsd.store_id and mrsm.stock_no = hsd.store_no
		  
		left join mat_inv_dict mid
		on
		     mrsd.group_id = mid.group_id and mrsd.hos_id = mid.hos_id 
		     and mrsd.copy_code = mid.copy_code and mrsd.inv_id = mid.inv_id
		     and mrsd.inv_no = mid.inv_no 
		left join hos_fac_dict hfd
		on
			hfd.group_id=mid.group_id
			and hfd.hos_id=mid.hos_id
			and hfd.fac_id=mid.fac_id
			and hfd.is_stop=0
		left join hos_sup_dict sup
		on
			sup.group_id=mrsd.group_id
			and sup.hos_id=mrsd.hos_id
			and sup.sup_id=mrsd.sup_id
			and sup.is_stop=0
		left join hos_unit hu
		on
		     mrsd.group_id = hu.group_id and mrsd.hos_id = hu.hos_id
		     and mid.unit_code = hu.unit_code and hu.is_stop = 0
		left join mat_data_dict mdd
		on
		     mrsm.come_from = mdd.field_value
		     and mdd.data_code = '04004'
		where    mrsm.group_id = #{group_id}
		     and mrsm.hos_id = #{hos_id}
		     and mrsm.copy_code = #{copy_code}
		     and mrsd.is_closed = 0
		     
		     <if test="begin_date != null and begin_date != '' and end_date != null and end_date != ''">
			     and mrsm.make_date between to_date(#{begin_date},'yyyy-MM-dd') and to_date(#{end_date},'yyyy-MM-dd')
		     </if>
		     <if test="stock_id != null and stock_id != '' ">
			     and mrsm.stock_id = #{stock_id}
		     </if>
		      <if test="req_code != null and req_code != '' ">
			     and mrsm.req_code like '%${req_code}%'
		     </if>
		     <if test="is_dir != null and is_dir !='' ">
				and mrsm.is_dir =  #{is_dir}
			 </if>
			 <if test="state != null and state!='' ">
				and mrsm.state =  #{state}
			 </if>
			order by mrsm.req_code,mid.inv_code 
     </select>
     
     <!-- 组装汇总的仓库明细数据 -->
     <select id="queryStoreNewDetail" parameterType="java.util.List" resultType="java.util.Map" >
     	with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.req_id != null and item.req_id != ''">
						#{item.req_id,jdbcType=INTEGER} as req_id,
					</if>
					<if test="item.req_detail_id != null and item.req_detail_id != ''">
						#{item.req_detail_id,jdbcType=INTEGER} as req_detail_id,
					</if>
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.req_amount != null or item.req_amount != ''">
						#{item.req_amount,jdbcType=INTEGER} as req_amount,
					</if>
					<if test="item.pur_amount != null or item.pur_amount != ''">
						#{item.pur_amount,jdbcType=INTEGER} as pur_amount,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		),sum_list as(
		     select  group_id,hos_id,copy_code,inv_id,inv_no,sum(nvl(pur_amount,0)) pur_amount 
		     from list_temp
		     group by group_id,hos_id,copy_code,inv_id,inv_no,inv_id,inv_no
		),sum_inv_list as(
			 select  group_id,hos_id,copy_code,inv_id,inv_no,sum(nvl(req_amount,0)) req_amount 
		     from list_temp
		     group by group_id,hos_id,copy_code,inv_id,inv_no,inv_id,inv_no
		),inv_list as(
			select sum_list.group_id,
		      sum_list.hos_id,
		      sum_list.copy_code,
		      sum_list.inv_id,
		      sum_list.inv_no,
		      mid.inv_code,
		      mid.inv_name,
		      mid.inv_model,
		      mid.unit_code,
		      hu.unit_name,
		      hfd.fac_code,
		      hfd.fac_name,
		      hsd.sup_code,
		      hsd.sup_name,
		      hsd.sup_id,
		      hsd.sup_no,
		      mid.is_com,
		      sil.req_amount as req_amount,
		      sum_list.pur_amount as amount,
		      mid.plan_price as price,
		      nvl(sum_list.pur_amount,0)*nvl(mid.plan_price,0) as amount_money,
		      rela.req_rela
		    from sum_list sum_list
		    left join sum_inv_list sil on sum_list.group_id = sil.group_id
		    	and sum_list.hos_id = sil.hos_id 
		    	and sum_list.copy_code = sil.copy_code
		    	and sum_list.inv_id = sil.inv_id
		    	and sum_list.inv_no = sil.inv_no
		    left join mat_inv_dict mid on sum_list.group_id = mid.group_id
		      and sum_list.hos_id = mid.hos_id
		      and sum_list.copy_code = mid.copy_code
		      and sum_list.inv_id = mid.inv_id
		      and sum_list.inv_no = mid.inv_no
		    left join hos_unit hu on mid.group_id = hu.group_id
		      and mid.hos_id = hu.hos_id
		      and mid.unit_code = hu.unit_code
		      and hu.is_stop = 0
		    left join hos_fac_dict hfd on mid.group_id = hfd.group_id
		      and mid.hos_id = hfd.hos_id
		      and mid.fac_id = hfd.fac_id
		      and mid.fac_no = hfd.fac_no
		    left join mat_inv_sup mis on mid.group_id = mis.group_id
		      and mid.hos_id = mis.hos_id
		      and mid.copy_code = mis.copy_code
		      and mid.inv_id = mis.inv_id
		      and mis.is_default = 1
		    left join hos_sup_dict hsd on mis.group_id = hsd.group_id
		      and mis.hos_id = hsd.hos_id
		      and mis.sup_id = hsd.sup_id
		      and hsd.is_stop = 0
		    left join (
		    	select inv_id,inv_no, '['||to_char(wm_concat('{"req_id":'||req_id||',"req_detail_id":'||req_detail_id||',"inv_id":'||inv_id||',"req_amount":'||req_amount||',"pur_amount":'||pur_amount||'}'))||']' req_rela 
		        from list_temp
		        group by inv_id,inv_no
		    ) rela on sum_list.inv_id = rela.inv_id 
		    	and sum_list.inv_no = rela.inv_no
		)
		select inv_list.group_id,
		      inv_list.hos_id,
		      inv_list.copy_code,
		      inv_list.inv_id,
		      inv_list.inv_no,
		      inv_list.inv_code,
		      inv_list.inv_name,
		      inv_list.inv_model,
		      inv_list.unit_code,
		      inv_list.unit_name,
		      inv_list.fac_code,
		      inv_list.fac_name,
		      inv_list.sup_code,
		      inv_list.sup_name,
		      inv_list.sup_id,
		      inv_list.sup_no,
		      case when inv_list.is_com=0 then inv_hold.cur_amount else affi_hold.cur_amount end  as cur_amount,
		      inv_list.req_amount,
		      inv_list.amount amount,
		      inv_list.price,
		      inv_list.amount_money,
		      inv_list.req_rela
		from inv_list inv_list 
		left join (
			select a.group_id,a.hos_id,a.copy_code,a.inv_id,sum(nvl(a.cur_amount,0)) cur_amount
			from mat_inv_hold  a
			left join (
				select distinct group_id,hos_id,copy_code, inv_id 
				from list_temp
			) b  on a.group_id = b.group_id and a.hos_id =b.hos_id
				and a.copy_code = b.copy_code and a.inv_id = b.inv_id 
			group by a.group_id,a.hos_id,a.copy_code,a.inv_id
		) inv_hold on inv_list.group_id = inv_hold.group_id and inv_list.hos_id = inv_hold.hos_id
			and inv_list.copy_code = inv_hold.copy_code and inv_list.inv_id = inv_hold.inv_id
		left join (
			select a.group_id,a.hos_id,a.copy_code,a.inv_id,sum(nvl(a.cur_amount,0)) cur_amount
			from mat_affi_inv_hold a
			left join (
				select distinct group_id,hos_id,copy_code, inv_id 
				from list_temp
			) b on a.group_id = b.group_id and a.hos_id =b.hos_id
				and a.copy_code = b.copy_code and a.inv_id = b.inv_id
			group by a.group_id,a.hos_id,a.copy_code,a.inv_id
		) affi_hold on inv_list.group_id = affi_hold.group_id and inv_list.hos_id = affi_hold.hos_id
			and inv_list.copy_code = affi_hold.copy_code and inv_list.inv_id = affi_hold.inv_id
		order by inv_list.inv_code 
     </select>
     
     <!-- 更新仓库需求计划状态 is_closed=3 -->
     <update id="updateStoreReqState" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update mat_req_store_detail 
			set is_closed = 3
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					and req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_detail_id != null and item.req_detail_id != ''">
					and req_detail_id = #{item.req_detail_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 更新仓库需求计划状态 is_closed=0 -->
	<update id="updateStoreReqStateZero" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update mat_req_store_detail 
			set is_closed = 0
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					and req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_detail_id != null and item.req_detail_id != ''">
					and req_detail_id = #{item.req_detail_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	
	<!-- 查询科室需求计划-->
	<select id="queryMatReqDeptMain" parameterType="java.util.Map" resultType="java.util.Map" >
		select
		     mrsm.group_id,mrsm.hos_id,mrsm.copy_code,mrsm.req_id,mrsm.req_code,
		     to_char(mrsm.make_date,'yyyy-MM-dd') as make_date,mrsd.req_detail_id,
		     mrsm.dept_id,mrsm.dept_no,hdd.dept_code,hdd.dept_name,
		     mrsm.stock_id as store_id,mrsm.stock_no as store_no,hsd.store_code,hsd.store_name,
		     mid.inv_code,mid.inv_name,mid.inv_model,mid.unit_code,hu.unit_name,mid.inv_id,mid.inv_no,
		     nvl(mrsd.amount,0) as req_amount,nvl(mrsd.amount,0) as pur_amount,
		     nvl(mih.cur_amount, 0) - nvl(vmsii.amount, 0) cur_amount, 
		     mdd.field_desc as come_from --, 0 checkboxstatus
		from mat_require_detail mrsd
		left join mat_require_main mrsm
		on
		     mrsd.group_id = mrsm.group_id and mrsd.hos_id = mrsm.hos_id
		     and mrsd.copy_code = mrsm.copy_code and mrsd.req_id = mrsm.req_id
		     and mrsd.req_code = mrsm.req_code
		left join hos_dept_dict hdd
		on
		     mrsm.group_id = hdd.group_id and mrsm.hos_id = hdd.hos_id
		     and mrsm.dept_id = hdd.dept_id and mrsm.dept_no = hdd.dept_no
		    
		left join hos_store_dict hsd
		on
		     mrsm.group_id = hsd.group_id and mrsm.hos_id = hsd.hos_id
		     and mrsm.stock_id = hsd.store_id and mrsm.stock_no = hsd.store_no
		 
		left join mat_inv_dict mid
		on
		     mrsd.group_id = mid.group_id and mrsd.hos_id = mid.hos_id 
		     and mrsd.copy_code = mid.copy_code and mrsd.inv_id = mid.inv_id
		     and mrsd.inv_no = mid.inv_no 
		left join hos_unit hu
		on
		     mrsd.group_id = hu.group_id and mrsd.hos_id = hu.hos_id
		     and mid.unit_code = hu.unit_code and hu.is_stop = 0
		left join mat_data_dict mdd
		on
		     mrsm.come_from = mdd.field_value
		     and mdd.field_code = 'REQ_FROM'
		left join mat_inv_hold mih 
			on mrsd.group_id = mih.group_id 
			and mrsd.hos_id = mih.hos_id 
			and mrsd.copy_code = mih.copy_code
			and mrsm.stock_id = mih.store_id 
			and mrsd.inv_id = mih.inv_id 
		left join v_mat_stock_inv_imme vmsii
			on mrsd.group_id = vmsii.group_id 
			and mrsd.hos_id = vmsii.hos_id 
			and mrsd.copy_code = vmsii.copy_code 
			and mrsm.stock_id = vmsii.store_id 
			and mrsd.inv_id = vmsii.inv_id 
		where mrsd.group_id = #{group_id,jdbcType=INTEGER}
		     and mrsd.hos_id = #{hos_id,jdbcType=INTEGER}
		     and mrsd.copy_code = #{copy_code,jdbcType=VARCHAR}
		     and mrsd.is_closed = 0
		     <if test="begin_date != null and begin_date != '' and end_date != null and end_date != ''">
			     and mrsm.make_date between to_date(#{begin_date},'yyyy-MM-dd') and to_date(#{end_date},'yyyy-MM-dd')
		     </if>
		     <if test="stock_id != null and stock_id != '' ">
			     and mrsm.stock_id = #{stock_id}
		     </if>
		      <if test="req_code != null and req_code != '' ">
			     and mrsm.req_code like '%${req_code}%'
		     </if>
		     <if test="is_dir != null and is_dir !='' ">
				and mrsm.is_dir =  #{is_dir}
			 </if>
			 <if test="state != null and state!='' ">
				and mrsm.state =  #{state}
			 </if>
			order by mrsm.req_code,mid.inv_code 
     </select>
     
     <!-- 组装汇总的科室明细数据 -->
     <select id="queryDeptNewDetail" parameterType="java.util.List" resultType="java.util.Map" >
     	with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{map.group_id,jdbcType=INTEGER} as group_id, 
					#{map.hos_id,jdbcType=INTEGER} as hos_id, 
					#{map.copy_code,jdbcType=VARCHAR} as copy_code, 
					#{map.store_id,jdbcType=INTEGER} as store_id, 
					#{item.req_id,jdbcType=INTEGER} as req_id,
					#{item.req_detail_id,jdbcType=INTEGER} as req_detail_id,
					#{item.dept_id,jdbcType=INTEGER} as dept_id,
					#{item.dept_no,jdbcType=INTEGER} as dept_no,
					#{item.make_date,jdbcType=VARCHAR} as make_date,
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.inv_no,jdbcType=INTEGER} as inv_no,
					#{item.req_amount,jdbcType=INTEGER} as req_amount,
					#{item.pur_amount,jdbcType=INTEGER} as pur_amount
				from dual
			</foreach>
		),sum_list as(
			select  group_id, hos_id, copy_code, store_id, 
				dept_id, dept_no, make_date, inv_id, inv_no,
				sum(nvl(req_amount,0)) req_amount ,
				sum(nvl(pur_amount,0)) pur_amount
			from list_temp list_temp
			group by group_id, hos_id, copy_code, store_id, 
				dept_id, dept_no, make_date, inv_id, inv_no
		),inv_list as(
			select sum_list.group_id,
				sum_list.hos_id,
				sum_list.copy_code,
				sum_list.store_id, 
				sum_list.inv_id,
				sum_list.inv_no,
				sum_list.dept_id,
				sum_list.dept_no,
				hdd.dept_code||' '|| hdd.dept_name as app_dept_name,
				mid.inv_code,
				mid.inv_name,
				mid.inv_model,
				mid.unit_code,
				hu.unit_name,
				hfd.fac_code,
				hfd.fac_name,
				hsd.sup_code,
				hsd.sup_name,
				hsd.sup_id,
				hsd.sup_no,
				mid.is_com,
				sum_list.make_date,
				sum_list.req_amount as req_amount,
				sum_list.pur_amount as amount,
				mid.plan_price as price,
				nvl(sum_list.pur_amount,0)*nvl(mid.plan_price,0) as amount_money,
				rela.req_rela
		    from sum_list sum_list
		    left join mat_inv_dict mid on sum_list.group_id = mid.group_id
		        and sum_list.hos_id = mid.hos_id
		      	and sum_list.copy_code = mid.copy_code
		      	and sum_list.inv_id = mid.inv_id
		      	and sum_list.inv_no = mid.inv_no
		    left join hos_unit hu on mid.group_id = hu.group_id
		      	and mid.hos_id = hu.hos_id
		      	and mid.unit_code = hu.unit_code
		      	and hu.is_stop = 0
		    left join hos_fac_dict hfd on mid.group_id = hfd.group_id
		      	and mid.hos_id = hfd.hos_id
		      	and mid.fac_id = hfd.fac_id
		      	and mid.fac_no = hfd.fac_no
		    left join mat_inv_sup mis on mid.group_id = mis.group_id
		      	and mid.hos_id = mis.hos_id
		      	and mid.copy_code = mis.copy_code
		      	and mid.inv_id = mis.inv_id
		      	and mis.is_default = 1
		    left join hos_sup_dict hsd on mis.group_id = hsd.group_id
		      	and mis.hos_id = hsd.hos_id
		      	and mis.sup_id = hsd.sup_id
		      	and hsd.is_stop = 0
		    left join hos_dept_dict hdd on sum_list.group_id = hdd.group_id
		    	and sum_list.hos_id = hdd.hos_id
		    	and sum_list.dept_id = hdd.dept_id
		    	and sum_list.dept_no = hdd.dept_no
		    left join (
		    	select inv_id, 
					<if test="map.create_type != null and map.create_type == 0">
					dept_id, 
					</if> 
		    		'['||to_char(wm_concat('{"req_id":'||req_id||',"req_detail_id":'||req_detail_id||',"inv_id":'||inv_id||',"req_amount":'||req_amount||',"pur_amount":'||pur_amount||'}'))||']' req_rela 
		        from list_temp
		        group by inv_id
					<if test="map.create_type != null and map.create_type == 0">
					, dept_id
					</if>
		    ) rela on sum_list.inv_id = rela.inv_id 
				<if test="map.create_type != null and map.create_type == 0">
				and sum_list.dept_id = rela.dept_id 
				</if>
		)
		select inv_list.group_id,
		      inv_list.hos_id,
		      inv_list.copy_code,
		      inv_list.inv_id,
		      inv_list.inv_no,
		      inv_list.dept_id||','||inv_list.dept_no as app_dept_id,
		      inv_list.app_dept_name as app_dept_name,
		      inv_list.make_date as app_date,
		      inv_list.inv_code,
		      inv_list.inv_name,
		      inv_list.inv_model,
		      inv_list.unit_code,
		      inv_list.unit_name,
		      inv_list.fac_code,
		      inv_list.fac_name,
		      inv_list.sup_code,
		      inv_list.sup_name,
		      inv_list.sup_id,
		      inv_list.sup_no,
		      case when inv_list.is_com=0 then nvl(inv_hold.cur_amount, 0) - nvl(vmsii.amount, 0) else nvl(affi_hold.cur_amount, 0) - nvl(vmasii.amount, 0) end  as cur_amount,
		      inv_list.req_amount,
		      inv_list.amount amount,
		      inv_list.price,
		      inv_list.amount_money,
		      inv_list.req_rela
		from inv_list inv_list 
		left join mat_inv_hold inv_hold 
			on inv_list.group_id = inv_hold.group_id 
			and inv_list.hos_id = inv_hold.hos_id
			and inv_list.copy_code = inv_hold.copy_code
			and inv_list.store_id = inv_hold.store_id  
			and inv_list.inv_id = inv_hold.inv_id
		left join v_mat_stock_inv_imme vmsii
			on inv_list.group_id = vmsii.group_id 
			and inv_list.hos_id = vmsii.hos_id
			and inv_list.copy_code = vmsii.copy_code
			and inv_list.store_id = vmsii.store_id  
			and inv_list.inv_id = vmsii.inv_id
		left join mat_affi_inv_hold affi_hold 
			on inv_list.group_id = affi_hold.group_id 
			and inv_list.hos_id = affi_hold.hos_id
			and inv_list.copy_code = affi_hold.copy_code 
			and inv_list.store_id = affi_hold.store_id 
			and inv_list.inv_id = affi_hold.inv_id
		left join v_mat_affi_stock_inv_imme vmasii 
			on inv_list.group_id = vmasii.group_id 
			and inv_list.hos_id = vmasii.hos_id
			and inv_list.copy_code = vmasii.copy_code 
			and inv_list.store_id = vmasii.store_id 
			and inv_list.inv_id = vmasii.inv_id
		where inv_list.amount > 0
		order by inv_list.inv_code 
     </select>
     
     <!-- 更新仓库需求计划状态 is_closed=3 -->
     <update id="updateDeptReqState" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update mat_require_detail 
			set is_closed = 3
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					and req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_detail_id != null and item.req_detail_id != ''">
					and req_detail_id = #{item.req_detail_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 更新仓库需求计划状态 is_closed=0 -->
	<update id="updateDeptReqStateZero" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update mat_require_detail 
			set is_closed = 0
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					and req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_detail_id != null and item.req_detail_id != ''">
					and req_detail_id = #{item.req_detail_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 删除明细中页面中删除的数据 -->
	<delete id="deleteForUpdate" parameterType="java.util.Map">
		delete from mat_pur_detail
		<where>
			<if test="group_id != null and group_id != ''">
				group_id = #{group_id,jdbcType=INTEGER}
			 </if>
			 <if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			 </if>
			 <if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			 </if>
			 <if test="pur_id != null and pur_id != ''">
				and pur_id = #{pur_id,jdbcType=INTEGER}
			 </if>
			 <if test="detail_ids != null and detail_ids != ''">
				and pur_detail_id not in  (${detail_ids})
			 </if>
			 
		</where>
	</delete>
	
	<!-- 查看明细 -->
	<select id="queryDetails" parameterType="java.util.Map" resultType="java.util.Map" >
		select distinct  aa.group_id,aa.hos_id,aa.copy_code,aa.pur_id,aa.pur_code,aa.dept_name,aa.brif,aa.pur_type,aa.field_desc,
			aa.come_from,aa.dept_names,aa.pur_detail_id,aa.inv_id,aa.inv_no,aa.inv_code,aa.is_com,aa.inv_name,aa.inv_model,aa.unit_code,
			aa.unit_name,aa.amount,aa.price,aa.amount_money,aa.fac_name,aa.pur_hos_name,aa.req_hos_name,aa.pay_hos_name,aa.maker,
			aa.make_date,aa.arrive_date,aa.checker,aa.check_date,aa.state,aa.is_dir,aa.dir_dept_id,aa.dir_dept_no,
			aa.dir_dept_code,aa.dir_dept_name,aa.sup_id,aa.sup_no,aa.sup_code,aa.sup_name,aa.bid_code,aa.mat_type_name,
			case when bb.order_amount &gt; 0  then 1 else 2 end as order_state,store_name,store_id,store_no,store_code <!-- ,cert_code -->
		from (
			select mpm.group_id, mpm.hos_id, mpm.copy_code, mpm.pur_id, mpm.pur_code , 
				hdd.dept_name, mpm.brif, mpm.pur_type, mdd.field_desc AS field_desc, mpm.come_from,
				case 
					when  mpm.come_from=2 then ps.dept_name
					else case 
						when  mpm.come_from=3 then pd.dept_name 
						else pa.dept_name 
					end
				end  dept_names,
				mpd.pur_detail_id,mpd.inv_id,mpd.inv_no,mid.inv_code,mid.is_com,mid.inv_name,mid.inv_model,mid.unit_code,
				hu.unit_name,mpd.amount,mpd.price,mpd.amount * mpd.price amount_money, hfd.fac_name, 
				pur.hos_name AS pur_hos_name, req.hos_name AS req_hos_name, pay.hos_name AS pay_hos_name, su.user_name AS maker, 
				mpm.make_date, mpm.arrive_date, sus.user_name AS checker, mpm.check_date, 
				case 
					when (mior.order_amount &gt; 0 and mior.pur_amount &gt; mior.order_amount) then 4 
					when (mior.order_amount &gt; 0 and mior.pur_amount &lt;= mior.order_amount) then 3 
					else mpm.state 
				end as state,
				mpm.is_dir, mpm.dir_dept_id, mpm.dir_dept_no, hddd.dept_code AS dir_dept_code, hddd.dept_name AS dir_dept_name, 
				hsd.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name, mid.bid_code,mtd.mat_type_name, hsod.store_name<!-- ,mic.cert_code -->
				, hsod.store_id, hsod.store_no,hsod.store_code
			from MAT_PUR_MAIN mpm
			left join mat_pur_detail mpd 
				on mpm.group_id = mpd.group_id and mpm.hos_id = mpd.hos_id
				and mpm.copy_code = mpd.copy_code and mpm.pur_id = mpd.pur_id
			left join mat_inv_dict mid 
				on mpd.group_id = mid.group_id and mpd.hos_id = mid.hos_id 
				and mpd.copy_code = mid.copy_code and mpd.inv_id = mid.inv_id  
				and mpd.inv_no = mid.inv_no
			left join mat_type_dict mtd 
				on mpd.group_id = mtd.group_id and mpd.hos_id = mtd.hos_id 
				and mpd.copy_code = mtd.copy_code and mid.mat_type_id=mtd.mat_type_id 
				and mid.mat_type_no=mtd.mat_type_no
			left join hos_unit hu 
				on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id 
				and mid.unit_code = hu.unit_code and hu.is_stop = 0
			left join hos_sup_dict hsd 
				on mpd.group_id = hsd.group_id and mpd.hos_id = hsd.hos_id 
				and mpd.sup_id = hsd.sup_id and mpd.sup_no = hsd.sup_no 
			left join hos_fac_dict hfd 
				on hfd.group_id = mpd.group_id and hfd.hos_id = mpd.hos_id 
				and hfd.fac_id = mid.fac_id and hfd.fac_no = mid.fac_no
			left join HOS_DEPT_DICT hdd 
				ON mpm.group_id = hdd.group_id and mpm.hos_id = hdd.hos_id
				and mpm.dept_id = hdd.dept_id and hdd.dept_no = mpm.dept_no
			left join hos_store_dict hsod 
				on mpm.group_id = hsod.group_id and mpm.hos_id = hsod.hos_id 
				and mpm.store_id = hsod.store_id and mpm.store_no = hsod.store_no
			left join mat_data_dict msl 
				ON mpm.pur_type = msl.field_value and msl.field_code = 'PUR_TYPE' 
			left join mat_data_dict mdd 
				ON mpm.come_from = mdd.field_value and mdd.data_code = '04005' 
				and mdd.field_code = 'PUR_FROM' 
			left join v_hos_dict pur 
				ON mpm.group_id = pur.group_id and mpm.pur_hos_id = pur.hos_id 
				and pur.is_stop = 0 
			left join v_hos_dict req 
				ON mpm.group_id = req.group_id and mpm.req_hos_id = req.hos_id 
				and req.is_stop = 0 
			left join v_hos_dict pay 
				ON mpm.group_id = pay.group_id and mpm.pay_hos_id = pay.hos_id 
				and pay.is_stop = 0 
			left join SYS_USER su 
				ON mpm.group_id = su.group_id and mpm.hos_id = su.hos_id 
				and mpm.copy_code = su.copy_code and mpm.maker = su.user_id 
			left join SYS_USER sus 
				ON mpm.group_id = sus.group_id and mpm.hos_id = sus.hos_id 
				and mpm.copy_code = sus.copy_code and mpm.checker = sus.user_id 
			left join hos_dept_dict hddd 
				ON mpm.group_id = hddd.group_id and mpm.hos_id = hddd.hos_id 
				and mpm.dir_dept_id = hddd.dept_id and hddd.dept_no = mpm.dir_dept_no
			left join (
				select a.apply_id, a.rela_id as pur_id, a.rela_detail_id as pur_detail_id, a.app_detail_id, 
					b.dept_id, b.dept_no, c.dept_code, c.dept_name
				from mat_apply_pur_rela a
				left join mat_apply_main b 
					on a.group_id = b.group_id and a.hos_id =b.hos_id 
					and a.copy_code = b.copy_code and a.apply_id = b.apply_id 
				left join hos_dept_dict c 
					on b.group_id = c.group_id and b.hos_id = c.hos_id 
					and b.dept_id = c.dept_id and b.dept_no = c.dept_no
				where a.group_id = #{group_id,jdbcType=INTEGER}
					and a.hos_id = #{hos_id,jdbcType=INTEGER}
					and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			) pa 
				on mpm.pur_id = pa.pur_id and mpd.pur_detail_id = pa.pur_detail_id
			left join(
				select  mrspr.pur_id, mrspr.pur_detail_id, cc.store_id as dept_id, cc.store_no as dept_no, 
					cc.store_code as dept_code, cc.store_name as dept_name
				from mat_req_store_pur_rela mrspr
				left join mat_req_store_main mss 
					on mrspr.group_id = mss.group_id and mrspr.hos_id =mss.hos_id 
					and mrspr.copy_code = mss.copy_code and mrspr.req_id= mss.req_id 
				left join hos_store_dict cc 
					on mss.group_id = cc.group_id and mss.hos_id = cc.hos_id 
					and mss.stock_id = cc.store_id and mss.stock_no = cc.store_no
				where mrspr.group_id = #{group_id,jdbcType=INTEGER}
					and mrspr.hos_id = #{hos_id,jdbcType=INTEGER}
					and mrspr.copy_code = #{copy_code,jdbcType=VARCHAR}
			) ps 
				on mpm.pur_id = ps.pur_id and mpd.pur_detail_id=ps.pur_detail_id
			left join (
				select mrdpr.pur_id, mrdpr.pur_detail_id, mrm.dept_id, c1.dept_no, c1.dept_code, c1.dept_name
				from mat_req_dept_pur_rela mrdpr 
				left join mat_require_main mrm 
					on mrdpr.group_id = mrm.group_id and mrdpr.hos_id =mrm.hos_id 
					and mrdpr.copy_code = mrm.copy_code and mrdpr.req_id= mrm.req_id
				left join hos_dept_dict c1 
					on mrm.group_id = c1.group_id and mrm.hos_id = c1.hos_id 
					and mrm.dept_id = c1.dept_id and mrm.dept_no = c1.dept_no
				where mrdpr.group_id = #{group_id,jdbcType=INTEGER}
					and mrdpr.hos_id = #{hos_id,jdbcType=INTEGER}
					and mrdpr.copy_code = #{copy_code,jdbcType=VARCHAR}
			) pd 
				on mpm.pur_id = pd.pur_id and mpd.pur_detail_id = pd.pur_detail_id
			left join (
				select group_id, hos_id,copy_code, pur_id, pur_detail_id, pur_amount, sum(order_amount) as order_amount 
				from mat_pur_order_rela
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
				group by  group_id, hos_id, copy_code, pur_id, pur_detail_id, pur_amount
			) mior 
				ON  mpm.group_id = mior.group_id AND mpm.hos_id = mior.hos_id
				AND mpm.copy_code = mior.copy_code AND mpm.pur_id = mior.pur_id 
				and mpd.pur_detail_id=mior.pur_detail_id 
			<!-- 注册证号   -->
			left join (
	           select md.group_id,md.hos_id,md.copy_code,md.inv_id<!-- ,mic.cert_code -->
	           from mat_inv_dict md 
	           left join mat_inv_cert_rela micr on md.group_id=micr.group_id and md.hos_id=micr.hos_id
	                and md.copy_code=micr.copy_code and md.inv_id=micr.inv_id
	           left join mat_inv_cert mic on micr.group_id=mic.group_id and micr.hos_id=mic.hos_id and micr.copy_code=mic.copy_code
	                and micr.cert_id=mic.cert_id 
	           <where>
	           		<if test="group_id !=null and group_id !='' ">
			      		and md.group_id = #{group_id,jdbcType=INTEGER}
			      	</if>
			      	<if test="hos_id !=null and hos_id !='' ">
			      		and md.hos_id = #{hos_id,jdbcType=INTEGER}
			      	</if>
			      	<if test="copy_code !=null and copy_code !='' ">
			      		and md.copy_code = #{copy_code,jdbcType=VARCHAR}
			      	</if>
			      	and md.is_stop = 0
			      	and mic.cert_state = 1
	           </where>
	      	) mic on mid.group_id=mic.group_id and mid.hos_id=mic.hos_id and mid.copy_code=mic.copy_code
	        	and mid.inv_id=mic.inv_id 
			<where>
				<if test="group_id !=null and group_id !='' ">
		      		and mpm.group_id = #{group_id,jdbcType=INTEGER}
		      	</if>
		      	<if test="hos_id !=null and hos_id !='' ">
		      		and mpm.hos_id = #{hos_id,jdbcType=INTEGER}
		      	</if>
		      	<if test="copy_code !=null and copy_code !='' ">
		      		and mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
		      	</if>
		      	<if test="begin_date != null and begin_date != ''">
					and mpm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
				</if>
				<if test="end_date != null and end_date != ''">
					and  mpm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
				</if>
				<if test="pur_type != null and pur_type != '' ">
					and mpm.pur_type = #{pur_type}
				</if>
			    <if test="pur_code != null and pur_code != '' ">
					and  mpm.pur_code like '${pur_code}%'
					or Upper( mpm.pur_code) like '${pur_code}%'
					or lower( mpm.pur_code) like '${pur_code}%'
				</if>
				<if test="pur_id != null and pur_id != '' ">
					and  mpm.pur_id = #{pur_id}
				</if>
				<if test="brif != null and brif != '' ">
					and mpm.brif like '%${brif}%'
				</if>
				<if test="is_dir != null and is_dir != '' ">
					and mpm.is_dir = #{is_dir}
				</if>
				<if test="dir_dept_id != null and dir_dept_id != '' ">
					and mpm.dir_dept_id = #{dir_dept_id}
				</if>
				<if test="dir_dept_no != null and dir_dept_no != '' ">
					and mpm.dir_dept_no = #{dir_dept_no}
				</if>
				<if test="dept_id != null and dept_id != '' ">
					and mpm.dept_id = #{dept_id}
				</if>
					
				<!-- 2017/03/14 台州中心医院需求：增加页面申请科室和材料信息的查询条件 -->
				<!-- 2017/03/15：增加条件编码和名称,保证科室和仓库的唯一性,避免重复 -->
				<if test="
					app_dept_id != null and app_dept_id != '' 
					and app_dept_no != null and app_dept_no != '' 
					and app_dept_code != null and app_dept_code != '' 
					and app_dept_name != null and app_dept_name != '' ">
					AND (
						(	pa.dept_id = #{app_dept_id} 
							and pa.dept_no = #{app_dept_no}
							and pa.dept_code = #{app_dept_code}
							and pa.dept_name = #{app_dept_name}
						)
						or 
						(	pd.dept_id = #{app_dept_id} 
							and pd.dept_no = #{app_dept_no}
							and pd.dept_code = #{app_dept_code}
							and pd.dept_name = #{app_dept_name}
						)
						or 
						(
							ps.dept_id = #{app_dept_id} 
							and ps.dept_no = #{app_dept_no}
							and ps.dept_code = #{app_dept_code}
							and ps.dept_name = #{app_dept_name}
						)
					)
				</if>
				
				<if test="inv_msg != null and inv_msg != '' ">
					AND (
						mid.inv_code like '${inv_msg}%'
						or mid.inv_name like '${inv_msg}%'
					)
				</if>
				<if test="sup_id != null and sup_id != '' ">
					and hsd.sup_id = #{sup_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != '' ">
					and mpm.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="store_id == null or store_id == ''">
					AND( 
						EXISTS(
							SELECT 1
							FROM v_user_data_perm
							WHERE group_id = #{group_id,jdbcType=INTEGER} 
							AND hos_id = #{hos_id,jdbcType=INTEGER} 
							AND user_id = #{user_id,jdbcType=INTEGER} 
							AND table_code = 'HOS_STORE_DICT'
							AND perm_code = to_char(mpm.store_id)  
							AND is_read = 1 AND is_write = 1 
						) 
						OR
						mpm.store_id IS NULL
					)
				</if>
				AND EXISTS(
					SELECT 1
					FROM v_user_data_perm
					WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER} 
					AND user_id = #{user_id,jdbcType=INTEGER} 
					AND table_code = 'MAT_TYPE_DICT'
					AND perm_code = to_char(mid.mat_type_id)
					AND is_read = 1 AND is_write = 1 
				) 
				and mpm.is_collect=0
				and mpd.is_closed = 0
			</where>
		) aa left join (
	            select a1.group_id,a1.hos_id,a1.copy_code,a1.pur_id,a1.pur_amount,b1.order_amount from (
	            	select group_id,hos_id,copy_code,pur_id,sum(nvl(amount,0)) as pur_amount 
	                from mat_pur_detail 
	                <where>
	                     	<if test="group_id !=null and group_id !='' ">
					      		and group_id = #{group_id,jdbcType=INTEGER}
					      	</if>
					      	<if test="hos_id !=null and hos_id !='' ">
					      		and hos_id = #{hos_id,jdbcType=INTEGER}
					      	</if>
					      	<if test="copy_code !=null and copy_code !='' ">
					      		and copy_code = #{copy_code,jdbcType=VARCHAR}
					      	</if>
	                 </where>
	                 group by  group_id,hos_id,copy_code,pur_id
	            ) a1  left join (
	                  select group_id,hos_id,copy_code,pur_id,sum(order_amount) as order_amount 
	                  from mat_pur_order_rela
	                  <where>
	                     	<if test="group_id !=null and group_id !='' ">
					      		and group_id = #{group_id,jdbcType=INTEGER}
					      	</if>
					      	<if test="hos_id !=null and hos_id !='' ">
					      		and hos_id = #{hos_id,jdbcType=INTEGER}
					      	</if>
					      	<if test="copy_code !=null and copy_code !='' ">
					      		and copy_code = #{copy_code,jdbcType=VARCHAR}
					      	</if>
	                  </where>
	                  group by  group_id,hos_id,copy_code,pur_id
	           ) b1 on a1.group_id=b1.group_id and a1.hos_id=b1.hos_id and a1.copy_code=b1.copy_code and a1.pur_id=b1.pur_id
		) bb on aa.group_id = bb.group_id and aa.hos_id=bb.hos_id 
			and aa.copy_code=bb.copy_code and aa.pur_id=bb.pur_id
		<where>
			<if test="state != null and state != '' ">
				and state = #{state}
			</if>
		</where>
		ORDER BY pur_id DESC, pur_detail_id
	</select>
	
	<!-- 查看供应商信息 -->
	<select id="querySupDetails" parameterType="java.util.Map" resultType="java.util.Map" >
		select a.group_id,a.hos_id,a.sup_id,a.sup_code,a.sup_name,b.ven_person,b.phone,
       		mv.cert_code,to_char(mv.start_date,'yyyy-MM-dd') state_date,to_char(mv.end_date,'yyyy-MM-dd') end_date
		from hos_sup_dict a
		left join ass_sup_attr b on a.group_id=b.group_id and a.hos_id = b.hos_id 
		     and a.sup_id=b.sup_id
		left join mat_ven_cert_detail mv on a.group_id=mv.group_id and a.hos_id= mv.hos_id
		     and a.sup_id=mv.sup_id
		     and mv.type_id=3
		 <where>
		 	<if test="group_id != null and group_id != '' ">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
		 	<if test="sup_id != null and sup_id != '' ">
				and a.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
		 </where>    
	</select>
	
	<!-- 组装数据 -->
	<select id="queryPurDetailCollectData" parameterType="java.util.List" resultType="java.util.Map" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.pur_id != null and item.pur_id != ''">
						#{item.pur_id,jdbcType=INTEGER} as pur_id,
					</if>
					<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
						#{item.pur_detail_id,jdbcType=INTEGER} as pur_detail_id,
					</if>
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.price != null or item.price != ''">
						#{item.price,jdbcType=FLOAT} as price,
					</if>
					<if test="item.amount != null or item.amount != ''">
						#{item.amount,jdbcType=INTEGER} as amount,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		),sum_list as(
		     select  group_id,hos_id,copy_code,inv_id,inv_no,price,sum(nvl(amount,0)) order_amount 
		     from list_temp
		     group by group_id,hos_id,copy_code,inv_id,inv_no,price
		) 
		select sum_list.group_id,
		      sum_list.hos_id,
		      sum_list.copy_code,
		      sum_list.inv_id,
		      sum_list.inv_no,
		      mid.inv_code,
		      mid.inv_name,
		      mid.inv_model,
		      mid.unit_code,
		      hu.unit_name,
		      hfd.fac_code,
		      hfd.fac_name,
		      sum_list.order_amount as amount,
		      sum_list.price as price,  
		      nvl(sum_list.order_amount,0)*nvl(sum_list.price,0) as amount_money,
		      rela.pur_rela
		    from sum_list sum_list
		    left join mat_inv_dict mid on sum_list.group_id = mid.group_id
		      and sum_list.hos_id = mid.hos_id
		      and sum_list.copy_code = mid.copy_code
		      and sum_list.inv_id = mid.inv_id
		      and sum_list.inv_no = mid.inv_no
		    left join hos_unit hu on mid.group_id = hu.group_id
		      and mid.hos_id = hu.hos_id
		      and mid.unit_code = hu.unit_code
		      and hu.is_stop = 0
		    left join hos_fac_dict hfd on mid.group_id = hfd.group_id
		      and mid.hos_id = hfd.hos_id
		      and mid.fac_id = hfd.fac_id
		      and mid.fac_no = hfd.fac_no
		    left join (
		    	select a.inv_id,a.inv_no, '['||to_char(wm_concat('{"pur_id":'||a.pur_id||',"pur_detail_id":'||a.pur_detail_id||',"inv_id":'||a.inv_id||',"pur_amount":'||a.amount||',"order_amount":'||b.order_amount||'}'))||']' pur_rela 
		        from list_temp a
		        left join sum_list b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
                    and a.inv_id=b.inv_id and a.inv_no=b.inv_no
		        group by a.inv_id,a.inv_no
		    ) rela on sum_list.inv_id = rela.inv_id 
		    	and sum_list.inv_no = rela.inv_no
		    order by mid.inv_code 
		</select>
		
		<!-- 不汇总材料 -->
		<select id="queryPurDetailNotCollectData" parameterType="java.util.List" resultType="java.util.Map" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.pur_id != null and item.pur_id != ''">
						#{item.pur_id,jdbcType=INTEGER} as pur_id,
					</if>
					<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
						#{item.pur_detail_id,jdbcType=INTEGER} as pur_detail_id,
					</if>
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.price != null or item.price != ''">
						#{item.price,jdbcType=FLOAT} as price,
					</if>
					<if test="item.amount != null or item.amount != ''">
						#{item.amount,jdbcType=INTEGER} as amount,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		)
		select list_temp.group_id,
		      list_temp.hos_id,
		      list_temp.copy_code,
		      list_temp.inv_id,
		      list_temp.inv_no,
		      mid.inv_code,
		      mid.is_com,
		      mid.inv_name,
		      mid.inv_model,
		      mid.unit_code,
		      hu.unit_name,
		      hfd.fac_code,
		      hfd.fac_name,
		      list_temp.amount as amount,
		      list_temp.amount as pur_amount,
		      list_temp.price as price,  
		      nvl(list_temp.amount,0)*nvl(list_temp.price,0) as amount_money,
		      rela.pur_rela
		    from list_temp list_temp
		    left join mat_inv_dict mid on list_temp.group_id = mid.group_id
		      and list_temp.hos_id = mid.hos_id
		      and list_temp.copy_code = mid.copy_code
		      and list_temp.inv_id = mid.inv_id
		      and list_temp.inv_no = mid.inv_no
		    left join hos_unit hu on mid.group_id = hu.group_id
		      and mid.hos_id = hu.hos_id
		      and mid.unit_code = hu.unit_code
		      and hu.is_stop = 0
		    left join hos_fac_dict hfd on mid.group_id = hfd.group_id
		      and mid.hos_id = hfd.hos_id
		      and mid.fac_id = hfd.fac_id
		      and mid.fac_no = hfd.fac_no
		    left join (
		    	select a.inv_id,a.inv_no, '['||to_char(wm_concat('{"pur_id":'||a.pur_id||',"pur_detail_id":'||a.pur_detail_id||',"inv_id":'||a.inv_id||',"pur_amount":'||a.amount||',"order_amount":'||a.amount||'}'))||']' pur_rela 
		        from list_temp a
		        group by a.inv_id,a.inv_no
		    ) rela on list_temp.inv_id = rela.inv_id 
		    	and list_temp.inv_no = rela.inv_no
		    order by mid.inv_code 
		
		</select>
		
		
	<!-- 关闭材料 -->
	<update id="updateMatPurCloseInv" parameterType="java.util.List">
		update mat_pur_detail set  is_closed = 1
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and pur_id = #{item.pur_id,jdbcType=INTEGER}
			and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 取消关闭材料 -->
	<update id="updateMatPurCancleCloseInv" parameterType="java.util.List">
		update mat_pur_detail set  is_closed = 0
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and pur_id = #{item.pur_id,jdbcType=INTEGER}
			and pur_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 查看关闭的材料 -->
	<select id="queryMatPurCloseInvInfo" parameterType="java.util.Map" resultType="java.util.Map" >
		select mm.group_id,mm.hos_id,mm.copy_code,mm.pur_code,su.user_name as maker_name,
			   mm.make_date,mm.pur_id,mp.pur_detail_id,mid.inv_code,mid.inv_name,mid.inv_model,hu.unit_name,hsd.sup_code,hsd.sup_name,
		       hfd.fac_code,hfd.fac_name,mp.amount,mp.price,nvl(mp.amount,0)*nvl(mp.price,0) amount_money 
		from mat_pur_detail mp
		left join mat_pur_main mm on mp.group_id=mm.group_id and mp.hos_id=mm.hos_id and mp.copy_code=mm.copy_code
		     and mp.pur_id=mm.pur_id
		left join mat_inv_dict mid on mp.group_id=mid.group_id and mp.hos_id=mid.hos_id and mp.copy_code=mid.copy_code
		     and mp.inv_id=mid.inv_id and mp.inv_no=mid.inv_no
		left join hos_unit hu on mid.group_id=hu.group_id and mid.hos_id=hu.hos_id and mid.unit_code=hu.unit_code and hu.is_stop=0
		left join hos_sup_dict hsd on mp.group_id=hsd.group_id and mp.hos_id=hsd.hos_id and mp.sup_id=hsd.sup_id and mp.sup_no=hsd.sup_no
		left join hos_fac_dict hfd on mid.group_id=hfd.group_id and mid.hos_id=hfd.hos_id and mid.fac_id=hfd.fac_id and mid.fac_no=hfd.fac_no
		left join sys_user su on mm.group_id=su.group_id and mm.hos_id=su.hos_id and mm.maker = su.user_id and su.is_stop=0
		<where>
		 	<if test="group_id != null and group_id != '' ">
				and mp.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != '' ">
				and mp.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != '' ">
				and mp.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="begin_date != null and begin_date != ''">
				and mm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				and  mm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="dept_id != null and dept_id != '' ">
				and mm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
		 	<if test="sup_id != null and sup_id != '' ">
				and mp.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="brief != null and brief != '' ">
				and mp.brif like  '%${brief}%'
			</if>
			<if test="pur_code != null and pur_code != ''">
				and mm.pur_code like '%'||#{pur_code,jdbcType=VARCHAR}||'%'
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
						mid.inv_code like '%${inv_code}%'
					or upper(mid.inv_name) like '%${inv_code}%'
					or upper(mid.inv_model) like '%${inv_code}%'
					or upper(mid.spell_code) like '%${inv_code}%'
					or upper(mid.wbx_code) like '%${inv_code}%'
					or upper(mid.bid_code) like '%${inv_code}%'
					or lower(mid.spell_code) like '%${inv_code}%'
					or lower(mid.bid_code) like '%${inv_code}%'
					or lower(mid.wbx_code) like '%${inv_code}%'
					or lower(mid.inv_name) like '%${inv_code}%'
					or mid.alias like '%${inv_code}%'
				)
			</if>
			and mp.is_closed = 1
		 </where>    
		order by mm.make_date,mid.inv_code
	</select>
	
	<!-- 采购数量来源查询 -->
	<select id="queryMatPurAmountRela" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.group_id, a.hos_id, a.copy_code, 'reqDept' rela_type, a.req_id rela_id, to_char(b.req_code) rela_no,  
			a.req_detail_id rela_detail_id, a.pur_id, a.pur_detail_id, a.req_amount rela_amount, a.pur_amount
		FROM mat_req_dept_pur_rela a 
		LEFT JOIN mat_require_main b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.req_id = b.req_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pur_id = #{pur_id,jdbcType=INTEGER}
			AND a.pur_detail_id = #{pur_detail_id,jdbcType=INTEGER}
		UNION ALL 
		SELECT a.group_id, a.hos_id, a.copy_code, 'reqStore' rela_type, a.req_id rela_id, to_char(b.req_code) rela_no, 
			a.req_detail_id rela_detail_id, a.pur_id, a.pur_detail_id, a.req_amount rela_amount, a.pur_amount
		FROM mat_req_store_pur_rela a 
		LEFT JOIN mat_req_store_main b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.req_id = b.req_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pur_id = #{pur_id,jdbcType=INTEGER}
			AND a.pur_detail_id = #{pur_detail_id,jdbcType=INTEGER}
		UNION ALL 
		SELECT a.group_id, a.hos_id, a.copy_code, 'app' rela_type, a.apply_id rela_id, to_char(b.apply_no) rela_no, 
			a.app_detail_id rela_detail_id, a.rela_id pur_id, a.rela_detail_id pur_detail_id, c.app_amount rela_amount, a.rela_amount pur_amount 
		FROM mat_apply_pur_rela a 
		LEFT JOIN mat_apply_main b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.apply_id = b.apply_id 
		LEFT JOIN mat_apply_detail c 
			ON a.group_id = c.group_id 
			AND a.hos_id = c.hos_id 
			AND a.copy_code = c.copy_code 
			AND a.apply_id = c.apply_id
			AND a.app_detail_id = c.detail_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.rela_id = #{pur_id,jdbcType=INTEGER}
			AND a.rela_detail_id = #{pur_detail_id,jdbcType=INTEGER}
	</select>
	
	<update id="updateMatApplyCloseInv" parameterType="java.util.List">
		update mat_apply_detail set  is_closed = 1
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			
				group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
			and detail_id = #{item.app_detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 取消关闭材料 -->
	<update id="updateMatApplyCancleCloseInv" parameterType="java.util.List">
		update mat_apply_detail set  is_closed = 0
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator=") or (" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and apply_id = #{item.apply_id,jdbcType=INTEGER}
			and detail_id = #{item.app_detail_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 查询科室申请和采购计划单据关系 -->
	<select id="queryMatApplyDetailList" parameterType="java.util.List" resultType="java.util.Map" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.pur_id,jdbcType=INTEGER} as pur_id,
					#{item.pur_detail_id,jdbcType=INTEGER} as pur_detail_id
				from dual
			</foreach>
		)
		
		select a.group_id,a.hos_id,a.copy_code,b.apply_id,b.app_detail_id
		from list_temp a
		left join mat_apply_pur_rela b on a.group_id=b.group_id and a.hos_id=b.hos_id
			and a.copy_code=b.copy_code and a.pur_id=b.rela_id and a.pur_detail_id=b.rela_detail_id
		where b.rela_type = 1
	</select>
	
	<insert id="addMatPurPlanBySecuLimit" parameterType="java.util.Map">
		INSERT INTO MAT_PUR_DETAIL(
				pur_detail_id,
				group_id,
				hos_id,
				copy_code,
				pur_id,
				pur_code,
				inv_id,
				inv_no,
				price
				,sup_id
				,sup_no
			    ,amount
			    ,num
			    ,pack_code
			    ,req_amount
			    ,num_exchange
			    ,memo
			    ,is_closed
			    ,app_dept_id
			    ,app_dept_no
			    ,app_date
			)
			select MAT_PUR_DETAIL_SEQ.Nextval,
			  mid.group_id,
			  mid.hos_id,
			  mid.copy_code,
			  #{pur_id},
			  #{pur_code},
			  mid.inv_id,
			  mid.inv_no,
			  mid.plan_price price,
			  nvl(hs.sup_id,0) sup_id,
		      nvl(hs.sup_no,0) sup_no,
		      abs(nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0)) amount,
		      case when nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0) !=0 then abs(nvl(msi.num_exchange,0) /(nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0)))
			  else 0 end num,
			  msi.package_code pack_code,
			  null,
			  nvl(msi.num_exchange,0) num_exchange,
			  null,
			  0,
			  null,
			  null,
			  null
	
			from mat_store_inv msi
			left join mat_inv_dict mid on msi.group_id = mid.group_id
				 and msi.hos_id = mid.hos_id
			     and msi.copy_code = mid.copy_code
			     and msi.inv_id = mid.inv_id
			     and mid.is_stop = 0
			left join hos_unit hu on mid.group_id = hu.group_id
			     and mid.hos_id = hu.hos_id
			     and mid.unit_code = hu.unit_code
			     and hu.is_stop = 0
			left join hos_store_dict hsd on hsd.store_id = msi.store_id
			     and hsd.group_id = msi.group_id
			     and hsd.hos_id = msi.hos_id
			     and hsd.is_stop = 0
			left join hos_package hp on hp.group_id = msi.group_id
			     and hp.hos_id = msi.hos_id
			     and hp.pack_code = msi.package_code
			     and hp.is_stop = 0
			left join mat_inv_hold mih on msi.store_id = mih.store_id
			     and msi.group_id = mih.group_id
			     and msi.hos_id = mih.hos_id
			     and msi.copy_code = mih.copy_code
			     and msi.inv_id = mih.inv_id
			left join hos_fac_dict hfd on hfd.fac_id = mid.fac_id
		         and hfd.group_id = mid.group_id
		         and hfd.hos_id = mid.hos_id
		         and hfd.fac_no = mid.fac_no
		    left join (
		         select
		          	group_id,hos_id,copy_code,inv_id,max(sup_id) sup_id
		          	from mat_inv_sup
		          	group by group_id,hos_id,copy_code,inv_id
	      	) mis on mis.group_id = mid.group_id
	        	and mis.hos_id = mid.hos_id
	        	and mis.copy_code = mid.copy_code
	        	and mis.inv_id = mid.inv_id
	    	left join hos_sup_dict hs on hs.sup_id = mis.sup_id
	         	and hs.group_id = mis.group_id
	         	and hs.hos_id = mis.hos_id
	         	and hs.is_stop = 0
	         left join  MAT_LOCATION_DICT mld on 
				msi.group_id = mld.group_id
				and msi.hos_id = mld.hos_id
				and msi.copy_code = mld.copy_code
				and msi.location_id = mld.location_id
			where
				msi.group_id = #{group_id,jdbcType=INTEGER}
				and msi.hos_id = #{hos_id,jdbcType=INTEGER}
				and msi.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="store_id != null and store_id != ''">
					and msi.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="mat_type_code != null and mat_type_code != ''">
				and mid.mat_type_id  in  (
					select mat_type_id
					from mat_type
                	where mat_type_code like '${mat_type_code}%'
                   		and  is_last = 1
			            <if test="group_id != null and group_id != ''">
							and group_id = #{group_id,jdbcType=INTEGER}
						</if>
						<if test="hos_id != null and hos_id != ''">
							and hos_id = #{hos_id,jdbcType=INTEGER}
						</if>
						<if test="copy_code != null and copy_code != ''">
							and copy_code = #{copy_code,jdbcType=VARCHAR}
						</if>
			 	 )
				</if>
				 and nvl(msi.location_id,0) &lt; &gt; 0
				  and
				  (mld.location_name like    '01-%' 
				   or mld.location_name like '02-%' 
				   or mld.location_name like '03-%' 
				   or mld.location_name like '04-%' 
				   or mld.location_name like '05-%' 
				   or mld.location_name like '06-%' 
				   or mld.location_name like '07-%' 
				   or mld.location_name like '08-%' 
				   or mld.location_name like '09-%' 
				   or mld.location_name like '10-%' 
				   or mld.location_name like '11-%' 
				   or mld.location_name like '12-%' 
				   or mld.location_name like '13-%' 
				   or mld.location_name like '14-%' 
				   or mld.location_name like '15-%'
				   or mld.location_name like '16-%'
				   or mld.location_name like '17-%'
				   or mld.location_name like '18-%'
				   or mld.location_name like '19-%'
				   or mld.location_name like '20-%'
				   or mld.location_name like '21-%'
				   or mld.location_name like '22-%'
				   or mld.location_name like '23-%'
				  )
				--and msi.secu_limit  &gt; 0
				--and ((nvl(msi.warn_amount,0) - (nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0)))) &gt; 0

	</insert>
	
	<!-- 删除明细同时删除对应关系 -->
	<delete id="deleteMatApplyDetailInv" parameterType="java.util.List">
		delete from mat_apply_pur_rela 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<!-- 20180122 hsy注释 不应该根据申领单删除，只能根据采购计划删除
				<if test="item.apply_id != null and item.apply_id != ''">
					and apply_id = #{item.apply_id,jdbcType=INTEGER}
				</if>
				<if test="item.app_detail_id != null and item.app_detail_id != ''">
					and app_detail_id = #{item.app_detail_id,jdbcType=INTEGER}
				</if> 
				-->
				<if test="item.pur_id != null and item.pur_id != ''">
					and rela_id = #{item.pur_id,jdbcType=INTEGER}
				</if>
				<if test="item.pur_detail_id != null and item.pur_detail_id != ''">
					and rela_detail_id = #{item.pur_detail_id,jdbcType=INTEGER}
				</if>
				and rela_type=1
			</foreach>
		</where>
	</delete>
	
	<select id="queryMatApplyDetailListById" parameterType="java.util.Map" resultType="java.util.Map">
		select t.group_id,t.hos_id,t.copy_code,t.rela_id as pur_id ,t.rela_detail_id as pur_detail_id
		from (
		      select a.group_id,a.hos_id,a.copy_code,a.rela_id,a.rela_detail_id
		      from  mat_apply_pur_rela  a
		      join  (
		      	select group_id,hos_id,copy_code,pur_id,pur_detail_id
		      	from mat_pur_detail 
		      	<where>
		      			group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND pur_id = #{pur_id,jdbcType=INTEGER}
		      	</where>
		      ) b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
		      	and a.rela_id=b.pur_id
		      where a.rela_type=1
		      minus
		      select group_id,hos_id,to_char(copy_code) copy_code,pur_id,pur_detail_id
		      from mat_pur_detail 
		      <where>
		      		group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND pur_id = #{pur_id,jdbcType=INTEGER}
		      </where> 
		)t
	</select>
		
	<select id="queryMatStoreReqPurRelaById" parameterType="java.util.Map" resultType="java.util.Map">
		select t.group_id,t.hos_id,t.copy_code,tt.req_id ,tt.req_detail_id,tt.pur_id,tt.pur_detail_id
		from  mat_req_store_pur_rela tt
		join (
		      select a.group_id,a.hos_id,a.copy_code,a.pur_id,a.pur_detail_id
		      from  mat_req_store_pur_rela  a
		      join  (
		      	select group_id,hos_id,copy_code,pur_id,pur_detail_id
		      	from mat_pur_detail 
		      	<where>
		      			group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND pur_id = #{pur_id,jdbcType=INTEGER}
		      	</where>
		      ) b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
		      	and a.pur_id=b.pur_id
		      minus
		      select group_id,hos_id,to_char(copy_code) copy_code,pur_id,pur_detail_id
		      from mat_pur_detail 
		      <where>
		      		group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND pur_id = #{pur_id,jdbcType=INTEGER}
		      </where> 
		)t on tt.group_id=t.group_id and tt.hos_id=t.hos_id and tt.copy_code=t.copy_code and tt.pur_id=t.pur_id
			and tt.pur_detail_id=t.pur_detail_id
		
	</select>
	
	<select id="queryMatDeptReqPurRelaById" parameterType="java.util.Map" resultType="java.util.Map">
		select t.group_id,t.hos_id,t.copy_code,tt.req_id ,tt.req_detail_id,tt.pur_id,tt.pur_detail_id
		from mat_req_dept_pur_rela tt
		join  (
		      select a.group_id,a.hos_id,a.copy_code,a.pur_id,a.pur_detail_id
		      from  mat_req_dept_pur_rela  a
		      join  (
		      	select group_id,hos_id,copy_code,pur_id,pur_detail_id
		      	from mat_pur_detail 
		      	<where>
		      			group_id = #{group_id,jdbcType=INTEGER}
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND pur_id = #{pur_id,jdbcType=INTEGER}
		      	</where>
		      ) b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
		      	and a.pur_id=b.pur_id
		      minus
		      select group_id,hos_id,to_char(copy_code) copy_code,pur_id,pur_detail_id
		      from mat_pur_detail 
		      <where>
		      		group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND pur_id = #{pur_id,jdbcType=INTEGER}
		      </where> 
		) t on tt.group_id=t.group_id and tt.hos_id=t.hos_id and tt.copy_code=t.copy_code and tt.pur_id=t.pur_id
			and tt.pur_detail_id=t.pur_detail_id 
	</select>
	
	
	<select id="queryMatPurExistsNoDetails" parameterType="java.util.List" resultType="java.util.Map" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.pur_id,jdbcType=INTEGER} as pur_id,
					#{item.pur_detail_id,jdbcType=INTEGER} as pur_detail_id
				from dual
			</foreach>
		)
		
		  select a.group_id,a.hos_id,a.copy_code,a.pur_id,nvl(b.counts,0) counta
		  from (
		       select distinct group_id,hos_id,copy_code,pur_id
		      from list_temp
		  ) a
		  left join (
		       select group_id,hos_id,copy_code,pur_id,count(0) counts
		       from mat_pur_detail 
		       where pur_id in ( select distinct pur_id from list_temp )
		       group by  group_id,hos_id,copy_code,pur_id
		  )  b on  a.group_id = b.group_id and a.hos_id = b.hos_id and a.copy_code = b.copy_code and a.pur_id = b.pur_id 
		  	   and 1 = 1
		  where nvl(b.counts,0) = 0
	</select>
	
	<select id="queryPurDetailForTemplatePrint" parameterType="map" resultType="map">
		SELECT  mpd.pur_id as id,mpd.group_id, mpd.hos_id, mpd.copy_code, mpd.pur_id, mpd.inv_id, mid.bid_code
			, mpd.inv_no, mid.inv_code, mid.inv_name, mid.inv_model
			, hu.unit_name as unit_code, mih.cur_amount, mpd.amount, mpd.price, mpd.amount * mpd.price AS amount_money
			, mpd.num, mpd.num_exchange, mpd.pack_code, hp.pack_name AS pack_unit_name, mpd.sup_no
			, mpd.sup_id, hs.sup_code as sup_code, hs.sup_name AS sup_name, mpd.req_amount, hfd.fac_id, hfd.fac_no
			, hfd.fac_name, mpd.memo, mpm.state,hdd.dept_name as app_dept_name,to_char(mpd.app_date, 'yyyy-MM-dd hh24:mi:ss') as APP_DATE,
            mpd.ADVISE_NUM,mld.LOCATION_NAME
		FROM MAT_PUR_DETAIL mpd
		left join MAT_PUR_MAIN mpm ON mpd.group_id=mpm.group_id and mpd.hos_id=mpm.hos_id and mpd.copy_code = mpm.copy_code and mpd.pur_id = mpm.pur_id 
		left join MAT_INV_DICT mid ON mpd.group_id = mid.group_id
			and mpd.hos_id = mid.hos_id
			and mpd.copy_code = mid.copy_code
			and mpd.inv_id = mid.inv_id 
			and mpd.inv_no = mid.inv_no
		left join MAT_INV_UNIT_MAP mium ON mpd.group_id = mium.group_id
			and mpd.hos_id = mium.hos_id
			and mpd.copy_code = mium.copy_code
			and mpd.inv_id = mium.inv_id
			and mpd.pack_code = mium.pack_code 
		left join HOS_PACKAGE hp ON mium.group_id = hp.group_id
			and mium.hos_id = hp.hos_id
			and mium.pack_code = hp.pack_code 
		left join HOS_FAC_DICT hfd ON mid.group_id = hfd.group_id
			and mid.hos_id = hfd.hos_id
			and mid.fac_id = hfd.fac_id 
			and mid.fac_no = hfd.fac_no
		left join hos_sup_dict hs ON mpd.group_id = hs.group_id
			and mpd.hos_id = hs.hos_id
			and mpd.sup_id = hs.sup_id
			and mpd.sup_no = hs.sup_no 
		left join HOS_UNIT hu ON mpd.group_id = hu.group_id
			and mpd.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code 
		left join (
				SELECT group_id,hos_id,copy_code,inv_id, SUM(cur_amount) AS cur_amount
				FROM MAT_inv_HOLD
				GROUP BY group_id,hos_id,copy_code,inv_id
		) mih ON mid.group_id=mih.group_id and mid.hos_id=mih.hos_id and mid.copy_code=mih.copy_code and mid.inv_id = mih.inv_id 
		left join hos_dept_dict hdd on mpd.group_id=hdd.group_id and mpd.hos_id=hdd.hos_id
            and mpd.app_dept_id =hdd.dept_id and mpd.app_dept_no= hdd.dept_no
        left join mat_store_inv msi on msi.group_id = mpm.group_id
        and msi.hos_id = mpm.hos_id
        and msi.copy_code = mpm.copy_code
        and msi.store_id = mpm.store_id
        and msi.inv_id = mpd.inv_id 
            left join mat_location_dict mld on mld.group_id = msi.group_id
        and mld.hos_id = msi.hos_id
        and mld.copy_code = msi.copy_code
        and msi.location_id = mld.location_id 
		
		where mpd.group_id = #{group_id,jdbcType=NUMERIC}
			and mpd.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mpd.copy_code = #{copy_code,jdbcType=VARCHAR}
			<foreach collection="purDetailIds" item="detail_id" open="and mpd.pur_detail_id in(" close=")" separator=",">
			    #{detail_id,jdbcType=VARCHAR}
			</foreach>	
		order by pur_detail_id
	</select>
	
	<select id="queryMatInvRecentInOutAmount" parameterType="map" resultMap="matPurPlanMake">
		with in_out_temp as (
		    select 
		      mid.inv_id,mid.group_id,mid.hos_id,mid.copy_code,
		      mid.amount as three_in_amount,null as three_out_amount,
		      null as six_in_amount,null as six_out_amount
		    from mat_in_main mim
		    left join mat_in_detail mid
		    on mim.group_id=mid.group_id
		    and mim.hos_id=mid.hos_id
		    and mim.copy_code=mid.copy_code
		    and mim.in_id=mid.in_id
		    <where>
		    and mim.group_id=#{group_id,jdbcType=INTEGER}
		    and mim.hos_id=#{hos_id,jdbcType=INTEGER}
		    and mim.copy_code=#{copy_code,jdbcType=VARCHAR}
		    and mim.state=3
		    <if test="store_id != null and store_id != ''">
		    	and mim.store_id=#{store_id,jdbcType=INTEGER}
		    </if>
		    <if test="inv_id !=null and inv_id != ''">
		    	and mid.inv_id=#{inv_id,jdbcType=INTEGER}
		    </if>
		    <if test="three_start_date !=null and three_start_date != ''">
			    and to_char(mim.confirm_date,'yyyy-MM-dd') >=#{three_start_date,jdbcType=VARCHAR}
		    </if>
		    <if test="end_date !=null and end_date != ''">
			    and to_char(mim.confirm_date,'yyyy-MM-dd') &lt;=#{end_date,jdbcType=VARCHAR}
		    </if>
		    </where>
		    union all
		    select 
		      modd.inv_id,modd.group_id,modd.hos_id,modd.copy_code,
		      null as three_in_amount,modd.amount as three_out_amount,
		      null as six_in_amount,null as six_out_amount
		    from mat_out_main mom
		    left join mat_out_detail modd
		    on mom.group_id=modd.group_id
		    and mom.hos_id=modd.hos_id
		    and mom.copy_code=modd.copy_code
		    and mom.out_id=modd.out_id
		    <where>
		    and mom.group_id=#{group_id,jdbcType=INTEGER}
		    and mom.hos_id=#{hos_id,jdbcType=INTEGER}
		    and mom.copy_code=#{copy_code,jdbcType=VARCHAR}
		    and mom.state=3
		    <if test="store_id != null and store_id != ''">
		    	and mom.store_id=#{store_id,jdbcType=INTEGER}
		    </if>
		    <if test="inv_id !=null and inv_id != ''">
		    	and modd.inv_id=#{inv_id,jdbcType=INTEGER}
		    </if>
		    <if test="three_start_date !=null and three_start_date != ''">
			    and to_char(mom.confirm_date,'yyyy-MM-dd') >=#{three_start_date,jdbcType=VARCHAR}
		    </if>
		    <if test="end_date !=null and end_date != ''">
			    and to_char(mom.confirm_date,'yyyy-MM-dd') &lt;=#{end_date,jdbcType=VARCHAR}
		    </if>
		    </where>
		    union all
		    select 
		      mid.inv_id,mid.group_id,mid.hos_id,mid.copy_code,
		      null as three_in_amount,null as three_out_amount,
		      mid.amount as six_in_amount,null as six_out_amount
		    from mat_in_main mim
		    left join mat_in_detail mid
		    on mim.group_id=mid.group_id
		    and mim.hos_id=mid.hos_id
		    and mim.copy_code=mid.copy_code
		    and mim.in_id=mid.in_id
		    <where>
		    and mim.group_id=#{group_id,jdbcType=INTEGER}
		    and mim.hos_id=#{hos_id,jdbcType=INTEGER}
		    and mim.copy_code=#{copy_code,jdbcType=VARCHAR}
		    and mim.state=3
		    <if test="store_id != null and store_id != ''">
		    	and mim.store_id=#{store_id,jdbcType=INTEGER}
		    </if>
		    <if test="inv_id !=null and inv_id != ''">
		    	and mid.inv_id=#{inv_id,jdbcType=INTEGER}
		    </if>
		    <if test="six_start_date !=null and six_start_date != ''">
			    and to_char(mim.confirm_date,'yyyy-MM-dd') >=#{six_start_date,jdbcType=VARCHAR}
		    </if>
		    <if test="end_date !=null and end_date != ''">
			    and to_char(mim.confirm_date,'yyyy-MM-dd') &lt;=#{end_date,jdbcType=VARCHAR}
		    </if>
		    </where>
		    union all
		    select 
		      modd.inv_id,modd.group_id,modd.hos_id,modd.copy_code,
		      null as three_in_amount,null as three_out_amount,
		      null as six_in_amount,modd.amount as six_out_amount
		    from mat_out_main mom
		    left join mat_out_detail modd
		    on mom.group_id=modd.group_id
		    and mom.hos_id=modd.hos_id
		    and mom.copy_code=modd.copy_code
		    and mom.out_id=modd.out_id
		    <where>
		    and mom.group_id=#{group_id,jdbcType=INTEGER}
		    and mom.hos_id=#{hos_id,jdbcType=INTEGER}
		    and mom.copy_code=#{copy_code,jdbcType=VARCHAR}
		    and mom.state=3
		    <if test="store_id != null and store_id != ''">
		    	and mom.store_id=#{store_id,jdbcType=INTEGER}
		    </if>
		    <if test="inv_id !=null and inv_id != ''">
		    	and modd.inv_id=#{inv_id,jdbcType=INTEGER}
		    </if>
		    <if test="six_start_date !=null and six_start_date != ''">
			    and to_char(mom.confirm_date,'yyyy-MM-dd') >=#{six_start_date,jdbcType=VARCHAR}
		    </if>
		    <if test="end_date !=null and end_date != ''">
			    and to_char(mom.confirm_date,'yyyy-MM-dd') &lt;=#{end_date,jdbcType=VARCHAR}
		    </if>
		    </where>
		)
		
		select 
		  iot.inv_id,mid.inv_code,mid.inv_name,mid.inv_model,
		  sum(nvl(iot.three_in_amount,0)) three_in_amount,
		  sum(nvl(iot.three_out_amount,0)) three_out_amount,
		  sum(nvl(iot.six_in_amount,0)) six_in_amount,
		  sum(nvl(iot.six_out_amount,0)) six_out_amount
		from  in_out_temp iot
		left join mat_inv_dict mid
		on mid.group_id=iot.group_id
		and mid.hos_id=iot.hos_id
		and mid.copy_code=iot.copy_code
		and mid.inv_id=iot.inv_id
		and mid.is_stop=0
		group by iot.inv_id,mid.inv_code,mid.inv_name,mid.inv_model

	</select>
</mapper>