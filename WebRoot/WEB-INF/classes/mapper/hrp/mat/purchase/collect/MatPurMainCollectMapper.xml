<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.purchase.collect.MatPurMainCollectMapper">
	<resultMap id="matPurMainCollect" type="java.util.Map" >
		<result property="group_id" column="group_id"/><!-- 集团ID -->
		<result property="hos_id" column="hos_id"/><!-- 医院ID -->
		<result property="copy_code" column="copy_code"/><!-- 账套编码 -->
		<result property="pur_id" column="pur_id"/><!-- 计划单ID -->
		<result property="pur_code" column="pur_code"/><!-- 计划编号 -->
		<result property="dept_id" column="dept_id"/><!-- 科室ID -->
		<result property="dept_no" column="dept_no"/><!-- 科室变更ID -->
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/><!-- 编制部门 -->
		<result property="brif" column="brif"/><!-- 摘要 -->
		<result property="pur_type" column="pur_type"/><!-- 单据类型 -->
		<result property="plan_type" column="plan_type"/><!-- 计划类型 -->
		<result property="pur_hos_id" column="pur_hos_id"/><!-- 采购单位ID -->
		<result property="pur_hos_no" column="pur_hos_no"/><!-- 采购单位ID -->
		<result property="pur_hos_code" column="pur_hos_code"/><!-- 采购单位ID -->
		<result property="pur_hos_name" column="pur_hos_name"/><!-- 采购单位名称 -->
		
		<result property="req_hos_id" column="req_hos_id"/><!-- 采购单位ID -->
		<result property="req_hos_no" column="req_hos_no"/><!-- 采购单位ID -->
		<result property="req_hos_code" column="req_hos_code"/><!-- 采购单位ID -->
		<result property="req_hos_name" column="req_hos_name"/><!-- 请购单位名称 -->
		
		<result property="pay_hos_id" column="pay_hos_id"/><!-- 付款单位ID -->
		<result property="pay_hos_no" column="pay_hos_no"/><!-- 采购单位ID -->
		<result property="pay_hos_code" column="pay_hos_code"/><!-- 采购单位ID -->
		<result property="pay_hos_name" column="pay_hos_name"/><!-- 付款单位名称 -->
		<result property="maker" column="maker"/><!-- 制单人 -->
		<result property="make_date" column="make_date"/><!-- 制单日期 -->
		<result property="checker" column="checker"/><!-- 审核人 -->
		<result property="check_date" column="check_date"/><!-- 审核日期 -->
		<result property="state" column="state"/><!-- 状态 -->
		<result property="is_dir" column="is_dir"/>
		<result property="dir_dept_id" column="dir_dept_id"/>
		<result property="dir_dept_no" column="dir_dept_no"/>
		<result property="dir_dept_code" column="dir_dept_code"/>
		<result property="dir_dept_name" column="dir_dept_name"/>
		<result property="stock_no" column="stock_no" />
		<result property="stock_id" column="stock_id" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		<result property="arrive_date" column="arrive_date"/><!-- 计划到货日期 -->
		<result property="checkboxstatus" column="checkboxstatus"/>
		
		<!-- 采购明细字段 返回结果集字段-->
		<result property="inv_id" column="inv_id"/><!-- 材料ID -->
		<result property="inv_no" column="inv_no"/><!-- 材料变更ID -->
		<result property="inv_code" column="inv_code"/><!-- 材料编码 -->
		<result property="inv_name" column="inv_name"/><!-- 材料名称 -->
		<result property="inv_model" column="inv_model"/><!-- 规格型号 -->
		<result property="unit_name" column="unit_name"/><!-- 计量单位 -->
		<result property="unit_code" column="unit_code"/><!-- 计量单位编码  -->
		<result property="pack_code" column="pack_code"/><!-- 包装单位编码 -->
		<result property="pack_unit_name" column="pack_unit_name"/><!-- 包装单位名称 -->
		<result property="num_exchange" column="num_exchange"/><!-- 转换量 -->
		<result property="cur_amount" column="cur_amount"/><!-- 当前库存 -->
		<result property="req_amount" column="req_amount"/><!-- 请购数量 -->
		<result property="num" column="num"/><!-- 包装数量 -->
		<result property="amount" column="amount"/><!-- 采购数量 -->
		<result property="price" column="price"/><!-- 单价 -->
		<result property="amount_money" column="amount_money"/><!-- 金额 -->
		<result property="stocker" column="stocker"/><!-- 采购员 -->
		<result property="stocker_name" column="stocker_name"/><!-- 采购员名称 -->
		<result property="arrive_date" column="arrive_date"/><!-- 计划到货日期 -->
		<result property="sup_no" column="sup_no"/><!-- 供应商变更号 -->
		<result property="sup_id" column="sup_id"/><!-- 供应商ID -->
		<result property="sup_name" column="sup_name"/><!-- 供应商名称 -->
		<result property="fac_id" column="fac_id"/><!-- 生厂商ID -->
		<result property="fac_no" column="fac_no"/><!-- 生厂商变更ID -->
		<result property="fac_name" column="fac_name"/><!-- 生厂商名称 -->
		<result property="memo" column="memo"/><!-- 备注 -->
		<result property="store_name" column="store_name"/><!-- 库房名称 -->
		<result property="req_id" column="req_id"/><!-- 计划单ID -->
		<result property="req_code" column="req_code"/><!-- 计划单号 -->
		<result property="maker_name" column="maker_name"/><!-- 制单人名称 -->
		<result property="checker_name" column="checker_name"/><!-- 审核人名字 -->
		<result property="apply_year_month" column="apply_year_month"/><!-- 申请年月 -->
		
		<result property="hos_pur_id" column="hos_pur_id"/><!-- 医院采购单ID -->
		<result property="sum_amount" column="sum_amount"/><!-- 材料汇总分组后采购数量 -->
		
		<result property="pur_amount" column="pur_amount"/><!-- 采购计划对应关系表 请购数量 -->
		<result property="exec_amount" column="exec_amount"/><!-- 采购计划对应关系表 执行数量 -->
		<result property="total_id" column="total_id"/><!-- 集团采购单ID -->
		<result property="pur_rela" column="pur_rela"/><!-- 采购计划对应关系字符串 -->
	</resultMap>
	
	<!-- 查询 采购计划 -->
	<select id="query" parameterType="java.util.Map" resultMap="matPurMainCollect">
		SELECT 
			  mpm.group_id,
			  mpm.hos_id,
			  mpm.copy_code,
			  mpm.pur_id,
			  mpm.pur_code,
			  hdd.dept_name,
			  mpm.brif,
			  msl.field_desc as plan_type,
			  pur.hos_name as pur_hos_name,
			  req.hos_name as req_hos_name,
			  pay.hos_name as pay_hos_name,
			  su.user_name as maker,
			  mpm.make_date,
			  sus.user_name as checker,
			  mpm.check_date,
			  mpm.state,
       		  mpm.arrive_date,
       		  mpm.is_dir,
       		  mpm.dir_dept_id,
			  mpm.dir_dept_no,
			  hddd.dept_code dir_dept_code,
			  hddd.dept_name dir_dept_name
		FROM MAT_PUR_MAIN mpm
		LEFT JOIN HOS_DEPT_DICT hdd ON mpm.group_id = hdd.group_id
			and mpm.hos_id = hdd.hos_id
			and mpm.dept_id = hdd.dept_id
			<if test="show_history == 1">
				and hdd.dept_no = mpm.dept_no
			</if>
			<if test="show_history == 0">
				and hdd.is_stop = 0
			</if>
		LEFT JOIN MAT_SYS_LIST msl ON  mpm.pur_type = msl.field_value
			AND msl.field_code = 'PUR_TYPE'
		left join v_hos_dict pur on pur.hos_id = mpm.pur_hos_id
         	and pur.group_id = mpm.group_id
         	and pur.is_stop = 0
    	left join v_hos_dict req on req.group_id = mpm.group_id
         	and mpm.req_hos_id = req.hos_id
         	and req.is_stop = 0
    	left join v_hos_dict pay on mpm.group_id = pay.group_id
         	and mpm.pay_hos_id = pay.hos_id
         	and pay.is_stop = 0
		LEFT JOIN SYS_USER su ON mpm.group_id = su.group_id
			AND mpm.hos_id = su.hos_id
			AND mpm.copy_code = su.copy_code
			AND mpm.maker = su.user_id
		LEFT JOIN SYS_USER sus ON mpm.group_id = sus.group_id
			AND mpm.hos_id = sus.hos_id
			AND mpm.copy_code = sus.copy_code
			AND mpm.checker = sus.user_id
		left join hos_dept_dict hddd on hddd.dept_id = mpm.dir_dept_id
	    	and hddd.group_id = mpm.group_id
	    	and hddd.hos_id = mpm.hos_id
	    	<if test="show_history == 1">
				and hddd.dept_no = mpm.dir_dept_no
			</if>
			<if test="show_history == 0">
				and hddd.is_stop = 0
			</if>	
		WHERE
			mpm.group_id = #{group_id}
			AND mpm.hos_id = #{hos_id}
			AND mpm.copy_code = #{copy_code}
			<if test="begin_date != null and begin_date != '' and end_date != null and end_date != '' ">
				AND mpm.make_date between to_date(#{begin_date},'yyyy/MM/dd') and to_date(#{end_date},'yyyy/MM/dd')
			</if>
			
			<if test="dept_id != null and dept_id != '' ">
				AND mpm.dept_id = #{dept_id}
			</if>
			
<!-- 			<if test="state != null and state != '' "> -->
<!-- 				AND mpm.state = #{state} -->
<!-- 			</if> -->
			<if test="pur_code != null and pur_code != '' ">
				AND mpm.pur_code like '${pur_code}%'
			</if>
			<if test="pur_id != null and pur_id != '' ">
				AND  mpm.pur_id = #{pur_id}
			</if>
			<if test="brif != null and brif != '' ">
				AND mpm.brif like '%${brif}%'
			</if>
			<if test="is_dir != null and is_dir != '' ">
				AND mpm.is_dir = #{is_dir}
			</if>
			<if test="req_hos_id != null and req_hos_id != '' ">
				AND mpm.req_hos_id = #{req_hos_id}
			</if>
			<if test="pur_hos_id != null and pur_hos_id != '' ">
				AND mpm.pur_hos_id = #{pur_hos_id}
			</if>
			<if test="dir_dept_id != null and dir_dept_id != '' ">
				AND mpm.dir_dept_id = #{dir_dept_id}
			</if>
				and mpm.pur_type = 2
				<!-- 不需要判断是否汇总 只要是审核过的统购计划都应该能够查询 如有需要在添加 -->
				<!-- AND mpm.is_collect = 1 -->
			    AND mpm.state in (2,3)
			order by mpm.pur_id 
	</select>
	
	<!-- 根据计划单ID 查询采购计划 -->
	<select id="queryByCode" parameterType="java.util.Map"  resultMap="matPurMainCollect">
		SELECT
		  mpm.group_id,
		  mpm.hos_id,
		  mpm.copy_code,
		  mpm.pur_id,
		  mpm.pur_code,
		  mpm.dept_id,
		  hdd.dept_no,
		  hdd.dept_name,
		  to_char(mpm.make_date,'yyyy-MM-dd') as make_date,
		  mpm.pur_type,
		  mpm.brif,
		  mpm.pur_hos_id,
		  pur.hos_simple as pur_hos_name,
		  mpm.req_hos_id,
		  req.hos_simple as req_hos_name,
		  mpm.pay_hos_id,
		  pay.hos_simple as pay_hos_name
		FROM MAT_PUR_MAIN mpm
		LEFT JOIN HOS_DEPT_DICT hdd
		ON
			mpm.group_id = hdd.group_id
			and mpm.hos_id = hdd.hos_id
			and mpm.dept_id = hdd.dept_id
		LEFT JOIN HOS_INFO pur
		ON
			mpm.group_id = pur.group_id
			AND mpm.pur_hos_id = pur.hos_id
		LEFT JOIN HOS_INFO req
		ON
			mpm.group_id = req.group_id
			AND mpm.req_hos_id = req.hos_id
		LEFT JOIN HOS_INFO pay
		ON
			mpm.group_id = pay.group_id
			AND mpm.pay_hos_id = pay.hos_id	
		WHERE
		     mpm.group_id = #{group_id}
		     and mpm.hos_id = #{hos_id}
		     and mpm.copy_code = #{copy_code}
		     and mpm.pur_id = #{pur_id}
	</select>
	
	<!-- 按主表ID查询 采购计划明细 -->
	<select id="queryMatPurDetail" parameterType="java.util.Map" resultMap="matPurMainCollect">
			 SELECT 
				 mpd.group_id, 
				 mpd.hos_id, 
				 mpd.copy_code, 
				 mpd.pur_id, 
				 mpd.inv_id, 
				 mpd.inv_no,
				 mid.inv_code,
				 mid.inv_name,
				 mid.inv_model,
				 mid.unit_code,
				 hu.unit_name,
				 mih.cur_amount,
				 mpd.amount, 
				 mpd.price,
				 mpd.amount*mpd.price as amount_money, 
				 mpd.num, 
				 mpd.num_exchange, 
				 mpd.pack_code, 
				 hp.pack_name as pack_unit_name, 
				
				 mpd.sup_no, 
				 mpd.sup_id, 
				 hs.sup_code||' '||hs.sup_name as sup_name, 
				 mpd.req_amount, 
				 hfd.fac_id,
				 hfd.fac_no,
				 hfd.fac_name, 
				 mpd.memo,
				 mprr.pur_rela
		    FROM MAT_PUR_DETAIL mpd
		    LEFT JOIN MAT_INV_DICT mid 
		    ON 	
		    	mpd.group_id = mid.group_id
			    AND mpd.hos_id = mid.hos_id
			    AND mpd.copy_code = mid.copy_code
			    AND mpd.inv_id = mid.inv_id 
		    LEFT JOIN MAT_INV_UNIT_MAP mium 
		    ON 
		    	mpd.group_id = mium.group_id 
			    AND mpd.hos_id = mium.hos_id
			    AND mpd.copy_code = mium.copy_code
			    AND mpd.inv_id = mium.inv_id
			    AND mpd.pack_code = mium.pack_code 
		    LEFT JOIN HOS_PACKAGE hp 
		    ON 
		    	mium.group_id = hp.group_id
			    AND mium.hos_id = hp.hos_id
			    AND mium.pack_code = hp.pack_code 
		  
		    LEFT JOIN HOS_FAC_DICT hfd
		    ON
			    mid.group_id = hfd.group_id
			    AND mid.hos_id = hfd.hos_id
			    AND mid.fac_id = hfd.fac_id
			    and mid.fac_no = hfd.fac_no
		    LEFT JOIN HOS_SUP hs 
		    ON 
		    	mpd.group_id = hs.group_id
		    	AND mpd.hos_id = hs.hos_id
		    	AND mpd.sup_id = hs.sup_id
		    LEFT JOIN HOS_UNIT hu
		    ON
			    mpd.group_id = hu.group_id
			    AND mpd.hos_id = hu.hos_id
			    AND mid.unit_code = hu.unit_code
		    LEFT JOIN (select inv_id,sum(cur_amount) as cur_amount from MAT_inv_HOLD group by inv_id)  mih
		    ON
		        mid.inv_id = mih.inv_id
		   LEFT JOIN (
              SELECT inv_id,'['||to_char(wm_concat('{"pur_id":'||pur_id||',"total_id":'||total_id||',"exec_amount":'||exec_amount||',"pur_amount":'||pur_amount|| ',"inv_id":'|| inv_id || '}'))||']' pur_rela 
              FROM MAT_PUR_RELA
              WHERE
              		group_id = #{group_id}
			        AND hos_id = #{hos_id}
			        AND copy_code = #{copy_code}
			        AND total_id = #{pur_id}
              GROUP BY inv_id  
     	) mprr
       ON mpd.inv_id = mprr.inv_id
		  WHERE
		        mpd.group_id = #{group_id}
		        AND mpd.hos_id = #{hos_id}
		        AND mpd.copy_code = #{copy_code}
		        AND mpd.pur_id = #{pur_id}
		    ORDER BY mpd.pur_id
	</select>
	
	<!-- 查询 材料当前库存明细 -->
	<select id="queryMatInvCurAmountDetail" parameterType="java.util.Map" resultMap="matPurMainCollect">
		SELECT
		  hs.group_id,
		  hs.hos_id,
		  hs.store_id,
		  hs.store_name,
		  mi.inv_id,
		  mi.inv_code,
		  mi.inv_name,
		  mi.inv_model,
		  mi.unit_code,
		  hu.unit_name,
		  mih.cur_amount
		FROM MAT_INV_HOLD mih
		LEFT JOIN HOS_STORE hs
		ON
		   mih.group_id = hs.group_id
		   and mih.hos_id = hs.hos_id
		   and mih.store_id = hs.store_id
		LEFT JOIN MAT_INV mi
		ON
		   mih.group_id = mi.group_id
		   and mih.hos_id = mi.hos_id
		   and mih.copy_code = mi.copy_code
		   and mih.inv_id = mi.inv_id
		LEFT JOIN HOS_UNIT hu
		ON
		   mi.unit_code = hu.unit_code
		WHERE
		   mih.group_id = #{group_id}
		   and mih.hos_id = #{hos_id}
		   and mih.copy_code = #{copy_code}
		   and mih.inv_id = #{inv_id}
	</select>
	
	<!-- 按采购计划汇总 -->
	<select id="queryMatPurMainByCollect" parameterType="java.util.Map" resultMap="matPurMainCollect">
		SELECT 
      		mpm.group_id, 
      		mpm.hos_id,
	        mpm.copy_code, 
	        mpm.pur_id, 
	        mpm.pur_code, 
	        to_char(mpm.make_date,'yyyyMM') as apply_year_month,
	        mpm.brif,
	        mpm.req_hos_id,
	        mpm.pur_hos_id,
	        mpm.pay_hos_id,
	        pur.hos_name AS pur_hos_name, 
	        req.hos_name AS req_hos_name, 
	        pay.hos_name AS pay_hos_name, 
	        su.user_name AS maker, 
	        sus.user_name AS checker, 
	        mpm.check_date
      FROM MAT_PUR_MAIN mpm
      LEFT JOIN HOS_DEPT_DICT hdd  ON  mpm.group_id = hdd.group_id
        AND mpm.hos_id = hdd.hos_id
        AND mpm.dept_id = hdd.dept_id 
      left join v_hos_dict pur on pur.hos_id = mpm.pur_hos_id
         	and pur.group_id = mpm.group_id
         	and pur.is_stop = 0
      left join v_hos_dict req on req.group_id = mpm.group_id
         	and mpm.req_hos_id = req.hos_id
         	and req.is_stop = 0
      left join v_hos_dict pay on mpm.group_id = pay.group_id
         	and mpm.pay_hos_id = pay.hos_id
         	and pay.is_stop = 0 
      LEFT JOIN SYS_USER su  ON  mpm.group_id = su.group_id
        AND mpm.hos_id = su.hos_id
        AND mpm.copy_code = su.copy_code
        AND mpm.maker = su.user_id 
      LEFT JOIN SYS_USER sus  ON  mpm.group_id = sus.group_id
        AND mpm.hos_id = sus.hos_id
        AND mpm.copy_code = sus.copy_code
        AND mpm.checker = sus.user_id 
        <where>
        	<if test="group_id != null and group_id != ''">
				mpm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="pur_code != null and pur_code != ''">
				AND mpm.pur_code like #{pur_code}||'%'
			</if>
			<if test="make_date != null and make_date != ''">
				AND to_char(mpm.make_date,'yyyy-MM') = #{make_date}
			</if>
			AND mpm.req_hos_id &lt;&gt; #{hos_id}
		    AND mpm.pur_hos_id = #{hos_id}
		    AND mpm.pay_hos_id = #{hos_id}
			AND mpm.pur_type = 2
			AND mpm.state = 2			
        </where>
	    ORDER BY mpm.pur_id desc
	</select>
	
	<!-- 根据ID 查询采购计划明细-->
	<select id="queryMatPurMainDetail" parameterType="java.util.Map" resultMap="matPurMainCollect">
		 SELECT
		 	a.group_id,
		 	a.hos_id,
		 	a.copy_code, 
		 	a.pur_id,
		 	a.inv_id,
		 	a.inv_no,
		 	a.sup_no,
		 	a.sup_id,
		 	a.price,
		 	a.amount,
		 	b.sum_amount
 		FROM 
			 (SELECT mpd.inv_no,
			         mpd.inv_id,
			         mpd.price,
			         mpd.group_id,
			         mpd.hos_id,
			         mpd.copy_code,
			         mpd.sup_no,
			         mpd.sup_id,
			         mpd.amount,
			         mpm.pur_id
			  from MAT_PUR_MAIN mpm
			  LEFT JOIN (
			       SELECT a.group_id,a.hos_id,a.copy_code,a.pur_id,a.pur_hos_id,a.pay_hos_id,a.req_hos_id 
			       FROM mat_pur_main a
			       WHERE 
			        a.group_id = #{group_id}
			        AND a.hos_id = #{hos_id}
			        AND a.copy_code = #{copy_code}
			        AND a.pur_id  in (${pur_ids})
			        AND a.pay_hos_id =#{pay_hos_id,jdbcType=INTEGER}
			        AND a.pur_hos_id = #{pur_hos_id,jdbcType=INTEGER}
			        AND a.req_hos_id = #{req_hos_id,jdbcType=INTEGER}
			  ) c 
			  ON mpm.pur_id = c.pur_id 
					AND mpm.pay_hos_id =c.pay_hos_id 
					AND mpm.req_hos_id =c.req_hos_id 
					AND mpm.pay_hos_id =c.pay_hos_id
			  LEFT JOIN MAT_PUR_DETAIL mpd
			  ON
			  		c.pur_id = mpd.pur_id
			  WHERE mpm.pur_id  IN (${pur_ids})
		) a LEFT JOIN(
			   SELECT mpd.inv_no,
			   mpd.inv_id,
			   mpd.price,
			   mpd.group_id,
			   mpd.hos_id,
			   mpd.copy_code,
			   mpd.sup_no,
			   mpd.sup_id,
			   sum(mpd.amount) sum_amount
			  FROM MAT_PUR_MAIN mpm
			  LEFT JOIN (
			       SELECT a.pur_id,a.pur_hos_id,a.pay_hos_id,a.req_hos_id 
			       FROM MAT_PUR_MAIN a
			       WHERE 
			        a.group_id = #{group_id}
			        and a.hos_id = #{hos_id}
			        and a.copy_code = #{copy_code}
			        and a.pur_id  in (${pur_ids})
			        and a.pay_hos_id =#{pay_hos_id,jdbcType=INTEGER}
			        and a.pur_hos_id = #{pur_hos_id,jdbcType=INTEGER}
			        and a.req_hos_id = #{req_hos_id,jdbcType=INTEGER}
			  ) c ON mpm.pur_id = c.pur_id 
			  AND mpm.pay_hos_id =c.pay_hos_id 
			  AND mpm.req_hos_id =c.req_hos_id 
			  AND mpm.pay_hos_id =c.pay_hos_id
			  LEFT JOIN mat_pur_detail mpd
			  ON c.pur_id = mpd.pur_id
			  WHERE mpm.pur_id  in (${pur_ids})
			     GROUP BY mpd.inv_no,mpd.inv_id,mpd.price,mpd.group_id,mpd.hos_id,mpd.copy_code,mpd.sup_no,mpd.sup_id
		)b 
		ON a.group_id =b.group_id AND a.copy_code = b.copy_code AND a.hos_id =b.hos_id AND a.inv_id = b.inv_id AND a.inv_no = b.inv_no
		   AND a.sup_no = b.sup_no AND a.sup_id = b.sup_id
 		where
   					 a.group_id = #{group_id}
			        and a.hos_id = #{hos_id}
			        and a.copy_code = #{copy_code}
			        and a.pur_id  in (${pur_ids})
		ORDER BY a.inv_id,a.pur_id
	</select>
	
	<!-- 添加采购计划主表数据 -->
	<insert id="add">
		insert into mat_pur_main(
			   pur_id,
		       group_id, 
		       hos_id,
		       copy_code,
		       pur_code,
		       brif,
		       pur_type,
		       dept_id,
		       dept_no,
		       pur_hos_id,
		       req_hos_id,
		       pay_hos_id,
		       maker,
		       make_date,
		       checker,
		       check_date,
		       is_collect,
		       state
		)values(
			   #{pur_id,jdbcType=INTEGER},
		       #{group_id,jdbcType=INTEGER},
		       #{hos_id,jdbcType=INTEGER},
		       #{copy_code,jdbcType=VARCHAR},
		       #{pur_code,jdbcType=VARCHAR} ,
		       #{brif,jdbcType=VARCHAR},
		       #{pur_type,jdbcType=INTEGER},
		       #{dept_id,jdbcType=INTEGER},
		       #{dept_no,jdbcType=INTEGER},
		       #{pur_hos_id,jdbcType=INTEGER},
		       #{req_hos_id,jdbcType=INTEGER},
		       #{pay_hos_id,jdbcType=INTEGER},
		       #{maker,jdbcType=INTEGER},
		       to_date(#{make_date,jdbcType=VARCHAR},'yyyy/MM/dd'),
		       #{checker,jdbcType=INTEGER},
		       to_date(#{check_date,jdbcType=VARCHAR},'yyyy/MM/dd'),
		       #{is_collect,jdbcType=INTEGER},
		       #{state,jdbcType=INTEGER}
		          
		)
	</insert>
	
	
	<!-- 批量添加采购计划主表数据 -->
	<insert id="addBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			insert into mat_pur_main(
			       
			       group_id,
			       hos_id,
			       copy_code,
			       pur_id,
			       pur_code
			       <if test="item.pur_type != null and item.pur_type != '' ">,pur_type </if>
			       <if test="item.dept_id != null and item.dept_id != '' ">,dept_id </if>
			       <if test="item.dept_no != null and item.dept_no != '' ">,dept_no </if>
			       <if test="item.maker != null and item.maker != '' ">,maker </if>
			       <if test="item.make_date != null and item.make_date != '' ">,make_date </if>
			       <if test="item.arrive_date != null and item.arrive_date != '' ">,arrive_date </if>
			       <if test="item.is_collect != null and item.is_collect != '' ">,is_collect </if>
			       <if test="item.state != null and item.state != '' ">,state </if>
			       <if test="item.is_dir != null and item.is_dir != '' ">,is_dir </if>
			       <if test="item.brif != null and item.brif != '' ">,brif </if>
			       <if test="item.pur_hos_id != null and item.pur_hos_id != '' ">,pur_hos_id</if>
			       <if test="item.req_hos_id != null and item.req_hos_id != '' ">,req_hos_id</if>
			       <if test="item.pay_hos_id != null and item.pay_hos_id != '' ">,pay_hos_id</if>
	
			)values(
			       #{item.group_id,jdbcType=INTEGER},
			       #{item.hos_id,jdbcType=INTEGER},
			       #{item.copy_code,jdbcType=VARCHAR},
			       #{item.pur_id,jdbcType=INTEGER},
			       #{item.pur_code,jdbcType=VARCHAR}
				   <if test="item.pur_type != null and item.pur_type != '' ">,#{item.pur_type,jdbcType=INTEGER} </if>
			       <if test="item.dept_id != null and item.dept_id != '' ">,#{item.dept_id,jdbcType=INTEGER} </if>
			       <if test="item.dept_no != null and item.dept_no != '' ">,#{item.dept_no,jdbcType=INTEGER} </if>
			       <if test="item.maker != null and item.maker != '' ">,#{item.maker,jdbcType=INTEGER} </if>
			       <if test="item.make_date != null and item.make_date != '' ">,to_date(#{item.make_date},'yyyy/MM/dd')</if>
			       <if test="item.arrive_date != null and item.arrive_date != '' ">,to_date(#{item.arrive_date},'yyyy/MM/dd') </if>
			       <if test="item.is_collect != null and item.is_collect != '' ">,#{item.is_collect,jdbcType=INTEGER} </if>
			       <if test="item.state != null and item.state != '' ">,#{item.state,jdbcType=INTEGER} </if>
			       <if test="item.is_dir != null and item.is_dir != '' ">, #{item.is_dir,jdbcType=INTEGER} </if>
			       <if test="item.brif != null and item.brif != '' ">,#{item.brif,jdbcType=VARCHAR}</if>
			       <if test="item.pur_hos_id != null and item.pur_hos_id != '' ">,#{item.pur_hos_id,jdbcType=INTEGER}</if>
			       <if test="item.req_hos_id != null and item.req_hos_id != '' ">,#{item.req_hos_id,jdbcType=INTEGER}</if>
			       <if test="item.pay_hos_id != null and item.pay_hos_id != '' ">,#{item.pay_hos_id,jdbcType=INTEGER}</if>         
			)
		</foreach>
	</insert>
	
	<!-- 添加采购计划明细 -->
	<insert id="addBatchMatPurDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MAT_PUR_DETAIL(
				pur_detail_id,
				group_id,
				hos_id,
				copy_code,
				pur_id,
				pur_code,
				inv_id,
				inv_no,
				price
				<if test="item.sup_no != null and item.sup_no != '' ">,sup_no </if>
			    <if test="item.sup_id != null and item.sup_id != '' ">,sup_id </if>
			    <if test="item.amount != null and item.amount != '' ">,amount </if>
			    <if test="item.num != null and item.num != '' ">,num </if>
			    <if test="item.pack_code != null and item.pack_code != '' ">,pack_code </if>
			    <if test="item.req_amount != null and item.req_amount != '' ">,req_amount </if>
			    <if test="item.num_exchange != null and item.num_exchange != '' ">,num_exchange </if>
			    <if test="item.memo != null and item.memo != '' ">,memo </if>
			)values(
				MAT_PUR_DETAIL_SEQ.Nextval,
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.pur_id,jdbcType=INTEGER},
				#{item.pur_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.price,jdbcType=FLOAT}
			    <if test="item.sup_no != null and item.sup_no != '' ">,#{item.sup_no,jdbcType=INTEGER} </if>
		        <if test="item.sup_id != null and item.sup_id != '' ">,#{item.sup_id,jdbcType=INTEGER} </if>
		        <if test="item.amount != null and item.amount != '' ">,#{item.amount,jdbcType=FLOAT} </if>
		        <if test="item.num != null and item.num != '' ">,#{item.num,jdbcType=INTEGER} </if>
		        <if test="item.pack_code != null and item.pack_code != '' ">,#{item.pack_code,jdbcType=VARCHAR} </if>
		        <if test="item.req_amount != null and item.req_amount != '' ">,#{item.req_amount,jdbcType=FLOAT}</if>		       
		        <if test="item.num_exchange != null and item.num_exchange != '' ">,#{item.num_exchange,jdbcType=FLOAT}</if>
		        <if test="item.memo != null and item.memo != '' ">,#{item.memo,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	
	<!-- 添加采购计划对应表数据 -->
	<insert id="addMatPurRela" parameterType="java.util.List">
		insert into mat_pur_rela(
			group_id,
			hos_id,
			copy_code,
			total_id,
			pur_id,
			inv_id,
			pur_amount,
			exec_amount
		)
		<foreach collection="list" item="item" index="index" separator="union all" >
				SELECT 
					#{item.group_id,jdbcType=INTEGER},
					#{item.hos_id,jdbcType=INTEGER},
					#{item.copy_code,jdbcType=VARCHAR},
					#{item.total_id,jdbcType=INTEGER},
					#{item.pur_id,jdbcType=INTEGER},
					#{item.inv_id,jdbcType=INTEGER},
					#{item.pur_amount,jdbcType=INTEGER},
					#{item.exec_amount,jdbcType=INTEGER}
				from dual
			</foreach>
	</insert>
	
	<!-- 修改采购计划状态 -->
	<update id="updateBatchPurState" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_PUR_MAIN
			<set>
				state = #{item.state}
				<if test="item.is_collect != null and item.is_collect != '' ">
					,is_collect = #{item.is_collect}
				</if>
			</set> 
			<where>
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and pur_id = #{item.pur_id}
			</where>
		</foreach>
	</update>
	
	<!-- 查询采购计划主表ID -->
	<select id="queryMatPurMainPurId" resultType="java.lang.Integer">
		select  MAT_PUR_MAIN_SEQ.Nextval as pur_id from dual
	</select>
	
	<!-- 查看单据号表中是否存在 -->
	<select id="queryIsExists" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(0) from MAT_NO_MANAGE
		where table_code = 'MAT_PUR_MAIN'
			and prefixe = 'CG'
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="make_year != null and make_year != '' ">
				AND year= #{make_year}
			</if>
			<if test="make_month != null and make_month !=''">
				AND month=#{make_month}
			</if>
	</select>
	
	<!-- 查询单据号表中最大单据号 -->
	<select id="queryMaxCode" resultType="java.lang.String" parameterType="java.util.Map">
		select max_no from MAT_NO_MANAGE
		where table_code = 'MAT_PUR_MAIN'
			and prefixe = 'CG'
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="make_year != null and make_year != ''">
				AND year = #{make_year}
			</if>
			<if test="make_month != null and make_month !=''">
				AND month = #{make_month}
			</if>
	</select>
	
	<!-- 更新单据号表中最大单据号 -->
	<update id="updateMatNoMatch" parameterType="java.util.Map">
		update mat_no_manage set max_no = #{max_code}
			where table_code = 'MAT_PUR_MAIN'
				AND prefixe = 'CG'
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			
			<if test="make_year != null and make_year != ''">
				AND year = #{make_year}
			</if>
			<if test="make_month != null and make_month !=''">
				AND month = #{make_month}
			</if>
			
	</update>
	
	<!-- 向单据号表中插入数据 -->
	<insert id="addMatNoMatch" parameterType="java.util.Map">
		insert into mat_no_manage(group_id,hos_id,copy_code,table_code,year,month,max_no,prefixe)
		values(
			#{group_id ,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER} ,
			#{copy_code,jdbcType=VARCHAR},
			#{table_code,jdbcType=VARCHAR},
			#{make_year,jdbcType=VARCHAR},
			#{make_month,jdbcType=VARCHAR},
			#{max_no,jdbcType=INTEGER},
			#{prefixe,jdbcType=VARCHAR}
		)	
	</insert>
	
	
	
	<!-- 修改采购计划主表 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE MAT_PUR_MAIN SET
			dept_id = #{dept_id},
			make_date = to_date(#{make_date},'yyyy/MM/dd'),
			pur_type = #{pur_type},
			brif = #{brif},
			pur_hos_id = #{pur_hos_id},
			req_hos_id = #{req_hos_id},
			pay_hos_id = #{pay_hos_id}
		where
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and pur_id = #{pur_id}			
	</update>
	
	<!-- 删除采购计划明细 -->
	<delete id="deleteMatPurDetail" parameterType="java.util.List">
		DELETE FROM MAT_PUR_DETAIL WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			AND
			hos_id = #{item.hos_id}
			AND
			copy_code = #{item.copy_code}
			AND
			pur_id = #{item.pur_id}
		</foreach>
	</delete>
	
	<!-- 修改科室需求计划单状态为已审核 -->
	<update id="updateMatPurMainState" parameterType="java.util.List">
		UPDATE MAT_PUR_MAIN SET
			STATE = 2
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and pur_id = #{item.pur_id}
		</foreach>
	</update>
	
	<!-- 删除 采购计划对应关系 -->
	<delete id="deleteBatchMatPurRela" parameterType="java.util.List">
		DELETE FROM MAT_PUR_RELA WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			AND
			hos_id = #{item.hos_id}
			AND
			copy_code = #{item.copy_code}
			AND
			pur_id = #{item.pur_id}
			AND
			inv_id = #{item.inv_id}
		</foreach>
	</delete>
	
	<!-- 修改科室需求采购计划关系 -->
	<update id="updateBatchMatPurRela" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			UPDATE MAT_PUR_RELA
			<set>
				pur_amount = #{item.pur_amount},
				exec_amount = #{item.exec_amount}
			</set> 
			<where>
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and pur_id = #{item.pur_id}
				and inv_id = #{item.inv_id}
				and total_id = #{item.total_id}
			</where>
		</foreach>
	</update>
	
	<!-- 按采购单位、请购单位、付款单位分组 用于判断汇总后生成几条采购计划 -->
	<select id="queryMatPurUnit" parameterType="java.util.List"
		resultMap="matPurMainCollect">
		select
		   mpm.pur_hos_id,
		   mpm.pay_hos_id,
		   mpm.req_hos_id
		from mat_pur_main mpm
		where
		     <foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				mpm.group_id = #{item.group_id}
				AND
				mpm.hos_id = #{item.hos_id}
				AND
				mpm.copy_code = #{item.copy_code}
				AND
				mpm.pur_id = #{item.pur_id}
		</foreach> 
		group by  
		   mpm.pur_hos_id,
		   mpm.pay_hos_id,
		   mpm.req_hos_id
	</select>
	
	<!-- 采购计划数量明细 查询 -->
	<select id="queryMatPurMainAmountDetail" parameterType="java.util.Map"
	resultMap="matPurMainCollect">
		SELECT
			mpr.total_id,
			mpr.pur_id,
			mpr.inv_id, 
			mpm.pur_code,
			mpm.req_hos_id,
			hid.hos_simple as req_hos_name,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			hu.unit_name,
			mpd.price,
			mpr.pur_amount,
			mpr.exec_amount
		FROM MAT_PUR_RELA mpr
		LEFT JOIN MAT_PUR_MAIN mpm
		ON
			mpr.group_id = mpm.group_id
			AND mpr.hos_id = mpm.hos_id
			AND mpr.copy_code = mpm.copy_code
			AND mpr.pur_id = mpm.pur_id
		LEFT JOIN HOS_INFO_DICT hid
		ON
			mpm.req_hos_id = hid.hos_id
		LEFT JOIN MAT_PUR_DETAIL mpd
		ON
			mpr.group_id = mpd.group_id
			AND mpr.hos_id = mpd.hos_id
			AND mpr.copy_code = mpd.copy_code
			AND mpr.pur_id = mpd.pur_id
			AND mpr.inv_id = mpd.inv_id
		LEFT JOIN MAT_INV_DICT mid
		ON
			mpd.inv_id = mid.inv_id
			AND mpd.inv_no = mid.inv_no
		LEFT JOIN HOS_UNIT hu
		ON
			mid.unit_code = hu.unit_code
		WHERE
			mpr.group_id = #{group_id}
			AND mpr.hos_id = #{hos_id}
			AND mpr.copy_code = #{copy_code}
			AND mpr.total_id = #{total_id}
			AND mpr.pur_id = #{pur_id}
			AND mpr.inv_id = #{inv_id}
		ORDER BY mpr.total_id
	</select>
</mapper>