<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.requrie.dept.MatRequirePlanMapper">

	<resultMap id="matReqMain" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="req_id" column="req_id" />
		<result property="req_code" column="req_code" />
		
		<result property="pur_id" column="pur_id" />
		<result property="pur_code" column="pur_code" />
		
		<result property="req_code" column="req_code" />
		<result property="brif" column="brif" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_id" column="dept_id" />
		
		<result property="dept_name" column="dept_name" />
		<result property="dept_names" column="dept_names" />
		<result property="stock_no" column="stock_no" />
		<result property="stock_id" column="stock_id" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		
		<result property="store_name" column="store_name" />
		<result property="maker" column="maker" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="state" column="state" />
		<result property="req_type" column="req_type" />
		<result property="return_reason" column="return_reason" />
		<result property="other_inv" column="other_inv" />
		
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="begin_amount" column="begin_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="amount" column="amount" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		
		
		<result property="differ" column="differ" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="req_amount" column="req_amount" />
		<result property="exec_amount" column="exec_amount" />
		
		<result property="last_expend" column="last_expend" />
		<result property="last_plan" column="last_plan" />
		<result property="this_plan" column="this_plan" />
		<result property="state_name" column="state_name" />
		
		<result property="field_desc" column="field_desc"/><!-- 需求来源 -->
	</resultMap>
	<resultMap id="matReqDetails" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="req_id" column="req_id" />
		<result property="req_code" column="req_code" />
		<result property="req_detail_id" column="req_detail_id" />
		<result property="sum_money" column="sum_money" />
		
		<result property="inv_no" column="inv_no" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_code" column="unit_code" />
		<result property="unit_name" column="unit_name" />
		<result property="num_exchange" column="num_exchange" />
		<result property="num" column="num" />
		
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />		
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		
		<result property="amount" column="amount" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		<result property="sum_money" column="sum_money" />
	
		<result property="pack_code" column="pack_code" />
		<result property="pack_name" column="pack_name" />
		
		<result property="sup_no" column="sup_no" />
		<result property="sup_id" column="sup_id" />
		<result property="sup_code" column="sup_code" />
		<result property="sup_name" column="sup_name" />
		
		<result property="fac_code" column="fac_code" />
		<result property="fac_name" column="fac_name" />
		<result property="fac_id" column="fac_id" />
		<result property="fac_no" column="fac_no" />
		<result property="memo" column="memo" />
		
		<result property="secu_limit" column="secu_limit" />
		<result property="period_num" column="period_num" />
		<result property="period" column="period" />
		<result property="warn_amount" column="warn_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="secu_limit" column="secu_limit" />
		<result property="differ_amount" column="differ_amount" />
		<result property="differ_num" column="differ_num" />
		<result property="abs_differ" column="abs_differ" />
		<result property="abs_num" column="abs_num" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		
		
		<result property="differ" column="differ" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="req_amount" column="req_amount" />
		<result property="exec_amount" column="exec_amount" />
		
		<result property="last_expend" column="last_expend" />
		<result property="last_plan" column="last_plan" />
		<result property="this_plan" column="this_plan" />
		
	</resultMap>
	
	<!-- 终止计划 -->
	<update id="updateAbortMatDeptPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_require_main 
			SET  state = 0
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	<!-- 提交单据 -->
	<update id="updateSubmitMatDeptPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_require_main 
			SET  state = 2
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	<!-- 取消提交单据 -->
	<update id="updateUnSubmitMatDeptPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_require_main 
			SET  state = 1
			WHERE	group_id =	#{item.group_id,jdbcType=INTEGER}
				and	hos_id = #{item.hos_id,jdbcType=INTEGER}
				and	copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and	req_id =#{item.req_id,jdbcType=INTEGER}
				and req_code = #{item.req_code,jdbcType=VARCHAR}

		</foreach>
	</update>
	
	<!-- 编制页面查询  -->
	<select id="queryPlan" resultMap="matReqMain" parameterType="java.util.Map">
		SELECT mrm.group_id, mrm.hos_id, mrm.copy_code, mrm.req_id, mrm.req_code, 
			mrm.dept_id, mrm.dept_no, hdd.dept_code, hdd.dept_name, mrm.stock_id, 
			mrm.stock_no, hsd.store_code, hsd.store_name, su.user_name maker, 
			mrm.make_date, su1.user_name checker, mrm.check_date, mrm.state,
			case 
				when mrm.state = 0 then '已中止' 
				when mrm.state = 1 then '未提交' 
				when mrm.state = '2' then '已提交'
      			when mrm.state = '3' then '已审核'
      		end as state_name,
			mrm.other_inv, mrm.return_reason, mrm.brif, mdd.field_desc
		FROM mat_require_main mrm 
		LEFT JOIN hos_dept_dict hdd 
			ON mrm.group_id = hdd.group_id 
			AND mrm.hos_id = hdd.hos_id  
			AND mrm.dept_id = hdd.dept_id
			<if test="show_history == 1">
			AND mrm.dept_no = hdd.dept_no
			</if>
			<if test="show_history == 0">
			AND hdd.is_stop = 0
			</if>
		LEFT JOIN hos_store_dict hsd 
			ON hsd.group_id = mrm.group_id 
			AND hsd.hos_id = mrm.hos_id 
			AND hsd.store_id = mrm.stock_id
			<if test="show_history == 1"> 
			AND mrm.stock_no = hsd.store_no
			</if>
			<if test="show_history == 0">
			AND hsd.is_stop = 0
			</if>
		LEFT JOIN sys_user su 
			ON su.group_id = mrm.group_id 
			AND su.hos_id = mrm.hos_id 
			AND mrm.maker = su.user_id 
		LEFT JOIN sys_user su1 
			ON su1.group_id = mrm.group_id
			AND su1.hos_id = mrm.hos_id
			AND su1.user_id = mrm.checker
		LEFT JOIN mat_data_dict mdd
			ON mrm.come_from = mdd.field_value 
			AND mdd.data_code = '04003'					
		WHERE mrm.group_id = #{group_id,jdbcType=INTEGER}
			AND mrm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mrm.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_date != null and begin_date != ''">
				AND mrm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				AND  mrm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="req_code != null and req_code != ''">
				AND mrm.req_code like '${req_code}%'
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND mrm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id == null or dept_id == ''">
			AND hdd.dept_id  in (
				SELECT perm_code from  v_user_data_perm 
				WHERE group_id =#{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER} 
					AND user_id = #{user_id,jdbcType=INTEGER} 
					AND table_code = 'HOS_DEPT_DICT' 
					AND is_read = 1 
					AND is_write = 1
			)
			</if>
			<if test="brif != null and brif != ''">
				AND mrm.brif  like  '%'||#{brif,jdbcType=VARCHAR}||'%'
			</if>
			<if test="store_id != null and store_id != ''">
				AND mrm.stock_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="stateNew != null and stateNew != ''">
				AND mrm.state in (${stateNew})
			</if>
		ORDER BY mrm.req_code desc
	</select>
	
	<select id="queryByUniqueness" resultMap="matReqMain" parameterType="java.util.Map">

		SELECT
			group_id,
			hos_id,
			copy_code,
			req_id,
			req_code,
			brif,
			dept_no,	
			dept_id,
			stock_no,
			stock_id,
			maker,
			make_date,
			checker,
			check_date,
			state,
			req_type,
			return_reason,
			other_inv
		FROM
		MAT_REQUIRE_MAIN
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="req_id != null and req_id != ''">
				AND req_id = #{req_id,jdbcType=INTEGER}
			</if>
			<if test="req_code != null and req_code != ''">
				AND req_code = #{req_code,jdbcType=VARCHAR}
			</if>
			<if test="brif != null and brif != ''">
				AND brif = #{brif,jdbcType=VARCHAR}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="stock_no != null and stock_no != ''">
				AND stock_no = #{stock_no,jdbcType=INTEGER}
			</if>
			<if test="stock_id != null and stock_id != ''">
				AND stock_id = #{stock_id,jdbcType=INTEGER}
			</if>
			<if test="maker != null and maker != ''">
				AND maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="make_date != null and make_date != ''">
				AND make_date = #{make_date,jdbcType=DATE}
			</if>
			<if test="checker != null and checker != ''">
				AND checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date != ''">
				AND check_date = #{check_date,jdbcType=DATE}
			</if>
			<if test="state != null and state != ''">
				AND state = #{state,jdbcType=INTEGER}
			</if>
			<if test="req_type != null and req_type != ''">
				AND req_type = #{req_type,jdbcType=INTEGER}
			</if>
			<if test="return_reason != null and return_reason != ''">
				AND return_reason = #{return_reason,jdbcType=VARCHAR}
			</if>
			<if test="other_inv != null and other_inv != ''">
				AND other_inv = #{other_inv,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	
	<!-- 科室消耗导入查询 -->
	<select id="queryDeptExpend" parameterType="java.util.Map" resultMap="matReqDetails">
		select distinct
		  mid.group_id,
		  mid.hos_id,
		  mid.copy_code,
		  mid.inv_id,
		  mid.inv_no,
		  msi.store_id,
		  hsd.store_no,
		  mid.inv_code,
		  mid.inv_name,
		  mid.unit_code,
		  hu.unit_name,
		  mid.inv_model,
		  mid.plan_price price,
		  0 amount,
		  0 sum_money,
		  hp.pack_code,
		  hp.pack_name,
		  mid.fac_id,
		  hfd.fac_no,
		  hfd.fac_code,
		  hfd.fac_name,
		  mss.sup_id,
		  hs.sup_no,
		  hs.sup_code,
		  hs.sup_name,
		  g.last_plan,
		  nvl(h.last_expend,0) last_expend,
		  hh.this_plan
		from mat_inv_dict mid
		 join mat_store_inv msi on mid.inv_id = msi.inv_id
		     and mid.hos_id = msi.hos_id
		     and mid.group_id = msi.group_id
		     and mid.copy_code = msi.copy_code
		left join hos_store_dict hsd on hsd.store_id = msi.store_id
		     and hsd.group_id = msi.group_id
		     and hsd.hos_id = msi.hos_id
		     and hsd.is_stop = 0
		left join hos_unit  hu on hu.unit_code = mid.unit_code 
			   and hu.hos_id = mid.hos_id 
			   and hu.group_id = mid.group_id 
			   and hu.is_stop = 0
		left join mat_inv_unit_map f  on f.inv_id = mid.inv_id 
		      and f.hos_id = mid.hos_id 
		      and f.group_id = mid.group_id 
		      and f.copy_code = mid.copy_code
		left join hos_package hp on hp.pack_code = f.pack_code 
		      and hp.group_id = f.group_id
		      and hp.hos_id = f.hos_id
		      and hp.is_stop = 0
		left join hos_fac_dict hfd on hfd.fac_id = mid.fac_id
		     and hfd.group_id = mid.group_id
		     and hfd.hos_id = mid.hos_id
		     and hfd.fac_no = mid.fac_no
		left JOIN (
		  	 SELECT group_id, hos_id, copy_code, inv_id, MAX(sup_id) AS sup_id
		     FROM mat_inv_sup
		     GROUP BY group_id, hos_id, copy_code, inv_id
		) mss ON mss.group_id = mid.group_id
			and mss.hos_id = mid.hos_id
			and mss.copy_code = mid.copy_code
			and mss.inv_id = mid.inv_id 
		LEFT JOIN hos_sup_dict hs on hs.sup_id = mss.sup_id
			and hs.group_id = mss.group_id
			and hs.hos_id = mss.hos_id
			and hs.is_stop = 0 
		left join( --上期计划量
		    select bb.inv_id,
			    bb.inv_no,
			    nvl(sum(nvl(bb.amount,0)),0) last_plan,
			    aa.stock_id,
		        aa.stock_no  
		    from mat_require_main aa
		    left join mat_require_detail bb on aa.req_id = bb.req_id   
		    	and aa.hos_id = bb.hos_id  
		    	and aa.group_id = bb.group_id 
		    	and aa.copy_code = bb.copy_code
		    where aa.dept_id =  #{dept_id,jdbcType=INTEGER}
				and aa.dept_no = #{dept_no,jdbcType=INTEGER}
				and aa.stock_id = #{store_id,jdbcType=INTEGER}
				and aa.stock_no = #{store_no,jdbcType=INTEGER}
				and aa.copy_code =#{copy_code,jdbcType=VARCHAR}
				and aa.hos_id = #{hos_id,jdbcType=INTEGER}
				and aa.group_id = #{hos_id,jdbcType=INTEGER}
				and aa.state >= 2
				and aa.make_date between to_date(#{lastDateB},'yyyy/mm/dd') and to_date(#{lastDateE},'yyyy/mm/dd')
		  	group by aa.dept_id,aa.dept_no,bb.inv_id,bb.inv_no,aa.stock_id,aa.stock_no
		 ) g on g.inv_id = mid.inv_id  and g.inv_no = mid.inv_no and msi.store_id = g.stock_id
		left join (--上期耗用量         
			select bb.inv_id,
				bb.inv_no,
				nvl(sum(nvl(bb.amount,0)),0) last_expend,
				aa.store_id,
				aa.store_no 
		    from mat_out_main aa
			left join mat_out_detail bb on aa.out_id = bb.out_id   
		    	and aa.hos_id = bb.hos_id 
		    	and aa.group_id = bb.group_id 
		    	and aa.copy_code = bb.copy_code
		    where aa.dept_id = #{dept_id,jdbcType=INTEGER}
		    	and aa.dept_no = #{dept_no,jdbcType=INTEGER}
		    	and aa.store_id = #{store_id,jdbcType=INTEGER}
		    	and aa.store_no = #{store_no,jdbcType=INTEGER}
		    	and aa.copy_code = #{copy_code,jdbcType=VARCHAR}
		    	and aa.hos_id = #{hos_id,jdbcType=INTEGER}
		    	and aa.group_id = #{group_id,jdbcType=INTEGER}
		    	and aa.out_date between to_date(#{lastDateB},'yyyy/mm/dd') and to_date(#{lastDateE},'yyyy/mm/dd')
		    	group by aa.dept_id,aa.dept_no,bb.inv_id,bb.inv_no,aa.store_id,aa.store_no
		 )h on h.inv_id = mid.inv_id and h.inv_no = mid.inv_no and h.store_id = msi.store_id
		 left join ( --本期已报数量
		 	select bb.inv_id,
		 		bb.inv_no,
		 		nvl(sum(nvl(bb.amount,0)),0) this_plan,
		 		aa.stock_id,
		 		aa.stock_no 
		 	from mat_require_main aa
		 	left join mat_require_detail bb on aa.req_id = bb.req_id  
		    	and aa.hos_id = bb.hos_id 
		    	and aa.group_id = bb.group_id 
		    	and aa.copy_code = bb.copy_code
		    where aa.dept_id = #{dept_id,jdbcType=INTEGER}
		    	and aa.dept_no = #{dept_no,jdbcType=INTEGER}
		    	and aa.stock_id = #{store_id,jdbcType=INTEGER}
				and aa.stock_no = #{store_no,jdbcType=INTEGER} 
		    	and aa.copy_code = #{copy_code,jdbcType=VARCHAR}
		    	and aa.hos_id = #{hos_id,jdbcType=INTEGER}
		    	and aa.group_id = #{group_id,jdbcType=INTEGER}
		    	and aa.state >= 2
		    	and aa.make_date between to_date(#{thisDateB},'yyyy/mm/dd') and to_date(#{thisDateE},'yyyy/mm/dd')
		    group by aa.dept_id,aa.dept_no,bb.inv_id,bb.inv_no,aa.stock_id,aa.stock_no
		 )hh on hh.inv_id = mid.inv_id  and hh.inv_no = mid.inv_no and hh.stock_id = msi.store_id
			where mid.group_id = #{group_id,jdbcType=INTEGER}
		      	and mid.hos_id = #{hos_id,jdbcType=INTEGER}
		      	and mid.copy_code = #{copy_code,jdbcType=VARCHAR}
		      	and mid.is_stop = 0
		      	and msi.store_id = #{store_id,jdbcType=INTEGER}
		      	<if test="inv_code != null and inv_code != ''">
					and (	 mid.inv_code like '%'||#{inv_code}||'%' 
		      		  or mid.inv_name like '%'||#{inv_code}||'%' 
		      		) 
			  	</if>
			  	
			  	<if test="is_check == 0 ">
					and h.last_expend &gt;  0
			  	</if>
		order by mid.inv_code
	</select>
	
	<!-- 配套导入查询 -->
	<select id="queryDeptSupport" parameterType="java.util.Map" resultMap="matReqDetails">
		select 
	      mid.group_id,
	      mid.hos_id,
	      mid.copy_code,
	      mid.inv_id,
	      mdm.store_id,
	      mid.inv_no,
	      mid.inv_code,
	      mid.inv_name,
	      mid.inv_model,
	      mid.unit_code,
	      hu.unit_name,
	      mid.plan_price as price,
	      mdmd.amount,
	      hp.pack_code,
	      hp.pack_name,
	      hfd.fac_id,
	      hfd.fac_no,
	      hfd.fac_name,
	      mis.sup_id,
	      hsd.sup_no,
	      hsd.sup_code,
	      hsd.sup_name,sum(nvl(mid.plan_price,0)*nvl(mdmd.amount,0)) as sum_money
	    from mat_inv_dict mid 
	    join mat_dept_match_detail mdmd on mdmd.inv_id = mid.inv_id
	         and mdmd.group_id = mid.group_id
	         and mdmd.hos_id = mid.hos_id
	         and mdmd.copy_code = mid.copy_code
	    left join mat_dept_match mdm on mdm.dept_match_id = mdmd.dept_match_id
	         and mdm.hos_id = mdmd.hos_id
	         and mdm.group_id = mdmd.group_id
	         and mdm.copy_code = mdmd.copy_code
	    left join hos_unit hu on hu.unit_code = mid.unit_code
	         and hu.group_id = mid.group_id
	         and hu.hos_id = mid.hos_id
	         and hu.is_stop = 0
	    left join hos_fac_dict hfd on hfd.fac_id = mid.fac_id
	         and hfd.hos_id = mid.hos_id
	         and hfd.group_id = mid.group_id
	         and hfd.fac_no = mid.fac_no
	    left join mat_inv_unit_map mium on mium.inv_id = mid.inv_id
	         and  mium.unit_code = mid.unit_code
	         and mium.hos_id = mid.hos_id
	         and mium.group_id = mid.group_id
	    left join hos_package hp on hp.pack_code = mium.pack_code
	         and hp.group_id = mium.group_id
	         and hp.hos_id = mium.hos_id
	         and hp.is_stop = 0
	    left join (
     		select 
     			group_id,hos_id,copy_code,inv_id,max(sup_id) sup_id 
     			from mat_inv_sup
     			group by group_id,hos_id,copy_code,inv_id
			) mis on mis.group_id = mid.group_id
			  and mis.hos_id = mid.hos_id
			  and mis.copy_code = mid.copy_code
			  and mis.inv_id = mid.inv_id
		left join hos_sup_dict hsd on hsd.sup_id = mis.sup_id
		     and hsd.group_id = mis.group_id
		     and hsd.hos_id = mis.hos_id
		     and hsd.is_stop = 0
		where mdm.dept_match_id = #{store_match,jdbcType=INTEGER}
		      and (mdm.store_id = #{store_id,jdbcType=INTEGER} or mdm.store_id is null)
		      and mdm.dept_id = #{dept_id,jdbcType=INTEGER}
		      and mid.group_id = #{group_id,jdbcType=INTEGER}
		      and mid.hos_id = #{hos_id,jdbcType=INTEGER}
		      and mid.copy_code = #{copy_code,jdbcType=VARCHAR}
		      and mid.use_state = 1 
		      and mid.is_stop = 0
		        group by mid.group_id, mid.hos_id, mid.copy_code, mid.inv_id, mdm.store_id
	, mid.inv_no, mid.inv_code, mid.inv_name, mid.inv_model, mid.unit_code
	, hu.unit_name, mid.plan_price ,  mdmd.amount, hp.pack_code, hp.pack_name
	, hfd.fac_id, hfd.fac_no, hfd.fac_name, mis.sup_id, hsd.sup_no
	, hsd.sup_code, hsd.sup_name
		order by mid.inv_id
	
	</select>
	
	<!-- 安全库存导入 -->
	<select id="queryStoreSafe" parameterType="java.util.Map" resultMap="matReqDetails">
		select 
		  mid.group_id, 
		  mid.hos_id,
		  mid.copy_code,
		  mid.inv_no,
		  mid.inv_id,
		  msi.store_id,
		  hsd.store_no,
		  hsd.store_code,
		  hsd.store_name,
		  mid.inv_code,
		  mid.inv_name,
		  mid.inv_model,
		  hu.unit_code,
		  hu.unit_name,
		  mid.plan_price price,
		  msi.package_code pack_code,
		  hp.pack_name,
		  nvl(msi.num_exchange,0) num_exchange,
		  nvl(msi.period_num,0) period_num,
		  msi.period,
		  nvl(msi.warn_amount,0) warn_amount, 
		  nvl(mih.cur_amount,0) cur_amount,
		  nvl(msi.secu_limit,0)  secu_limit,
		  nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0) differ_amount,
		  case when nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0) !=0 then nvl(msi.num_exchange,0) /(nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0)) 
		  else 0 end differ_num,
		  abs(nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0)) abs_differ,
		  case when nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0) !=0 then abs(nvl(msi.num_exchange,0) /(nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0))) 
		  else 0 end abs_num,
		  nvl(hfd.fac_id,0) fac_id,
	      nvl(hfd.fac_no,0) fac_no,
	      nvl(hfd.fac_name,'') fac_name,
	      nvl(hs.sup_id,0) sup_id,
	      nvl(hs.sup_no,0) sup_no,
	      nvl(hs.sup_code,'') sup_code,
	      nvl(hs.sup_name,'') sup_name
		from mat_store_inv msi
		left join mat_inv_dict mid on msi.inv_id = mid.inv_id
		     and msi.copy_code = mid.copy_code 
		     and msi.hos_id = mid.hos_id
		     and msi.group_id = mid.group_id
		     and mid.is_stop = 0
		left join hos_unit hu on hu.unit_code = mid.unit_code
		     and hu.hos_id = mid.hos_id
		     and hu.group_id = mid.group_id
		     and hu.is_stop = 0
		left join hos_store_dict hsd on hsd.store_id = msi.store_id
		     and hsd.group_id = msi.group_id
		     and hsd.hos_id = msi.hos_id
		     and hsd.is_stop = 0
		left join hos_package hp on hp.group_id = msi.group_id
		     and hp.hos_id = msi.hos_id
		     and hp.pack_code = msi.package_code
		     and hp.is_stop = 0
		left join mat_inv_hold mih on msi.store_id = mih.store_id
		     and msi.group_id = mih.group_id
		     and msi.hos_id = mih.hos_id
		     and msi.copy_code = mih.copy_code
		     and msi.inv_id = mih.inv_id
		left join hos_fac_dict hfd on hfd.fac_id = mid.fac_id
	         and hfd.group_id = mid.group_id
	         and hfd.hos_id = mid.hos_id
	         and hfd.fac_no = mid.fac_no
	    left join (
	         select 
	          	group_id,hos_id,copy_code,inv_id,max(sup_id) sup_id 
	          	from mat_inv_sup
	          	group by group_id,hos_id,copy_code,inv_id
      	) mis on mis.group_id = mid.group_id
        	and mis.hos_id = mid.hos_id
        	and mis.copy_code = mid.copy_code
        	and mis.inv_id = mid.inv_id
    	left join hos_sup_dict hs on hs.sup_id = mis.sup_id
         	and hs.group_id = mis.group_id
         	and hs.hos_id = mis.hos_id
         	and hs.is_stop = 0
		<where>
			 <if test="group_id != null and group_id != ''">
				msi.group_id = #{group_id,jdbcType=INTEGER}
			 </if>
			 <if test="hos_id != null and hos_id != ''">
				AND msi.hos_id = #{hos_id,jdbcType=INTEGER}
			 </if>
			 <if test="copy_code != null and copy_code != ''">
				AND msi.copy_code = #{copy_code,jdbcType=VARCHAR}
			 </if>
			 <if test="is_store == 0">
			 	AND msi.store_id = #{store_id,jdbcType=INTEGER}
			 </if>
			 <if test="mat_type_code != null and mat_type_code != ''">
				AND mid.mat_type_id  in  (
					select mat_type_id 
					from mat_type 
                	where mat_type_code like '${mat_type_code}%'
                   		and  is_last = 1 
			            <if test="group_id != null and group_id != ''">
							AND group_id = #{group_id,jdbcType=INTEGER}
						</if>
						<if test="hos_id != null and hos_id != ''">
							AND hos_id = #{hos_id,jdbcType=INTEGER}
						</if>
						<if test="copy_code != null and copy_code != ''">
							AND copy_code = #{copy_code,jdbcType=VARCHAR}
						</if>
			 	 )	
			 </if>
			 
			 <if test="inv_code != null and inv_code != ''">
				and (	 mid.inv_code like '%'||#{inv_code}||'%' 
		      		  or mid.inv_name like '%'||#{inv_code}||'%' 
		      		  or mid.spell_code like '%'||#{inv_code}||'%'
		      		  or mid.wbx_code like '%'||#{inv_code}||'%'
		      		) 
			  </if>
			  <if test="is_warn == 1">
				and msi.secu_limit  &gt; 0
				and ((nvl(msi.warn_amount,0) - (nvl(mih.cur_amount,0) - nvl(msi.secu_limit,0)))) &gt; 0
			  </if>
			  <if test="is_warn == 0">
				and msi.secu_limit  &gt; 0
			  </if>
			  
		</where>
		order by mid.inv_code
	</select>
	
	
</mapper>

