<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.dura.balance.MatDuraDeptSurplusMapper">
	
	<resultMap id="matDuraDeptSurplus"  type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="price" column="price"/>
		<result property="begin_amount" column="begin_amount"/>
		<result property="begin_money" column="begin_money"/>
		<result property="in_amount" column="in_amount"/>
		<result property="in_money" column="in_money"/>
		<result property="out_amount" column="out_amount"/>
		<result property="out_money" column="out_money"/>
		<result property="end_amount" column="end_amount"/>
		<result property="end_money" column="end_money"/>
	</resultMap>
	
	<!-- 没有单行操作的业务 -->
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO MAT_DURA_DEPT_SURPLUS (
			group_id, hos_id, copy_code, year, month, dept_id, inv_id, price, begin_amount, begin_money, 
			in_amount, in_money, out_amount, out_money, end_amount, end_money 
		) VALUES (
			#{group_id,jdbcType=INTEGER}, 
			#{hos_id,jdbcType=INTEGER}, 
			#{copy_code,jdbcType=VARCHAR}, 
			#{year,jdbcType=VARCHAR}, 
			#{month,jdbcType=VARCHAR}, 
			#{dept_id,jdbcType=INTEGER}, 
			#{inv_id,jdbcType=INTEGER}, 
			#{price,jdbcType=INTEGER}, 
			#{begin_amount,jdbcType=NUMERIC}, 
			#{begin_money,jdbcType=NUMERIC}, 
			#{in_amount,jdbcType=NUMERIC}, 
			#{in_money,jdbcType=NUMERIC}, 
			#{out_amount,jdbcType=NUMERIC}, 
			#{out_money,jdbcType=NUMERIC}, 
			#{end_amount,jdbcType=NUMERIC}, 
			#{end_money,jdbcType=NUMERIC}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
		INSERT INTO MAT_DURA_DEPT_SURPLUS (
			group_id, hos_id, copy_code, year, month, dept_id, inv_id, price, begin_amount, begin_money, 
			in_amount, in_money, out_amount, out_money, end_amount, end_money, bar_code 
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 
				#{item.group_id,jdbcType=INTEGER}, 
				#{item.hos_id,jdbcType=INTEGER}, 
				#{item.copy_code,jdbcType=VARCHAR}, 
				#{item.year,jdbcType=VARCHAR}, 
				#{item.month,jdbcType=VARCHAR}, 
				#{item.dept_id,jdbcType=INTEGER}, 
				#{item.inv_id,jdbcType=INTEGER}, 
				#{item.price,jdbcType=INTEGER}, 
				#{item.begin_amount,jdbcType=NUMERIC}, 
				#{item.begin_money,jdbcType=NUMERIC}, 
				#{item.in_amount,jdbcType=NUMERIC}, 
				#{item.in_money,jdbcType=NUMERIC}, 
				#{item.out_amount,jdbcType=NUMERIC}, 
				#{item.out_money,jdbcType=NUMERIC}, 
				#{item.end_amount,jdbcType=NUMERIC}, 
				#{item.end_money,jdbcType=NUMERIC},
				#{item.bar_code,jdbcType=VARCHAR}  
		    from dual
		</foreach>
	</insert>
	
	<!-- 没有单行操作的业务 -->
	<update id="update" parameterType="java.util.Map">
	
		UPDATE MAT_DURA_DEPT_SURPLUS 
		<trim prefix="SET"  suffixOverrides=","> 
			<if test="begin_amount != null ">
				begin_amount = #{begin_amount,jdbcType=NUMERIC}, 
			</if>
			<if test="begin_money != null">
				begin_money = #{begin_money,jdbcType=NUMERIC}, 
			</if>
			<if test="in_amount != null ">
				in_amount = #{in_amount,jdbcType=NUMERIC}, 
			</if>
			<if test="in_money != null">
				in_money = #{in_money,jdbcType=NUMERIC}, 
			</if>
			<if test="out_amount != null ">
				out_amount = #{out_amount,jdbcType=NUMERIC}, 
			</if>
			<if test="out_money != null ">
				out_money = #{out_money,jdbcType=NUMERIC},
			</if>
			<if test="end_amount != null ">
				end_amount = #{end_amount,jdbcType=NUMERIC}, 
			</if>
			<if test="end_money != null ">
				end_money = #{end_money,jdbcType=NUMERIC}, 
			</if>
		</trim>
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=INTEGER}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MAT_DURA_DEPT_SURPLUS
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.begin_amount != null ">
					begin_amount = #{item.begin_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.begin_money != null ">
					begin_money = #{item.begin_money,jdbcType=NUMERIC},
				</if>
				<if test="item.in_amount != null ">
					in_amount = #{item.in_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.in_money != null ">
					in_money = #{item.in_money,jdbcType=NUMERIC},
				</if>
				<if test="item.out_amount != null ">
					out_amount = #{item.out_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.out_money != null ">
					out_money = #{item.out_money,jdbcType=NUMERIC},
				</if>
				<if test="item.end_amount != null">
					end_amount = #{item.end_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.end_money != null ">
					end_money = #{item.end_money,jdbcType=NUMERIC},
				</if>
			</trim>
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND inv_id = #{item.inv_id,jdbcType=INTEGER}
				AND price = #{item.price,jdbcType=NUMERIC}
				AND bar_code = #{item.bar_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 没有单行操作的业务 -->
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM MAT_DURA_DEPT_SURPLUS 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=INTEGER}
	</delete>
	
	<!-- 删除业务期末结账的存储过程处理 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM MAT_DURA_DEPT_SURPLUS 
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND year = #{item.year,jdbcType=VARCHAR}
			AND month = #{item.month,jdbcType=VARCHAR}
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			AND inv_id = #{item.inv_id,jdbcType=INTEGER}
			AND price = #{item.price,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="matDuraDeptSurplus" >
		SELECT 
			group_id, hos_id, copy_code, year, month, dept_id, inv_id, price, begin_amount, begin_money, 
			in_amount, in_money, out_amount, out_money, end_amount, end_money 
		FROM MAT_DURA_DEPT_SURPLUS 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			<if test="inv_id != null ">
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="price != null ">
			AND price = #{price,jdbcType=INTEGER}
			</if>
			<if test="sql != null and sql != ''">
				${sql}
			</if>
		order by dept_id, inv_id 
	</select>
	
	<select id="queryExists" resultMap="matDuraDeptSurplus"  parameterType="java.util.Map" >
		SELECT 
			group_id, hos_id, copy_code, year, month, dept_id, inv_id, price, begin_amount, begin_money, 
			in_amount, in_money, out_amount, out_money, end_amount, end_money 
		FROM MAT_DURA_DEPT_SURPLUS 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=INTEGER}
	</select>
	
	<!-- 根据主键取对应帐表数据 -->
	<select id="queryByCode" resultMap="matDuraDeptSurplus"  parameterType="java.util.Map" >
		select group_id, hos_id, copy_code, year, month, dept_id, inv_id, nvl(price, 0) as price, 
			nvl(begin_amount, 0) as begin_amount, nvl(begin_money, 0) as begin_money, 
			nvl(in_amount, 0) as in_amount, nvl(in_money, 0) as in_money, 
			nvl(out_amount, 0) as out_amount, nvl(out_money, 0) as out_money, 
			nvl(end_amount, 0) as end_amount, nvl(end_money, 0) as end_money  
		from MAT_DURA_DEPT_SURPLUS
		where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND inv_id = #{inv_id,jdbcType=INTEGER}
			AND price = #{price,jdbcType=NUMERIC}
	</select>
	
	<!-- 根据材料查询表信息 -->
	<select id="queryByInvList" resultMap="matDuraDeptSurplus"  parameterType="java.util.List" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,  
					#{item.year,jdbcType=VARCHAR} as year,  
					#{item.month,jdbcType=VARCHAR} as month,  
					#{item.dept_id,jdbcType=INTEGER} as dept_id, 
					#{item.inv_id,jdbcType=INTEGER} as inv_id, 
					#{item.price,jdbcType=NUMERIC} as price, 
				from dual
			</foreach>
		)
		select a.group_id, a.hos_id, a.year, a.month, a.copy_code, a.dept_id, a.inv_id, nvl(b.price, 0) as price, 
			nvl(b.begin_amount, 0) as begin_amount, nvl(b.beign_money, 0) as begin_money,  
			nvl(b.in_amount, 0) as in_amount, nvl(b.in_money, 0) as in_money,  
			nvl(b.out_amount, 0) as out_amount, nvl(b.out_money, 0) as out_money, 
			nvl(b.end_amount, 0) as end_amount, nvl(b.end_money, 0) as end_money   
		from list_temp a
		inner join MAT_DURA_DEPT_SURPLUS b
			on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.year = b.year 
			and a.month = b.month and a.dept_id = b.dept_id
			and a.inv_id = b.inv_id and a.price = b.price 
		order by a.dept_id, a.inv_id
	</select>
</mapper>

