<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.dura.check.MatDuraCheckDeptMapper">

	<resultMap id="matDuraCheckDept" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="check_id" column="check_id" /> 
		<result property="check_no" column="check_no" />
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="maker" column="maker" />
		<result property="maker_name" column="maker_name" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="checker_name" column="checker_name" />
		<result property="check_date" column="check_date" />
		<result property="brief" column="brief" />
		<result property="state" column="state" />
	</resultMap>

	<resultMap id="matDuraCheckDeptD" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="check_id" column="check_id" />
		<result property="detail_id" column="detail_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="fac_name" column="fac_name" />
		<result property="price" column="price" />
		<result property="cur_amount" column="cur_amount" />
		<result property="cur_money" column="cur_money" />
		<result property="chk_amount" column="chk_amount" />
		<result property="chk_money" column="chk_money" />
		<result property="amount" column="amount" />
		<result property="amount_money" column="amount_money" />
		<result property="bar_code" column="bar_code" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap id="matDuraCheckDeptForConfirm" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="year" column="year" />
		<result property="month" column="month" />
		<result property="check_id" column="check_id" />
		<result property="check_no" column="check_no" />
		<result property="dept_id" column="dept_id" />
		<result property="detail_id" column="detail_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="price" column="price" />
		<result property="amount" column="amount" />
		<result property="amount_money" column="amount_money" />
		<result property="bar_code" column="bar_code" />
	</resultMap>

	<!-- 获取一个主表序列 -->
	<select id="queryMainSeq" resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MAT_DURA_DEPT_CHECK_SEQ.nextval FROM DUAL
	</select>

	<!-- 获取一个明细表序列 -->
	<select id="queryDetailSeq" resultType="java.lang.Long" useCache="false" flushCache="true">
		SELECT MAT_DURA_DEPT_CHECK_D_SEQ.nextval FROM DUAL
	</select>
	
	<select id="query" resultMap="matDuraCheckDept" parameterType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no, a.brief, a.make_date, 
			a.dept_id, a.dept_no, c.dept_code, c.dept_name, a.emp_id, b.emp_code, b.emp_name, 
			a.maker, e.user_name maker_name, a.checker, f.user_name checker_name, a.check_date, a.state
		FROM mat_dura_dept_check a 
		LEFT JOIN hos_emp_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.emp_id = b.emp_id AND b.is_stop = 0 
		LEFT JOIN hos_dept_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id 
			AND a.dept_id = c.dept_id 
			<if test="show_history != null and show_history == 1">
				AND a.dept_no = c.dept_no
			</if>
			<if test="show_history == null or show_history == ''">
				AND c.is_stop = 0
			</if> 
		LEFT JOIN sys_user e 
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id 
			AND a.maker = e.user_id 
		LEFT JOIN sys_user f 
			ON a.group_id = f.group_id AND a.hos_id = f.hos_id 
			AND a.checker = f.user_id
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_make_date != null and begin_make_date != ''">
				AND a.make_date &gt;= #{begin_make_date,jdbcType=DATE} 
			</if>
			<if test="end_make_date != null and end_make_date != ''">
				AND a.make_date &lt;= #{end_make_date,jdbcType=DATE} 
			</if>
			<if test="begin_check_date != null and begin_check_date != ''">
				AND a.check_date &gt;= #{begin_check_date,jdbcType=DATE} 
			</if>
			<if test="end_check_date != null and end_check_date != ''">
				AND a.check_date &lt;= #{end_check_date,jdbcType=DATE} 
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
		order by check_id desc
	</select>
	
	<select id="queryMatDuraDeptMain" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no, a.brief, a.make_date, 
			a.dept_id, a.dept_no, c.dept_code, c.dept_name, a.emp_id, b.emp_code, b.emp_name, 
			a.maker, e.user_name maker_name, a.checker, f.user_name checker_name, a.check_date, a.state,
			case when mm.bus_type_code='43' then mm.dura_id else 0 end in_dura_id,
      		case when mm.bus_type_code='43' then mm.dura_no else '' end in_dura_no,
      		case when mm.bus_type_code='44' then mm.dura_id else 0 end out_dura_id,
      		case when mm.bus_type_code='44' then mm.dura_no else '' end out_dura_no
		FROM mat_dura_dept_check a 
		LEFT JOIN hos_emp_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.emp_id = b.emp_id AND b.is_stop = 0 
		LEFT JOIN hos_dept_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id 
			AND a.dept_id = c.dept_id 
			<if test="show_history != null and show_history == 1">
				AND a.dept_no = c.dept_no
			</if>
			<if test="show_history == null or show_history == ''">
				AND c.is_stop = 0
			</if> 
		LEFT JOIN sys_user e 
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id 
			AND a.maker = e.user_id 
		LEFT JOIN sys_user f 
			ON a.group_id = f.group_id AND a.hos_id = f.hos_id 
			AND a.checker = f.user_id
		left join mat_dura_dept_check_rela mr on mr.group_id = #{group_id,jdbcType=INTEGER} 
			and mr.hos_id = #{hos_id,jdbcType=INTEGER}
			and mr.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and a.check_id = mr.check_id
		left join mat_dura_dept_main mm on mm.group_id = #{group_id,jdbcType=INTEGER} 
			and mm.hos_id = #{hos_id,jdbcType=INTEGER}
			and mm.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and (mr.in_dura_id = mm.dura_id or mr.out_dura_id=mm.dura_id)
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="begin_make_date != null and begin_make_date != ''">
				AND a.make_date &gt;= #{begin_make_date,jdbcType=DATE} 
			</if>
			<if test="end_make_date != null and end_make_date != ''">
				AND a.make_date &lt;= #{end_make_date,jdbcType=DATE} 
			</if>
			<if test="begin_check_date != null and begin_check_date != ''">
				AND a.check_date &gt;= #{begin_check_date,jdbcType=DATE} 
			</if>
			<if test="end_check_date != null and end_check_date != ''">
				AND a.check_date &lt;= #{end_check_date,jdbcType=DATE} 
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			and a.dept_id in (
				select b.perm_code from  v_user_data_perm b 
				where  b.group_id =  #{group_id,jdbcType=INTEGER} 
					and  b.hos_id =  #{hos_id,jdbcType=INTEGER}
					and b.user_id = #{user_id,jdbcType=INTEGER} 
					and b.table_code = 'HOS_DEPT_DICT' 
					and b.is_read = 1 and b.is_write = 1
			)
		order by check_id desc
	</select>

	<!-- 主表添加 -->
	<insert id="addMain" parameterType="java.util.Map">
		INSERT INTO mat_dura_dept_check (
			group_id, hos_id, copy_code, check_id, check_no, year, month, dept_id, dept_no, 
			emp_id, maker, make_date, state, brief
			<if test="checker != null and checker != ''">, checker</if>
			<if test="check_date != null and check_date != ''">, check_date</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{check_id,jdbcType=BIGINT},
			#{check_no,jdbcType=VARCHAR},
            #{year,jdbcType=VARCHAR},
            #{month,jdbcType=VARCHAR},
			#{dept_id,jdbcType=INTEGER},
			#{dept_no,jdbcType=INTEGER},
			#{emp_id,jdbcType=INTEGER},
			#{maker,jdbcType=INTEGER},
			#{make_date,jdbcType=DATE},
			#{state,jdbcType=INTEGER},
			#{brief,jdbcType=VARCHAR}
			<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
			<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
		)
	</insert>

	<!-- 批量插入主表数据 -->
	<insert id="addMainBatch" parameterType="java.util.List">
		INSERT INTO mat_dura_dept_check (
			group_id, hos_id, copy_code, check_id, check_no, year, month, dept_id, dept_no, 
			emp_id, maker, make_date, state, brief, checker, check_date 
		)
		<foreach collection="list" item="item" index="index" separator="union all">
			SELECT
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.check_id,jdbcType=BIGINT},
				#{item.check_no,jdbcType=VARCHAR},
				#{item.year,jdbcType=VARCHAR},
				#{item.month,jdbcType=VARCHAR},
				#{item.dept_id,jdbcType=INTEGER},
				#{item.dept_no,jdbcType=INTEGER},
				#{item.emp_id,jdbcType=INTEGER},
				#{item.maker,jdbcType=INTEGER},
				#{item.make_date,jdbcType=DATE},
				#{item.state,jdbcType=INTEGER},
				#{item.brief,jdbcType=VARCHAR},
				#{item.checker,jdbcType=INTEGER},
				#{item.check_date,jdbcType=DATE}
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 明细表添加（批量） -->
	<insert id="addDetail" parameterType="java.util.List">
		INSERT INTO mat_dura_dept_check_d (
			group_id, hos_id, copy_code, check_id, detail_id, inv_id, inv_no, 
			price, cur_amount, chk_amount, bar_code, note
		)
		<foreach collection="list" item="item" index="index" separator="union all">
			select
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.check_id,jdbcType=BIGINT},
				#{item.detail_id,jdbcType=BIGINT},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=VARCHAR},
				#{item.price,jdbcType=NUMERIC},
				#{item.cur_amount,jdbcType=NUMERIC},
				#{item.chk_amount,jdbcType=NUMERIC},
				#{item.bar_code,jdbcType=VARCHAR}, 
				#{item.note,jdbcType=VARCHAR} 
			from dual
		</foreach>
	</insert>

	<!-- 主表修改 -->
	<update id="updateMain" parameterType="java.util.Map">
		UPDATE mat_dura_dept_check
		<trim prefix="set" suffixOverrides=",">
			<if test="dept_id != null and dept_id != ''">
				dept_id = #{dept_id,jdbcType=INTEGER},
			</if>
			<if test="dept_no != null and dept_no != ''">
				dept_no = #{dept_no,jdbcType=INTEGER},
			</if>
			<if test="emp_id != null and emp_id != ''">
				emp_id = #{emp_id,jdbcType=INTEGER},
			</if>
			<if test="make_date != null and make_date != ''">
				make_date = #{make_date,jdbcType=DATE},
			</if>
			<if test="brief != null">
				brief = #{brief,jdbcType=VARCHAR},
			</if>
		</trim>
		WHERE group_id =#{group_id,jdbcType=INTEGER}
			AND hos_id =#{hos_id,jdbcType=INTEGER}
			AND copy_code =#{copy_code,jdbcType=VARCHAR}
			AND check_id =#{check_id,jdbcType=BIGINT}
	</update>

	<!-- 明细表修改（批量） -->
	<update id="updateDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE mat_dura_dept_check_d
			<trim prefix="set" suffixOverrides=",">
				<if test="item.inv_id != null and item.inv_id != ''">
					inv_id = #{item.inv_id,jdbcType=INTEGER},
				</if>
				<if test="item.inv_no != null and item.inv_no != ''">
					inv_no = #{item.inv_no,jdbcType=INTEGER},
				</if>
				<if test="item.price != null and item.price != ''">
					price = #{item.price,jdbcType=NUMERIC},
				</if>
				<if test="item.cur_amount != null and item.cur_amount != ''">
					cur_amount = #{item.cur_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.chk_amount != null and item.chk_amount != ''">
					chk_amount = #{item.chk_amount,jdbcType=NUMERIC},
				</if>
				<if test="item.bar_code != null and item.bar_code != ''">
					bar_code = #{item.bar_code,jdbcType=VARCHAR},
				</if>
				<if test="item.note != null">
					note = #{item.note,jdbcType=VARCHAR},
				</if>
			</trim>
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND check_id = #{item.check_id,jdbcType=BIGINT}
				AND detail_id = #{item.detail_id,jdbcType=BIGINT}
		</foreach>
	</update>

	<!-- 主表删除 -->
	<delete id="deleteMain" parameterType="java.util.Map">
		DELETE FROM mat_dura_dept_check
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND check_id = #{check_id,jdbcType=BIGINT}
	</delete>

	<!-- 明细表删除 -->
	<delete id="deleteDetail" parameterType="java.util.Map">
		DELETE FROM mat_dura_dept_check_d
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND check_id = #{check_id,jdbcType=BIGINT}
	</delete>

	<!-- 主表批量删除 -->
	<delete id="deleteMainBatch" parameterType="java.util.List">
		DELETE FROM mat_dura_dept_check
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND check_id = #{item.check_id,jdbcType=BIGINT}
		</foreach>
	</delete>

	<!-- 明细表批量删除 -->
	<delete id="deleteDetailBatch" parameterType="java.util.List">
		DELETE FROM mat_dura_dept_check_d
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND check_id = #{item.check_id,jdbcType=BIGINT}
		</foreach>
	</delete>

	<!-- 用于主表加载 -->
	<select id="queryMainByCode" resultMap="matDuraCheckDept" parameterType="java.util.Map">
		SELECT
			a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no,  
			a.dept_id, a.dept_no, b.dept_code, b.dept_name, a.emp_id, c.emp_code, 
			c.emp_name, a.make_date, a.brief, a.state, d.user_name maker_name, 
			e.user_name checker_name 
		FROM mat_dura_dept_check a
		LEFT JOIN hos_dept_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id
			AND a.dept_id = b.dept_id
			<if test="show_history == 1">
				AND a.dept_no = b.dept_no
			</if>
			<if test="show_history == null or show_history == 0">
				AND b.is_stop = 0
			</if>
		LEFT JOIN hos_emp_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id
			AND a.emp_id = c.emp_id AND c.is_stop = 0
		LEFT JOIN sys_user d 
			ON a.group_id = d.group_id AND a.hos_id = d.hos_id 
			AND a.maker = d.user_id 
		LEFT JOIN sys_user e 
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id 
			AND a.checker = e.user_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.check_id = #{check_id,jdbcType=BIGINT}
	</select>

	<!-- 用于明细表加载 -->
	<select id="queryDetailByCode" resultMap="matDuraCheckDeptD" parameterType="java.util.Map">
		SELECT
			a.group_id, a.hos_id, a.copy_code, a.check_id, a.detail_id, a.inv_id, a.inv_no, 
			b.inv_code, b.bid_code, b.inv_name, b.inv_model, c.unit_name, d.fac_name, 
			a.price, a.cur_amount, a.price * a.cur_amount cur_money, a.chk_amount, 
			a.price * a.chk_amount chk_money, a.chk_amount - a.cur_amount amount, 
			a.price * (a.chk_amount - a.cur_amount) amount_money, a.bar_code, a.note 
		FROM mat_dura_dept_check_d a 
		LEFT JOIN mat_inv_dict b 
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code AND a.inv_id = b.inv_id 
			<if test="show_history == 1"> 
				AND a.inv_no = b.inv_no 
			</if> 
			<if test="show_history == 0"> 
				AND b.is_stop = 0 
			</if> 
		LEFT JOIN hos_unit c 
			ON b.group_id = c.group_id
			AND b.hos_id = c.hos_id
			AND b.unit_code = c.unit_code
			and c.is_stop = 0
		LEFT JOIN hos_fac_dict d
			ON b.group_id = d.group_id AND b.hos_id = d.hos_id
			AND b.fac_id = d.fac_id
			<if test="show_history == 1">
				AND b.fac_no = d.fac_no
			</if>
			<if test="show_history == 0">
				AND d.is_stop = 0
			</if>
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.check_id = #{check_id,jdbcType=BIGINT}
		order by b.inv_code
	</select>
	
	<!-- 审核或消审有待修改传入包含list的Map -->
	<update id="auditOrUnAuditBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin" separator=";" close=";end;">
			UPDATE mat_dura_dept_check set
				state = #{item.state,jdbcType=INTEGER},
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND check_id = #{item.check_id,jdbcType=BIGINT}
		</foreach>
	</update>
	
	<!-- 确认 -->
	<update id="confirmBatch" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			separator=";" close=";end;">
			update mat_dura_dept_check set
				<!--year = #{item.year,jdbcType=VARCHAR},
				month = #{item.month,jdbcType=VARCHAR}, -->
				state = #{item.state,jdbcType=INTEGER}<!-- ,
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				confirm_date = #{item.confirm_date,jdbcType=DATE} -->
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND check_id = #{item.check_id,jdbcType=BIGINT}
		</foreach>
	</update>
	
	<!-- 判断是否存在不等于该状态的单据 -->
	<select id="existsState" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM mat_dura_dept_check 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND check_id = #{check_id,jdbcType=BIGINT}
			AND state &lt;&gt; #{check_state,jdbcType=INTEGER}
	</select>
	
	<!-- 批量判断是否存在不等于该状态的单据 -->
	<select id="existsStateBatch" parameterType="java.util.List" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM mat_dura_dept_check 
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND check_id = #{item.check_id,jdbcType=BIGINT}
			AND state &lt;&gt; #{item.check_state,jdbcType=INTEGER}
		</foreach>
	</select>
	
	<!-- 获取要确认的明细数据 -->
	<select id="queryDetailListForConfirm" parameterType="java.util.List" resultMap="matDuraCheckDeptForConfirm">
		SELECT a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no, a.dept_id, a.emp_id,  
			b.detail_id, b.inv_id, b.inv_no, c.inv_code, c.inv_name, b.price, b.chk_amount - b.cur_amount amount, 
			b.price * (b.chk_amount - cur_amount) amount_money, b.bar_code 
		FROM mat_dura_dept_check a
		LEFT JOIN mat_dura_dept_check_d b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code AND a.check_id = b.check_id 
		LEFT JOIN mat_inv_dict c 
			ON b.group_id = c.group_id AND b.hos_id = b.hos_id 
			AND b.copy_code = c.copy_code AND b.inv_id = c.inv_id 
			AND c.is_stop = 0
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			a.group_id = #{item.group_id,jdbcType=INTEGER}
			AND a.hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND a.check_id = #{item.check_id,jdbcType=BIGINT}
		</foreach>
	</select>
	
	<!-- 主表模板打印 -->
	<select id="queryMainForPrintTemlate" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no, a.brief, 
			to_char(a.make_date, 'yyyy-MM-dd hh24:mi:ss') make_date, a.dept_id, a.dept_no, 
			b.dept_code, b.dept_name, a.emp_id, c.emp_no, c.emp_code, c.emp_name, 
			a.maker, e.user_name maker_name, a.checker, f.user_name checker_name, 
			to_char(a.check_date, 'yyyy-MM-dd hh24:mi:ss') check_date, case a.state 
				when 1 then '新建'
				when 2 then '审核'
				else '已确认'
			end as STATE,
			sum(nvl(md.chk_amount,0)) CHK_AMOUNT_SUM,
	        sum(md.chk_amount * md.price) CHK_MONEY_SUM,
	        sum(nvl(md.cur_amount,0)) CUR_AMOUNT_SUM,
	        sum(md.cur_amount * md.price) CUR_MONEY_SUM,
	        sum((nvl(md.chk_amount,0)-nvl(md.cur_amount,0))) LOSS_AMOUNT_SUM,
	        sum((nvl(md.chk_amount,0)-nvl(md.cur_amount,0)) * md.price) LOSS_MONEY_SUM  
		FROM mat_dura_dept_check a 
		left join mat_dura_dept_check_d md on a.group_id=md.group_id and a.hos_id=md.hos_id 
			and a.copy_code=md.copy_code and a.check_id=md.check_id
		LEFT JOIN hos_dept_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.dept_id = b.dept_id AND a.dept_no = b.dept_no
		LEFT JOIN hos_emp_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id 
			AND a.emp_id = c.emp_id AND c.is_stop = 0
		LEFT JOIN sys_user e 
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id 
			AND a.maker = e.user_id 
		LEFT JOIN sys_user f 
			ON a.group_id = f.group_id AND a.hos_id = f.hos_id 
			AND a.checker = f.user_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.check_id=#{check_id,jdbcType=BIGINT}
		group by a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no, a.brief,a.make_date,a.dept_id, a.dept_no,b.dept_code, b.dept_name, a.emp_id, c.emp_no, c.emp_code, c.emp_name,
        	a.maker, e.user_name , a.checker, f.user_name , a.check_date,  a.state	
	</select>
	
	<!-- 主表模板批量打印 -->
	<select id="queryMainForPrintTemlateBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.check_id id, a.group_id, a.hos_id, a.copy_code, a.check_no, a.brief, 
			to_char(a.make_date, 'yyyy-MM-dd hh24:mi:ss') make_date, a.dept_id, a.dept_no, 
			b.dept_code, b.dept_name, a.emp_id, c.emp_no, c.emp_code, c.emp_name, 
			a.maker, e.user_name maker_name, a.checker, f.user_name checker_name, 
			to_char(a.check_date, 'yyyy-MM-dd hh24:mi:ss') check_date, case a.state 
				when 1 then '新建'
				when 2 then '审核'
				else '已确认'
			end as STATE,
			sum(nvl(md.chk_amount,0)) CHK_AMOUNT_SUM,
	        sum(md.chk_amount * md.price) CHK_MONEY_SUM,
	        sum(nvl(md.cur_amount,0)) CUR_AMOUNT_SUM,
	        sum(md.cur_amount * md.price) CUR_MONEY_SUM,
	        sum((nvl(md.chk_amount,0)-nvl(md.chk_amount,0))) LOSS_AMOUNT_SUM,
	        sum((nvl(md.chk_amount,0)-nvl(md.cur_amount,0)) * md.price) LOSS_MONEY_SUM  
		FROM mat_dura_dept_check a 
		left join mat_dura_dept_check_d md on a.group_id=md.group_id and a.hos_id=md.hos_id 
			and a.copy_code=md.copy_code and a.check_id=md.check_id 
		LEFT JOIN hos_dept_dict b
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.dept_id = b.dept_id AND a.dept_no = b.dept_no
		LEFT JOIN hos_emp_dict c
			ON a.group_id = c.group_id AND a.hos_id = c.hos_id 
			AND a.emp_id = c.emp_id AND c.is_stop = 0
		LEFT JOIN sys_user e 
			ON a.group_id = e.group_id AND a.hos_id = e.hos_id 
			AND a.maker = e.user_id 
		LEFT JOIN sys_user f 
			ON a.group_id = f.group_id AND a.hos_id = f.hos_id 
			AND a.checker = f.user_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.check_id in  (${paraId})
		group by a.group_id, a.hos_id, a.copy_code, a.check_id, a.check_no, a.brief,a.make_date,a.dept_id, a.dept_no,b.dept_code, b.dept_name, a.emp_id, c.emp_no, c.emp_code, c.emp_name,
        	a.maker, e.user_name , a.checker, f.user_name , a.check_date,  a.state
		ORDER BY a.check_id desc	
	</select> 
	
	<!-- 明细表模板打印 -->
	<select id="queryDetailForPrintTemlate" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			a.check_id id, a.group_id, a.hos_id, a.copy_code, a.detail_id, a.inv_id, a.inv_no, 
			b.inv_code,b.bid_code, b.inv_name, b.inv_model, c.unit_name, d.fac_name, a.price, 
			a.cur_amount, a.price * a.cur_amount cur_money, 
			a.chk_amount, a.price * a.chk_amount chk_money, 
			a.chk_amount - a.cur_amount amount, <!-- 盈亏数量 -->
			a.price * (a.chk_amount - a.cur_amount) amount_money, <!-- 盈亏金额 --> 
			a.bar_code, a.note 
		FROM mat_dura_dept_check_d a 
		LEFT JOIN mat_inv_dict b 
			ON a.group_id = b.group_id AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code AND a.inv_id = b.inv_id 
			AND a.inv_no = b.inv_no 
		LEFT JOIN hos_unit c 
			ON b.group_id = c.group_id AND b.hos_id = c.hos_id
			AND b.unit_code = c.unit_code
		LEFT JOIN hos_fac_dict d
			ON b.group_id = d.group_id AND b.hos_id = d.hos_id
			AND b.fac_id = d.fac_id AND b.fac_no = d.fac_no
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="p_num ==1">
				AND a.check_id in (${paraId})
			</if>
			<if test="p_num ==0">
				AND a.check_id=#{check_id,jdbcType=BIGINT}
			</if>
		ORDER BY a.detail_id
	</select>
	
	<!-- 引入材料查询  -->
	<select id="queryMatDuraCheckByDeptId"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
		select a.group_id,a.hos_id,a.copy_code,a.inv_id,mid.bid_code,mid.inv_no,mid.inv_code ,mid.inv_name ,
		      mid.inv_model ,mid.unit_code,hu.unit_name ,a.price ,a.left_amount ,a.left_money,
		      mid.fac_id as fac_id, hfd.fac_code as fac_code, hfd.fac_name as fac_name,
		      hsd.sup_id,hsd.sup_code,hsd.sup_name
		from (
			select group_id, hos_id, copy_code, dept_id, inv_id, price,  
          		sum(nvl(left_amount,0)) left_amount, sum(nvl(left_money,0)) left_money 
          	from mat_dura_dept_balance 
          	<where>
          		<if test="hos_id != null and hos_id != ''">
					AND hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="group_id != null and group_id != ''">
					AND group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
	          	<if test="dept_id != null and dept_id != ''">
					AND dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
          	</where>
          	group by group_id, hos_id, copy_code, dept_id, inv_id, price
		) a left join mat_inv_dict mid on a.inv_id = mid.inv_id and a.group_id = mid.group_id 
			and a.hos_id = mid.hos_id and a.copy_code = mid.copy_code and mid.is_stop =0 
		left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code  and hu.is_stop = 0
		left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id and mid.fac_id = hfd.fac_id 
			and mid.fac_no = hfd.fac_no
		left join mat_type_dict mtd on mtd.group_id = mid.group_id and mtd.hos_id = mid.hos_id and mtd.copy_code = mid.copy_code
			and mtd.mat_type_id=mid.mat_type_id and mtd.mat_type_no=mid.mat_type_no 
		left join mat_inv_sup mis on mid.group_id = mis.group_id and mid.hos_id = mis.hos_id
		    and mid.copy_code = mis.copy_code and mid.inv_id = mis.inv_id and mis.is_default = 1
		left join hos_sup_dict hsd on mis.group_id = hsd.group_id and mis.hos_id = hsd.hos_id
		    and mis.sup_id = hsd.sup_id and hsd.is_stop = 0
		<where>                     
			<if test="hos_id != null and hos_id != ''">
				AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
				AND mid.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND (
						mid.inv_id like '%${inv_id}%'
					or upper(mid.inv_name) like '%${inv_id}%'
					or upper(mid.inv_model) like '%${inv_id}%'
					or upper(mid.inv_code) like '%${inv_id}%'
					or upper(mid.spell_code) like '%${inv_id}%'
					or upper(mid.wbx_code) like '%${inv_id}%'
					or upper(mid.bid_code) like '%${inv_id}%'
					or lower(mid.spell_code) like '%${inv_id}%'
					or lower(mid.bid_code) like '%${inv_id}%'
					or lower(mid.wbx_code) like '%${inv_id}%'
					or lower(mid.inv_name) like '%${inv_id}%'
					or lower(mid.inv_model) like '%${inv_id}%'
					or lower(mid.inv_code) like '%${inv_id}%'
					or mid.alias like '%${inv_id}%'
				)
			</if>
			
			<if test="mat_type_id != null and mat_type_id != ''">
				AND mtd.mat_type_code like '${mat_type_id}%'
			</if>
			<if test="is_zero == 1">
				AND nvl(a.left_amount,0) > 0
			</if>
			<if test="is_zero == 0">
				and nvl(a.left_amount,0) >= 0
			</if>
		</where>   
		order by mid.inv_code
	</select>
		
	<!-- 组装盘点的材料信息 -->
	<select id="queryMatDuraCheckByDeptInvDetail" parameterType="java.util.List" resultType="java.util.Map"  >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select #{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.dept_id,jdbcType=INTEGER} as dept_id,   
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.inv_no,jdbcType=INTEGER} as inv_no,
					#{item.price,jdbcType=FLOAT} as price
				from dual
			</foreach>
		),sum_list as(
		     select mfb.group_id, mfb.hos_id, mfb.copy_code, mfb.dept_id, mfb.inv_id,mfb.price, 
		     	sum(nvl(mfb.left_amount, 0)) as left_amount,sum(nvl(mfb.left_money, 0)) as left_money
		     from list_temp lt
		     left join mat_dura_dept_balance mfb on lt.group_id = mfb.group_id
		     	and lt.hos_id = mfb.hos_id and lt.copy_code = mfb.copy_code
		      	and lt.inv_id = mfb.inv_id and lt.dept_id = mfb.dept_id
		      	and lt.price = mfb.price
		     where nvl(mfb.left_amount,0) > 0 
		     group by mfb.group_id, mfb.hos_id, mfb.copy_code, mfb.dept_id, mfb.inv_id,mfb.price
		     order by mfb.inv_id
		)  
		  
		select a.group_id, a.hos_id, a.copy_code,mid.bid_code, a.inv_id, mid.inv_no, mid.inv_code, mid.inv_name, 
		  	mid.inv_model, mid.unit_code, hu.unit_name,mtd.mat_type_code,mtd.mat_type_name,mtd.mat_type_id,mtd.mat_type_no,
		  	a.price,hsd.sup_id, hsd.sup_no, hsd.sup_code,hsd.sup_name,  
		  	mid.fac_id, hfd.fac_code,hfd.fac_name,a.left_amount as cur_amount, a.left_money as cur_money
		from sum_list a
		left join mat_inv_dict mid on a.group_id = mid.group_id and a.hos_id = mid.hos_id
		  	and a.copy_code = mid.copy_code and a.inv_id = mid.inv_id
		    and mid.is_stop = 0 
		left join mat_type_dict mtd on mid.group_id=mtd.group_id and mid.hos_id=mtd.hos_id and mid.copy_code=mtd.copy_code
			and mid.mat_type_id=mtd.mat_type_id and mid.mat_type_no=mtd.mat_type_no  
		left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id
		    and mid.unit_code = hu.unit_code and hu.is_stop = 0 
		left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id
		    and mid.fac_id = hfd.fac_id and mid.fac_no = hfd.fac_no
		left join mat_inv_sup mis on a.group_id = mis.group_id and a.hos_id = mis.hos_id
		    and a.copy_code = mis.copy_code and a.inv_id = mis.inv_id and mis.is_default = 1 
		left join hos_sup_dict hsd on mis.group_id = hsd.group_id and mis.hos_id = hsd.hos_id
		    and mis.sup_id = hsd.sup_id and hsd.is_stop = 0 
		order by mid.inv_code
	</select>
	
	<!-- 生成出入库单取主表信息 -->
	<select id="queryMatDuraCheckDeptMainForInOut" resultType="java.util.TreeMap"  parameterType="java.util.Map" >
		SELECT 
			hos_id, group_id, copy_code, check_id, check_no, dept_id, dept_no,
			emp_id as dept_emp
		FROM mat_dura_dept_check
		WHERE hos_id = #{hos_id,jdbcType=INTEGER} 
			and group_id = #{group_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and check_id = #{check_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 生成出入库单取盘盈明细 -->
	<select id="queryMatDuraCheckDeptDetailProfitForInOut"  parameterType="java.util.Map"  resultType="java.util.Map">
		SELECT 
		    mcd.inv_no, 
		    mcd.inv_id, 
		    mid.inv_code, 
		    mid.inv_name, 
		    mcd.bar_code,
		    mcd.note,
		    round(mcd.price, ap.para_value) as price, 
		    mcd.chk_amount-mcd.cur_amount as amount, 
		    round(mcd.price*(mcd.chk_amount-mcd.cur_amount), ap1.para_value) as amount_money
		FROM mat_dura_dept_check_d mcd
		left join mat_inv_dict mid
			on mcd.group_id = mid.group_id
			and mcd.hos_id = mid.hos_id
			and mcd.copy_code = mid.copy_code
			and mcd.inv_id = mid.inv_id
			and mcd.inv_no = mid.inv_no
		left join acc_para ap 
			on mcd.group_id = ap.group_id
			and mcd.hos_id = ap.hos_id
			and mcd.copy_code = ap.copy_code
			and ap.mod_code = '04'
			and ap.para_code = '04006'
		left join acc_para ap1 
			on mcd.group_id = ap1.group_id
			and mcd.hos_id = ap1.hos_id
			and mcd.copy_code = ap1.copy_code
			and ap1.mod_code = '04'
			and ap1.para_code = '04005'
		where mcd.group_id = #{group_id,jdbcType=INTEGER}
			AND mcd.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mcd.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mcd.check_id = #{check_id,jdbcType=INTEGER}
			AND mcd.chk_amount - mcd.cur_amount > 0
		order by mcd.detail_id asc
	</select>
	
	<!-- 生成出入库单取盘亏明细 -->
	<select id="queryMatDuraCheckDeptDetailLossForInOut"  parameterType="java.util.Map"  resultType="java.util.HashMap">
		SELECT 
		    mcd.inv_no, 
		    mcd.inv_id, 
		    mid.inv_code, 
		    mid.inv_name, 
		    mcd.bar_code,
		    mcd.note,
		    round(mcd.price, ap.para_value) as price, 
		    mcd.cur_amount-mcd.chk_amount as amount, 
		    round(mcd.price*(mcd.cur_amount-mcd.chk_amount), ap1.para_value) as amount_money
		FROM mat_dura_dept_check_d mcd
		left join mat_inv_dict mid
			on mcd.group_id = mid.group_id
			and mcd.hos_id = mid.hos_id
			and mcd.copy_code = mid.copy_code
			and mcd.inv_id = mid.inv_id
			and mcd.inv_no = mid.inv_no
		left join acc_para ap 
			on mcd.group_id = ap.group_id
			and mcd.hos_id = ap.hos_id
			and mcd.copy_code = ap.copy_code
			and ap.mod_code = '04'
			and ap.para_code = '04006'
		left join acc_para ap1 
			on mcd.group_id = ap1.group_id
			and mcd.hos_id = ap1.hos_id
			and mcd.copy_code = ap1.copy_code
			and ap1.mod_code = '04'
			and ap1.para_code = '04005'
		where mcd.group_id = #{group_id,jdbcType=INTEGER}
			AND mcd.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mcd.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mcd.check_id = #{check_id,jdbcType=INTEGER}
			AND mcd.cur_amount - mcd.chk_amount > 0
		order by mcd.detail_id asc
	</select>
	
	<!-- 更新盘点单的状态  -->
	<update id="updateStateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_dura_dept_check set 
				state = #{item.state,jdbcType=INTEGER}
			<where>   
				hos_id = #{item.hos_id,jdbcType=INTEGER}   
				AND group_id = #{item.group_id,jdbcType=INTEGER} 
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}  
				AND check_id = #{item.check_id,jdbcType=INTEGER}            
			</where>  			
		</foreach>
	</update>
	
	<select id="queryMatInvByBalance" parameterType="java.util.Map" resultType="java.util.Map" >
		select mddb.group_id,
		       mddb.hos_id,
		       mddb.copy_code,
		       mddb.inv_id,
		       mi.inv_no,
		       mi.bid_code,
		       mi.inv_code,
		       mi.inv_name,
		       mi.inv_model,
		       mi.unit_code,
		       hu.unit_name,
		       mi.fac_id,
       		   hf.fac_code,
       		   hf.fac_name,
		       mddb.price,
		       mddb.bar_code,
		       mddb.left_amount cur_amount,
		       mddb.left_amount chk_amount,
		       0 amount,
		       0 amount_money
		  from mat_dura_dept_balance mddb
		  left join mat_inv_dict mi
		    on mddb.group_id = mi.group_id
		   and mddb.hos_id = mi.hos_id
		   and mddb.copy_code = mi.copy_code
		   and mddb.inv_id = mi.inv_id
		   and mi.is_stop = 0
		  left join hos_unit hu
		    on mi.group_id = hu.group_id
		   and mi.hos_id = hu.hos_id
		   and mi.unit_code = hu.unit_code
		  left join hos_fac hf
		    on mi.group_id = hf.group_id
		   and mi.hos_id = hf.hos_id 
		   and mi.fac_id = hf.fac_id 
		<where>
			<if test="group_id != null and group_id != ''">
				AND mddb.group_id = #{group_id, jdbcType=INTEGER} 
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND mddb.hos_id = #{hos_id, jdbcType=INTEGER} 
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mddb.copy_code = #{copy_code, jdbcType=VARCHAR} 
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND mddb.dept_id = #{dept_id, jdbcType=INTEGER} 
			</if>
		</where>
	</select>
</mapper>

