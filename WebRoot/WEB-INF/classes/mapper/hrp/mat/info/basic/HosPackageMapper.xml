<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.info.basic.HosPackageMapper">
	
	<resultMap id="hosPackage" type="com.chd.hrp.mat.entity.HosPackage">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="pack_code" column="pack_code"/>
	<result property="pack_name" column="pack_name"/>
	<result property="is_stop" column="is_stop"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="addHosPackage" useGeneratedKeys="true" >
	
		INSERT INTO HOS_PACKAGE (
		group_id
		,
		hos_id
		,
		pack_code
		,
		pack_name
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note
		
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{pack_code,jdbcType=VARCHAR}
		,
		#{pack_name,jdbcType=VARCHAR}
		,
		#{is_stop,jdbcType=INTEGER}
		,
		#{spell_code,jdbcType=VARCHAR}
		,
		#{wbx_code,jdbcType=VARCHAR}
		,
		#{note,jdbcType=VARCHAR}
		
		)
	
	</insert>
	
      <insert id="addBatchHosPackage" parameterType="java.util.List" >
	
		INSERT INTO HOS_PACKAGE (
		group_id
		,
		hos_id
		,
		pack_code
		,
		pack_name
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note
		
		
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.pack_code,jdbcType=VARCHAR}
			,
			#{item.pack_name,jdbcType=VARCHAR}
			,
			#{item.is_stop,jdbcType=INTEGER}
			,
			#{item.spell_code,jdbcType=VARCHAR}
			,
			#{item.wbx_code,jdbcType=VARCHAR}
			,
			#{item.note,jdbcType=VARCHAR}
				from dual
		</foreach>
	</insert> 
	
	<!-- <insert id="addBatchHosPackage" parameterType="java.util.List" >
	
		INSERT INTO HOS_PACKAGE (
		group_id
		,
		hos_id
		,
		pack_code
		,
		pack_name
		,
		is_stop
		,
		spell_code
		,
		wbx_code
		,
		note
		
		
		) select HOS_PACKAGE_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.pack_code,jdbcType=VARCHAR}
			,
			#{item.pack_name,jdbcType=VARCHAR}
			,
			#{item.is_stop,jdbcType=INTEGER}
			,
			#{item.spell_code,jdbcType=VARCHAR}
			,
			#{item.wbx_code,jdbcType=VARCHAR}
			,
			#{item.note,jdbcType=VARCHAR}
		
			
				from dual
		</foreach>
		)t
	</insert> -->
	
	<update id="updateHosPackage" parameterType="java.util.Map">
	
		UPDATE hos_package 
		
		<set>
		
			<if test="pack_name != null and pack_name != ''">
					pack_name = #{pack_name},
			</if>
			<if test="is_stop != null and is_stop != ''">
					is_stop = #{is_stop},
			</if>
			
		<if test="spell_code != null and spell_code != ''">
					spell_code = #{spell_code},
			</if>
			
			<if test="wbx_code != null and wbx_code != ''">
					wbx_code = #{wbx_code},
			</if>
			
			<if test="note != null and note != ''">
					note = #{note},
			</if>
		</set>
		
		
		
		
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="pack_code != null and pack_code != ''">
			AND pack_code = #{pack_code,jdbcType=VARCHAR}
			</if>
		</where>
	</update>
	<update id="updateBatchHosPackage" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE hos_package SET
			pack_name = #{pack_name,jdbcType=VARCHAR}
			,
			is_stop = #{is_stop,jdbcType=INTEGER}
			,
			spell_code = #{spell_code,jdbcType=VARCHAR}
			,
			wbx_code = #{wbx_code,jdbcType=VARCHAR}
			,
			note = #{note,jdbcType=VARCHAR}
			
			
			WHERE 
			group_id = #{group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{hos_id,jdbcType=INTEGER}
			 and 
			pack_code = #{pack_code,jdbcType=VARCHAR}
			
		</foreach>
	</update>
	
	<delete id="deleteHosPackage" parameterType="java.util.Map">
	
		DELETE FROM hos_package WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		pack_code = #{pack_code,jdbcType=VARCHAR} 
	
	</delete>
	<delete id="deleteBatchHosPackage" parameterType="java.util.List">
		DELETE FROM hos_package WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				pack_code = #{item.pack_code,jdbcType=VARCHAR}
				
			</foreach>
	
	</delete>
	<select id="queryHosPackage" parameterType="java.util.Map" resultMap="hosPackage" >
	
		SELECT 
		group_id,
		hos_id,
		pack_code,
		pack_name,
		is_stop,
		spell_code,
		wbx_code,
		note
		FROM HOS_PACKAGE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="pack_code != null and pack_code != ''">
		AND pack_code like '${pack_code}%'
		</if>
		<if test="pack_name != null and pack_name != ''">
					and (pack_name like '%'||#{pack_name}||'%'
				     or upper(spell_code) like '%'||#{pack_name}||'%'
				     or upper(wbx_code) like '%'||#{pack_name}||'%'
				     or lower(spell_code) like '%'||#{pack_name}||'%'
				     or lower(wbx_code) like '%'||#{pack_name}||'%')
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryHosPackageByCode" resultType="com.chd.hrp.mat.entity.HosPackage" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		pack_code,
		pack_name,
		is_stop,
		spell_code,
		wbx_code,
		note
		FROM hos_package 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		pack_code = #{pack_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryHosPackageByUniqueness" resultType="com.chd.hrp.mat.entity.HosPackage" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		pack_code,
		pack_name,
		is_stop,
		spell_code,
		wbx_code,
		note
		FROM HOS_PACKAGE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="pack_code != null and pack_code != ''">
		AND pack_code = #{pack_code,jdbcType=VARCHAR}
		</if>
		<if test="pack_name != null and pack_name != ''">
		AND pack_name = #{pack_name,jdbcType=VARCHAR}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 根据 包装单位名称 查询 包装单位记录 （判断包装单位名称是否已使用） -->
	<select id="queryHosPackageByName" resultType="com.chd.hrp.mat.entity.HosPackage" parameterType="java.util.Map" >
	
		SELECT 
		pack_code,
		pack_name
		FROM hos_package 
		<where>
		    pack_name = #{pack_name,jdbcType=VARCHAR}
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>

			<if test="pack_code != null and pack_code != ''">
			AND 
			pack_code = #{pack_code,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	
	<select id="queryHosPackageByNameCode" resultType="com.chd.hrp.mat.entity.HosPackage" parameterType="java.util.Map" >
	
		SELECT 
		pack_code,
		pack_name
		FROM hos_package 
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="pack_name != null and pack_name != ''">
			AND 
			pack_code = #{pack_code,jdbcType=VARCHAR}
			
			
			</if>
		</where>
	</select>
	
	
	
</mapper>

