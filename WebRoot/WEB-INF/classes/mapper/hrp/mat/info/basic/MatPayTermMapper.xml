<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.info.basic.MatPayTermMapper">

	<resultMap id="matPayTerm" type="com.chd.hrp.mat.entity.MatPayTerm">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="pay_term_id" column="pay_term_id" />
		<result property="pay_term_code" column="pay_term_code" />
		<result property="pay_term_name" column="pay_term_name" />
		<result property="wbx_code" column="wbx_code" />
		<result property="spell_code" column="spell_code" />
		<result property="is_stop" column="is_stop" />
		<result property="note" column="note" />
	</resultMap>

	<insert id="add" useGeneratedKeys="true">

		INSERT INTO MAT_PAY_TERM (
			group_id ,
			hos_id ,
			copy_code ,
			pay_term_id ,
			pay_term_code ,
			pay_term_name ,
			wbx_code ,
			spell_code ,
			is_stop 
		) VALUES (
			#{group_id} ,
			#{hos_id} ,
			#{copy_code} ,
			MAT_PAY_TERM_SEQ.nextval ,
			#{pay_term_code} ,
			#{pay_term_name} ,
			#{wbx_code} ,
			#{spell_code} ,
			#{is_stop} 
		)

	</insert>
	<insert id="addBatch" parameterType="java.util.List">

		INSERT INTO MAT_PAY_TERM (
			pay_term_id		,
			group_id		,
			hos_id		,
			copy_code		,
			
			pay_term_code		,
			pay_term_name		,
			wbx_code		,
			spell_code		,
			is_stop		

		) select MAT_PAY_TERM_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.copy_code} ,
		
			#{item.pay_term_code} ,
			#{item.pay_term_name} ,
			#{item.wbx_code} ,
			#{item.spell_code} ,
			#{item.is_stop} 

		</foreach>
		)t
	</insert>

	<update id="update" parameterType="java.util.Map">

		UPDATE mat_pay_term 
		SET pay_term_code = #{pay_term_code}		,
			pay_term_name = #{pay_term_name}		,
			wbx_code = #{wbx_code}		,
			spell_code = #{spell_code}		,
			is_stop = #{is_stop}	

		WHERE group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and pay_term_id = #{pay_term_id}
		
	</update>
	<update id="updateBatch" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
			UPDATE mat_pay_term 
			SET pay_term_name = #{item.pay_term_name}			,
				wbx_code = #{item.wbx_code}			,
				spell_code = #{item.spell_code}			,
				is_stop = #{item.is_stop}	

			WHERE group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and pay_term_code = #{item.pay_term_code}
				
		</foreach>
	</update>

	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM mat_pay_term 
		WHERE group_id = #{group_id} 
		and hos_id = #{hos_id} 
		and copy_code = #{copy_code} 
		and pay_term_code = #{pay_term_code} 

	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM mat_pay_term WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and copy_code = #{item.copy_code}
			and pay_term_code = #{item.pay_term_code}

		</foreach>

	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="matPayTerm">

		SELECT
			
			pay_term_code,
			pay_term_name,
			
			is_stop
		FROM MAT_PAY_TERM
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="pay_term_id != null and pay_term_id != ''">
				AND pay_term_id = #{pay_term_id}
			</if>
			<if test="pay_term_code != null and pay_term_code != ''">
				AND pay_term_code like #{pay_term_code}||'%'
			</if>
			<if test="pay_term_name != null and pay_term_name != ''">
					 and (pay_term_name like '%'||#{pay_term_name}||'%'
				     or upper(spell_code) like '%'||#{pay_term_name}||'%'
				     or upper(wbx_code) like '%'||#{pay_term_name}||'%'
				     or lower(spell_code) like '%'||#{pay_term_name}||'%'
				     or lower(wbx_code) like '%'||#{pay_term_name}||'%')
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
		</where>
		order by pay_term_id asc
	</select>
	
	<select id="queryPayTerm" parameterType="java.util.Map" resultMap="matPayTerm">

		SELECT
			pay_term_id,
			pay_term_code,
			pay_term_name,
			
			is_stop
		FROM MAT_PAY_TERM
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="pay_term_id != null and pay_term_id != ''">
				AND pay_term_id = #{pay_term_id}
			</if>
			<if test="pay_term_code != null and pay_term_code != ''">
				AND pay_term_code like #{pay_term_code}||'%'
			</if>
			<if test="pay_term_name != null and pay_term_name != ''">
					 and (pay_term_name like '%'||#{pay_term_name}||'%'
				     or upper(spell_code) like '%'||#{pay_term_name}||'%'
				     or upper(wbx_code) like '%'||#{pay_term_name}||'%'
				     or lower(spell_code) like '%'||#{pay_term_name}||'%'
				     or lower(wbx_code) like '%'||#{pay_term_name}||'%')
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
		</where>
		order by pay_term_id asc
	</select>
	
	<select id="queryByCode" resultType="com.chd.hrp.mat.entity.MatPayTerm" parameterType="java.util.Map">

		SELECT
			group_id,
			hos_id,
			copy_code,
			pay_term_id,
			pay_term_code,
			pay_term_name,
			wbx_code,
			spell_code,
			is_stop,
			note
		FROM mat_pay_term
		WHERE
			group_id = #{group_id} and
			hos_id = #{hos_id} and
			copy_code = #{copy_code} and
			pay_term_code = #{pay_term_code} 

	</select>
	<select id="queryByUniqueness" resultType="com.chd.hrp.mat.entity.MatPayTerm" parameterType="java.util.Map">

		SELECT
			group_id,
			hos_id,
			copy_code,
			pay_term_id,
			pay_term_code,
			pay_term_name,
			wbx_code,
			spell_code,
			is_stop,
			note
		FROM MAT_PAY_TERM
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="pay_term_id != null and pay_term_id != ''">
				AND pay_term_id = #{pay_term_id}
			</if>
			<if test="pay_term_code != null and pay_term_code != ''">
				AND pay_term_code = #{pay_term_code}
			</if>
			<if test="pay_term_name != null and pay_term_name != ''">
				AND pay_term_name = #{pay_term_name}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
		</where>
		order by group_id asc
	</select>

</mapper>

