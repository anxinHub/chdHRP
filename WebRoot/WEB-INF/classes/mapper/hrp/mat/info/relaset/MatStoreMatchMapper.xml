<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.mat.dao.info.relaset.MatStoreMatchMapper"> 
	
	<resultMap id="matStoreMatch" type="com.chd.hrp.mat.entity.MatStoreMatch">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="store_match_id" column="store_match_id"/>
		<result property="store_match_code" column="store_match_code"/>
		<result property="store_match_name" column="store_match_name"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="amount" column="amount"/>
		<result property="bid_code" column="bid_code"/>
		<result property="fac_id" column="fac_id"/>
		<result property="fac_no" column="fac_no"/>
		<result property="fac_code" column="fac_code"/>
		<result property="fac_name" column="fac_name"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_code" column="sup_code"/>
		<result property="sup_name" column="sup_name"/>
		
	</resultMap>
	
	<!-- 查询最大序号 -->
	<select id="queryStoreMatchNextSeq"  resultType="java.lang.Long" useCache="false" flushCache="true">	
		SELECT MAT_STORE_MATCH_SEQ.nextval as store_match_id FROM DUAL
	</select>
	
	<insert id="add" useGeneratedKeys="true" >
		<!-- <selectKey resultType="java.lang.Integer" order="BEFORE"  keyProperty="store_match_id">
			SELECT MAT_STORE_MATCH_SEQ.nextval as store_match_id FROM DUAL
		</selectKey> --> 
		INSERT INTO MAT_STORE_MATCH (
			group_id, hos_id, copy_code,store_match_id,store_match_code,store_match_name,store_id
		) 
		VALUES (
			#{group_id},
			#{hos_id},
			#{copy_code},
			#{store_match_id},
			#{store_match_code},
			#{store_match_name},
			#{store_id}
		)
	</insert>
	
	<!-- 批量添加配套表明细 -->
	<insert id="addBatchMsmDetail" parameterType="java.util.List" >
		INSERT INTO MAT_STORE_MATCH_DETAIL(
		      group_id,
		      hos_id,
		      copy_code,
		      store_match_id,
		      inv_id,
		      amount)
		<foreach collection="list" item="item" index="index" separator=" union all " >
		    select 		
				#{item.group_id},
				#{item.hos_id},
				#{item.copy_code},
				#{item.store_match_id},
				#{item.inv_id},
				#{item.amount}		 
			from dual 
		</foreach>
	</insert>
	
	<!-- 修改 配套表名称、仓库 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE MAT_STORE_MATCH 
		
		<set>
		
			<if test="store_match_name != null and store_match_name != ''">
					store_match_name = #{store_match_name},
			</if>
			<if test="store_id != null and store_id != ''">
					store_id = #{store_id},
			</if>
			
		<if test="store_match_code != null and store_match_code != ''">
					store_match_code = #{store_match_code},
			</if>
		</set>
		   
		<where>
			<if test="group_id != null and group_id != '' ">
				group_id = #{group_id}
			</if>
			
			<if test="hos_id != null and hos_id != '' ">
				AND hos_id =#{hos_id}
			</if>
			
			<if test="copy_code != null and copy_code != '' ">
				AND copy_code = #{copy_code}
			</if>
			
			<if test="store_match_id != null and store_match_id != '' ">
				AND store_match_id = #{store_match_id}
			</if>
			
		</where>
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
		
	</update>
	
	<!-- 批量删除 配套表明细 -->
	<delete id="deleteBatchMsmDetail" parameterType="java.util.List">
		DELETE FROM MAT_STORE_MATCH_DETAIL WHERE
			<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != '' ">
					AND copy_code = #{item.copy_code}
				</if>
				<if test="item.store_match_id != null and item.store_match_id != '' ">
					AND store_match_id = #{item.store_match_id}
				</if>
			</foreach>
	</delete>
	
	<!-- 删除配套表 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM MAT_STORE_MATCH WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id}
			AND
			hos_id = #{item.hos_id}
			AND
			copy_code = #{item.copy_code}
			AND
			store_match_id = #{item.store_match_id}
		</foreach>
	</delete>
	
	<!-- 查询所有配套表-->
	<select id="query" parameterType="java.util.Map" resultMap="matStoreMatch" >
		SELECT
			msm.group_id,
			msm.hos_id,
			msm.copy_code,
		    msm.store_match_id,
		    msm.store_match_code,
		    msm.store_match_name,
		    msm.store_id,
		    hsd.store_name
		FROM MAT_STORE_MATCH msm
		LEFT JOIN HOS_STORE_DICT hsd
		ON
		    msm.group_id = hsd.group_id
		    AND msm.hos_id = hsd.hos_id
		    AND msm.store_id = hsd.store_id
		    AND hsd.is_stop = 0 
		<where>
			<if test="group_id != null and group_id != '' ">
			    msm.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND msm.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND msm.copy_code = #{copy_code}
			</if>
			<if test="store_match_id != null and store_match_id != '' ">
			    AND msm.store_match_id = #{store_match_id}
			</if>
			<if test="store_id != null and store_id != '' ">
			    AND msm.store_id = #{store_id}
			</if>
				<!-- 添加用户数据权限 -->
			and exists (select 1 from v_user_data_perm b where
			msm.group_id=b.group_id and msm.hos_id=b.hos_id and
			msm.store_id=b.perm_code  and b.is_read=1
            and b.table_code='HOS_STORE_DICT'
			and user_id=#{user_id})
		</where>
		ORDER BY msm.store_match_id asc
	</select>
	
	<!-- 条件查询 配套表 -->
	<select id="queryByCode" resultType="com.chd.hrp.mat.entity.MatStoreMatch" parameterType="java.util.Map" >
		SELECT
			msm.group_id,
			msm.hos_id,
			msm.copy_code,
		    msm.store_match_id,
		    msm.store_match_code,
		    msm.store_match_name,
		    msm.store_id,
		    hsd.store_name,
		    hsd.store_code,
		    hsd.store_no
		FROM MAT_STORE_MATCH msm
		LEFT JOIN HOS_STORE_DICT hsd
		ON
		    msm.group_id = hsd.group_id
		    AND msm.hos_id = hsd.hos_id
		    AND msm.store_id = hsd.store_id
		    AND hsd.is_stop = 0
		<where>
			<if test="group_id != null and group_id != '' ">
			    msm.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND msm.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND msm.copy_code = #{copy_code}
			</if>
			<if test="store_match_id != null and store_match_id != '' ">
			    AND msm.store_match_id = #{store_match_id}
			</if>
			<if test="store_id != null and store_id != '' ">
			    AND msm.store_id = #{store_id}
			</if>
		</where>
	</select>
	
	
	<select id="queryExists" resultType="com.chd.hrp.mat.entity.MatStoreMatch" parameterType="java.util.Map" >
		SELECT
			msm.group_id,
			msm.hos_id,
			msm.copy_code,
		    msm.store_match_id,
		    msm.store_match_code,
		    msm.store_match_name,
		    msm.store_id,
		    hsd.store_name,
		    hsd.store_code,
		    hsd.store_no
		FROM MAT_STORE_MATCH msm
		LEFT JOIN HOS_STORE_DICT hsd
		ON
		    msm.group_id = hsd.group_id
		    AND msm.hos_id = hsd.hos_id
		    AND msm.store_id = hsd.store_id
		    AND hsd.is_stop = 0
		<where>
			<if test="group_id != null and group_id != '' ">
			    msm.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND msm.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND msm.copy_code = #{copy_code}
			</if>
			<if test="store_match_code != null and store_match_code != '' ">
			    AND msm.store_match_code = #{store_match_code}
			</if>
			
		</where>
	</select>
	
	
	<select id="queryByName" resultType="com.chd.hrp.mat.entity.MatStoreMatch" parameterType="java.util.Map" >
		SELECT
			msm.group_id,
			msm.hos_id,
			msm.copy_code,
		    msm.store_match_id,
		    msm.store_match_code,
		    msm.store_match_name,
		    msm.store_id,
		    hsd.store_name,
		    hsd.store_code,
		    hsd.store_no
		FROM MAT_STORE_MATCH msm
		LEFT JOIN HOS_STORE_DICT hsd
		ON
		    msm.group_id = hsd.group_id
		    AND msm.hos_id = hsd.hos_id
		    AND msm.store_id = hsd.store_id
		    AND hsd.is_stop = 0
		<where>
		
		  msm.store_match_name = #{store_match_name}
			<if test="group_id != null and group_id != '' ">
			 AND   msm.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			    AND msm.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != '' ">
			    AND msm.copy_code = #{copy_code}
			</if>
			  
			
			
		</where>
	</select>
	
	<!-- 查询 配套表明细 -->
	<select id="querySmmDetailByCode" parameterType="java.util.Map" resultType="java.util.Map">
		select
			msmd.store_match_id,
    		msm.store_id,
    		inv.inv_id,
		    inv.inv_code,
		    inv.inv_name,
		    inv.inv_model,
		    inv.unit_code,
		    hu.unit_name,
		    msmd.amount,inv.plan_price as price,
		    inv.bid_code,hsd.sup_id,hsd.sup_no,hsd.sup_code,hsd.sup_name, hfd.fac_id,hfd.fac_no,hfd.fac_code,hfd.fac_name
		from MAT_STORE_MATCH_DETAIL  msmd
		left join MAT_STORE_MATCH msm
		on
		     msmd.group_id = msm.group_id
		     and msmd.hos_id = msm.hos_id
		     and msmd.copy_code = msm.copy_code
		     and msmd.store_match_id = msm.store_match_id  
		left join mat_inv_dict inv
		on   msmd.group_id = inv.group_id
		     and msmd.hos_id = inv.hos_id
		     and msmd.copy_code = inv.copy_code
		     and msmd.inv_id = inv.inv_id and inv.is_stop = 0
		left join hos_unit hu on inv.group_id = hu.group_id
         	and inv.hos_id = hu.hos_id
         	and inv.unit_code = hu.unit_code and hu.is_stop = 0
        left join mat_inv_sup mis on inv.group_id=mis.group_id and inv.hos_id=mis.hos_id and inv.copy_code=mis.copy_code
         	and inv.inv_id=mis.inv_id and mis.is_default=1
    	left join hos_sup_dict hsd on mis.group_id=hsd.group_id and mis.hos_id=hsd.hos_id and mis.sup_id=hsd.sup_id
         	and hsd.is_stop=0
        left join hos_fac_dict hfd on inv.group_id=hfd.group_id and inv.hos_id=hfd.hos_id and inv.fac_id=hfd.fac_id
         	and inv.fac_no=hfd.fac_no 
		<where>
			<if test="group_id != null and group_id != ''">
				 msmd.group_id = #{group_id}
			</if>
			
			<if test="hos_id != null and hos_id != '' ">
			     and msmd.hos_id = #{hos_id}
			</if>
			
			<if test="copy_code != null and  copy_code != ''">
			     and msmd.copy_code = #{copy_code}
			</if>
			
			<if test="store_match_id != null and store_match_id != '' ">
			     and msmd.store_match_id = #{store_match_id}
			</if>
			
		</where>
		order by msmd.inv_id
	</select>
	
	<select id="queryByUniqueness" resultType="com.chd.hrp.mat.entity.MatStoreMatch" parameterType="java.util.Map" >
	</select>
	
	
	<select id="queryMatInvListByStoreMatch"  parameterType="java.util.Map" resultType="java.util.Map">
		select a.group_id,a.hos_id,a.copy_code,a.inv_id,a.inv_no,a.inv_code,a.inv_name,a.bid_code,a.inv_model,c.fac_code,c.fac_name,
			d.unit_code,d.unit_name,a.plan_price price,a.is_com,case when a.is_com=0 then nvl(mih.cur_amount,0) else nvl(maih.cur_amount,0) end cur_amount,
			hsd.sup_code,hsd.sup_name,a.source_plan
		from mat_store_inv m 
		join mat_inv_dict a on m.group_id=a.group_id and m.hos_id=a.hos_id and m.copy_code=a.copy_code
		     and m.inv_id=a.inv_id
		left join mat_type_dict b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code 
		     and a.mat_type_id=b.mat_type_id and a.mat_type_no=b.mat_type_no
		left join hos_fac_dict c on a.group_id=c.group_id and a.hos_id=c.hos_id 
		     and a.fac_id=c.fac_id and a.fac_no=c.fac_no
		left join hos_unit d on a.group_id=d.group_id and a.hos_id=d.hos_id and a.unit_code=d.unit_code and d.is_stop=0
		left join mat_inv_hold mih on m.group_id=mih.group_id and m.hos_id=mih.hos_id and m.copy_code=mih.copy_code
		     and m.store_id=mih.store_id and m.inv_id=mih.inv_id
		left join mat_affi_inv_hold maih on m.group_id=maih.group_id and m.hos_id=maih.hos_id and m.copy_code=maih.copy_code
		     and m.store_id=maih.store_id and m.inv_id=maih.inv_id
		left join mat_inv_sup mis on a.group_id=mis.group_id and a.hos_id=mis.hos_id and a.copy_code=mis.copy_code
		     and a.inv_id=mis.inv_id and mis.is_default=1
		left join hos_sup_dict hsd on mis.group_id=hsd.group_id and mis.hos_id=hsd.hos_id and mis.sup_id=hsd.sup_id and hsd.is_stop=0
		<where>
			<if test="group_id != null and group_id != ''">
				 and a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != '' ">
			     and a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and  copy_code != ''">
			     and a.copy_code = #{copy_code}
			</if>
			<if test="store_id != null and  store_id != ''">
			     and m.store_id = #{store_id}
			</if>
			<if test="mat_type_id != null and  mat_type_id != ''">
			     and a.mat_type_id = #{mat_type_id}
			</if>
			<if test="mat_type_code != null and  mat_type_code != ''">
			     and b.mat_type_code like '${mat_type_code}%'
			</if>
			<if test="inv_ids != null and inv_ids != ''">
				and a.inv_id not in (${inv_ids})
			</if>
			<if test="sup_id != null and  sup_id != ''">
			     and hsd.sup_id = #{sup_id}
			</if>
			<if test="source_plan != null and  source_plan != ''">
			     and a.source_plan = #{source_plan}
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
					a.bid_code like '%${inv_code}%' 
				or a.inv_code like '%${inv_code}%' 
				or	a.inv_model like '%${inv_code}%'
				or upper(a.inv_name) like '%${inv_code}%'
				or upper(a.spell_code) like '%${inv_code}%'
				or upper(a.wbx_code) like '%${inv_code}%'
				or lower(a.spell_code) like '%${inv_code}%'
				or lower(a.wbx_code) like '%${inv_code}%'
				or lower(a.inv_name) like '%${inv_code}%')
			</if>
			<if test="inv_model != null and inv_model != ''">
				and (  a.bid_code like '%${inv_model}%'
				or a.inv_code like '%${inv_model}%'
				or a.inv_model like '%${inv_model}%'
				or upper(a.inv_name) like '%${inv_model}%'
				or upper(a.spell_code) like '%${inv_model}%'
				or upper(a.wbx_code) like '%${inv_model}%'
				or lower(a.spell_code) like '%${inv_model}%'
				or lower(a.wbx_code) like '%${inv_model}%'
				or lower(a.inv_name) like '%${inv_model}%')
			</if>
				and a.is_stop = 0
      			and a.use_state = 1
			order by a.inv_code
		</where>
	</select>
	
	<select id="queryStoreInvData" parameterType="java.util.List" resultType="java.util.Map" >
     	with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.app_amount != null or item.app_amount != ''">
						#{item.app_amount,jdbcType=INTEGER} as amount,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		)
		select mid.group_id,mid.hos_id,mid.copy_code,mid.inv_id,mid.inv_no,mid.bid_code,mid.inv_code,mid.inv_name,
			mid.inv_model,mid.unit_code,hu.unit_name,hfd.fac_name,hfd.fac_id,hfd.fac_no,hfd.fac_code,
			mid.plan_price as price,a.amount,mid.plan_price*a.amount as amount_money,mid.is_com,hd.sup_code,hd.sup_name
		from list_temp  a 
		left join mat_inv_dict  mid on a.group_id = mid.group_id  
			and a.hos_id = mid.hos_id  and a.copy_code = mid.copy_code  
			and a.inv_id = mid.inv_id   and a.inv_no = mid.inv_no  
		left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id
			and mid.unit_code = hu.unit_code and hu.is_stop = 0
		left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id
			and mid.fac_id = hfd.fac_id and mid.fac_no = hfd.fac_no
		left join mat_inv_sup bb on a.group_id=bb.group_id and a.hos_id=bb.hos_id and a.inv_id=bb.inv_id
     		and bb.is_default=1
		left join hos_sup_dict hd on bb.group_id=hd.group_id and bb.hos_id=hd.hos_id and bb.sup_id=hd.sup_id and hd.is_stop=0
		order by mid.inv_code
		
	</select>
</mapper>

