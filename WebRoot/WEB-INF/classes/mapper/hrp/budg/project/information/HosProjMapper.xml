<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.project.information.HosProjMapper">
	
	<resultMap id="hosProj" type="com.chd.hrp.budg.entity.HosProj">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_code" column="proj_code"/>
	<result property="type_code" column="type_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="proj_simple" column="proj_simple"/>
	<result property="sort_code" column="sort_code"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_stop" column="is_stop"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hosProjMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_code" column="proj_code"/>
	<result property="type_code" column="type_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="proj_simple" column="proj_simple"/>
	<result property="sort_code" column="sort_code"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	<result property="is_stop" column="is_stop"/>
	<result property="note" column="note"/>
	</resultMap>
	<resultMap id="hosProjAppMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_code" column="proj_code"/>
	<result property="type_name" column="type_name"/>
	<result property="type_code" column="type_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="proj_simple" column="proj_simple"/>
	<result property="use_code" column="use_code"/>
	<result property="use_name" column="use_name"/>
	<result property="level_name" column="level_name"/>
	<result property="level_code" column="level_code"/>
	<result property="con_emp_name" column="con_emp_name"/>
	<result property="con_emp_id" column="con_emp_id"/>
	<result property="con_phone" column="con_phone"/>
	<result property="acc_emp_name" column="acc_emp_name"/>
	<result property="acc_emp_id" column="acc_emp_id"/>
	<result property="acc_phone" column="acc_phone"/>
	<result property="dept_name" column="dept_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="app_emp_name" column="app_emp_name"/>
	<result property="app_emp_id" column="app_emp_id"/>
	<result property="app_phone" column="app_phone"/>
	<result property="app_date" column="app_date"/>
	<result property="email" column="email"/>
	<result property="note" column="note"/>
	<result property="set_up_date" column="set_up_date"/>
	<result property="complete_date" column="complete_date"/>
	<result property="pay_end_date" column="pay_end_date"/>
	<result property="sespend_date" column="sespend_date"/>
	<result property="proj_state" column="proj_state"/>
	<result property="is_stop" column="is_stop"/>
	<result property="value_code" column="value_code"/>
	<result property="value_name" column="value_name"/>
	<result property="is_carry" column="is_carry"/>
	</resultMap>
	
	<insert id="add" parameterType="java.util.Map">
	
		insert into hos_proj
			  (group_id,
			   hos_id,
			   proj_id,
			   proj_code,
			   type_code,
			   proj_name,
			   proj_simple
			   <if test="sort_code != null and sort_code != '' ">
			   ,
			   sort_code
			   </if>
			   <if test="spell_code != null and spell_code != '' ">
			   ,
			   spell_code
			   </if>
			   <if test="wbx_code != null and wbx_code != '' ">
			   ,
			   wbx_code
			   </if>
			   ,
			   is_stop
			   <if test="note != null and note != '' ">
			   ,
			   note
			   </if>
			   )VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{proj_id,jdbcType=INTEGER}
		,
		#{proj_code,jdbcType=VARCHAR}
		,
		#{type_code,jdbcType=VARCHAR}
		,
		#{proj_name,jdbcType=VARCHAR}
		,
		#{proj_simple,jdbcType=VARCHAR}
		<if test="sort_code != null and sort_code != '' ">
		,
		#{sort_code,jdbcType=INTEGER}
		</if>
		<if test="spell_code != null and spell_code != '' ">
		,
		#{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != '' ">
		,
		#{wbx_code,jdbcType=VARCHAR}
		</if>
		,
		#{is_stop,jdbcType=INTEGER}
		<if test="note != null and note != '' ">
		,
		#{note,jdbcType=VARCHAR}
		</if>
		)
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HOS_PROJ (
		group_id
		,
		hos_id
		,
		proj_id
		,
		proj_code
		,
		type_code
		,
		proj_name
		,
		proj_simple
		,
		sort_code
		,
		spell_code
		,
		wbx_code
		,
		is_stop
		,
		note
		
		) select HOS_PROJ_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.proj_code,jdbcType=VARCHAR}
			,
			#{item.type_code,jdbcType=VARCHAR}
			,
			#{item.proj_name,jdbcType=VARCHAR}
			,
			#{item.proj_simple,jdbcType=VARCHAR}
			,
			#{item.sort_code,jdbcType=INTEGER}
			,
			#{item.spell_code,jdbcType=VARCHAR}
			,
			#{item.wbx_code,jdbcType=VARCHAR}
			,
			#{item.is_stop,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE hos_proj  set
		type_code = #{type_code,jdbcType=VARCHAR}
		,
		proj_name = #{proj_name,jdbcType=VARCHAR}
		,
		proj_code = #{proj_code,jdbcType=VARCHAR}
		,
		proj_simple = #{proj_simple,jdbcType=VARCHAR}
		,
		spell_code = #{spell_code,jdbcType=VARCHAR}
		,
		wbx_code = #{wbx_code,jdbcType=VARCHAR}
		,
		is_stop = #{is_stop,jdbcType=INTEGER}
		,
		note = #{note,jdbcType=VARCHAR}
		
		where                     
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND proj_id = #{proj_id,jdbcType=INTEGER}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE hos_proj 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.proj_code != null and item.proj_code != ''">
			proj_code = #{item.proj_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.type_code != null and item.type_code != ''">
			type_code = #{item.type_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.proj_name != null and item.proj_name != ''">
			proj_name = #{item.proj_name,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.proj_simple != null and item.proj_simple != ''">
			proj_simple = #{item.proj_simple,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.sort_code != null and item.sort_code != ''">
			sort_code = #{item.sort_code,jdbcType=INTEGER}
			,
			</if>
			<if test="item.spell_code != null and item.spell_code != ''">
			spell_code = #{item.spell_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.wbx_code != null and item.wbx_code != ''">
			wbx_code = #{item.wbx_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.is_stop != null and item.is_stop != ''">
			is_stop = #{item.is_stop,jdbcType=INTEGER}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.proj_id != null and item.proj_id != ''">
			AND proj_id = #{item.proj_id,jdbcType=INTEGER}
			</if>  
			<if test="item.proj_code != null and item.proj_code != ''">
			AND proj_code = #{item.proj_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.type_code != null and item.type_code != ''">
			AND type_code = #{item.type_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.proj_name != null and item.proj_name != ''">
			AND proj_name = #{item.proj_name,jdbcType=VARCHAR}
			</if>  
			<if test="item.proj_simple != null and item.proj_simple != ''">
			AND proj_simple = #{item.proj_simple,jdbcType=VARCHAR}
			</if>  
			<if test="item.sort_code != null and item.sort_code != ''">
			AND sort_code = #{item.sort_code,jdbcType=INTEGER}
			</if>  
			<if test="item.spell_code != null and item.spell_code != ''">
			AND spell_code = #{item.spell_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.wbx_code != null and item.wbx_code != ''">
			AND wbx_code = #{item.wbx_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.is_stop != null and item.is_stop != ''">
			AND is_stop = #{item.is_stop,jdbcType=INTEGER}
			</if>  
			<if test="item.note != null and item.note != ''">
			AND note = #{item.note,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM hos_proj 
		where                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		AND proj_code = #{proj_code,jdbcType=VARCHAR}
	</delete>
	<delete id="cancelauditBudgProjSetUp" parameterType="java.util.Map">
	
		DELETE FROM hos_proj 
		where                     
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND proj_code = #{proj_code,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM hos_proj 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND proj_id = #{item.proj_id,jdbcType=VARCHAR}
			</foreach>
	 
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hosProjAppMap" >
	select  hp.proj_id,
			hp.proj_code,
			hp.proj_name,
			hpt.type_name,
			hpl.level_name,
			hed.emp_name as con_emp_name ,
			hedf.emp_name as  acc_emp_name,
			hdd.dept_name , 
			hedapp.emp_name as app_emp_name,
			apa.app_date,
			apa.set_up_date,
			apa.complete_date,
			apa.pay_end_date,
			apa.sespend_date,
			apa.proj_state,
			hp.is_stop,
            bsd.value_code,
      	    bsd.value_name,
      	    apa.is_carry
		from HOS_PROJ hp
		left join HOS_PROJ_TYPE hpt
		on hpt.group_id=hp.group_id
		and hpt.hos_id = hp.hos_id
		and hpt.type_code = hp.type_code
		and hpt.is_stop=0
		left join ACC_PROJ_ATTR apa
		on apa.group_id=hp.group_id
		and apa.hos_id = hp.hos_id
		and apa.proj_id=hp.proj_id
		left join HOS_PROJ_LEVEL hpl
		on hpl.group_id = apa.group_id
		and hpl.hos_id = apa.hos_id
		and hpl.level_code = apa.level_code
		left join HOS_EMP_DICT hed
		on hed.group_id = apa.group_id
		and hed.hos_id = apa.hos_id
		and hed.emp_id = apa.con_emp_id
		and hed.is_stop = 0
		left join HOS_EMP_DICT hedf
		on hedf.group_id = apa.group_id
		and hedf.hos_id = apa.hos_id
		and hedf.emp_id = apa.acc_emp_id
		left join hos_dept_dict hdd
		on hdd.group_id = apa.group_id
		and hdd.hos_id = apa.hos_id
		and hdd.dept_id = apa.dept_id
		and hdd.is_stop = 0
		left join hos_emp_dict hedapp
		on hedapp.group_id = apa.group_id
		and hedapp.hos_id = apa.hos_id
		and hedapp.emp_id = apa.app_emp_id
		left join budg_sys_dict bsd
	    on bsd.f_code='PROJ_STATE'
	    and bsd.value_code = apa.proj_state
		where                     
		 hp.group_id = #{group_id}
		AND hp.hos_id = #{hos_id}
		<if test="type_code != null and type_code != ''">
		AND hpt.type_code = #{type_code}
		</if>
		<if test="proj_name != null and proj_name != ''">
		AND (
				hp.proj_name like '%${proj_name}%' or
				hp.proj_code like '%${proj_name}%' or
				hp.wbx_code like '%${proj_name}%' or
				hp.spell_code like '%${proj_name}%'
			)
		</if>
		<if test="proj_state != null and proj_state != ''">
		AND apa.proj_state = #{proj_state }
		</if>
		<if test="level_code != null and level_code != ''">
		AND hpl.level_code = #{level_code}
		</if>
		<if test="con_emp_id != null and con_emp_id != ''">
		AND apa.con_emp_id = #{con_emp_id }
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND hp.is_stop = #{is_stop}
		</if>
		<if test="app_date != null and app_date != '' or end_app_date != null and end_app_date != ''">
		and apa.app_date between to_date(#{app_date},'yyyy-mm-dd') and to_date(#{end_app_date},'yyyy-mm-dd')
		</if>
		 
		order by hp.sort_code asc
	</select>
	<select id="queryByCode" resultMap="hosProjAppMap"  parameterType="java.util.Map" >
	
		select    hp.group_id,
		 		  hp.hos_id,
		 	      hp.proj_id,
			      hp.proj_code,
			      hp.proj_name,
			      hpt.type_code,
			      hpt.type_name,
			      hpl.level_name,
			      apa.level_code,
			      hp.proj_simple,
			      apa.use_code,
			      hpe.use_name,
			      apa.con_emp_id,
			      hed.emp_name as con_emp_name ,
			      apa.con_phone,
			      apa.acc_emp_id,
			      hedf.emp_name as  acc_emp_name,
			      apa.acc_phone,
			      apa.dept_id,
			      hdd.dept_name , 
			      apa.app_emp_id,
			      hedapp.emp_name as app_emp_name,
			      apa.app_date,
			      apa.app_phone,
			      apa.email,
			      hp.note,
			      apa.set_up_date,
			      apa.complete_date,
			      apa.pay_end_date,
			      apa.sespend_date,
			      apa.proj_state,
			      hp.is_stop,
            	  bsd.value_code,
            	  bsd.value_name,
            	  apa.is_carry
		    from HOS_PROJ hp
		    left join HOS_PROJ_TYPE hpt
		    on hpt.group_id=hp.group_id
		    and hpt.hos_id = hp.hos_id
		    and hpt.type_code = hp.type_code
		    and hpt.is_stop=0
		    left join ACC_PROJ_ATTR apa
		    on apa.group_id=hp.group_id
		    and apa.hos_id = hp.hos_id
		    and apa.proj_id=hp.proj_id
		    left join HOS_PROJ_LEVEL hpl
		    on hpl.group_id = apa.group_id
		    and hpl.hos_id = apa.hos_id
		    and hpl.level_code = apa.level_code
		    left join HOS_EMP_DICT hed
		    on hed.group_id = apa.group_id
		    and hed.hos_id = apa.hos_id
		    and hed.emp_id = apa.con_emp_id
		    and hed.is_stop = 0
		    left join HOS_EMP_DICT hedf
		    on hedf.group_id = apa.group_id
		    and hedf.hos_id = apa.hos_id
		    and hedf.emp_id = apa.acc_emp_id
		    left join hos_dept_dict hdd
		    on hdd.group_id = apa.group_id
		    and hdd.hos_id = apa.hos_id
		    and hdd.dept_id = apa.dept_id
		    and hdd.is_stop = 0
		    left join hos_emp_dict hedapp
		    on hedapp.group_id = apa.group_id
		    and hedapp.hos_id = apa.hos_id
		    and hedapp.emp_id = apa.app_emp_id
		    left join HOS_PROJ_USE hpe on
	        hpe.group_id = apa.group_id
	        and hpe.hos_id = apa.hos_id
	        and hpe.use_code = apa.use_code
	        left join budg_sys_dict bsd
	        on bsd.f_code='PROJ_STATE'
	        and bsd.value_code = apa.proj_state
			where                     
			 hp.group_id = #{group_id}
			AND hp.hos_id = #{hos_id}
			and hp.proj_id=#{proj_id}
	</select>
	
	
	<select id="queryByUniqueness" resultMap="hosProj"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		proj_id,
		proj_code,
		type_code,
		proj_name,
		proj_simple,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		note
		FROM HOS_PROJ 
		where                     
		  group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		and(proj_code = #{proj_code,jdbcType=VARCHAR}
		<if test="proj_id != null and proj_id != ''">
		or proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_name != null and proj_name != ''">
		or proj_name = #{proj_name,jdbcType=VARCHAR}
		</if>
		)
	</select>
	
	<select id="queryProjByCodeNotThis" resultMap="hosProj"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		proj_id,
		proj_code,
		type_code,
		proj_name,
		proj_simple,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		note
		FROM HOS_PROJ 
		where                     
		  group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND proj_id != #{proj_id,jdbcType=INTEGER}
		AND proj_code = #{proj_code,jdbcType=INTEGER}
	</select>
	
	<select id="queryExists" resultMap="hosProj"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		proj_id,
		proj_code,
		type_code,
		proj_name,
		proj_simple,
		sort_code,
		spell_code,
		wbx_code,
		is_stop,
		note
		FROM HOS_PROJ 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_code != null and proj_code != ''">
		AND proj_code = #{proj_code,jdbcType=VARCHAR}
		</if>
		<if test="type_code != null and type_code != ''">
		AND type_code = #{type_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_name != null and proj_name != ''">
		AND proj_name = #{proj_name,jdbcType=VARCHAR}
		</if>
		<if test="proj_simple != null and proj_simple != ''">
		AND proj_simple = #{proj_simple,jdbcType=VARCHAR}
		</if>
		<if test="sort_code != null and sort_code != ''">
		AND sort_code = #{sort_code,jdbcType=INTEGER}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryMaxProjId" parameterType="java.util.Map" resultMap="hosProjMap">
	 select max(proj_id) as proj_id,max(sort_code) as sort_code
	 from hos_proj a
	 where a.group_id = #{group_id}
	 and a.hos_id = #{hos_id}
	
	</select>
	 
	
</mapper>

