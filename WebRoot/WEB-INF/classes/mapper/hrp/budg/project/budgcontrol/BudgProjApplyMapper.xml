<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.project.budgcontrol.BudgProjApplyMapper">
	
	<resultMap id="budgProjApply" type="com.chd.hrp.budg.entity.BudgProjApply">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="apply_code" column="apply_code"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="apply_type" column="apply_type"/>
	<result property="remark" column="remark"/>
	<result property="file_url" column="file_url"/>
	<result property="apply_amount" column="apply_amount"/>
	<result property="maker" column="maker"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="check_date" column="check_date"/>
	<result property="state" column="state"/>
	</resultMap>
		
	<resultMap id="budgProjApplyMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="apply_code" column="apply_code"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="source_id" column="source_id"/>
	<result property="apply_type" column="apply_type"/>
	<result property="apply_type_name" column="apply_type_name"/>
	<result property="remark" column="remark"/>
	<result property="file_url" column="file_url"/>
	<result property="apply_amount" column="apply_amount"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="check_date" column="check_date"/>
	<result property="state" column="state"/>
	<result property="budg_amount" column="budg_amount"/>
	
	<result property="payment_item_id" column="payment_item_id"/>
	
	<result property="source_attr" column="source_attr"/>
	
	</resultMap>
	
	<!--  支出项目Map -->
	<resultMap id="paymentItemMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_code" column="payment_item_code"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="item_name_all" column="item_name_all"/>
	<result property="payment_item_nature" column="payment_item_nature"/>
	<result property="payment_item_nature_name" column="payment_item_nature_name"/>
	<result property="is_manage" column="is_manage"/>
	<result property="is_last" column="is_last"/>
	<result property="rate" column="rate"/>
	<result property="budg_amount" column="budg_amount"/>
	</resultMap>
	
	<!-- 项目预算分解Map -->
	<resultMap id="budgProjApplyResolveMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="apply_code" column="apply_code"/>
	<result property="proj_id" column="proj_id"/>
	<result property="source_id" column="source_id"/>
	<result property="source_code" column="source_code"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_code" column="payment_item_code"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="item_name_all" column="item_name_all"/>
	<result property="rate" column="rate"/>
	<result property="budg_amount" column="budg_amount"/>
	<result property="sum" column="sum"/>
	</resultMap>
	
	<!--  -->
	<resultMap id="budgDataMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="proj_id" column="proj_id"/>
	<result property="source_id" column="source_id"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="b_budg_amount" column="b_budg_amount"/>
	<result property="b_in_amount" column="b_in_amount"/>
	<result property="b_cost_amount" column="b_cost_amount"/>
	<result property="b_remain_amoun" column="b_remain_amoun"/>
	<result property="b_usable_amount" column="b_usable_amount"/>
	<result property="budg_amount" column="budg_amount"/>
	<result property="in_amount" column="in_amount"/>
	<result property="cost_amount" column="cost_amount"/>
	<result property="t_budg_amount" column="t_budg_amount"/>
	<result property="t_in_amount" column="t_in_amount"/>
	<result property="t_cost_amount" column="t_cost_amount"/>
	<result property="y_budg_amount" column="y_budg_amount"/>
	<result property="y_cost_amount" column="y_cost_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	<result property="usable_amount" column="usable_amount"/>
	<result property="rate" column="rate"/>
	
	<result property="y_budg_amount" column="y_budg_amount"/>
	<result property="y_cost_amount" column="y_cost_amount"/>
	<result property="remain_amoun" column="remain_amoun"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_PROJ_APPLY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			apply_code
			,
			proj_id
			,
			proj_no
			,
			apply_type
			,
			remark
			,
			file_url
			,
			apply_amount
			,
			maker
			,
			make_date
			,
			checker
			,
			check_date
			,
			state
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{apply_code,jdbcType=VARCHAR}
			,
			#{proj_id,jdbcType=INTEGER}
			,
			#{proj_no,jdbcType=INTEGER}
			,
			#{apply_type,jdbcType=VARCHAR}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{file_url,jdbcType=VARCHAR}
			,
			#{apply_amount,jdbcType=INTEGER}
			,
			#{maker,jdbcType=INTEGER}
			,
			to_date(#{make_date},'yyyy-MM-dd')
			,
			#{checker,jdbcType=INTEGER}
			,
			to_date(#{check_date},'yyyy-MM-dd') 
			,
			#{state,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_PROJ_APPLY (
		group_id
		,
		hos_id
		,
		copy_code
		,
		budg_year
		,
		apply_code
		,
		proj_id
		,
		proj_no
		,
		apply_type
		,
		remark
		,
		file_url
		,
		apply_amount
		,
		maker
		,
		make_date
		,
		checker
		,
		check_date
		,
		state
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.budg_year,jdbcType=VARCHAR}
			,
			#{item.apply_code,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.proj_no,jdbcType=INTEGER}
			,
			#{item.apply_type,jdbcType=VARCHAR}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.file_url,jdbcType=VARCHAR}
			,
			#{item.apply_amount,jdbcType=INTEGER}
			,
			#{item.maker,jdbcType=INTEGER}
			,
			to_date(#{item.make_date},'yyyy-MM-dd')
			,
			#{item.checker,jdbcType=INTEGER}
			,
			to_date(#{item.check_date},'yyyy-MM-dd')
			,
			#{item.state,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_proj_apply set
			apply_type = #{apply_type,jdbcType=VARCHAR}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			file_url = #{file_url,jdbcType=VARCHAR}
			,
			apply_amount = #{apply_amount,jdbcType=INTEGER}
			,
			state = #{state,jdbcType=VARCHAR}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="budg_year != null and budg_year != ''">
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="apply_code != null and apply_code != ''">
			AND apply_code = #{apply_code,jdbcType=VARCHAR}
			</if>
			<if test="proj_id != null and proj_id != ''">
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_apply set
				apply_type = #{item.apply_type,jdbcType=VARCHAR}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				file_url = #{item.file_url,jdbcType=VARCHAR}
				,
				apply_amount = #{item.apply_amount,jdbcType=INTEGER}
				,
				state = #{item.state,jdbcType=VARCHAR}
			<where>                     
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.apply_code != null and item.apply_code != ''">
				AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_proj_apply 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="budg_year != null and budg_year != ''">
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="apply_code != null and apply_code != ''">
			AND apply_code = #{apply_code,jdbcType=VARCHAR}
			</if>
			<if test="proj_id != null and proj_id != ''">
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_proj_apply 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>
				<if test="item.apply_code != null and item.apply_code != ''">
				AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
				</if>
				<if test="item.proj_id != null and item.proj_id != ''">
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgProjApplyMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.apply_code,
			a.proj_id,
			a.proj_no,
			hpd.proj_code ,
			hpd.proj_name ,
			a.apply_type,
			b.value_name apply_type_name ,
			a.remark,
			a.file_url,
			a.apply_amount,
			a.maker,
			c.emp_name maker_name ,
			a.make_date,
			a.checker,
			d.emp_name checker_name,
			a.check_date,
			case a.state when '01' then '新建' when '02' then '已提交' else '已审核' end state
		FROM BUDG_PROJ_APPLY a
		
		LEFT JOIN  HOS_PROJ_DICT hpd
			ON
				a.group_id = hpd.group_id
				and a.hos_id = hpd.hos_id
				and a.proj_id = hpd.proj_id
				and a.proj_no = hpd.proj_no
		LEFT JOIN ACC_PROJ_ATTR  apa
			on
				a.group_id = apa.group_id
				and a.hos_id = apa.hos_id
				and a.proj_id = apa.proj_id
		LEFT JOIN  budg_sys_dict b
			on a.apply_type = b.value_code
			and b.f_code ='APPLY_TYPE'
		LEFT JOIN  HOS_EMP_DICT c
			ON
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.maker = c.emp_id
				and c.is_stop = 0
		LEFT JOIN  HOS_EMP_DICT d
			ON
				a.group_id = d.group_id
				and a.hos_id = d.hos_id
				and a.checker = d.emp_id
				and c.is_stop = 0
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="apply_type != null and apply_type != ''">
		AND a.apply_type = #{apply_type,jdbcType=VARCHAR}
		</if>
		<if test="con_emp_id != null and con_emp_id != ''">
		AND apa.con_emp_id = #{con_emp_id,jdbcType=VARCHAR}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by a.apply_code desc
	</select>
	<select id="queryByCode" resultMap="budgProjApplyMap"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.apply_code,
			a.proj_id,
			a.proj_no,
			a.apply_type,
			a.remark,
			a.file_url,
			a.apply_amount,
			a.maker,
			b.user_name maker_name,
			a.make_date,
			a.checker,
			c.user_name checker_name,
			a.check_date,
			a.state
		FROM budg_proj_apply  a
		LEFT JOIN  sys_user b
			ON
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.user_id
				and b.is_stop = 0
		LEFT JOIN  sys_user c
			ON
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.checker = c.user_id
				and c.is_stop = 0
		
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.budg_year = #{budg_year,jdbcType=VARCHAR}   and 
		a.apply_code = #{apply_code,jdbcType=VARCHAR}   and 
		a.proj_id = #{proj_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgProjApply"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		apply_code,
		proj_id,
		proj_no,
		apply_type,
		remark,
		file_url,
		apply_amount,
		maker,
		make_date,
		checker,
		check_date,
		state
		FROM BUDG_PROJ_APPLY 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="apply_type != null and apply_type != ''">
		AND apply_type = #{apply_type,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="file_url != null and file_url != ''">
		AND file_url = #{file_url,jdbcType=VARCHAR}
		</if>
		<if test="apply_amount != null and apply_amount != ''">
		AND apply_amount = #{apply_amount,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgProjApply"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		apply_code,
		proj_id,
		proj_no,
		apply_type,
		remark,
		file_url,
		apply_amount,
		maker,
		make_date,
		checker,
		check_date,
		state
		FROM BUDG_PROJ_APPLY 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="apply_code != null and apply_code != ''">
		AND apply_code = #{apply_code,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="apply_type != null and apply_type != ''">
		AND apply_type = #{apply_type,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="file_url != null and file_url != ''">
		AND file_url = #{file_url,jdbcType=VARCHAR}
		</if>
		<if test="apply_amount != null and apply_amount != ''">
		AND apply_amount = #{apply_amount,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 查询 支出项目数据   -->
	<select id="queryBudgPaymentItem" parameterType="java.util.Map" resultMap="paymentItemMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.payment_item_id,
			a.payment_item_no,
			a.payment_item_code,
			a.payment_item_name,
			a.item_name_all,
			a.payment_item_nature ,
			b.value_name payment_item_nature_name ,
			a.is_manage ,
			a.is_last 
			<if test="apply_code != null and apply_code != ''">
				,c.rate ,
				c.budg_amount
			</if>
		FROM BUDG_PAYMENT_ITEM_DICT a
		Left  join budg_sys_dict b
			ON 	
				b.f_code  = 'PAYMENT_ITEM_NATURE'
				and a.payment_item_nature = b.value_code 
		<if test="apply_code != null and apply_code != ''">
			Left  join BUDG_PROJ_APPLY_RESOLVE c
			ON 	
				a.group_id = c.group_id
				AND a.hos_id = c.hos_id
				AND a.copy_code = c.copy_code
				AND a.payment_item_id = c.payment_item_id 
				AND a.payment_item_no = c.payment_item_no
				AND c.apply_code = #{apply_code,jdbcType=INTEGER}
				AND c.budg_year = #{budg_year,jdbcType=INTEGER}
				AND c.proj_id = #{proj_id,jdbcType=INTEGER}
				AND c.source_id = #{source_id,jdbcType=INTEGER}
		</if>
			
		where                    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.is_stop = 0
			AND a.is_last = 1
			<if test="key != null and key != ''">
				AND ( a.payment_item_code like '${key}%' or
					a.payment_item_name like '%${key}%' or
					a.item_name_all like '%${key}%' or
					a.spell_code like '%${key}%'or
					a.wbx_code like '%${key}%')
			</if>
		order by a.payment_item_id asc
	</select>
	
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(proj_id) 	FROM BUDG_PROJ_APPLY 
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND proj_id = #{proj_id,jdbcType=INTEGER}
			AND apply_type = #{apply_type,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 预算系统 启用年度 -->
	<select id="queryBudgModStartYear" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT start_year 	FROM sys_mod_start 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND mod_code = '02'
	</select>
	
	
	<select id="queryBudgYearIsCarried" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT is_carried 	FROM budg_proj_carry 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{budg_year,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 BUDG_PROJ_APPLY_RESOLVE  项目预算分解  -->
	<select id="queryBudgProjApplyResolve" parameterType="java.util.Map" resultMap="budgProjApplyResolveMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.apply_code,
			a.proj_id,
			a.source_id,
			c.source_code ,
			a.payment_item_id,
			a.payment_item_no,
			b.payment_item_code ,
			b.payment_item_name ,
			b.item_name_all ,
			a.rate,
			a.budg_amount
		FROM BUDG_PROJ_APPLY_RESOLVE a
		
		LEFT join BUDG_PAYMENT_ITEM_DICT b
			ON
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.payment_item_id = b.payment_item_id
				and a.payment_item_no = b.payment_item_no
		LEFT JOIN HOS_SOURCE c
			ON
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.source_id = c.source_id
		where                   
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="apply_code != null and apply_code != ''">
			AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
			</if>
			<if test="proj_id != null and proj_id != ''">
			AND a.proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
			<if test="source_id != null and source_id != ''">
			AND a.source_id = #{source_id,jdbcType=INTEGER}
			</if>
			<if test="payment_item_id != null and payment_item_id != ''">
			AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
			</if>
			<if test="payment_item_no != null and payment_item_no != ''">
			AND a.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
			</if>
			order by a.payment_item_id asc
	</select>
	
	<!-- 查询 BUDG_PROJ_APPLY_RESOLVE  项目预算分解  -->
	<select id="querySumApplyResolve" parameterType="java.util.Map" resultMap="budgProjApplyResolveMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.apply_code,
			a.proj_id,
			a.payment_item_id,
			a.payment_item_no,
			b.payment_item_code ,
			b.payment_item_name ,
			b.item_name_all ,
			sum(a.budg_amount) sum 
		FROM BUDG_PROJ_APPLY_RESOLVE a
		
		LEFT join BUDG_PAYMENT_ITEM_DICT b
			ON
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.payment_item_id = b.payment_item_id
				and a.payment_item_no = b.payment_item_no
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="apply_code != null and apply_code != ''">
			AND a.apply_code = #{apply_code,jdbcType=VARCHAR}
			</if>
			<if test="proj_id != null and proj_id != ''">
			AND a.proj_id = #{proj_id,jdbcType=INTEGER}
			</if>
		group by  a.group_id, a.hos_id,	a.copy_code, a.budg_year, a.apply_code,	a.proj_id, 	a.payment_item_id,
		a.payment_item_no,	b.payment_item_code , b.payment_item_name ,b.item_name_all 
		order by a.payment_item_id asc
	</select>
	
	<!-- 查询 期初项目预算记账BUDG_PROJ_BEGAIN_MARK 状态    为1记账时才可进行预算申报。 -->
	<select id="queryBegainMark" parameterType="java.util.Map" resultType="java.lang.String" >
	
		SELECT nvl(state,'0') 
		FROM BUDG_PROJ_BEGAIN_MARK
		
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 提交 撤回 修改 数据状态  -->
	<update id="updateBudgProjApplyState" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_apply set
				state = #{item.state,jdbcType=VARCHAR}
				<if test="item.state == '02' ">
				,
				maker =  #{item.maker,jdbcType=VARCHAR} 
				,
				make_date =  to_date(#{item.make_date},'yyyy-MM-dd')
				</if>
				
			where                    
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 审核、销审 修改 数据状态  -->
	<update id="auditBudgProjApply" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_apply set
				state = #{item.state,jdbcType=VARCHAR}
				,
				checker =  #{item.checker,jdbcType=INTEGER} 
				,
				check_date =  to_date(#{item.check_date},'yyyy-MM-dd')
				
			where                    
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND apply_code = #{item.apply_code,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!--  查询 项目预算数据 -->
	<select id="queryBudgProjData" parameterType="java.util.List"  resultMap="budgProjApplyMap">
		
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year ,
			a.proj_id,
			a.source_id ,
			b.source_attr ,
			a.apply_amount as budg_amount 
		FROM BUDG_PROJ_APPLY_SOURCE  a
		LEFT JOIN HOS_SOURCE  b
			ON
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.source_id = b.source_id
				and b.is_stop = 0 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 a.group_id = #{item.group_id,jdbcType=INTEGER}
				AND a.hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND a.budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND a.apply_code = #{item.apply_code,jdbcType=VARCHAR}
				AND a.proj_id = #{item.proj_id,jdbcType=INTEGER}
			</foreach>
		</where>	
	</select>
	
	
	<!--  查询 项目 预算明细数据 -->
	<select id="queryBudgProjDetailData" parameterType="java.util.List" resultMap="budgProjApplyMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year ,
			a.proj_id,
			a.source_id ,
			b.source_attr ,
			a.payment_item_id ,
			a.budg_amount  
		FROM BUDG_PROJ_APPLY_RESOLVE  a
		LEFT JOIN HOS_SOURCE  b
			ON
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.source_id = b.source_id
				and b.is_stop = 0 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 a.group_id = #{item.group_id,jdbcType=INTEGER}
				AND a.hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND a.budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND a.apply_code = #{item.apply_code,jdbcType=VARCHAR}
				AND a.proj_id = #{item.proj_id,jdbcType=INTEGER}
			</foreach>
		</where>
			
	</select>
	
	
	<!-- 根据主键 查询 年度项目预算数据 -->
	<select id="queryBudgProjYearByCode" resultMap="budgDataMap"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			proj_id,
			source_id,
			nvl(b_budg_amount,0) b_budg_amount ,
			nvl(b_in_amount,0) b_in_amount ,
			nvl(b_cost_amount,0) b_cost_amount ,
			nvl(b_remain_amoun,0) b_remain_amoun ,
			nvl(b_usable_amount,0) b_usable_amount ,
			nvl(budg_amount,0) budg_amount ,
			nvl(in_amount,0) in_amount ,
			nvl(cost_amount,0) cost_amount ,
			nvl(t_budg_amount,0) t_budg_amount ,
			nvl(t_in_amount,0) t_in_amount ,
			nvl(t_cost_amount,0) t_cost_amount ,
			nvl(usable_amount,0) usable_amount ,
			nvl(remain_amount,0) remain_amount ,
			rate
		FROM budg_proj_year 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			budg_year = #{budg_year,jdbcType=VARCHAR}   and 
			proj_id = #{proj_id,jdbcType=INTEGER}   and 
			source_id = #{source_id,jdbcType=INTEGER} 
	
	</select>
	
	<!-- 根据主键 查询 年度项目预算明细数据 -->
	<select id="queryBudgProjYearDetailByCode" resultMap="budgDataMap"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			proj_id,
			source_id,
			payment_item_id,
			nvl(b_budg_amount,0) b_budg_amount ,
			nvl(b_cost_amount,0) b_cost_amount ,
			nvl(b_remain_amoun,0) b_remain_amoun ,
			nvl(budg_amount,0) budg_amount ,
			nvl(cost_amount,0) cost_amount ,
			nvl(y_budg_amount,0) y_budg_amount ,
			nvl(y_cost_amount,0) y_cost_amount ,
			nvl(remain_amoun,0) remain_amoun ,
			rate
		FROM budg_proj_detail_year 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			budg_year = #{budg_year,jdbcType=VARCHAR}   and 
			proj_id = #{proj_id,jdbcType=INTEGER}   and 
			source_id = #{source_id,jdbcType=INTEGER}   and 
			payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	
	</select>
	  
	<!-- 添加 项目预算年度数据 -->
	<insert id="addBudgProjYearData" parameterType="java.util.List" >
		
		INSERT INTO BUDG_PROJ_YEAR (
			group_id , hos_id , copy_code , budg_year , proj_id , source_id , b_budg_amount ,
			b_in_amount , b_cost_amount , b_remain_amoun ,  b_usable_amount , budg_amount , in_amount , cost_amount ,
			t_budg_amount , t_in_amount , t_cost_amount , usable_amount , remain_amount , rate, t_rate , remain_adj
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.budg_year,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.source_id,jdbcType=INTEGER}
			,
			#{item.b_budg_amount,jdbcType=INTEGER}
			,
			#{item.b_in_amount,jdbcType=INTEGER}
			,
			#{item.b_cost_amount,jdbcType=INTEGER}
			,
			#{item.b_remain_amoun,jdbcType=INTEGER}
			,
			#{item.b_usable_amount,jdbcType=INTEGER}
			,
			#{item.budg_amount,jdbcType=INTEGER}
			,
			#{item.in_amount,jdbcType=INTEGER}
			,
			#{item.cost_amount,jdbcType=INTEGER}
			,
			#{item.t_budg_amount,jdbcType=INTEGER}
			,
			#{item.t_in_amount,jdbcType=INTEGER}
			,
			#{item.t_cost_amount,jdbcType=INTEGER}
			,
			#{item.usable_amount,jdbcType=INTEGER}
			,
			#{item.remain_amount,jdbcType=INTEGER}
			,
			#{item.rate,jdbcType=INTEGER}
			,
			#{item.t_rate,jdbcType=INTEGER}
			,
			#{item.remain_adj,jdbcType=INTEGER}
		    from dual
		</foreach>
		)t
	 </insert>
	  
	  <!-- 修改 项目预算年度数据  -->
	 <update id="updateBudgProjYearData" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_year set
				budg_amount = #{item.budg_amount,jdbcType=INTEGER}
				,
				in_amount = #{item.in_amount,jdbcType=INTEGER}
				,
				cost_amount = #{item.cost_amount,jdbcType=INTEGER}
				,
				t_budg_amount = #{item.t_budg_amount,jdbcType=INTEGER}
				,
				t_in_amount = #{item.t_in_amount,jdbcType=INTEGER}
				,
				t_cost_amount = #{item.t_cost_amount,jdbcType=INTEGER}
				,
				usable_amount = #{item.usable_amount,jdbcType=INTEGER}
				,
				remain_amount = #{item.remain_amount,jdbcType=INTEGER}
				,
				rate = #{item.rate,jdbcType=INTEGER}
				,
				t_rate = #{item.rate,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				AND source_id = #{item.source_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 添加 项目预算年度明细 数据 -->
	<insert id="addBudgProjYearDetailData" parameterType="java.util.List" >
	
		INSERT INTO BUDG_PROJ_DETAIL_YEAR (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			proj_id
			,
			source_id
			,
			payment_item_id
			,
			b_budg_amount
			,
			b_cost_amount
			,
			b_remain_amoun
			,
			budg_amount
			,
			cost_amount
			,
			y_budg_amount
			,
			y_cost_amount
			,
			remain_amoun
			,
			rate
			,
			t_rate 
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.budg_year,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.source_id,jdbcType=INTEGER}
			,
			#{item.payment_item_id,jdbcType=INTEGER}
			,
			#{item.b_budg_amount,jdbcType=INTEGER}
			,
			#{item.b_cost_amount,jdbcType=INTEGER}
			,
			#{item.b_remain_amoun,jdbcType=INTEGER}
			,
			#{item.budg_amount,jdbcType=INTEGER}
			,
			#{item.cost_amount,jdbcType=INTEGER}
			,
			#{item.y_budg_amount,jdbcType=INTEGER}
			,
			#{item.y_cost_amount,jdbcType=INTEGER}
			,
			#{item.remain_amoun,jdbcType=INTEGER}
			,
			#{item.rate,jdbcType=INTEGER}
			,
			#{item.t_rate,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	 </insert>
	  
	  <!-- 更新  项目预算年度明细 数据   -->
	<update id="updateBudgProjYearDetailData" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_proj_detail_year set
				budg_amount = #{item.budg_amount,jdbcType=INTEGER}
				,
				cost_amount = #{item.cost_amount,jdbcType=INTEGER}
				,
				y_budg_amount = #{item.y_budg_amount,jdbcType=INTEGER}
				,
				y_cost_amount = #{item.y_cost_amount,jdbcType=INTEGER}
				,
				remain_amoun = #{item.remain_amoun,jdbcType=INTEGER}
				,
				rate = #{item.rate,jdbcType=INTEGER}
				,
				t_rate = #{item.t_rate,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND proj_id = #{item.proj_id,jdbcType=INTEGER}
				AND source_id = #{item.source_id,jdbcType=INTEGER}
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	
	<!-- 查询 支出项目数据   -->
	<select id="queryPaymentItemDict" parameterType="java.util.Map" resultMap="paymentItemMap" >
	
		SELECT 
			payment_item_id,
			payment_item_no,
			payment_item_code,
			payment_item_name
			
		FROM BUDG_PAYMENT_ITEM_DICT 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
</mapper>

