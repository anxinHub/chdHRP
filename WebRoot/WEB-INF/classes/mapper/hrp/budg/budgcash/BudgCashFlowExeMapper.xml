<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgcash.BudgCashFlowExeMapper">
	
	<resultMap id="budgCashFlow" type="com.chd.hrp.budg.entity.BudgCashFlow">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="cash_item_id" column="cash_item_id"/>
	<result property="month" column="month"/>
	<result property="amount" column="amount"/>
	</resultMap>
		
	<resultMap id="budgCashFlowMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="cash_item_id" column="cash_item_id"/>
	<result property="cash_item_name" column="cash_item_name"/>
	<result property="cash_type_id" column="cash_type_id"/>
	<result property="cash_type_name" column="cash_type_name"/>
	<result property="month" column="month"/>
	<result property="amount" column="amount"/>
	<result property="cash_dire" column="cash_dire"/>
	<result property="direName" column="direName"/>
	<result property="count" column="count"/>
	
	<result property="minMonth" column="minMonth"/>
	<result property="maxMonth" column="maxMonth"/>
	
	<result property="cash_in" column="cash_in"/>
	<result property="cash_out" column="cash_out"/>
	<result property="cash_end" column="cash_end"/>
	
	<result property="start_year" column="start_year"/>
	<result property="start_month" column="start_month"/>
	 
	</resultMap>
	
	<resultMap id="hrpBudgSelect" type="java.util.Map">
	<result property="id" column="id"/>
	<result property="text" column="text"/>
	
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_CASH_FLOW_EXE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			cash_item_id
			,
			month
			,
			amount
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{cash_item_id,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{amount,jdbcType=INTEGER}
		)
	
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_CASH_FLOW_EXE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			cash_item_id
			,
			month
			,
			amount
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.cash_item_id,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.amount,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_CASH_FLOW_EXE 
		SET
			amount = #{amount,jdbcType=INTEGER}
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND cash_item_id = #{cash_item_id,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_CASH_FLOW_EXE 
			SET
				amount = #{item.amount,jdbcType=INTEGER}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND year = #{item.year,jdbcType=VARCHAR}
				
				AND cash_item_id = #{item.cash_item_id,jdbcType=VARCHAR}
				
				AND month = #{item.month,jdbcType=VARCHAR}
				
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_CASH_FLOW_EXE 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND cash_item_id = #{cash_item_id,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_CASH_FLOW_EXE 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			
				AND year = #{item.year,jdbcType=VARCHAR}
				
				AND cash_item_id = #{item.cash_item_id,jdbcType=VARCHAR}
				
				AND month = #{item.month,jdbcType=VARCHAR}
				
			</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="budgCashFlowMap" >
	
		SELECT 
			bcf.group_id,
			bcf.hos_id,
			bcf.copy_code,
			bcf.year,
			bcf.cash_item_id,
			aed.cash_item_name,
			act.cash_type_id,
			act.cash_type_name,
			bcf.month,
			bcf.amount,
			aed.cash_dire
		FROM BUDG_CASH_FLOW_EXE bcf 
		LEFT JOIN acc_cash_item aed
		    ON bcf.group_id = aed.group_id
		   	AND bcf.hos_id = aed.hos_id
		   	AND bcf.copy_code = aed.copy_code
		   	AND bcf.cash_item_id = aed.cash_item_id
  		LEFT JOIN acc_cash_type act
		   ON aed.group_id = act.group_id
		   AND aed.hos_id = act.hos_id
		   AND aed.copy_code = act.copy_code
		   AND aed.cash_type_id = act.cash_type_id
		WHERE                     
			bcf.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bcf.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bcf.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bcf.year = #{year,jdbcType=VARCHAR}
			
			<if test="cash_type_id != null and cash_type_id != ''">
				AND act.cash_type_id = #{cash_type_id,jdbcType=VARCHAR}
			</if>
			<if test="cash_item_id != null and cash_item_id != ''">
				AND bcf.cash_item_id = #{cash_item_id,jdbcType=VARCHAR}
			</if>
			<if test="cash_dire != null and cash_dire != ''">
				AND aed.cash_dire = #{cash_dire,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
				AND bcf.month = #{month,jdbcType=VARCHAR}
			</if>
			order by bcf.year, bcf.month
	</select>
	
	<select id="queryByCode" resultMap="budgCashFlow"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			cash_item_id,
			month,
			amount
		FROM BUDG_CASH_FLOW_EXE 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			cash_item_id = #{cash_item_id,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryDataExists" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT 
			count(0)
		FROM BUDG_CASH_FLOW_EXE 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND cash_item_id = #{cash_item_id,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
<!-- 	根据需求条件   查询现金流量执行数据表中数据
		对现金流量执行数据表未结账月份的数据按年度、月份、方向进行汇总得到各月份的现金流入和现金流出 -->
	<select id="queryCashFlow" resultMap="budgCashFlowMap"  parameterType="java.util.Map" >
		with temp as(select a.group_id,
		       a.hos_id,
		       a.copy_code,
		       a.year,
		       a.month,
		       d.cash_dire,
		       sum(nvl(a.amount,0)) as amount
		  from Budg_Cash_Flow_Exe a
		  left join budg_carry c
		    on a.group_id = c.group_id
		   and a.hos_id = c.hos_id
		   and a.copy_code = c.copy_code
		   and a.year = c.year
		   and a.month = c.month
		  left join acc_cash_item d
		    on a.group_id = d.group_id
		   and a.hos_id = d.hos_id
		   and a.copy_code = d.copy_code
		   and a.cash_item_id = d.cash_item_id
		  where
		  		a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
				and c.cash_flag = 0 or c.cash_flag is null
		  group by (a.group_id, a.hos_id, a.copy_code, a.year, a.month, d.cash_dire)
		  order by a.year, a.month)
		  
		   select 
		   	   e.group_id,
		       e.hos_id,
		       e.copy_code,
		       e.year,
		       e.month,
		       nvl(t1.amount,0) as cash_in,
		       nvl(t2.amount,0) as cash_out
		  from budg_cash_exe e
		  left join temp t1
		  on e.group_id = t1.group_id
		   and e.hos_id = t1.hos_id
		   and e.copy_code = t1.copy_code
		   and e.year = t1.year
		   and e.month = t1.month
		   and t1.cash_dire = 0
		 left join temp t2
		  on e.group_id = t2.group_id
		   and e.hos_id = t2.hos_id
		   and e.copy_code = t2.copy_code
		   and e.year = t2.year
		   and e.month = t2.month
		   and t2.cash_dire = 1 
		 left join budg_carry c
	       on e.group_id = c.group_id
	      and e.hos_id = c.hos_id
	      and e.copy_code = c.copy_code
	      and e.year = c.year
	      and e.month = c.month
		where  e.group_id = #{group_id,jdbcType=INTEGER}
				AND e.hos_id = #{hos_id,jdbcType=INTEGER}
				AND e.copy_code = #{copy_code,jdbcType=VARCHAR} 
				and e.year = #{year,jdbcType=VARCHAR}
				and (c.cash_flag = 0 or c.cash_flag is null)		
		order by e.group_id,
		       e.hos_id,
		       e.copy_code,
		       e.year,
		       e.month
	</select>
	
	<!-- 	查询结账表中结账数据中最大月份 -->
	<select id="queryMaxMonthFromBudgCarry" parameterType="java.util.Map" resultMap="budgCashFlowMap" >
		SELECT 
	        a.year,
	        a.month,
	        nvl(b.cash_end,0) cash_end
	      FROM budg_carry a 
	      left join budg_cash_exe b
	      on a.group_id = b.group_id
	      and a.hos_id = b.hos_id
	      and a.copy_code = b.copy_code
	      and a.year = b.year 
	      and a.month = b.month
	    WHERE 
	       a.group_id = #{group_id,jdbcType=INTEGER}
				
		   AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		
		   AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
	      
	       AND a.cash_flag = 1
	      ORDER BY a.year,a.month desc
	</select>
	
	<!-- 	根据月份 到存量表中查询该月份期末现金存量  作为下一月的期初现金存量 -->
	<select id="queryCashEnd" parameterType="java.util.Map" resultType="java.lang.Double" >
		SELECT 
  			  cash_end
 		FROM budg_cash_exe
		WHERE 
		   group_id = #{group_id,jdbcType=INTEGER}
			
		   AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		   AND copy_code = #{copy_code,jdbcType=VARCHAR}
		   
		   AND year = #{year,jdbcType=VARCHAR}
		   
		   AND month = #{month,jdbcType=VARCHAR}
	</select>
	
<!-- 	批量添加现金存量预算 -->
	<insert id="addBudgCashBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_CASH_EXE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			cash_begin
			,
			cash_in
			,
			cash_out
			,
			cash_add
			,
			cash_end
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.cash_begin,jdbcType=INTEGER}
			,
			#{item.cash_in,jdbcType=INTEGER}
			,
			#{item.cash_out,jdbcType=INTEGER}
			,
			#{item.cash_add,jdbcType=INTEGER}
			,
			#{item.cash_end,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<!-- 	查询期初货币资金表中期初现金存量-->
	<select id="queryCashBegin" parameterType="java.util.Map" resultType="java.lang.Double" >
		SELECT 
			cash_begin
  		FROM budg_cash_begin
		WHERE 
		   group_id = #{group_id,jdbcType=INTEGER}
			
		   AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		   AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 	查询月份数据是否已经结转 -->
	<select id="queryMonthFlag" resultType="string"  parameterType="java.util.Map" >
	
		SELECT 
			cash_flag
		FROM budg_carry 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
	</select>
	
<!-- 	查询系统启用月份 -->
	<select id="querySysMonth" resultType="string"  parameterType="java.util.Map" >
	
		SELECT 
		   start_month
   		FROM sys_mod_start
 		WHERE       
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND mod_code ='0206'
	</select>
	
	
	<!-- 预算年度下拉框 -->
	<select id="queryBudgYear" resultMap="hrpBudgSelect">
		SELECT
		t.acc_year id,
		t.acc_year text
		FROM (select distinct acc_year   from acc_year
				where group_id = ${group_id} and hos_id = ${hos_id} and copy_code = #{copy_code} 
				) t
		<where>
			<if test="key != null and key != ''">
				AND  t.acc_year like '${key}%' 
					
			</if>
		</where>
			order by t.acc_year desc
	</select>
	
	<!-- 预算月份下拉框 -->
	<select id="queryBudgMonth" resultMap="hrpBudgSelect">
		SELECT
		t.acc_month id,
		t.acc_month text
		FROM (select distinct acc_month   from acc_year_month
				where group_id = ${group_id} and hos_id = ${hos_id} and copy_code = #{copy_code} 
				) t
		<where>
			<if test="key != null and key != ''">
				AND  t.acc_month like '${key}%' 
					
			</if>
		</where>
			order by t.acc_month
	</select>
	
	<!-- 	查询当前年度资金计划中最大月份 -->
	<select id="queryMaxMonthFromCashFlow" parameterType="java.util.Map" resultMap="budgCashFlowMap" >
		SELECT
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			to_number(min(month)) minMonth 
			,
			to_number(max(month)) maxMonth
		FROM budg_cash_flow_exe 
		WHERE 
		   group_id = #{group_id,jdbcType=INTEGER}
			
		   AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		   AND copy_code = #{copy_code,jdbcType=VARCHAR}
		   
		   AND year = #{year,jdbcType=VARCHAR}
		   
	    GROUP BY group_id,hos_id,copy_code,year
	</select>
	
	<!-- 	初始化添加现金存量预算  计算专用 -->
	<insert id="addInitBudgCashBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_CASH_EXE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			month
			,
			cash_begin
			,
			cash_in
			,
			cash_out
			,
			cash_add
			,
			cash_end
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			0.00 cash_begin
			,
			0.00 cash_in
			,
			0.00 cash_out
			,
			0.00 cash_add
			,
			0.00 cash_end
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<!-- 	每次计算前  清空存量预算数据 -->
	<delete id="delectCash" parameterType="java.util.Map">
		DELETE FROM budg_cash_exe
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
			AND year = #{year,jdbcType=VARCHAR}
			
			AND month &gt;= #{month,jdbcType=VARCHAR}
	</delete>
	
	<!-- 	查询系统启用年度 -->
	<select id="querySysYearMonth" resultMap="budgCashFlowMap"  parameterType="java.util.Map" >
	
		SELECT 
		   start_year,
		   start_month
   		FROM sys_mod_start
 		WHERE       
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND mod_code = '0206'
	</select>
</mapper>

