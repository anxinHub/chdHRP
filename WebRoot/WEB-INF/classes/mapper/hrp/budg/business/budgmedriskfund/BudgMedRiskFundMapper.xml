<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.budgmedriskfund.BudgMedRiskFundMapper">
	<resultMap id="budgMedRiskFund" type="com.chd.hrp.budg.entity.BudgMedRiskFund">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="budg_year" column="budg_year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="income_budg" column="income_budg"/>
		<result property="cost_budg" column="cost_budg"/>
	</resultMap>
	
	<resultMap id="budgMedRiskFundMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="budg_year" column="budg_year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="income_budg" column="income_budg"/>
		<result property="cost_budg" column="cost_budg"/>
		<result property="risk_fund_rate" column="risk_fund_rate"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
		INSERT INTO BUDG_MED_RISK_FUND (
		<trim suffix="" suffixOverrides=",">
			group_id,hos_id,copy_code,budg_year,month,dept_id,
			<if test="income_budg != null and income_budg != ''">
				income_budg,
			</if>
			<if test="cost_budg != null and cost_budg != ''">
				cost_budg,
			</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{budg_year,jdbcType=VARCHAR},
			#{month,jdbcType=VARCHAR},
			#{dept_id,jdbcType=INTEGER},
			<if test="income_budg != null and income_budg != ''">
				#{income_budg,jdbcType=INTEGER},
			</if>
			<if test="cost_budg != null and cost_budg != ''">
				#{cost_budg,jdbcType=INTEGER},
			</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_RISK_FUND (
		group_id,hos_id,copy_code,budg_year,month,dept_id,
		income_budg,cost_budg
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.copy_code,jdbcType=VARCHAR},
			#{item.budg_year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.income_budg,jdbcType=INTEGER},	
			#{item.cost_budg,jdbcType=INTEGER}
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE BUDG_MED_RISK_FUND 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="income_budg != null and income_budg != ''">
			income_budg = #{income_budg,jdbcType=INTEGER},
		</if>
		<if test="cost_budg != null and cost_budg != ''">
			cost_budg = #{cost_budg,jdbcType=INTEGER},
		</if>
		</trim>
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		AND month = #{month,jdbcType=VARCHAR}
		AND dept_id = #{dept_id,jdbcType=INTEGER}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_RISK_FUND 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.income_budg != null and item.income_budg != '' or item.income_budg == 0">
				income_budg = #{item.income_budg,jdbcType=INTEGER},
			</if>
			<if test="item.cost_budg != null and item.cost_budg != '' or item.cost_budg == 0">
				cost_budg = #{item.cost_budg,jdbcType=INTEGER}
			</if>
			</trim>
			where                    
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
			AND month = #{item.month,jdbcType=VARCHAR}
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM BUDG_MED_RISK_FUND 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="income_budg != null and income_budg != ''">
		AND income_budg = #{income_budg,jdbcType=INTEGER},
		</if>
		<if test="cost_budg != null and cost_budg != ''">
		AND cost_budg = #{cost_budg,jdbcType=INTEGER},
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_MED_RISK_FUND 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.income_budg != null and item.income_budg != ''">
				AND income_budg = #{item.income_budg,jdbcType=INTEGER},
				</if>
				<if test="item.cost_budg != null and item.cost_budg != ''">
				AND cost_budg = #{item.cost_budg,jdbcType=INTEGER}
				</if>
			</foreach>

	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgMedRiskFundMap" >
		select a.*,b.dept_name,c.risk_fund_rate 
		from BUDG_MED_RISK_FUND a
		left join HOS_DEPT_DICT b
			on 
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.dept_id = b.dept_id
		left join BUDG_SYS_SET c
			on 
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.copy_code = c.copy_code
				and a.budg_year = c.budg_year
		where 
			a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.budg_year = #{budg_year}
			<if test="month != null and month != ''">
			AND a.month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			order by a.dept_id , a.month
	</select>
	
	<select id="queryByCode" resultMap="budgMedRiskFundMap"  parameterType="java.util.Map" >
		select 
	    group_id,hos_id,copy_code,budg_year,month,dept_id,
	    income_budg,cost_budg
	    from BUDG_MED_RISK_FUND
	    where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and budg_year = #{budg_year}
		and month = #{month}
		and dept_id = #{dept_id}
	</select>
	
	<select id="queryByUniqueness" resultMap="budgMedRiskFundMap"  parameterType="java.util.Map" >
	
	</select>
	
	<select id="queryExists" resultMap="budgMedRiskFund"  parameterType="java.util.Map" >
		select 
	    group_id,hos_id,copy_code,budg_year,month,dept_id,
	    income_budg,cost_budg
	    from BUDG_MED_RISK_FUND
	    where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and budg_year = #{budg_year}
		and month = #{month}
		and dept_id = #{dept_id}
	</select>
	
	<resultMap type="java.util.Map" id="itemMap">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	<select id="queryHosDeptDict" resultMap="itemMap">
		
		select distinct hdd.dept_id as id,
		                hdd.dept_code || ' ' || hdd.dept_name as text
		  from HOS_DEPT_DICT hdd
		  left join ACC_DEPT_ATTR ada
		    on ada.group_id = hdd.group_id
		   and ada.hos_id = hdd.hos_id
		 where ada.is_budg = 1
		   and hdd.is_stop = 0
		   and hdd.is_last = 1
		   and hdd.group_id = #{group_id}
		   and hdd.hos_id = #{hos_id}
		   <if test="key != null and key != ''">
			and (
				hdd.dept_code like '${key}%' or
				hdd.dept_name like '%${key}%' or
				hdd.spell_code like '%${key}%' or
				hdd.wbx_code like '%${key}%'
			)
		</if>
		 order by id
				
	</select>
	
	
	<resultMap type="java.util.Map" id="budgMedIncomeDeptMonthMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="budg_year" column="year"/>
		<result property="month" column="month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="income_budg" column="budg_value"/>
	</resultMap>
	<select id="queryBudgMedIncomeDeptMonth" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap">
		select group_id,hos_id,copy_code,year,month,dept_id,sum(nvl(budg_value,0)) budg_value from BUDG_MED_INCOME_DEPT_MONTH
		where 
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and year = #{budg_year}
		group by group_id,hos_id,copy_code,year,month,dept_id
	</select>
	
	<select id="queryRiskFundRate" parameterType="java.util.Map" resultType="double">
		select risk_fund_rate from BUDG_SYS_SET
		where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and budg_year = #{budg_year}
	</select>
	
	<insert id="copyBudgMedRiskFund" parameterType="java.util.Map">
		
	</insert>
	<!-- 校验数据是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
		select count(dept_id)
	    from BUDG_MED_RISK_FUND
	    where
			group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and budg_year = #{budg_year}
			and month = #{month}
			and dept_id = #{dept_id}
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_MED_RISK_FUND
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</select>
	
	<!-- 查询 所传 科室的 科室月份收入预算值-->
	<select id="queryWorkload" parameterType="java.util.Map" resultMap="budgMedRiskFundMap" >
	
		SELECT  sum(nvl(a.budg_value,0))  as income_budg ,
	      b.risk_fund_rate
	    FROM BUDG_MED_INCOME_DEPT_MONTH a
	    
	    left join budg_sys_set b
	         on
	              a.group_id = b.group_id 
	              and a.hos_id = b.hos_id
	              and a.copy_code = b.copy_code
	              and a.year = b.budg_year
		where  
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.year = #{year,jdbcType=VARCHAR}
			AND a.month = #{month,jdbcType=VARCHAR}
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		group by a.group_id ,a.hos_id , a.copy_code, a.year ,a.month ,a.dept_id ,risk_fund_rate
	</select>
	<!-- 查询 科室基本信息(根据编码 匹配ID用) -->
	<select id="queryDeptData" parameterType="java.util.Map" resultMap="budgMedRiskFundMap" >
	
		SELECT 
			group_id,
			hos_id,
			dept_id,
			dept_code ,
			dept_name
		FROM HOS_DEPT_DICT
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			and is_stop = 0
		order by dept_code asc
	</select>
</mapper>