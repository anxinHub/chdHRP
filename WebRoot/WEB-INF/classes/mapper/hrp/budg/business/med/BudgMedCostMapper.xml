<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.med.BudgMedCostMapper">
	
	<resultMap id="budgMedCost" type="com.chd.hrp.budg.entity.BudgMedCost">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="cost_budg" column="cost_budg"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	<result property="summary" column="summary"/>
	<result property="month_data1" column="month_data1"/>
	<result property="month_data2" column="month_data2"/>
	<result property="month_data3" column="month_data3"/>
	<result property="month_data4" column="month_data4"/>
	<result property="month_data5" column="month_data5"/>
	<result property="month_data6" column="month_data6"/>
	<result property="month_data7" column="month_data7"/>
	<result property="month_data8" column="month_data8"/>
	<result property="month_data9" column="month_data9"/>
	<result property="month_data10" column="month_data10"/>
	<result property="month_data11" column="month_data11"/>
	<result property="month_data12" column="month_data12"/>
	</resultMap>
	<resultMap id="budgMedCostSubjMap" type="java.util.Map">
		<result property="subj_code" column="subj_code"/>
	</resultMap>
	<resultMap id="budgMedCostMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="subj_level" column="subj_level"/>
	<result property="cost_budg" column="cost_budg"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	<result property="summary" column="summary"/>
	<result property="month_data1" column="month_data1"/>
	<result property="month_data2" column="month_data2"/>
	<result property="month_data3" column="month_data3"/>
	<result property="month_data4" column="month_data4"/>
	<result property="month_data5" column="month_data5"/>
	<result property="month_data6" column="month_data6"/>
	<result property="month_data7" column="month_data7"/>
	<result property="month_data8" column="month_data8"/>
	<result property="month_data9" column="month_data9"/>
	<result property="month_data10" column="month_data10"/>
	<result property="month_data11" column="month_data11"/>
	<result property="month_data12" column="month_data12"/>
	<result property="year_sum" column="year_sum"/>
	<result property="count" column="count"/>
	
	<!-- 科目是否结转标记 -->
	<result property="is_caarried" column="is_caarried"/>
	<!-- 结转下月值 -->
	<result property="next_value" column="next_value"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_COST (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			subj_code
			,
			cost_budg
			,
			last_month_carried
			,
			carried_next_month
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{subj_code,jdbcType=VARCHAR}
			,
			#{cost_budg,jdbcType=INTEGER}
			,
			#{last_month_carried,jdbcType=INTEGER}
			,
			#{carried_next_month,jdbcType=INTEGER}
		)
	
	</insert>

	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_COST (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			subj_code
			,
			cost_budg
			,
			last_month_carried
			,
			carried_next_month
			
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.budg_year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.cost_budg,jdbcType=INTEGER}
			,
			#{item.last_month_carried,jdbcType=INTEGER}
			,
			#{item.carried_next_month,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	<insert id="addBatchDy" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_COST_DY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			
			dept_id
			,
			subj_code
			,
			budg_value
			,
			state
			
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.budg_year,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			'01' 
		    from dual
		</foreach>
		)t
	</insert>

	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_med_cost 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="cost_budg != null and cost_budg != ''">
		cost_budg = #{cost_budg,jdbcType=INTEGER}
		,
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		,
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		<if test="cost_budg != null and cost_budg != ''">
		AND cost_budg = #{cost_budg,jdbcType=INTEGER}
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		AND last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		AND carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		</if>
		</where>  
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_cost 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.cost_budg != null and item.cost_budg != ''">
			cost_budg = #{item.cost_budg,jdbcType=INTEGER}
			,
			</if>
			<if test="item.last_month_carried != null and item.last_month_carried != ''">
			last_month_carried = #{item.last_month_carried,jdbcType=INTEGER}
			,
			</if>
			<if test="item.carried_next_month != null and item.carried_next_month != ''">
			carried_next_month = #{item.carried_next_month,jdbcType=INTEGER}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.budg_year != null and item.budg_year != ''">
			AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
			</if>  
			<if test="item.month != null and item.month != ''">
			AND month = #{item.month,jdbcType=VARCHAR}
			</if>  
			<if test="item.dept_id != null and item.dept_id != ''">
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			</if>  
			<if test="item.subj_code != null and item.subj_code != ''">
			AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.cost_budg != null and item.cost_budg != ''">
			AND cost_budg = #{item.cost_budg,jdbcType=INTEGER}
			</if>  
			<if test="item.last_month_carried != null and item.last_month_carried != ''">
			AND last_month_carried = #{item.last_month_carried,jdbcType=INTEGER}
			</if>  
			<if test="item.carried_next_month != null and item.carried_next_month != ''">
			AND carried_next_month = #{item.carried_next_month,jdbcType=INTEGER}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_med_cost 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		<if test="cost_budg != null and cost_budg != ''">
		AND cost_budg = #{cost_budg,jdbcType=INTEGER}
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		AND last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		AND carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_med_cost 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
			
			</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="budgMedCost" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			month,
			dept_id,
			subj_code,
			cost_budg,
			last_month_carried,
			carried_next_month
		FROM BUDG_MED_COST 
		WHERE                     
		group_id = #{group_id,jdbcType=INTEGER}
		
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		
		AND month = #{month,jdbcType=VARCHAR}
		
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</select>
	
	<select id="queryDeptMedCostMonitor" parameterType="java.util.Map" resultMap="budgMedCostMap" >
	with budgValue as (
		select 
		    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,hdd.dept_code,hdd.dept_name,
		    bmc.subj_code,asj.subj_name,asj.subj_level,'预算值' summary,2 seq,
		    sum(case when MONTH='01' then nvl(cost_budg,0) else 0 end) month_data1,
		    sum(case when MONTH='02' then nvl(cost_budg,0) else 0 end) month_data2,
		    sum(case when MONTH='03' then nvl(cost_budg,0) else 0 end) month_data3,
		    sum(case when MONTH='04' then nvl(cost_budg,0) else 0 end) month_data4,
		    sum(case when MONTH='05' then nvl(cost_budg,0) else 0 end) month_data5,
		    sum(case when MONTH='06' then nvl(cost_budg,0) else 0 end) month_data6,
		    sum(case when MONTH='07' then nvl(cost_budg,0) else 0 end) month_data7,
		    sum(case when MONTH='08' then nvl(cost_budg,0) else 0 end) month_data8,
		    sum(case when MONTH='09' then nvl(cost_budg,0) else 0 end) month_data9,
		    sum(case when MONTH='10' then nvl(cost_budg,0) else 0 end) month_data10,
		    sum(case when MONTH='11' then nvl(cost_budg,0) else 0 end) month_data11,
		    sum(case when MONTH='12' then nvl(cost_budg,0) else 0 end) month_data12 ,
		    sum(nvl(cost_budg,0)) year_sum
	    from BUDG_MED_COST bmc 
	    left join hos_dept_dict hdd 
	    	on 
	    		bmc.group_id = hdd.group_id 
	    		and bmc.hos_id = hdd.hos_id 
	    		and bmc.dept_id = hdd.dept_id
	    left join budg_cost_subj asj 
	    	on  
	    		bmc.group_id = asj.group_id 
	    		and bmc.hos_id = asj.hos_id 
	    		and bmc.copy_code = asj.copy_code 
	    		and bmc.subj_code = asj.subj_code 
	    		and bmc.budg_year = asj.budg_year
	 	where bmc.group_id = ${group_id} and bmc.hos_id = ${hos_id} and bmc.copy_code = ${copy_code} and bmc.budg_year = ${budg_year} 
	    
	    group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,bmc.subj_code,
	    		hdd.dept_code,hdd.dept_name,asj.subj_name ,asj.subj_level
	),
	executeValue as(
		select 
		    bmce.group_id,bmce.hos_id,bmce.copy_code,bmce.year budg_year,bmce.dept_id,hdd.dept_code,hdd.dept_name,
		    bmce.subj_code,asj.subj_name,asj.subj_level,'执行数据' summary,4 seq,
		    sum(case when bmce.MONTH='01' then nvl(bmce.amount,0) else 0 end) month_data1,
		    sum(case when bmce.MONTH='02' then nvl(bmce.amount,0)  else 0 end) month_data2,
		    sum(case when bmce.MONTH='03' then nvl(bmce.amount,0)  else 0 end) month_data3,
		    sum(case when bmce.MONTH='04' then nvl(bmce.amount,0)  else 0 end) month_data4,
		    sum(case when bmce.MONTH='05' then nvl(bmce.amount,0)  else 0 end) month_data5,
		    sum(case when bmce.MONTH='06' then nvl(bmce.amount,0)  else 0 end) month_data6,
		    sum(case when bmce.MONTH='07' then nvl(bmce.amount,0)  else 0 end) month_data7,
		    sum(case when bmce.MONTH='08' then nvl(bmce.amount,0)  else 0 end) month_data8,
		    sum(case when bmce.MONTH='09' then nvl(bmce.amount,0)  else 0 end) month_data9,
		    sum(case when bmce.MONTH='10' then nvl(bmce.amount,0)  else 0 end) month_data10,
		    sum(case when bmce.MONTH='11' then nvl(bmce.amount,0)  else 0 end) month_data11,
		    sum(case when bmce.MONTH='12' then nvl(bmce.amount,0)  else 0 end) month_data12 ,
		    sum(nvl(bmce.amount,0)) year_sum
	    from BUDG_MED_COST_EXECUTE bmce 
	    left join hos_dept_dict hdd 
	    	on 
	    		bmce.group_id = hdd.group_id 
	    		and bmce.hos_id = hdd.hos_id 
	    		and bmce.dept_id = hdd.dept_id
	    left join budg_cost_subj asj 
	    	on 
	    		bmce.group_id = asj.group_id 
	    		and bmce.hos_id = asj.hos_id 
	    		and bmce.copy_code = asj.copy_code 
	    		and bmce.subj_code = asj.subj_code 
	    		and bmce.year = asj.budg_year
	    where bmce.group_id = ${group_id} and bmce.hos_id = ${hos_id} and bmce.copy_code = ${copy_code} and bmce.year = ${budg_year}  
			
		group by bmce.group_id,bmce.hos_id,bmce.copy_code,bmce.year,bmce.dept_id,bmce.subj_code,hdd.dept_code,
					hdd.dept_name,asj.subj_name,asj.subj_level
	),
	baseData as (
		select * from (
			select 
			    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,hdd.dept_code,hdd.dept_name,
			    bmc.subj_code,asj.subj_name,asj.subj_level,'上月结转' summary,1 seq,
			    sum(case when MONTH='01' then nvl(last_month_carried,0) else 0 end) month_data1,
			    sum(case when MONTH='02' then nvl(last_month_carried,0) else 0 end) month_data2,
			    sum(case when MONTH='03' then nvl(last_month_carried,0) else 0 end) month_data3,
			    sum(case when MONTH='04' then nvl(last_month_carried,0) else 0 end) month_data4,
			    sum(case when MONTH='05' then nvl(last_month_carried,0) else 0 end) month_data5,
			    sum(case when MONTH='06' then nvl(last_month_carried,0) else 0 end) month_data6,
			    sum(case when MONTH='07' then nvl(last_month_carried,0) else 0 end) month_data7,
			    sum(case when MONTH='08' then nvl(last_month_carried,0) else 0 end) month_data8,
			    sum(case when MONTH='09' then nvl(last_month_carried,0) else 0 end) month_data9,
			    sum(case when MONTH='10' then nvl(last_month_carried,0) else 0 end) month_data10,
			    sum(case when MONTH='11' then nvl(last_month_carried,0) else 0 end) month_data11,
			    sum(case when MONTH='12' then nvl(last_month_carried,0) else 0 end) month_data12 ,
			    0 as year_sum
			    from BUDG_MED_COST bmc 
			    left join hos_dept_dict hdd 
			    	on 
			    		bmc.group_id = hdd.group_id 
			    		and bmc.hos_id = hdd.hos_id 
			    		and bmc.dept_id = hdd.dept_id
			    left join budg_cost_subj asj 
			    	on  
			    		bmc.group_id = asj.group_id 
			    		and bmc.hos_id = asj.hos_id 
			    		and bmc.copy_code = asj.copy_code 
			    		and bmc.subj_code = asj.subj_code 
			    		and bmc.budg_year = asj.budg_year
	    	where bmc.group_id = ${group_id} and bmc.hos_id = ${hos_id} and bmc.copy_code = ${copy_code} and bmc.budg_year = ${budg_year} 
	    	group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,bmc.subj_code,
	    			hdd.dept_code,hdd.dept_name,asj.subj_name,asj.subj_level
	    
		union  all
	
			select * from budgValue
	    
		union all
	
			select 
		    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,hdd.dept_code,hdd.dept_name,
		    bmc.subj_code,asj.subj_name,asj.subj_level,'结转下月' summary,3 seq,
		    sum(case when MONTH='01' then nvl(carried_next_month,0) else 0 end) month_data1,
		    sum(case when MONTH='02' then nvl(carried_next_month,0) else 0 end) month_data2,
		    sum(case when MONTH='03' then nvl(carried_next_month,0) else 0 end) month_data3,
		    sum(case when MONTH='04' then nvl(carried_next_month,0) else 0 end) month_data4,
		    sum(case when MONTH='05' then nvl(carried_next_month,0) else 0 end) month_data5,
		    sum(case when MONTH='06' then nvl(carried_next_month,0) else 0 end) month_data6,
		    sum(case when MONTH='07' then nvl(carried_next_month,0) else 0 end) month_data7,
		    sum(case when MONTH='08' then nvl(carried_next_month,0) else 0 end) month_data8,
		    sum(case when MONTH='09' then nvl(carried_next_month,0) else 0 end) month_data9,
		    sum(case when MONTH='10' then nvl(carried_next_month,0) else 0 end) month_data10,
		    sum(case when MONTH='11' then nvl(carried_next_month,0) else 0 end) month_data11,
		    sum(case when MONTH='12' then nvl(carried_next_month,0) else 0 end) month_data12 ,
		    sum(nvl(carried_next_month,0)) year_sum
		    from BUDG_MED_COST bmc 
		    left join hos_dept_dict hdd 
		    	on 
		    		bmc.group_id = hdd.group_id 
		    		and bmc.hos_id = hdd.hos_id 
		    		and bmc.dept_id = hdd.dept_id
		    left join budg_cost_subj asj 
		    	on  
		    		bmc.group_id = asj.group_id 
		    		and bmc.hos_id = asj.hos_id 
		    		and bmc.copy_code = asj.copy_code 
		    		and bmc.subj_code = asj.subj_code 
		    		and bmc.budg_year = asj.budg_year
		    where bmc.group_id = ${group_id} and bmc.hos_id = ${hos_id} and bmc.copy_code = ${copy_code} and bmc.budg_year = ${budg_year} 
		    
		    group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,bmc.subj_code,
		    		hdd.dept_code,hdd.dept_name,asj.subj_name  ,asj.subj_level  
		    
	   union all
				select * from executeValue
	   union all
	
		select 
		    a.group_id,a.hos_id,a.copy_code,a.budg_year,a.dept_id,a.dept_code,a.dept_name,a.subj_code,a.subj_name,
		    a.subj_level,'进度' summary,5 seq,
		    case b.month_data1 when 0 then 0 else a.month_data1/b.month_data1*100 end month_data1 ,
		    case b.month_data2 when 0 then 0 else a.month_data2/b.month_data2*100 end month_data2 ,
		    case b.month_data3 when 0 then 0 else a.month_data3/b.month_data3*100 end month_data3 ,
		    case b.month_data4 when 0 then 0 else a.month_data4/b.month_data4*100 end month_data4 ,
		    case b.month_data5 when 0 then 0 else a.month_data5/b.month_data5*100 end month_data5 ,
		    case b.month_data6 when 0 then 0 else a.month_data6/b.month_data6*100 end month_data6 ,
		    case b.month_data7 when 0 then 0 else a.month_data7/b.month_data7*100 end month_data7 ,
		    case b.month_data8 when 0 then 0 else a.month_data8/b.month_data8*100 end month_data8 ,
		    case b.month_data9 when 0 then 0 else a.month_data9/b.month_data9*100 end month_data9 ,
		    case b.month_data10 when 0 then 0 else a.month_data10/b.month_data10*100 end month_data10 ,
		    case b.month_data11 when 0 then 0 else a.month_data11/b.month_data11*100 end month_data11 ,
		    case b.month_data12 when 0 then 0 else a.month_data12/b.month_data12*100 end month_data12 ,
		    case b.year_sum when 0 then 0 else a.year_sum/b.year_sum*100 end year_sum
		    from executeValue a
		    left join budgValue b
		    	on
		     	a.group_id = b.group_id 
		     	and a.hos_id = a.hos_id 
		     	and a.copy_code = a.copy_code
		    	and a.dept_id = b.dept_id 
		    	and a.budg_year = b.budg_year 
		    	and a.subj_code = b.subj_code
		   ) t  
	   	 where                     
			t.group_id = #{group_id,jdbcType=INTEGER}
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND t.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND t.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND t.subj_level = #{subj_level,jdbcType=INTEGER}
			</if>
	   	 order by t.budg_year,t.subj_code,t.dept_code,t.seq
	),
	
	
	sumBudg as ( <!-- 预算值 合计 -->
		<if test="budg_flag != -1 ">
		select null group_id ,null hos_id ,null copy_code , null budg_year , null dept_id , null dept_code,
			null dept_name,	null subj_code , null subj_name , -1 subj_level ,'预算值合计' summary ,  null seq ,
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 , nvl(sum(month_data3),0) month_data3 , 
			nvl(sum(month_data4),0) month_data4 , nvl(sum(month_data5),0) month_data5 , nvl(sum(month_data6),0) month_data6 , 
			nvl(sum(month_data7),0) month_data7 , nvl(sum(month_data8),0) month_data8 , nvl(sum(month_data9),0) month_data9 , 
			nvl(sum(month_data10),0) month_data10 , nvl(sum(month_data11),0) month_data11 , nvl(sum(month_data12),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum  
		from budgValue
		group by group_id,hos_id,copy_code,budg_year
		</if>
		<if test="budg_flag == -1 ">
		select null group_id ,null hos_id ,null copy_code , null budg_year , null dept_id , null dept_code,
			null dept_name,	null subj_code , null subj_name , -1 subj_level , '预算值合计' summary ,  null seq ,
			0 month_data1 , 0 month_data2 ,0 month_data3 , 0 month_data4 , 0 month_data5 ,0 month_data6 ,0 month_data7 , 0 month_data8 ,0 month_data9 , 
			0 month_data10, 0 month_data11 ,0 month_data12 , 0 year_sum 
		from dual
		</if>
   ),
   sumExecute as ( <!-- 执行数据 合计 -->
   		<if test="flag != -1 ">
		select null group_id ,null hos_id ,null copy_code , null budg_year , null dept_id , null dept_code,
			null dept_name,	null subj_code , null subj_name , -1 subj_level , '执行数据合计' summary ,  null seq ,
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 , nvl(sum(month_data3),0) month_data3 , 
			nvl(sum(month_data4),0) month_data4 , nvl(sum(month_data5),0) month_data5 , nvl(sum(month_data6),0) month_data6 , 
			nvl(sum(month_data7),0) month_data7 , nvl(sum(month_data8),0) month_data8 , nvl(sum(month_data9),0) month_data9 , 
			nvl(sum(month_data10),0) month_data10 , nvl(sum(month_data11),0) month_data11 , nvl(sum(month_data12),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum 
		from executeValue
		group by group_id,hos_id,copy_code,budg_year
		</if>
		<if test="flag == -1 ">
		select null group_id ,null hos_id ,null copy_code , null budg_year , null dept_id , null dept_code,
			null dept_name,	null subj_code , null subj_name , -1 subj_level , '执行数据合计' summary ,  null seq ,
			0 month_data1 , 0 month_data2 ,0 month_data3 , 0 month_data4 , 0 month_data5 ,0 month_data6 ,0 month_data7 , 0 month_data8 ,0 month_data9 , 
			0 month_data10, 0 month_data11 ,0 month_data12 , 0 year_sum 
		from dual
		</if>
   )
   		<!-- 预算值 合计行 -->
   		select * from sumBudg
	union all
		<!-- 执行数据 合计行 -->
		select * from sumExecute
	union all
		<!-- 总进度 -->
		select a.group_id , a.hos_id , a.copy_code , a.budg_year , a.dept_id , a.dept_code ,a.dept_name , a.subj_code , a.subj_name ,
			 a.subj_level , '总进度' summary ,  null seq ,
			case a.month_data1 when 0 then 0 else nvl(b.month_data1,0)/a.month_data1*100 end month_data1 ,
		    case a.month_data2 when 0 then 0 else nvl(b.month_data2,0)/a.month_data2*100 end month_data2 ,
		    case a.month_data3 when 0 then 0 else nvl(b.month_data3,0)/a.month_data3*100 end month_data3 ,
		    case a.month_data4 when 0 then 0 else nvl(b.month_data4,0)/a.month_data4*100 end month_data4 ,
		    case a.month_data5 when 0 then 0 else nvl(b.month_data5,0)/a.month_data5*100 end month_data5 ,
		    case a.month_data6 when 0 then 0 else nvl(b.month_data6,0)/a.month_data6*100 end month_data6 ,
		    case a.month_data7 when 0 then 0 else nvl(b.month_data7,0)/a.month_data7*100 end month_data7 ,
		    case a.month_data8 when 0 then 0 else nvl(b.month_data8,0)/a.month_data8*100 end month_data8 ,
		    case a.month_data9 when 0 then 0 else nvl(b.month_data9,0)/a.month_data9*100 end month_data9 ,
		    case a.month_data10 when 0 then 0 else nvl(b.month_data10,0)/a.month_data10*100 end month_data10 ,
		    case a.month_data11 when 0 then 0 else nvl(b.month_data11,0)/a.month_data11*100 end month_data11 ,
		    case a.month_data12 when 0 then 0 else nvl(b.month_data12,0)/a.month_data12*100 end month_data12 ,
		    case a.year_sum when 0 then 0 else nvl(b.year_sum,0)/a.year_sum*100 end year_sum 
		from sumBudg   a
		left join sumExecute b
			on
	    		a.subj_level = b.subj_level 
		
	union all	
		<!-- 展示表格内数据 -->
		select * from baseData
	
	</select>
	
	<!-- 医院 医疗支出预算查询 -->
	<select id="queryAllMedCostMonitor" parameterType="java.util.Map" resultMap="budgMedCostMap" >
	
	with budgValue as(
		select 
		    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level,
		    '预算值' summary,2 seq,
		    sum(case when MONTH='01' then nvl(cost_budg,0) else 0 end) month_data1,
		    sum(case when MONTH='02' then nvl(cost_budg,0) else 0 end) month_data2,
		    sum(case when MONTH='03' then nvl(cost_budg,0) else 0 end) month_data3,
		    sum(case when MONTH='04' then nvl(cost_budg,0) else 0 end) month_data4,
		    sum(case when MONTH='05' then nvl(cost_budg,0) else 0 end) month_data5,
		    sum(case when MONTH='06' then nvl(cost_budg,0) else 0 end) month_data6,
		    sum(case when MONTH='07' then nvl(cost_budg,0) else 0 end) month_data7,
		    sum(case when MONTH='08' then nvl(cost_budg,0) else 0 end) month_data8,
		    sum(case when MONTH='09' then nvl(cost_budg,0) else 0 end) month_data9,
		    sum(case when MONTH='10' then nvl(cost_budg,0) else 0 end) month_data10,
		    sum(case when MONTH='11' then nvl(cost_budg,0) else 0 end) month_data11,
		    sum(case when MONTH='12' then nvl(cost_budg,0) else 0 end) month_data12 ,
		    sum(nvl(cost_budg,0)) year_sum
		    from BUDG_MED_COST bmc 
		    left join budg_cost_subj asj 
		    	on  
		    		bmc.group_id = asj.group_id 
		    		and bmc.hos_id = asj.hos_id 
		    		and bmc.copy_code = asj.copy_code 
		    		and bmc.subj_code = asj.subj_code 
		    		and bmc.budg_year = asj.budg_year
		    where bmc.group_id = ${group_id} AND bmc.hos_id = ${hos_id} AND bmc.copy_code = ${copy_code} AND bmc.budg_year = ${budg_year}
		    
		    group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level
	),
	executeValue as(
		select 
		    bmce.group_id,bmce.hos_id,bmce.copy_code,bmce.year budg_year,bmce.subj_code,asj.subj_name,asj.subj_level,
		    '执行数据' summary,4 seq,
		    sum(case when bmce.MONTH='01' then nvl(amount,0) else 0 end) month_data1,
		    sum(case when bmce.MONTH='02' then nvl(amount,0) else 0 end) month_data2,
		    sum(case when bmce.MONTH='03' then nvl(amount,0) else 0 end) month_data3,
		    sum(case when bmce.MONTH='04' then nvl(amount,0) else 0 end) month_data4,
		    sum(case when bmce.MONTH='05' then nvl(amount,0) else 0 end) month_data5,
		    sum(case when bmce.MONTH='06' then nvl(amount,0) else 0 end) month_data6,
		    sum(case when bmce.MONTH='07' then nvl(amount,0) else 0 end) month_data7,
		    sum(case when bmce.MONTH='08' then nvl(amount,0) else 0 end) month_data8,
		    sum(case when bmce.MONTH='09' then nvl(amount,0) else 0 end) month_data9,
		    sum(case when bmce.MONTH='10' then nvl(amount,0) else 0 end) month_data10,
		    sum(case when bmce.MONTH='11' then nvl(amount,0) else 0 end) month_data11,
		    sum(case when bmce.MONTH='12' then nvl(amount,0) else 0 end) month_data12 ,
		    sum(nvl(amount,0)) year_sum
	    from BUDG_MED_COST_EXECUTE bmce 
	    left join budg_cost_subj asj 
	    	on 
	    		bmce.group_id = asj.group_id 
	    		and bmce.hos_id = asj.hos_id 
	    		and bmce.copy_code = asj.copy_code 
	    		and bmce.subj_code = asj.subj_code 
	    		and bmce.year = asj.budg_year
	    		
	    where  bmce.group_id = ${group_id} and bmce.hos_id = ${hos_id} and bmce.copy_code = ${copy_code} 
	    		and bmce.year = ${budg_year}
		group by bmce.group_id,bmce.hos_id,bmce.copy_code,bmce.year,bmce.subj_code,asj.subj_name,asj.subj_level
	),
	baseData as (
		select * from(
			select 
			    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level,
			    '上月结转' summary,1 seq,
			    sum(case when MONTH='01' then nvl(last_month_carried,0) else 0 end) month_data1,
			    sum(case when MONTH='02' then nvl(last_month_carried,0) else 0 end) month_data2,
			    sum(case when MONTH='03' then nvl(last_month_carried,0) else 0 end) month_data3,
			    sum(case when MONTH='04' then nvl(last_month_carried,0) else 0 end) month_data4,
			    sum(case when MONTH='05' then nvl(last_month_carried,0) else 0 end) month_data5,
			    sum(case when MONTH='06' then nvl(last_month_carried,0) else 0 end) month_data6,
			    sum(case when MONTH='07' then nvl(last_month_carried,0) else 0 end) month_data7,
			    sum(case when MONTH='08' then nvl(last_month_carried,0) else 0 end) month_data8,
			    sum(case when MONTH='09' then nvl(last_month_carried,0) else 0 end) month_data9,
			    sum(case when MONTH='10' then nvl(last_month_carried,0) else 0 end) month_data10,
			    sum(case when MONTH='11' then nvl(last_month_carried,0) else 0 end) month_data11,
			    sum(case when MONTH='12' then nvl(last_month_carried,0) else 0 end) month_data12 ,
			    0 as year_sum
		    from BUDG_MED_COST bmc 
		    left join budg_cost_subj asj 
		    	on  
		    		bmc.group_id = asj.group_id 
		    		and bmc.hos_id = asj.hos_id 
		    		and bmc.copy_code = asj.copy_code 
		    		and bmc.subj_code = asj.subj_code 
		    		and bmc.budg_year = asj.budg_year
		    where bmc.group_id = ${group_id} AND bmc.hos_id = ${hos_id} AND bmc.copy_code = ${copy_code} AND bmc.budg_year = ${budg_year}
		    group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level
		    
			union  all
		    	select * from budgValue
			union all
		
			select 
			    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level,'结转下月' summary,3 seq,
			    sum(case when MONTH='01' then CARRIED_NEXT_MONTH else 0 end) month_data1,
			    sum(case when MONTH='02' then CARRIED_NEXT_MONTH else 0 end) month_data2,
			    sum(case when MONTH='03' then CARRIED_NEXT_MONTH else 0 end) month_data3,
			    sum(case when MONTH='04' then CARRIED_NEXT_MONTH else 0 end) month_data4,
			    sum(case when MONTH='05' then CARRIED_NEXT_MONTH else 0 end) month_data5,
			    sum(case when MONTH='06' then CARRIED_NEXT_MONTH else 0 end) month_data6,
			    sum(case when MONTH='07' then CARRIED_NEXT_MONTH else 0 end) month_data7,
			    sum(case when MONTH='08' then CARRIED_NEXT_MONTH else 0 end) month_data8,
			    sum(case when MONTH='09' then CARRIED_NEXT_MONTH else 0 end) month_data9,
			    sum(case when MONTH='10' then CARRIED_NEXT_MONTH else 0 end) month_data10,
			    sum(case when MONTH='11' then CARRIED_NEXT_MONTH else 0 end) month_data11,
			    sum(case when MONTH='12' then CARRIED_NEXT_MONTH else 0 end) month_data12 ,
			    0 as year_sum
			    from BUDG_MED_COST bmc 
		    left join budg_cost_subj asj 
		    	on  
		    		bmc.group_id = asj.group_id 
		    		and bmc.hos_id = asj.hos_id 
		    		and bmc.copy_code = asj.copy_code 
		    		and bmc.subj_code = asj.subj_code 
		    		and bmc.budg_year = asj.budg_year
		    where bmc.group_id = ${group_id} AND bmc.hos_id = ${hos_id} AND bmc.copy_code = ${copy_code} AND bmc.budg_year = ${budg_year}
		    group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name ,asj.subj_level   
		    
		   union all
				select * from executeValue
		   union all
		
			select 
		    a.group_id,a.hos_id,a.copy_code,a.budg_year,a.subj_code,a.subj_name,a.subj_level,'进度' summary,5 seq,
		    case b.month_data1 when 0 then 0 else a.month_data1/b.month_data1 *100 end month_data1,
		    case b.month_data2 when 0 then 0 else a.month_data2/b.month_data2 *100 end month_data2,
		    case b.month_data3 when 0 then 0 else a.month_data3/b.month_data3 *100 end month_data3,
		    case b.month_data4 when 0 then 0 else a.month_data4/b.month_data4 *100 end month_data4,
		    case b.month_data5 when 0 then 0 else a.month_data5/b.month_data5 *100 end month_data5,
		    case b.month_data6 when 0 then 0 else a.month_data6/b.month_data6 *100 end month_data6,
		    case b.month_data7 when 0 then 0 else a.month_data7/b.month_data7 *100 end month_data7,
		    case b.month_data8 when 0 then 0 else a.month_data8/b.month_data8 *100 end month_data8,
		    case b.month_data9 when 0 then 0 else a.month_data9/b.month_data9 *100 end month_data9,
		    case b.month_data10 when 0 then 0 else a.month_data10/b.month_data10 *100 end month_data10,
		    case b.month_data11 when 0 then 0 else a.month_data11/b.month_data11 *100 end month_data11,
		    case b.month_data12 when 0 then 0 else a.month_data12/b.month_data12 *100 end month_data12,
		    case b.year_sum when 0 then 0 else a.year_sum/b.year_sum *100 end year_sum
		    from executeValue a
		    left join budgValue b
		    	on
		    		a.group_id = b.group_id 
		    		and a.hos_id = b.hos_id 
		    		and a.copy_code = b.copy_code
		    		and a.budg_year = b.budg_year 
		    		and a.subj_code = b.subj_code
	     ) t
	   	 where                    
			t.group_id = #{group_id,jdbcType=INTEGER}
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND t.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
	   	order by t.budg_year,t.subj_code,t.seq
	),
   	sumBudg as ( <!-- 预算值 合计 -->
   	<if test="budg_flag != -1 ">
		select null group_id ,null hos_id ,null copy_code , null budg_year , null subj_code , null subj_name , 
			null subj_level ,'预算值合计' summary ,  -1 seq ,
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 , nvl(sum(month_data3),0) month_data3 , 
			nvl(sum(month_data4),0) month_data4 , nvl(sum(month_data5),0) month_data5 , nvl(sum(month_data6),0) month_data6 , 
			nvl(sum(month_data7),0) month_data7 , nvl(sum(month_data8),0) month_data8 , nvl(sum(month_data9),0) month_data9 , 
			nvl(sum(month_data10),0) month_data10 , nvl(sum(month_data11),0) month_data11 , nvl(sum(month_data12),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum  
		from budgValue
		group by group_id,hos_id,copy_code,budg_year
		</if>
		<if test="budg_flag == -1 ">
		select null group_id ,null hos_id ,null copy_code ,  null budg_year , null subj_code ,null subj_name , 
			null subj_level , '预算值合计' summary , -1 seq ,
			0 month_data1 , 0 month_data2 ,0 month_data3 , 0 month_data4 , 0 month_data5 ,0 month_data6 ,0 month_data7 , 0 month_data8 ,0 month_data9 , 
			0 month_data10, 0 month_data11 ,0 month_data12 , 0 year_sum 
		from dual
		</if>
   ),
   sumExecute as ( <!-- 执行数据 合计 -->
  		<if test="flag != -1 ">
		select null group_id ,null hos_id ,null copy_code ,null budg_year , null subj_code ,null subj_name , 
			null subj_level , '执行数据合计' summary ,  -1 seq ,
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 , nvl(sum(month_data3),0) month_data3 , 
			nvl(sum(month_data4),0) month_data4 , nvl(sum(month_data5),0) month_data5 , nvl(sum(month_data6),0) month_data6 , 
			nvl(sum(month_data7),0) month_data7 , nvl(sum(month_data8),0) month_data8 , nvl(sum(month_data9),0) month_data9 , 
			nvl(sum(month_data10),0) month_data10 , nvl(sum(month_data11),0) month_data11 , nvl(sum(month_data12),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum 
		from executeValue
		group by group_id,hos_id,copy_code,budg_year
		</if>
		<if test="flag == -1 ">
		select null group_id ,null hos_id ,null copy_code ,  null budg_year , null subj_code ,null subj_name , 
			null subj_level , '执行数据合计' summary , -1 seq ,
			0 month_data1 , 0 month_data2 ,0 month_data3 , 0 month_data4 , 0 month_data5 ,0 month_data6 ,0 month_data7 , 0 month_data8 ,0 month_data9 , 
			0 month_data10, 0 month_data11 ,0 month_data12 , 0 year_sum 
		from dual
		</if>
   )
   		<!-- 预算值 合计行 -->
   		select * from sumBudg
	union all
		<!-- 执行数据 合计行 -->
		select * from sumExecute
	union all
		<!-- 总进度 -->
		select a.group_id , a.hos_id , a.copy_code , a.budg_year , a.subj_code , a.subj_name ,
			 a.subj_level , '总进度' summary ,  null seq ,
			case a.month_data1 when 0 then 0 else nvl(b.month_data1,0)/a.month_data1*100 end month_data1 ,
		    case a.month_data2 when 0 then 0 else nvl(b.month_data2,0)/a.month_data2*100 end month_data2 ,
		    case a.month_data3 when 0 then 0 else nvl(b.month_data3,0)/a.month_data3*100 end month_data3 ,
		    case a.month_data4 when 0 then 0 else nvl(b.month_data4,0)/a.month_data4*100 end month_data4 ,
		    case a.month_data5 when 0 then 0 else nvl(b.month_data5,0)/a.month_data5*100 end month_data5 ,
		    case a.month_data6 when 0 then 0 else nvl(b.month_data6,0)/a.month_data6*100 end month_data6 ,
		    case a.month_data7 when 0 then 0 else nvl(b.month_data7,0)/a.month_data7*100 end month_data7 ,
		    case a.month_data8 when 0 then 0 else nvl(b.month_data8,0)/a.month_data8*100 end month_data8 ,
		    case a.month_data9 when 0 then 0 else nvl(b.month_data9,0)/a.month_data9*100 end month_data9 ,
		    case a.month_data10 when 0 then 0 else nvl(b.month_data10,0)/a.month_data10*100 end month_data10 ,
		    case a.month_data11 when 0 then 0 else nvl(b.month_data11,0)/a.month_data11*100 end month_data11 ,
		    case a.month_data12 when 0 then 0 else nvl(b.month_data12,0)/a.month_data12*100 end month_data12 ,
		    case a.year_sum when 0 then 0 else nvl(b.year_sum,0)/a.year_sum*100 end year_sum 
		from sumBudg   a
		left join sumExecute b
			on
	    		a.seq = b.seq 
		
	union all	
		<!-- 展示表格内数据 -->
		select * from baseData
 
	</select>

	<select id="queryMedAllCostReport" parameterType="java.util.Map" resultMap="budgMedCostMap" >
		WITH else_cost AS (
			select bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year,
	      	  bec.subj_code, asj_e.subj_name, asj_e.subj_level
	          , '上月结转' as summary, 1 as seq, 
	          sum(case when MONTH = '01' then nvl(last_month_carried, 0) else 0 end) as month_data1, 
	          sum(case when MONTH = '02' then nvl(last_month_carried, 0) else 0 end) as month_data2, 
	          sum(case when MONTH = '03' then nvl(last_month_carried, 0) else 0 end) as month_data3, 
	          sum(case when MONTH = '04' then nvl(last_month_carried, 0) else 0 end) as month_data4, 
	          sum(case when MONTH = '05' then nvl(last_month_carried, 0) else 0 end) as month_data5, 
	          sum(case when MONTH = '06' then nvl(last_month_carried, 0) else 0 end) as month_data6, 
	          sum(case when MONTH = '07' then nvl(last_month_carried, 0) else 0 end) as month_data7, 
	          sum(case when MONTH = '08' then nvl(last_month_carried, 0) else 0 end) as month_data8, 
	          sum(case when MONTH = '09' then nvl(last_month_carried, 0) else 0 end) as month_data9, 
	          sum(case when MONTH = '10' then nvl(last_month_carried, 0) else 0 end) as month_data10, 
	          sum(case when MONTH = '11' then nvl(last_month_carried, 0) else 0 end) as month_data11, 
	          sum(case when MONTH = '12' then nvl(last_month_carried, 0) else 0 end) as month_data12, 
	          sum(nvl(last_month_carried, 0)) as year_sum
	        from BUDG_ELSE_COST bec
	        left join budg_cost_subj asj_e 
		        on 
		        bec.group_id = asj_e.group_id
		        and bec.hos_id = asj_e.hos_id
		        and bec.copy_code = asj_e.copy_code
		        and bec.budg_year = asj_e.budg_year
		        and bec.subj_code = asj_e.subj_code
	        where 
	        	bec.group_id = #{group_id,jdbcType=INTEGER}
		        and bec.hos_id = #{hos_id,jdbcType=INTEGER}
		        and bec.copy_code = #{copy_code,jdbcType=VARCHAR}
		        and bec.budg_year = #{budg_year,jdbcType=VARCHAR}
	        group by bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year, bec.subj_code, asj_e.subj_name, asj_e.subj_level
	       
	   union all
	        
	        select bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year,bec.subj_code, asj_e.subj_name, asj_e.subj_level
	          , '预算值' as summary, 2 as seq, 
	          sum(case when MONTH = '01' then nvl(BUDG_VALUE, 0) else 0 end) as month_data1 , 
	          sum(case when MONTH = '02' then nvl(BUDG_VALUE, 0) else 0 end) as month_data2, 
	          sum(case when MONTH = '03' then nvl(BUDG_VALUE, 0) else 0 end) as month_data3, 
	          sum(case when MONTH = '04' then nvl(BUDG_VALUE, 0) else 0 end) as month_data4, 
	          sum(case when MONTH = '05' then nvl(BUDG_VALUE, 0) else 0 end) as month_data5, 
	          sum(case when MONTH = '06' then nvl(BUDG_VALUE, 0) else 0 end) as month_data6, 
	          sum(case when MONTH = '07' then nvl(BUDG_VALUE, 0) else 0 end) as month_data7, 
	          sum(case when MONTH = '08' then nvl(BUDG_VALUE, 0) else 0 end) as month_data8, 
	          sum(case when MONTH = '09' then nvl(BUDG_VALUE, 0) else 0 end) as month_data9, 
	          sum(case when MONTH = '10' then nvl(BUDG_VALUE, 0) else 0 end) as month_data10, 
	          sum(case when MONTH = '11' then nvl(BUDG_VALUE, 0) else 0 end) as month_data11, 
	          sum(case when MONTH = '12' then nvl(BUDG_VALUE, 0) else 0 end) as month_data12, 
	          sum(nvl(BUDG_VALUE, 0)) as year_sum
	        from BUDG_ELSE_COST bec
	        left join budg_cost_subj asj_e 
	        	on 
		        	bec.group_id = asj_e.group_id
			        and bec.hos_id = asj_e.hos_id
			        and bec.copy_code = asj_e.copy_code
			        and bec.subj_code = asj_e.subj_code
			        and bec.budg_year = asj_e.budg_year 
	        where 
	        	bec.group_id = #{group_id,jdbcType=INTEGER}
		        and bec.hos_id = #{hos_id,jdbcType=INTEGER}
		        and bec.copy_code = #{copy_code,jdbcType=VARCHAR}
		        and bec.budg_year = #{budg_year,jdbcType=VARCHAR}
	        group by bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year, bec.subj_code, asj_e.subj_name, asj_e.subj_level
	        
	        union all
	        
	        select bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year,bec.subj_code, asj_e.subj_name, 
	       		asj_e.subj_level, '结转下月' as summary, 3 as seq, 
	       		sum(case when MONTH = '01' then nvl(carried_next_month, 0) else 0 end) as month_data1, 
	       		sum(case when MONTH = '02' then nvl(carried_next_month, 0) else 0 end) as month_data2, 
	       		sum(case when MONTH = '03' then nvl(carried_next_month, 0) else 0 end) as month_data3, 
	       		sum(case when MONTH = '04' then nvl(carried_next_month, 0) else 0 end) as month_data4, 
	       		sum(case when MONTH = '05' then nvl(carried_next_month, 0) else 0 end) as month_data5, 
	       		sum(case when MONTH = '06' then nvl(carried_next_month, 0) else 0 end) as month_data6, 
	       		sum(case when MONTH = '07' then nvl(carried_next_month, 0) else 0 end) as month_data7, 
	       		sum(case when MONTH = '08' then nvl(carried_next_month, 0) else 0 end) as month_data8, 
	       		sum(case when MONTH = '09' then nvl(carried_next_month, 0) else 0 end) as month_data9, 
	       		sum(case when MONTH = '10' then nvl(carried_next_month, 0) else 0 end) as month_data10, 
	       		sum(case when MONTH = '11' then nvl(carried_next_month, 0) else 0 end) as month_data11, 
	       		sum(case when MONTH = '12' then nvl(carried_next_month, 0) else 0 end) as month_data12, 
	       		sum(nvl(carried_next_month, 0)) as year_sum
	        from BUDG_ELSE_COST bec
	        left join budg_cost_subj asj_e 
	        	on 
	        		bec.group_id = asj_e.group_id
			        and bec.hos_id = asj_e.hos_id
			        and bec.copy_code = asj_e.copy_code
			        and bec.subj_code = asj_e.subj_code
			        and bec.budg_year = asj_e.budg_year 
	        where bec.group_id = #{group_id,jdbcType=INTEGER}
	          and bec.hos_id = #{hos_id,jdbcType=INTEGER}
	          and bec.copy_code = #{copy_code,jdbcType=VARCHAR}
	          and bec.budg_year = #{budg_year,jdbcType=VARCHAR}
	        group by bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year, bec.subj_code, asj_e.subj_name, asj_e.subj_level
	),
	
	budgCost as (
		select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year,bmc.subj_code, asj.subj_name, 
			asj.subj_level, '上月结转' as summary, 1 as seq, 
			sum(case when MONTH = '01' then nvl(last_month_carried, 0) else 0 end) as month_data1,
	        sum(case when MONTH = '02' then nvl(last_month_carried, 0) else 0 end) as month_data2, 
	        sum(case when MONTH = '03' then nvl(last_month_carried, 0) else 0 end) as month_data3, 
	        sum(case when MONTH = '04' then nvl(last_month_carried, 0) else 0 end) as month_data4, 
	        sum(case when MONTH = '05' then nvl(last_month_carried, 0) else 0 end) as month_data5,
	        sum(case when MONTH = '06' then nvl(last_month_carried, 0) else 0 end) as month_data6, 
	        sum(case when MONTH = '07' then nvl(last_month_carried, 0) else 0 end) as month_data7, 
	        sum(case when MONTH = '08' then nvl(last_month_carried, 0) else 0 end) as month_data8, 
	        sum(case when MONTH = '09' then nvl(last_month_carried, 0) else 0 end) as month_data9, 
	        sum(case when MONTH = '10' then nvl(last_month_carried, 0) else 0 end) as month_data10, 
	        sum(case when MONTH = '11' then nvl(last_month_carried, 0) else 0 end) as month_data11, 
	        sum(case when MONTH = '12' then nvl(last_month_carried, 0) else 0 end) as month_data12, 
	        sum(nvl(last_month_carried, 0)) as year_sum
	      from BUDG_MED_COST bmc
	      left join budg_cost_subj asj 
	      	on 
		      bmc.group_id = asj.group_id
		      and bmc.hos_id = asj.hos_id
		      and bmc.copy_code = asj.copy_code
		      and bmc.subj_code = asj.subj_code
		      and bmc.budg_year = asj.budg_year 
	      where bmc.group_id = #{group_id,jdbcType=INTEGER}
	        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
	        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
	        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
	      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, asj.subj_level
	     
	 union all
	      
	      select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year,bmc.subj_code, asj.subj_name, asj.subj_level
	        , '预算值' as summary, 2 as seq, 
	        sum(case when MONTH = '01' then nvl(COST_BUDG, 0) else 0 end) as month_data1, 
	        sum(case when MONTH = '02' then nvl(COST_BUDG, 0) else 0 end) as month_data2, 
	        sum(case when MONTH = '03' then nvl(COST_BUDG, 0) else 0 end) as month_data3, 
	        sum(case when MONTH = '04' then nvl(COST_BUDG, 0) else 0 end) as month_data4, 
	        sum(case when MONTH = '05' then nvl(COST_BUDG, 0) else 0 end) as month_data5, 
	        sum(case when MONTH = '06' then nvl(COST_BUDG, 0) else 0 end) as month_data6, 
	        sum(case when MONTH = '07' then nvl(COST_BUDG, 0) else 0 end) as month_data7, 
	        sum(case when MONTH = '08' then nvl(COST_BUDG, 0) else 0 end) as month_data8, 
	        sum(case when MONTH = '09' then nvl(COST_BUDG, 0) else 0 end) as month_data9, 
	        sum(case when MONTH = '10' then nvl(COST_BUDG, 0) else 0 end) as month_data10, 
	        sum(case when MONTH = '11' then nvl(COST_BUDG, 0) else 0 end) as month_data11, 
	        sum(case when MONTH = '12' then nvl(COST_BUDG, 0) else 0 end) as month_data12, 
	        sum(nvl(COST_BUDG, 0)) as year_sum
	      from BUDG_MED_COST bmc
	      left join budg_cost_subj asj 
	      	on 
		      bmc.group_id = asj.group_id
		      and bmc.hos_id = asj.hos_id
		      and bmc.copy_code = asj.copy_code
		      and bmc.budg_year = asj.budg_year 
		      and bmc.subj_code = asj.subj_code
	      where bmc.group_id = #{group_id,jdbcType=INTEGER}
	        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
	        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
	        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
	      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, asj.subj_level
	      
	      union all
	      
	      select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year,bmc.subj_code, asj.subj_name, asj.subj_level
	        , '结转下月' as summary, 3 as seq, 
	        sum(case when MONTH = '01' then nvl(carried_next_month, 0) else 0 end) as month_data1, 
	        sum(case when MONTH = '02' then nvl(carried_next_month, 0) else 0 end) as month_data2, 
	        sum(case when MONTH = '03' then nvl(carried_next_month, 0) else 0 end) as month_data3, 
	        sum(case when MONTH = '04' then nvl(carried_next_month, 0) else 0 end) as month_data4, 
	        sum(case when MONTH = '05' then nvl(carried_next_month, 0) else 0 end) as month_data5, 
	        sum(case when MONTH = '06' then nvl(carried_next_month, 0) else 0 end) as month_data6, 
	        sum(case when MONTH = '07' then nvl(carried_next_month, 0) else 0 end) as month_data7, 
	        sum(case when MONTH = '08' then nvl(carried_next_month, 0) else 0 end) as month_data8, 
	        sum(case when MONTH = '09' then nvl(carried_next_month, 0) else 0 end) as month_data9, 
	        sum(case when MONTH = '10' then nvl(carried_next_month, 0) else 0 end) as month_data10, 
	        sum(case when MONTH = '11' then nvl(carried_next_month, 0) else 0 end) as month_data11, 
	        sum(case when MONTH = '12' then nvl(carried_next_month, 0) else 0 end) as month_data12,
	        sum(nvl(carried_next_month, 0)) as year_sum
	      from BUDG_MED_COST bmc
	      left join budg_cost_subj asj 
		      on 
			      bmc.group_id = asj.group_id
			      and bmc.hos_id = asj.hos_id
			      and bmc.copy_code = asj.copy_code
			      and bmc.budg_year = asj.budg_year
			      and bmc.subj_code = asj.subj_code
	      where bmc.group_id = #{group_id,jdbcType=INTEGER}
	        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
	        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
	        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
	      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, asj.subj_level
	      
	) ,
	sumbudg as ( <!-- 预算值合计 数据  -->
		select null group_id, null hos_id, null copy_code,  null budg_year, null subj_code, null subj_name, 
			null subj_level, '预算值合计' summary,  1 seq, 
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 ,
			nvl(sum(month_data3),0) month_data3 , nvl(sum(month_data4),0) month_data4 ,
			nvl(sum(month_data1),0) month_data5 , nvl(sum(month_data2),0) month_data6 ,
			nvl(sum(month_data3),0) month_data7 , nvl(sum(month_data4),0) month_data8 ,
			nvl(sum(month_data1),0) month_data9 , nvl(sum(month_data2),0) month_data10 ,
			nvl(sum(month_data3),0) month_data11 , nvl(sum(month_data4),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum
		from budgCost where seq = 2 <!-- 医疗支出 预算值 -->
		group by group_id,hos_id,copy_code,budg_year
		
		union all
			select null group_id, null hos_id, null copy_code,  null budg_year, null subj_code, null subj_name, 
			null subj_level, '预算值合计' summary,  2 seq, 
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 ,
			nvl(sum(month_data3),0) month_data3 , nvl(sum(month_data4),0) month_data4 ,
			nvl(sum(month_data1),0) month_data5 , nvl(sum(month_data2),0) month_data6 ,
			nvl(sum(month_data3),0) month_data7 , nvl(sum(month_data4),0) month_data8 ,
			nvl(sum(month_data1),0) month_data9 , nvl(sum(month_data2),0) month_data10 ,
			nvl(sum(month_data3),0) month_data11 , nvl(sum(month_data4),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum
		from else_cost where seq = 2 <!-- 其他支出 预算值 -->
		group by group_id,hos_id,copy_code,budg_year
	) ,
	
	detailData as ( <!-- 表格内展示数据  已筛选排序  可直接展示 -->
		select t.* from (
			select * from budgCost
	      union all
          	select * from else_cost
	    ) t
	  WHERE                     
		group_id = #{group_id,jdbcType=INTEGER}
		
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		<if test="subj_level != null and subj_level != ''">
		AND subj_level = #{subj_level,jdbcType=INTEGER}
		</if>
      order by group_id,hos_id,copy_code, budg_year,subj_code ,seq
	)
	
		select null group_id, null hos_id, null copy_code,  null budg_year, null subj_code, null subj_name, 
			null subj_level, '预算值合计' summary,  null seq,  
			sum(month_data1) month_data1 , sum(month_data2) month_data2 , sum(month_data3) month_data3 ,
			sum(month_data4) month_data4 , sum(month_data5) month_data5 , sum(month_data6) month_data6 ,
			sum(month_data7) month_data7 , sum(month_data8) month_data8 , sum(month_data9) month_data9 ,
			sum(month_data10) month_data10 , sum(month_data11) month_data11 , sum(month_data12) month_data12 ,
			sum(year_sum) year_sum
		from sumbudg
		group by  group_id,hos_id,copy_code, budg_year
	union all 
	
		select * from detailData
	
	</select>
	
	<select id="queryReportMedHosCost" parameterType="java.util.Map" resultMap="budgMedCostMap" >
		with budgData as (
			select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year,bmc.subj_code, asj.subj_name, 
				asj.subj_level, '预算值' as summary, 2 as seq, 
				sum(case when MONTH = '01' then nvl(COST_BUDG, 0) else 0 end) as month_data1, 
				sum(case when MONTH = '02' then nvl(COST_BUDG, 0) else 0 end) as month_data2, 
				sum(case when MONTH = '03' then nvl(COST_BUDG, 0) else 0 end) as month_data3, 
				sum(case when MONTH = '04' then nvl(COST_BUDG, 0) else 0 end) as month_data4, 
				sum(case when MONTH = '05' then nvl(COST_BUDG, 0) else 0 end) as month_data5, 
				sum(case when MONTH = '06' then nvl(COST_BUDG, 0) else 0 end) as month_data6, 
				sum(case when MONTH = '07' then nvl(COST_BUDG, 0) else 0 end) as month_data7, 
				sum(case when MONTH = '08' then nvl(COST_BUDG, 0) else 0 end) as month_data8, 
				sum(case when MONTH = '09' then nvl(COST_BUDG, 0) else 0 end) as month_data9, 
				sum(case when MONTH = '10' then nvl(COST_BUDG, 0) else 0 end) as month_data10, 
				sum(case when MONTH = '11' then nvl(COST_BUDG, 0) else 0 end) as month_data11, 
				sum(case when MONTH = '12' then nvl(COST_BUDG, 0) else 0 end) as month_data12, 
				sum(nvl(COST_BUDG, 0)) as year_sum
			from BUDG_MED_COST bmc
			left join budg_cost_subj asj 
				on 
					bmc.group_id = asj.group_id
					and bmc.hos_id = asj.hos_id
					and bmc.copy_code = asj.copy_code
					and bmc.subj_code = asj.subj_code
					and bmc.budg_year = asj.budg_year 
			where bmc.group_id = #{group_id,jdbcType=INTEGER}
				and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
				and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
				and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, asj.subj_level
		),
		detailData as ( <!-- 表格内展示数据  已筛选排序  可直接展示 -->
			select t.* from (
				select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, 
					asj.subj_level , '上月结转' as summary, 1 as seq, 
					sum(case when MONTH = '01' then nvl(last_month_carried, 0) else 0 end) as month_data1, 
					sum(case when MONTH = '02' then nvl(last_month_carried, 0) else 0 end) as month_data2, 
					sum(case when MONTH = '03' then nvl(last_month_carried, 0) else 0 end) as month_data3, 
					sum(case when MONTH = '04' then nvl(last_month_carried, 0) else 0 end) as month_data4, 
					sum(case when MONTH = '05' then nvl(last_month_carried, 0) else 0 end) as month_data5, 
					sum(case when MONTH = '06' then nvl(last_month_carried, 0) else 0 end) as month_data6, 
					sum(case when MONTH = '07' then nvl(last_month_carried, 0) else 0 end) as month_data7,
			        sum(case when MONTH = '08' then nvl(last_month_carried, 0) else 0 end) as month_data8, 
			        sum(case when MONTH = '09' then nvl(last_month_carried, 0) else 0 end) as month_data9, 
			        sum(case when MONTH = '10' then nvl(last_month_carried, 0) else 0 end) as month_data10, 
			        sum(case when MONTH = '11' then nvl(last_month_carried, 0) else 0 end) as month_data11, 
			        sum(case when MONTH = '12' then nvl(last_month_carried, 0) else 0 end) as month_data12, 
			        sum(nvl(last_month_carried, 0)) as year_sum
			      from BUDG_MED_COST bmc
			      left join budg_cost_subj asj 
			      	on 
				      bmc.group_id = asj.group_id
				      and bmc.hos_id = asj.hos_id
				      and bmc.copy_code = asj.copy_code
				      and bmc.subj_code = asj.subj_code
				      and bmc.budg_year = asj.budg_year 
			      where bmc.group_id = #{group_id,jdbcType=INTEGER}
			        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
			        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
			        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
			      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, asj.subj_level
			     
			 union all
			      select * from budgData
			 union all
			      
			      select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, 
		      		asj.subj_level , '结转下月' as summary, 3 as seq, 
		      		sum(case when MONTH = '01' then nvl(carried_next_month, 0) else 0 end) as month_data1, 
		      		sum(case when MONTH = '02' then nvl(carried_next_month, 0) else 0 end) as month_data2, 
		      		sum(case when MONTH = '03' then nvl(carried_next_month, 0) else 0 end) as month_data3, 
		      		sum(case when MONTH = '04' then nvl(carried_next_month, 0) else 0 end) as month_data4, 
		      		sum(case when MONTH = '05' then nvl(carried_next_month, 0) else 0 end) as month_data5, 
		      		sum(case when MONTH = '06' then nvl(carried_next_month, 0) else 0 end) as month_data6, 
		      		sum(case when MONTH = '07' then nvl(carried_next_month, 0) else 0 end) as month_data7, 
		      		sum(case when MONTH = '08' then nvl(carried_next_month, 0) else 0 end) as month_data8, 
		      		sum(case when MONTH = '09' then nvl(carried_next_month, 0) else 0 end) as month_data9, 
		      		sum(case when MONTH = '10' then nvl(carried_next_month, 0) else 0 end) as month_data10, 
		      		sum(case when MONTH = '11' then nvl(carried_next_month, 0) else 0 end) as month_data11, 
		      		sum(case when MONTH = '12' then nvl(carried_next_month, 0) else 0 end) as month_data12, 
		      		sum(nvl(carried_next_month, 0)) as year_sum
			      from BUDG_MED_COST bmc
			      left join budg_cost_subj asj 
			      	on 
				      bmc.group_id = asj.group_id
				      and bmc.hos_id = asj.hos_id
				      and bmc.copy_code = asj.copy_code
				      and bmc.subj_code = asj.subj_code
				      and bmc.budg_year = asj.budg_year 
			      where bmc.group_id = #{group_id,jdbcType=INTEGER}
			        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
			        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
			        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
			      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.subj_code, asj.subj_name, asj.subj_level
			      ) t
			  WHERE                     
				group_id = #{group_id,jdbcType=INTEGER}
				
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="budg_year != null and budg_year != ''">
				AND budg_year = #{budg_year,jdbcType=VARCHAR}
				</if>
				<if test="subj_code != null and subj_code != ''">
				AND subj_code = #{subj_code,jdbcType=VARCHAR}
				</if>
				<if test="subj_level != null and subj_level != ''">
				AND subj_level = #{subj_level,jdbcType=INTEGER}
				</if>
		      order by group_id,hos_id,copy_code, budg_year,subj_code,seq
		)
		
			select null group_id, null hos_id, null copy_code,  null budg_year, null subj_code, null subj_name, 
				null subj_level, '预算值合计' summary,  null seq,  
				sum(month_data1) month_data1 , sum(month_data2) month_data2 , sum(month_data3) month_data3 ,
				sum(month_data4) month_data4 , sum(month_data5) month_data5 , sum(month_data6) month_data6 ,
				sum(month_data7) month_data7 , sum(month_data8) month_data8 , sum(month_data9) month_data9 ,
				sum(month_data10) month_data10 , sum(month_data11) month_data11 , sum(month_data12) month_data12 ,
				sum(year_sum) year_sum
			from budgData
			group by  group_id,hos_id,copy_code, budg_year
		union all 
		
			select * from detailData 
		
		
	</select>
	
	<select id="queryReportMedDeptCost" parameterType="java.util.Map" resultMap="budgMedCostMap" >
		with budgData as ( <!-- 科室医疗支出预算值 -->
			 select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.dept_id, hdd.dept_code, hdd.dept_name, 
			      bmc.subj_code, asj.subj_name, asj.subj_level, '预算值' as summary, 2 as seq, 
			      sum(case when MONTH = '01' then nvl(COST_BUDG, 0) else 0 end) as month_data1, 
			      sum(case when MONTH = '02' then nvl(COST_BUDG, 0) else 0 end) as month_data2, 
			      sum(case when MONTH = '03' then nvl(COST_BUDG, 0) else 0 end) as month_data3, 
			      sum(case when MONTH = '04' then nvl(COST_BUDG, 0) else 0 end) as month_data4, 
			      sum(case when MONTH = '05' then nvl(COST_BUDG, 0) else 0 end) as month_data5, 
			      sum(case when MONTH = '06' then nvl(COST_BUDG, 0) else 0 end) as month_data6, 
			      sum(case when MONTH = '07' then nvl(COST_BUDG, 0) else 0 end) as month_data7, 
			      sum(case when MONTH = '08' then nvl(COST_BUDG, 0) else 0 end) as month_data8, 
			      sum(case when MONTH = '09' then nvl(COST_BUDG, 0) else 0 end) as month_data9, 
			      sum(case when MONTH = '10' then nvl(COST_BUDG, 0) else 0 end) as month_data10, 
			      sum(case when MONTH = '11' then nvl(COST_BUDG, 0) else 0 end) as month_data11, 
			      sum(case when MONTH = '12' then nvl(COST_BUDG, 0) else 0 end) as month_data12, 
			      sum(nvl(COST_BUDG, 0)) as year_sum
		      from BUDG_MED_COST bmc
		      left join hos_dept_dict hdd 
		      	on 
		      		bmc.group_id = hdd.group_id
					and bmc.hos_id = hdd.hos_id
					and bmc.dept_id = hdd.dept_id 
					and hdd.is_stop = 0
		      left join budg_cost_subj asj 
		      	on 
			      bmc.group_id = asj.group_id
			      and bmc.hos_id = asj.hos_id
			      and bmc.copy_code = asj.copy_code
			      and bmc.budg_year = asj.budg_year
			      and bmc.subj_code = asj.subj_code
		      where 
		      	bmc.group_id = #{group_id,jdbcType=INTEGER}
		        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
		        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
		        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
		      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.dept_id, bmc.subj_code, hdd.dept_code, hdd.dept_name, asj.subj_name, asj.subj_level
		) ,
		detailData as ( <!-- 表格内展示数据  已筛选排序  可直接展示 -->
			select t.* from (
				select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.dept_id , hdd.dept_code, hdd.dept_name, 
					bmc.subj_code, asj.subj_name, asj.subj_level, '上月结转' as summary, 1 as seq, 
					sum(case when MONTH = '01' then nvl(last_month_carried, 0) else 0 end) as month_data1, 
					sum(case when MONTH = '02' then nvl(last_month_carried, 0) else 0 end) as month_data2, 
					sum(case when MONTH = '03' then nvl(last_month_carried, 0) else 0 end) as month_data3, 
					sum(case when MONTH = '04' then nvl(last_month_carried, 0) else 0 end) as month_data4, 
					sum(case when MONTH = '05' then nvl(last_month_carried, 0) else 0 end) as month_data5, 
					sum(case when MONTH = '06' then nvl(last_month_carried, 0) else 0 end) as month_data6, 
					sum(case when MONTH = '07' then nvl(last_month_carried, 0) else 0 end) as month_data7, 
					sum(case when MONTH = '08' then nvl(last_month_carried, 0) else 0 end) as month_data8, 
					sum(case when MONTH = '09' then nvl(last_month_carried, 0) else 0 end) as month_data9, 
					sum(case when MONTH = '10' then nvl(last_month_carried, 0) else 0 end) as month_data10, 
					sum(case when MONTH = '11' then nvl(last_month_carried, 0) else 0 end) as month_data11, 
					sum(case when MONTH = '12' then nvl(last_month_carried, 0) else 0 end) as month_data12, 
					sum(nvl(last_month_carried, 0)) as year_sum
				from BUDG_MED_COST bmc
				left join hos_dept_dict hdd 
					on 
						bmc.group_id = hdd.group_id
						and bmc.hos_id = hdd.hos_id
						and bmc.dept_id = hdd.dept_id 
						and hdd.is_stop = 0
				left join budg_cost_subj asj 
					on 
						bmc.group_id = asj.group_id
						and bmc.hos_id = asj.hos_id
						and bmc.copy_code = asj.copy_code
						and bmc.budg_year = asj.budg_year 
						and bmc.subj_code = asj.subj_code
				where 
					bmc.group_id = #{group_id,jdbcType=INTEGER}
					and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
					and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
					and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
				group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.dept_id, bmc.subj_code, hdd.dept_code, hdd.dept_name, asj.subj_name, asj.subj_level
	
		union all
		     select * from budgData
		union all
		      
		      select bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.dept_id, hdd.dept_code, hdd.dept_name, 
		      	bmc.subj_code, asj.subj_name, asj.subj_level, '结转下月' as summary, 3 as seq, 
		      	sum(case when MONTH = '01' then nvl(carried_next_month, 0) else 0 end) as month_data1, 
		      	sum(case when MONTH = '02' then nvl(carried_next_month, 0) else 0 end) as month_data2, 
		      	sum(case when MONTH = '03' then nvl(carried_next_month, 0) else 0 end) as month_data3, 
		      	sum(case when MONTH = '04' then nvl(carried_next_month, 0) else 0 end) as month_data4, 
		      	sum(case when MONTH = '05' then nvl(carried_next_month, 0) else 0 end) as month_data5, 
		      	sum(case when MONTH = '06' then nvl(carried_next_month, 0) else 0 end) as month_data6, 
		      	sum(case when MONTH = '07' then nvl(carried_next_month, 0) else 0 end) as month_data7, 
		      	sum(case when MONTH = '08' then nvl(carried_next_month, 0) else 0 end) as month_data8, 
		      	sum(case when MONTH = '09' then nvl(carried_next_month, 0) else 0 end) as month_data9, 
		      	sum(case when MONTH = '10' then nvl(carried_next_month, 0) else 0 end) as month_data10, 
		      	sum(case when MONTH = '11' then nvl(carried_next_month, 0) else 0 end) as month_data11, 
		      	sum(case when MONTH = '12' then nvl(carried_next_month, 0) else 0 end) as month_data12,
		      	sum(nvl(carried_next_month, 0)) as year_sum
		      from BUDG_MED_COST bmc
		      left join hos_dept_dict hdd 
			      on 
				      bmc.group_id = hdd.group_id
				      and bmc.hos_id = hdd.hos_id
				      and bmc.dept_id = hdd.dept_id 
				      and hdd.is_stop = 0
		      left join budg_cost_subj asj 
			      on 
				      bmc.group_id = asj.group_id
				      and bmc.hos_id = asj.hos_id
				      and bmc.copy_code = asj.copy_code
				      and bmc.budg_year = asj.budg_year 
				      and bmc.subj_code = asj.subj_code
		      where bmc.group_id = #{group_id,jdbcType=INTEGER}
		        and bmc.hos_id = #{hos_id,jdbcType=INTEGER}
		        and bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
		        and bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
		      group by bmc.group_id, bmc.hos_id, bmc.copy_code, bmc.budg_year, bmc.dept_id, bmc.subj_code, hdd.dept_code, hdd.dept_name, asj.subj_name, asj.subj_level
		      ) t
		  WHERE                     
			t.group_id = #{group_id,jdbcType=INTEGER}
			
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND t.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND t.dept_id = #{dept_id,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND t.subj_level = #{subj_level,jdbcType=INTEGER}
			</if>
	      order by group_id,hos_id,copy_code, budg_year,dept_id, subj_code,dept_code
		)
		
			select null group_id, null hos_id, null copy_code,  null budg_year, null dept_id, null dept_code, 
				null dept_name, null subj_code, null subj_name, null subj_level, '预算值合计' summary,  null seq,  
				sum(month_data1) month_data1 , sum(month_data2) month_data2 , sum(month_data3) month_data3 ,
				sum(month_data4) month_data4 , sum(month_data5) month_data5 , sum(month_data6) month_data6 ,
				sum(month_data7) month_data7 , sum(month_data8) month_data8 , sum(month_data9) month_data9 ,
				sum(month_data10) month_data10 , sum(month_data11) month_data11 , sum(month_data12) month_data12 ,
				sum(year_sum) year_sum
			from budgData
			group by  group_id,hos_id,copy_code, budg_year
		union all 
		
			select * from detailData 
		
	</select>
	
	<select id="queryDeptMedCost" parameterType="java.util.Map" resultMap="budgMedCost" >
		select 
		bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,hdd.dept_code,hdd.dept_name,bmc.subj_code,asj.subj_name,
		sum(case when MONTH='01' then COST_BUDG else 0 end) month_data1,
		sum(case when MONTH='02' then COST_BUDG else 0 end) month_data2,
		sum(case when MONTH='03' then COST_BUDG else 0 end) month_data3,
		sum(case when MONTH='04' then COST_BUDG else 0 end) month_data4,
		sum(case when MONTH='05' then COST_BUDG else 0 end) month_data5,
		sum(case when MONTH='06' then COST_BUDG else 0 end) month_data6,
		sum(case when MONTH='07' then COST_BUDG else 0 end) month_data7,
		sum(case when MONTH='08' then COST_BUDG else 0 end) month_data8,
		sum(case when MONTH='09' then COST_BUDG else 0 end) month_data9,
		sum(case when MONTH='10' then COST_BUDG else 0 end) month_data10,
		sum(case when MONTH='11' then COST_BUDG else 0 end) month_data11,
		sum(case when MONTH='12' then COST_BUDG else 0 end) month_data12
		
		from BUDG_MED_COST bmc 
		left join hos_dept_dict hdd on bmc.group_id = hdd.group_id and bmc.hos_id = hdd.hos_id and bmc.dept_id = hdd.dept_id
		left join budg_cost_subj asj on  bmc.group_id = asj.group_id and bmc.hos_id = asj.hos_id and bmc.copy_code = asj.copy_code and 
		bmc.subj_code = asj.subj_code and bmc.budg_year = asj.budg_year
		WHERE                     
			bmc.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmc.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND bmc.month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND bmc.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND bmc.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			
		group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.dept_id,bmc.subj_code,hdd.dept_code,hdd.dept_name,asj.subj_name
		order by bmc.budg_year , bmc.subj_code ,hdd.dept_code  asc
	</select>
	
	
	<select id="queryHosMedCost" parameterType="java.util.Map" resultMap="budgMedCost" >
		select 
		bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,
		sum(case when MONTH='01' then COST_BUDG else 0 end) month_data1,
		sum(case when MONTH='02' then COST_BUDG else 0 end) month_data2,
		sum(case when MONTH='03' then COST_BUDG else 0 end) month_data3,
		sum(case when MONTH='04' then COST_BUDG else 0 end) month_data4,
		sum(case when MONTH='05' then COST_BUDG else 0 end) month_data5,
		sum(case when MONTH='06' then COST_BUDG else 0 end) month_data6,
		sum(case when MONTH='07' then COST_BUDG else 0 end) month_data7,
		sum(case when MONTH='08' then COST_BUDG else 0 end) month_data8,
		sum(case when MONTH='09' then COST_BUDG else 0 end) month_data9,
		sum(case when MONTH='10' then COST_BUDG else 0 end) month_data10,
		sum(case when MONTH='11' then COST_BUDG else 0 end) month_data11,
		sum(case when MONTH='12' then COST_BUDG else 0 end) month_data12
		
		from BUDG_MED_COST bmc 
		left join budg_cost_subj asj on  bmc.group_id = asj.group_id and bmc.hos_id = asj.hos_id and bmc.copy_code = asj.copy_code and 
		bmc.subj_code = asj.subj_code and bmc.budg_year = asj.budg_year
		WHERE                     
			bmc.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmc.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND bmc.month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND bmc.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND bmc.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			
		group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name
		order by bmc.budg_year , bmc.subj_code asc
	</select>
	
	<select id="queryAllMedCost" parameterType="java.util.Map" resultMap="budgMedCost" >
		select 
			bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,
			sum(case when MONTH='01' then COST_BUDG else 0 end) month_data1,
			sum(case when MONTH='02' then COST_BUDG else 0 end) month_data2,
			sum(case when MONTH='03' then COST_BUDG else 0 end) month_data3,
			sum(case when MONTH='04' then COST_BUDG else 0 end) month_data4,
			sum(case when MONTH='05' then COST_BUDG else 0 end) month_data5,
			sum(case when MONTH='06' then COST_BUDG else 0 end) month_data6,
			sum(case when MONTH='07' then COST_BUDG else 0 end) month_data7,
			sum(case when MONTH='08' then COST_BUDG else 0 end) month_data8,
			sum(case when MONTH='09' then COST_BUDG else 0 end) month_data9,
			sum(case when MONTH='10' then COST_BUDG else 0 end) month_data10,
			sum(case when MONTH='11' then COST_BUDG else 0 end) month_data11,
			sum(case when MONTH='12' then COST_BUDG else 0 end) month_data12
		from BUDG_MED_COST bmc 
		left join hos_dept_dict hdd on bmc.group_id = hdd.group_id and bmc.hos_id = hdd.hos_id and bmc.dept_id = hdd.dept_id
		left join budg_cost_subj asj on  bmc.group_id = asj.group_id and bmc.hos_id = asj.hos_id and bmc.copy_code = asj.copy_code and 
		bmc.subj_code = asj.subj_code and bmc.budg_year = asj.budg_year
		WHERE                     
			bmc.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmc.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmc.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND bmc.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND bmc.month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND bmc.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND asj.subj_level = #{subj_level,jdbcType=INTEGER}
			</if>
		group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name
		order by bmc.budg_year ,bmc.subj_code asc
	</select>

	<select id="queryByCode" resultMap="budgMedCost"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		month,
		dept_id,
		subj_code,
		cost_budg,
		last_month_carried,
		carried_next_month
		FROM budg_med_cost 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		budg_year = #{budg_year,jdbcType=VARCHAR}   and 
		month = #{month,jdbcType=VARCHAR}   and 
		dept_id = #{dept_id,jdbcType=INTEGER}   and 
		subj_code = #{subj_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgMedCost"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		month,
		dept_id,
		subj_code,
		cost_budg,
		last_month_carried,
		carried_next_month
		FROM BUDG_MED_COST 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		<if test="cost_budg != null and cost_budg != ''">
		AND cost_budg = #{cost_budg,jdbcType=INTEGER}
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		AND last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		AND carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgMedCost"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		month,
		dept_id,
		subj_code,
		cost_budg,
		last_month_carried,
		carried_next_month
		FROM BUDG_MED_COST 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		<if test="cost_budg != null and cost_budg != ''">
		AND cost_budg = #{cost_budg,jdbcType=INTEGER}
		</if>
		<if test="last_month_carried != null and last_month_carried != ''">
		AND last_month_carried = #{last_month_carried,jdbcType=INTEGER}
		</if>
		<if test="carried_next_month != null and carried_next_month != ''">
		AND carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
<!-- 	查询支出科目是否重复编制 -->
	<select id="querySubjCount" resultMap="budgMedCostMap"  parameterType="java.util.Map" >
		with temp as(select bw.budg_year,bwic.subj_code,bcs.subj_name
			  from budg_wage bw
			  left join budg_wage_item_cost_ship bwic
			    on bw.group_id = bwic.group_id
			   and bw.hos_id = bwic.hos_id
			   and bw.copy_code = bwic.copy_code
			   and bw.wage_item_code = bwic.wage_item_code
			  left join budg_cost_subj bcs
			    on bwic.subj_code = bcs.subj_code
			  WHERE                     
				bw.group_id = #{group_id,jdbcType=INTEGER}
				AND bw.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bw.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bw.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by  bw.budg_year,bwic.subj_code,bcs.subj_name
			
			union all
			(select ba.budg_year,baic.subj_code,bcs.subj_name
			  from BUDG_AWARDS ba
			  left join BUDG_AWARDS_ITEM_COST_SHIP baic
			    on ba.group_id = baic.group_id
			   and ba.hos_id = baic.hos_id
			   and ba.copy_code = baic.copy_code
			   and ba.awards_item_code = baic.awards_item_code
			  left join budg_cost_subj bcs
			    on baic.subj_code = bcs.subj_code
			  WHERE                     
				ba.group_id = #{group_id,jdbcType=INTEGER}
				AND ba.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ba.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ba.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by  ba.budg_year,baic.subj_code,bcs.subj_name)
			
			union all
			(select bm.year budg_year,bmts.cost_subj_code subj_code,bcs.subj_name
			  from BUDG_MAT bm
			  left join BUDG_MAT_TYPE_SUBJ bmts
			    on bm.group_id = bmts.group_id
			   and bm.hos_id = bmts.hos_id
			   and bm.copy_code = bmts.copy_code
			   and bm.mat_type_id = bmts.mat_type_id
			  left join budg_cost_subj bcs
			    on bmts.cost_subj_code = bcs.subj_code
			  WHERE                     
				bm.group_id = #{group_id,jdbcType=INTEGER}
				AND bm.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bm.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bm.year = #{budg_year,jdbcType=VARCHAR}
			group by  bm.year,bmts.cost_subj_code,bcs.subj_name)
			
			union all
			(select bd.budg_year,bmts.cost_subj_code subj_code,bcs.subj_name
			  from BUDG_DRUG bd
			  left join BUDG_MED_TYPE_SUBJ bmts
			    on bd.group_id = bmts.group_id
			   and bd.hos_id = bmts.hos_id
			   and bd.copy_code = bmts.copy_code
			   and bd.med_type_id = bmts.med_type_id
			  left join budg_cost_subj bcs
			    on bmts.cost_subj_code = bcs.subj_code
			  WHERE                     
				bd.group_id = #{group_id,jdbcType=INTEGER}
				AND bd.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bd.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bd.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by  bd.budg_year,bmts.cost_subj_code,bcs.subj_name)
			
			union all
			(select bas.budg_year,batcs.subj_code,bcs.subj_name
			  from BUDG_ASSET bas
			  left join BUDG_ASSET_TYPY_COST_SHIP batcs
			    on bas.group_id = batcs.group_id
			   and bas.hos_id = batcs.hos_id
			   and bas.copy_code = batcs.copy_code
			   and bas.ass_type_id = batcs.asset_type_id
			  left join budg_cost_subj bcs
			    on batcs.subj_code = bcs.subj_code
			  WHERE                     
				bas.group_id = #{group_id,jdbcType=INTEGER}
				AND bas.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bas.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bas.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by  bas.budg_year,batcs.subj_code,bcs.subj_name)
			
			union all
			(select bmrf.budg_year,bss.risk_fund_subj,'提取医疗风险基金预算科目' subj_name
			  from BUDG_MED_RISK_FUND bmrf
			  left join BUDG_SYS_SET bss
			    on bmrf.group_id = bss.group_id
			   and bmrf.hos_id = bss.hos_id
			   and bmrf.copy_code = bss.copy_code
			   and bmrf.budg_year = bss.budg_year
			  WHERE                     
				bmrf.group_id = #{group_id,jdbcType=INTEGER}
				AND bmrf.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bmrf.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bmrf.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by  bmrf.budg_year,bss.risk_fund_subj)
			
			union all
			
			(select be.budg_year,bpics.subj_code,bcs.subj_name
			  from BUDG_EXPENSE be
			  left join BUDG_PAYMENT_ITEM_COST_SHIP bpics
			    on be.group_id = bpics.group_id
			   and be.hos_id = bpics.hos_id
			   and be.copy_code = bpics.copy_code
			   and be.payment_item_id = bpics.payment_item_id
			  left join budg_cost_subj bcs
			    on bpics.subj_code = bcs.subj_code
			  WHERE                     
				be.group_id = #{group_id,jdbcType=INTEGER}
				AND be.hos_id = #{hos_id,jdbcType=INTEGER}
				AND be.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND be.budg_year = #{budg_year,jdbcType=VARCHAR}
			group by  be.budg_year,bpics.subj_code,bcs.subj_name))

		select budg_year,subj_code,subj_name, count(subj_code) count from temp 
		group by budg_year , subj_code,subj_name
	</select>
	
	<select id="queryAddData" resultMap="budgMedCostMap"  parameterType="java.util.Map">
	
	select bw.group_id,bw.hos_id, bw.copy_code, bw.budg_year,bw.month, bw.dept_id, bwic.subj_code,sum(cost_budg) cost_budg
	  from budg_wage bw
	  left join budg_wage_item_cost_ship bwic
	    on bw.group_id = bwic.group_id
	   and bw.hos_id = bwic.hos_id
	   and bw.copy_code = bwic.copy_code
	   and bw.wage_item_code = bwic.wage_item_code
	  WHERE                     
		bw.group_id = #{group_id,jdbcType=INTEGER}
		AND bw.hos_id = #{hos_id,jdbcType=INTEGER}
		AND bw.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND bw.budg_year = #{budg_year,jdbcType=VARCHAR}
	 group by bw.group_id,bw.hos_id,bw.copy_code,bw.dept_id,bw.budg_year,bw.month,bwic.subj_code
	 
	 union all (
	   select ba.group_id,ba.hos_id,ba.copy_code,ba.budg_year, ba.month,ba.dept_id,baic.subj_code,sum(ba.cost_budg) cost_budg
	    from BUDG_AWARDS ba
	    left join BUDG_AWARDS_ITEM_COST_SHIP baic
	      on ba.group_id = baic.group_id
	     and ba.hos_id = baic.hos_id
	     and ba.copy_code = baic.copy_code
	     and ba.awards_item_code = baic.awards_item_code
	   WHERE                     
		 ba.group_id = #{group_id,jdbcType=INTEGER}
		 AND ba.hos_id = #{hos_id,jdbcType=INTEGER}
		 AND ba.copy_code = #{copy_code,jdbcType=VARCHAR}
		 AND ba.budg_year = #{budg_year,jdbcType=VARCHAR}
	  group by ba.group_id,ba.hos_id,ba.copy_code,ba.budg_year, ba.month,ba.dept_id,baic.subj_code
	 )
	union all (
	  select bm.group_id,bm.hos_id,bm.copy_code,bm.year budg_year, bm.month,bm.dept_id,bmts.cost_subj_code subj_code,sum(bm.cost_budg) cost_budg
	    from BUDG_MAT bm
	    left join BUDG_MAT_TYPE_SUBJ bmts
	      on bm.group_id = bmts.group_id
	     and bm.hos_id = bmts.hos_id
	     and bm.copy_code = bmts.copy_code
	     and bm.mat_type_id = bmts.mat_type_id
	   WHERE                     
		 bm.group_id = #{group_id,jdbcType=INTEGER}
		 AND bm.hos_id = #{hos_id,jdbcType=INTEGER}
		 AND bm.copy_code = #{copy_code,jdbcType=VARCHAR}
		 AND bm.year = #{budg_year,jdbcType=VARCHAR}
	  group by bm.group_id,bm.hos_id,bm.copy_code,bm.year, bm.month,bm.dept_id,bmts.cost_subj_code
	)
	
	union all (
	  select bd.group_id,bd.hos_id,bd.copy_code,bd.budg_year, bd.month,bd.dept_id,bmts.cost_subj_code subj_code,sum(bd.cost_budg) cost_budg
	    from BUDG_DRUG bd
	    left join BUDG_MED_TYPE_SUBJ bmts
	      on bd.group_id = bmts.group_id
	     and bd.hos_id = bmts.hos_id
	     and bd.copy_code = bmts.copy_code
	     and bd.med_type_id = bmts.med_type_id
	   WHERE                     
		 bd.group_id = #{group_id,jdbcType=INTEGER}
		 AND bd.hos_id = #{hos_id,jdbcType=INTEGER}
		 AND bd.copy_code = #{copy_code,jdbcType=VARCHAR}
		 AND bd.budg_year = #{budg_year,jdbcType=VARCHAR}
	  group by bd.group_id,bd.hos_id,bd.copy_code,bd.budg_year, bd.month,bd.dept_id,bmts.cost_subj_code
	
	)
	
	union all (
	  select bas.group_id,bas.hos_id,bas.copy_code,bas.budg_year, bas.month,bas.dept_id,batcs.subj_code,sum(bas.sum_budg) cost_budg
	    from BUDG_ASSET bas
	    left join BUDG_ASSET_TYPY_COST_SHIP batcs
	      on bas.group_id = batcs.group_id
	     and bas.hos_id = batcs.hos_id
	     and bas.copy_code = batcs.copy_code
	     and bas.ass_type_id = batcs.asset_type_id
	   WHERE                     
		 bas.group_id = #{group_id,jdbcType=INTEGER}
		 AND bas.hos_id = #{hos_id,jdbcType=INTEGER}
		 AND bas.copy_code = #{copy_code,jdbcType=VARCHAR}
		 AND bas.budg_year = #{budg_year,jdbcType=VARCHAR}
	  group by bas.group_id,bas.hos_id,bas.copy_code,bas.budg_year, bas.month,bas.dept_id,batcs.subj_code
	)
	
	union all (
	  select bmrf.group_id,bmrf.hos_id,bmrf.copy_code,bmrf.budg_year, bmrf.month,bmrf.dept_id,bss.risk_fund_subj subj_code,sum(bmrf.cost_budg) cost_budg
	    from BUDG_MED_RISK_FUND bmrf
	    left join BUDG_SYS_SET bss
	      on bmrf.group_id = bss.group_id
	     and bmrf.hos_id = bss.hos_id
	     and bmrf.copy_code = bss.copy_code
	     and bmrf.budg_year = bss.budg_year
	   WHERE                     
		 bmrf.group_id = #{group_id,jdbcType=INTEGER}
		 AND bmrf.hos_id = #{hos_id,jdbcType=INTEGER}
		 AND bmrf.copy_code = #{copy_code,jdbcType=VARCHAR}
		 AND bmrf.budg_year = #{budg_year,jdbcType=VARCHAR}
	  group by bmrf.group_id,bmrf.hos_id,bmrf.copy_code,bmrf.budg_year, bmrf.month,bmrf.dept_id,bss.risk_fund_subj
	)
	
	union all (
	  select be.group_id,be.hos_id,be.copy_code,be.budg_year, be.month,be.dept_id,bpics.subj_code,sum(be.cost_budg) cost_budg
	    from BUDG_EXPENSE be
	    left join BUDG_PAYMENT_ITEM_COST_SHIP bpics
	      on be.group_id = bpics.group_id
	     and be.hos_id = bpics.hos_id
	     and be.copy_code = bpics.copy_code
	     and be.payment_item_id = bpics.payment_item_id
	  WHERE                     
		 be.group_id = #{group_id,jdbcType=INTEGER}
		 AND be.hos_id = #{hos_id,jdbcType=INTEGER}
		 AND be.copy_code = #{copy_code,jdbcType=VARCHAR}
		 AND be.budg_year = #{budg_year,jdbcType=VARCHAR}
	  group by be.group_id,be.hos_id,be.copy_code,be.budg_year, be.month,be.dept_id,bpics.subj_code
	)
	
	order by dept_id,budg_year,month
	
	</select>
	
	<insert id="addGenerateBatch" parameterType="java.util.List" >
		INSERT INTO BUDG_MED_COST (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			subj_code
			,
			cost_budg
			
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.budg_year,jdbcType=VARCHAR}
			,
			#{item.month,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.cost_budg,jdbcType=INTEGER}
		    from dual
		</foreach>
		)t
	</insert>
	
	<!-- 结转查询SQL：查询当前年月预算值,执行值,上月结转,下月结转及下月数据的上月结转 -->
	<select id="queryBudgMedCostByYearMonth" parameterType="java.util.Map" resultMap="budgMedCostMap">
		SELECT 
	      bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,bmc.month,bmc.dept_id,bmc.cost_budg,
	      nvl(bmc.last_month_carried,0) as last_month_carried ,nvl(bmc.carried_next_month,0) as carried_next_month,
	      nvl(bece.amount,0) as amount,bcs.is_caarried,
	      <!-- 计算:下月结转值 = 上月结转 + 本月预算 -本月执行 -->
	      nvl(bmc.last_month_carried,0) + nvl(bmc.cost_budg,0) - nvl(bece.amount,0) AS next_value
    	FROM BUDG_MED_COST bmc
    	LEFT JOIN BUDG_MED_COST_EXECUTE bece
      	ON
              bmc.group_id = bece.group_id
              AND bmc.hos_id = bece.hos_id
              AND bmc.copy_code = bece.copy_code
              AND bmc.budg_year = bece.year
              AND bmc.month = bece.month
              AND bmc.dept_id = bece.dept_id
              AND bmc.subj_code = bece.subj_code
    	LEFT JOIN BUDG_COST_SUBJ bcs
    	ON
         	bmc.group_id = bcs.group_id
         	AND bmc.hos_id = bcs.hos_id
         	AND bmc.copy_code = bcs.copy_code
         	AND bmc.budg_year = bcs.budg_year
         	AND bmc.subj_code = bcs.subj_code
        WHERE
		    bmc.group_id = #{group_id}
		    AND bmc.hos_id = #{hos_id}
		    AND bmc.copy_code = #{copy_code}
		    AND bmc.budg_year = #{year}
		    AND bmc.month = #{month}
	</select>
	
	<!-- 结转时SQL:批量修改上月结转值或批量修改下月结转值 -->
	<update id="updateBatchBudgMedCostValue" parameterType="java.util.List">
		 <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_COST 
			SET
				<trim suffixOverrides=",">
					<!-- 修改上月结转 --> 
					<if test="item.last_month_carried != null">
						last_month_carried = #{item.last_month_carried},
					</if>
					
					<!-- 修改结转下月 -->
					<if test="item.carried_next_month != null">
						carried_next_month = #{item.carried_next_month},
					</if>
				</trim>
			WHERE
				group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
				AND budg_year = #{item.budg_year}
				AND month = #{item.month}
				
				<if test="item.dept_id != null and item.dept_id != '' ">
					AND dept_id = #{item.dept_id}
				</if>
				
				<if test="item.subj_code != null and item.subj_code != ''">
					AND subj_code = #{item.subj_code}
				</if>
		</foreach>
	</update>
	
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(0)
		FROM BUDG_MED_COST 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 导入查询 支出科目是否存在 -->
	<select id="querySubjExist" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT 
			count(0)
		FROM BUDG_COST_SUBJ 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			and is_last = 1
	</select>
	
	<!-- 查询 所查 预算年度 是否有 执行数据 ( flag 标识 (-1:表示 所查预算年度 没有执行数据) 解决  没有执行数据，前台合计行 展现数据 窜行问题) -->
	<select id="queryExecuteDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) FROM BUDG_MED_COST_EXECUTE 
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND year = #{budg_year,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 所查 预算年度 是否有 数据 ( flag 标识 (-1:表示 所查预算年度 没有数据) 解决  没有数据，前台合计行 展现数据 窜行问题) -->
	<select id="queryBudgDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) FROM BUDG_MED_COST 
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
	</select>
	
	
		<!-- 医院 其他支出预算执行监控查询 -->
	<select id="queryReportMedElseCostMonitor" parameterType="java.util.Map" resultMap="budgMedCostMap" >
	
	with budgValue as(
		select 
		    bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level,
		    '预算值' summary,2 seq,
		    sum(case when MONTH='01' then nvl(budg_value,0) else 0 end) month_data1,
		    sum(case when MONTH='02' then nvl(budg_value,0) else 0 end) month_data2,
		    sum(case when MONTH='03' then nvl(budg_value,0) else 0 end) month_data3,
		    sum(case when MONTH='04' then nvl(budg_value,0) else 0 end) month_data4,
		    sum(case when MONTH='05' then nvl(budg_value,0) else 0 end) month_data5,
		    sum(case when MONTH='06' then nvl(budg_value,0) else 0 end) month_data6,
		    sum(case when MONTH='07' then nvl(budg_value,0) else 0 end) month_data7,
		    sum(case when MONTH='08' then nvl(budg_value,0) else 0 end) month_data8,
		    sum(case when MONTH='09' then nvl(budg_value,0) else 0 end) month_data9,
		    sum(case when MONTH='10' then nvl(budg_value,0) else 0 end) month_data10,
		    sum(case when MONTH='11' then nvl(budg_value,0) else 0 end) month_data11,
		    sum(case when MONTH='12' then nvl(budg_value,0) else 0 end) month_data12 ,
		    sum(nvl(budg_value,0)) year_sum
		    from BUDG_ELSE_COST bmc 
		    left join budg_cost_subj asj 
		    	on  
		    		bmc.group_id = asj.group_id 
		    		and bmc.hos_id = asj.hos_id 
		    		and bmc.copy_code = asj.copy_code 
		    		and bmc.subj_code = asj.subj_code 
		    		and bmc.budg_year = asj.budg_year
		    where bmc.group_id = ${group_id} AND bmc.hos_id = ${hos_id} AND bmc.copy_code = ${copy_code} AND bmc.budg_year = ${budg_year}
		    
		    group by bmc.group_id,bmc.hos_id,bmc.copy_code,bmc.budg_year,bmc.subj_code,asj.subj_name,asj.subj_level
	),
	executeValue as(
		select 
		    bmce.group_id,bmce.hos_id,bmce.copy_code,bmce.year budg_year,bmce.subj_code,asj.subj_name,asj.subj_level,
		    '执行数据' summary,4 seq,
		    sum(case when bmce.MONTH='01' then nvl(amount,0) else 0 end) month_data1,
		    sum(case when bmce.MONTH='02' then nvl(amount,0) else 0 end) month_data2,
		    sum(case when bmce.MONTH='03' then nvl(amount,0) else 0 end) month_data3,
		    sum(case when bmce.MONTH='04' then nvl(amount,0) else 0 end) month_data4,
		    sum(case when bmce.MONTH='05' then nvl(amount,0) else 0 end) month_data5,
		    sum(case when bmce.MONTH='06' then nvl(amount,0) else 0 end) month_data6,
		    sum(case when bmce.MONTH='07' then nvl(amount,0) else 0 end) month_data7,
		    sum(case when bmce.MONTH='08' then nvl(amount,0) else 0 end) month_data8,
		    sum(case when bmce.MONTH='09' then nvl(amount,0) else 0 end) month_data9,
		    sum(case when bmce.MONTH='10' then nvl(amount,0) else 0 end) month_data10,
		    sum(case when bmce.MONTH='11' then nvl(amount,0) else 0 end) month_data11,
		    sum(case when bmce.MONTH='12' then nvl(amount,0) else 0 end) month_data12 ,
		    sum(nvl(amount,0)) year_sum
	    from BUDG_ELSE_COST_EXECUTE bmce 
	    left join budg_cost_subj asj 
	    	on 
	    		bmce.group_id = asj.group_id 
	    		and bmce.hos_id = asj.hos_id 
	    		and bmce.copy_code = asj.copy_code 
	    		and bmce.subj_code = asj.subj_code 
	    		and bmce.year = asj.budg_year
	    		
	    where  bmce.group_id = ${group_id} and bmce.hos_id = ${hos_id} and bmce.copy_code = ${copy_code} 
	    		and bmce.year = ${budg_year}
		group by bmce.group_id,bmce.hos_id,bmce.copy_code,bmce.year,bmce.subj_code,asj.subj_name,asj.subj_level
	),
	dataBudg as( <!-- 预算数据 归集 查询 -->
		select asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,asj.subj_level,
			    	b.summary,b.seq,nvl(sum(b.month_data1),0) month_data1, 
				 nvl(sum(b.month_data2),0) month_data2, nvl(sum(b.month_data3),0) month_data3,
				 nvl(sum(b.month_data4),0) month_data4, nvl(sum(b.month_data5),0) month_data5,
				 nvl(sum(b.month_data6),0) month_data6, nvl(sum(b.month_data7),0) month_data7,
				 nvl(sum(b.month_data8),0) month_data8, nvl(sum(b.month_data9),0) month_data9,
				 nvl(sum(b.month_data10),0) month_data10, nvl(sum(b.month_data11),0) month_data11,
				 nvl(sum(b.month_data12),0) month_data12, nvl(sum(b.year_sum),0) year_sum
			    
			    from budg_cost_subj asj  
		    	left join budgValue b
		    		on
		    			asj.group_id = b.group_id 
			    		and asj.hos_id = b.hos_id 
			    		and asj.copy_code = b.copy_code 
			    		and asj.budg_year = b.budg_year
			    		and b.subj_code like asj.subj_code || '%' 
			    where 
					asj.group_id = ${group_id} 
			    	AND asj.hos_id = ${hos_id} 
			    	AND asj.copy_code = ${copy_code} 
			    	AND asj.budg_year = ${budg_year}
			    	and asj.subj_code like '5302%'
			    group by asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,
			    		asj.subj_level,	b.summary,b.seq
	),
	dataExe as ( <!-- 执行数据 归集查询 -->
		select asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,asj.subj_level,
			    	b.summary,b.seq,nvl(sum(b.month_data1),0) month_data1, 
				 nvl(sum(b.month_data2),0) month_data2, nvl(sum(b.month_data3),0) month_data3,
				 nvl(sum(b.month_data4),0) month_data4, nvl(sum(b.month_data5),0) month_data5,
				 nvl(sum(b.month_data6),0) month_data6, nvl(sum(b.month_data7),0) month_data7,
				 nvl(sum(b.month_data8),0) month_data8, nvl(sum(b.month_data9),0) month_data9,
				 nvl(sum(b.month_data10),0) month_data10, nvl(sum(b.month_data11),0) month_data11,
				 nvl(sum(b.month_data12),0) month_data12, nvl(sum(b.year_sum),0) year_sum
			    
			    from budg_cost_subj asj  
				left join executeValue  b
					on
						asj.group_id = b.group_id 
			    		and asj.hos_id = b.hos_id 
			    		and asj.copy_code = b.copy_code 
			    		and asj.budg_year = b.budg_year
			    		and b.subj_code like asj.subj_code || '%' 
			    where 
					asj.group_id = ${group_id} 
			    	AND asj.hos_id = ${hos_id} 
			    	AND asj.copy_code = ${copy_code} 
			    	AND asj.budg_year = ${budg_year}
			    	and asj.subj_code like '5302%'
			    group by asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,
			    		asj.subj_level,	b.summary,b.seq
	),
	baseData as ( <!-- 表格展示 数据  归集 -->
		select * from(
			select 
			    asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,asj.subj_level,
			    '上月结转' summary,1 seq,
			    sum(case when MONTH='01' then nvl(last_month_carried,0) else 0 end) month_data1,
			    sum(case when MONTH='02' then nvl(last_month_carried,0) else 0 end) month_data2,
			    sum(case when MONTH='03' then nvl(last_month_carried,0) else 0 end) month_data3,
			    sum(case when MONTH='04' then nvl(last_month_carried,0) else 0 end) month_data4,
			    sum(case when MONTH='05' then nvl(last_month_carried,0) else 0 end) month_data5,
			    sum(case when MONTH='06' then nvl(last_month_carried,0) else 0 end) month_data6,
			    sum(case when MONTH='07' then nvl(last_month_carried,0) else 0 end) month_data7,
			    sum(case when MONTH='08' then nvl(last_month_carried,0) else 0 end) month_data8,
			    sum(case when MONTH='09' then nvl(last_month_carried,0) else 0 end) month_data9,
			    sum(case when MONTH='10' then nvl(last_month_carried,0) else 0 end) month_data10,
			    sum(case when MONTH='11' then nvl(last_month_carried,0) else 0 end) month_data11,
			    sum(case when MONTH='12' then nvl(last_month_carried,0) else 0 end) month_data12 ,
			    0 as year_sum
		    from budg_cost_subj asj  
		    left join  BUDG_ELSE_COST bmc
		    	on  
		    		asj.group_id = bmc.group_id 
		    		and asj.hos_id = bmc.hos_id 
		    		and asj.copy_code = bmc.copy_code 
		    		and asj.budg_year = bmc.budg_year
		    		and bmc.subj_code like asj.subj_code || '%' 
		    		
		    where 
		    	asj.group_id = ${group_id} 
		    	AND asj.hos_id = ${hos_id} 
		    	AND asj.copy_code = ${copy_code} 
		    	AND asj.budg_year = ${budg_year}
		    	and asj.subj_code like '5302%'
		    group by asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,asj.subj_level
		    
			union  all
		    	select * from dataBudg
			union all
			
			select 
			    asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name,asj.subj_level,'结转下月' summary,3 seq,
			    sum(case when MONTH='01' then CARRIED_NEXT_MONTH else 0 end) month_data1,
			    sum(case when MONTH='02' then CARRIED_NEXT_MONTH else 0 end) month_data2,
			    sum(case when MONTH='03' then CARRIED_NEXT_MONTH else 0 end) month_data3,
			    sum(case when MONTH='04' then CARRIED_NEXT_MONTH else 0 end) month_data4,
			    sum(case when MONTH='05' then CARRIED_NEXT_MONTH else 0 end) month_data5,
			    sum(case when MONTH='06' then CARRIED_NEXT_MONTH else 0 end) month_data6,
			    sum(case when MONTH='07' then CARRIED_NEXT_MONTH else 0 end) month_data7,
			    sum(case when MONTH='08' then CARRIED_NEXT_MONTH else 0 end) month_data8,
			    sum(case when MONTH='09' then CARRIED_NEXT_MONTH else 0 end) month_data9,
			    sum(case when MONTH='10' then CARRIED_NEXT_MONTH else 0 end) month_data10,
			    sum(case when MONTH='11' then CARRIED_NEXT_MONTH else 0 end) month_data11,
			    sum(case when MONTH='12' then CARRIED_NEXT_MONTH else 0 end) month_data12 ,
			    0 as year_sum
			    from budg_cost_subj asj   
		    left join BUDG_ELSE_COST bmc
		    	on  
		    		asj.group_id = bmc.group_id 
		    		and asj.hos_id = bmc.hos_id 
		    		and asj.copy_code = bmc.copy_code 
		    		and asj.budg_year = bmc.budg_year
		    		and bmc.subj_code like asj.subj_code || '%'
		    where 
		    	asj.group_id = ${group_id} 
		    	AND asj.hos_id = ${hos_id} 
		    	AND asj.copy_code = ${copy_code} 
		    	AND asj.budg_year = ${budg_year}
		    	and asj.subj_code like '5302%'
		    group by asj.group_id,asj.hos_id,asj.copy_code,asj.budg_year,asj.subj_code,asj.subj_name ,asj.subj_level   
		    
		   union all
				select * from dataExe
		   union all
		
			select 
		    a.group_id,a.hos_id,a.copy_code,a.budg_year,a.subj_code,a.subj_name,a.subj_level,'进度' summary,5 seq,
		    case b.month_data1 when 0 then 0 else a.month_data1/b.month_data1 *100 end month_data1,
		    case b.month_data2 when 0 then 0 else a.month_data2/b.month_data2 *100 end month_data2,
		    case b.month_data3 when 0 then 0 else a.month_data3/b.month_data3 *100 end month_data3,
		    case b.month_data4 when 0 then 0 else a.month_data4/b.month_data4 *100 end month_data4,
		    case b.month_data5 when 0 then 0 else a.month_data5/b.month_data5 *100 end month_data5,
		    case b.month_data6 when 0 then 0 else a.month_data6/b.month_data6 *100 end month_data6,
		    case b.month_data7 when 0 then 0 else a.month_data7/b.month_data7 *100 end month_data7,
		    case b.month_data8 when 0 then 0 else a.month_data8/b.month_data8 *100 end month_data8,
		    case b.month_data9 when 0 then 0 else a.month_data9/b.month_data9 *100 end month_data9,
		    case b.month_data10 when 0 then 0 else a.month_data10/b.month_data10 *100 end month_data10,
		    case b.month_data11 when 0 then 0 else a.month_data11/b.month_data11 *100 end month_data11,
		    case b.month_data12 when 0 then 0 else a.month_data12/b.month_data12 *100 end month_data12,
		    case b.year_sum when 0 then 0 else a.year_sum/b.year_sum *100 end year_sum
		    from dataExe a
		    left join dataBudg b
		    	on
		    		a.group_id = b.group_id 
		    		and a.hos_id = b.hos_id 
		    		and a.copy_code = b.copy_code
		    		and a.budg_year = b.budg_year 
		    		and a.subj_code = b.subj_code
	     ) t
	   	 where                    
			t.group_id = #{group_id,jdbcType=INTEGER}
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND t.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
	   	order by t.budg_year,t.subj_code,t.seq
	),
	<!-- showData as (
		展示表格内数据   归集查询
		select a.group_id , a.hos_id , a.copy_code , a.budg_year , a.subj_code , a.subj_name ,
			 a.subj_level , b.summary ,  b.seq , nvl(sum(b.month_data1),0) month_data1, 
			 nvl(sum(b.month_data2),0) month_data2, nvl(sum(b.month_data3),0) month_data3,
			 nvl(sum(b.month_data4),0) month_data4, nvl(sum(b.month_data5),0) month_data5,
			 nvl(sum(b.month_data6),0) month_data6, nvl(sum(b.month_data7),0) month_data7,
			 nvl(sum(b.month_data8),0) month_data8, nvl(sum(b.month_data9),0) month_data9,
			 nvl(sum(b.month_data10),0) month_data10, nvl(sum(b.month_data11),0) month_data11,
			 nvl(sum(b.month_data12),0) month_data12, nvl(sum(b.year_sum),0) year_sum
		from  budg_cost_subj  a
		left  join 	baseData b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.budg_year
				and b.subj_code like a.subj_code || '%'
		where 
			a.subj_code like '5302%'
			and b.seq is not null
			<if test="subj_level != null and subj_level != ''">
				and a.subj_level = #{subj_level,jdbcType=INTEGER}
			</if>
 		group by a.group_id , a.hos_id , a.copy_code , a.budg_year , a.subj_code , a.subj_name ,
			 a.subj_level , b.summary ,  b.seq
		order by a.budg_year,a.subj_code,b.seq asc
	), -->
   	sumBudg as ( <!-- 预算值 合计 -->
   	<if test="budg_flag != -1 ">
		select null group_id ,null hos_id ,null copy_code , null budg_year , null subj_code , null subj_name , 
			null subj_level ,'预算值合计' summary ,  -1 seq ,
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 , nvl(sum(month_data3),0) month_data3 , 
			nvl(sum(month_data4),0) month_data4 , nvl(sum(month_data5),0) month_data5 , nvl(sum(month_data6),0) month_data6 , 
			nvl(sum(month_data7),0) month_data7 , nvl(sum(month_data8),0) month_data8 , nvl(sum(month_data9),0) month_data9 , 
			nvl(sum(month_data10),0) month_data10 , nvl(sum(month_data11),0) month_data11 , nvl(sum(month_data12),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum  
		from budgValue
		group by group_id,hos_id,copy_code,budg_year
		</if>
		<if test="budg_flag == -1 ">
		select null group_id ,null hos_id ,null copy_code ,  null budg_year , null subj_code ,null subj_name , 
			null subj_level , '预算值合计' summary , -1 seq ,
			0 month_data1 , 0 month_data2 ,0 month_data3 , 0 month_data4 , 0 month_data5 ,0 month_data6 ,0 month_data7 , 0 month_data8 ,0 month_data9 , 
			0 month_data10, 0 month_data11 ,0 month_data12 , 0 year_sum 
		from dual
		</if>
   ),
   sumExecute as ( <!-- 执行数据 合计 -->
  		<if test="flag != -1 ">
		select null group_id ,null hos_id ,null copy_code ,null budg_year , null subj_code ,null subj_name , 
			null subj_level , '执行数据合计' summary ,  -1 seq ,
			nvl(sum(month_data1),0) month_data1 , nvl(sum(month_data2),0) month_data2 , nvl(sum(month_data3),0) month_data3 , 
			nvl(sum(month_data4),0) month_data4 , nvl(sum(month_data5),0) month_data5 , nvl(sum(month_data6),0) month_data6 , 
			nvl(sum(month_data7),0) month_data7 , nvl(sum(month_data8),0) month_data8 , nvl(sum(month_data9),0) month_data9 , 
			nvl(sum(month_data10),0) month_data10 , nvl(sum(month_data11),0) month_data11 , nvl(sum(month_data12),0) month_data12 ,
			nvl(sum(year_sum),0) year_sum 
		from executeValue
		group by group_id,hos_id,copy_code,budg_year
		</if>
		<if test="flag == -1 ">
		select null group_id ,null hos_id ,null copy_code ,  null budg_year , null subj_code ,null subj_name , 
			null subj_level , '执行数据合计' summary , -1 seq ,
			0 month_data1 , 0 month_data2 ,0 month_data3 , 0 month_data4 , 0 month_data5 ,0 month_data6 ,0 month_data7 , 0 month_data8 ,0 month_data9 , 
			0 month_data10, 0 month_data11 ,0 month_data12 , 0 year_sum 
		from dual
		</if>
   )
   		<!-- 预算值 合计行 -->
   		select * from sumBudg
	union all
		<!-- 执行数据 合计行 -->
		select * from sumExecute
	union all
		<!-- 总进度 -->
		select a.group_id , a.hos_id , a.copy_code , a.budg_year , a.subj_code , a.subj_name ,
			 a.subj_level , '总进度' summary ,  null seq ,
			case a.month_data1 when 0 then 0 else nvl(b.month_data1,0)/a.month_data1*100 end month_data1 ,
		    case a.month_data2 when 0 then 0 else nvl(b.month_data2,0)/a.month_data2*100 end month_data2 ,
		    case a.month_data3 when 0 then 0 else nvl(b.month_data3,0)/a.month_data3*100 end month_data3 ,
		    case a.month_data4 when 0 then 0 else nvl(b.month_data4,0)/a.month_data4*100 end month_data4 ,
		    case a.month_data5 when 0 then 0 else nvl(b.month_data5,0)/a.month_data5*100 end month_data5 ,
		    case a.month_data6 when 0 then 0 else nvl(b.month_data6,0)/a.month_data6*100 end month_data6 ,
		    case a.month_data7 when 0 then 0 else nvl(b.month_data7,0)/a.month_data7*100 end month_data7 ,
		    case a.month_data8 when 0 then 0 else nvl(b.month_data8,0)/a.month_data8*100 end month_data8 ,
		    case a.month_data9 when 0 then 0 else nvl(b.month_data9,0)/a.month_data9*100 end month_data9 ,
		    case a.month_data10 when 0 then 0 else nvl(b.month_data10,0)/a.month_data10*100 end month_data10 ,
		    case a.month_data11 when 0 then 0 else nvl(b.month_data11,0)/a.month_data11*100 end month_data11 ,
		    case a.month_data12 when 0 then 0 else nvl(b.month_data12,0)/a.month_data12*100 end month_data12 ,
		    case a.year_sum when 0 then 0 else nvl(b.year_sum,0)/a.year_sum*100 end year_sum 
		from sumBudg   a
		left join sumExecute b
			on
	    		a.seq = b.seq 
		
	union all	
		select * from baseData  where seq is not null
	</select>
	
	
	<!-- 查询 所查 预算年度 是否有 其他支出预算执行数据 ( flag 标识 (-1:表示 所查预算年度 没有执行数据) 解决  没有执行数据，前台合计行 展现数据 窜行问题) -->
	<select id="queryElseExecuteDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) FROM BUDG_ELSE_COST_EXECUTE 
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND year = #{year,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 所查 预算年度 是否有 其他支出预算数据 ( flag 标识 (-1:表示 所查预算年度 没有数据) 解决  没有数据，前台合计行 展现数据 窜行问题) -->
	<select id="queryElseBudgDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) FROM BUDG_ELSE_COST 
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND budg_year = #{year,jdbcType=VARCHAR}
	</select>
	<!--费用汇总 查询费用数据是否有未确认记录  -->
	<select id="queryYearDeptExpensesDataExistNoCheck" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
	   select count(1)
		from BUDG_EXPENSE_APPLY
		where           
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND budg_year = #{year,jdbcType=VARCHAR}
		and state!='03' 
	</select>
	<!--费用汇总 查询费用数据对应的科目在科室成本数据中是否已生成 -->
	<select id="queryYearDeptSubjDataExist" resultType="java.util.Map"  parameterType="java.util.Map" >
	  
	  select b.subj_code || ' ' || c.subj_name  as subj_code
        from 
        (select distinct PAYMENT_ITEM_ID
           from BUDG_EXPENSE_APPLY 
           where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
        ) a
        left join 
        (
        select PAYMENT_ITEM_ID,subj_code
        from BUDG_PAYMENT_ITEM_COST_SHIP
        where 
        	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
        ) b on a.PAYMENT_ITEM_ID=b.PAYMENT_ITEM_ID
        left join 
        (
        select subj_code,subj_name from BUDG_COST_SUBJ
         where 
         	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
        ) c on b.subj_code =c.subj_code

        where exists (
        select 1 from BUDG_MED_COST_DY d
         where 
         	d.group_id = #{group_id,jdbcType=INTEGER}
			AND d.hos_id = #{hos_id,jdbcType=INTEGER}
			AND d.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND d.budg_year = #{year,jdbcType=VARCHAR}
            and d.subj_code =b.subj_code
        )
	</select>
	<select id="queryMonth" resultType="java.util.Map"  parameterType="java.util.Map" >
	
		SELECT dy.budg_year,dy.subj_code,bcs.subj_name,bsd.value_name as state_name,
		dy.budg_value,dy.remark,dy.state,
		<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
			dy.dept_id,abc.dept_code,abc.dept_name,
		</if>
		dy.fu_chker,dy.fu_chk_time,su.user_name as fu_chk_name,dy.fu_chk_op,
		grow_rate,base_value,su1.user_name as fi_chk_name,dy.fi_chk_op,fi_chk_time
		FROM ${tableName} dy
		left join BUDG_COST_SUBJ bcs
		on dy.group_id=bcs.group_id
		and dy.hos_id=bcs.hos_id
		and dy.copy_code=bcs.copy_code
		and dy.budg_year=bcs.budg_year
		and dy.subj_code=bcs.subj_code 
		
		<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
		left join  (
			select ada.dept_id, hd.dept_code,hd.dept_name 
			from acc_dept_attr ada
			left join hos_dept hd on ada.group_id = hd.group_id
			and ada.hos_id = hd.hos_id
			and ada.dept_id = hd.dept_id
			and hd.is_stop = 0 
			where ada.group_id =#{group_id,jdbcType=INTEGER}
			and ada.hos_id =#{hos_id,jdbcType=INTEGER}
			and ada.is_budg = 1
		) abc on dy.dept_id=abc.dept_id
		</if>
		left join budg_sys_dict bsd on
		f_code = 'STATE_A' and dy.state=bsd.value_code
		left join sys_user su on
		dy.group_id=su.group_id
		and dy.hos_id=su.hos_id
		and dy.fu_chker=su.user_id
		left join sys_user su1 on
		dy.group_id=su1.group_id
		and dy.hos_id=su1.hos_id
		and dy.fi_chker=su1.user_id
		where                    
		dy.group_id = #{group_id,jdbcType=INTEGER}
		AND dy.hos_id = #{hos_id,jdbcType=INTEGER}
		AND dy.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="budg_year != null and budg_year != ''">
		AND dy.budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND dy.subj_code like #{subj_code,jdbcType=VARCHAR} || '%'
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dy.dept_id = #{dept_id,jdbcType=VARCHAR}
		</if>
		<if test="state != null and state != ''">
		AND dy.state = #{state,jdbcType=VARCHAR}
		</if>
		
	</select>
	
	<insert id="addMonth" useGeneratedKeys="true" >
	
		INSERT INTO ${tableName} (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
			dept_id
			,
			</if>
			subj_code
			,
			budg_value
			,
			base_value
			,
			grow_rate
			,
			remark
			,
			state
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
			#{dept_id,jdbcType=INTEGER}
			,
			</if>
			#{subj_code,jdbcType=VARCHAR}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{base_value,jdbcType=INTEGER}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{state,jdbcType=INTEGER}
		)
	
	</insert>
	
	<delete id="delMonth" parameterType="java.util.List">
		DELETE FROM ${tableName} WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
			
			</foreach>
	</delete>
	
	<delete id="delHosMonth" parameterType="java.util.List">
		DELETE FROM ${tableName} WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
			
			</foreach>
	</delete>
	
	<!-- 	审核销审 -->
	<update id="auditOrUnAudit" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ${tableName} set
				FU_CHKER = #{item.checker,jdbcType=INTEGER}
				,
				FU_CHK_TIME = #{item.check_date,jdbcType=DATE}
				,
				state = #{item.state,jdbcType=VARCHAR}
				,
				fu_chk_op=#{item.op,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 确认取消确认 -->
	<update id="affiOrUnAffi" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ${tableName} set
				FI_CHKER = #{item.checker,jdbcType=INTEGER}
				,
				FI_CHK_TIME = #{item.check_date,jdbcType=DATE}
				,
				state = #{item.state,jdbcType=VARCHAR}
				,
				fi_chk_op=#{item.op,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 状态查询  （校验数据专用） -->
	<select id="queryBudgMedCostState" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT count(0)  FROM ${tableName} 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="tableName != null and tableName =='BUDG_MED_COST_DY'">
			AND dept_id=#{dept_id}
			</if>
			and subj_code=#{subj_code}
			and state = #{state,jdbcType=VARCHAR}
	</select>
	
	<update id="updateMonth" parameterType="java.util.Map">
	
		UPDATE ${tableName} 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="budg_value != null and budg_value != ''">
		budg_value = #{budg_value,jdbcType=INTEGER}
		,
		</if>
		<if test="base_value != null and base_value != ''">
		base_value = #{base_value,jdbcType=INTEGER}
		,
		</if>
		<if test="grow_rate != null and grow_rate != ''">
		grow_rate = #{grow_rate,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="subj_code != null and subj_code != ''">
		subj_code = #{subj_code,jdbcType=INTEGER}
		,
		</if>
		<if test="subj_code != null and subj_code != ''">
		remark = #{remark,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		
		</where>  
	</update>
	<!-- 医院 医疗支出科室汇总 删除全部数据 -->
	<delete id="deleteCollectYear" parameterType="java.util.Map">
		delete from BUDG_MED_COST_HY
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER} and 
		hos_id = #{hos_id,jdbcType=INTEGER} and 
		copy_code = #{copy_code,jdbcType=VARCHAR} and 
		budg_year = #{year,jdbcType=VARCHAR}
		
	</delete>
	<!-- 医院 医疗支出科室汇总 添加科室数据 -->
	<insert id="colletMonth" parameterType="java.util.Map" >
		
		insert into BUDG_MED_COST_HY (group_id,hos_id,copy_code,budg_year,subj_code,budg_value,state)
  		select group_id,hos_id,copy_code,budg_year,subj_code,sum(budg_value),'01'
   		from BUDG_MED_COST_DY
   		WHERE 
		group_id = #{group_id,jdbcType=INTEGER} and 
		hos_id = #{hos_id,jdbcType=INTEGER} and 
		copy_code = #{copy_code,jdbcType=VARCHAR} and 
		budg_year = #{year,jdbcType=VARCHAR}  
   		group by group_id,hos_id,copy_code,budg_year,subj_code 
	</insert>
	<!-- 科室 医疗支出费用汇总 -->
	<insert id="collectMedMonthExpenses" parameterType="java.util.Map" >
		
	  insert into BUDG_MED_COST_DY (group_id,hos_id,copy_code,budg_year,dept_id,subj_code,budg_value,state)
      select a.group_id ,a.hos_id,a.copy_code ,a.budg_year,a.apply_dept ,b.subj_code ,sum(sum_budg) sum_budg,'01'
      from (

      select group_id,hos_id,copy_code,budg_year,apply_dept,payment_item_id ,sum(budg_amount) sum_budg
      from BUDG_EXPENSE_APPLY
      group by group_id,hos_id,copy_code,budg_year,apply_dept,payment_item_id
      ) a
      join 
       BUDG_PAYMENT_ITEM_COST_SHIP b
      on a.group_id=b.group_id 
          and a.hos_id =b.hos_id
          and a.copy_code=b.copy_code
          and a.budg_year=b.budg_year
          and a.payment_item_id=b.PAYMENT_ITEM_ID
          
       where a.group_id = #{group_id,jdbcType=INTEGER}
         and a.hos_id = #{hos_id,jdbcType=INTEGER}
         and a.copy_code = #{copy_code,jdbcType=VARCHAR}
         and a.budg_year = #{year,jdbcType=VARCHAR}  
      group by a.group_id ,a.hos_id,a.copy_code ,a.budg_year,a.apply_dept ,b.subj_code
      
	</insert>
	<!-- 医院 医疗支出科室汇总 检查科室数据是否有未确认记录-->
	<select id="queryYearDeptDataExistNoCheck" resultType="java.lang.Integer" parameterType="java.util.Map" >
	
		SELECT count(1)
		from BUDG_MED_COST_DY 
		where
			group_id = #{group_id,jdbcType=INTEGER} and 
			hos_id = #{hos_id,jdbcType=INTEGER} and 
			copy_code = #{copy_code,jdbcType=VARCHAR} and 
			budg_year = #{year,jdbcType=VARCHAR} and
			state !='03'
			
	</select>
	<!-- 医院 医疗支出科室汇总 检查医院数据有记录-->
	<select id="queryYearHosDataExist" resultType="java.lang.Integer" parameterType="java.util.Map" >
	
		SELECT count(1)
		from BUDG_MED_COST_HY 
		where
			group_id = #{group_id,jdbcType=INTEGER} and 
			hos_id = #{hos_id,jdbcType=INTEGER} and 
			copy_code = #{copy_code,jdbcType=VARCHAR} and 
			budg_year = #{year,jdbcType=VARCHAR}
			
	</select>
	<select id="queryImportDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(0)
		FROM BUDG_MED_COST_DY 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteMedMonthExpenses" parameterType="java.util.Map" >
	
		DELETE FROM BUDG_MED_COST_DY WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
			and exists(
	select 1
        from 
        (select distinct PAYMENT_ITEM_ID
           from BUDG_EXPENSE_APPLY 
           where group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
        ) a
        join 
        (
        select PAYMENT_ITEM_ID,subj_code
        from BUDG_PAYMENT_ITEM_COST_SHIP
        where 
        	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
        ) b on a.PAYMENT_ITEM_ID=b.PAYMENT_ITEM_ID
		where BUDG_MED_COST_DY.subj_code =b.subj_code
       )
	</delete>
</mapper>

