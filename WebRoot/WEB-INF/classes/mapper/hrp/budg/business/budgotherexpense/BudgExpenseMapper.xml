<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.budgotherexpense.BudgExpenseMapper">
	
	<resultMap id="budgExpense" type="com.chd.hrp.budg.entity.BudgExpense">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_name" column="dept_name"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="cost_budg" column="cost_budg"/>
	<result property="remain_amount" column="remain_amount"/>
	<result property="exe_amount" column="exe_amount"/>
	<result property="remark" column="remark"/>
	</resultMap>
		
	<resultMap id="budgExpenseMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_code" column="payment_item_code"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="cost_budg" column="cost_budg"/>
	<result property="remark" column="remark"/>
	<result property="count" column="count"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_EXPENSE (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			dept_no
			,
			payment_item_id
			,
			cost_budg
			,
			remark
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{dept_no,jdbcType=INTEGER}
			,
			#{payment_item_id,jdbcType=INTEGER}
			,
			#{cost_budg,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
		)
	
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_EXPENSE (
		    group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			dept_no
			,
			payment_item_id
			,
			cost_budg
			,
			remark
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.month,jdbcType=VARCHAR}
				,
				#{item.dept_id,jdbcType=INTEGER}
				,
				#{item.dept_no,jdbcType=INTEGER}
				,
				#{item.payment_item_id,jdbcType=INTEGER}
				,
				#{item.cost_budg,jdbcType=INTEGER}
				,
				#{item.remark,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	
	<insert id="addGenerateBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_EXPENSE (
		    group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			dept_no
			,
			payment_item_id
			,
			cost_budg
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.month,jdbcType=VARCHAR}
				,
				#{item.dept_id,jdbcType=INTEGER}
				,
				#{item.dept_no,jdbcType=INTEGER}
				,
				#{item.payment_item_id,jdbcType=INTEGER}
				,
				#{item.cost_budg,jdbcType=INTEGER}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_expense 
		SET 
			cost_budg = #{cost_budg,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_expense 
			SET
				cost_budg = #{item.cost_budg,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				
				AND month = #{item.month,jdbcType=VARCHAR}
				
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				
				AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_expense 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_expense 
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
			
			AND month = #{item.month,jdbcType=VARCHAR}
			
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			
			AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="budgExpenseMap" >
	
		SELECT 
			bee.group_id,
			bee.hos_id,
			bee.copy_code,
			bee.budg_year,
			bee.month,
			bee.dept_id,
			bee.dept_no,
			hdd.dept_name,
			bee.payment_item_id,
			bpid.payment_item_name,
			bee.cost_budg,
			bee.remark
		FROM BUDG_EXPENSE bee
		LEFT JOIN hos_dept_dict hdd
		ON bee.group_id = hdd.group_id 
		   and bee.hos_id = hdd.hos_id
		   and bee.dept_id = hdd.dept_id
		LEFT JOIN budg_payment_item_dict bpid
		ON bee.group_id = bpid.group_id 
		   and bee.hos_id = bpid.hos_id
		   and bee.payment_item_id = bpid.payment_item_id
		WHERE                     
		bee.group_id = #{group_id,jdbcType=INTEGER}
		
		AND bee.hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND bee.copy_code = #{copy_code,jdbcType=VARCHAR}
		
		<if test="budg_year != null and budg_year != ''">
		AND bee.budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND bee.month = #{month,jdbcType=VARCHAR} 
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND bee.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND bee.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		order by bee.budg_year,bee.dept_id,bee.month,bee.payment_item_id 
	</select>
	
	<select id="queryDataByCode" parameterType="java.util.Map" resultMap="budgExpenseMap" >
	
		SELECT 
			bee.group_id,
			bee.hos_id,
			bee.copy_code,
			bee.budg_year,
			bee.month,
			bee.dept_id,
			bee.dept_no,
			hdd.dept_name,
			bee.payment_item_id,
			bpid.payment_item_name,
			bee.cost_budg,
			bee.remark
		FROM BUDG_EXPENSE bee
		LEFT JOIN hos_dept_dict hdd
		ON bee.group_id = hdd.group_id 
		   and bee.hos_id = hdd.hos_id
		   and bee.dept_id = hdd.dept_id
		LEFT JOIN budg_payment_item_dict bpid
		ON bee.group_id = bpid.group_id 
		   and bee.hos_id = bpid.hos_id
		   and bee.payment_item_id = bpid.payment_item_id
		WHERE                     
			bee.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bee.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bee.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bee.budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND bee.month = #{month,jdbcType=VARCHAR}
			
			AND bee.dept_id = #{dept_id,jdbcType=INTEGER}
			
			AND bee.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		
	</select>
	
	<select id="queryByCode" resultMap="budgExpense"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			dept_no
			,
			payment_item_id
			,
			cost_budg
			,
			remark
		FROM budg_expense 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			budg_year = #{budg_year,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR}   and 
			dept_id = #{dept_id,jdbcType=INTEGER}   and 
			payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	</select>
	
	<select id="queryByUniqueness" resultMap="budgExpense"  parameterType="java.util.Map" >
	
		SELECT 
		 	group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			dept_no
			,
			payment_item_id
			,
			cost_budg
			,
			remark
		FROM BUDG_EXPENSE 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			budg_year = #{budg_year,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR}   and 
			dept_id = #{dept_id,jdbcType=INTEGER}   and 
			payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	</select>
	
	<select id="queryExists" resultMap="budgExpense"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			dept_id
			,
			dept_no
			,
			payment_item_id
			,
			cost_budg
			,
			remark
		FROM BUDG_EXPENSE 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			budg_year = #{budg_year,jdbcType=VARCHAR}   and 
			month = #{month,jdbcType=VARCHAR}   and 
			dept_id = #{dept_id,jdbcType=INTEGER}   and 
			payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	</select>
	
<!-- 	查询定额数据  匹配月份使用 -->
	<select id="queryDataFromFix" resultMap="budgExpenseMap"  parameterType="java.util.Map" >
		select 
		   a.group_id,
	       a.hos_id,
	       a.copy_code,
	       a.budg_year,
	       a.dept_id,
	       a.dept_no,
	       a.payment_item_id,
	       sum(a.fix_amount) cost_budg
	    from budg_exp_fix_amount a
		where 
		  a.group_id = #{group_id,jdbcType=INTEGER}   and 
		  a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		  a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		  a.budg_year = #{budg_year,jdbcType=VARCHAR} 
		group by a.group_id,a.hos_id,a.copy_code,a.budg_year,a.dept_id, a.dept_no,a.payment_item_id
				
	</select>
	
<!-- 	查询申请及其他费用数据  -->
	<select id="queryDataFromApplyAndElse" resultMap="budgExpenseMap"  parameterType="java.util.Map" >
		select a.group_id,
		       a.hos_id,
		       a.copy_code,
		       a.budg_year,
		       a.month,
		       b.apply_dept dept_id,
		       c.dept_no,
		       b.payment_item_id,
		       sum(b.budg_amount) cost_budg
		  from budg_exp_apply_detail a
		  left join budg_expense_apply b
		    on a.group_id = b.group_id
		   and a.hos_id = b.hos_id
		   and a.copy_code = b.copy_code
		   and a.apply_id = b.apply_id
		  left join hos_dept_dict c
		    on b.group_id = c.group_id
		   and b.hos_id = c.hos_id
		   and b.apply_dept = c.dept_id
		  WHERE 
			  a.group_id = #{group_id,jdbcType=INTEGER}   and 
			  a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			  a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			  a.budg_year = #{budg_year,jdbcType=VARCHAR} 
		 group by a.group_id,a.hos_id,a.copy_code, a.budg_year,a.month,b.apply_dept,c.dept_no,b.payment_item_id
		
		UNION ALL
		
		(select d.group_id,
		         d.hos_id,
		         d.copy_code,
		         d.budg_year,
		         d.month,
		         d.dept_id,
		         d.dept_no,
		         d.payment_item_id,
		         sum(d.cost_budg) cost_budg
		 from budg_expense_else d
		 WHERE 
		  d.group_id = #{group_id,jdbcType=INTEGER}   and 
		  d.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		  d.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		  d.budg_year = #{budg_year,jdbcType=VARCHAR}   
		 group by d.group_id, d.hos_id, d.copy_code,d.budg_year,d.month,d.dept_id,d.dept_no,d.payment_item_id
		)				
	</select>
	
<!-- 	查询支出项目在三张表中是否重复出现编制 -->
	<select id="queryExistsPaymentItem" resultMap="budgExpenseMap"  parameterType="java.util.Map" >
	
		with temp4 as (
			 SELECT a.budg_year, a.payment_item_id
			    FROM budg_expense_apply a
			 WHERE                     
				a.group_id = #{group_id,jdbcType=INTEGER}   and 
				a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
				a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
				a.budg_year = #{budg_year,jdbcType=VARCHAR} 
			 GROUP BY a.budg_year, a.payment_item_id
			 UNION ALL 
			 (SELECT a.budg_year, a.payment_item_id
			    FROM BUDG_EXP_FIX_AMOUNT a
			  WHERE                     
				a.group_id = #{group_id,jdbcType=INTEGER}   and 
				a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
				a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
				a.budg_year = #{budg_year,jdbcType=VARCHAR} 
			  GROUP BY a.budg_year, a.payment_item_id)
			  
			 UNION ALL 
			 (SELECT a.budg_year, a.payment_item_id
			    FROM budg_expense_else a
			  WHERE                     
				a.group_id = #{group_id,jdbcType=INTEGER}   and 
				a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
				a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
				a.budg_year = #{budg_year,jdbcType=VARCHAR} 
			  GROUP BY a.budg_year, a.payment_item_id))
			
		select 
		  temp4.budg_year,
	      temp4.payment_item_id,
	      bpi.payment_item_name,
	      count(1) count
		from temp4
		left join budg_payment_item bpi
		on temp4.payment_item_id = bpi.payment_item_id
		group by temp4.budg_year, temp4.payment_item_id, bpi.payment_item_name
	</select>
	
	<!-- 校验数据 是否存在-->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1)
		FROM BUDG_EXPENSE 
		where 
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		
	</select>
	
	<!-- 查询 科室基本信息(根据编码 匹配ID用) -->
	<select id="queryDeptData" parameterType="java.util.Map" resultMap="budgExpenseMap" >
	
		SELECT 
			dept_id,
			dept_no ,
			dept_code ,
			dept_name
		FROM HOS_DEPT_DICT
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			and is_stop = 0
		order by dept_code asc
	</select>
	<!-- 查询 支出项目基本信息(根据编码 匹配ID用) -->
	<select id="queryPayItemData" parameterType="java.util.Map" resultMap="budgExpenseMap" >
	
		SELECT 
			payment_item_id,
			payment_item_no,
			payment_item_code ,
			payment_item_name
		FROM BUDG_PAYMENT_ITEM_DICT
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			and is_stop = 0
		order by payment_item_code asc
	</select>
	
	<select id="queryBudgOtherExpenseCount" parameterType="map" resultMap="budgExpense">
		SELECT 
			bee.group_id,
			bee.hos_id,
			bee.copy_code,
			bee.budg_year,
			bee.month,
			bee.dept_id,
			bee.dept_no,
			hdd.dept_name,
			bee.payment_item_id,
			bpid.payment_item_name,
			bee.cost_budg,
			bee.remain_amount,
			bee.exe_amount,
			bee.remark
		FROM BUDG_EXPENSE bee
		LEFT JOIN hos_dept_dict hdd
		ON bee.group_id = hdd.group_id 
		   and bee.hos_id = hdd.hos_id
		   and bee.dept_id = hdd.dept_id
		LEFT JOIN budg_payment_item_dict bpid
		ON bee.group_id = bpid.group_id 
		   and bee.hos_id = bpid.hos_id
		   and bee.payment_item_id = bpid.payment_item_id
		WHERE                     
		bee.group_id = #{group_id,jdbcType=INTEGER}
		
		AND bee.hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND bee.copy_code = #{copy_code,jdbcType=VARCHAR}
		
		<if test="budg_year != null and budg_year != ''">
		AND bee.budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND bee.month = #{month,jdbcType=VARCHAR} 
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND bee.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND bee.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		order by bee.budg_year,bee.dept_id,bee.month,bee.payment_item_id 
	</select>
	
	<update id="countBudgOtherExpense" parameterType="map">
	
	</update>
</mapper>

