<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper 
	namespace="com.chd.hrp.budg.dao.business.budgotherexpense.BudgExpenseApplyMapper">
	<resultMap id="budgExpenseApply" type="com.chd.hrp.budg.entity.BudgExpenseApply">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="budg_year" column="budg_year" />
		<result property="apply_id" column="apply_id" />
		<result property="payment_item_id" column="payment_item_id" />
		<result property="payment_item_no" column="payment_item_no" />
		<result property="budg_amount" column="budg_amount" />
		<result property="apply_dept" column="apply_dept" />
		<result property="apply_dept_no" column="apply_dept_no" />
		<result property="apply_emp" column="apply_emp" />
		<result property="apply_emp_no" column="apply_emp_no" />
		<result property="apply_emp_name" column="apply_emp_name" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="checker_emp_name" column="checker_emp_name" />
		<result property="check_date" column="check_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="remark" column="remark" />
		<result property="affi_emp" column="affi_emp" />
		<result property="affi_emp_name" column="affi_emp_name" />
		<result property="affi_date" column="affi_date" />
	</resultMap>

	<resultMap id="budgExpenseApplyMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="budg_year" column="budg_year" />
		<result property="apply_id" column="apply_id" />
		<result property="payment_item_id" column="payment_item_id" />
		<result property="payment_item_no" column="payment_item_no" />
		<result property="payment_item_code" column="payment_item_code"/>
		<result property="payment_item_name" column="payment_item_name"/>
		<result property="budg_amount" column="budg_amount" />
		<result property="apply_dept" column="apply_dept" />
		<result property="apply_dept_code" column="apply_dept_code" />
		<result property="apply_dept_name" column="apply_dept_name" />
		<result property="apply_emp" column="apply_emp" />
		<result property="apply_emp_code" column="apply_emp_code" />
		<result property="apply_emp_name" column="apply_emp_name" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="checker_emp_code" column="checker_emp_code" />
		<result property="checker_emp_name" column="checker_emp_name" />
		<result property="check_date" column="check_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="remark" column="remark" />
		<result property="affi_emp" column="affi_emp" />
		<result property="affi_emp_name" column="affi_emp_name" />
		<result property="affi_date" column="affi_date" />
	</resultMap>


	<resultMap type="java.util.Map" id="budgItem">
		<result property="id" column="id" />
		<result property="text" column="text" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="budgPaymentItem">
		<result property="payment_item_id" column="payment_item_id" />
		<result property="payment_item_no" column="payment_item_no" />
		<result property="payment_item_code" column="payment_item_code" />
		<result property="payment_item_name" column="payment_item_name" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="budgEmp">
		<result property="emp_id" column="emp_id" />
		<result property="emp_no" column="emp_no" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="budgDept">
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
	</resultMap>
	
	<!-- 支出项目 下拉框 -->
	<select id="queryBudgPaymentItem" resultMap="budgItem">
		select
		a.payment_item_id ||'.'||a.payment_item_no as id,
		a.payment_item_code || ' ' || a.payment_item_name as text
		from BUDG_PAYMENT_ITEM_DICT a
		where 
		<if  test="is_read != null  and is_read != '' or is_write != null  and is_write != '' or read_or_write != null  and read_or_write != ''">
		 to_char(a.payment_item_id) in (select b.perm_code from V_USER_DATA_PERM b 
			where b.group_id = #{group_id,jdbcType=INTEGER} and  b.hos_id = #{hos_id,jdbcType=INTEGER}
			and b.user_id = #{user_id,jdbcType=INTEGER} and b.table_code = 'BUDG_PAYMENT_ITEM_DICT' 
		
          <if  test="is_read != null  and is_read != ''">
                and b.is_read = 1
          </if>
          <if  test="is_write != null and is_write != ''">
                 and b.is_write = 1 
          </if>
           <if  test="read_or_write != null and read_or_write != ''">
                 and  (b.is_write = 1 or b.is_read = 1 )
          </if>
			)
        </if>
		and a.is_stop = 0
		and a.is_fresh = 1
		and a.is_last = 1
		and a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		<if test="key != null and key != ''">
			and (
			a.payment_item_code like '${key}%' or
			a.payment_item_name like '%${key}%' or
			a.spell_code like '%${key}%' or
			a.wbx_code like '%${key}%'
			)
		</if>
		order by id
	</select>
	<!-- 申报人员下拉框 -->
	<select id="queryEmpDict" resultMap="budgItem">
		SELECT
		emp_id||'.'||emp_no id,
		emp_code||' '||emp_name text
		FROM HOS_EMP_DICT
		where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		<if test="key != null and key != ''">
			and (
			emp_id like '${key}%' or
			emp_code like '${key}%' or
			emp_name like '%${key}%' or
			spell_code like '%${key}%' or
			wbx_code like '%${key}%'
			)
		</if>
		and is_stop = 0
		order by emp_id
	</select>
	
	<resultMap type="map" id="budgEmpMap">
		<result property="emp_id" column="emp_id"/>
		<result property="emp_no" column="emp_no"/>
		<result property="emp_code" column="emp_code"/>
		<result property="emp_name" column="emp_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
	</resultMap>
	
	<select id="queryEmpDictByCode" resultMap="budgEmpMap">
		SELECT
		t.emp_id,
    	t.emp_no,
		t.emp_code,
	    t.emp_name,
	    t.dept_id,
	    t.dept_no,
	    d.dept_code,
	    d.dept_name
		FROM HOS_EMP_DICT t
	    left join hos_dept_dict d
	    on t.group_id = d.group_id
	    and t.hos_id = d.hos_id
	    and t.dept_id = d.dept_id
	    and t.dept_no = d.dept_no
		where
		t.group_id = #{group_id}
		and t.hos_id = #{hos_id}
		 
		 and t.emp_id = #{emp_id}
		 <if test="emp_code != null and emp_code != ''">
		 and t.emp_code = #{emp_code}
		 </if>
		and t.is_stop = 0
		order by t.emp_id
	</select>
	
	<select id="queryBudgCostDutyDept" resultMap="budgItem">
		select distinct 
			a.duty_dept_id id,
	    	b.dept_code ||' '||b.dept_name as text
		FROM BUDG_COST_DUTY_DEPT a
		INNER JOIN HOS_DEPT_DICT b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.duty_dept_id = b.dept_id
			and b.is_stop = 0
		where 
			a.group_id = #{group_id}
		    and a.hos_id = #{hos_id}
		    and a.copy_code = #{copy_code}
		    <if test="budg_year != null and budg_year != ''">
		     and a.budg_year = #{budg_year}
		    </if>
		    <if test="key != null and key != ''">
			and (
			b.dept_code like '${key}%' or
			b.dept_name like '%${key}%' or
			b.spell_code like '%${key}%' or
			b.wbx_code like '%${key}%'
			)
		</if>
	</select>
	
	<select id="query" parameterType="java.util.Map"
		resultMap="budgExpenseApplyMap">
		with temp as (
			select
		    a.group_id,a.hos_id,a.copy_code,a.budg_year,a.apply_id,a.payment_item_id,
		    a.payment_item_no,c.payment_item_code,c.payment_item_name,
		    a.budg_amount,a.apply_dept,b.dept_code as apply_dept_code,b.dept_name as apply_dept_name,
		    a.apply_emp,d.emp_code as apply_emp_code,d.emp_name as apply_emp_name,
		    a.make_date,
		    
		    a.checker,e.emp_code as checker_emp_code,e.emp_name as checker_emp_name,a.check_date,
		    a.affi_emp,e1.emp_name as affi_emp_name,a.affi_date,
		   	a.remark,
		    
		    a.state,f.value_name as state_name
		    from BUDG_EXPENSE_APPLY a
		    left join HOS_DEPT_DICT b
		    on a.group_id = b.group_id
		    and a.hos_id = b.hos_id
		    and a.apply_dept = b.dept_id
		    and b.is_stop = 0
		    left join BUDG_PAYMENT_ITEM_DICT c
		    on a.group_id = c.group_id
		    and a.hos_id = c.hos_id
		    and a.copy_code = c.copy_code
		    and a.payment_item_id = c.payment_item_id
		    <!--and a.payment_item_no = c.payment_item_no-->
		    and c.is_stop = 0
		    left join HOS_EMP_DICT d
		    on a.group_id = d.group_id 
		    and a.hos_id = d.hos_id
		    and a.apply_emp = d.emp_id
			and d.is_stop = 0
		   left join (
              select su.user_id,su.emp_code,e.emp_name from sys_user su left join HOS_EMP_DICT e
              on su.group_id=e.group_id and su.hos_id=e.hos_id and su.emp_code=e.emp_id
              where su.group_id=#{group_id} and su.hos_id=#{hos_id} and e.is_stop=0
         ) e on  a.checker = e.user_id 
         
          left join (
              select su.user_id,su.emp_code,e.emp_name from sys_user su left join HOS_EMP_DICT e
              on su.group_id=e.group_id and su.hos_id=e.hos_id and su.emp_code=e.emp_id
              where su.group_id=#{group_id} and su.hos_id=#{hos_id} and e.is_stop=0
         ) e1 on  a.affi_emp = e1.user_id 
			
			
		    left join BUDG_SYS_DICT f 
			on a.state = f.value_code
			and f.f_code = 'STATE_A'
			where a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.budg_year = #{budg_year}
			<if test="apply_date_b != null and apply_date_b != '' and apply_date_e != null and apply_date_e != ''">
			and a.make_date between to_date(#{apply_date_b},'yyyy/MM/dd') and to_date(#{apply_date_e},'yyyy/MM/dd')
			</if>
			<if test="apply_dept != null and apply_dept !=''">
			and a.apply_dept = #{apply_dept}
			</if>
			<if test="duty_dept_id != null and duty_dept_id !=''">
			and a.apply_dept in(
				select bcdd.dept_id from BUDG_COST_DUTY_DEPT bcdd 
				where bcdd.group_id = #{group_id}
				and bcdd.hos_id = #{hos_id}
				and bcdd.copy_code = #{copy_code}
				and bcdd.budg_year = #{budg_year}
				and bcdd.duty_dept_id = #{duty_dept_id}
			)
			</if>
			<if test="payment_item_id != null and payment_item_id !=''">
			and a.payment_item_id = #{payment_item_id}
			</if>
			<if test="state != null and state !=''">
			and a.state = #{state}
			</if>
			and exists(
           select 1 from v_user_data_perm b where
            a.group_id=b.group_id 
            and a.hos_id=b.hos_id 
            and to_char(a.apply_dept) = b.perm_code
            and user_id=#{user_id}
            AND TABLE_CODE = upper('HOS_DEPT_DICT')
            and b.is_read = 1
         
       )
       and exists(
           select 1 from v_user_data_perm b where
            a.group_id=b.group_id 
            and a.hos_id=b.hos_id 
            and to_char(a.payment_item_id) = b.perm_code
            and user_id=#{user_id}
            AND TABLE_CODE = upper('BUDG_PAYMENT_ITEM_DICT')
            and b.is_read = 1
         
       )
		)
		select 
		null group_id,
		null hos_id,
		null copy_code,
		null budg_year,
		'合计' apply_id,
		null ayment_item_id,
	    null payment_item_no,
	    null payment_item_code,
	    null payment_item_name,
	    sum(nvl(budg_amount,0)) budg_amount,
	    null apply_dept,
	    null apply_dept_code,
	    null apply_dept_name,
	    null apply_emp,
	    null apply_emp_code,
	    null apply_emp_name,
	    null make_date,
	    null checker,
	    null checker_emp_code,
	    null checker_emp_name,
	    null check_date,
	     null affi_emp,
       null affi_emp_name,
       null affi_date,
       null remark,
	    null state,
	    null state_name
		from temp
		
		union all
		 
		select * from temp
		
	</select>

	<select id="queryByCode" parameterType="java.util.Map"
		resultMap="budgExpenseApply">
		select
		a.group_id,a.hos_id,a.copy_code,a.budg_year,a.apply_id,
		a.payment_item_id,a.payment_item_no,a.budg_amount,
		a.apply_dept,b.dept_no as apply_dept_no,
		a.apply_emp,c.emp_no as apply_emp_no,c.emp_name as apply_emp_name,remark,
		a.make_date,a.checker,d.emp_name as checker_emp_name,a.check_date,a.state,e.value_name as state_name
		from BUDG_EXPENSE_APPLY a
		left join HOS_DEPT_DICT b
	    on a.group_id = b.group_id
	    and a.hos_id = b.hos_id
	    and a.apply_dept = b.dept_id
	    and b.is_stop = 0
	    left join HOS_EMP_DICT c
	    on a.group_id = c.group_id
	    and a.hos_id = c.hos_id
	    and a.apply_emp = c.emp_id
	    and c.is_stop=0
	    left join HOS_EMP_DICT d
	    on a.group_id = d.group_id
	    and a.hos_id = d.hos_id
	    and a.checker = d.emp_id
	    and d.is_stop=0
	    left join BUDG_SYS_DICT e 
		on a.state = e.value_code
		and e.f_code = 'STATE'
		where a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		and a.budg_year = #{budg_year}
		and a.apply_id = #{apply_id}
	</select>
	<insert id="addBatch" parameterType="java.util.List" >
	
		insert into BUDG_EXPENSE_APPLY
		(group_id,hos_id,copy_code,budg_year,apply_id,
		payment_item_id,payment_item_no,budg_amount,apply_dept,apply_emp,make_date,state)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id},
			#{item.hos_id},
			#{item.copy_code},
			#{item.budg_year},
			#{item.apply_id},
			#{item.payment_item_id},
			#{item.payment_item_no},
			#{item.budg_amount},
			#{item.apply_dept},
			#{item.apply_emp},
			#{item.make_date},
			#{item.state}			
		from dual
		</foreach>
	</insert>
	<insert id="add" parameterType="java.util.Map">
		insert into BUDG_EXPENSE_APPLY
		(group_id,hos_id,copy_code,budg_year,apply_id,
		payment_item_id,payment_item_no,budg_amount,apply_dept,apply_emp,make_date,
		<if test="checker != null and checker != ''">
			checker,
		</if>
		<if test="check_date != null and check_date != ''">
			check_date,
		</if>
		state,remark)
		values
		(#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{budg_year,jdbcType=VARCHAR},
		#{apply_id,jdbcType=VARCHAR},
		#{payment_item_id,jdbcType=INTEGER},
		#{payment_item_no,jdbcType=INTEGER},
		#{budg_amount,jdbcType=INTEGER},
		#{apply_dept,jdbcType=INTEGER},
		#{apply_emp,jdbcType=INTEGER},
		#{make_date,jdbcType=DATE},
		<if test="checker != null and checker != ''">
			#{checker,jdbcType=INTEGER},
		</if>
		<if test="check_date != null and check_date != ''">
			#{check_date,jdbcType=DATE},
		</if>
		#{state,jdbcType=VARCHAR},#{remark}
		)
	</insert>

	<update id="update" parameterType="java.util.Map">
		update BUDG_EXPENSE_APPLY
		<set>
		<if test="payment_item_id != null and payment_item_id != ''">
		payment_item_id = #{payment_item_id,jdbcType=INTEGER},
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		payment_item_no = #{payment_item_no,jdbcType=INTEGER},
		</if>
		<if test="budg_amount != null and budg_amount != ''">
		budg_amount = #{budg_amount,jdbcType=INTEGER},
		</if>
		<if test="apply_dept != null and apply_dept != ''">
		apply_dept = #{apply_dept,jdbcType=INTEGER},
		</if>
		<if test="apply_emp != null and apply_emp != ''">
		apply_emp = #{apply_emp,jdbcType=INTEGER},
		</if>
		<if test="make_date != null and make_date != ''">
		make_date = #{make_date,jdbcType=DATE},
		</if>
		<if test="checker != null and checker != ''">
		checker = #{checker,jdbcType=INTEGER},
		</if>
		<if test="check_date != null and check_date != ''">
		check_date = #{check_date,jdbcType=DATE},
		</if>
		<if test="state != null and state != ''">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="remark != null and remark != ''">
		remark = #{remark,jdbcType=VARCHAR}
		</if>
		</set>
		where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and budg_year = #{budg_year}
		and apply_id = #{apply_id}

	</update>
	
	<!-- 状态查询  （校验数据专用） -->
	<select id="queryBudgExpenseApplyState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT apply_id  FROM BUDG_EXPENSE_APPLY 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND apply_id in  (${apply_id})
			<!-- 前台传参    -->
			and state != #{state,jdbcType=VARCHAR}
	</select>
	
<!-- 	审核销审 -->
	<update id="auditOrUnAudit" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_EXPENSE_APPLY set
				checker = #{item.checker,jdbcType=INTEGER}
				,
				check_date = #{item.check_date,jdbcType=DATE}
				,
				state = #{item.state,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND apply_id = #{item.apply_id,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 确认取消确认 -->
	<update id="affiOrUnAffi" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_EXPENSE_APPLY set
				affi_emp = #{item.affi_emp,jdbcType=INTEGER}
				,
				affi_date = #{item.affi_date,jdbcType=DATE}
				,
				state = #{item.state,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND apply_id = #{item.apply_id,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<update id="updateBudgExpenseApplyState" parameterType="com.chd.hrp.budg.entity.BudgExpenseApply">
		update BUDG_EXPENSE_APPLY
		<set>
		checker = #{checker,jdbcType=INTEGER},
		check_date = #{check_date,jdbcType=DATE},
		state = #{state,jdbcType=VARCHAR}
		</set>
		where
		group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and budg_year = #{budg_year}
		and apply_id = #{apply_id}
	</update>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_EXPENSE_APPLY 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND apply_id = #{item.apply_id,jdbcType=VARCHAR}
			</foreach>

	</delete>
	
	<select id="queryBudgEmpByCode" resultMap="budgEmp">
		select emp_id,emp_no,emp_code,emp_name from hos_emp_dict
		where group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				<if test="emp_code != null and emp_code != ''">
	  	and emp_code= #{emp_code,jdbcType=VARCHAR}
	  	</if>
	  	<if test="emp_name != null and emp_name != ''">
	  	and emp_name= #{emp_name,jdbcType=VARCHAR}
	  	</if>
		and is_stop=0
	</select>
	
	<select id="queryBudgDeptByCode" resultMap="budgDept">
	select dept_id,dept_no,dept_code,dept_name from hos_dept_dict
		where group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				<if test="dept_code != null and dept_code != ''">
	  	and dept_code= #{dept_code,jdbcType=VARCHAR}
	  	</if>
	  	<if test="dept_name != null and dept_name != ''">
	  	and dept_name= #{dept_name,jdbcType=VARCHAR}
	  	</if>
		and is_stop=0
	</select>
	
	<select id="queryBudgPaymentItemByCode" resultMap="budgPaymentItem">
	select payment_item_id,
       payment_item_no,
       payment_item_code,
       payment_item_name
	  from BUDG_PAYMENT_ITEM_DICT 
	  where group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
	  	<if test="payment_item_code != null and payment_item_code != ''">
	  	and payment_item_code= #{payment_item_code,jdbcType=VARCHAR}
	  	</if>
	  	<if test="payment_item_name != null and payment_item_name != ''">
	  	and payment_item_name=#{payment_item_name,jdbcType=VARCHAR}
	  	</if>
	  	<if test="payment_item_id != null and payment_item_id != ''">
	  	and payment_item_id=#{payment_item_id,jdbcType=VARCHAR}
	  	</if>			
		and is_stop=0
	</select>

</mapper>