<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.compilationbasic.hosyblimit.BudgHosYbLimitMapper">
	
	<resultMap id="budgHosYbLimit" type="com.chd.hrp.budg.entity.BudgHosYbLimit">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="pay_limit" column="pay_limit"/>
	<result property="rate" column="rate"/>
	<result property="control_limit" column="control_limit"/>
	<result property="remark" column="remark"/>
	</resultMap>
		
	<resultMap id="budgHosYbLimitMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="insurance_name" column="insurance_name"/>
	<result property="insurance_nature" column="insurance_nature"/>
	<result property="pay_limit" column="pay_limit"/>
	<result property="rate" column="rate"/>
	<result property="control_limit" column="control_limit"/>
	<result property="remark" column="remark"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_HOS_YB_LIMIT (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			insurance_code
			,
			pay_limit
			,
			rate
			,
			control_limit
			,
			remark
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{insurance_code,jdbcType=VARCHAR}
			,
			#{pay_limit,jdbcType=INTEGER}
			,
			#{rate,jdbcType=INTEGER}
			,
			#{control_limit,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_HOS_YB_LIMIT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		insurance_code
		,
		pay_limit
		,
		rate
		,
		control_limit
		,
		remark
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.insurance_code,jdbcType=VARCHAR}
			,
			#{item.pay_limit,jdbcType=INTEGER}
			,
			#{item.rate,jdbcType=INTEGER}
			,
			#{item.control_limit,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_hos_yb_limit set
			pay_limit = #{pay_limit,jdbcType=INTEGER}
			,
			rate = #{rate,jdbcType=INTEGER}
			,
			control_limit = #{control_limit,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_hos_yb_limit set
				pay_limit = #{item.pay_limit,jdbcType=INTEGER}
				,
				rate = #{item.rate,jdbcType=INTEGER}
				,
				control_limit = #{item.control_limit,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			<where>                     
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>  
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_hos_yb_limit 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_hos_yb_limit 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgHosYbLimitMap" >	
	  select 
	  	a.group_id,
	  	a.hos_id,
	  	a.copy_code,
	  	a.year,
	  	a.insurance_code,
	  	b.insurance_name,
	  	a.pay_limit,
	  	a.rate,
	  	a.control_limit ,
	  	a.remark
	from budg_hos_yb_limit a  
	left join budg_yb_type_dict b
		on 
			a.group_id=b.group_id 
			and a.hos_id=b.hos_id 
			and a.copy_code=b.copy_code
			and a.insurance_code=b.insurance_code
  	
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND a.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND a.insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		</where>   
       	order by a.insurance_code asc
	</select>
	<select id="queryByCode" resultMap="budgHosYbLimit"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		insurance_code,
		pay_limit,
		rate,
		control_limit,
		remark
		FROM budg_hos_yb_limit 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		insurance_code = #{insurance_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgHosYbLimit"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		insurance_code,
		pay_limit,
		rate,
		control_limit,
		remark
		FROM BUDG_HOS_YB_LIMIT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_limit != null and pay_limit != ''">
		AND pay_limit = #{pay_limit,jdbcType=INTEGER}
		</if>
		<if test="rate != null and rate != ''">
		AND rate = #{rate,jdbcType=INTEGER}
		</if>
		<if test="control_limit != null and control_limit != ''">
		AND control_limit = #{control_limit,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgHosYbLimit"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		insurance_code,
		pay_limit,
		rate,
		control_limit,
		remark
		FROM BUDG_HOS_YB_LIMIT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_limit != null and pay_limit != ''">
		AND pay_limit = #{pay_limit,jdbcType=INTEGER}
		</if>
		<if test="rate != null and rate != ''">
		AND rate = #{rate,jdbcType=INTEGER}
		</if>
		<if test="control_limit != null and control_limit != ''">
		AND control_limit = #{control_limit,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 据主键 查询 医院医保额度控制数据是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(insurance_code) FROM BUDG_HOS_YB_LIMIT 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 生成时 查询生成数据 -->
	<select id="queryBudgInsuranceCodeData" resultMap="budgHosYbLimitMap"  parameterType="java.util.Map" >
		select distinct
			group_id , 
			hos_id  , 
			copy_code , 
			insurance_code
        from BUDG_YB_PAY_MODE_SET 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="pay_mode_code != null and pay_mode_code != ''">
			AND pay_mode_code = #{pay_mode_code,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 查询 医保类型编码 是否存在 -->
	<select id="queryInsuranceCodeExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
		select count( insurance_code )  from budg_yb_type_dict
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code!= ''">
			and insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
			<if test="insurance_nature != null and insurance_nature!= ''">
			AND insurance_nature = #{insurance_nature,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 医保类型下拉框 -->
	<select id="queryBudgYBType" resultMap="budgHosYbLimitMap">
		SELECT
		insurance_code ,
		insurance_name 
		FROM BUDG_YB_TYPE_DICT
		where 
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="key != null and key != ''">
				AND (insurance_code like '${key}%' or
					insurance_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%' )
			</if>
		order by insurance_code
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_HOS_YB_LIMIT
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
		</foreach>
	</select>
</mapper>

