<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.compilationbasic.deptyblimit.BudgDeptYbLimitMapper">
	
	<resultMap id="budgDeptYbLimit" type="com.chd.hrp.budg.entity.BudgDeptYbLimit">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="rate" column="rate"/>
	<result property="dept_control_limit" column="dept_control_limit"/>
	<result property="remark" column="remark"/>
	</resultMap>
		
	<resultMap id="budgDeptYbLimitMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="dept_code" column="dept_code"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="insurance_name" column="insurance_name"/>
	<result property="rate" column="rate"/>
	<result property="dept_control_limit" column="dept_control_limit"/>
	<result property="remark" column="remark"/>
	<result property="yb_income" column="yb_income"/>
	<result property="last_yb_income" column="last_yb_income"/>
	<result property="control_limit" column="control_limit"/>  
	
	<result property="yb_income" column="yb_income"/>  
	<result property="sum_yb_income" column="sum_yb_income"/>  
	
	</resultMap>
	
	<resultMap id="hrpBudgSelectMap" type="java.util.Map">	
	<result property="insurance_code" column="insurance_code"/>
	<result property="insurance_name" column="insurance_name"/>	
	<result property="deptID" column="deptID"/>
	<result property="deptName" column="deptName"/>	
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_DEPT_YB_LIMIT (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			dept_id
			,
			insurance_code
			,
			rate
			,
			dept_control_limit
			,
			remark
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{insurance_code,jdbcType=VARCHAR}
			,
			#{rate,jdbcType=INTEGER}
			,
			#{dept_control_limit,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_DEPT_YB_LIMIT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		dept_id
		,
		insurance_code
		,
		rate
		,
		dept_control_limit
		,
		remark
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.insurance_code,jdbcType=VARCHAR}
			,
			#{item.rate,jdbcType=INTEGER}
			,
			#{item.dept_control_limit,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_dept_yb_limit set
			rate = #{rate,jdbcType=INTEGER}
			,
			dept_control_limit = #{dept_control_limit,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_dept_yb_limit set
				rate = #{item.rate,jdbcType=INTEGER}
				,
				dept_control_limit = #{item.dept_control_limit,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>  
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>  
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_dept_yb_limit 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_dept_yb_limit 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgDeptYbLimitMap" >
		
	select 
         a.group_id,
         a.hos_id,
         a.copy_code,
         a.year,
         a.dept_id,
         d.dept_code,
         d.dept_name,
         a.insurance_code,
         c.insurance_name,
         a.rate ,
         b.control_limit,
         t.yb_income as last_yb_income,
         a.dept_control_limit,
         a.remark
         
    from BUDG_DEPT_YB_LIMIT a
    left join budg_hos_yb_limit b
	      on 
		     a.group_id = b.group_id
		     and a.hos_id = b.hos_id
		     and a.copy_code = b.copy_code 
		     and a.year = b.year
	     	 and a.insurance_code = b.insurance_code
	left join BUDG_YB_TYPE_DICT  c
	      on 
		     a.group_id = c.group_id
		     and a.hos_id = c.hos_id
		     and a.copy_code = c.copy_code 
	     	 and a.insurance_code = c.insurance_code
	left join hos_dept  d
	      on 
		     a.group_id = d.group_id
		     and a.hos_id = d.hos_id
	     	 and a.dept_id = d.dept_id
	     	 and d.is_stop = 0
    left join BUDG_ZEYF_INCOME_HIS t 
     	on 
     		a.group_id = t.group_id 
     		and a.hos_id = t.hos_id 
     		and a.copy_code = t.copy_code
     		and a.dept_id = t.dept_id 
     		and a.insurance_code = t.insurance_code 
     		and t.year = to_char(to_number(${year}-1))
     		and a.year = ${year}
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND a.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND a.insurance_code =#{insurance_code,jdbcType=VARCHAR}
			</if>
   		order by a.dept_id , a.insurance_code asc
	</select>
	<select id="queryByCode" resultMap="budgDeptYbLimit"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		dept_id,
		insurance_code,
		rate,
		dept_control_limit,
		remark
		FROM budg_dept_yb_limit 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			dept_id = #{dept_id,jdbcType=INTEGER}   and 
			insurance_code = #{insurance_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgDeptYbLimit"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			dept_id,
			insurance_code,
			rate,
			dept_control_limit,
			remark
			FROM BUDG_DEPT_YB_LIMIT 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
			<if test="rate != null and rate != ''">
			AND rate = #{rate,jdbcType=INTEGER}
			</if>
			<if test="dept_control_limit != null and dept_control_limit != ''">
			AND dept_control_limit = #{dept_control_limit,jdbcType=INTEGER}
			</if>
			<if test="remark != null and remark != ''">
			AND remark = #{remark,jdbcType=VARCHAR}
			</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgDeptYbLimit"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			dept_id,
			insurance_code,
			rate,
			dept_control_limit,
			remark
		FROM BUDG_DEPT_YB_LIMIT 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
			<if test="rate != null and rate != ''">
			AND rate = #{rate,jdbcType=INTEGER}
			</if>
			<if test="dept_control_limit != null and dept_control_limit != ''">
			AND dept_control_limit = #{dept_control_limit,jdbcType=INTEGER}
			</if>
			<if test="remark != null and remark != ''">
			AND remark = #{remark,jdbcType=VARCHAR}
			</if>
		order by group_id asc
	</select>
	
	<!-- 根据主键 查询科室医保额度控制数据 是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(insurance_code)
	
		FROM BUDG_DEPT_YB_LIMIT 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 科室下拉框  -->
	<select id="queryBudgDeptDict" resultMap="hrpBudgSelectMap">
		select ada.dept_id ||','|| hd.dept_code deptID ,
			hd.dept_name deptName 
		from acc_dept_attr ada
		left join hos_dept hd
			ON
				ada.group_id  = hd.group_id 
				and ada.hos_id  = hd.hos_id 
				and ada.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	where
			ada.group_id = #{group_id}
			and ada.hos_id = #{hos_id}
			and ada.type_code in ('01','02')
			and ada.is_budg = 1
			<if test="key != null and key != ''">
				and (
					hd.dept_code like '${key}%' or
					hd.dept_name like '%${key}%' or
					hd.spell_code like '%${key}%' or
					hd.wbx_code like '%${key}%'
				)
			</if>
		order by hd.dept_code	
	</select>
	
	<!-- 医保类型下拉框 -->
	<select id="queryBudgYBTY" resultMap="hrpBudgSelectMap">
		SELECT
		a.insurance_code ,
		b.insurance_name 
		FROM BUDG_YB_PAY_MODE_SET a
		left join BUDG_YB_TYPE_DICT b
			ON
				a.group_id = b.group_id
				and a.hos_id  = b.hos_id
				and a.copy_code = b.copy_code
				and a.insurance_code = b.insurance_code
		where
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pay_mode_code = 'ZE'
			<if test="key != null and key != ''">
				AND (a.insurance_code like '${key}%' or
					b.insurance_name like '%${key}%' or
					b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%' )
			</if>
			order by a.insurance_code
	</select>
	
	<!-- 查询 医保类型是否存在 -->
	<select id="queryInsuranceCodeExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
		SELECT count(a.insurance_code)
		
		FROM BUDG_YB_PAY_MODE_SET a
		left join BUDG_YB_TYPE_DICT b
			ON
				a.group_id = b.group_id
				and a.hos_id  = b.hos_id
				and a.copy_code = b.copy_code
				and a.insurance_code = b.insurance_code
		where                    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pay_mode_code = 'ZE' 
	</select>
	
	<!-- 根据 科室编码 查询 科室ID -->
	<select id="queryDeptID" resultMap="budgDeptYbLimitMap"  parameterType="java.util.Map" >
	
		SELECT distinct a.dept_id
	
		FROM  acc_dept_attr  a
		left join hos_dept b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.dept_id = b.dept_id
				and b.is_stop = 0
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.type_code = '02'
			<if test="dept_code != null and dept_code != ''">
			AND b.dept_code = #{dept_code,jdbcType=VARCHAR}
			</if>
			and a.is_budg =1
	</select>
	
	<!-- 根据 科室编码 查询 科室ID -->
	<select id="queryBudgDeptData" resultMap="budgDeptYbLimitMap"  parameterType="java.util.Map" >
	
		SELECT dept_id
	
		FROM acc_dept_attr  
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="type_code != null and type_code != ''">
			AND type_code = '02'
			</if>
			and is_budg = 1
	</select>
	
	<!-- 增量生成 添加数据 -->
	<insert id="addGenerate" parameterType="java.util.Map" >
	
		INSERT INTO BUDG_DEPT_YB_LIMIT (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			dept_id
			,
			insurance_code
			,
			rate
			,
			dept_control_limit
			,
			remark
		
		) select  a.group_id , a.hos_id , a.copy_code , ${year} year , a.dept_id , a.insurance_code , null rate , null yb_income , 
				
				null as remark from BUDG_ZEYF_INCOME_HIS a
				
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}   
				and a.hos_id = #{hos_id,jdbcType=INTEGER}   
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}    
				and a.year = to_char(to_number(${year}) - 1) 
				and not exists (
					select 1 from BUDG_DEPT_YB_LIMIT b
						where 		
							a.group_id = b.group_id  
							and a.hos_id = b.hos_id   
							and a.copy_code = b.copy_code
							and a.dept_id = b.dept_id
							and a.insurance_code = b.insurance_code
							and a.year = to_char(to_number(${year}) -1)
							and b.year = #{year,jdbcType=VARCHAR}  
				)
			
	</insert>
	
	
	<!-- 根据年度、科室、医保类型信息 查询 上年医保收入-->
	<select id="qureyLastYbIncome" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT yb_income FROM BUDG_ZEYF_INCOME_HIS  
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = to_char(to_number(${year})-1)
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据年度、科室、医保类型信息 查询 全院医保额度 -->
	<select id="qureyControlLimit" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT control_limit 		FROM budg_hos_yb_limit  
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 分结数据 -->
	<select id="qureyResolveData" resultMap="budgDeptYbLimitMap"  parameterType="java.util.Map" >
	
		with sumIncome as( SELECT group_id , hos_id , copy_code , year , insurance_code ,SUM(nvl(yb_income,0)) sum_yb_income
			 FROM BUDG_ZEYF_INCOME_HIS  
			where                     
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND year = to_char(to_number(${year})-1)
				AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			group by group_id , hos_id , copy_code , year , insurance_code )
			
			select 
				a.group_id , 
				a.hos_id , 
				a.copy_code , 
				a.year , 
				a.dept_id ,
				a.insurance_code ,
				b.control_limit ,
				nvl(c.yb_income,0) yb_income,
				nvl(d.sum_yb_income,0) sum_yb_income
			from budg_dept_yb_limit a
			left join budg_hos_yb_limit b
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and a.year = b.year
					and a.insurance_code = b.insurance_code
			 left join BUDG_ZEYF_INCOME_HIS c
		     	on 
		     		a.group_id = c.group_id 
		     		and a.hos_id = c.hos_id 
		     		and a.copy_code = c.copy_code
		     		and a.dept_id = c.dept_id 
		     		and a.insurance_code = c.insurance_code 
		     		and c.year = to_char(to_number(${year}-1))
		     		and a.year = ${year}
		      left join sumIncome d
		     	on 
		     		a.group_id = d.group_id 
		     		and a.hos_id = d.hos_id 
		     		and a.copy_code = d.copy_code
		     		and a.insurance_code = d.insurance_code 
		     where 
		     	a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
				AND a.insurance_code = #{insurance_code,jdbcType=VARCHAR}
	</select>
	<!-- 历史数据比例分解 -->
	<update id="updateResolveRate" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_dept_yb_limit set
				rate = DECODE(${item.sum_yb_income},0,0.00,${item.yb_income}/${item.sum_yb_income}*100)
				,
				dept_control_limit = DECODE(${item.sum_yb_income},0,0.00,${item.control_limit}*${item.yb_income}/${item.sum_yb_income})
				
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM budg_dept_yb_limit
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
		</foreach>
	</select>
</mapper>

