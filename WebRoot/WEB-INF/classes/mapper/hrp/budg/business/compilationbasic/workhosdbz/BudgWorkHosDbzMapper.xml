<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.compilationbasic.workhosdbz.BudgWorkHosDbzMapper">
	
	<resultMap id="budgWorkHosDbz" type="com.chd.hrp.budg.entity.BudgWorkHosDbz">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="disease_code" column="disease_code"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="budg_workload" column="budg_workload"/>
	</resultMap>
		
	<resultMap id="budgWorkHosDbzMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="disease_code" column="disease_code"/>
	<result property="disease_name" column="disease_name"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="insurance_name" column="insurance_name"/>
	<result property="budg_workload" column="budg_workload"/>
	</resultMap>
	 
	<resultMap type="java.util.Map" id="BudgDiseaseMap">
	<result property="disease_code"  column="disease_code"/>
	<result property="disease_name"  column="disease_name"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_WORK_HOS_DBZ (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			disease_code
			,
			insurance_code
			,
			budg_workload
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{disease_code,jdbcType=VARCHAR}
			,
			#{insurance_code,jdbcType=VARCHAR}
			,
			#{budg_workload,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_WORK_HOS_DBZ (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		disease_code
		,
		insurance_code
		,
		budg_workload
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.disease_code,jdbcType=VARCHAR}
			,
			#{item.insurance_code,jdbcType=VARCHAR}
			,
			#{item.budg_workload,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_work_hos_dbz set
			budg_workload = #{budg_workload,jdbcType=INTEGER}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="disease_code != null and disease_code != ''">
			AND disease_code = #{disease_code,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_work_hos_dbz set
				budg_workload = #{item.budg_workload,jdbcType=INTEGER}
			<where>                     
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>  
				<if test="item.disease_code != null and item.disease_code != ''">
				AND disease_code = #{item.disease_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_work_hos_dbz 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="disease_code != null and disease_code != ''">
			AND disease_code = #{disease_code,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_work_hos_dbz 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.disease_code != null and item.disease_code != ''">
				AND disease_code = #{item.disease_code,jdbcType=VARCHAR}
				</if>
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgWorkHosDbzMap" >
		select
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.disease_code,
			c.disease_name ,
			a.insurance_code,
			b.insurance_name,
			a.budg_workload
	  from BUDG_WORK_HOS_DBZ a
	  left join budg_yb_type_dict b
		    on a.group_id = b.group_id
		   and a.hos_id = b.hos_id
		   and a.copy_code = b.copy_code
		   and a.insurance_code = b.insurance_code
	  left join budg_single_disease_dict c
		    on a.group_id = c.group_id
		   and a.hos_id = c.hos_id
		   and a.copy_code = c.copy_code
		   and a.disease_code = c.disease_code
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND a.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="disease_code != null and disease_code != ''">
		AND a.disease_code = #{disease_code,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND a.insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		</where>   
       order by a.insurance_code, a.disease_code asc 
	</select>
	<select id="queryByCode" resultMap="budgWorkHosDbz"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			disease_code,
			insurance_code,
			budg_workload
		FROM budg_work_hos_dbz 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		disease_code = #{disease_code,jdbcType=VARCHAR}   and 
		insurance_code = #{insurance_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgWorkHosDbz"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			disease_code,
			insurance_code,
			budg_workload
		FROM BUDG_WORK_HOS_DBZ 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="disease_code != null and disease_code != ''">
		AND disease_code = #{disease_code,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_workload != null and budg_workload != ''">
		AND budg_workload = #{budg_workload,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgWorkHosDbz"  parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			disease_code,
			insurance_code,
			budg_workload
		FROM BUDG_WORK_HOS_DBZ 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="disease_code != null and disease_code != ''">
		AND disease_code = #{disease_code,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_workload != null and budg_workload != ''">
		AND budg_workload = #{budg_workload,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 根据主键查询 数据是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
		SELECT count(disease_code)
		FROM BUDG_WORK_HOS_DBZ 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="disease_code != null and disease_code != ''">
			AND disease_code = #{disease_code,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 生成时 查询生成数据 -->
	<select id="queryData"  resultMap="budgWorkHosDbzMap"  parameterType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			${year} year ,
			a.disease_code,
			a.insurance_code
		FROM BUDG_YB_SINGLE_DISEASE a
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND not exists(
				select 1 from BUDG_WORK_HOS_DBZ b
				where a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and b.year = #{year,jdbcType=VARCHAR}
					and a.disease_code = b.disease_code
					and a.insurance_code = b.insurance_code
			)
	</select>
	
	<!-- 汇总时 查询 已存在的 科室单病种业务预算数据  -->
	<select id="queryDeptDataExist" resultMap="budgWorkHosDbzMap"  parameterType="java.util.Map" >
	
		with temp as (
			SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			disease_code,
			insurance_code,
			sum(nvl(budg_workload,0)) as budg_workload
		FROM budg_work_dept_dbz 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
			and year = #{year,jdbcType=VARCHAR} 
			group by group_id, hos_id, copy_code, year, disease_code, insurance_code
		)  
		
		select 	
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.disease_code,
			a.insurance_code,
			a.budg_workload
		from temp a
		where
			exists (
				select 1 from BUDG_WORK_HOS_DBZ b
				where a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and b.year = #{year,jdbcType=VARCHAR}
					and a.disease_code = b.disease_code
					and a.insurance_code = b.insurance_code
			)
	</select>
	
	<!-- 汇总时 查询 不存在的 科室单病种业务预算数据  -->
	<select id="queryDeptDataNotExist" resultMap="budgWorkHosDbzMap"  parameterType="java.util.Map" >
	
		with temp as (
			SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			disease_code,
			insurance_code,
			sum(nvl(budg_workload,0)) as budg_workload
		FROM budg_work_dept_dbz 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
			and year = #{year,jdbcType=VARCHAR} 
			group by group_id, hos_id, copy_code, year, disease_code, insurance_code
		)  
		
		select 	
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.disease_code,
			a.insurance_code,
			a.budg_workload
		from temp a
		where
			not exists (
				select 1 from BUDG_WORK_HOS_DBZ b
				where a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and b.year = #{year,jdbcType=VARCHAR}
					and a.disease_code = b.disease_code
					and a.insurance_code = b.insurance_code
			)
	
	</select>
				
	<select id="queryBudgDiseaseCodeId"  parameterType="java.util.List"  resultMap="BudgDiseaseMap">
	        select         
				disease_code ,
			    disease_name 
			    
	        from budg_single_disease_dict
	
	where 
			group_id = #{group_id,jdbcType=INTEGER} 
			  
			and hos_id = #{hos_id,jdbcType=INTEGER}  
			 
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_WORK_HOS_DBZ
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND disease_code = #{item.disease_code,jdbcType=VARCHAR}
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
</mapper>

