<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.business.compilationbasic.rtpaystandard.BudgRtPayStandardMapper">
	
	<resultMap id="budgRtPayStandard" type="com.chd.hrp.budg.entity.BudgRtPayStandard">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="outpatient_charge" column="outpatient_charge"/>
	<result property="day_bed_charge" column="day_bed_charge"/>
	<result property="o_workload_budg" column="o_workload_budg"/>
	<result property="i_workload_budg" column="i_workload_budg"/>
	<result property="remark" column="remark"/>
	</resultMap>
		
	<resultMap id="budgRtPayStandardMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="insurance_code" column="insurance_code"/>
	<result property="insurance_name" column="insurance_name"/>
	<result property="outpatient_charge" column="outpatient_charge"/>
	<result property="day_bed_charge" column="day_bed_charge"/>
	<result property="o_workload_budg" column="o_workload_budg"/>
	<result property="i_workload_budg" column="i_workload_budg"/>
	<result property="remark" column="remark"/>
	</resultMap>
	
	<resultMap type="java.util.Map" id="budgWorkSelectMap">
	<result property="id" column="id"/>
	<result property="text" column="text"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >	
		INSERT INTO BUDG_RT_PAY_STANDARD (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			insurance_code
			,
			outpatient_charge
			,
			day_bed_charge
			,
			o_workload_budg
			,
			i_workload_budg
			,
			remark
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{insurance_code,jdbcType=VARCHAR}
			,
			#{outpatient_charge,jdbcType=INTEGER}
			,
			#{day_bed_charge,jdbcType=INTEGER}
			,
			#{o_workload_budg,jdbcType=INTEGER}
			,
			#{i_workload_budg,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_RT_PAY_STANDARD (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		insurance_code
		,
		outpatient_charge
		,
		day_bed_charge
		,
		o_workload_budg
		,
		i_workload_budg
		,
		remark
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.insurance_code,jdbcType=VARCHAR}
			,
			#{item.outpatient_charge,jdbcType=INTEGER}
			,
			#{item.day_bed_charge,jdbcType=INTEGER}
			,
			#{item.o_workload_budg,jdbcType=INTEGER}
			,
			#{item.i_workload_budg,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_rt_pay_standard set
			outpatient_charge = #{outpatient_charge,jdbcType=INTEGER}
			,
			day_bed_charge = #{day_bed_charge,jdbcType=INTEGER}
			,
			o_workload_budg = #{o_workload_budg,jdbcType=INTEGER}
			,
			i_workload_budg = #{i_workload_budg,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_rt_pay_standard set
				outpatient_charge = #{item.outpatient_charge,jdbcType=INTEGER}
				,
				day_bed_charge = #{item.day_bed_charge,jdbcType=INTEGER}
				,
				o_workload_budg = #{item.o_workload_budg,jdbcType=INTEGER}
				,
				i_workload_budg = #{item.i_workload_budg,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			<where>                     
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>  
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_rt_pay_standard 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_rt_pay_standard 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.insurance_code != null and item.insurance_code != ''">
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgRtPayStandardMap" >
		select
			a.group_id,
			a.hos_id,
			a.copy_code, 
			a.year,
			a.insurance_code,
			b.insurance_name,
			a.outpatient_charge,
			a.day_bed_charge,
			a.o_workload_budg,
			a.i_workload_budg,
			a.remark
		from BUDG_RT_PAY_STANDARD a
		left join budg_yb_type_dict b
		    on a.group_id = b.group_id
		   and a.hos_id = b.hos_id
		   and a.copy_code = b.copy_code
		   and a.insurance_code = b.insurance_code
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND a.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND a.insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		</where>   
          order by a.insurance_code asc 
	</select>
	<select id="queryByCode" resultMap="budgRtPayStandard"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		insurance_code,
		outpatient_charge,
		day_bed_charge,
		o_workload_budg,
		i_workload_budg,
		remark
		FROM budg_rt_pay_standard 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		insurance_code = #{insurance_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgRtPayStandard"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		insurance_code,
		outpatient_charge,
		day_bed_charge,
		o_workload_budg,
		i_workload_budg,
		remark
		FROM BUDG_RT_PAY_STANDARD 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="outpatient_charge != null and outpatient_charge != ''">
		AND outpatient_charge = #{outpatient_charge,jdbcType=INTEGER}
		</if>
		<if test="day_bed_charge != null and day_bed_charge != ''">
		AND day_bed_charge = #{day_bed_charge,jdbcType=INTEGER}
		</if>
		<if test="o_workload_budg != null and o_workload_budg != ''">
		AND o_workload_budg = #{o_workload_budg,jdbcType=INTEGER}
		</if>
		<if test="i_workload_budg != null and i_workload_budg != ''">
		AND i_workload_budg = #{i_workload_budg,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgRtPayStandard"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		insurance_code,
		outpatient_charge,
		day_bed_charge,
		o_workload_budg,
		i_workload_budg,
		remark
		FROM BUDG_RT_PAY_STANDARD 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="outpatient_charge != null and outpatient_charge != ''">
		AND outpatient_charge = #{outpatient_charge,jdbcType=INTEGER}
		</if>
		<if test="day_bed_charge != null and day_bed_charge != ''">
		AND day_bed_charge = #{day_bed_charge,jdbcType=INTEGER}
		</if>
		<if test="o_workload_budg != null and o_workload_budg != ''">
		AND o_workload_budg = #{o_workload_budg,jdbcType=INTEGER}
		</if>
		<if test="i_workload_budg != null and i_workload_budg != ''">
		AND i_workload_budg = #{i_workload_budg,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 根据主键 查询数据是否存在 -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(insurance_code)
		FROM BUDG_RT_PAY_STANDARD 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="insurance_code != null and insurance_code != ''">
			AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 导入  校验 医保类型编码 是否村在 -->
	<select id="queryInsuranceCodeExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
		select count(insurance_code)  from BUDG_YB_PAY_MODE_SET		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="insurance_code != null and insurance_code != ''">
		AND insurance_code = #{insurance_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_mode_code != null and pay_mode_code != ''">
		AND pay_mode_code = #{pay_mode_code,jdbcType=VARCHAR}
		</if>
		</where>   
	</select> 
	
	<!-- 增量生成时 查询生成数据 -->
	<select id="queryData" resultMap="budgRtPayStandardMap"  parameterType="java.util.Map" >
		select distinct
			a.group_id , 
			a.hos_id ,
			a.copy_code,
			${year} year ,
			a.insurance_code
		from BUDG_YB_PAY_MODE_SET a	
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pay_mode_code = #{pay_mode_code,jdbcType=VARCHAR}
			AND not exists(
				select 1 from BUDG_RT_PAY_STANDARD b
				where b.group_id = a.group_id
					and b.hos_id = a.hos_id
					and b.copy_code = a.copy_code
					and b.year = #{year,jdbcType=VARCHAR}
					and b.insurance_code = a.insurance_code
			)
	</select> 
	
	<!-- 医保类型下拉框 主页面  -->
	<select id="queryBudgYBTY" resultMap="budgWorkSelectMap"  parameterType="java.util.Map" >	
		SELECT distinct
			a.insurance_code id,
			a.insurance_code ||' '||b.insurance_name text
			FROM BUDG_YB_PAY_MODE_SET a
			left join BUDG_YB_TYPE_DICT b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and a.insurance_code = b.insurance_code 
					and b.is_stop = 0
			WHERE
				a.group_id = #{group_id,jdbcType=INTEGER}
				
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				
				AND a.pay_mode_code = #{pay_mode_code,jdbcType=VARCHAR}
				<if test="key != null and key != ''">
					AND (a.insurance_code like '${key}%' or
						b.insurance_name like '%${key}%' or
						b.spell_code like '%${key}%' or
						b.wbx_code like '%${key}%' )
				</if>
			order by a.insurance_code
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_RT_PAY_STANDARD
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND insurance_code = #{item.insurance_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
</mapper>

