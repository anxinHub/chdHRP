<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.common.BudgFormulaSetMapper">
	
	<resultMap id="budgFormulaSet" type="com.chd.hrp.budg.entity.BudgFormulaSet">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="formula_id" column="formula_id"/>
	<result property="formula_name" column="formula_name"/>
	<result property="formula_ca" column="formula_ca"/>
	<result property="formula_en" column="formula_en"/>
	</resultMap>
		
	<resultMap id="budgFormulaSetMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="formula_id" column="formula_id"/>
	<result property="formula_name" column="formula_name"/>
	<result property="formula_ca" column="formula_ca"/>
	<result property="formula_en" column="formula_en"/>
	</resultMap>
	
	
	<resultMap id="budgFormulaStackMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="formula_id" column="formula_id"/>
	<result property="element_type_code" column="element_type_code"/>
	<result property="element_level" column="element_level"/>
	<result property="element_code" column="element_code"/>
	<result property="value_type_code" column="value_type_code"/>
	<result property="stack_seq_no" column="stack_seq_no"/>
	</resultMap>
	
	
	<resultMap id="basicMap" type="java.util.Map">
	<result property="code" column="code"/>
	<result property="name" column="name"/>
	<result property="nature" column="nature"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_FORMULA_SET (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="formula_id != null and formula_id != ''">
		formula_id
		,
		</if>
		<if test="formula_name != null and formula_name != ''">
		formula_name
		,
		</if>
		<if test="formula_ca != null and formula_ca != ''">
		formula_ca
		,
		</if>
		<if test="formula_en != null and formula_en != ''">
		formula_en
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="formula_id != null and formula_id != ''">
		#{formula_id,jdbcType=VARCHAR}
		,
		</if>
		<if test="formula_name != null and formula_name != ''">
		#{formula_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="formula_ca != null and formula_ca != ''">
		#{formula_ca,jdbcType=VARCHAR}
		,
		</if>
		<if test="formula_en != null and formula_en != ''">
		#{formula_en,jdbcType=VARCHAR}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_FORMULA_SET (
		group_id
		,
		hos_id
		,
		copy_code
		,
		formula_id
		,
		formula_name
		,
		formula_ca
		,
		formula_en
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.formula_id,jdbcType=VARCHAR}
			,
			#{item.formula_name,jdbcType=VARCHAR}
			,
			#{item.formula_ca,jdbcType=VARCHAR}
			,
			#{item.formula_en,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_formula_set 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="formula_name != null and formula_name != ''">
		formula_name = #{formula_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="formula_ca != null and formula_ca != ''">
		formula_ca = #{formula_ca,jdbcType=VARCHAR}
		,
		</if>
		<if test="formula_en != null and formula_en != ''">
		formula_en = #{formula_en,jdbcType=VARCHAR}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_formula_set 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.formula_name != null and item.formula_name != ''">
			formula_name = #{item.formula_name,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.formula_ca != null and item.formula_ca != ''">
			formula_ca = #{item.formula_ca,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.formula_en != null and item.formula_en != ''">
			formula_en = #{item.formula_en,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.formula_id != null and item.formula_id != ''">
			AND formula_id = #{item.formula_id,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_formula_set 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_formula_set 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.formula_id != null and item.formula_id != ''">
				AND formula_id = #{item.formula_id,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgFormulaSetMap" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		formula_id,
		formula_name,
		formula_ca,
		formula_en
		FROM BUDG_FORMULA_SET 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="formula_id != null and formula_id != ''">
			AND ( formula_id like '${formula_id}%' or
					formula_name like '%${formula_id}%' )
			</if>
		order by formula_id asc
	</select>
	<select id="queryByCode" resultMap="budgFormulaSetMap"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		formula_id,
		formula_name ,
		formula_ca,
		formula_en
		FROM budg_formula_set 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR}   
			and formula_id = #{formula_id,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgFormulaSet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		formula_id,
		formula_name ,
		formula_ca,
		formula_en
		FROM BUDG_FORMULA_SET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		<if test="formula_name != null and formula_name != ''">
		AND formula_name = #{formula_name,jdbcType=VARCHAR}
		</if>
		<if test="formula_ca != null and formula_ca != ''">
		AND formula_ca = #{formula_ca,jdbcType=VARCHAR}
		</if>
		<if test="formula_en != null and formula_en != ''">
		AND formula_en = #{formula_en,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgFormulaSet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		formula_id,
		formula_name ,
		formula_ca,
		formula_en
		FROM BUDG_FORMULA_SET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!--基本指标树加载  -->
	<select id="queryBasicIndexTree" parameterType="java.util.Map" resultMap="basicMap" >
	
		SELECT 
		index_code  as code,
		index_name  as name,
		index_nature as nature
		FROM BUDG_BASIC_INDEX_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		and is_stop = 0
		</where>   
		order by index_code asc
	</select>
	
	<!--费用标准树加载  -->
	<select id="queryChargeStanTree" parameterType="java.util.Map" resultMap="basicMap" >
	
		SELECT 
		charge_stan_code  as code,
		charge_stan_name  as name,
		charge_stan_nature as nature
		FROM BUDG_CHARGE_STANDARD_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		and is_stop = 0
		</where>   
		order by charge_stan_code asc
	</select>
	
	<!--预算指标树加载  -->
	<select id="queryBudgIndexTree" parameterType="java.util.Map" resultMap="basicMap" >
	
		SELECT 
		index_code  as code,
		index_name  as name,
		'00' as nature
		FROM BUDG_INDEX_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		and is_stop = 0
		</where>   
		order by index_code asc
	</select>
	
	<!-- 收入科目指标树加载  -->
	<select id="queryIncomeSubjTree" parameterType="java.util.Map" resultMap="basicMap" >
	
		SELECT 
		subj_code  as code,
		subj_name  as name,
		'00' as nature
		FROM BUDG_INCOME_SUBJ 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		</where>   
		order by subj_code asc
	</select>
	
	<!--支出科目指标树加载  -->
	<select id="queryCostSubjTree" parameterType="java.util.Map" resultMap="basicMap" >
	
		SELECT 
		subj_code  as code,
		subj_name  as name,
		'00' as nature
		FROM BUDG_COST_SUBJ  
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		</where>   
		order by subj_code asc
	</select>
	
	<!-- 查询公式名称 是否已被占用  -->
	<select id="queryNameExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(formula_name)
		FROM budg_formula_set 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER} 
		and hos_id = #{hos_id,jdbcType=INTEGER}  
		and copy_code = #{copy_code,jdbcType=VARCHAR}   
		and formula_id != #{formula_id,jdbcType=VARCHAR} 
		and formula_name = #{formula_name,jdbcType=VARCHAR} 
		
	</select>
	
	<!-- 添加 计算公式元素栈数据 -->
	<insert id="addBatchFormulaStack" parameterType="java.util.List" >
	
		INSERT INTO BUDG_FORMULA_STACK (
		group_id
		,
		hos_id
		,
		copy_code
		,
		formula_id
		,
		element_type_code
		,
		element_level
		,
		element_code
		,
		value_type_code
		,
		stack_seq_no
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.formula_id,jdbcType=VARCHAR}
			,
			#{item.element_type_code,jdbcType=VARCHAR}
			,
			#{item.element_level,jdbcType=VARCHAR}
			,
			#{item.element_code,jdbcType=VARCHAR}
			,
			#{item.value_type_code,jdbcType=VARCHAR}
			,
			#{item.stack_seq_no,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	<!-- 删除 计算公式元素栈数据 -->
	<delete id="deleteFormulaStack" parameterType="java.util.Map">
	
		DELETE FROM BUDG_FORMULA_STACK  
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	
	<!-- 查询 计算公式元素栈数据 -->
	<select id="queryFormulaStack" resultMap="budgFormulaStackMap"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		formula_id,
		element_type_code	,
		element_level	,
		element_code 	,
		value_type_code ,
		stack_seq_no
		FROM BUDG_FORMULA_STACK 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND formula_id = #{formula_id,jdbcType=VARCHAR}
		order by stack_seq_no asc
	</select>
</mapper>

