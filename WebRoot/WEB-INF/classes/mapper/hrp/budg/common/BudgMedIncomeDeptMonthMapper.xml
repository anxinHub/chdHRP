<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgincome.toptodown.deptmonthinbudg.BudgMedIncomeDeptMonthMapper">
	
	<resultMap id="budgMedIncomeDeptMonth" type="com.chd.hrp.budg.entity.BudgMedIncomeDeptMonth">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="dept_id" column="dept_id"/>
	<result property="month" column="month"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	</resultMap>
		
	<resultMap id="budgMedIncomeDeptMonthMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="month" column="month"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	
	<result property="reference_years" column="reference_years"/>
	<result property="resolve_data" column="resolve_data"/>
	<result property="sumValue" column="sumValue"/>
	<!-- 科目是否结转标记 -->
	<result property="is_caarried" column="is_caarried"/>
	<!-- 结转下月值 -->
	<result property="next_value" column="next_value"/>
	
	<result property="yearValue" column="yearValue"/>
	<result property="resolve_way" column="resolve_way"/>
	<result property="hyValue" column="hyValue"/>
	<result property="sumLastIncome" column="sumLastIncome"/>
	
	<result property="m01" column="m01"/>
	<result property="m02" column="m02"/>
	<result property="m03" column="m03"/>
	<result property="m04" column="m04"/>
	<result property="m05" column="m05"/>
	<result property="m06" column="m06"/>
	<result property="m07" column="m07"/>
	<result property="m08" column="m08"/>
	<result property="m09" column="m09"/>
	<result property="m10" column="m10"/>
	<result property="m11" column="m11"/>
	<result property="m12" column="m12"/>
	
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_INCOME_DEPT_MONTH (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			subj_code
			,
			dept_id
			,
			month
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_income
			,
			last_month_carried
			,
			carried_next_month
	
		) VALUES (
		
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{subj_code,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{count_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{resolve_rate,jdbcType=INTEGER}
			,
			#{last_year_income,jdbcType=INTEGER}
			,
			#{last_month_carried,jdbcType=INTEGER}
			,
			#{carried_next_month,jdbcType=INTEGER}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_INCOME_DEPT_MONTH (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			subj_code
			,
			dept_id
			,
			month
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_income
			,
			last_month_carried
			,
			carried_next_month
			
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.year,jdbcType=VARCHAR}
				,
				#{item.subj_code,jdbcType=VARCHAR}
				,
				#{item.dept_id,jdbcType=INTEGER}
				,
				#{item.month,jdbcType=VARCHAR}
				,
				#{item.count_value,jdbcType=INTEGER}
				,
				#{item.budg_value,jdbcType=INTEGER}
				,
				#{item.remark,jdbcType=VARCHAR}
				,
				#{item.grow_rate,jdbcType=INTEGER}
				,
				#{item.resolve_rate,jdbcType=INTEGER}
				,
				#{item.last_year_income,jdbcType=INTEGER}
				,
				#{item.last_month_carried,jdbcType=INTEGER}
				,
				#{item.carried_next_month,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_med_income_dept_month SET
			count_value = #{count_value,jdbcType=INTEGER}
			,
			budg_value = #{budg_value,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			grow_rate = #{grow_rate,jdbcType=INTEGER}
			,
			resolve_rate = #{resolve_rate,jdbcType=INTEGER}
			,
			last_year_income = #{last_year_income,jdbcType=INTEGER}
			,
			last_month_carried = #{last_month_carried,jdbcType=INTEGER}
			,
			carried_next_month = #{carried_next_month,jdbcType=INTEGER}
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_income_dept_month SET
				count_value = #{item.count_value}
				,
				budg_value = #{item.budg_value}
				,
				remark = #{item.remark}
				,
				grow_rate = #{item.grow_rate}
				,
				resolve_rate = #{item.resolve_rate}
				,
				last_year_income = #{item.last_year_income}
				,
				last_month_carried = #{item.last_month_carried}
				,
				carried_next_month = #{item.carried_next_month}
			<where>                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND year = #{item.year,jdbcType=VARCHAR}
	
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>  
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_med_income_dept_month 
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_med_income_dept_month 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				<if test="item.month != null and item.month !='' ">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
				
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap" >
		with t as(
			select group_id ,hos_id , copy_code , year ,subj_code , dept_id ,  month , budg_value 
			from BUDG_MED_INCOME_DEPT_MONTH 
			where group_id = #{group_id} and hos_id  =#{hos_id} and copy_code  = #{copy_code} and year = #{year}			
		)
	
		SELECT 
			t.group_id,
			t.hos_id,
			t.copy_code,
			t.year,
			t.subj_code,
			bis.subj_name ,
			t.dept_id,
			hd.dept_code ,
			hd.dept_name ,
			bmidy.budg_value as yearValue,
			bmie.month,
			bmie.amount as last_year_income,
			sum(case when t.month ='01' then t.budg_value else 0 end ) as m01,
			sum(case when t.month ='02' then t.budg_value else 0 end ) as m02,
			sum(case when t.month ='03' then t.budg_value else 0 end ) as m03,
			sum(case when t.month ='04' then t.budg_value else 0 end ) as m04,
			sum(case when t.month ='05' then t.budg_value else 0 end ) as m05,
			sum(case when t.month ='06' then t.budg_value else 0 end ) as m06,
			sum(case when t.month ='07' then t.budg_value else 0 end ) as m07,
			sum(case when t.month ='08' then t.budg_value else 0 end ) as m08,
			sum(case when t.month ='09' then t.budg_value else 0 end ) as m09,
			sum(case when t.month ='10' then t.budg_value else 0 end ) as m10,
			sum(case when t.month ='11' then t.budg_value else 0 end ) as m11,
			sum(case when t.month ='12' then t.budg_value else 0 end ) as m12
			
		FROM t 
		
		LEFT JOIN BUDG_MED_INCOME_DEPT_YEAR bmidy
			ON 	
				t.group_id = bmidy.group_id 
				and t.hos_id = bmidy.hos_id 
				and t.copy_code = bmidy.copy_code
				and t.year = bmidy.year
				and t.subj_code = bmidy.subj_code
				and t.dept_id = bmidy.dept_id
		LEFT JOIN hos_dept hd
			ON
				t.group_id  = hd.group_id 
				and t.hos_id  = hd.hos_id 
				and t.dept_id  = hd.dept_id
		LEFT JOIN budg_income_subj bis
			ON
				t.group_id  = bis.group_id 
				and t.hos_id  = bis.hos_id 
				and t.copy_code  = bis.copy_code
				and t.year  = bis.budg_year
				and t.subj_code  = bis.subj_code
		LEFT JOIN budg_med_income_execute bmie
			ON
				t.group_id  = bmie.group_id 
				and t.hos_id  = bmie.hos_id 
				and t.copy_code  = bmie.copy_code
				and t.year  = bmie.year
				and t.month  = bmie.month
				and t.dept_id  = bmie.dept_id
				and t.subj_code  = bmie.subj_code
		<where>                     
			t.group_id = #{group_id,jdbcType=INTEGER}
			
			AND t.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND t.year = #{year,jdbcType=VARCHAR}
			<if test="subj_code != null and subj_code != ''">
			AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND t.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
			</if>
		</where>  
		group by t.group_id , t.hos_id ,t.copy_code ,t.year , t.subj_code ,bis.subj_name ,t.dept_id ,hd.dept_code , hd.dept_name , bmidy.budg_value , bmie.month,bmie.amount 
		order by t.group_id , t.hos_id ,t.copy_code ,t.year , t.subj_code ,t.dept_id asc
		
	</select>
	
	<select id="queryResolve" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap">
			
		    select t.group_id, t.hos_id, t.copy_code, t.year, t.month,t.subj_code,t.budg_value,t.count_value
		    	,t.remark,t.grow_rate,t.resolve_rate,t.last_year_income
		        , bis.subj_name, t.dept_id, hd.dept_code, hd.dept_name, bmidy.budg_value as yearValue
		     
		    from BUDG_MED_INCOME_DEPT_MONTH t
		    left join BUDG_MED_INCOME_DEPT_YEAR bmidy on t.group_id = bmidy.group_id
		    and t.hos_id = bmidy.hos_id
		    and t.copy_code = bmidy.copy_code
		    and t.year = bmidy.year
		    and t.subj_code = bmidy.subj_code
		    and t.dept_id = bmidy.dept_id 
		    left join hos_dept hd on t.group_id = hd.group_id
		    and t.hos_id = hd.hos_id
		    and t.dept_id = hd.dept_id 
		    left join budg_income_subj bis on t.group_id = bis.group_id
		    and t.hos_id = bis.hos_id
		    and t.copy_code = bis.copy_code
		    and t.year = bis.budg_year
		    and t.subj_code = bis.subj_code 
		    
		    <where>                     
				t.group_id = #{group_id,jdbcType=INTEGER}
				
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				
				AND t.year = #{year,jdbcType=VARCHAR}
				<if test="month != null and month != ''">
				AND t.month = #{month,jdbcType=VARCHAR}
				</if>
				<if test="subj_code != null and subj_code != ''">
				AND t.subj_code = #{subj_code,jdbcType=VARCHAR}
				</if>
				<if test="dept_id != null and dept_id != ''">
				AND t.dept_id = #{dept_id,jdbcType=INTEGER}
				</if>
				<if test="subj_level != null and subj_level != ''">
				AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
				</if>
			</where>
		    order by t.group_id, t.hos_id, t.copy_code, t.year, t.subj_code, t.dept_id asc
			
	</select>
	
	<select id="queryByCode" resultMap="budgMedIncomeDeptMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			dept_id,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			last_month_carried,
			carried_next_month
		FROM budg_med_income_dept_month 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}  
			and copy_code = #{copy_code,jdbcType=VARCHAR}   
			and year = #{year,jdbcType=VARCHAR}    
			and subj_code = #{subj_code,jdbcType=VARCHAR}  
			and dept_id = #{dept_id,jdbcType=INTEGER} 
			<if test="month != null and month != '' ">
				and month = #{month,jdbcType=VARCHAR} 
			</if>  
	
	</select>
	<select id="queryByUniqueness" resultMap="budgMedIncomeDeptMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			dept_id,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			last_month_carried,
			carried_next_month
		FROM BUDG_MED_INCOME_DEPT_MONTH 
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
			
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgMedIncomeDeptMonth"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			dept_id,
			month,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			last_month_carried,
			carried_next_month
		FROM BUDG_MED_INCOME_DEPT_MONTH 
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 导入时 查询数据是否已存在  （专用  勿动） -->
	<select id="queryDataExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT  count(subj_code)
		FROM budg_med_income_dept_month 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}  
			and copy_code = #{copy_code,jdbcType=VARCHAR}   
			and year = #{year,jdbcType=VARCHAR}    
			and subj_code = #{subj_code,jdbcType=VARCHAR}  
			and dept_id = #{dept_id,jdbcType=INTEGER} 
	</select>
	
<!-- 	添加时查询该科目下该科室指定月份的上年收入 -->
	<select id="queryDMLastYearIncome" parameterType="java.util.Map" resultType="java.lang.String">
	
		with temp as( <!-- 科室月份 历史执行数据  信息 -->
			select  a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code ,
				sum(amount) amount 
			from BUDG_MED_INCOME_EXECUTE a
			Left join hos_dept_dict  b
				on	
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.dept_id  = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code
		),
		deptData as ( <!-- 筛选 预算科室 信息  -->
			select  ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code
			from acc_dept_attr  ada
			left  join hos_dept_dict  hdd
				on	
					ada.group_id  = hdd.group_id
					and ada.hos_id  = hdd.hos_id
					and ada.dept_id  = hdd.dept_id
					and hdd.is_stop = 0
			where 
				ada.group_id = #{group_id,jdbcType=INTEGER}
				AND ada.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ada.is_budg = 1
		),
		
		dataBase1 as ( <!-- 从temp 及 deptData  临时表中  抓取 科目 与 预算科室的对应关系 并计算上年收入 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code , sum(b.amount) amount
			from deptData a
			left join temp b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by  a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code
		) 
		select sum(nvl(bmie.amount,0)) 
		  from dataBase1 bmie
		  left join budg_med_income_dept_month bmid
		    on bmie.group_id = bmid.group_id
			   and bmie.hos_id = bmid.hos_id
			   and bmie.copy_code = bmid.copy_code
			   and bmie.year = bmid.year
			   and bmie.dept_id = bmid.dept_id
			   and bmie.subj_code like (bmid.subj_code || '%')
			   and bmie.month = bmid.month
		 WHERE
				bmie.group_id = #{group_id,jdbcType=INTEGER}
				
				AND bmie.hos_id = #{hos_id,jdbcType=INTEGER}
				
				AND bmie.copy_code = #{copy_code,jdbcType=VARCHAR}
				
				AND bmie.year = #{year,jdbcType=VARCHAR}
				
				AND bmie.subj_code = #{subj_code,jdbcType=VARCHAR}
				
				AND bmie.dept_id = #{dept_id,jdbcType=INTEGER}
				
				AND bmie.month = #{month,jdbcType=VARCHAR}
				 
	</select>
	
	<!-- 	查询 所选年度、科目的计算数据 -->
	<select id="queryCollectData" resultMap="budgMedIncomeDeptMonthMap"  parameterType="java.util.Map">
		with temp as( <!-- 科室月份 历史执行数据  信息 -->
			select  a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code ,
				sum(amount) amount 
			from BUDG_MED_INCOME_EXECUTE a
			Left join hos_dept_dict  b
				on	
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.dept_id  = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = ${year}-1
			group by a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code
		),
		deptData as ( <!-- 筛选 预算科室 信息  -->
			select  ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code
			from acc_dept_attr  ada
			left  join hos_dept_dict  hdd
				on	
					ada.group_id  = hdd.group_id
					and ada.hos_id  = hdd.hos_id
					and ada.dept_id  = hdd.dept_id
					and hdd.is_stop = 0
			where 
				ada.group_id = #{group_id,jdbcType=INTEGER}
				AND ada.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ada.is_budg = 1
		),
		
		dataBase1 as ( <!-- 从temp 及 deptData  临时表中  抓取 科目 与 预算科室的对应关系 并计算上年收入 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code , sum(b.amount) amount
			from deptData a
			left join temp b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by  a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code
		) ,
		exeData as(<!-- 参考年限   科室年度 总执行数据 -->
			select db.group_id ,db.hos_id , db.copy_code ,  db.month , db.dept_id , db.subj_code , sum(nvl(db.amount,0)) sumValue
			FROM dataBase1 db
			where
				db.group_id = #{group_id,jdbcType=INTEGER}
				AND db.hos_id = #{hos_id,jdbcType=INTEGER}
				AND db.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="subj_code != null and subj_code != ''">
				AND db.subj_code like( #{subj_code,jdbcType=VARCHAR} || '%') 
				</if>
				and db.year between ${year} - 1 and ${year}
           group by db.group_id ,db.hos_id , db.copy_code , db.month , db.dept_id , db.subj_code 
		)
		
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.year,
			a.month ,
			a.subj_code,
			bis.subj_name ,
			a.dept_id,
			hd.dept_code ,
			hd.dept_name ,
			b.budg_value hyValue ,
			a.count_value,
			a.budg_value,
			a.remark,
			a.grow_rate,
			a.resolve_rate,
			a.last_year_income,
			a.last_month_carried,
			a.carried_next_month,
			bmiep.resolve_way ,
			bmiep.resolve_data ,
			bmiep.reference_years ,
			exeData.sumValue
		FROM BUDG_MED_INCOME_DEPT_MONTH  a
		left join BUDG_MED_INCOME_DEPT_YEAR  b
			ON
				a.group_id  = b.group_id
				and a.hos_id  = b.hos_id
				and a.copy_code  = b.copy_code
				and a.year  = b.year
				and a.subj_code  = b.subj_code
				and a.dept_id  = b.dept_id
		left join exeData
			ON
				a.group_id  = exeData.group_id
				and a.hos_id  = exeData.hos_id
				and a.copy_code  = exeData.copy_code
				and a.month  = exeData.month
				and a.dept_id  = exeData.dept_id
				and a.subj_code  = exeData.subj_code
		left join hos_dept hd
			ON
				a.group_id  = hd.group_id
				and a.hos_id  = hd.hos_id
				and a.dept_id  = hd.dept_id
				and hd.is_stop = 0
		left join budg_income_subj bis
			ON
				a.group_id  = bis.group_id
				and a.hos_id  = bis.hos_id
				and a.copy_code  = bis.copy_code
				and a.subj_code  = bis.subj_code
				and a.year  = bis.budg_year
		left join BUDG_MED_INCOME_MONTH_PLAN  bmiep
			ON
				a.group_id  = bmiep.group_id
				and a.hos_id  = bmiep.hos_id
				and a.copy_code  = bmiep.copy_code
				and a.year  = bmiep.budg_year
				and a.subj_code  = bmiep.subj_code
		where                     
			
			a.group_id = #{group_id,jdbcType=INTEGER}
			
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND a.year = #{year,jdbcType=VARCHAR}
			<if test="subj_code != null and subj_code != ''">
			AND a.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			AND bis.is_last = '1'
	  <!-- 根据部门ID排序  固定集合中各科室的位置   用于平均分摊计算时  确定最后角标上的科室不变 -->
		order by a.dept_id
	</select>
	
	<!-- 查询 所选年度、科目 、科室  参考年度  所有月收入 总和 -->
	<select id="querySumLastYearIncome" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap" >
		with temp as( <!-- 科室月份 历史执行数据  信息 -->
			select  a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code ,
				sum(amount) amount 
			from BUDG_MED_INCOME_EXECUTE a
			Left join hos_dept_dict  b
				on	
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.dept_id  = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = ${year}-1
			group by a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code
		),
		deptData as ( <!-- 筛选 预算科室 信息  -->
			select  ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code
			from acc_dept_attr  ada
			left  join hos_dept_dict  hdd
				on	
					ada.group_id  = hdd.group_id
					and ada.hos_id  = hdd.hos_id
					and ada.dept_id  = hdd.dept_id
					and hdd.is_stop = 0
			where 
				ada.group_id = #{group_id,jdbcType=INTEGER}
				AND ada.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ada.is_budg = 1
		),
		
		dataBase1 as ( <!-- 从temp 及 deptData  临时表中  抓取 科目 与 预算科室的对应关系 并计算上年收入 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code , sum(b.amount) amount
			from deptData a
			left join temp b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by  a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code
		)
		SELECT  nvl(sum(amount),0) as sumLastIncome 
		
		FROM dataBase1 bmie
		WHERE    
			bmie.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmie.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmie.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			<if test="year != null and year != ''">
			AND year between ${year} - (select reference_years 
                                 from BUDG_MED_INCOME_MONTH_PLAN 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
                                    AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND subj_code = #{subj_code,jdbcType=VARCHAR}) and ${year} - 1
			</if>
			
			AND bmie.subj_code like (#{subj_code} || '%')
			
			AND bmie.dept_id = #{dept_id,jdbcType=INTEGER}

		group by bmie.group_id , bmie.hos_id ,bmie.copy_code , bmie.dept_id , bmie.subj_code  
	</select>
	
	<!-- 结转查询SQL：查询当前年月预算值,执行值,上月结转,下月结转及下月数据的上月结转 -->
	<select id="queryBudgMedIncomeDeptMonthByYearMonth" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap">
		SELECT 
		  beihm.group_id,beihm.hos_id,beihm.copy_code,beihm.year,beihm.subj_code,beihm.month,beihm.dept_id,beihm.count_value,
		  beihm.budg_value,beihm.remark,beihm.grow_rate,beihm.resolve_rate,nvl(beihm.last_year_income,0) as last_year_income,
		  nvl(beihm.last_month_carried,0) as last_month_carried ,nvl(beihm.carried_next_month,0) as carried_next_month,
		  nvl(beie.amount,0) as amount,bis.is_caarried,
		  <!-- 计算:下月结转值 = 上月结转 + 本月预算 -本月执行 -->
		  nvl(beihm.LAST_MONTH_CARRIED,0) + nvl(beihm.BUDG_VALUE,0) - nvl(amount,0) AS next_value
		FROM 
		BUDG_MED_INCOME_DEPT_MONTH beihm
		LEFT JOIN BUDG_MED_INCOME_EXECUTE beie
    	ON
              beihm.group_id = beie.group_id
              AND beihm.hos_id = beie.hos_id
              AND beihm.copy_code = beie.copy_code
              AND beihm.year = beie.year
              AND beihm.month = beie.month
              AND beihm.dept_id = beie.dept_id
              AND beihm.subj_code = beie.subj_code
		LEFT JOIN BUDG_INCOME_SUBJ bis
		ON
		     beihm.group_id = bis.group_id
		     AND beihm.hos_id = bis.hos_id
		     AND beihm.copy_code = bis.copy_code
		     AND beihm.year = bis.budg_year
		     AND beihm.subj_code = bis.subj_code
		WHERE
		     beihm.group_id = #{group_id}
		     AND beihm.hos_id = #{hos_id}
		     AND beihm.copy_code = #{copy_code}
		     AND beihm.year = #{year}
		     AND beihm.month = #{month}    
	</select>
	
	<!-- 结转时SQL:批量修改上月结转值或批量修改下月结转值 -->
	<update id="updateBatchBudgMedIncomeDeptMonthValue" parameterType="java.util.List">
		 <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_DEPT_MONTH 
			SET
				<trim suffixOverrides=",">
					<!-- 修改上月结转 --> 
					<if test="item.last_month_carried != null">
						last_month_carried = #{item.last_month_carried},
					</if>
					
					<!-- 修改结转下月 -->
					<if test="item.carried_next_month != null">
						carried_next_month = #{item.carried_next_month},
					</if>
				</trim>
			WHERE
				group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
				AND year = #{item.year}
				AND month = #{item.month}
				
				<if test="item.dept_id != null and item.dept_id != '' ">
					AND dept_id = #{item.dept_id}
				</if>
				
				<if test="item.subj_code != null and item.subj_code != ''">
					AND subj_code = #{item.subj_code}
				</if>
		</foreach>
	</update>
	
	<!-- 查询科室年度预算值  -->
	<select id="queryDeptyearValue" resultMap="budgMedIncomeDeptMonthMap"  parameterType="java.util.Map" >
	
		SELECT  budg_value yearValue
		FROM BUDG_MED_INCOME_DEPT_YEAR 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}  
			and copy_code = #{copy_code,jdbcType=VARCHAR}   
			and year = #{year,jdbcType=VARCHAR}    
			and subj_code = #{subj_code,jdbcType=VARCHAR}  
			and dept_id = #{dept_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_MED_INCOME_DEPT_MONTH
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 根据 科室、月份、自定义分解系数 计算分解比例(科室月) -->
	<select id="queryResolveDataRate" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap" >
		with temp as(
			SELECT  group_id , hos_id ,copy_code , resolve_data_code ,dept_id , sum(nvl(value,0)) sumValue	
			FROM BUDG_RESOLVE_DATA_DM
			where    
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			group by group_id , hos_id ,copy_code , resolve_data_code , dept_id
		)
		
		select case temp.sumValue when 0 then null else nvl(a.value,0)/ temp.sumValue end resolve_rate
		
		FROM BUDG_RESOLVE_DATA_DM a
		left join temp
			on 
				a.group_id = temp.group_id
				and a.hos_id = temp.hos_id
				and a.copy_code = temp.copy_code
				and a.resolve_data_code = temp.resolve_data_code
				and a.dept_id = temp.dept_id
		where    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			AND a.month = #{month,jdbcType=VARCHAR}
		
	</select>
	
	<!-- 增量生成时 查询要生成的数据 -->
	<select id="queryData" parameterType="java.util.Map" resultMap="budgMedIncomeDeptMonthMap" >
		with temp as( <!-- 科室月份 历史执行数据  信息 -->
			select  a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code ,
				sum(amount) amount 
			from BUDG_MED_INCOME_EXECUTE a
			Left join hos_dept_dict  b
				on	
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.dept_id  = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = ${year}-1
			group by a.group_id , a.hos_id , a.copy_code , a.year ,a.month , a.dept_id , a.subj_code , b.dept_code
		),
		deptData as ( <!-- 筛选 预算科室 信息  -->
			select  ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code
			from acc_dept_attr  ada
			left  join hos_dept_dict  hdd
				on	
					ada.group_id  = hdd.group_id
					and ada.hos_id  = hdd.hos_id
					and ada.dept_id  = hdd.dept_id
					and hdd.is_stop = 0
			where 
				ada.group_id = #{group_id,jdbcType=INTEGER}
				AND ada.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ada.is_budg = 1
		),
		
		dataBase1 as ( <!-- 从temp 及 deptData  临时表中  抓取 科目 与 预算科室的对应关系 并计算上年收入 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code , sum(b.amount) amount
			from deptData a
			left join temp b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by  a.group_id , a.hos_id , b.copy_code , b.year , b.month , a.dept_id , b.subj_code
		)
		
		SELECT t.* FROM (
			SELECT 
				a.group_id,
				a.hos_id,
				a.copy_code,
				a.budg_year year,
				b.month ,
				a.subj_code,
				b.dept_id ,
				b.amount last_year_income
			FROM BUDG_MED_INCOME_MONTH_PLAN a
			
			Left join dataBase1  b
				ON
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.copy_code  = b.copy_code
					and a.budg_year  = to_char(to_number(b.year) + 1)
					and a.subj_code  = b.subj_code
			where                     
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.budg_year = #{year,jdbcType=VARCHAR}
		)t
		where t.dept_id is not null
			and not exists (
				select 1 from BUDG_MED_INCOME_DEPT_MONTH a
				where a.group_id = t.group_id
					and a.hos_id = t.hos_id
					and a.copy_code = t.copy_code
					and a.year = t.year
					and a.month = t.month
					and a.subj_code = t.subj_code
					and a.dept_id = t.dept_id
			)
	</select>
	
	<update id="updateBatchBudgValue" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_income_dept_month SET
				budg_value = #{item.budg_value}
			<where>                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				
				AND year = #{item.year,jdbcType=VARCHAR}
	
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND month = #{item.month,jdbcType=VARCHAR}
			</where>  			
		</foreach>
	</update>
</mapper>

