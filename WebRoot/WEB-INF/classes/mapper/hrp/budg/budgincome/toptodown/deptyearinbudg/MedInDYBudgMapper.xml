<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgincome.toptodown.deptyearinbudg.MedInDYBudgMapper">
	
	<resultMap id="budgMedIncomeDeptYear" type="com.chd.hrp.budg.entity.BudgMedIncomeDeptYear">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="dept_id" column="dept_id"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="state" column="state"/>
	<result property="reason" column="reason"/>
	<result property="refer_value" column="refer_value"/>
	</resultMap>
		
	<resultMap id="budgMedIncomeDeptYearMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="resolve_rate" column="resolve_rate"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="state" column="state"/>
	<result property="reason" column="reason"/>
	<result property="refer_value" column="refer_value"/>
	
	<result property="hyValue" column="hyValue"/>
	<result property="resolve_way" column="resolve_way"/>
	<result property="resolve_data" column="resolve_data"/>
	<result property="reference_years" column="reference_years"/>
	<result property="sumValue" column="sumValue"/>
	<result property="sumLastIncome" column="sumLastIncome"/>
	<result property="sumDept" column="sumDept"/>
	</resultMap>
	
	<resultMap id="deptMap" type="java.util.Map">
	
	<result property="id" column="id"/>
	<result property="text" column="text"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_INCOME_DEPT_YEAR (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			subj_code
			,
			dept_id
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_income
			,
			state
			,
			reason
			,
			refer_value
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{subj_code,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{count_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{resolve_rate,jdbcType=INTEGER}
			,
			#{last_year_income,jdbcType=INTEGER}
			,
			#{state,jdbcType=VARCHAR}
			,
			#{reason,jdbcType=VARCHAR}
			,
			#{refer_value,jdbcType=INTEGER}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_INCOME_DEPT_YEAR (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			subj_code
			,
			dept_id
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			resolve_rate
			,
			last_year_income
			,
			state
			,
			reason
			,
			refer_value
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.count_value,jdbcType=INTEGER}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.grow_rate,jdbcType=INTEGER}
			,
			#{item.resolve_rate,jdbcType=INTEGER}
			,
			#{item.last_year_income,jdbcType=INTEGER}
			,
			#{item.state,jdbcType=VARCHAR}
			,
			#{item.reason,jdbcType=VARCHAR}
			,
			#{item.refer_value,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_med_income_dept_year  SETS
			count_value = #{count_value,jdbcType=INTEGER}
			,
			budg_value = #{budg_value,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			grow_rate = #{grow_rate,jdbcType=INTEGER}
			,
			resolve_rate = #{resolve_rate,jdbcType=INTEGER}
			,
			last_year_income = #{last_year_income,jdbcType=INTEGER}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_income_dept_year SET
				
				count_value = #{item.count_value,jdbcType=INTEGER}
				,
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
				,
				resolve_rate = #{item.resolve_rate,jdbcType=INTEGER}
				,
				last_year_income = #{item.last_year_income,jdbcType=INTEGER}
			where                    
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_med_income_dept_year 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_med_income_dept_year 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
	
		SELECT 
			bmidy.group_id,
			bmidy.hos_id,
			bmidy.copy_code,
			bmidy.year,
			bmidy.subj_code,
			bis.subj_name ,
			bmidy.dept_id,
			hd.dept_code ,
			hd.dept_name ,
			bmihy.budg_value hyValue ,
			bmidy.count_value,
			bmidy.budg_value,
			bmidy.remark,
			bmidy.grow_rate,
			bmidy.resolve_rate,
			bmidy.last_year_income,
			bmidy.state,
			bmidy.reason,
			bmidy.refer_value
		FROM BUDG_MED_INCOME_DEPT_YEAR  bmidy
		left join BUDG_MED_INCOME_HOS_YEAR  bmihy
			ON
				bmidy.group_id  = bmihy.group_id
				and bmidy.hos_id  = bmihy.hos_id
				and bmidy.copy_code  = bmihy.copy_code
				and bmidy.year  = bmihy.year
				and bmidy.subj_code  = bmihy.subj_code
		left join hos_dept_dict hd
			ON
				bmidy.group_id  = hd.group_id
				and bmidy.hos_id  = hd.hos_id
				and bmidy.dept_id  = hd.dept_id
				and hd.is_stop = 0
		left join budg_income_subj bis
			ON
				bmidy.group_id  = bis.group_id
				and bmidy.hos_id  = bis.hos_id
				and bmidy.copy_code  = bis.copy_code
				and bmidy.subj_code  = bis.subj_code
				and bmidy.year  = bis.budg_year
		left join BUDG_MED_INCOME_EDIT_PLAN bmiep
		    ON 
		        bmidy.group_id  = bmiep.group_id
				and bmidy.hos_id  = bmiep.hos_id
				and bmidy.copy_code  = bmiep.copy_code
				and bmidy.subj_code  = bmiep.subj_code
				and bmidy.year  = bmiep.budg_year 		
		WHERE                     
			bmidy.group_id = #{group_id,jdbcType=INTEGER}
			AND bmidy.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bmidy.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="year != null and year != ''">
			AND bmidy.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND bmidy.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND bmidy.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != '' and state != '04'">
			AND bmidy.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="state == '04'">
			AND bmidy.state is null
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last != ''">
			AND bis.is_last = #{is_last,jdbcType=INTEGER}
			</if>
			<if test="resolve_or_sum != null and resolve_or_sum != ''">
			AND bmiep.resolve_or_sum = #{resolve_or_sum,jdbcType=INTEGER}
			</if>
		order by bmidy.group_id asc
	</select>
	<select id="queryByCode" resultMap="budgMedIncomeDeptYear"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			dept_id,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			state,
			reason,
			refer_value
		FROM budg_med_income_dept_year 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			year = #{year,jdbcType=VARCHAR}   and 
			subj_code = #{subj_code,jdbcType=VARCHAR}   and 
			dept_id = #{dept_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgMedIncomeDeptYear"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			dept_id,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			state,
			reason,
			refer_value
		FROM BUDG_MED_INCOME_DEPT_YEAR 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgMedIncomeDeptYear"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			subj_code,
			dept_id,
			count_value,
			budg_value,
			remark,
			grow_rate,
			resolve_rate,
			last_year_income,
			state,
			reason,
			refer_value
		FROM BUDG_MED_INCOME_DEPT_YEAR 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
		order by group_id asc
	</select>
	
	<select id="queryBudgDept" resultMap="deptMap">
		select ada.dept_id id,
			hd.dept_code||' '||hd.dept_name text
		from acc_dept_attr ada
		left join hos_dept hd
			ON
				ada.group_id  = hd.group_id 
				and ada.hos_id  = hd.hos_id 
				and ada.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	<where>
     		<if test="group_id != null  and group_id != ''">
				and ada.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and ada.hos_id = #{hos_id}
			</if>
			and ada.type_code in ('01','02')
			and ada.natur_code in ('01','02')
			and ada.is_budg = 1
			<if test="key != null and key != ''">
				and (
					hd.dept_code like '${key}%' or
					hd.dept_name like '%${key}%' or
					hd.spell_code like '%${key}%' or
					hd.wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by hd.dept_code	
	</select>
	
	<select id="queryDeptExist" resultMap="deptMap"   parameterType="java.util.Map" >
		select ada.dept_id , hd.dept_code , hd.dept_name 
		from acc_dept_attr ada
		left join hos_dept_dict hd
			ON
				ada.group_id  = hd.group_id 
				and ada.hos_id  = hd.hos_id 
				and ada.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	<where>
     		<if test="group_id != null  and group_id != ''">
				and ada.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and ada.hos_id = #{hos_id}
			</if>
			<if test="dept_code != null  and dept_code != ''">
				and hd.dept_code = #{dept_code}
			</if>
			<!-- and ada.type_code in ('01','02') -->
			and ada.is_budg = 1
			
		</where>
		order by hd.dept_code	
	</select>
	
<!-- 	计算方法  查询表中选定科目下所有同级科室信息 -->
	<select id="queryCountData" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
		with temp as( <!-- 科室年度 历史执行数据  信息 -->
			select  a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , a.subj_code , b.dept_code ,
				sum(amount) amount 
			from BUDG_MED_INCOME_EXECUTE a
			Left join hos_dept_dict  b
				on	
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.dept_id  = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = ${year}-1
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , a.subj_code , b.dept_code
		),
		deptData as ( <!-- 筛选 预算科室 信息  -->
			select  ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code
			from acc_dept_attr  ada
			left  join hos_dept_dict  hdd
				on	
					ada.group_id  = hdd.group_id
					and ada.hos_id  = hdd.hos_id
					and ada.dept_id  = hdd.dept_id
					and hdd.is_stop = 0
			where 
				ada.group_id = #{group_id,jdbcType=INTEGER}
				AND ada.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ada.is_budg = 1
		),
		
		dataBase as ( <!-- 从temp 及 deptData  临时表中  抓取 科目 与 预算科室的对应关系 并计算上年收入 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , a.dept_id , b.subj_code , sum(b.amount) amount
			from deptData a
			left join temp b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by  a.group_id , a.hos_id , b.copy_code , b.year , a.dept_id , b.subj_code
		) ,
		exeData as(<!-- 参考年限   科室年度 总执行数据 -->
			select db.group_id ,db.hos_id , db.copy_code ,  db.dept_id , db.subj_code , sum(nvl(db.amount,0)) sumValue
			FROM dataBase db
			where
				db.group_id = #{group_id,jdbcType=INTEGER}
				AND db.hos_id = #{hos_id,jdbcType=INTEGER}
				AND db.copy_code = #{copy_code,jdbcType=VARCHAR}
				<if test="subj_code != null and subj_code != ''">
				AND db.subj_code like( #{subj_code,jdbcType=VARCHAR} || '%') 
				</if>
				and db.year between ${year} - (select reference_years 
                                 from BUDG_MED_INCOME_DEPT_PLAN 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
									AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND subj_code = db.subj_code) and ${year} - 1
           group by db.group_id ,db.hos_id , db.copy_code ,  db.dept_id , db.subj_code 
		)
		
		SELECT 
			bmidy.group_id,
			bmidy.hos_id,
			bmidy.copy_code,
			bmidy.year,
			bmidy.subj_code,
			bis.subj_name ,
			bmidy.dept_id,
			hd.dept_code ,
			hd.dept_name ,
			bmihy.budg_value hyValue ,
			bmidy.count_value,
			bmidy.budg_value,
			bmidy.remark,
			bmidy.grow_rate,
			bmidy.resolve_rate,
			bmidy.last_year_income,
			bmidy.state,
			bmidy.reason,
			bmidy.refer_value,
			bmiep.resolve_way ,
			bmiep.resolve_data ,
			bmiep.reference_years ,
			exeData.sumValue
		FROM BUDG_MED_INCOME_DEPT_YEAR  bmidy
		left join BUDG_MED_INCOME_HOS_YEAR  bmihy
			ON
				bmidy.group_id  = bmihy.group_id
				and bmidy.hos_id  = bmihy.hos_id
				and bmidy.copy_code  = bmihy.copy_code
				and bmidy.year  = bmihy.year
				and bmidy.subj_code  = bmihy.subj_code
		left join exeData
			ON
				bmidy.group_id  = exeData.group_id
				and bmidy.hos_id  = exeData.hos_id
				and bmidy.copy_code  = exeData.copy_code
				and bmidy.dept_id  = exeData.dept_id
				and bmidy.subj_code  = exeData.subj_code
		left join hos_dept hd
			ON
				bmidy.group_id  = hd.group_id
				and bmidy.hos_id  = hd.hos_id
				and bmidy.dept_id  = hd.dept_id
				and hd.is_stop = 0
		left join budg_income_subj bis
			ON
				bmidy.group_id  = bis.group_id
				and bmidy.hos_id  = bis.hos_id
				and bmidy.copy_code  = bis.copy_code
				and bmidy.subj_code  = bis.subj_code
				and bmidy.year  = bis.budg_year
		left join budg_med_income_dept_plan bmiep
			ON
				bmidy.group_id  = bmiep.group_id
				and bmidy.hos_id  = bmiep.hos_id
				and bmidy.copy_code  = bmiep.copy_code
				and bmidy.year  = bmiep.budg_year
				and bmidy.subj_code  = bmiep.subj_code
		where                     
			
			bmidy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmidy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmidy.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmidy.year = #{year,jdbcType=VARCHAR}
			<if test="subj_code != null and subj_code != ''">
			AND bmidy.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			
			AND bis.is_last = '1'
	  <!-- 根据部门ID排序  固定集合中各科室的位置   用于平均分摊计算时  确定最后角标上的科室不变 -->
		order by bmidy.dept_id
	</select>
	
	<!-- 查询 所选年度、科目 的 所有科室上年收入 总和 -->
	<select id="querySumLastYearIncome" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
		
		SELECT  sum(nvl(amount,0)) as sumLastIncome	FROM BUDG_MED_INCOME_EXECUTE
		where    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year between ${year} - (select reference_years 
                                 from BUDG_MED_INCOME_DEPT_PLAN 
                                 where   
									group_id = #{group_id,jdbcType=INTEGER}
									AND hos_id = #{hos_id,jdbcType=INTEGER}
									AND copy_code = #{copy_code,jdbcType=VARCHAR}
									AND budg_year = #{year,jdbcType=VARCHAR}
                                    AND subj_code = #{subj_code,jdbcType=VARCHAR}) and ${year} - 1
			AND subj_code like (#{subj_code} || '%')
		group by group_id , hos_id ,copy_code ,  subj_code 
		  
	</select>
	
	<!-- 查询 所选年度、科目 的 所有同级科室 总数 -->
	<select id="querySumDept" parameterType="java.util.Map" resultType="Integer" >
	
		SELECT  count(DEPT_ID) as sumDept 
		
		FROM BUDG_MED_INCOME_DEPT_YEAR bmidy
		
		left join budg_income_subj bis
			ON
				bmidy.group_id  = bis.group_id
				and bmidy.hos_id  = bis.hos_id
				and bmidy.copy_code  = bis.copy_code
				and bmidy.subj_code  = bis.subj_code
				and bmidy.year  = bis.budg_year
		where    
			
			bmidy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmidy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmidy.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmidy.year = #{year,jdbcType=VARCHAR}
			
			AND bmidy.subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND bis.is_last = '1'
	</select>
	<select id="querySumDeptAll" parameterType="java.util.Map" resultType="Integer" >
	
		SELECT  count(DEPT_ID) as sumDept 
		
		FROM BUDG_MED_INCOME_DEPT_YEAR bmidy
		
		left join budg_income_subj bis
			ON
				bmidy.group_id  = bis.group_id
				and bmidy.hos_id  = bis.hos_id
				and bmidy.copy_code  = bis.copy_code
				and bmidy.subj_code  = bis.subj_code
				and bmidy.year  = bis.budg_year
		where    
			
			bmidy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmidy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmidy.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmidy.year = #{year,jdbcType=VARCHAR}
			
			AND bis.is_last = '1'</select>
	<!-- 查询 所传科目 科室的 上年收入 -->
	<select id="queryDeptYearLastYearWork" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
	
		SELECT sum(amount) as last_year_income	
		FROM BUDG_MED_INCOME_EXECUTE
		where   
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND year = #{year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	
	</select>
	
	<!-- 查询指标编码的分解方法 -->
	<select id="queryGetWay" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
	
		SELECT  resolve_way FROM budg_med_income_dept_plan
		<where>    
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="budg_year != null and budg_year != ''">
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 批量 查询 添加数据是否已存在 -->
	<select id="queryDataExistList" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_MED_INCOME_DEPT_YEAR
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
<!-- 根据主键 查询数据状态 -->
	<select id="queryState" resultType="string"  parameterType="java.util.Map" >
	
		SELECT state FROM BUDG_MED_INCOME_DEPT_YEAR 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	</select>
	
	<!-- 下发 撤回 更新数据 -->
	<update id="issuedOrRetractUpdate" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_DEPT_YEAR set
				state = #{item.state,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 确认  更新数据 -->
	<update id="passOrDisPassUpdate" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_DEPT_YEAR set
				reason = #{item.reason,jdbcType=VARCHAR},
				refer_value = #{item.refer_value,jdbcType=INTEGER},
				state = #{item.state,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 根据 科室、自定义分解系数 计算分解比例(科室年) -->
	<select id="queryResolveDataRate" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
		with temp as(
			SELECT  group_id , hos_id ,copy_code , resolve_data_code ,sum(nvl(value,0)) sumValue	
			FROM BUDG_RESOLVE_DATA_DY
			where    
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			group by group_id , hos_id ,copy_code , resolve_data_code	
		)
		
		select case temp.sumValue when 0 then null else nvl(a.value,0)/ temp.sumValue end resolve_rate
		
		FROM BUDG_RESOLVE_DATA_DY a
		left join temp
			on 
				a.group_id = temp.group_id
				and a.hos_id = temp.hos_id
				and a.copy_code = temp.copy_code
				and a.resolve_data_code = temp.resolve_data_code
		where    
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.resolve_data_code = #{resolve_data,jdbcType=VARCHAR}
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
	</select>
	
	<!-- 生成查询数据  -->
	<select id="queryData" parameterType="java.util.Map" resultMap="budgMedIncomeDeptYearMap" >
		
		with temp as( <!-- 根据 历史执行数据  抓取 科目 与 末级科室的对应关系 -->
			select  a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , a.subj_code , b.dept_code ,
				sum(amount) amount 
			from BUDG_MED_INCOME_EXECUTE a
			Left join hos_dept_dict  b
				on	
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.dept_id  = b.dept_id
					and b.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year =to_char(to_number(#{year})-1)
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , a.subj_code , b.dept_code
		),
		deptData as ( <!-- 筛选 预算科室 信息  -->
			select  ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code
			from acc_dept_attr  ada
			left  join hos_dept_dict  hdd
				on	
					ada.group_id  = hdd.group_id
					and ada.hos_id  = hdd.hos_id
					and ada.dept_id  = hdd.dept_id
					and hdd.is_stop = 0
			where 
				ada.group_id = #{group_id,jdbcType=INTEGER}
				AND ada.hos_id = #{hos_id,jdbcType=INTEGER}
				AND ada.is_budg = 1
		),
		
		dataBase as ( <!-- 从temp 及 deptData  临时表中  抓取 科目 与 预算科室的对应关系 并计算上年收入 -->
			select a.group_id , a.hos_id , b.copy_code , b.year , a.dept_id , b.subj_code , sum(b.amount) amount
			from deptData a
			left join temp b 
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and b.dept_code like (a.dept_code || '%')
			group by  a.group_id , a.hos_id , b.copy_code , b.year , a.dept_id , b.subj_code
		)
		
		SELECT t.* FROM (
			SELECT 
				a.group_id,
				a.hos_id,
				a.copy_code,
				a.budg_year year,
				a.subj_code,
				b.dept_id ,
				b.amount last_year_income
			FROM BUDG_MED_INCOME_DEPT_PLAN a
			
			Left join dataBase  b
				ON
					a.group_id  = b.group_id
					and a.hos_id  = b.hos_id
					and a.copy_code  = b.copy_code
					and a.budg_year  = to_char(to_number(b.year) + 1)
					and a.subj_code  = b.subj_code
			where                     
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.budg_year = #{year,jdbcType=VARCHAR}
		)t
		where t.dept_id is not null
			and not exists (
				select 1 from BUDG_MED_INCOME_DEPT_YEAR a
				where a.group_id = t.group_id
					and a.hos_id = t.hos_id
					and a.copy_code = t.copy_code
					and a.year = t.year
					and a.subj_code = t.subj_code
					and a.dept_id = t.dept_id
			)
	</select>

</mapper>

