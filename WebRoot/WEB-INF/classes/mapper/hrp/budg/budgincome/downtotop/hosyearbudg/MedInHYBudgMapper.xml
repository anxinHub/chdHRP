<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgincome.downtotop.hosyearbudg.MedInHYBudgMapper">
	
	<resultMap id="budgMedIncomeHosYear" type="com.chd.hrp.budg.entity.BudgMedIncomeHosYear">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="dept_id" column="dept_id"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="last_year_income" column="last_year_income"/>
	</resultMap>
		
	<resultMap id="budgMedIncomeHosYearMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="last_year_income" column="last_year_income"/>
	
	<result property="hyValue" column="hyValue"/>
	<result property="resolve_way" column="resolve_way"/>
	<result property="sumLastIncome" column="sumLastIncome"/>
	<result property="sumDept" column="sumDept"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_INCOME_HOS_YEAR (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		subj_code
		,
		count_value
		,
		budg_value
		,
		remark
		,
		last_year_income
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{year,jdbcType=VARCHAR}
		,
		#{subj_code,jdbcType=VARCHAR}
		,
		#{dept_id,jdbcType=INTEGER}
		,
		#{count_value,jdbcType=INTEGER}
		,
		#{budg_value,jdbcType=INTEGER}
		,
		#{remark,jdbcType=VARCHAR}
		,
		#{last_year_income,jdbcType=INTEGER}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_INCOME_HOS_YEAR (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		subj_code
		,
		count_value
		,
		budg_value
		,
		remark
		,
		last_year_income
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.count_value,jdbcType=INTEGER}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.last_year_income,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_med_income_hos_year  SETS
		count_value = #{count_value,jdbcType=INTEGER}
		,
		budg_value = #{budg_value,jdbcType=INTEGER}
		,
		remark = #{remark,jdbcType=VARCHAR}
		,
		last_year_income = #{last_year_income,jdbcType=INTEGER}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
			AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_med_income_hos_year SET
				
				count_value = #{item.count_value,jdbcType=INTEGER}
				,
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				last_year_income = #{item.last_year_income,jdbcType=INTEGER}
			<where>                     
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>  
				<if test="item.subj_code != null and item.subj_code != ''">
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_med_income_hos_year 
		where                     
		group_id = #{group_id,jdbcType=INTEGER}
		
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
		AND year = #{year,jdbcType=VARCHAR}
		
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_med_income_hos_year 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgMedIncomeHosYearMap" >
		with sumDept as(
			select group_id , hos_id, copy_code,year, subj_code ,sum(budg_value) dept_budg_value 
			FROM BUDG_MED_INCOME_DEPT_YEAR
			WHERE 
			group_id  = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code,jdbcType=VARCHAR} and year = #{year}
			GROUP BY group_id , hos_id , copy_code , year , subj_code 
		)select null as group_id, null as hos_id, null as copy_code,null as year ,null as subj_code, '预算值合计' as subj_name,
  null as count_value,nvl(sum(bmihy.budg_value),0)budg_value ,
null as remark, null as last_year_income
  , null as hyValue 
  from  BUDG_MED_INCOME_HOS_YEAR  bmihy where bmihy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmihy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmihy.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmihy.year = #{year,jdbcType=VARCHAR}
			<if test="subj_code != null and subj_code != ''">
				  and bmihy.subj_code in (
	          select bis2.subj_code from budg_income_subj bis2
	          start with bis2.subj_code=#{subj_code,jdbcType=VARCHAR} connect by bis2.super_code=prior bis2.subj_code
	        )  
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last != ''">
			AND bis.is_last = #{is_last,jdbcType=INTEGER}
			</if>
			<if test="resolve_or_sum != null and resolve_or_sum != ''">
			AND bmiep.resolve_or_sum = #{resolve_or_sum,jdbcType=INTEGER}
			</if>
  union all 
		SELECT 
			bmihy.group_id,
			bmihy.hos_id,
			bmihy.copy_code,
			bmihy.year,
			bmihy.subj_code,
			bis.subj_name ,
			bmihy.count_value,
			bmihy.budg_value,
			bmihy.remark,
			bmihy.last_year_income,
			sd.dept_budg_value hyValue
		FROM BUDG_MED_INCOME_HOS_YEAR  bmihy
		left join sumDept sd
		    ON
				bmihy.group_id  = sd.group_id
				and bmihy.hos_id  = sd.hos_id
				and bmihy.copy_code  = sd.copy_code
				and bmihy.subj_code  = sd.subj_code
				and bmihy.year  = sd.year
		left join BUDG_INCOME_SUBJ bis
			ON
				bmihy.group_id  = bis.group_id
				and bmihy.hos_id  = bis.hos_id
				and bmihy.copy_code  = bis.copy_code
				and bmihy.subj_code  = bis.subj_code
				and bmihy.year  = bis.budg_year
		left join BUDG_MED_INCOME_EDIT_PLAN bmiep
		    ON 
		        bmihy.group_id  = bmiep.group_id
				and bmihy.hos_id  = bmiep.hos_id
				and bmihy.copy_code  = bmiep.copy_code
				and bmihy.subj_code  = bmiep.subj_code
				and bmihy.year  = bmiep.budg_year 		
		<where>                     
			
			AND bmihy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmihy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmihy.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmihy.year = #{year,jdbcType=VARCHAR}
			
			<if test="subj_code != null and subj_code != ''">
				  and bmihy.subj_code in (
	          select bis2.subj_code from budg_income_subj bis2
	          start with bis2.subj_code=#{subj_code,jdbcType=VARCHAR} connect by bis2.super_code=prior bis2.subj_code
	        )  
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last != ''">
			AND bis.is_last = #{is_last,jdbcType=INTEGER}
			</if>
			<if test="resolve_or_sum != null and resolve_or_sum != ''">
			AND bmiep.resolve_or_sum = #{resolve_or_sum,jdbcType=INTEGER}
			</if>
		</where>   
		
	</select>
	<select id="queryByCode" resultMap="budgMedIncomeHosYear"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		subj_code,
		count_value,
		budg_value,
		remark,
		last_year_income
		FROM budg_med_income_hos_year 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		subj_code = #{subj_code,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryDataExits" resultMap="budgMedIncomeHosYearMap"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		subj_code,
		count_value,
		budg_value,
		remark,
		last_year_income
		FROM budg_med_income_hos_year 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		subj_code = #{subj_code,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryByUniqueness" resultMap="budgMedIncomeHosYear"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		subj_code,
		count_value,
		budg_value,
		remark,
		last_year_income
		FROM BUDG_MED_INCOME_HOS_YEAR 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		</where>   

	</select>
	<select id="queryExists" resultMap="budgMedIncomeHosYear"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		subj_code,
		count_value,
		budg_value,
		remark,
		last_year_income
		FROM BUDG_MED_INCOME_HOS_YEAR 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		
		</where>   

	</select>
	
<!-- 	汇总该年度 该科目所有科室预算值 -->
	<select id="queryCountData" parameterType="java.util.Map" resultMap="budgMedIncomeHosYearMap" >
		with sumDept as (
		    select group_id, hos_id, copy_code, year, subj_code,sum(nvl(last_year_income,0)) last_year_income
		      , sum(budg_value) as budg_value
		    from BUDG_MED_INCOME_DEPT_YEAR
		    where
		 	group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
		    group by group_id, hos_id, copy_code, year, subj_code
		)
		select a.group_id, a.hos_id, a.copy_code, a.year, a.subj_code,
		      a.last_year_income,a.budg_value from sumDept a 
		 where
		 not exists (select 1 from budg_med_income_hos_year b
		      where a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.year = b.year
		      and a.subj_code = b.subj_code)	
	</select>
	
	<!-- 查询 所选年度、科目 的 所有科室上年收入 总和 -->
	<select id="queryLastYearIncome" parameterType="java.util.Map" resultMap="budgMedIncomeHosYearMap" >
	
		SELECT  sum(amount) last_year_income 
		
		FROM BUDG_MED_INCOME_EXECUTE bmie
		where    
		
			bmie.group_id = #{group_id,jdbcType=INTEGER}

			AND bmie.hos_id = #{hos_id,jdbcType=INTEGER}
		
			AND bmie.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmie.year = #{year,jdbcType=VARCHAR}
			
			AND bmie.subj_code = #{subj_code,jdbcType=VARCHAR}	  
		  
	</select>
	
	<!-- 查询 所选年度、科目 的 所有同级科室 总数 -->
	<select id="querySumDept" parameterType="java.util.Map" resultType="Integer" >
	
		SELECT  count(DEPT_ID) as sumDept 
		
		FROM BUDG_MED_INCOME_HOS_YEAR bmihy
		
		left join budg_income_subj bis
			ON
				bmihy.group_id  = bis.group_id
				and bmihy.hos_id  = bis.hos_id
				and bmihy.copy_code  = bis.copy_code
				and bmihy.subj_code  = bis.subj_code
				and bmihy.year  = bis.budg_year
		where    
			
			bmihy.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bmihy.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bmihy.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bmihy.year = #{year,jdbcType=VARCHAR}
			
			AND bmihy.subj_code = #{subj_code,jdbcType=VARCHAR}
			
			AND bis.is_last = '1'
	</select>
</mapper>

