<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgincome.downtotop.deptyearbudg.BudgDeptIndependentSubjMapper">
	
	<resultMap id="budgDeptIndependentSubj" type="com.chd.hrp.budg.entity.BudgDeptIndependentSubj">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="subj_code" column="subj_code"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="grow_value" column="grow_value"/>
	<result property="last_year_income" column="last_year_income"/>
	</resultMap>
		 
	<resultMap id="budgDeptIndependentSubjMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="count_value" column="count_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="remark" column="remark"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="grow_value" column="grow_value"/>
	<result property="last_year_income" column="last_year_income"/>
	<result property="get_way" column="get_way"/>
	<result property="formula_id" column="formula_id"/>
	<result property="fun_id" column="fun_id"/>
	</resultMap>
	
	<resultMap id="deptMap" type="java.util.Map">
	<result property="id" column="id"/>
	<result property="text" column="text"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_DEPT_INDEPENDENT_SUBJ (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			dept_id
			,
			subj_code
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			grow_value
			,
			last_year_income
			
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{year,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{subj_code,jdbcType=VARCHAR}
			,
			#{count_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{grow_value,jdbcType=INTEGER}
			,
			#{last_year_income,jdbcType=INTEGER}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_DEPT_INDEPENDENT_SUBJ (
			group_id
			,
			hos_id
			,
			copy_code
			,
			year
			,
			dept_id
			,
			subj_code
			,
			count_value
			,
			budg_value
			,
			remark
			,
			grow_rate
			,
			grow_value
			,
			last_year_income
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.subj_code,jdbcType=VARCHAR}
			,
			#{item.count_value,jdbcType=INTEGER}
			,
			#{item.budg_value,jdbcType=INTEGER}
			,
			#{item.remark,jdbcType=VARCHAR}
			,
			#{item.grow_rate,jdbcType=INTEGER}
			,
			#{item.grow_value,jdbcType=INTEGER}
			,
			#{item.last_year_income,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_dept_independent_subj set
			count_value = #{count_value,jdbcType=INTEGER}
			,
			budg_value = #{budg_value,jdbcType=INTEGER}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			grow_rate = #{grow_rate,jdbcType=INTEGER}
			,
			grow_value = #{grow_value,jdbcType=INTEGER}
			,
			last_year_income = #{last_year_income,jdbcType=INTEGER}
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_dept_independent_subj 
			SET				
				count_value = #{item.count_value,jdbcType=INTEGER}
				,
				
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
				,
				
				grow_value = #{item.grow_value,jdbcType=INTEGER}
				,
				
				last_year_income = #{item.last_year_income,jdbcType=INTEGER}
			WHERE
				 group_id = #{item.group_id,jdbcType=INTEGER}
				
				 AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				
				 AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				  
				 AND year = #{item.year,jdbcType=VARCHAR}
				
				 AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				
				 AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
	
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_dept_independent_subj 
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="subj_code != null and subj_code != ''">
				AND subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_dept_independent_subj 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				<if test="item.dept_id != null and item.dept_id != ''">
					AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.subj_code != null and item.subj_code != ''">
					AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				</if>
				
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgDeptIndependentSubjMap" >
	
		SELECT 
			bdis.group_id,
			bdis.hos_id,
			bdis.copy_code,
			bdis.year,
			bdis.dept_id,
			hd.dept_code ,
			hd.dept_name ,
			bdis.subj_code,
			bis.subj_name,
			bdis.count_value,
			bdis.budg_value,
			bdis.remark,
			bdis.grow_rate,
			bdis.grow_value,
			bdis.last_year_income,
			bmiep.get_way ,
			bmiep.formula_id ,
			bmiep.fun_id 
		FROM BUDG_DEPT_INDEPENDENT_SUBJ bdis
		LEFT JOIN BUDG_INCOME_SUBJ  bis
			ON
				bdis.group_id = bis.group_id
				and bdis.hos_id = bis.hos_id
				and bdis.copy_code = bis.copy_code
				and bdis.year = bis.budg_year
				and bdis.subj_code = bis.subj_code
		LEFT JOIN BUDG_MED_INCOME_EDIT_PLAN bmiep
			ON
				bdis.group_id = bmiep.group_id
				and bdis.hos_id = bmiep.hos_id
				and bdis.copy_code = bmiep.copy_code
				and bdis.year = bmiep.budg_year
				and bdis.subj_code = bmiep.subj_code
		LEFT JOIN HOS_DEPT_DICT hd
			ON
				bdis.group_id  = hd.group_id
				and bdis.hos_id  = hd.hos_id
				and bdis.dept_id  = hd.dept_id
			<!-- 	and hd.is_stop = 0 -->
		where                    
				bdis.group_id = #{group_id,jdbcType=INTEGER}
			
				AND bdis.hos_id = #{hos_id,jdbcType=INTEGER}
			
				AND bdis.copy_code = #{copy_code,jdbcType=VARCHAR}
			
				AND bdis.year = #{year,jdbcType=VARCHAR}
			<if test="dept_id != null and dept_id != ''">
				AND bdis.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="subj_code != null and subj_code != ''">
				AND bdis.subj_code like '${subj_code}%'
			</if>
			<if test="subj_level != null and subj_level != ''">
				AND bis.subj_level = #{subj_level,jdbcType=VARCHAR}
			</if>
			<if test="edit_method != null and edit_method != ''">
				AND bmiep.edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
		  
		order by bdis.dept_id, bdis.subj_code
	</select>
	<select id="queryByCode" resultMap="budgDeptIndependentSubj"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			dept_id,
			subj_code,
			count_value,
			budg_value,
			remark,
			grow_rate,
			grow_value,
			last_year_income
		FROM budg_dept_independent_subj 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		dept_id = #{dept_id,jdbcType=INTEGER}   and 
		subj_code = #{subj_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgDeptIndependentSubj"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			dept_id,
			subj_code,
			count_value,
			budg_value,
			remark,
			grow_rate,
			grow_value,
			last_year_income
		FROM BUDG_DEPT_INDEPENDENT_SUBJ 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgDeptIndependentSubj"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			year,
			dept_id,
			subj_code,
			count_value,
			budg_value,
			remark,
			grow_rate,
			grow_value,
			last_year_income
		FROM BUDG_DEPT_INDEPENDENT_SUBJ 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
		order by group_id asc
	</select>
	
	<!-- 根据科目编码查询上年收入和编制方法下的取值方法 -->
	<select id="queryLastYearIncome" parameterType="java.util.Map" resultMap="budgDeptIndependentSubjMap" >
		with temp as ( <!-- 汇总  组建 科室年度执行数据 临时表(末级科室、末级科目) -->
			select a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , hdd.dept_code , a.subj_code , sum(a.amount) amount
			from BUDG_MED_INCOME_EXECUTE a
			left join hos_dept_dict hdd
				on
					a.group_id = hdd.group_id
					and a.hos_id = hdd.hos_id
					and a.dept_id = hdd.dept_id
					and hdd.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = #{year,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , hdd.dept_code , a.subj_code
		),
		budgDept as ( <!-- 预算科室 信息 临时表 （归集用）  -->
			select ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code  
			from acc_dept_attr ada
			LEFT JOIN hos_dept_dict hdd
				on
					ada.group_id = hdd.group_id
					and ada.hos_id = hdd.hos_id
					and ada.dept_id = hdd.dept_id
					and ada.is_budg = 1
					and hdd.is_stop = 0
			
		),
		sumData as ( <!-- 预算科室 末级科目  科室年度 执行数据  临时表 -->
			select a.group_id , a.hos_id , a.copy_code , a.year , t.dept_id , a.subj_code , sum(a.amount) amount
			from temp  a
			left join  budgDept t
				on
					a.group_id = t.group_id
					and a.hos_id = t.hos_id
					and a.dept_code like (t.dept_code || '%')
			group by a.group_id , a.hos_id , a.copy_code , a.year , t.dept_id , a.subj_code
		)
		SELECT  
			sum(amount) as last_year_income
		FROM sumData 

		where    
			 group_id = #{group_id,jdbcType=INTEGER}
			 AND hos_id = #{hos_id,jdbcType=INTEGER}
			 AND copy_code = #{copy_code,jdbcType=VARCHAR}
		   	 AND year = #{year,jdbcType=VARCHAR}
			 AND dept_id = #{dept_id,jdbcType=VARCHAR} 
			 AND subj_code like(#{subj_code} || '%' ) 
	</select>
	
	<select id="queryGetWay" parameterType="java.util.Map" resultMap="budgDeptIndependentSubjMap" >
	
		SELECT  
			get_way
		FROM BUDG_MED_INCOME_EDIT_PLAN 
		WHERE    
			group_id = #{group_id,jdbcType=INTEGER}
		
			AND hos_id = #{hos_id,jdbcType=INTEGER}
		
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
		
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
		
			AND edit_method = #{edit_method,jdbcType=VARCHAR} 
	</select>
	
	<!-- 导入   查询数据是否已在编制方案表中存在 -->
	<select id="queryBudgMedIncomeEditPlanByCode" parameterType="java.util.Map" resultType="Integer">
		SELECT count(0)
  		FROM budg_med_income_edit_plan
 		<where>    
			
				group_id = #{group_id,jdbcType=INTEGER}
			
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
				AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
				AND subj_code = #{subj_code,jdbcType=VARCHAR}

			<if test="edit_method != null and edit_method != ''">
				AND edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 导入判断  查询该条数据取值方法-->
	<select id="queryGetWayFromBudgMedIncomeEditPlan" parameterType="java.util.Map" resultType="String">
		SELECT get_way
  		FROM budg_med_income_edit_plan
 		<where>  
			group_id = #{group_id,jdbcType=INTEGER}
		
			AND hos_id = #{hos_id,jdbcType=INTEGER}
		
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
		
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			<if test="edit_method != null and edit_method != ''">
				AND edit_method = #{edit_method,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	
	<!-- 查询科室下拉框-->
	<select id="queryBudgDept" resultMap="deptMap">
		select ada.dept_id id,
			hd.dept_code||' '||hd.dept_name text
		from acc_dept_attr ada
		left join hos_dept_dict hd
			ON
				ada.group_id  = hd.group_id 
				and ada.hos_id  = hd.hos_id 
				and ada.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	where
			ada.group_id = #{group_id}
			and ada.hos_id = #{hos_id}
			and ada.type_code in ('01','02')
			and ada.is_budg = 1
			<if test="key != null and key != ''">
			and (hd.dept_code like '${key}%' or
				hd.dept_name like '%${key}%' or
				hd.spell_code like '%${key}%' or
				hd.wbx_code like '%${key}%' )
			</if>
		order by hd.dept_code	
	</select>
	
	<!-- 查询添加数据是否已存在 -->
	<select id="queryDataExist" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM budg_dept_independent_subj
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
		</foreach>
	</select>
	<select id="queryDataDeptList" parameterType="java.util.Map" resultMap="budgDeptIndependentSubjMap">
	 select hd.group_id, hd.hos_id, hd.dept_id, hd.dept_code, hd.dept_name
  ,   ada.type_code
  
from HOS_DEPT hd
left join ACC_DEPT_ATTR ada on hd.group_id = ada.group_id
and hd.hos_id = ada.hos_id
and hd.dept_id = ada.dept_id 

 
where hd.group_id = #{group_id,jdbcType=INTEGER}
				AND hd.hos_id = #{hos_id,jdbcType=INTEGER}
  and (ada.type_code = '01' or ada.type_code = '02')
  and ada.is_budg=1
  and hd.is_stop = 0
order by hd.dept_code asc
	
	</select>
	<!-- 增量生成时 查询生成数据 -->
	<select id="queryData" parameterType="java.util.Map" resultMap="budgDeptIndependentSubjMap" >
		with temp as ( <!-- 汇总  组建 科室年度执行数据 临时表(末级科室、末级科目) -->
			select a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , hdd.dept_code , a.subj_code , sum(a.amount) amount
			from BUDG_MED_INCOME_EXECUTE a
			left join hos_dept_dict hdd
				on
					a.group_id = hdd.group_id
					and a.hos_id = hdd.hos_id
					and a.dept_id = hdd.dept_id
					and hdd.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year = to_char(to_number(#{budg_year})-1)
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , hdd.dept_code , a.subj_code
		),
		budgDept as ( <!-- 预算科室 信息 临时表 （归集用）  -->
			select ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code 
			from acc_dept_attr ada
			LEFT JOIN hos_dept_dict hdd
				on
					ada.group_id = hdd.group_id
					and ada.hos_id = hdd.hos_id
					and ada.dept_id = hdd.dept_id
					and ada.is_budg = 1
					and hdd.is_stop = 0
				
		),
		sumData as ( <!-- 预算科室 末级科目  科室年度 执行数据  临时表 -->
			select a.group_id , a.hos_id , a.copy_code , a.year , t.dept_id , a.subj_code , sum(a.amount) amount
			from temp  a
			left join  budgDept t
				on
					a.group_id = t.group_id
					and a.hos_id = t.hos_id
					and a.dept_code like (t.dept_code || '%')
					and t.dept_code is not null
			group by a.group_id , a.hos_id , a.copy_code , a.year , t.dept_id , a.subj_code
		)
		select a.group_id, a.hos_id, a.copy_code, a.budg_year year<!-- ,t.dept_id -->,a.subj_code, sum(t.amount) last_year_income 
		from BUDG_MED_INCOME_EDIT_PLAN a 
		left join sumData t
			on  
				a.group_id = t.group_id
				and a.hos_id = t.hos_id
				and a.copy_code = t.copy_code
				and a.budg_year = t.year + 1
				and t.subj_code like (a.subj_code || '%')
		where
			a.edit_method =  #{edit_method,jdbcType=VARCHAR}
			AND a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				 and a.budg_year=#{budg_year,jdbcType=VARCHAR}
			and not exists (
			    select 1
			    from BUDG_DEPT_INDEPENDENT_SUBJ b
			    where t.group_id = b.group_id
			      and t.hos_id = b.hos_id
			      and t.copy_code = b.copy_code
			      and t.year = b.year
			      and t.subj_code = b.subj_code
			      and t.dept_id = b.dept_id
			  )
	group by a.group_id, a.hos_id, a.copy_code, a.budg_year,<!-- t.dept_id, -->a.subj_code
	</select>
	
	<!-- 增长比例获取 -->
	<select id="getGrowRate" parameterType="java.util.Map" resultMap="budgDeptIndependentSubjMap" >
		with temp as ( <!-- 汇总  组建 科室年度执行数据 临时表(末级科室、末级科目) -->
			select a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , hdd.dept_code , a.subj_code , sum(a.amount) amount
			from BUDG_MED_INCOME_EXECUTE a
			left join hos_dept_dict hdd
				on
					a.group_id = hdd.group_id
					and a.hos_id = hdd.hos_id
					and a.dept_id = hdd.dept_id
					and hdd.is_stop = 0
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , hdd.dept_code , a.subj_code
		),
		budgDept as ( <!-- 预算科室 信息 临时表 （归集用）  -->
			select ada.group_id , ada.hos_id , ada.dept_id , hdd.dept_code 
			from acc_dept_attr ada
			LEFT JOIN hos_dept_dict hdd
				on
					ada.group_id = hdd.group_id
					and ada.hos_id = hdd.hos_id
					and ada.dept_id = hdd.dept_id
					and ada.is_budg = 1
					and hdd.is_stop = 0
			
		),
		sumData as ( <!-- 预算科室 末级科目  科室年度 执行数据  临时表 -->
			select a.group_id , a.hos_id , a.copy_code , a.year , t.dept_id , a.subj_code , sum(a.amount) amount
			from temp  a
			left join  budgDept t
				on
					a.group_id = t.group_id
					and a.hos_id = t.hos_id
					and a.dept_code like (t.dept_code || '%')
					and t.dept_code is not null
			group by a.group_id , a.hos_id , a.copy_code , a.year , t.dept_id , a.subj_code
		),
		baseData as ( <!-- 预算科室 所有收入科目  科室年度 执行数据  临时表 -->
			select a.group_id , a.hos_id , a.copy_code , b.year , b.dept_id , a.subj_code , sum(b.amount) amount
			from budg_income_subj a
			left join sumData b
				on
				a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and a.budg_year = b.year + 1
					and b.subj_code like ( a.subj_code || '%')
			where 
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND b.dept_id is not null
			group by a.group_id , a.hos_id , a.copy_code , b.year , b.dept_id , a.subj_code 
		),
		t as ( <!-- 预算科室 所有科目 增长比例  临时表 -->
			select a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id , a.subj_code  , 
				case b.amount when 0 then 0 else round((a.amount- b.amount)/b.amount*100,2) end grow_rate
			from baseData a
			
			left join baseData b
				on
					a.group_id = b.group_id
					and a.hos_id = b.hos_id
					and a.copy_code = b.copy_code
					and a.year = to_char(to_number(b.year)+1)
					and a.subj_code = b.subj_code
					and a.dept_id = b.dept_id
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND b.year between #{start_year,jdbcType=VARCHAR} and #{end_year,jdbcType=VARCHAR}
		),
		avgData as( <!-- 开始年限 —— 结束年限  平均增长比例  临时表 -->
			
			select group_id , hos_id , copy_code ,dept_id , subj_code , avg(grow_rate) grow_rate
			from t
			where 
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			group by group_id , hos_id , copy_code , dept_id ,subj_code
		)
		
		select a.year , a.subj_code , b.subj_name, a.dept_id , hdd.dept_code , hdd.dept_name ,nvl(ad.grow_rate,0)  grow_rate
	    from BUDG_DEPT_INDEPENDENT_SUBJ a
	    Left join BUDG_MED_INCOME_EDIT_PLAN bmiep
			ON a.group_id = bmiep.group_id
				and a.hos_id = bmiep.hos_id
				and a.copy_code = bmiep.copy_code
				and a.year = bmiep.budg_year
				and a.subj_code = bmiep.subj_code
				AND bmiep.is_single_count = 1
	    left join avgData ad 
	         on
	              a.group_id = ad.group_id
	              and a.hos_id = ad.hos_id
	              and a.copy_code = ad.copy_code
	              and a.subj_code = ad.subj_code
	              and a.dept_id = ad.dept_id
	     left join hos_dept_dict hdd 
	         on
	              a.group_id = hdd.group_id
	              and a.hos_id = hdd.hos_id
	              and a.dept_id = hdd.dept_id
	              and hdd.is_stop = 0
	     LEFT JOIN  BUDG_INCOME_SUBJ b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.year = b.budg_year
				and a.subj_code = b.subj_code
	     where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.year = #{year,jdbcType=VARCHAR}
			AND bmiep.edit_method = '02'
	</select>
	
	<!-- 科室年度医疗收入独立核算科目预算  更新 增长比例 及相关数据数据 -->
	<update id="updateGrowRate" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_DEPT_INDEPENDENT_SUBJ  set
				count_value = last_year_income* (1+to_number(${item.grow_rate})/100)
				,
				budg_value = last_year_income * (1+to_number(${item.grow_rate})/100)
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=VARCHAR}
		</foreach>
	</update>
	<select id="queryDeptId" resultMap="deptMap">
		select ada.dept_id id,
			hd.dept_code,hd.dept_name
		from acc_dept_attr ada
		left join hos_dept_dict hd
			ON
				ada.group_id  = hd.group_id 
				and ada.hos_id  = hd.hos_id 
				and ada.dept_id  = hd.dept_id 
				and hd.is_stop  = 0
     	where
			ada.group_id = #{group_id}
			and ada.hos_id = #{hos_id}
			and ada.type_code in ('01','02')
			and ada.is_budg = 1
		    and hd.dept_code=#{dept_code}
		order by hd.dept_code	
	
	
	</select>
</mapper>

