<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgincome.check.BudgIncomeCheckMapper">
	
	<resultMap id="budgIncomeCheck" type="com.chd.hrp.budg.entity.BudgMedIncomeCheck">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="check_code" column="check_code"/>
	<result property="check_type" column="check_type"/>
	<result property="remark" column="remark"/>
	<result property="maker" column="maker"/>
	<result property="make_data" column="make_data"/>
	<result property="checker" column="checker"/>
	<result property="check_data" column="check_data"/>
	<result property="issue_data" column="issue_data"/>
	<result property="bc_state" column="bc_state"/>
	</resultMap>
		
	<resultMap id="budgIncomeCheckMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="check_code" column="check_code"/>
	<result property="check_type" column="check_type"/>
	<result property="remark" column="remark"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_data" column="make_data"/>
	<result property="checker" column="checker"/>
	<result property="check_name" column="check_name"/>
	<result property="check_data" column="check_data"/>
	<result property="issue_data" column="issue_data"/>
	<result property="bc_state" column="bc_state"/>
	</resultMap>
	
	<!-- 查询业务数据用Map -->
	<resultMap id="dateMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
    <result property="year" column="year"/>
    <result property="subj_code" column="subj_code"/>
    <result property="subj_name" column="subj_name"/>
    <result property="dept_id" column="dept_id"/>
    <result property="dept_code" column="dept_code"/>
   	<result property="dept_name" column="dept_name"/>
    <result property="month1" column="month1"/>
    <result property="month2" column="month2"/>
    <result property="month3" column="month3"/>
    <result property="month4" column="month4"/>
    <result property="month5" column="month5"/>
    <result property="month6" column="month6"/>
    <result property="month7" column="month7"/>
    <result property="month8" column="month8"/>
    <result property="month9" column="month9"/>
    <result property="month10" column="month10"/>
    <result property="month11" column="month11"/>
    <result property="month12" column="month12"/>
    <result property="year_sum" column="year_sum"/>
    
    <result property="month1Pre" column="month1Pre"/>
    <result property="month2Pre" column="month2Pre"/>
    <result property="month3Pre" column="month3Pre"/>
    <result property="month4Pre" column="month4Pre"/>
    <result property="month5Pre" column="month5Pre"/>
    <result property="month6Pre" column="month6Pre"/>
    <result property="month7Pre" column="month7Pre"/>
    <result property="month8Pre" column="month8Pre"/>
    <result property="month9Pre" column="month9Pre"/>
    <result property="month10Pre" column="month10Pre"/>
    <result property="month11Pre" column="month11Pre"/>
    <result property="month12Pre" column="month12Pre"/>
    <result property="year_sumPre" column="year_sumPre"/>
    
    <result property="hos_suggest" column="hos_suggest"/>
    <result property="dept_suggest" column="dept_suggest"/>
    
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_MED_INCOME_CHECK (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			check_code
			,
			check_type
			,
			remark
			,
			maker
			,
			make_data
			,
			checker
			,
			check_data
			,
			issue_data
			,
			bc_state
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{check_code,jdbcType=VARCHAR}
			,
			#{check_type,jdbcType=VARCHAR}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{maker,jdbcType=INTEGER}
			,
			#{make_data,jdbcType=DATE}
			,
			#{checker,jdbcType=INTEGER}
			,
			#{check_data,jdbcType=DATE}
			,
			#{issue_data,jdbcType=DATE}
			,
			#{bc_state,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_MED_INCOME_CHECK (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			check_code
			,
			check_type
			,
			remark
			,
			maker
			,
			make_data
			,
			checker
			,
			check_data
			,
			issue_data
			,
			bc_state
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.check_code,jdbcType=VARCHAR}
				,
				#{item.check_type,jdbcType=VARCHAR}
				,
				#{item.remark,jdbcType=VARCHAR}
				,
				#{item.maker,jdbcType=INTEGER}
				,
				#{item.make_data,jdbcType=DATE}
				,
				#{item.checker,jdbcType=INTEGER}
				,
				#{item.check_data,jdbcType=DATE}
				,
				#{item.issue_data,jdbcType=DATE}
				,
				#{item.bc_state,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_MED_INCOME_CHECK  set
			check_type = #{check_type,jdbcType=VARCHAR}
			,
			remark = #{remark,jdbcType=VARCHAR}
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND check_code = #{check_code,jdbcType=VARCHAR}
	</update>
	
	<!-- 发送 、 召回 -->
	<update id="updateBc_state" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_CHECK set
				bc_state = #{item.bc_state,jdbcType=VARCHAR} 
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	<!-- 审核、消审 -->
	<update id="auditOrUnAudit" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_CHECK set
				bc_state = #{item.bc_state,jdbcType=VARCHAR} ,
				checker = #{item.checker,jdbcType=INTEGER},
				check_data = #{item.check_data,jdbcType=DATE}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<!-- 预算下达 、 取消预算下达  -->
	<update id="cancelIssueOrIssue" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_CHECK set
				bc_state = #{item.bc_state,jdbcType=VARCHAR} ,
				issue_data = #{item.issue_data,jdbcType=DATE}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_INCOME_CHECK set
				check_type = #{item.check_type,jdbcType=VARCHAR}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_MED_INCOME_CHECK 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND check_code = #{check_code,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_MED_INCOME_CHECK 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			    group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				<if test="item.budg_year != null and item.budg_year != ''">
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				</if>
				<if test="item.check_code != null and item.check_code != ''">
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgIncomeCheckMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.check_code,
			a.check_type,
			a.remark,
			a.maker,
			b.user_name  maker_name ,
			a.make_data,
			a.checker,
			c.user_name  check_name ,
			a.check_data,
			a.issue_data,
			a.bc_state
		FROM BUDG_MED_INCOME_CHECK a
		left join sys_user b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.user_id
				and b.is_stop = 0
		left join sys_user c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.checker = c.user_id
				and c.is_stop = 0
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="check_code != null and check_code != ''">
			AND a.check_code = #{check_code,jdbcType=VARCHAR}
			</if>
			<if test="check_type != null and check_type != ''">
			AND a.check_type = #{check_type,jdbcType=VARCHAR}
			</if>
			<if test="bc_state != null and bc_state != ''">
			AND a.bc_state = #{bc_state,jdbcType=VARCHAR}
			</if>
			
			<if test="is_state != null and is_state != '' ">
				AND a.bc_state not in (#{is_state,jdbcType=VARCHAR})
			</if>
		order by a.check_code asc
	</select>
	<select id="queryByCode" resultMap="budgIncomeCheckMap"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.budg_year,
			a.check_code,
			a.check_type,
			a.remark,
			a.maker,
			b.emp_name  maker_name ,
			a.make_data ,
			a.checker,
			c.emp_name check_name ,
			a.check_data ,
			a.issue_data, 
		   	a.bc_state
		FROM BUDG_MED_INCOME_CHECK a
		left join HOS_EMP_DICT b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.emp_id
				and b.is_stop = 0
		left join HOS_EMP_DICT c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.checker = c.emp_id
				and c.is_stop = 0
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   
			and a.hos_id = #{hos_id,jdbcType=INTEGER}   
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}   
			and a.budg_year = #{budg_year,jdbcType=VARCHAR} 
			and a.check_code = #{check_code,jdbcType=VARCHAR} 
	</select>
	<select id="queryByUniqueness" resultMap="budgIncomeCheck"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		budg_year,
		check_code,
		check_type,
		remark,
		maker,
		make_data,
		checker,
		check_data,
		issue_data,
		bc_state
		FROM BUDG_MED_INCOME_CHECK 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="check_code != null and check_code != ''">
		AND check_code = #{check_code,jdbcType=VARCHAR}
		</if>
		<if test="check_type != null and check_type != ''">
		AND check_type = #{check_type,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_data != null and make_data != ''">
		AND make_data = #{make_data,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_data != null and check_data != ''">
		AND check_data = #{check_data,jdbcType=DATE}
		</if>
		<if test="issue_data != null and issue_data != ''">
		AND issue_data = #{issue_data,jdbcType=DATE}
		</if>
		<if test="bc_state != null and bc_state != ''">
		AND bc_state = #{bc_state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryExists" resultMap="budgIncomeCheck"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			check_code,
			check_type,
			remark,
			maker,
			make_data,
			checker,
			check_data,
			issue_data,
			bc_state
		FROM BUDG_MED_INCOME_CHECK 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="budg_year != null and budg_year != ''">
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		</if>
		<if test="check_code != null and check_code != ''">
		AND check_code = #{check_code,jdbcType=VARCHAR}
		</if>
		<if test="check_type != null and check_type != ''">
		AND check_type = #{check_type,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
		AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_data != null and make_data != ''">
		AND make_data = #{make_data,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="check_data != null and check_data != ''">
		AND check_data = #{check_data,jdbcType=DATE}
		</if>
		<if test="issue_data != null and issue_data != ''">
		AND issue_data = #{issue_data,jdbcType=DATE}
		</if>
		<if test="bc_state != null and bc_state != ''">
		AND bc_state = #{bc_state,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	
	<select id="queryCheckCode"  resultType="java.lang.String" parameterType="java.util.Map">
		select 
			check_code 
		from BUDG_MED_INCOME_CHECK 
     where                     
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select> 

	<!-- 查询员工所对应的科室-->
	<select id="queryDeptNameByUserId" resultType="java.lang.String" parameterType="java.util.Map">
		select 
			dept_name, 
			maker
        from hos_emp a
        left join hos_dept b
        	on a.dept_id = b.dept_id
        left join BUDG_MED_INCOME_CHECK c
        	on 
        		c.group_id = b.group_id
         		and c.maker = a.emp_id
        left join acc_dept_attr d
        	on 
        		a.emp_id = d.emp_id
         		and a.dept_id = d.dept_id
		<where>
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
            and c.maker = a.emp_id
            and a.dept_id=b.dept_id
           and a.dept_id=d.dept_id 
		</where> 
	</select>
	<!-- 查询员工所对应的科室-->
	<select id="queryDeptInformation" resultType="java.lang.String" parameterType="java.util.Map">
		select 
			b.dept_name ,
			c.hos_name,
			a.budg_year,
			a.maker,
			a.make_data,
			a.check_code,
			a.check_data,
			a.issue_data,
			a.bc_state 
		from BUDG_MED_INCOME_CHECK a
        left join hos_info_dict  c 
        	on 
        		c.group_id=a.group_id 
        		and c.hos_id=a.hos_id 
		<where>
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND c.maker=a.emp_id   
		</where> 
	</select>
	
	<!--查询医院明细   初始审核(修改页面 未下达) -->
	<select id="queryBudgMedIncomeHosMonth" resultMap="dateMap" parameterType="java.util.Map">
		with temp as ( 
			select 
			 	a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.subj_code , 
			 	bis.subj_name , 
			 	sum(case when a.month='01' then  nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then  nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then  nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then  nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then  nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then  nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then  nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then  nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then  nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then  nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then  nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then  nvl(a.budg_value,0) else 0 end ) as month12 ,
	     		nvl(b.budg_value,0) year_sum 
	     	from  BUDG_MED_INCOME_HOS_MONTH a
	     	LEFT JOIN BUDG_MED_INCOME_HOS_YEAR b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code 
	     	Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code , bis.subj_name ,b.budg_value 
		)
		
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , 
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum 
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name 
		order by a.subj_code
	</select>
	
	<!--查询医院明细   调整审核 (修改页面 未下达) -->
	<select id="queryBudgMedIncomeHosMonthAdjust" resultMap="dateMap" parameterType="java.util.Map">
		with temp as (
			select
				a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.subj_code , 
			 	bis.subj_name , 
				sum(case when a.month='01' then nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.budg_value,0) else 0 end ) as month12  ,
				nvl(c.budg_value,0) year_sum ,
				
				sum(case when b.month='01' then nvl(b.budg_value,0) else 0 end ) as month1Pre,
	     		sum(case when b.month='02' then nvl(b.budg_value,0) else 0 end ) as month2Pre,
	     		sum(case when b.month='03' then nvl(b.budg_value,0) else 0 end ) as month3Pre,
	     		sum(case when b.month='04' then nvl(b.budg_value,0) else 0 end ) as month4Pre,
	     		sum(case when b.month='05' then nvl(b.budg_value,0) else 0 end ) as month5Pre,
	     		sum(case when b.month='06' then nvl(b.budg_value,0) else 0 end ) as month6Pre,
	     		sum(case when b.month='07' then nvl(b.budg_value,0) else 0 end ) as month7Pre,
	     		sum(case when b.month='08' then nvl(b.budg_value,0) else 0 end ) as month8Pre,
	     		sum(case when b.month='09' then nvl(b.budg_value,0) else 0 end ) as month9Pre,
	     		sum(case when b.month='10' then nvl(b.budg_value,0) else 0 end ) as month10Pre,
	     		sum(case when b.month='11' then nvl(b.budg_value,0) else 0 end ) as month11Pre,
	     		sum(case when b.month='12' then nvl(b.budg_value,0) else 0 end ) as month12Pre ,
				sum(nvl(b.budg_value,0)) year_sumPre
			from  BUDG_MED_INCOME_HOS_MONTH a  
			Left join BUDG_MED_INCOME_HM_COPY b
				on
					a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
					and a.month = b.month
			LEFT JOIN BUDG_MED_INCOME_HOS_YEAR c
	     		on
	     			a.group_id = c.group_id
	     			and a.hos_id = c.hos_id
	     			and a.copy_code = c.copy_code
	     			and a.year = c.year
	     			and a.subj_code = c.subj_code 
			Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
	 		where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
				and b.check_code = (select max(check_code) 
									from budg_med_income_check
									where group_id = ${group_id} 
									and hos_id = ${hos_id} 
									and copy_code = ${copy_code} 
									and budg_year = ${year}
									and check_code &lt; #{check_code,jdbcType=VARCHAR}
									)
	 		group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code , bis.subj_name , c.budg_value
		)
		
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , 
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum , 
			sum(nvl(b.month1Pre,0)) month1Pre , sum(nvl(b.month2Pre,0)) month2Pre , sum(nvl(b.month3,0)) month3Pre , sum(nvl(b.month4Pre,0)) month4Pre ,
			sum(nvl(b.month5Pre,0)) month5Pre , sum(nvl(b.month6Pre,0)) month6Pre , sum(nvl(b.month7,0)) month7Pre , sum(nvl(b.month8Pre,0)) month8Pre ,
			sum(nvl(b.month9Pre,0)) month9Pre , sum(nvl(b.month10Pre,0)) month10Pre , sum(nvl(b.month11,0)) month11Pre , sum(nvl(b.month12Pre,0)) month12Pre ,
			sum(nvl(b.year_sumPre,0)) year_sumPre
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name 
		order by a.subj_code
	</select>
	
	<!--查询科室明细 初始审核 (修改页面 未下达) -->
	<select id="queryBudgMedIncomeDeptMonth" resultMap="dateMap" parameterType="java.util.Map">
		with temp as(
			select 
				a.group_id ,
				a.hos_id ,
				a.copy_code ,
				a.year ,
				a.dept_id ,
				hdd.dept_code ,
				hdd.dept_name ,
				a.subj_code , 
				bis.subj_name , 
				sum(case when a.month='01' then nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.budg_value,0) else 0 end ) as month12  ,
	     		nvl(b.budg_value,0) year_sum 
	     	from  BUDG_MED_INCOME_DEPT_MONTH a
	     	Left  join BUDG_MED_INCOME_DEPT_YEAR b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
	     			and a.dept_id = b.dept_id
	     	Left join hos_dept_dict hdd
	     		on	
	     			a.group_id = hdd.group_id
	     			and a.hos_id = hdd.hos_id
	     			and a.dept_id = hdd.dept_id
	     			and hdd.is_stop = 0
	     	Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
			 group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id ,hdd.dept_code ,hdd.dept_name ,
			 	a.subj_code , bis.subj_name  , b.budg_value 
		)
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , b.dept_id ,b.dept_code ,b.dept_name ,
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum 
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name ,
				b.dept_id ,b.dept_code ,b.dept_name 
		 order by a.subj_code , b.dept_code
	</select>
	
	<!--查询科室明细  调整审核 (修改页面 未下达) -->
	<select id="queryBudgMedIncomeCheckDeptMonthAdjust" resultMap="dateMap" parameterType="java.util.Map">
		with temp as(
			select 
	    		a.group_id ,
				a.hos_id ,
				a.copy_code ,
				a.year ,
				a.dept_id ,
				hdd.dept_code ,
				hdd.dept_name ,
				a.subj_code , 
				bis.subj_name ,
				sum(case when a.month='01' then nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.budg_value,0) else 0 end ) as month12  ,
	     		nvl(c.budg_value,0) year_sum 
	     		sum(case when b.month='01' then nvl(b.budg_value,0) else 0 end ) as month1Pre,
	     		sum(case when b.month='02' then nvl(b.budg_value,0) else 0 end ) as month2Pre,
	     		sum(case when b.month='03' then nvl(b.budg_value,0) else 0 end ) as month3Pre,
	     		sum(case when b.month='04' then nvl(b.budg_value,0) else 0 end ) as month4Pre,
	     		sum(case when b.month='05' then nvl(b.budg_value,0) else 0 end ) as month5Pre,
	     		sum(case when b.month='06' then nvl(b.budg_value,0) else 0 end ) as month6Pre,
	     		sum(case when b.month='07' then nvl(b.budg_value,0) else 0 end ) as month7Pre,
	     		sum(case when b.month='08' then nvl(b.budg_value,0) else 0 end ) as month8Pre,
	     		sum(case when b.month='09' then nvl(b.budg_value,0) else 0 end ) as month9Pre,
	     		sum(case when b.month='10' then nvl(b.budg_value,0) else 0 end ) as month10Pre,
	     		sum(case when b.month='11' then nvl(b.budg_value,0) else 0 end ) as month11Pre,
	     		sum(case when b.month='12' then nvl(b.budg_value,0) else 0 end ) as month12Pre ,
				sum(nvl(b.budg_value,0)) year_sumPre
	     	from  BUDG_MED_INCOME_DEPT_MONTH a
	     	Left join  BUDG_MED_INCOME_DM_COPY b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
	     			and a.dept_id = b.dept_id
					and a.month = b.month
	     	Left  join BUDG_MED_INCOME_DEPT_YEAR c
	     		on
	     			a.group_id = c.group_id
	     			and a.hos_id = c.hos_id
	     			and a.copy_code = c.copy_code
	     			and a.year = c.year
	     			and a.subj_code = c.subj_code
	     			and a.dept_id = c.dept_id
	     	Left join hos_dept_dict hdd
	     		on	
	     			a.group_id = hdd.group_id
	     			and a.hos_id = hdd.hos_id
	     			and a.dept_id = hdd.dept_id
	     			and hdd.is_stop = 0
	     	Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
				and b.check_code = (select max(check_code) 
									from budg_med_income_check
									where group_id = ${group_id} 
									and hos_id = ${hos_id} 
									and copy_code = ${copy_code} 
									and budg_year = ${year}
									and check_code &lt; #{check_code,jdbcType=VARCHAR}
									)
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id ,hdd.dept_code ,
					hdd.dept_name ,	a.subj_code , bis.subj_name , c.budg_value 
		)
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , b.dept_id ,b.dept_code ,b.dept_name ,
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum, 
			sum(nvl(b.month1Pre,0)) month1Pre , sum(nvl(b.month2Pre,0)) month2Pre , sum(nvl(b.month3Pre,0)) month3Pre , sum(nvl(b.month4Pre,0)) month4Pre ,
			sum(nvl(b.month5Pre,0)) month5Pre , sum(nvl(b.month6Pre,0)) month6Pre , sum(nvl(b.month7Pre,0)) month7Pre , sum(nvl(b.month8Pre,0)) month8Pre ,
			sum(nvl(b.month9Pre,0)) month9Pre , sum(nvl(b.month10Pre,0)) month10Pre , sum(nvl(b.month11Pre,0)) month11Pre , sum(nvl(b.month12Pre,0)) month12Pre ,
			sum(nvl(b.year_sumPre,0)) year_sumPre
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
			<if test="subj_code !=null">
				and a.subj_code=#{subj_code,jdbcType=VARCHAR}
			</if>
		<if test="subj_level  !=null">
			and a.SUBJ_LEVEL=#{subj_level,jdbcType=VARCHAR}
			</if>
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name ,
				b.dept_id ,b.dept_code ,b.dept_name 
		order by a.subj_code , b.dept_code 
	</select>
	
	<!--查询医院明细   初始审核(修改页面 已下达) -->
	<select id="queryBudgMedIncomeHosMonthCopy" resultMap="dateMap" parameterType="java.util.Map">
		 with temp as(
		 	select 
			 	a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.subj_code , 
			 	bis.subj_name , 
			 	sum(case when a.month='01' then  nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then  nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then  nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then  nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then  nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then  nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then  nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then  nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then  nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then  nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then  nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then  nvl(a.budg_value,0) else 0 end ) as month12 ,
	     		nvl(b.budg_value,0) year_sum 
	     	from  BUDG_MED_INCOME_HM_COPY a
	     	LEFT join BUDG_MED_INCOME_HY_COPY b
	     		on 
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
	     			and a.check_code = b.check_code
	     	Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
				AND a.check_code = #{check_code,jdbcType=VARCHAR}
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code , bis.subj_name ,
					b.budg_value 
		 )
		 select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , 
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum 
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
				<if test="subj_code !=null and subj_code != ''">
				and a.subj_code=#{subj_code,jdbcType=VARCHAR}
			</if>
		<if test="subj_level  !=null and subj_level != ''">
			and a.SUBJ_LEVEL=#{subj_level,jdbcType=VARCHAR}
			</if>
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name 
		order by a.subj_code
	</select>
	
	<!--查询医院明细   调整审核 (修改页面 已下达) -->
	<select id="queryBudgMedIncomeHosMonthAdjustCopy" resultMap="dateMap" parameterType="java.util.Map">
		with temp as (
			select
				a.group_id ,
			 	a.hos_id ,
			 	a.copy_code ,
			 	a.year ,
			 	a.subj_code , 
			 	bis.subj_name , 
				sum(case when a.month='01' then nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.budg_value,0) else 0 end ) as month12  ,
				nvl(c.budg_value,0) year_sum  ,
				sum(case when b.month='01' then nvl(b.budg_value,0) else 0 end ) as month1Pre,
	     		sum(case when b.month='02' then nvl(b.budg_value,0) else 0 end ) as month2Pre,
	     		sum(case when b.month='03' then nvl(b.budg_value,0) else 0 end ) as month3Pre,
	     		sum(case when b.month='04' then nvl(b.budg_value,0) else 0 end ) as month4Pre,
	     		sum(case when b.month='05' then nvl(b.budg_value,0) else 0 end ) as month5Pre,
	     		sum(case when b.month='06' then nvl(b.budg_value,0) else 0 end ) as month6Pre,
	     		sum(case when b.month='07' then nvl(b.budg_value,0) else 0 end ) as month7Pre,
	     		sum(case when b.month='08' then nvl(b.budg_value,0) else 0 end ) as month8Pre,
	     		sum(case when b.month='09' then nvl(b.budg_value,0) else 0 end ) as month9Pre,
	     		sum(case when b.month='10' then nvl(b.budg_value,0) else 0 end ) as month10Pre,
	     		sum(case when b.month='11' then nvl(b.budg_value,0) else 0 end ) as month11Pre,
	     		sum(case when b.month='12' then nvl(b.budg_value,0) else 0 end ) as month12Pre ,
				sum(nvl(b.budg_value,0)) year_sumPre
			from  BUDG_MED_INCOME_HM_COPY a  
			Left join BUDG_MED_INCOME_HM_COPY b
				on
					a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
					and a.month = b.month
			LEFT join BUDG_MED_INCOME_HY_COPY c
	     		on 
	     			a.group_id = c.group_id
	     			and a.hos_id = c.hos_id
	     			and a.copy_code = c.copy_code
	     			and a.year = c.year
	     			and a.subj_code = c.subj_code
	     			and a.check_code = c.check_code
			Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
	 		where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
				AND a.check_code = #{check_code,jdbcType=VARCHAR}
				and b.check_code = (select max(check_code) 
									from budg_med_income_check
									where group_id = ${group_id} 
									and hos_id = ${hos_id} 
									and copy_code = ${copy_code} 
									and budg_year = ${year}
									and check_code &lt; #{check_code,jdbcType=VARCHAR}
									)
	 		group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code , bis.subj_name ,
	 				 c.budg_value 
		)
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , 
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum  ,
			sum(nvl(b.month1Pre,0)) month1Pre , sum(nvl(b.month2Pre,0)) month2Pre , sum(nvl(b.month3,0)) month3Pre , sum(nvl(b.month4Pre,0)) month4Pre ,
			sum(nvl(b.month5Pre,0)) month5Pre , sum(nvl(b.month6Pre,0)) month6Pre , sum(nvl(b.month7,0)) month7Pre , sum(nvl(b.month8Pre,0)) month8Pre ,
			sum(nvl(b.month9Pre,0)) month9Pre , sum(nvl(b.month10Pre,0)) month10Pre , sum(nvl(b.month11,0)) month11Pre , sum(nvl(b.month12Pre,0)) month12Pre ,
			sum(nvl(b.year_sumPre,0)) year_sumPre
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name 
		order by a.subj_code
	</select>
	
	<!--查询科室明细 初始审核 (修改页面 已下达) -->
	<select id="queryBudgMedIncomeDeptMonthCopy" resultMap="dateMap" parameterType="java.util.Map">
		with temp as(
			select 
				a.group_id ,
				a.hos_id ,
				a.copy_code ,
				a.year ,
				a.dept_id ,
				hdd.dept_code ,
				hdd.dept_name ,
				a.subj_code , 
				bis.subj_name , 
				sum(case when a.month='01' then nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.budg_value,0) else 0 end ) as month12  ,
	     		nvl(b.budg_value,0) year_sum
	     	from  BUDG_MED_INCOME_DM_COPY a
	     	Left join BUDG_MED_INCOME_DY_COPY b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
	     			and a.dept_id = b.dept_id
	     			and a.check_code = b.check_code
	     	Left join hos_dept_dict hdd
	     		on	
	     			a.group_id = hdd.group_id
	     			and a.hos_id = hdd.hos_id
	     			and a.dept_id = hdd.dept_id
	     			and hdd.is_stop = 0
	     	Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
				AND a.check_code = #{check_code,jdbcType=VARCHAR}
			 group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id ,hdd.dept_code ,
			 		hdd.dept_name ,	a.subj_code , bis.subj_name  , b.budg_value 
		)
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year , a.subj_code , a.subj_name , b.dept_id ,b.dept_code ,b.dept_name ,
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum 
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
			<if test="subj_code !=null and subj_code != ''">
				and a.subj_code=#{subj_code,jdbcType=VARCHAR}
			</if>
		<if test="subj_level  !=null and subj_level != ''">
			and a.SUBJ_LEVEL=#{subj_level,jdbcType=VARCHAR}
			</if>
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name ,
				b.dept_id ,b.dept_code ,b.dept_name  
		 order by a.subj_code , b.dept_code
	</select>
	
	<!--查询科室明细  调整审核 (修改页面 已下达) -->
	<select id="queryBudgMedIncomeCheckDeptMonthAdjustCopy" resultMap="dateMap" parameterType="java.util.Map">
		with temp as (
			select 
	    		a.group_id ,
				a.hos_id ,
				a.copy_code ,
				a.year ,
				a.dept_id ,
				hdd.dept_code ,
				hdd.dept_name ,
				a.subj_code , 
				bis.subj_name ,
				sum(case when a.month='01' then nvl(a.budg_value,0) else 0 end ) as month1,
	     		sum(case when a.month='02' then nvl(a.budg_value,0) else 0 end ) as month2,
	     		sum(case when a.month='03' then nvl(a.budg_value,0) else 0 end ) as month3,
	     		sum(case when a.month='04' then nvl(a.budg_value,0) else 0 end ) as month4,
	     		sum(case when a.month='05' then nvl(a.budg_value,0) else 0 end ) as month5,
	     		sum(case when a.month='06' then nvl(a.budg_value,0) else 0 end ) as month6,
	     		sum(case when a.month='07' then nvl(a.budg_value,0) else 0 end ) as month7,
	     		sum(case when a.month='08' then nvl(a.budg_value,0) else 0 end ) as month8,
	     		sum(case when a.month='09' then nvl(a.budg_value,0) else 0 end ) as month9,
	     		sum(case when a.month='10' then nvl(a.budg_value,0) else 0 end ) as month10,
	     		sum(case when a.month='11' then nvl(a.budg_value,0) else 0 end ) as month11,
	     		sum(case when a.month='12' then nvl(a.budg_value,0) else 0 end ) as month12  ,
	     		nvl(c.budg_value,0) year_sum ,
	     		sum(case when b.month='01' then nvl(b.budg_value,0) else 0 end ) as month1Pre,
	     		sum(case when b.month='02' then nvl(b.budg_value,0) else 0 end ) as month2Pre,
	     		sum(case when b.month='03' then nvl(b.budg_value,0) else 0 end ) as month3Pre,
	     		sum(case when b.month='04' then nvl(b.budg_value,0) else 0 end ) as month4Pre,
	     		sum(case when b.month='05' then nvl(b.budg_value,0) else 0 end ) as month5Pre,
	     		sum(case when b.month='06' then nvl(b.budg_value,0) else 0 end ) as month6Pre,
	     		sum(case when b.month='07' then nvl(b.budg_value,0) else 0 end ) as month7Pre,
	     		sum(case when b.month='08' then nvl(b.budg_value,0) else 0 end ) as month8Pre,
	     		sum(case when b.month='09' then nvl(b.budg_value,0) else 0 end ) as month9Pre,
	     		sum(case when b.month='10' then nvl(b.budg_value,0) else 0 end ) as month10Pre,
	     		sum(case when b.month='11' then nvl(b.budg_value,0) else 0 end ) as month11Pre,
	     		sum(case when b.month='12' then nvl(b.budg_value,0) else 0 end ) as month12Pre ,
				sum(nvl(b.budg_value,0)) year_sumPre
	     	from  BUDG_MED_INCOME_DM_COPY a
	     	Left join  BUDG_MED_INCOME_DM_COPY b
	     		on
	     			a.group_id = b.group_id
	     			and a.hos_id = b.hos_id
	     			and a.copy_code = b.copy_code
	     			and a.year = b.year
	     			and a.subj_code = b.subj_code
	     			and a.dept_id = b.dept_id
					and a.month = b.month
			Left join BUDG_MED_INCOME_DY_COPY c
	     		on
	     			a.group_id = c.group_id
	     			and a.hos_id = c.hos_id
	     			and a.copy_code = c.copy_code
	     			and a.year = c.year
	     			and a.subj_code = c.subj_code
	     			and a.dept_id = c.dept_id
	     			and a.check_code = c.check_code
	     	Left join hos_dept_dict hdd
	     		on	
	     			a.group_id = hdd.group_id
	     			and a.hos_id = hdd.hos_id
	     			and a.dept_id = hdd.dept_id
	     			and hdd.is_stop = 0
	     	Left join BUDG_INCOME_SUBJ bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= #{year,jdbcType=VARCHAR}
				AND a.check_code= #{check_code,jdbcType=VARCHAR}
				and b.check_code = (select max(check_code) 
									from budg_med_income_check
									where group_id = ${group_id} 
									and hos_id = ${hos_id} 
									and copy_code = ${copy_code} 
									and budg_year = ${year}
									and check_code &lt; #{check_code,jdbcType=VARCHAR}
									)
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.dept_id ,hdd.dept_code ,
					hdd.dept_name ,	a.subj_code , bis.subj_name , c.budg_value 
		)
		select a.group_id ,a.hos_id ,a.copy_code, a.budg_year year, a.subj_code , a.subj_name , b.dept_id ,b.dept_code ,b.dept_name ,
			sum(nvl(b.month1,0)) month1 , sum(nvl(b.month2,0)) month2 , sum(nvl(b.month3,0)) month3 , sum(nvl(b.month4,0)) month4 ,
			sum(nvl(b.month5,0)) month5 , sum(nvl(b.month6,0)) month6 , sum(nvl(b.month7,0)) month7 , sum(nvl(b.month8,0)) month8 ,
			sum(nvl(b.month9,0)) month9 , sum(nvl(b.month10,0)) month10 , sum(nvl(b.month11,0)) month11 , sum(nvl(b.month12,0)) month12 ,
			sum(nvl(b.year_sum,0)) year_sum ,
			sum(nvl(b.month1Pre,0)) month1Pre , sum(nvl(b.month2Pre,0)) month2Pre , sum(nvl(b.month3Pre,0)) month3Pre , sum(nvl(b.month4Pre,0)) month4Pre ,
			sum(nvl(b.month5Pre,0)) month5Pre , sum(nvl(b.month6Pre,0)) month6Pre , sum(nvl(b.month7Pre,0)) month7Pre , sum(nvl(b.month8Pre,0)) month8Pre ,
			sum(nvl(b.month9Pre,0)) month9Pre , sum(nvl(b.month10Pre,0)) month10Pre , sum(nvl(b.month11Pre,0)) month11Pre , sum(nvl(b.month12Pre,0)) month12Pre ,
			sum(nvl(b.year_sumPre,0)) year_sumPre
		from budg_income_subj a
		left join temp b
			on
				a.group_id  = b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.budg_year = b.year
				and b.subj_code like ( a.subj_code || '%')
		where 
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year= #{year,jdbcType=VARCHAR}
		group by a.group_id, a.hos_id,  a.copy_code, a.budg_year, a.subj_code,  a.subj_name ,
				b.dept_id ,b.dept_code ,b.dept_name 
		order by a.subj_code , b.dept_code 
	</select>
	
	<select id="queryIssueData" parameterType="java.util.Map" resultMap="budgIncomeCheck" >
		SELECT 
			to_char(issue_data,'yyyy-MM-dd')  as issue_data 
		FROM BUDG_MED_INCOME_CHECK a 
		left join budg_MED_INCOME_adj  b 
		 on 
			 a.group_id=b.group_id 
			 and a.hos_id=b.hos_id 
			 and a.copy_code=b.copy_code
     
		WHERE                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 初始审批  校验数据是否存在  -->
	<select id="queryDateExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) from budg_med_income_check
		
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   
		and hos_id = #{hos_id,jdbcType=INTEGER}   
		and copy_code = #{copy_code,jdbcType=VARCHAR}  
		and budg_year = #{budg_year,jdbcType=VARCHAR}   
		and check_type = #{check_type,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据参数 查询 初始审批单是否已下达   -->
	<select id="queryInitDateExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) from budg_med_income_check
		
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   
		and hos_id = #{hos_id,jdbcType=INTEGER}   
		and copy_code = #{copy_code,jdbcType=VARCHAR}  
		and budg_year = #{budg_year,jdbcType=VARCHAR}   
		and check_type = #{check_type,jdbcType=VARCHAR}
		and bc_state = #{bc_state,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据所传预算年度 查询 医疗收入预算编制模式 -->
	<select id="queryIncomeBudgMode" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT income_budg_mode  FROM BUDG_SYS_SET
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询 审批申请单是否已做调整 -->
	<select id="queryIsAdjust" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT COUNT(1)  FROM BUDG_MED_INCOME_ADJ
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND last_check_code = #{check_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询最大审批申请单号 -->
	<select id="queryMaxCheckCode" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT max(check_code)  FROM BUDG_MED_INCOME_CHECK
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
	</select>
	
	<update id="updateMaxNo"   parameterType="java.util.Map">
		update   budg_no_manage set max_no = max_no - 1
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND table_code = #{table_code,jdbcType=VARCHAR}
			AND year = #{budg_year,jdbcType=VARCHAR}
	</update>
	
	<!-- 查询 审批申请单是否已做调整(取消预算下达时使用) -->
	<select id="queryCheckIsAdjust" parameterType="java.util.Map" resultType="java.lang.String" >
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT distinct last_check_code FROM BUDG_MED_INCOME_ADJ
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND last_check_code = #{item.check_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!--查验医院月合计与医院年 数据 是否一致 -->
	<select id="queryHosMonthDataCheck" resultType="java.lang.String" parameterType="java.util.Map">
		with sumMonth as (
			select a.group_id , a.hos_id ,	a.copy_code , a.year , 	a.subj_code ,
		 		sum(nvl(a.budg_value,0)) budg_value
	     	from  BUDG_MED_INCOME_HOS_MONTH a
	     	Left join budg_income_subj bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= ${year}
				AND bis.is_last = 1
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code 
		)
		
		select bmihy.subj_code ||' '|| bis.subj_name
		
		from BUDG_MED_INCOME_HOS_YEAR bmihy
		
		Left join budg_income_subj bis
	     		on	
	     			bmihy.group_id = bis.group_id
	     			and bmihy.hos_id = bis.hos_id
	     			and bmihy.copy_code = bis.copy_code
	     			and bmihy.year = bis.budg_year
	     			and bmihy.subj_code = bis.subj_code
		left join sumMonth t
			on 
				bmihy.group_id = t.group_id
     			and bmihy.hos_id = t.hos_id
     			and bmihy.copy_code = t.copy_code
     			and bmihy.year = t.year
     			and bmihy.subj_code = t.subj_code
		where
				bmihy.group_id = #{group_id,jdbcType=INTEGER}
				AND bmihy.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bmihy.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bmihy.year= #{year,jdbcType=VARCHAR}
				AND bis.is_last = 1
				and ((bmihy.budg_value - t.budg_value) &gt;= ${paraValue}
						or (bmihy.budg_value - t.budg_value) &lt;= -${paraValue} )
				and bmihy.budg_value != 0
				and bmihy.budg_value is not null
				and t.budg_value != 0
				 
	</select>
	
	<!--查验科室合计与医院年 数据 是否一致 -->
	<select id="queryDeptYearDataCheck" resultType="java.lang.String" parameterType="java.util.Map">
		with sumDeptYear as (
			select a.group_id , a.hos_id ,	a.copy_code , a.year , 	a.subj_code ,
		 		sum(nvl(a.budg_value,0)) budg_value
	     	from  BUDG_MED_INCOME_DEPT_YEAR a
	     	Left join budg_income_subj bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
				a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= ${year}
				AND bis.is_last = 1
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code 
		)
		
		select bmihy.subj_code ||' '|| bis.subj_name
		
		from BUDG_MED_INCOME_HOS_YEAR bmihy
		
		Left join budg_income_subj bis
	     		on	
	     			bmihy.group_id = bis.group_id
	     			and bmihy.hos_id = bis.hos_id
	     			and bmihy.copy_code = bis.copy_code
	     			and bmihy.year = bis.budg_year
	     			and bmihy.subj_code = bis.subj_code
		
		left join sumDeptYear t
			on 
				bmihy.group_id = t.group_id
     			and bmihy.hos_id = t.hos_id
     			and bmihy.copy_code = t.copy_code
     			and bmihy.year = t.year
     			and bmihy.subj_code = t.subj_code
		where
				bmihy.group_id = #{group_id,jdbcType=INTEGER}
				AND bmihy.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bmihy.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bmihy.year= #{year,jdbcType=VARCHAR}
				AND bis.is_last = 1
				and ((bmihy.budg_value - t.budg_value) &gt;= ${paraValue}
						or (bmihy.budg_value - t.budg_value) &lt;= -${paraValue} )
				and bmihy.budg_value != 0
				and bmihy.budg_value is not null
				and t.budg_value != 0
				 
	</select>
	
	<!-- 查验 科室月合计与科室年 数据 是否一致。 -->
	<select id="queryDeptMonthDataCheck" resultType="java.lang.String" parameterType="java.util.Map">
		with sumDeptMonth as (
			select a.group_id , a.hos_id ,	a.copy_code , a.year , 	a.subj_code , a.dept_id ,
		 		sum(nvl(a.budg_value,0)) budg_value
	     	from  BUDG_MED_INCOME_DEPT_MONTH a
	     	Left join budg_income_subj bis
	     		on	
	     			a.group_id = bis.group_id
	     			and a.hos_id = bis.hos_id
	     			and a.copy_code = bis.copy_code
	     			and a.year = bis.budg_year
	     			and a.subj_code = bis.subj_code
			where
					a.group_id = #{group_id,jdbcType=INTEGER}
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND a.year= ${year}
				AND bis.is_last = 1
			group by a.group_id , a.hos_id , a.copy_code , a.year , a.subj_code , a.dept_id 
		)
		
		select  hdd.dept_name ||'-'|| bwdy.subj_code ||' '|| bis.subj_name 
		
		from BUDG_MED_INCOME_DEPT_YEAR bwdy
		
		Left join budg_income_subj bis
	     		on	
	     			bwdy.group_id = bis.group_id
	     			and bwdy.hos_id = bis.hos_id
	     			and bwdy.copy_code = bis.copy_code
	     			and bwdy.subj_code = bis.subj_code
    	Left join HOS_DEPT_DICT hdd
     		on	
     			bwdy.group_id = hdd.group_id
     			and bwdy.hos_id = hdd.hos_id
     			and bwdy.dept_id = hdd.dept_id
     			and hdd.is_stop = 0
		
		left join sumDeptMonth t
			on 
				bwdy.group_id = t.group_id
     			and bwdy.hos_id = t.hos_id
     			and bwdy.copy_code = t.copy_code
     			and bwdy.year = t.year
     			and bwdy.subj_code = t.subj_code
     			and bwdy.dept_id = t.dept_id
		where
				bwdy.group_id = #{group_id,jdbcType=INTEGER}
				AND bwdy.hos_id = #{hos_id,jdbcType=INTEGER}
				AND bwdy.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND bwdy.year= #{year,jdbcType=VARCHAR}
				and ((bwdy.budg_value - t.budg_value) &gt;= ${paraValue}
						or (bwdy.budg_value - t.budg_value) &lt;= -${paraValue} )
				AND bis.is_last = 1
				and bwdy.budg_value != 0
				and bwdy.budg_value is not null
				and t.budg_value != 0
				 
	</select>
	
	<!-- 备份 医疗收入  医院月份数据 到 科室月份医疗收入预算备份 表 BUDG_MED_INCOME_HM_COPY   -->
	<insert id="copyHMData" parameterType="java.util.List" >
    	INSERT INTO   BUDG_MED_INCOME_HM_COPY (
             check_code, 
             group_id,
             hos_id,
             copy_code,
             year,
             subj_code,
             month,
             count_value,
             budg_value ,
             remark,
             grow_rate,
             resolve_rate,
             last_year_income,
             last_month_carried,
             carried_next_month 
         ) select t.* from(
            <foreach collection="list" item="item" index="index" separator=" union all " >
           select 	
	            #{item.check_code,jdbcType=VARCHAR}  ,
	            group_id,
	            hos_id,
	            copy_code,
	            year,
	            subj_code,
	            month,
	            count_value ,
	            budg_value ,
	            remark,
	            grow_rate ,
	            resolve_rate ,
	            last_year_income ,
	            last_month_carried ,
	            carried_next_month
	        from BUDG_MED_INCOME_HOS_MONTH	 
	        where
	             group_id = #{item.group_id,jdbcType=INTEGER}
	             AND hos_id = #{item.hos_id,jdbcType=INTEGER}
	             AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
	             AND year = #{item.budg_year,jdbcType=VARCHAR}
		</foreach>
		)t
	</insert>	
		
	<!-- 备份 医疗收入  医院年度数据 到 科室年度医疗收入预算备份 表 BUDG_MED_INCOME_HY_COPY  -->
	<insert id="copyHYData" parameterType="java.util.List" >
		INSERT INTO   BUDG_MED_INCOME_HY_COPY
	 		(
			 check_code, 
			 group_id,
			 hos_id,
	         copy_code,
	         year,
	         subj_code,
	         count_value,
	         budg_value,
	         remark,
	         last_year_income      
			) select t.* from (
			<foreach collection="list" item="item" index="index" separator=" union all " >
		
				select 	
			   		#{item.check_code,jdbcType=VARCHAR}  ,
					group_id,
			        hos_id,
			        copy_code,
			        year,
			        subj_code,
			        count_value ,
			        budg_value ,
			        remark,
			        last_year_income
			    from BUDG_MED_INCOME_HOS_YEAR
				where
					group_id = #{item.group_id,jdbcType=INTEGER}
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
					AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
			)t 
	</insert>
	<!-- 备份 医疗收入  科室年度数据 到 科室年度医疗收入预算备份 表 BUDG_MED_INCOME_DY_COPY  -->
	<insert id="copyDYData" parameterType="java.util.List" >
		INSERT INTO  BUDG_MED_INCOME_DY_COPY  (
			 check_code,
			 group_id,
		     hos_id,
		     copy_code,
		     year,
		     subj_code,
		     dept_id,
		     count_value,
		     budg_value,
		     remark,
		     grow_rate,
		     resolve_rate,
		     last_year_income
			) select t.* from (
			<foreach collection="list" item="item" index="index" separator=" union all " >
		
				select 	
			   		#{item.check_code,jdbcType=VARCHAR}  ,
			   		group_id,
				    hos_id,
				    copy_code,
				    year,
				    subj_code,
				    dept_id,
				    count_value ,
				    budg_value,
				    remark,
				    grow_rate,
				    resolve_rate,
				    last_year_income
			
			    from BUDG_MED_INCOME_DEPT_YEAR
				where
					group_id = #{item.group_id,jdbcType=INTEGER}
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
					AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
			)t 
	</insert>
	<!-- 备份 医疗收入  科室月份数据 到 科室月份医疗收入预算备份 表 BUDG_MED_INCOME_DM_COPY  -->
	<insert id="copyDMData" parameterType="java.util.List" >
		INSERT INTO BUDG_MED_INCOME_DM_COPY (
			 check_code,
			 group_id,
		     hos_id,
		     copy_code,
		     year,
		     subj_code,
		     dept_id,
		     month,
		     count_value,
		     budg_value,
		     remark,
		     grow_rate,
		     resolve_rate,
		     last_year_income,
		     last_month_carried,
		     carried_next_month
			) select t.* from (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select 	
					#{item.check_code,jdbcType=VARCHAR}  ,
					group_id,
					hos_id,
					copy_code,
					year,
					subj_code,
					dept_id,
					month,
					count_value ,
					budg_value,
					remark,
					grow_rate,
					resolve_rate,
					last_year_income,
					last_month_carried,
					carried_next_month
				from BUDG_MED_INCOME_DEPT_MONTH
				where
					group_id = #{item.group_id,jdbcType=INTEGER}
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
					AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
			)t
	</insert>
	
	<!-- 根据参数 查询 是否存在未下达 审批单 -->
	<select id="queryIssueDateExist" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT COUNT(1)  FROM BUDG_MED_INCOME_CHECK
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			and bc_state != #{bc_state,jdbcType=VARCHAR}
	</select>
	
	<!-- 删除 医疗收入预算医院月份  备份数据 -->
	<delete id="deleteHMCopy" parameterType="java.util.List">
		DELETE FROM BUDG_MED_INCOME_HM_COPY
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				check_code = #{item.check_code,jdbcType=VARCHAR}
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
	</delete>
			
	<!-- 删除 医疗收入预算医院年度  备份数据 -->
	<delete id="deleteHYCopy" parameterType="java.util.List">
		DELETE FROM BUDG_MED_INCOME_HY_COPY
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				check_code = #{item.check_code,jdbcType=VARCHAR}
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
	</delete>	
	
	<!-- 删除 医疗收入预算科室月份  备份数据  -->
	<delete id="deleteDMCopy" parameterType="java.util.List">
		DELETE FROM BUDG_MED_INCOME_DM_COPY
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				check_code = #{item.check_code,jdbcType=VARCHAR}
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
	</delete>
		
	<!-- 删除 医疗收入预算科室年度  备份数据 -->
	<delete id="deleteDYCopy" parameterType="java.util.List">
		DELETE FROM BUDG_MED_INCOME_DY_COPY
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				check_code = #{item.check_code,jdbcType=VARCHAR}
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.budg_year,jdbcType=VARCHAR}
			</foreach>
	</delete>
	
	<!-- 状态查询  （校验数据专用） -->
	<select id="queryBudgMedIncomeCheckState" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT check_code  FROM BUDG_MED_INCOME_CHECK 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="check_code != null and check_code != ''">
			AND check_code in  (${check_code})
			</if>
			<!-- 前台传参    -->
			and bc_state != #{bc_state,jdbcType=VARCHAR}
	</select>
	
	<!-- 更新医院意见 -->
	<update id="updateHosSuggest" parameterType="java.util.Map">
		UPDATE BUDG_MED_INCOME_HOS_YEAR set
			hos_suggest = #{hos_suggest,jdbcType=INTEGER} 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	
	</update>
	<!-- 更新科室意见 -->
	<update id="updateDeptSuggest" parameterType="java.util.Map">
		UPDATE BUDG_MED_INCOME_DEPT_YEAR set
			dept_suggest = #{dept_suggest,jdbcType=INTEGER} 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			AND dept_id = #{dept_id,jdbcType=INTEGER}
	</update>
	
</mapper>