<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.base.budgcharge.BudgChargeStandGetWayMapper">
	
	<resultMap id="budgChargeStandGetWay" type="com.chd.hrp.budg.entity.BudgChargeStandGetWay">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="charge_stand_code" column="charge_stand_code"/>
	<result property="get_value_way" column="get_value_way"/>
	<result property="formula_id" column="formula_id"/>
	<result property="fun_id" column="fun_id"/>
	</resultMap>
		
	<resultMap id="budgChargeStandGetWayMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="charge_stand_code" column="charge_stand_code"/>
	<result property="charge_stand_name" column="charge_stand_name"/>
	<result property="charge_stan_nature" column="charge_stan_nature"/>
	<result property="charge_stan_nature_name" column="charge_stan_nature_name"/>
	<result property="charge_stan_describe" column="charge_stan_describe"/>
	<result property="get_value_way" column="get_value_way"/>
	<result property="get_value_way_name" column="get_value_way_name"/>
	<result property="formula_id" column="formula_id"/>
	<result property="formula_name" column="formula_name"/>
	<result property="formula_ca" column="formula_ca"/>
	<result property="fun_id" column="fun_id"/>
	<result property="fun_name" column="fun_name"/>
	<result property="fun_method_chs" column="fun_method_chs"/>
	
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_CHARGE_STAND_GET_WAY (
				group_id
				,
				hos_id
				,
				copy_code
				,
				charge_stand_code
				,
				get_value_way
				,
				formula_id
				,
				fun_id
		) VALUES (
				#{group_id,jdbcType=INTEGER}
				,
				#{hos_id,jdbcType=INTEGER}
				,
				#{copy_code,jdbcType=VARCHAR}
				,
				#{charge_stand_code,jdbcType=VARCHAR}
				,
				#{get_value_way,jdbcType=VARCHAR}
				,
				#{formula_id,jdbcType=VARCHAR}
				,
				#{fun_id,jdbcType=VARCHAR}
				
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_CHARGE_STAND_GET_WAY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			charge_stand_code
			,
			get_value_way
			,
			formula_id
			,
			fun_id
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.charge_stand_code,jdbcType=VARCHAR}
			,
			#{item.get_value_way,jdbcType=VARCHAR}
			,
			#{item.formula_id,jdbcType=VARCHAR}
			,
			#{item.fun_id,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_charge_stand_get_way  set
			get_value_way = #{get_value_way,jdbcType=VARCHAR}
			,
			formula_id = #{formula_id,jdbcType=VARCHAR}
			,
			fun_id = #{fun_id,jdbcType=VARCHAR}
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND charge_stand_code = #{charge_stand_code,jdbcType=VARCHAR}
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_charge_stand_get_way set
				get_value_way = #{item.get_value_way,jdbcType=VARCHAR}
				,
				formula_id = #{item.formula_id,jdbcType=VARCHAR}
				,
				fun_id = #{item.fun_id,jdbcType=VARCHAR}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND charge_stand_code = #{item.charge_stand_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_charge_stand_get_way 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND charge_stand_code = #{charge_stand_code,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_charge_stand_get_way 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND charge_stand_code = #{item.charge_stand_code,jdbcType=VARCHAR}
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgChargeStandGetWayMap" >
	
		
		SELECT 
		bcsgt.group_id,
		bcsgt.hos_id,
		bcsgt.copy_code,
		bcsgt.charge_stand_code,
		bcsd.charge_stan_name charge_stand_name,
		bcsd.charge_stan_nature ,
		bsd1.value_name charge_stan_nature_name ,
		bcsgt.get_value_way,
		bsd2.value_name get_value_way_name,
		bcsgt.formula_id,
		bfs.formula_name ,
		bcsgt.fun_id ,
		bf.fun_name
		FROM budg_charge_stand_get_way bcsgt
		LEFT JOIN  BUDG_CHARGE_STANDARD_DICT bcsd
			ON
				bcsgt.group_id = bcsd.group_id
				and bcsgt.hos_id = bcsd.hos_id
				and bcsgt.copy_code = bcsd.copy_code
				and bcsgt.charge_stand_code = bcsd.charge_stan_code
		LEFT JOIN  BUDG_SYS_DICT bsd1
			ON
				bsd1.f_code ='CHARGE_STAN_NATURE'
				AND bcsd.charge_stan_nature = bsd1.value_code
		LEFT JOIN  BUDG_SYS_DICT bsd2
			ON
				bsd2.f_code ='GET_VALUE_WAY'
				AND bcsgt.get_value_way = bsd2.value_code
		LEFT JOIN  BUDG_FORMULA_SET bfs
			ON
				bcsgt.group_id = bfs.group_id
				and bcsgt.hos_id = bfs.hos_id
				and bcsgt.copy_code = bfs.copy_code
				and bcsgt.formula_id = bfs.formula_id
		LEFT JOIN  BUDG_FUN bf
			ON
				bcsgt.group_id = bf.group_id
				and bcsgt.hos_id = bf.hos_id
				and bcsgt.copy_code = bf.copy_code
				and bcsgt.fun_id = bf.fun_code
		where                     
			bcsgt.group_id = #{group_id,jdbcType=INTEGER}
			AND bcsgt.hos_id = #{hos_id,jdbcType=INTEGER}
			AND bcsgt.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="charge_stand_code != null and charge_stand_code != ''">
			AND (bcsgt.charge_stand_code like '${charge_stand_code}%' or
					bcsd.charge_stan_name like '%${charge_stand_code}%' or
					bcsd.spell_code like '%${charge_stand_code}%' or
					bcsd.wbx_code like '%${charge_stand_code}%'
					)
			</if>
			<if test="get_value_way != null and get_value_way != ''">
			AND bcsgt.get_value_way = #{get_value_way,jdbcType=VARCHAR}
			</if>
			<if test="charge_stan_nature != null and charge_stan_nature != ''">
			AND bcsd.charge_stan_nature = #{charge_stan_nature,jdbcType=VARCHAR}
			</if>
		order by bcsgt.charge_stand_code asc
	</select>
	<select id="queryByCode" resultMap="budgChargeStandGetWayMap"  parameterType="java.util.Map" >
	
		SELECT 
		bcsgt.group_id,
		bcsgt.hos_id,
		bcsgt.copy_code,
		bcsgt.charge_stand_code,
		bcsd.charge_stan_name charge_stand_name,
		bcsd.charge_stan_nature ,
		bsd1.value_name charge_stan_nature_name ,
		bcsd.charge_stan_describe ,
		bcsgt.get_value_way,
		bsd.value_name get_value_way_name,
		bcsgt.formula_id,
		bfs.formula_name,
		bfs.formula_ca ,
		bcsgt.fun_id ,
		bf.fun_name ,
		bf.fun_method_chs
		FROM budg_charge_stand_get_way bcsgt
		LEFT JOIN  BUDG_CHARGE_STANDARD_DICT bcsd
			ON
				bcsgt.group_id = bcsd.group_id
				and bcsgt.hos_id = bcsd.hos_id
				and bcsgt.copy_code = bcsd.copy_code
				and bcsgt.charge_stand_code = bcsd.charge_stan_code
		LEFT JOIN  BUDG_SYS_DICT bsd1
			ON
				bsd1.f_code ='CHARGE_STAN_NATURE'
				AND bcsd.charge_stan_nature = bsd1.value_code
		LEFT JOIN  BUDG_SYS_DICT bsd
			ON
				bsd.f_code ='GET_VALUE_WAY'
				AND bcsgt.get_value_way = bsd.value_code
		LEFT JOIN  BUDG_FORMULA_SET bfs
			ON
				bcsgt.group_id = bfs.group_id
				and bcsgt.hos_id = bfs.hos_id
				and bcsgt.copy_code = bfs.copy_code
				and bcsgt.formula_id = bfs.formula_id
		LEFT JOIN  BUDG_FUN bf
			ON
				bcsgt.group_id = bf.group_id
				and bcsgt.hos_id = bf.hos_id
				and bcsgt.copy_code = bf.copy_code
				and bcsgt.fun_id = bf.fun_code
		WHERE 
		bcsgt.group_id = #{group_id,jdbcType=INTEGER}   and 
		bcsgt.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		bcsgt.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		bcsgt.charge_stand_code = #{charge_stand_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgChargeStandGetWay"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		charge_stand_code,
		get_value_way,
		formula_id,
		fun_id
		FROM BUDG_CHARGE_STAND_GET_WAY 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="charge_stand_code != null and charge_stand_code != ''">
		AND charge_stand_code = #{charge_stand_code,jdbcType=VARCHAR}
		</if>
		<if test="get_value_way != null and get_value_way != ''">
		AND get_value_way = #{get_value_way,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		<if test="fun_id != null and fun_id != ''">
		AND fun_id = #{fun_id,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgChargeStandGetWay"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		charge_stand_code,
		get_value_way,
		formula_id,
		fun_id
		FROM BUDG_CHARGE_STAND_GET_WAY 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="charge_stand_code != null and charge_stand_code != ''">
		AND charge_stand_code = #{charge_stand_code,jdbcType=VARCHAR}
		</if>
		<if test="get_value_way != null and get_value_way != ''">
		AND get_value_way = #{get_value_way,jdbcType=VARCHAR}
		</if>
		<if test="formula_id != null and formula_id != ''">
		AND formula_id = #{formula_id,jdbcType=VARCHAR}
		</if>
		<if test="fun_id != null and fun_id != ''">
		AND fun_id = #{fun_id,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
</mapper>

