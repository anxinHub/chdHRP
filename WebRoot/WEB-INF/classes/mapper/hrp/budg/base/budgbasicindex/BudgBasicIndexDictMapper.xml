<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.base.budgbasicindex.BudgBasicIndexDictMapper">
	<resultMap id="budgBasicIndexDict" type="com.chd.hrp.budg.entity.BudgBasicIndexDict">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="index_code" column="index_code"/>
	<result property="index_name" column="index_name"/>
	<result property="index_nature" column="index_nature"/>
	<result property="index_describe" column="index_describe"/>
	<result property="unit" column="unit"/>
	<result property="data_precision" column="data_precision"/>
	<result property="is_stop" column="is_stop"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	</resultMap>
		
	<resultMap id="budgBasicIndexDictMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="index_code" column="index_code"/>
	<result property="index_name" column="index_name"/>
	<result property="index_nature" column="index_nature"/>
	<result property="index_nature_name" column="index_nature_name"/>
	<result property="index_describe" column="index_describe"/>
	<result property="unit" column="unit"/>
	<result property="data_precision" column="data_precision"/>
	<result property="is_stop" column="is_stop"/>
	<result property="stop" column="stop"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	</resultMap>
	
	<resultMap id="budgBasicIndexDeptSet" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="type_code" column="type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="is_stop" column="is_stop"/>
	<result property="kind_code" column="kind_code"/>
	<result property="kind_name" column="kind_name"/>
	<result property="natur_code" column="natur_code"/>
	<result property="natur_name" column="natur_name"/>
	<result property="out_code" column="out_code"/>
	<result property="out_name" column="out_name"/>
	<result property="emp_id" column="emp_id"/>
	<result property="emp_code" column="emp_code"/>
	<result property="emp_name" column="emp_name"/>
	<result property="is_manager" column="is_manager"/>
	<result property="manager" column="manager"/>
	<result property="is_budg" column="is_budg"/>
	<result property="index_code" column="index_code"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_BASIC_INDEX_DICT (
			group_id
			,
			hos_id
			,
			copy_code
			,
			index_code
			,
			index_name
			,
			index_nature
			,
			index_describe
			,
			unit
			,
			data_precision
			,
			is_stop
			,
			spell_code
			,
			wbx_code
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{index_code,jdbcType=VARCHAR}
			,
			#{index_name,jdbcType=VARCHAR}
			,
			#{index_nature,jdbcType=VARCHAR}
			,
			#{index_describe,jdbcType=VARCHAR}
			,
			#{unit,jdbcType=VARCHAR}
			,
			#{data_precision,jdbcType=INTEGER}
			,
			#{is_stop,jdbcType=INTEGER}
			,
			#{spell_code,jdbcType=VARCHAR}
			,
			#{wbx_code,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_BASIC_INDEX_DICT (
			group_id
			,
			hos_id
			,
			copy_code
			,
			index_code
			,
			index_name
			,
			index_nature
			,
			index_describe
			,
			unit
			,
			data_precision
			,
			is_stop
			,
			spell_code
			,
			wbx_code
			
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.index_code,jdbcType=VARCHAR}
				,
				#{item.index_name,jdbcType=VARCHAR}
				,
				#{item.index_nature,jdbcType=VARCHAR}
				,
				#{item.index_describe,jdbcType=VARCHAR}
				,
				#{item.unit,jdbcType=VARCHAR}
				,
				#{item.data_precision,jdbcType=INTEGER}
				,
				#{item.is_stop,jdbcType=INTEGER}
				,
				#{item.spell_code,jdbcType=VARCHAR}
				,
				#{item.wbx_code,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_basic_index_dict set
			index_name = #{index_name,jdbcType=VARCHAR}
			,
			index_nature = #{index_nature,jdbcType=VARCHAR}
			,
			index_describe = #{index_describe,jdbcType=VARCHAR}
			,
			unit = #{unit,jdbcType=VARCHAR}
			,
			data_precision = #{data_precision,jdbcType=INTEGER}
			,
			is_stop = #{is_stop,jdbcType=INTEGER}
			,
			spell_code = #{spell_code,jdbcType=VARCHAR}
			,
			wbx_code = #{wbx_code,jdbcType=VARCHAR}
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>  
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_basic_index_dict set
				index_name = #{item.index_name,jdbcType=VARCHAR}
				,
				index_nature = #{item.index_nature,jdbcType=VARCHAR}
				,
				index_describe = #{item.index_describe,jdbcType=VARCHAR}
				,
				unit = #{item.unit,jdbcType=VARCHAR}
				,
				data_precision = #{item.data_precision,jdbcType=INTEGER}
				,
				is_stop = #{item.is_stop,jdbcType=INTEGER}
				,
				spell_code = #{item.spell_code,jdbcType=VARCHAR}
				,
				wbx_code = #{item.wbx_code,jdbcType=VARCHAR}
			<where>                     
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.index_code != null and item.index_code != ''">
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_basic_index_dict 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="index_code != null and index_code != ''">
			AND index_code = #{index_code,jdbcType=VARCHAR}
			</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
        begin 
        DELETE FROM BUDG_BASIC_INDEX_DEPT_SET 
        <where>
            <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
                <if test="item.group_id != null and item.group_id != ''">
                 group_id = #{item.group_id,jdbcType=INTEGER}
                </if>
                <if test="item.hos_id != null and item.hos_id != ''">
                AND hos_id = #{item.hos_id,jdbcType=INTEGER}
                </if>
                <if test="item.copy_code != null and item.copy_code != ''">
                AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
                </if>
                <if test="item.index_code != null and item.index_code != ''">
                AND index_code = #{item.index_code,jdbcType=VARCHAR}
                </if>
            </foreach>
        </where>
        ;
		DELETE FROM budg_basic_index_dict 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.index_code != null and item.index_code != ''">
				AND index_code = #{item.index_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>
        ;
        
        end;
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgBasicIndexDictMap" >
	
		SELECT 
		bbid.group_id,
		bbid.hos_id,
		bbid.copy_code,
		bbid.index_code,
		bbid.index_name,
		bbid.index_nature,
		bsd.value_name index_nature_name,
		bbid.index_describe,
		bbid.unit,
		bbid.data_precision,
		CASE bbid.is_stop WHEN 0 THEN '否' ELSE '是' END stop,
		bbid.spell_code,
		bbid.wbx_code
		FROM BUDG_BASIC_INDEX_DICT bbid
		Left join BUDG_SYS_DICT bsd
			ON 
				bbid.index_nature = bsd.value_code
				and bsd.f_code ='INDEX_NATURE'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND bbid.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND bbid.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND bbid.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND bbid.index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="index_name != null and index_name != ''">
		AND ( bbid.index_code like '${index_name}%' or
			bbid.index_name like '%${index_name}%'or
			bbid.spell_code like '%${index_name}%'or
			bbid.spell_code like '%${index_name}%' )
		</if>
		<if test="index_nature != null and index_nature != ''">
		AND bbid.index_nature = #{index_nature,jdbcType=VARCHAR}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND bbid.is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		</where>   
		order by index_code asc
	</select>
	<select id="queryByUniqueness" resultMap="budgBasicIndexDict"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		index_code,
		index_name,
		index_nature,
		index_describe,
		unit,
		data_precision,
		is_stop,
		spell_code,
		wbx_code
		FROM BUDG_BASIC_INDEX_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="index_name != null and index_name != ''">
		AND index_name = #{index_name,jdbcType=VARCHAR}
		</if>
		<if test="index_nature != null and index_nature != ''">
		AND index_nature = #{index_nature,jdbcType=VARCHAR}
		</if>
		<if test="index_describe != null and index_describe != ''">
		AND index_describe = #{index_describe,jdbcType=VARCHAR}
		</if>
		<if test="unit != null and unit != ''">
		AND unit = #{unit,jdbcType=VARCHAR}
		</if>
		<if test="data_precision != null and data_precision != ''">
		AND data_precision = #{data_precision,jdbcType=INTEGER}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgBasicIndexDict"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		index_code,
		index_name,
		index_nature,
		index_describe,
		unit,
		data_precision,
		is_stop,
		spell_code,
		wbx_code
		FROM BUDG_BASIC_INDEX_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="index_name != null and index_name != ''">
		AND index_name = #{index_name,jdbcType=VARCHAR}
		</if>
		<if test="index_nature != null and index_nature != ''">
		AND index_nature = #{index_nature,jdbcType=VARCHAR}
		</if>
		<if test="index_describe != null and index_describe != ''">
		AND index_describe = #{index_describe,jdbcType=VARCHAR}
		</if>
		<if test="unit != null and unit != ''">
		AND unit = #{unit,jdbcType=VARCHAR}
		</if>
		<if test="data_precision != null and data_precision != ''">
		AND data_precision = #{data_precision,jdbcType=INTEGER}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 判断指标名称是否被占用 -->
  <select id="queryNameExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
  
    SELECT count(index_name)
    
    FROM budg_basic_index_dict
    <where>                     
      <if test="group_id != null and group_id != ''">
      AND group_id = #{group_id,jdbcType=INTEGER}
      </if>
      <if test="hos_id != null and hos_id != ''">
      AND hos_id = #{hos_id,jdbcType=INTEGER}
      </if>
      <if test="copy_code != null and copy_code != ''">
      AND copy_code = #{copy_code,jdbcType=VARCHAR}
      </if>
      <if test="index_name != null and index_name != ''">
      AND index_name = #{index_name,jdbcType=VARCHAR}
      </if>
      <if test="index_code != null and index_code != ''">
      AND index_code != #{index_code,jdbcType=VARCHAR}
      </if>
    </where>   
  </select>

  <select id="queryByCode" resultMap="budgBasicIndexDict"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		index_code,
		index_name,
		index_nature,
		index_describe,
		unit,
		data_precision,
		is_stop,
		spell_code,
		wbx_code
		FROM budg_basic_index_dict 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		index_code = #{index_code,jdbcType=VARCHAR} 
	
	</select>
  
  <select id="queryBudgBasicIndexDeptSet" parameterType="java.util.Map" resultMap="budgBasicIndexDeptSet" >

	select 
		a.group_id ,
		a.hos_id ,
		bbids.copy_code ,
		a.dept_id ,
		b.dept_code ,
		b.dept_name	,
		a.is_budg,
		b.is_stop ,
		b.kind_code , 
		c.kind_name , 
		a.natur_code ,
		e.natur_name ,
		a.type_code ,
		d.type_name ,
		a.out_code ,
		f.out_name ,
		a.emp_id ,
		g.emp_code ,
		g.emp_name ,
		bbids.index_code ,
		CASE a.is_manager WHEN 0 THEN '否' ELSE '是' end   manager
	from acc_dept_attr a 
	left join BUDG_BASIC_INDEX_DEPT_SET bbids 
		on a.group_id=bbids.group_id 
		and	a.hos_id=bbids.hos_id
		and a.dept_id=bbids.dept_id 
		and bbids.copy_code = #{copy_code}
		and bbids.index_code = #{index_code}
	left join hos_dept b 
		on a.group_id=b.group_id 
		and	a.hos_id=b.hos_id
		and a.dept_id=b.dept_id 
		and b.is_stop = 0
	left join hos_dept_kind c
		on b.group_id=c.group_id
		and	b.hos_id=c.hos_id
		and b.kind_code=c.kind_code 
	left join ACC_DEPT_TYPE d on 
		a.type_code =d.type_code
	left join ACC_DEPT_NATUR e on 
		a.natur_code = e.natur_code
	left join ACC_DEPT_OUT f on 
		a.out_code = f.out_code
	left join hos_emp g  
		on a.group_id=g.group_id 
		and	a.hos_id=g.hos_id
		and a.emp_id=g.emp_id 	
	<where>  
		<if test="group_id != null and group_id != ''">
		AND a.group_id =#{group_id,jdbcType=INTEGER}
		</if>  
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id =#{hos_id,jdbcType=INTEGER}
		</if> 
		<if test="kind_code != null and kind_code != ''">
		AND b.kind_code =#{kind_code,jdbcType=VARCHAR}
		</if> 
		<if test="type_code != null and type_code != ''">
		AND a.type_code =#{type_code,jdbcType=VARCHAR}
		</if> 
		<if test="natur_code != null and natur_code != ''">
		AND a.natur_code =#{natur_code,jdbcType=VARCHAR}
		</if> 
		<if test="out_code != null and out_code != ''">
		AND a.out_code =#{out_code,jdbcType=VARCHAR}
		</if>       
		<choose>             	
			<when test="is_manager !=null and is_manager!=''">
				<choose>
					<when test="is_manager==1">
						AND a.is_manager is null
					</when>
					 <otherwise>
						AND  a.is_manager=${is_manager}
					</otherwise>
				</choose>
			</when>
		</choose>
		and a.is_budg = 1
	</where>   
		order by a.dept_id  asc
	</select>
	
	<insert id="addBatchBudgBasicIndexDeptSet" parameterType="java.util.List" >
		INSERT INTO BUDG_BASIC_INDEX_DEPT_SET (
		group_id
		,
		hos_id
		,
		copy_code
		,
		index_code
		,
		dept_id
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.index_code,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	
	</insert>
	<delete id="deleteBudgBasicIndexDeptSet" parameterType="java.util.Map">
	
		DELETE FROM budg_basic_index_dept_set 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="index_code != null and index_code != ''">
		AND index_code = #{index_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>
	
</mapper>

