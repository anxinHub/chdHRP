<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.base.budgcostfasset.BudgAssDictMapper">
	
	<resultMap id="assDict" type="com.chd.hrp.ass.entity.dict.AssDict">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="ass_type_id" column="ass_type_id"/>
	<result property="ass_type_name" column="ass_type_name"/>
	<result property="acc_type_code" column="acc_type_code"/>
	<result property="acc_type_name" column="acc_type_name"/>
	<result property="ass_unit" column="ass_unit"/>
	<result property="ass_unit_name" column="ass_unit_name"/>
	<result property="is_measure" column="is_measure"/>
	<result property="is_depre" column="is_depre"/>
	<result property="ass_depre_code" column="ass_depre_code"/>
	<result property="ass_depre_name" column="ass_depre_name"/>
	<result property="depre_years" column="depre_years"/>
	<result property="is_stop" column="is_stop"/>
	<result property="ass_spec" column="ass_spec"/>
	<result property="ass_model" column="ass_model"/>
	<result property="fac_id" column="fac_id"/>
	<result property="fac_no" column="fac_no"/>
	<result property="fac_id_name" column="fac_id_name"/>
	<result property="fac_no_name" column="fac_no_name"/>
	<result property="fac_name" column="fac_name"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_name" column="ven_name"/>
	<result property="ven_id_name" column="ven_id_name"/>
	<result property="ven_no_name" column="ven_no_name"/>
	<result property="usage_code" column="usage_code"/>
	<result property="usage_name" column="equi_usage_name"/>
	<result property="gb_code" column="gb_code"/>
	<result property="spell_code" column="spell_code"/>
	<result property="wbx_code" column="wbx_code"/>
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_DICT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_id
		,
		ass_code
		,
		ass_name
		,
		ass_type_id
		,
		acc_type_code
		,
		ass_unit
		,
		is_measure
		,
		is_depre
		,
		ass_depre_code
		,
		depre_years
		,
		is_stop
		,
		ass_spec
		,
		ass_model
		,
		fac_id
		,
		fac_no
		,
		ven_id
		,
		ven_no
		,
		usage_code
		,
		gb_code
		,
		spell_code
		,
		wbx_code
		
		) VALUES (
			#{group_id,jdbcType=INTEGER}		,
			#{hos_id,jdbcType=INTEGER}		,
			#{copy_code,jdbcType=VARCHAR}		,
			ASS_DICT_SEQ.nextval	,
			#{ass_code,jdbcType=VARCHAR}		,
			#{ass_name,jdbcType=VARCHAR}		,
			#{ass_type_id,jdbcType=INTEGER}		,
			#{acc_type_code,jdbcType=VARCHAR}		,
			#{ass_unit,jdbcType=VARCHAR}		,
			#{is_measure,jdbcType=INTEGER}		,
			#{is_depre,jdbcType=INTEGER}		,
			#{ass_depre_code,jdbcType=VARCHAR}		,
			#{depre_years,jdbcType=INTEGER}		,
			#{is_stop,jdbcType=INTEGER}		,
			#{ass_spec,jdbcType=VARCHAR}		,
			#{ass_model,jdbcType=VARCHAR}		,
			#{fac_id,jdbcType=VARCHAR}		,
			#{fac_no,jdbcType=VARCHAR}		,
			#{ven_id,jdbcType=VARCHAR}		,
			#{ven_no,jdbcType=VARCHAR}		,
			#{usage_code,jdbcType=VARCHAR}		,
			#{gb_code,jdbcType=VARCHAR}		,
			#{spell_code,jdbcType=VARCHAR}		,
			#{wbx_code,jdbcType=VARCHAR}		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_DICT (
		ass_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_code
		,
		ass_name
		,
		ass_type_id
		,
		acc_type_code
		,
		ass_unit
		,
		is_measure
		,
		is_depre
		,
		ass_depre_code
		,
		depre_years
		,
		is_stop
		,
		ass_spec
		,
		ass_model
		,
		fac_id
		,
		fac_no
		,
		ven_id
		,
		ven_no
		,
		usage_code
		,
		gb_code
		,
		spell_code
		,
		wbx_code
		
		) select ASS_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.copy_code}			,
				#{item.ass_code}			,
				#{item.ass_name}			,
				#{item.ass_type_id}			,
				#{item.acc_type_code}			,
				#{item.ass_unit}			,
				#{item.is_measure}			,
				#{item.is_depre}			,
				#{item.ass_depre_code}			,
				#{item.depre_years}			,
				#{item.is_stop}			,
				#{item.ass_spec}			,
				#{item.ass_model}			,
				#{item.fac_id}			,
				#{item.fac_no}			,
				#{item.ven_id}			,
				#{item.ven_no}			,
				#{item.usage_code}			,
				#{item.gb_code}			,
				#{item.spell_code}			,
				#{item.wbx_code}			
		from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_dict SET
			ass_code = #{ass_code}
			,
			ass_name = #{ass_name}
			,
			ass_type_id = #{ass_type_id}
			,
		 	acc_type_code = #{acc_type_code}
			,
			ass_unit = #{ass_unit}
			,
			is_measure = #{is_measure}
			,
			is_depre = #{is_depre}
			,
			ass_depre_code = #{ass_depre_code}
			,
			depre_years = #{depre_years}
			, 
			is_stop = #{is_stop}
			,
	      	ass_spec = #{ass_spec}
			,
			ass_model = #{ass_model}
			,
			fac_id = #{fac_id}
			,
			 fac_no = #{fac_no}
			, 
			ven_id = #{ven_id}
			,
			 ven_no = #{ven_no}
			, 
			usage_code = #{usage_code}
			,
			 gb_code = #{gb_code}
			, 
			spell_code = #{spell_code}
			,
			wbx_code = #{wbx_code}
		
		WHERE 
			group_id = #{group_id}
			 and 
			hos_id = #{hos_id}
			 and 
			copy_code = #{copy_code}
			 and 
			ass_id = #{ass_id}
		
	
	</update>
	
	<update id="updateSupByCode" parameterType="java.util.Map">

		UPDATE ass_dict SET

		ass_code = #{ass_code}

		WHERE
	group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		copy_code = #{copy_code}
		 and 
		ass_id = #{ass_id}


	</update>
	
	<update id="updateSupByName" parameterType="java.util.Map">

		UPDATE ass_dict SET

		ass_name = #{ass_name}

		WHERE
		group_id = #{group_id}
		 and 
		hos_id = #{hos_id}
		 and 
		copy_code = #{copy_code}
		 and 
		ass_id = #{ass_id}

	</update>
	
	
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE ass_dict SET
				ass_code = #{ass_code}
				,
				ass_name = #{ass_name}
				,
				ass_type_id = #{ass_type_id}
				,
				acc_type_code = #{acc_type_code}
				,
				ass_unit = #{ass_unit}
				,
				is_measure = #{is_measure}
				,
				is_depre = #{is_depre}
				,
				ass_depre_code = #{ass_depre_code}
				,
				depre_years = #{depre_years}
				,
				is_stop = #{is_stop}
				,
				ass_spec = #{ass_spec}
				,
				ass_model = #{ass_model}
				,
				fac_id = #{fac_id}
				,
				fac_no = #{fac_no}
				,
				ven_id = #{ven_id}
				,
				ven_no = #{ven_no}
				,
				usage_code = #{usage_code}
				,
				gb_code = #{gb_code}
				,
				spell_code = #{spell_code}
				,
				wbx_code = #{wbx_code}
				
			WHERE 
				group_id = #{item.group_id}
				 and 
				hos_id = #{item.hos_id}
				 and 
				copy_code = #{item.copy_code}
				 and 
				ass_id = #{item.ass_id}
			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_dict WHERE
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		ass_id = #{ass_id} 
	
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_dict WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				 and 
				hos_id = #{item.hos_id}
				 and 
				copy_code = #{item.copy_code}
				 and 
				ass_id = #{item.ass_id}
				
			</foreach>
	
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assDict" >
	
	SELECT 
		a.group_id,
	    a.hos_id,
	    a.copy_code,
	    a.ass_id,
	    a.ass_code,
	    a.ass_name,
	    a.ass_type_id,
	    b.ass_type_code,
	    b.ass_type_name,
	    afd.fina_type_name,
	    afd.fina_type_name acc_type_name, 
	    a.ass_unit,
      hu.unit_name ass_unit_name,
      a.is_measure,
      a.is_depre,
      a.ass_depre_code,
      c.ass_depre_name,
      a.depre_years,
      a.is_stop,
      a.ass_spec,
      a.ass_model,
      a.fac_id,
      a.fac_no,
      hfd.fac_code||' '||hfd.fac_name fac_code,
      hfd.fac_name,
      a.ven_id,
      a.ven_no,
      hsd.sup_code||' '||hsd.sup_name ven_code,
      hsd.sup_name,
      a.usage_code,
      d.equi_usage_name,
      a.gb_code,
      a.spell_code,
      a.wbx_code
    FROM ASS_DICT a
    left join ass_type_dict b 
      on 
        a.group_id=b.group_id 
        and a.hos_id=b.hos_id 
        and a.copy_code=b.copy_code
        and a.ass_type_id=b.ass_type_id
    left join ass_depre_method_dict c 
      on 
        a.ass_depre_code=c.ass_depre_code
    left join ass_usage_dict d 
      on 
        a.group_id=d.group_id 
        and a.hos_id=d.hos_id 
        and a.copy_code=d.copy_code
         and a.usage_code=d.equi_usage_code 
     LEFT JOIN HOS_UNIT hu 
       ON 
         a.group_id = hu.group_id 
         and a.hos_id = hu.hos_id 
         and a.ass_unit = hu.unit_code 
     left join HOS_SUP_dict hsd 
       on 
         a.group_id = hsd.group_id 
         and a.hos_id = hsd.hos_id 
         and a.ven_id = hsd.sup_id 
         and hsd.is_stop=0
     left join hos_fac_dict hfd 
       on 
         a.group_id = hfd.group_id 
         and a.hos_id = hfd.hos_id 
         and a.fac_id = hfd.fac_id 
         and hfd.is_stop=0
     left join ASS_FINA_DICT afd 
       on 
         b.group_id = afd.group_id 
         and b.hos_id = afd.hos_id 
         and b.copy_code=afd.copy_code 
         and b.acc_type_code = afd.fina_type_code 
         and afd.is_stop=0
		<where>                     
		<if test="group_id != null and group_id != ''">
		 AND a.group_id = #{group_id} 
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
<!-- 		<if test="ass_id != null and ass_id != ''"> -->
<!-- 			 AND ( ass_id like '%${ass_id}%') -->
<!-- 		</if> -->
        <if test="ass_code != null and ass_code != ''">
		AND a.ass_code = #{ass_code}
		</if>
		</where>   
		order by a.ass_code asc
	</select>
	
	<select id="queryByCode" resultType="com.chd.hrp.ass.entity.dict.AssDict" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_id,
		ass_code,
		ass_name,
		ass_type_id,
		acc_type_code,
		ass_unit,
		is_measure,
		is_depre,
		ass_depre_code,
		depre_years,
		is_stop,
		ass_spec,
		ass_model,
		fac_id,
		fac_no,
		ven_id,
		ven_no,
		usage_code,
		gb_code,
		spell_code,
		wbx_code
		FROM ass_dict 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}    
		<if test="ass_id != null and ass_id != ''">
		AND ass_id = #{ass_id}
		</if>
		<if test="ass_code != null and ass_code != ''">
		AND ass_code = #{ass_code}
		</if>
	
	</select>
	<select id="queryByUniqueness" resultType="com.chd.hrp.ass.entity.dict.AssDict" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_id,
		ass_code,
		ass_name,
		ass_type_id,
		acc_type_code,
		ass_unit,
		is_measure,
		is_depre,
		ass_depre_code,
		depre_years,
		is_stop,
		ass_spec,
		ass_model,
		fac_id,
		fac_no,
		ven_id,
		ven_no,
		usage_code,
		gb_code,
		spell_code,
		wbx_code
		FROM ASS_DICT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_id != null and ass_id != ''">
		AND ass_id = #{ass_id}
		</if>
		<if test="ass_code != null and ass_code != ''">
		AND ass_code = #{ass_code}
		</if>
		<if test="ass_name != null and ass_name != ''">
		AND ass_name = #{ass_name}
		</if>
		<if test="ass_type_id != null and ass_type_id != ''">
		AND ass_type_id = #{ass_type_id}
		</if>
		<if test="acc_type_code != null and acc_type_code != ''">
		AND acc_type_code = #{acc_type_code}
		</if>
		<if test="ass_unit != null and ass_unit != ''">
		AND ass_unit = #{ass_unit}
		</if>
		<if test="is_measure != null and is_measure != ''">
		AND is_measure = #{is_measure}
		</if>
		<if test="is_depre != null and is_depre != ''">
		AND is_depre = #{is_depre}
		</if>
		<if test="ass_depre_code != null and ass_depre_code != ''">
		AND ass_depre_code = #{ass_depre_code}
		</if>
		<if test="depre_years != null and depre_years != ''">
		AND depre_years = #{depre_years}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop}
		</if>
		<if test="ass_spec != null and ass_spec != ''">
		AND ass_spec = #{ass_spec}
		</if>
		<if test="ass_model != null and ass_model != ''">
		AND ass_model = #{ass_model}
		</if>
		<if test="fac_id != null and fac_id != ''">
		AND fac_id = #{fac_id}
		</if>
		<if test="fac_no != null and fac_no != ''">
		AND fac_no = #{fac_no}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no}
		</if>
		<if test="usage_code != null and usage_code != ''">
		AND usage_code = #{usage_code}
		</if>
		<if test="gb_code != null and gb_code != ''">
		AND gb_code = #{gb_code}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code}
		</if>
		</where>   
		order by group_id asc
	</select>
</mapper>

