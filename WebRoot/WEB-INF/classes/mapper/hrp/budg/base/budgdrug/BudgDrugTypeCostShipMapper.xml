<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.base.budgdrug.BudgDrugTypeCostShipMapper">
	
	<resultMap id="budgDrugTypeCostShip" type="com.chd.hrp.budg.entity.BudgDrugTypeCostShip">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="med_type_id" column="med_type_id"/>
	<result property="med_type_no" column="med_type_no"/>
	<result property="cost_subj_code" column="cost_subj_code"/>
	<result property="income_subj_code" column="income_subj_code"/>
	</resultMap>
		
	<resultMap id="budgDrugTypeCostShipMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="med_type_id" column="med_type_id"/>
	<result property="med_type_no" column="med_type_no"/>
	<result property="med_type_code" column="med_type_code"/>
	<result property="med_type_name" column="med_type_name"/>
	<result property="med_type_code_name" column="med_type_code_name" />
	<result property="cost_subj_code" column="cost_subj_code"/>
	<result property="cost_subj_name" column="cost_subj_name"/>
	<result property="cost_subj_code_name" column="cost_subj_code_name" />
	<result property="income_subj_code" column="income_subj_code"/>
	<result property="income_subj_name" column="income_subj_name"/>
	<result property="income_subj_code_name" column="income_subj_code_name" />
	</resultMap>
	
	
	<resultMap id="itemMap" type="java.util.Map">
	<result property="id" column="id"/>
	<result property="text" column="text"/>
	</resultMap>
	
	<insert id="add" parameterType="java.util.Map">
		INSERT INTO BUDG_MED_TYPE_SUBJ (
			group_id,
			hos_id,
			copy_code,
			budg_year,
			med_type_id,
			cost_subj_code
		) 
		VALUES 
		(
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{budg_year,jdbcType=VARCHAR},
			#{med_type_id,jdbcType=VARCHAR},
			#{cost_subj_code,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		INSERT INTO BUDG_MED_TYPE_SUBJ(
		group_id,
		hos_id,
		copy_code,
		budg_year,
		med_type_id,
		cost_subj_code		
		)
		<foreach collection="list" item="item" index="index" separator="union all" >
			select 
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.budg_year,jdbcType=VARCHAR},
				#{item.med_type_id,jdbcType=INTEGER},
				#{item.cost_subj_code,jdbcType=VARCHAR}
		    from dual
		</foreach>
	</insert>
	
	<!-- 	批量添加药品类别与收入科目的对应关系 -->
	<insert id="addIncomeBatch" parameterType="java.util.List" >
		INSERT INTO BUDG_MED_TYPE_INCOME(
			group_id,
			hos_id,
			copy_code,
			budg_year,
			med_type_id,
			income_subj_code		
		)
		<foreach collection="list" item="item" index="index" separator="union all" >
			select 
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.budg_year,jdbcType=VARCHAR},
				#{item.med_type_id,jdbcType=INTEGER},
				#{item.income_subj_code,jdbcType=VARCHAR}
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE BUDG_MED_TYPE_SUBJ 
		set
			cost_subj_code = #{cost_subj_code,jdbcType=VARCHAR}
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND med_type_id = #{med_type_id,jdbcType=INTEGER}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_MED_TYPE_SUBJ 
			SET
			 	cost_subj_code = #{med_type_id,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{budg_year,jdbcType=VARCHAR}
				AND med_type_id = #{item.med_type_id,jdbcType=VARCHAR}
		</foreach>
	</update>
	
<!-- 	修改药品分类与收入科目对应关系 -->
	<update id="updateIncome" parameterType="java.util.Map">
			UPDATE BUDG_MED_TYPE_INCOME 
			SET
			    income_subj_code = #{income_subj_code,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND budg_year = #{budg_year,jdbcType=VARCHAR}
				AND med_type_id = #{med_type_id,jdbcType=INTEGER}
				AND income_subj_code = #{old_income_subj_code,jdbcType=INTEGER}
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM BUDG_MED_TYPE_SUBJ 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			AND med_type_id = #{med_type_id,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_MED_TYPE_SUBJ 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND med_type_id = #{item.med_type_id,jdbcType=VARCHAR}
			</foreach>
	</delete>

<!-- 	修改药品分类与收入科目对应关系 -->	
	<delete id="deleteIncomeBatch" parameterType="java.util.List">
		DELETE FROM BUDG_MED_TYPE_INCOME 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND med_type_id = #{item.med_type_id,jdbcType=VARCHAR}
				AND income_subj_code = #{item.income_subj_code,jdbcType=INTEGER}
			</foreach>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="budgDrugTypeCostShipMap" >
		SELECT 
		    b.group_id, 
		    b.hos_id,
		    b.copy_code, 
		    nvl2(a.budg_year,a.budg_year,bmti.budg_year ) budg_year,
		    b.med_type_id, 
		    b.med_type_no, 
		    b.med_type_code,
		    b.med_type_name,
		    b.med_type_code||''||b.med_type_name med_type_code_name,
		    a.cost_subj_code,
		    c.subj_name cost_subj_name,
		    a.cost_subj_code||''||c.subj_name cost_subj_code_name,
		    bmti.income_subj_code,
		    d.subj_name income_subj_name,
		    bmti.income_subj_code||''||d.subj_name income_subj_code_name
	    from med_type_dict b
	    left join BUDG_MED_TYPE_SUBJ a 
	    on 
	    b.group_id = a.group_id
	    and b.hos_id = a.hos_id
	    and b.copy_code = a.copy_code
	    and b.med_type_id = a.med_type_id
	    and a.budg_year = #{budg_year,jdbcType=VARCHAR}
	    and b.is_stop = 0 
	    left join BUDG_COST_SUBJ c   
	    on  a.group_id=c.group_id 
		    and a.hos_id =c.hos_id 
		    and a.copy_code=c.copy_code 
		    and a.budg_year=c.budg_year
		    and a.cost_subj_code=c.subj_code
	    left join BUDG_MED_TYPE_INCOME bmti 
	    on  b.group_id = bmti.group_id
		    and b.hos_id = bmti.hos_id
		    and b.copy_code = bmti.copy_code 
		    and b.med_type_id = bmti.med_type_id
		    and bmti.budg_year = #{budg_year,jdbcType=VARCHAR} 
		    and b.is_stop = 0 
	    left join BUDG_INCOME_SUBJ d
	    on  d.group_id=bmti.group_id 
		    and d.hos_id =bmti.hos_id 
		    and d.copy_code=bmti.copy_code 
		    and d.budg_year=bmti.budg_year
		    and d.subj_code=bmti.income_subj_code
		where                   
			b.group_id = #{group_id,jdbcType=INTEGER}
			AND b.hos_id = #{hos_id,jdbcType=INTEGER}
			AND b.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND (a.cost_subj_code is not null or bmti.income_subj_code is not null)
			<if test="med_type_id != null and med_type_id != ''">
			AND  a.med_type_id = #{med_type_id,jdbcType=VARCHAR}
			</if>
			<if test="cost_subj_code != null and cost_subj_code != ''">
			AND  a.cost_subj_code = #{cost_subj_code,jdbcType=VARCHAR}
			</if>
			<if test="income_subj_code != null and income_subj_code != ''">
			AND  bmti.income_subj_code = #{income_subj_code,jdbcType=VARCHAR}
			</if>
		order by a.budg_year asc
	</select>
	
	<select id="queryByCode" parameterType="java.util.Map" resultMap="budgDrugTypeCostShip">
		SELECT 
		    a.group_id, 
		    a.hos_id, 
		    a.copy_code, 
		    a.budg_year,
		    a.med_type_id,
		    b.med_type_no,
		    b.med_type_code,
		    b.med_type_name,
		    a.cost_subj_code,
		    c.subj_name cost_subj_name
	    FROM BUDG_MED_TYPE_SUBJ  a
	    left join  MED_TYPE_DICT b 
	    on a.group_id=b.group_id  
		   and a.hos_id =b.hos_id 
		   and a.copy_code=b.copy_code 
		   and a.med_type_id=b.med_type_id 
	       and b.is_stop  =  0 
	    left join BUDG_COST_SUBJ c   
	    on a.group_id=c.group_id 
		   and a.hos_id =c.hos_id 
		   and a.copy_code=c.copy_code 
		   and a.budg_year=c.budg_year
		   and a.cost_subj_code=c.subj_code
		where                   
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.budg_year = #{budg_year,jdbcType=VARCHAR}
			AND  a.med_type_id = #{med_type_id,jdbcType=VARCHAR}
		order by a.budg_year asc
	</select>
	
	<select id="queryExists" parameterType="java.util.Map" resultMap="budgDrugTypeCostShipMap" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			med_type_id,
			cost_subj_code
		FROM BUDG_MED_TYPE_SUBJ  
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="med_type_id != null and med_type_id != ''">
			AND med_type_id = #{med_type_id,jdbcType=VARCHAR}
			</if>
			<if test="cost_subj_code != null and cost_subj_code != ''">
			AND cost_subj_code = #{cost_subj_code,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 查询药品分类 -->
	<select id="queryMedTypes" resultMap="itemMap">
		select 
			med_type_id || ',' || med_type_no id,
		  	med_type_code || ' ' || med_type_name text 
	  	from MED_TYPE_DICT
		<where>
			group_id = ${group_id}
			AND hos_id = ${hos_id} 
			AND copy_code = ${copy_code}
			<if test="key != null and key != ''">
				and (
					med_type_id like '${key}%' or
					med_type_code like '${key}%' or
					med_type_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
			and is_stop = 0
		</where>
		order by med_type_code
	</select>
	
	<!-- 查询药品分类 若某药品分类维护了对应关系，则以其编码为前缀的其他药品分类均不可被选中，其各层上级也不可以被选中-->
	<select id="queryMedTypesFilter" resultMap="itemMap">
	with temp as
     (select b.med_type_code, b.type_level, b.super_code
        from BUDG_MED_TYPE_SUBJ a
        left join MED_TYPE_DICT b
          on a.group_id = b.group_id
         and a.hos_id = b.hos_id
         and a.copy_code = b.copy_code
         and a.med_type_id = b.med_type_id),
    
    t as
     (select med_type_code
        from MED_TYPE_DICT a
       where a.group_id = #{group_id}
         and a.hos_id = #{hos_id}
         and a.copy_code = #{copy_code}
       start with a.med_type_code in (select b.med_type_code from temp b)
      connect by PRIOR a.med_type_code = a.super_code
      
      union
      select med_type_code
        from MED_TYPE_DICT a
       where a.group_id = #{group_id}
         and a.hos_id = #{hos_id}
         and a.copy_code = #{copy_code}
       start with a.med_type_code in (select b.med_type_code from temp b)
      connect by PRIOR a.super_code = a.med_type_code)
    select 
    mtd.med_type_id  id ,
    mtd.med_type_code||' '||mtd.med_type_name as text
    from MED_TYPE_DICT mtd
    where
	 mtd.group_id = #{group_id}
	AND mtd.hos_id = #{hos_id} 
	AND mtd.copy_code = #{copy_code}
	AND mtd.is_stop = 0
	and mtd.med_type_code not in  (
      select med_type_code from t
      )
	<if test="key != null and key != ''">
		AND (mtd.med_type_code like '${key}%' or
			mtd.med_type_name like '%${key}%' or 
			mtd.spell_code like '%${key}%' or
			mtd.wbx_code like '%${key}%' )
	</if>
	and mtd.is_stop = 0
	order by mtd.med_type_code
	</select>
	
	<resultMap type="java.util.Map" id="budgSubjMap">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	<!-- 预算科目下拉框  04 收入预算科目 ，05 支出预算科目-->
	<select id="queryBudgSubj" resultMap="budgSubjMap">
		SELECT
			bcs.subj_code  id ,
			bcs.subj_code || ' ' || bcs.subj_name text
		FROM ${table} bcs
		<where>
			AND bcs.group_id = #{group_id}
			AND bcs.hos_id = #{hos_id} 
			AND bcs.copy_code = #{copy_code}
			AND bcs.budg_year = #{budg_year}
			<if test="is_last != null and is_last != '' ">
				AND bcs.is_last = #{is_last}
			</if>
			<if test="key != null and key != ''">
				AND ( bcs.subj_code like '${key}%' or
					bcs.subj_name like '%${key}%' or 
					bcs.spell_code like '%${key}%' or
					bcs.wbx_code like '%${key}%' )
			</if>
		</where>
		order by id
	</select>
	
	<!-- 查询 支出预算科目是否存在 -->
	<select id="queryCostSubjByCode" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT  count(subj_code) FROM BUDG_COST_SUBJ 
		WHERE                     
		group_id = #{group_id,jdbcType=INTEGER}
		
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		
		AND budg_year = #{budg_year,jdbcType=VARCHAR}
		<if test="subj_code != null and subj_code != ''">
		AND subj_code = #{subj_code,jdbcType=VARCHAR}
		</if>
		AND is_last = 1
	</select>
	
	<select id="queryBudgTypeDictByCode" resultMap="budgDrugTypeCostShipMap" parameterType="java.util.Map" >
		SELECT 
			med_type_no,
			group_id,
			hos_id,
			copy_code,
			med_type_id,
			med_type_code,
			med_type_name,
			is_stop
		FROM MED_TYPE_DICT 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and med_type_id = #{med_type_id, jdbcType=VARCHAR}
			and is_stop=0
			
	</select>
	
	<!-- 获取上一年度数据 -->
	<select id="queryPrevYearData" parameterType="java.util.Map" resultMap="budgDrugTypeCostShipMap">
		with temp1 as(
		select b.subj_code||''||b.subj_name subj_code_name from BUDG_MED_TYPE_SUBJ a
		    left join budg_cost_subj b
		    on a.group_id = b.group_id
		    and a.hos_id = b.hos_id
		    and a.copy_code = b.copy_code
		    and a.budg_year = b.budg_year
		    and a.cost_subj_code = b.subj_code
		    where 
		    a.group_id = #{group_id}
		    and a.hos_id = #{hos_id}
		    and a.copy_code = #{copy_code}
		    and a.budg_year = #{prev_year}
		   ),
	       temp3 as (
	        select subj_code from budg_cost_subj
				where subj_code||''||subj_name in (select subj_code_name from temp1) 
				and group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and budg_year = #{budg_year}
	       )
		    select 
				e.group_id,
				e.hos_id,
				e.copy_code,
				e.budg_year,
				e.med_type_id,
				e.cost_subj_code
			FROM BUDG_MED_TYPE_SUBJ e
				where e.cost_subj_code in (select subj_code from temp3)
		    and e.group_id = #{group_id}
				and e.hos_id = #{hos_id}
				and e.copy_code = #{copy_code}
				and e.budg_year = #{prev_year}
		    and not exists(
					select 1 from BUDG_MED_TYPE_SUBJ f
					where
					    f.group_id = #{group_id}
					and f.hos_id = #{hos_id}
					and f.copy_code = #{copy_code}
					and f.budg_year = #{budg_year}
			        and f.cost_subj_code = e.cost_subj_code
				)
	</select>
	
	<!-- 获取药品类别与收入科目 对应关系  上一年度数据 -->
	<select id="queryPrevYearIncomeData" parameterType="java.util.Map" resultMap="budgDrugTypeCostShipMap">
		
		  with temp2 as (
		    select 
		    	b.subj_code||''||b.subj_name subj_code_name 
		    from budg_med_type_income a
		    left join budg_income_subj b
		    on  a.group_id = b.group_id
			    and a.hos_id = b.hos_id
			    and a.copy_code = b.copy_code
			    and a.budg_year = b.budg_year
			    and a.income_subj_code = b.subj_code
		    where 
			    a.group_id = #{group_id}
			    and a.hos_id = #{hos_id}
			    and a.copy_code = #{copy_code}
			    and a.budg_year = #{prev_year}
		    ),
		    temp4 as (
		     select 
		     	subj_code 
		     from budg_income_subj
			 where 
			 	subj_code||''||subj_name in (select subj_code_name from temp2) 
				and group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and budg_year = #{budg_year}
		    )
		    select 
				e.group_id,
				e.hos_id,
				e.copy_code,
				e.budg_year,
				e.med_type_id,
		    	e.income_subj_code
			from budg_med_type_income e
			WHERE 
		        e.income_subj_code in (select subj_code from temp4)
		        and e.group_id = #{group_id}
				and e.hos_id = #{hos_id}
				and e.copy_code = #{copy_code}
				and e.budg_year = #{prev_year}
		    and not exists(
				select 1 from budg_med_type_income f
				where
				    f.group_id = #{group_id}
					and f.hos_id = #{hos_id}
					and f.copy_code = #{copy_code}
					and f.budg_year = #{budg_year}
		      		and f.income_subj_code = e.income_subj_code
				)
	</select>
</mapper>

