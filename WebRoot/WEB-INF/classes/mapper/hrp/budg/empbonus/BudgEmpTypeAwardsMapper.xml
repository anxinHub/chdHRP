<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.empbonus.BudgEmpTypeAwardsMapper">
	
	<resultMap id="budgEmpTypeAwards" type="com.chd.hrp.budg.entity.BudgEmpTypeAwards">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="emp_type_code" column="emp_type_code"/>
	<result property="awards_item_code" column="awards_item_code"/>
	<result property="amount" column="amount"/>
	</resultMap>
		
	<resultMap id="budgEmpTypeAwardsMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="emp_type_code" column="emp_type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="awards_item_code" column="awards_item_code"/>
	<result property="awards_item_name" column="awards_item_name"/>
	<result property="amount" column="amount"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_EMP_TYPE_AWARDS (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="year != null and year != ''">
		year
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		emp_type_code
		,
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		awards_item_code
		,
		</if>
		<if test="amount != null and amount != ''">
		amount
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="year != null and year != ''">
		#{year,jdbcType=VARCHAR}
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		#{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		#{emp_type_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		#{awards_item_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="amount != null and amount != ''">
		#{amount,jdbcType=INTEGER}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_EMP_TYPE_AWARDS (
		group_id
		,
		hos_id
		,
		copy_code
		,
		year
		,
		dept_id
		,
		emp_type_code
		,
		awards_item_code
		,
		amount
		
		) select BUDG_EMP_TYPE_AWARDS_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.year,jdbcType=VARCHAR}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.emp_type_code,jdbcType=VARCHAR}
			,
			#{item.awards_item_code,jdbcType=VARCHAR}
			,
			#{item.amount,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE budg_emp_type_awards 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="amount != null and amount != ''">
		amount = #{amount,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		AND emp_type_code = #{emp_type_code,jdbcType=VARCHAR}
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		AND awards_item_code = #{awards_item_code,jdbcType=VARCHAR}
		</if>
		<if test="amount != null and amount != ''">
		AND amount = #{amount,jdbcType=INTEGER}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE budg_emp_type_awards 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.amount != null and item.amount != ''">
			amount = #{item.amount,jdbcType=INTEGER}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.year != null and item.year != ''">
			AND year = #{item.year,jdbcType=VARCHAR}
			</if>  
			<if test="item.dept_id != null and item.dept_id != ''">
			AND dept_id = #{item.dept_id,jdbcType=INTEGER}
			</if>  
			<if test="item.emp_type_code != null and item.emp_type_code != ''">
			AND emp_type_code = #{item.emp_type_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.awards_item_code != null and item.awards_item_code != ''">
			AND awards_item_code = #{item.awards_item_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.amount != null and item.amount != ''">
			AND amount = #{item.amount,jdbcType=INTEGER}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM budg_emp_type_awards 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		AND emp_type_code = #{emp_type_code,jdbcType=VARCHAR}
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		AND awards_item_code = #{awards_item_code,jdbcType=VARCHAR}
		</if>
		<if test="amount != null and amount != ''">
		AND amount = #{amount,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM budg_emp_type_awards 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				    group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				AND emp_type_code = #{item.emp_type_code,jdbcType=VARCHAR}
				AND awards_item_code = #{item.awards_item_code,jdbcType=VARCHAR}
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgEmpTypeAwardsMap" >
	
		SELECT a.group_id,
		       a.hos_id,
		       a.copy_code,
		       a.year,
		       a.dept_id,
		       b.dept_name,
		       a.emp_type_code,
		       c.type_name,
		       a.awards_item_code,
		       d.awards_item_name,
		       a.amount
		  FROM BUDG_EMP_TYPE_AWARDS a
		  left join hos_dept_dict b
		    on a.group_id = b.group_id
		   and a.hos_id = b.hos_id
		   and a.dept_id = b.dept_id
		   and b.is_stop = 0
		   and b.is_disable = 0
		  left join budg_emp_type c
		    on a.group_id = c.group_id
		   and a.hos_id = c.hos_id
		   and a.copy_code = c.copy_code
		   and a.emp_type_code = c.type_code
		   and c.is_stop = 0
		  left join BUDG_AWARDS_ITEM_DICT d
		    on a.group_id = d.group_id
		   and a.hos_id = d.hos_id
		   and a.copy_code = d.copy_code
		   and a.awards_item_code = d.awards_item_code
		   and d.is_stop = 0
		where                     
		 	a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="year != null and year != ''">
		AND a.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		AND a.emp_type_code = #{emp_type_code,jdbcType=VARCHAR}
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		AND a.awards_item_code = #{awards_item_code,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="queryByCode" resultMap="budgEmpTypeAwards"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		dept_id,
		emp_type_code,
		awards_item_code,
		amount
		FROM budg_emp_type_awards 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		dept_id = #{dept_id,jdbcType=INTEGER}   and 
		emp_type_code = #{emp_type_code,jdbcType=VARCHAR}   and 
		awards_item_code = #{awards_item_code,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgEmpTypeAwards"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		dept_id,
		emp_type_code,
		awards_item_code,
		amount
		FROM BUDG_EMP_TYPE_AWARDS 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		AND emp_type_code = #{emp_type_code,jdbcType=VARCHAR}
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		AND awards_item_code = #{awards_item_code,jdbcType=VARCHAR}
		</if>
		<if test="amount != null and amount != ''">
		AND amount = #{amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="budgEmpTypeAwards"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		year,
		dept_id,
		emp_type_code,
		awards_item_code,
		amount
		FROM BUDG_EMP_TYPE_AWARDS 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="emp_type_code != null and emp_type_code != ''">
		AND emp_type_code = #{emp_type_code,jdbcType=VARCHAR}
		</if>
		<if test="awards_item_code != null and awards_item_code != ''">
		AND awards_item_code = #{awards_item_code,jdbcType=VARCHAR}
		</if>
		<if test="amount != null and amount != ''">
		AND amount = #{amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryBudgEmpAwardsTotalByYear" resultMap="budgEmpTypeAwardsMap" parameterType="java.util.Map">
			select a.group_id, 
				   a.hos_id, 
				   a.copy_code,
				   a.year,
			       a.dept_id,
			       a.emp_type_code,
			       a.awards_item_code,
			       avg(a.amount) as amount
			  from budg_emp_awards_total a
			 where a.group_id = #{group_id}
			   and a.hos_id = #{hos_id}
			   and a.copy_code = #{copy_code}
			   and a.year = #{year}
			 group by  a.group_id,a.hos_id,a.copy_code,a.year, a.dept_id, a.emp_type_code, a.awards_item_code
	</select>
	<insert id="collectBudgYearEmpTypeAwards" parameterType="java.util.List">
		insert into budg_emp_type_awards
		  (group_id, hos_id, copy_code, year, dept_id, emp_type_code, awards_item_code, amount)
		 <foreach collection="list" item="item" index="index" separator=" union all " >
		 select #{item.group_id}, #{item.hos_id}, #{item.copy_code}, #{item.year}, #{item.dept_id}, #{item.emp_type_code}, #{item.awards_item_code}, #{item.amount}
			from dual
		 </foreach>
		  
	</insert>
	
</mapper>

