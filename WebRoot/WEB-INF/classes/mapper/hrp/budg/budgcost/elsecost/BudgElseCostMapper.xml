<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.budg.dao.budgcost.elsecost.BudgElseCostMapper">
	
	<resultMap id="budgElseIcome" type="com.chd.hrp.budg.entity.BudgElseCost">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="subj_code" column="subj_code"/>
	<result property="last_cost" column="last_cost"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="grow_value" column="grow_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	<result property="remark" column="remark"/>
	
	</resultMap>
		
	<resultMap id="budgElseIcomeMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="budg_year" column="budg_year"/>
	<result property="month" column="month"/>
	<result property="subj_code" column="subj_code"/>
	<result property="subj_name" column="subj_name"/>
	<result property="last_cost" column="last_cost"/>
	<result property="grow_rate" column="grow_rate"/>
	<result property="grow_value" column="grow_value"/>
	<result property="budg_value" column="budg_value"/>
	<result property="last_month_carried" column="last_month_carried"/>
	<result property="carried_next_month" column="carried_next_month"/>
	<result property="remark" column="remark"/>
	
	<result property="subj_level" column="subj_level"/>
	<result property="summary" column="summary"/>
	<result property="month_data1" column="month_data1"/>
	<result property="month_data2" column="month_data2"/>
	<result property="month_data3" column="month_data3"/>
	<result property="month_data4" column="month_data4"/>
	<result property="month_data5" column="month_data5"/>
	<result property="month_data6" column="month_data6"/>
	<result property="month_data7" column="month_data7"/>
	<result property="month_data8" column="month_data8"/>
	<result property="month_data9" column="month_data9"/>
	<result property="month_data10" column="month_data10"/>
	<result property="month_data11" column="month_data11"/>
	<result property="month_data12" column="month_data12"/>
	<result property="year_sum" column="year_sum"/>
	
	<!-- 科目是否结转标记 -->
	<result property="is_caarried" column="is_caarried"/>
	<!-- 结转下月值 -->
	<result property="next_value" column="next_value"/>
	</resultMap>
	
	<resultMap type="java.util.Map" id="selectMap">
		<result property="code" column="code"/>
		<result property="name" column="name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_ELSE_COST (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			subj_code
			,
			last_cost
			,
			grow_rate
			,
			grow_value
			,
			budg_value
			,
			last_month_carried
			,
			carried_next_month
			,
			remark
			
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{budg_year,jdbcType=VARCHAR}
			,
			#{month,jdbcType=VARCHAR}
			,
			#{subj_code,jdbcType=VARCHAR}
			,
			#{last_cost,jdbcType=INTEGER}
			,
			#{grow_rate,jdbcType=INTEGER}
			,
			#{grow_value,jdbcType=INTEGER}
			,
			#{budg_value,jdbcType=INTEGER}
			,
			#{last_month_carried,jdbcType=INTEGER}
			,
			#{carried_next_month,jdbcType=INTEGER}	
			,
			#{remark,jdbcType=VARCHAR}
			
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_ELSE_COST (
			group_id
			,
			hos_id
			,
			copy_code
			,
			budg_year
			,
			month
			,
			subj_code
			,
			last_cost
			,
			grow_rate
			,
			grow_value
			,
			budg_value
			,
			last_month_carried
			,
			carried_next_month
			,
			remark
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.budg_year,jdbcType=VARCHAR}
				,
				#{item.month,jdbcType=VARCHAR}
				,
				#{item.subj_code,jdbcType=VARCHAR}
				,
				#{item.last_cost,jdbcType=INTEGER}
				,
				#{item.grow_rate,jdbcType=INTEGER}
				,
				#{item.grow_value,jdbcType=INTEGER}
				,
				#{item.budg_value,jdbcType=INTEGER}
				,
				#{item.last_month_carried,jdbcType=INTEGER}
				,
				#{item.carried_next_month,jdbcType=INTEGER}	
				,
				#{item.remark,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_ELSE_COST set
				last_cost = #{last_cost,jdbcType=INTEGER}
				,
				grow_rate = #{grow_rate,jdbcType=INTEGER}
				,
				grow_value = #{grow_value,jdbcType=INTEGER}
				,
				budg_value = #{budg_value,jdbcType=INTEGER}
				,
				remark = #{remark,jdbcType=VARCHAR}
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_ELSE_COST SET
				last_cost = #{item.last_cost,jdbcType=INTEGER}
				,
				grow_rate = #{item.grow_rate,jdbcType=INTEGER}
				,
				grow_value = #{item.grow_value,jdbcType=INTEGER}
				,
				budg_value = #{item.budg_value,jdbcType=INTEGER}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
					
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_ELSE_COST 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_ELSE_COST 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="budgElseIcomeMap" >
		
		SELECT 
			bei.group_id,
			bei.hos_id,
			bei.copy_code,
			bei.budg_year,
			bei.month,
			bei.subj_code,
			bei.subj_code || ' '|| bis.subj_name subj_name,
			bei.last_cost ,
			bei.grow_rate ,
			bei.grow_value,
			bei.budg_value ,
			bei.last_month_carried ,
			bei.carried_next_month ,
			bei.remark
			
		FROM BUDG_ELSE_COST bei
		LEFT JOIN budg_COST_subj bis
			ON
				bei.group_id  = bis.group_id 
				and bei.hos_id  = bis.hos_id 
				and bei.copy_code  = bis.copy_code
				and bei.budg_year  = bis.budg_year
				and bei.subj_code  = bis.subj_code
		where                     
			
			bei.group_id = #{group_id,jdbcType=INTEGER}
			
			AND bei.hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND bei.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND bei.budg_year = #{budg_year,jdbcType=VARCHAR}
			
			<if test="subj_code != null and subj_code != ''">
			AND bei.subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
			AND bei.month = #{month,jdbcType=VARCHAR}
			</if>
		order by bei.budg_year ,bei.month , bei.subj_code  asc
	</select>
	<select id="queryByCode" resultMap="budgElseIcome"  parameterType="java.util.Map" >
	
		SELECT 
			group_id ,
			hos_id,
			copy_code,
			budg_year,
			month,
			subj_code,
			last_cost,
			grow_rate,
			grow_value,
			budg_value,
			last_month_carried,
			carried_next_month,
			remark
		FROM BUDG_ELSE_COST 
		WHERE 
			group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}   
			and copy_code = #{copy_code,jdbcType=VARCHAR}   
			and budg_year = #{budg_year,jdbcType=VARCHAR}  
			and month = #{month,jdbcType=VARCHAR} 
			and subj_code = #{subj_code,jdbcType=VARCHAR}   
	</select>
	
	<select id="queryByUniqueness" resultMap="budgElseIcome"  parameterType="java.util.Map" >
	
		SELECT 
			group_id ,
			hos_id,
			copy_code,
			budg_year,
			month,
			subj_code,
			last_cost,
			grow_rate,
			grow_value,
			budg_value,
			last_month_carried,
			carried_next_month,
			remark
		FROM BUDG_ELSE_COST 
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			
	</select>
	
	<select id="queryExists" resultMap="budgElseIcome"  parameterType="java.util.Map" >
	
		SELECT 
			group_id ,
			hos_id,
			copy_code,
			budg_year,
			month,
			subj_code,
			last_cost,
			grow_rate,
			grow_value,
			budg_value,
			last_month_carried,
			carried_next_month,
			remark
		FROM BUDG_ELSE_COST 
		<where>                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
			<if test="month != null and month != ''">
			AND month = #{month,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	<!-- 查询 科室月份医疗支出预算 汇总数据 -->
	<select id="queryCollectData" resultMap="budgElseIcomeMap"  parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			budg_year,
			subj_code,
			month,
			nvl(budg_value,0) last_cost,
		FROM BUDG_ELSE_COST
		WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			
			AND month = #{month,jdbcType=VARCHAR}
			
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			
	</select>
	
	<select id="querySubjCodeExist" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	
		SELECT count(1) FROM BUDG_COST_SUBJ
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{year,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 支出预算科目下拉框 -->
	<select id="queryBudgCostSubj" resultMap="selectMap">
		SELECT
		subj_code code,
		subj_code || ' ' || subj_name name
		FROM BUDG_COST_SUBJ
		where
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			<if test="key != null and key != ''">
				AND ( subj_code like '${key}%' or
					subj_name like '%${key}%'  or 
					spell_code like '%${key}%' or
					wbx_code like '%${key}%' )
			</if>
			order by subj_code
	</select>
	
	<!-- 查询添加数据是否已存在 -->
	<select id="queryDataExist" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM BUDG_ELSE_COST
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND budg_year = #{item.budg_year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
				AND subj_code = #{item.subj_code,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 根据填写数据 查询上年支出 -->
	<select id="setLastCost" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT nvl(amount,0.00) amount FROM BUDG_ELSE_COST_EXECUTE
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND year = #{budg_year,jdbcType=VARCHAR}
			AND month = #{month,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 生成 （根据上年执行数据生成） -->
	<insert id="addBudgElseCost" parameterType="java.util.Map" >
		
		INSERT INTO BUDG_ELSE_COST (
			group_id , hos_id , copy_code , budg_year , month , subj_code , last_cost
		) 
		select temp.group_id , temp.hos_id , temp.copy_code , temp.budg_year , temp.month , 
				temp.subj_code , temp.amount 
		from (
				select t.group_id , t.hos_id , t.copy_code , ${budg_year}  budg_year , t.month ,
				 	t.subj_code , t.amount 
			    from BUDG_ELSE_COST_EXECUTE t
			 	where t.group_id = #{group_id,jdbcType=INTEGER}
				AND t.hos_id = #{hos_id,jdbcType=INTEGER}
				AND t.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND t.year = #{last_year,jdbcType=VARCHAR}
				<!-- 支出科目 必须在所选年度 支出预算科目字典 存在-->
				AND t.subj_code in  (
					select distinct subj_code from BUDG_ELSE_COST_EXECUTE a
					where	group_id = #{group_id,jdbcType=INTEGER}
							AND hos_id = #{hos_id,jdbcType=INTEGER}
							AND copy_code = #{copy_code,jdbcType=VARCHAR}
							AND year = #{last_year,jdbcType=VARCHAR}
							AND exists(
									select 1 from budg_COST_subj b
									where a.group_id = b.group_id
										  and a.hos_id = b.hos_id
										  and a.copy_code = b.copy_code
										  and a.year = ${last_year}
										  and b.budg_year = ${budg_year}
										  and a.subj_code = b.subj_code
							)
				)
			)temp 
		where not exists(
				select 1 from BUDG_ELSE_COST bei
				where temp.group_id = bei.group_id
					and temp.hos_id = bei.hos_id
					and temp.copy_code = bei.copy_code
					and temp.budg_year = bei.budg_year
					and temp.month = bei.month
					and temp.subj_code = bei.subj_code
		)
			
	</insert>
	
	<!-- 结转查询SQL：查询当前年月预算值,执行值,上月结转,下月结转及下月数据的上月结转 -->
	<select id="queryBudgElseCostByYearMonth" parameterType="java.util.Map" resultMap="budgElseIcomeMap">
		SELECT 
	        bec.group_id,bec.hos_id,bec.copy_code,bec.budg_year,bec.subj_code,bec.month,bec.budg_value,
	        nvl(bec.last_month_carried,0) as last_month_carried ,nvl(bec.carried_next_month,0) as carried_next_month,
	        nvl(bece.amount,0) as amount,bcs.is_caarried,
	        --<!-- 计算:下月结转值 = 上月结转 + 本月预算 -本月执行 -->
	        nvl(bec.LAST_MONTH_CARRIED,0) + nvl(bec.BUDG_VALUE,0) - nvl(bece.amount,0) AS next_value
      	FROM BUDG_ELSE_COST bec
      	LEFT JOIN BUDG_ELSE_COST_EXECUTE bece
        ON
              bec.group_id = bece.group_id
              AND bec.hos_id = bece.hos_id
              AND bec.copy_code = bece.copy_code
              AND bec.budg_year = bece.year
              AND bec.month = bece.month
              AND bec.subj_code = bece.subj_code
      	LEFT JOIN BUDG_COST_SUBJ bcs
      	ON
           bec.group_id = bcs.group_id
           AND bec.hos_id = bcs.hos_id
           AND bec.copy_code = bcs.copy_code
           AND bec.budg_year = bcs.budg_year
           AND bec.subj_code = bcs.subj_code
        WHERE
		    bec.group_id = #{group_id}
		    AND bec.hos_id = #{hos_id}
		    AND bec.copy_code = #{copy_code}
		    AND bec.budg_year = #{year}
		    AND bec.month = #{month}
	</select>
	
	<!-- 结转时SQL:批量修改上月结转值或批量修改下月结转值 -->
	<update id="updateBatchBudgElseCostValue" parameterType="java.util.List">
		 <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_ELSE_COST 
			SET
				<trim suffixOverrides=",">
					<!-- 修改上月结转 --> 
					<if test="item.last_month_carried != null">
						last_month_carried = #{item.last_month_carried},
					</if>
					
					<!-- 修改结转下月 -->
					<if test="item.carried_next_month != null">
						carried_next_month = #{item.carried_next_month},
					</if>
				</trim>
			WHERE
				group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
				AND budg_year = #{item.budg_year}
				AND month = #{item.month}
				
				<if test="item.subj_code != null and item.subj_code != ''">
					AND subj_code = #{item.subj_code}
				</if>
		</foreach>
	</update>
	
	<select id="queryElseCostReport" parameterType="java.util.Map" resultMap="budgElseIcomeMap" >
		with budgData as ( <!-- 预算值 -->
			select bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year,bec.subj_code, asj_e.subj_name, 
	        	asj_e.subj_level , '预算值' as summary, 2 as seq, 
	        	sum(case when MONTH = '01' then nvl(BUDG_VALUE, 0) else 0 end) as month_data1, 
	        	sum(case when MONTH = '02' then nvl(BUDG_VALUE, 0) else 0 end) as month_data2, 
	        	sum(case when MONTH = '03' then nvl(BUDG_VALUE, 0) else 0 end) as month_data3, 
	        	sum(case when MONTH = '04' then nvl(BUDG_VALUE, 0) else 0 end) as month_data4, 
	        	sum(case when MONTH = '05' then nvl(BUDG_VALUE, 0) else 0 end) as month_data5, 
	        	sum(case when MONTH = '06' then nvl(BUDG_VALUE, 0) else 0 end) as month_data6, 
	        	sum(case when MONTH = '07' then nvl(BUDG_VALUE, 0) else 0 end) as month_data7, 
	        	sum(case when MONTH = '08' then nvl(BUDG_VALUE, 0) else 0 end) as month_data8, 
	        	sum(case when MONTH = '09' then nvl(BUDG_VALUE, 0) else 0 end) as month_data9, 
	        	sum(case when MONTH = '10' then nvl(BUDG_VALUE, 0) else 0 end) as month_data10, 
	        	sum(case when MONTH = '11' then nvl(BUDG_VALUE, 0) else 0 end) as month_data11, 
	        	sum(case when MONTH = '12' then nvl(BUDG_VALUE, 0) else 0 end) as month_data12, 
	        	sum(nvl(BUDG_VALUE, 0)) as year_sum
	        from BUDG_ELSE_COST bec
	        left join budg_cost_subj asj_e 
	        	on 
		        	bec.group_id = asj_e.group_id
			        and bec.hos_id = asj_e.hos_id
			        and bec.copy_code = asj_e.copy_code
			        and bec.budg_year = asj_e.budg_year 
			        and bec.subj_code = asj_e.subj_code
	        where bec.group_id = #{group_id,jdbcType=INTEGER}
	          and bec.hos_id = #{hos_id,jdbcType=INTEGER}
	          and bec.copy_code = #{copy_code,jdbcType=VARCHAR}
	          and bec.budg_year = #{budg_year,jdbcType=VARCHAR}
	        group by bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year, bec.subj_code, asj_e.subj_name, asj_e.subj_level
		),
		detailData as (<!-- 表格内展示数据  已筛选排序  可直接展示 -->
			select t.* from (
				SELECT bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year,bec.subj_code, asj_e.subj_name, 
					asj_e.subj_level, '上月结转' as summary, 1 as seq, 
					sum(case when MONTH = '01' then nvl(last_month_carried, 0) else 0 end) as month_data1, 
					sum(case when MONTH = '02' then nvl(last_month_carried, 0) else 0 end) as month_data2, 
					sum(case when MONTH = '03' then nvl(last_month_carried, 0) else 0 end) as month_data3, 
					sum(case when MONTH = '04' then nvl(last_month_carried, 0) else 0 end) as month_data4, 
					sum(case when MONTH = '05' then nvl(last_month_carried, 0) else 0 end) as month_data5, 
					sum(case when MONTH = '06' then nvl(last_month_carried, 0) else 0 end) as month_data6, 
					sum(case when MONTH = '07' then nvl(last_month_carried, 0) else 0 end) as month_data7, 
					sum(case when MONTH = '08' then nvl(last_month_carried, 0) else 0 end) as month_data8, 
					sum(case when MONTH = '09' then nvl(last_month_carried, 0) else 0 end) as month_data9, 
					sum(case when MONTH = '10' then nvl(last_month_carried, 0) else 0 end) as month_data10, 
					sum(case when MONTH = '11' then nvl(last_month_carried, 0) else 0 end) as month_data11, 
					sum(case when MONTH = '12' then nvl(last_month_carried, 0) else 0 end) as month_data12, 
					sum(nvl(last_month_carried, 0)) as year_sum
	        from BUDG_ELSE_COST bec
	        left join budg_cost_subj asj_e 
	        	on 
		        	bec.group_id = asj_e.group_id
			        and bec.hos_id = asj_e.hos_id
			        and bec.copy_code = asj_e.copy_code
			        and bec.subj_code = asj_e.subj_code
			        and bec.budg_year = asj_e.budg_year 
	        where bec.group_id = #{group_id,jdbcType=INTEGER}
	          and bec.hos_id = #{hos_id,jdbcType=INTEGER}
	          and bec.copy_code = #{copy_code,jdbcType=VARCHAR}
	          and bec.budg_year = #{budg_year,jdbcType=VARCHAR}
	        group by bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year, bec.subj_code, asj_e.subj_name, asj_e.subj_level
	       
		union all
	        select * from budgData
		union all
	        
	        select bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year,bec.subj_code, asj_e.subj_name, 
	        	asj_e.subj_level , '结转下月' as summary, 3 as seq, 
	        	sum(case when MONTH = '01' then nvl(carried_next_month, 0) else 0 end) as month_data1, 
	        	sum(case when MONTH = '02' then nvl(carried_next_month, 0) else 0 end) as month_data2, 
	        	sum(case when MONTH = '03' then nvl(carried_next_month, 0) else 0 end) as month_data3, 
	        	sum(case when MONTH = '04' then nvl(carried_next_month, 0) else 0 end) as month_data4, 
	        	sum(case when MONTH = '05' then nvl(carried_next_month, 0) else 0 end) as month_data5, 
	        	sum(case when MONTH = '06' then nvl(carried_next_month, 0) else 0 end) as month_data6, 
	        	sum(case when MONTH = '07' then nvl(carried_next_month, 0) else 0 end) as month_data7, 
	        	sum(case when MONTH = '08' then nvl(carried_next_month, 0) else 0 end) as month_data8, 
	        	sum(case when MONTH = '09' then nvl(carried_next_month, 0) else 0 end) as month_data9, 
	        	sum(case when MONTH = '10' then nvl(carried_next_month, 0) else 0 end) as month_data10, 
	        	sum(case when MONTH = '11' then nvl(carried_next_month, 0) else 0 end) as month_data11, 
	        	sum(case when MONTH = '12' then nvl(carried_next_month, 0) else 0 end) as month_data12,
	        	sum(nvl(carried_next_month, 0)) as year_sum
	        from BUDG_ELSE_COST bec
	        left join budg_cost_subj asj_e 
		        on 
		        	bec.group_id = asj_e.group_id
			        and bec.hos_id = asj_e.hos_id
			        and bec.copy_code = asj_e.copy_code
			        and bec.budg_year = asj_e.budg_year
			        and bec.subj_code = asj_e.subj_code
	        where bec.group_id = #{group_id,jdbcType=INTEGER}
	          and bec.hos_id = #{hos_id,jdbcType=INTEGER}
	          and bec.copy_code = #{copy_code,jdbcType=VARCHAR}
	          and bec.budg_year = #{budg_year,jdbcType=VARCHAR}
	        group by bec.group_id, bec.hos_id, bec.copy_code, bec.budg_year, bec.subj_code, asj_e.subj_name, asj_e.subj_level
		      
		    ) t
		  WHERE                     
			group_id = #{group_id,jdbcType=INTEGER}
			
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="budg_year != null and budg_year != ''">
			AND budg_year = #{budg_year,jdbcType=VARCHAR}
			</if>
			<if test="subj_code != null and subj_code != ''">
			AND subj_code = #{subj_code,jdbcType=VARCHAR}
			</if>
			<if test="subj_level != null and subj_level != ''">
			AND subj_level = #{subj_level,jdbcType=INTEGER}
			</if>
	      order by group_id,hos_id,copy_code, budg_year,subj_code,seq
		)
		
		select null group_id, null hos_id, null copy_code,  null budg_year, null subj_code, null subj_name, 
				null subj_level, '预算值合计' summary,  null seq,  
				sum(month_data1) month_data1 , sum(month_data2) month_data2 , sum(month_data3) month_data3 ,
				sum(month_data4) month_data4 , sum(month_data5) month_data5 , sum(month_data6) month_data6 ,
				sum(month_data7) month_data7 , sum(month_data8) month_data8 , sum(month_data9) month_data9 ,
				sum(month_data10) month_data10 , sum(month_data11) month_data11 , sum(month_data12) month_data12 ,
				sum(year_sum) year_sum
			from budgData
			group by  group_id,hos_id,copy_code, budg_year
		union all 
		
			select * from detailData 
	</select>
</mapper>

