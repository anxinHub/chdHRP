<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.eqc.dao.xymanage.AssEqPublicConsumLiquidateMapper">
	
	<resultMap id="assEqPublicConsumLiquidate" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="month_name" column="month_name"/>
	<result property="consum_code" column="consum_code"/>
	<result property="consum_desc" column="consum_desc"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="liquid_date" column="liquid_date"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="price" column="price"/>
	<result property="quantity_type" column="quantity_type"/>
	<result property="quantity_type_name" column="quantity_type_name"/>
	<result property="quantity" column="quantity"/>
	<result property="amount" column="amount"/>
	<result property="invalid_flag" column="invalid_flag"/>
	<result property="remark" column="remark"/>
	</resultMap>

	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_PUBLIC_CONSUM_LIQUIDATE     (
			group_id    ,
			hos_id      ,
			copy_code   ,
			year       ,
			month      ,
			consum_code     ,
			dept_code   ,
			liquid_date    ,
			unit_code      ,
			price      ,
			quantity_type  ,
			quantity      ,
			amount        ,
			invalid_flag   ,
			remark      
		
		) VALUES (
			#{group_id}		,
			#{hos_id}		,
			#{copy_code}		,
			#{year}       ,
			#{month}      ,
			#{consum_code}     ,
			#{dept_code}   ,
			#{liquid_date}    ,
			<!--  #{pci_starttime}  ,-->  //20200414
			#{unit_code}      ,
			#{price}      ,
			#{quantity_type}  ,
			#{quantity}      ,
			#{amount}        ,
			#{invalid_flag}   ,
			#{remark}         
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_PUBLIC_CONSUM_LIQUIDATE     (
			group_id    ,
			hos_id      ,
			copy_code   ,
			year       ,
			month      ,
			consum_code     ,
			dept_code   ,
			liquid_date    ,
			unit_code      ,
			price      ,
			quantity_type  ,
			quantity      ,
			amount        ,
			invalid_flag   ,
			remark      
			
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id}		,
				#{item.hos_id}		,
				#{item.copy_code}		,
				#{item.year}       ,
				#{item.month}      ,
				#{item.consum_code}     ,
				#{item.dept_code}   ,
				#{item.liquid_date}    ,
				#{item.unit_code}      ,
				#{item.price}      ,
				#{item.quantity_type}  ,
				#{item.quantity}      ,
				#{item.amount}        ,
				#{item.invalid_flag}   ,
				#{item.remark}        		
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ASS_PUBLIC_CONSUM_LIQUIDATE     SET
		
			liquid_date = #{liquid_date}  ,
			unit_code = #{unit_code}    ,
			price = #{price}    ,
			quantity_type = #{quantity_type}  ,
			quantity = #{quantity}     ,
			amount = #{amount}       ,
			year = #{year}       ,
			month = #{month}     ,
			invalid_flag = #{invalid_flag}  ,
			remark = #{remark}      
		
		WHERE 
				group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and year = #{year}	
			and month = #{month}
			and consum_code = #{consum_code}	
			and dept_code = #{dept_code}
	
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_PUBLIC_CONSUM_LIQUIDATE     SET
			
				liquid_date = #{item.liquid_date}  ,
				unit_code = #{item.unit_code}    ,
				price = #{item.price}    ,
				quantity_type = #{item.quantity_type}  ,
				quantity = #{item.quantity}     ,
				amount = #{item.amount}       ,
				year = #{item.year}       ,
				month = #{item.month}     ,
				invalid_flag = #{item.invalid_flag}  ,
				remark = #{item.remark}      
			
			WHERE 
					group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and year = #{item.year}	
				and month = #{item.month}
				and consum_code = #{item.consum_code}	
				and dept_code = #{item.dept_code}
			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ASS_PUBLIC_CONSUM_LIQUIDATE     
		WHERE
				group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and year = #{year}	
			and month = #{month}
			and consum_code = #{consum_code}	
			and dept_code = #{dept_code}
	
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ASS_PUBLIC_CONSUM_LIQUIDATE     WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
					group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and year = #{item.year}	
				and month = #{item.month}
				and consum_code = #{item.consum_code}	
				and dept_code = #{item.dept_code}
			</foreach>
	
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assEqPublicConsumLiquidate" >
	
		SELECT 
			a.group_id    ,
			a.hos_id      ,
			a.copy_code   ,
			a.year       ,
			a.month      ,
			a.month ||'月' month_name  ,
			a.consum_code     ,
			b.consum_desc ,
			a.dept_code   ,
			c.dept_name   ,
			a.liquid_date    ,
			a.unit_code      ,
			d.unit_name ,
			a.price      ,
			a.quantity_type  ,
			case a.quantity_type when '1' then '绝对量' 
				when '2' then '相对量' else '相对量已计算绝对量' 
				end  quantity_type_name ,
			a.quantity      ,
			a.amount        ,
			a.invalid_flag   ,
			a.remark      
		FROM ASS_PUBLIC_CONSUM_LIQUIDATE     a
		left join ASS_EQ_CONSUMABLE_ITEM b
			on  a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.consum_code = b.consum_code
		left join HOS_DEPT_DICT c
			on  a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.dept_code = c.dept_id ||','||c.dept_no
		left join HOS_UNIT d
			on  a.group_id = d.group_id
			and a.hos_id = d.hos_id
			and a.unit_code = d.unit_code
		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			<if test="year != null and year != ''">
			AND a.year = #{year}
			</if>
			<if test="month != null and month != ''">
			AND a.month = #{month}
			</if>
			<if test="consum_code != null and consum_code != ''">
			AND a.consum_code = #{consum_code}
			</if>
			<if test="dept_code != null and dept_code != ''">
			AND a.dept_code = #{dept_code}
			</if>
		order by a.consum_code asc
	</select>
	<select id="queryByCode" resultMap="assEqPublicConsumLiquidate" parameterType="string" >
	
		SELECT 
			group_id    ,
			hos_id      ,
			copy_code   ,
			year       ,
			month      ,
			consum_code     ,
			dept_code   ,
			liquid_date    ,
			unit_code      ,
			price      ,
			quantity_type  ,
			quantity      ,
			amount        ,
			invalid_flag   ,
			remark      
		FROM ASS_PUBLIC_CONSUM_LIQUIDATE     
		WHERE 
				group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			and year = #{year}	
			and month = #{month}
			and consum_code = #{consum_code}	
			and dept_code = #{dept_code}
	
	</select>
	
	<!-- 查询添加数据是否已存在 -->
	<select id="queryDataExist" resultType="java.lang.String">
		<foreach collection="list" item="item" index="index" separator=" union all " >
			SELECT to_number(${item.rowNo})+ 1 rowNo
			FROM ASS_PUBLIC_CONSUM_LIQUIDATE    
			where
					group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and year = #{item.year}	
				and month = #{item.month}
				and consum_code = #{item.consum_code}	
				and dept_code = #{item.dept_code}
		</foreach>
	</select>

</mapper>

