<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="com.chd.hrp.ass.dao.repair.repreportcentre.AssRepReportCentreMapper">

	<select id="queryAssRepReportCentreCenter" parameterType="java.util.Map"
		resultType="java.util.Map">
		with bdf_h as (
		select a.rep_code,(ceil((sysdate-a.send_time ) * 24)-s.bdf_hour) as hours
		from ass_repair a
		left join ASS_REPAIR_STATUS s on a.eme_status = s.status_id 
		where a.state=2
		)
		select ar.group_id,
		ar.hos_id,
		ar.copy_code,
		ar.rep_code,
		ar.fau_code,
		aft.fau_name,
		ar.loc_code,
		al.loc_name,
		case ar.eme_status
		when 1 then
		'非常紧急'
		when 2 then
		'紧急'
		when 3 then
		'一般'
		end as eme_status,
		ar.rep_user,
		su.user_name,
		ar.rep_dept,
		hd.dept_name,
		ar.phone,
		ar.fau_note,
		to_char(ar.app_time,'yyyy-mm-dd hh24:mi:ss') as app_time,
		case ar.rep_bz when 1 then '内部维修' when 2 then '外部维修' end as rep_bz,
		case ar.is_base
		when 1 then
		'是'
		when 0 then
		'否'
		end as is_base,
		case ar.is_card
		when 1 then
		'是'
		when 0 then
		'否'
		end as is_card,
		ar.rep_comp,
		ar.rep_comp_user,
		ar.ass_card_no,
		ar.ass_name,
		ar.rep_note,
		to_char(ar.order_time,'yyyy-mm-dd hh24:mi:ss') as order_time,
		to_char(ar.comp_time,'yyyy-mm-dd hh24:mi:ss') as comp_time,
		to_char(ar.send_time, 'yyyy-mm-dd hh24:mi:ss') as send_time,
		ar.rep_hours,
		case ar.is_urg
		when 0 then
		'否'
		when 1 then
		'是'
		end as is_urg,
		ar.urg_note,
		bsd.value_name state,
		ar.voice,
		case ar.flag
		when 1 then
		'PC端'
		when 2 then
		'移动端'
		end flag,
		ar.mark,
		ar.score,
		ar.score_note, h.hours 
		from ass_repair ar
		left join sys_user su
		on ar.group_id = su.group_id
		and ar.hos_id = su.hos_id
		and ar.copy_code = su.copy_code
		and ar.rep_user = su.user_id
		left join hos_dept hd
		on ar.group_id = hd.group_id
		and ar.hos_id = hd.hos_id
		and ar.rep_dept = hd.dept_id
		and hd.is_stop = 0
		left join ass_location al
		on ar.group_id = al.group_id
		and ar.hos_id = al.hos_id
		and ar.copy_code = al.copy_code
		and ar.loc_code = al.loc_code
		and al.is_stop = 0
		left join ass_fault_type aft
		on ar.group_id = aft.group_id
		and ar.hos_id = aft.hos_id
		and ar.copy_code = aft.copy_code
		and ar.fau_code = aft.fau_code
		left join budg_sys_dict bsd
          on ar.state = bsd.value_code
         and bsd.F_CODE = 'ASS_REPAIR_STATE'
        left join bdf_h h on ar.rep_code=h.rep_code
		where ar.group_id = #{group_id}
		and ar.hos_id = #{hos_id}
		and ar.copy_code = #{copy_code}
		<if test="rep_code != null and rep_code != '' ">
			and ar.rep_code like '%${rep_code}%'
		</if>
		<if test="app_time_begin != null and app_time_begin != '' ">
			and ar.app_time between to_date('${app_time_begin} 00:00:00','yyyy-mm-dd
			hh24:mi:ss')
			and to_date('${app_time_end} 23:59:59','yyyy-mm-dd hh24:mi:ss')
		</if>
		<if test="state != null and state != '' ">
			and ar.state = #{state}
		</if>
		<if test="eme_status != null and eme_status != '' ">
			and ar.eme_status = #{eme_status}
		</if>
		<if test="rep_dept != null and rep_dept != '' ">
			and ar.rep_dept = #{rep_dept}
		</if>
		<if test="fau_note != null and fau_note != '' ">
			and ar.fau_note like '%${fau_note}%'
		</if>
		<if test="fau_code != null and fau_code != '' ">
			and ar.fau_code = #{fau_code}
		</if>
		<if test="ass_card_no != null and ass_card_no != '' ">
			and ar.ass_card_no = #{ass_card_no}
		</if>
	</select>

 	<select id="queryTimeLineRender"  resultType="java.util.Map" parameterType="java.util.Map">
 		select    to_char(a.task_time,'yyyy-mm-dd hh24:mi:ss') as "task_time",
		          b.user_name as "user_name",
		          bsd.value_name as "state_name",      
				      d.rep_team_name as "team_name",
				      c.phone1 as "phone1",
		          c.phone2 as "phone2"
		      from ass_repair_task a
		      left join sys_user b 
		      on a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.task_user = b.user_id
		      left join ass_repair_user c
		       on a.group_id = c.group_id
		      and a.hos_id = c.hos_id
		      and a.copy_code = c.copy_code
		      and a.task_user = c.rep_user
		      left join ASS_REPAIR_TEAM_DICT d
		      on c.group_id = d.group_id
		       and c.hos_id = d.hos_id
		       and c.rep_team_code = d.rep_team_code
		       left join budg_sys_dict bsd
	          on a.state = bsd.value_code
	         and bsd.F_CODE = 'ASS_REPAIR_STATE'
		   where a.group_id =  #{group_id}
		   and a.hos_id =  #{hos_id}
		   and a.copy_code =  #{copy_code}
		   and a.rep_code =  #{rep_code}
		     order by a.task_time desc
 	</select>

	<select id="queryAssRepairByCode" resultType="java.util.Map" parameterType="java.util.Map">
		select a.group_id,
		       a.hos_id,
		       a.copy_code,
		       a.rep_code,
		       a.fau_code,
		       a.loc_code,
		       a.eme_status,
		       a.rep_user,
		       a.rep_dept||'@'||b.dept_no as rep_dept,
		       a.phone,
		       a.fau_note,
		       a.app_time,
		       a.rep_bz,
		       a.is_base,
		       a.is_card,
		       a.rep_comp,
		       a.rep_comp_user,
		       a.ass_card_no,
		       a.ass_name,
		       a.rep_note,
		       a.order_time,
		       a.comp_time,
		       a.rep_hours,
		       a.is_urg,
		       a.urg_note,
		       a.state,
		       a.voice,
		       a.flag,
		       a.score,
		       a.score_note,
		       a.seq_no
		  from ass_repair a
  	left join HOS_DEPT_DICT b 
  	 on a.group_id = b.group_id
  	 and a.hos_id = b.hos_id
  	 and a.rep_dept = b.dept_id
  	 and b.is_stop=0
		 where a.group_id = #{group_id}
		   and a.hos_id = #{hos_id}
		   and a.copy_code = #{copy_code}
		   and a.rep_code = #{rep_code}
	</select>

	<select id="queryMaxNo" resultType="String" parameterType="java.util.Map">
		select max(rep_code)+1
		from ass_repair c
		where c.group_id=#{group_id} and c.hos_id=#{hos_id} and c.copy_code=#{copy_code} 
		and c.app_time BETWEEN
		to_date('${app_time} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and
		to_date('${app_time} 23:59:59', 'yyyy-mm-dd hh24:mi:ss')



	</select>
	<!-- 卡片明细页查询SQL -->
	<select id="queryCardDataByCode" parameterType="java.util.Map" resultType="java.util.Map">
		select  vc.ASS_CARD_NO,
				an.ass_name,
				hf.fac_name,
				hsd.sup_name,
				vc.ass_spec,
				vc.ass_brand,
				hf.fac_name,
				hsd.sup_name,
				acd.contract_no,
				to_char(aam.accept_date,'yyyy-MM-dd') accept_date,
				hed.emp_name,
				to_char(vc.run_date,'yyyy-MM-dd') run_date,
				an.usage_code,
				en.equi_usage_name,
				hdd.dept_name,
				vc.ass_seq_no
			from v_ass_card vc
			left join ass_no_dict an
				on an.group_id = vc.group_id
				and an.hos_id = vc.hos_id
				and an.ass_id = vc.ass_id
			 left join ASS_USAGE_DICT en
			      on en.group_id = an.group_id
			      and en.hos_id = an.hos_id
			      and en.copy_code = an.copy_code
			      and en.equi_usage_code = an.usage_code
			      and en.is_stop = 0 	
			left join hos_fac_dict hf
				on hf.group_id = vc.group_id
				and hf.hos_id = vc.hos_id
				and hf.fac_id = vc.fac_id
				and hf.fac_no = vc.fac_no
			left join hos_sup_dict hsd
				on hsd.group_id = vc.group_id
				and hsd.hos_id = vc.hos_id
				and hsd.sup_id = vc.ven_id
				and hsd.sup_no = vc.ven_no
			left join ass_contract_detail acd
				on acd.group_id = vc.group_id
				and acd.hos_id = vc.hos_id
				and acd.copy_code = vc.copy_code
				and acd.ass_id = vc.ass_id
			left join ass_accept_main aam
				on acd.group_id = aam.group_id
				and acd.hos_id = aam.hos_id
				and acd.copy_code = aam.copy_code
				and acd.contract_id = aam.contract_id
			left join hos_emp_dict hed
				on hed.group_id = aam.group_id
				and hed.hos_id = aam.hos_id
				and hed.emp_id = aam.accept_emp
				and hed.is_stop = 0
			left join hos_dept_dict hdd
				on hdd.group_id = vc.group_id
				and hdd.hos_id = vc.hos_id
				and hdd.dept_id = vc.dept_id
				and hdd.dept_no = vc.dept_no
			where vc.group_id = #{group_id}
				and vc.hos_id = #{hos_id}
				and vc.copy_code = #{copy_code}
				and vc.ass_card_no = #{ass_card_no}
				order by vc.ass_card_no
	</select>
	
	
	 
	
	<select id="queryAssRepUserType" resultType="String" parameterType="java.util.Map">
		select  user_id 
		  from ass_rep_user_type
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}
		   and ass_type_id = (
		   select b.ass_type_id from v_ass_card a
				left join ass_no_dict b
				on a.group_id= b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.ass_id = b.ass_id
				and a.ass_no = b.ass_no
			  where a.group_id= #{group_id}
				and a.hos_id =  #{hos_id}
				and a.copy_code =  #{copy_code}
				and a.ass_card_no = #{ass_card_no}
		   )
	</select>

	 
	 
	<insert id="addAssRepairTask" parameterType="java.util.Map">
		 insert into ass_repair_task
				   (group_id,
				    hos_id,
				    copy_code,
				    rep_code,
				    task_id,
				    task_user,
				    task_time,
				    state
				    )
				 values
				   (#{group_id},
				    #{hos_id},
				    #{copy_code},
				    ${rep_code},
				    #{task_id},
				    #{task_user},
				    sysdate,
				    #{state}
				    )
		
	</insert>
	
	<update id="updateUserWorkByUserId" parameterType="java.util.Map">
	
		  update ass_rep_user_work
		    set 
		        u_work = u_work+1
		  where group_id = #{group_id}
		    and hos_id = #{hos_id}
		    and copy_code = #{copy_code}
		    and user_id = #{task_user}
	</update>
	
	<insert id="addUserWorkByUserId" parameterType="java.util.Map">
		insert into ass_rep_user_work(group_id,hos_id,copy_code,user_id,u_work)
		values(#{group_id},#{hos_id},#{copy_code},#{task_user},1)
	</insert>
	
	<select id="queryAssRepReportCentreByCode" parameterType="java.util.Map"
		resultType="java.util.Map">
		select ar.group_id,
		        ar.hos_id,
		        ar.copy_code,
		        ar.rep_code,
		        ar.fau_code,
		        ar.loc_code,
		        ar.eme_status,
		        ar.rep_user,
		        ar.rep_dept||'@'||hd.dept_no as rep_dept,
		        ar.phone,
		        ar.fau_note,
		        ar.app_time,
		        ar.ass_card_no,
		        ar.ass_name,
		        ar.state,
		        ara.att_path,
		        ara.att_name_n,
		        ara.att_name_o
		   from ass_repair ar
		    left join  hos_dept_dict hd
		    on ar.group_id = hd.group_id
		    and ar.hos_id = hd.hos_id
		    and ar.rep_dept = hd.dept_id
	        left join ass_repair_att ara
		     on ar.group_id = ara.group_id
		    and ar.hos_id = ara.hos_id
		    and ar.copy_code = ara.copy_code
		    and ar.rep_code = ara.rep_code
		  where ar.group_id = #{group_id}
		    and ar.hos_id = #{hos_id}
		    and ar.copy_code = #{copy_code}
		    and ar.rep_code = #{rep_code}
	</select>
	<insert id="addassRepairAtt" parameterType="java.util.Map">
		insert into ass_repair_att
		(group_id,
		hos_id,
		copy_code,
		rep_code,
		att_name_n,
		att_name_o,
		att_path,
		att_size,
		create_user,
		create_date)
		values
		(#{group_id},
		#{hos_id},
		#{copy_code},
		#{rep_code},
		#{att_name_n},
		#{att_name_o},
		#{att_path},
		#{att_size},
		#{create_user},
		to_date(#{create_date},'yyyy-MM-dd hh24:mi:ss')
		)

	</insert>
	<insert id="addAssRepReportCentre" parameterType="java.util.Map">
		insert into ass_repair
		(group_id,
		hos_id,
		copy_code,
		rep_code,
		fau_code,
		loc_code,
		eme_status,
		rep_user,
		rep_dept,
		phone,
		fau_note,
		app_time,
		is_base,
		is_card,
		IS_ANY,
		SEQ_NO,
		<if test="ass_name != '' and  ass_name != null">
			ass_card_no,
			ass_name,
		</if>
		is_urg,
		state,
		flag)
		values
		(#{group_id},
		#{hos_id},
		#{copy_code},
		#{rep_code},
		#{fau_code},
		#{loc_code},
		#{eme_status},
		#{rep_user},
		#{rep_dept},
		#{phone},
		#{fau_note},
		sysdate,
		0,
		#{is_card},
		0,
		#{seq_no},
		<if test="ass_name != '' and  ass_name != null">
			#{ass_card_no},
			#{ass_name},
		</if>
		0,
		1,
		1
		)

	</insert>

	<update id="updateAssRepReportCentre" parameterType="java.util.Map">
		update ass_repair
		set
		fau_code = #{fau_code},
		loc_code = #{loc_code},
		eme_status = #{eme_status},
		rep_user = #{rep_user},
		rep_dept = #{rep_dept},
		phone = #{phone},
		fau_note = #{fau_note},
		is_card = #{is_card},
		seq_no = #{seq_no},
		ass_card_no = #{ass_card_no},
		ass_name = #{ass_name}
		where group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and rep_code = #{rep_code}

	</update>
	 

	<delete id="deleteassRepairAtt" parameterType="java.util.Map">
		delete ass_repair_att
		where group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and rep_code = #{rep_code}
		and att_name_n = #{old_name}
	</delete>

	<delete id="deleteAssRepReportCentreBatch" parameterType="java.util.Map">
		begin
		delete ass_repair_att
		where group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and
		rep_code = #{rep_code} ;
		delete ass_repair
		where group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and
		rep_code = #{rep_code} ;
		end;
	</delete>
	
	<select id="queryImgUrlByRepCode" parameterType="java.util.Map" resultType="java.util.Map">
		select  ara.att_path,
				ara.att_name_n
			from ass_repair_att ara
			where ara.group_id = #{group_id}
				and ara.hos_id = #{hos_id}
				and ara.copy_code = #{copy_code}
				and ara.rep_code = #{rep_code}
	</select>
	
	<!-- 检查单据发送状态 -->
	<select id="existsAssRepairSend" parameterType="java.util.Map" resultType="String">
		select  rep_code
			from ass_repair
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and state!=1
				and rep_code in(${rep_code})
	</select>
	
	<!-- 查询卡片对应关系的user_id -->
	<select id="queryAssRepairUserCardSend" parameterType="java.util.Map" resultType="String">
		select  user_id
			from ASS_REP_USER_CARD  
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}						
				and ass_card_no in(
					select ass_card_no from ass_repair
					where group_id = #{group_id}
					and hos_id = #{hos_id}
					and copy_code = #{copy_code}	
					and rep_code = ${rep_code_cur}
				)
	</select>
	
	
	<!-- 查询资产分类对应关系的user_id -->
	<select id="queryAssRepairUserTypeSend" parameterType="java.util.Map" resultType="String">
		select  user_id 
		  from ass_rep_user_type
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}
		   and ass_type_id in (
		   		select b.ass_type_id from v_ass_card a
				left join ass_no_dict b
				on a.group_id= b.group_id
				and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code
				and a.ass_id = b.ass_id
				and a.ass_no = b.ass_no
			  where a.group_id= #{group_id}
				and a.hos_id =  #{hos_id}
				and a.copy_code =  #{copy_code}
				and a.ass_card_no in(
					select ass_card_no from ass_repair
					where group_id = #{group_id}
					and hos_id = #{hos_id}
					and copy_code = #{copy_code}	
					and rep_code = ${rep_code_cur}
				)
		   )
	</select>
	
	
	<!-- 查询故障分类对应关系的user_id -->
	<select id="queryAssRepairUserFaultSend" parameterType="java.util.Map" resultType="String">
		select  user_id
			from ASS_REP_USER_FAULT  
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}						
				and fau_code in(
					select fau_code from ass_repair
					where group_id = #{group_id}
					and hos_id = #{hos_id}
					and copy_code = #{copy_code}	
					and rep_code = ${rep_code_cur}
				)
	</select>
	
	<!-- 根据用户对应关系查询是否上班 -->
	<select id="queryWorkUserByDateSend" resultType="String" parameterType="java.util.Map">
		 select rep_user
		   from ass_repair_sche 
		   where  group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
		    and acc_year = #{acc_year}
		    and acc_month = #{acc_month}
	        and ${day} = 1
		    and rep_user in(${user_id_ral})
		    order by sort_code
		    	
	</select>
	
	
 
	
	<!-- 根据用户对应关系查询工作量最小的用户 -->
	<select id="queryUserWorkMinSend" parameterType="java.util.Map" resultType="String">
		 
		 select user_id from ( 		 
			 select user_id
			   from ass_rep_user_work a		  
			  	where a.group_id = #{group_id}
			    and a.hos_id =  #{hos_id}
			    and a.copy_code =  #{copy_code}
			    <if test="user_id_ral!=null and user_id_ral!=''">
			     	and a.user_id in (${user_id_ral})
			    </if>			   
			    order by a.u_work
			)
		    where rownum=1
	</select>
	
	
	<!--  更新单据发送状态 -->
	<update id="updateAssRepairSend" parameterType="java.util.Map" >
		update  ass_repair set state=2,send_time=sysdate			
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}				
				and rep_code in (${rep_code})
	</update>
	<!-- 催单时检查单据状态 -->
	<select id="existsAssRepairState" parameterType="java.util.Map" resultType="String">
			select  rep_code
			from ass_repair
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and state not in (2,3)
				and rep_code = #{rep_code}
	</select>
	<!-- 催单时检查单据状态 -->
	<select id="existsAssRepairUrgState" parameterType="java.util.Map" resultType="String">
			select  rep_code
			from ass_repair
			where group_id = #{group_id}
				and hos_id = #{hos_id}
				and copy_code = #{copy_code}
				and is_urg != 0
				and rep_code = #{rep_code}
	</select>
	<!-- 催单 -->
	<update id="cuiAssRepirByRepCode">
		 update ass_repair
		    set is_urg = #{is_urg},
		        urg_note = #{urg_note}
		  where group_id = #{group_id}
		    and hos_id = #{hos_id}
		    and copy_code = #{copy_code}
		    and rep_code = #{rep_code}
	</update>
		<select id="queryRepairState" resultType="String" parameterType="java.util.Map">
		select rep_code,
		       is_any,
		       score,
		       state,
		       score_note
		  from ass_repair
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}  
		   and rep_code =  #{rep_code}
		   and state !=5
	</select>
	<select id="queryRepairExistsScore" resultType="String" parameterType="java.util.Map">
		select rep_code,
		       is_any,
		       score,
		       state,
		       score_note
		  from ass_repair
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}  
		   and rep_code =  #{rep_code}
		   and  score is not null 
	</select>
	<select id="queryAssRepairCenterPrint" parameterType="java.util.Map" resultType="java.util.Map"> 
	
		select ar.group_id,
			    ar.hos_id,
			    ar.copy_code,
			    ar.rep_code id,
			    ar.rep_code,
			    aft.fau_name fau_code,
			    al.loc_name loc_code,
			    case ar.eme_status
			    when 1 then
			    '非常紧急'
			    when 2 then
			    '紧急'
			    when 3 then
			    '一般'
			    end as eme_status,
			    su.user_name rep_user,
			    hd.dept_name rep_dept,
			    ar.phone,
			    ar.fau_note,
			    to_char(ar.app_time,'yyyy-mm-dd hh24:mi:ss') as app_time,
			    case  ar.rep_bz  when 1 then '内部维修' when 2 then '外部维修' end as rep_bz,
			    case ar.is_base
			    when 1 then
			    '是'
			    when 0 then
			    '否'
			    end as is_base,
			    case ar.is_card
			    when 1 then
			    '是'
			    when 0 then
			    '否'
			    end as is_card,
			    ar.rep_comp,
			    ar.rep_comp_user,
			    ar.ass_card_no,
			    ar.ass_name,
			    ar.rep_note,
			    to_char(ar.order_time,'yyyy-mm-dd hh24:mi:ss') as order_time,
			    to_char(ar.comp_time,'yyyy-mm-dd hh24:mi:ss') as comp_time,
			    ar.rep_hours,
			    case ar.is_urg
			    when 0 then
			    '否'
			    when 1 then
			    '是'
			    end as is_urg,
			    ar.urg_note,
			    (select bsd.value_name from 
			         (select rep_code, task_id, state from ass_repair_task
			          order by task_time desc
			          ) tmp 
			           left join budg_sys_dict bsd
			          on tmp.state = bsd.value_code
			         and bsd.F_CODE = 'ASS_REPAIR_STATE'
			         where tmp.rep_code = ar.rep_code
			            and rownum = 1 
			       ) as state,
			    ar.voice,
			    case ar.flag
			    when 1 then
			    'PC端'
			    when 2 then
			    '移动端'
			    end flag,
			    du.user_name task_name
			    from ass_repair ar
			    left join sys_user su
			    on ar.group_id = su.group_id
			    and ar.hos_id = su.hos_id
			    and ar.copy_code = su.copy_code
			    and ar.rep_user = su.user_id
			    left join hos_dept hd
			    on ar.group_id = hd.group_id
			    and ar.hos_id = hd.hos_id
			    and ar.rep_dept = hd.dept_id
			    and hd.is_stop = 0
			    left join ass_location al
			    on ar.group_id = al.group_id
			    and ar.hos_id = al.hos_id
			    and ar.copy_code = al.copy_code
			    and ar.loc_code = al.loc_code
			    and al.is_stop = 0
			    left join ass_fault_type aft
			    on ar.group_id = aft.group_id
			    and ar.hos_id = aft.hos_id
			    and ar.copy_code = aft.copy_code
			    and ar.fau_code = aft.fau_code
			    left join budg_sys_dict  bsd
			    on ar.state = bsd.value_code
			    and bsd.F_CODE='ASS_REPAIR_STATE'
			      left join (select rep_code ,state,task_user,group_id,hos_id,copy_code  from (
			  select ROW_NUMBER() over(partition by rep_code order by task_time desc) as rn,
			         c.rep_code,
			         c.task_time,
			         c.state,
			         c.task_user,
			         c.group_id,
			         c.hos_id,
			         c.copy_code
			    from ass_repair_task c
			  )
			   where rn = 1) b on ar.rep_code = b.rep_code and b.state >= 3
			   and ar.group_id = b.group_id
			   and ar.hos_id = b.hos_id
			   and ar.copy_code = b.copy_code
			    left join sys_user du
			      on b.task_user = du.user_id
			      and b.group_id = du.group_id
			      and b.hos_id = du.hos_id
		
		where ar.group_id = #{group_id}
		and ar.hos_id = #{hos_id}
		and ar.copy_code = #{copy_code}
		and ar.state >1
		<if test="rep_code != null and rep_code != '' ">
			and ar.rep_code like '%${rep_code}%'
		</if>
		<if test="app_time_begin != null and app_time_begin != '' ">
			and ar.app_time between to_date('${app_time_begin} 00:00:00','yyyy-mm-dd
			hh24:mi:ss')
			and to_date('${app_time_end} 23:59:59','yyyy-mm-dd hh24:mi:ss')
		</if>
		<if test="eme_status != null and eme_status != '' "> 
			and ar.eme_status = #{eme_status}
		</if>
		<if test="rep_dept != null and rep_dept != '' ">
			and ar.rep_dept = #{rep_dept}
		</if>
		<if test="fau_note != null and fau_note != '' ">
			and ar.fau_note like '%${fau_note}%'
		</if>
		<if test="fau_code != null and fau_code != '' ">
			and ar.fau_code = #{fau_code}
		</if>
		<if test="rep_codes != null and rep_codes != '' ">
			and ar.rep_code in (${rep_codes})
		</if>
	</select>
	<update id="submitRepScore" parameterType="java.util.Map">
		 update  ass_repair
		 set
			   is_any = #{is_any},
		       score =#{score},
		       score_note = #{score_note}
		 where group_id = #{group_id}
		   and hos_id = #{hos_id}
		   and copy_code = #{copy_code}  
		   and rep_code =  #{rep_code}
	</update>
	
</mapper>

