<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.check.general.AssChkInMainGeneralMapper">
	
	<resultMap id="assChkInMainGeneral" type="com.chd.hrp.ass.entity.check.general.AssChkInMainGeneral">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="ass_purpose" column="ass_purpose"/>
	<result property="ass_purpose_name" column="ass_purpose_name"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="confirm_emp_name" column="confirm_emp_name"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	</resultMap>
		
	<resultMap id="assChkInMainGeneralMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="ass_purpose" column="ass_purpose"/>
	<result property="ass_purpose_name" column="ass_purpose_name"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	<result property="proj_code" column="proj_code"/>
	<result property="proj_name" column="proj_name"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="confirm_emp_name" column="confirm_emp_name"/>
	<result property="state_name" column="state_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_CHK_IN_MAIN_General (
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		store_id,
		store_no,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		<if test="in_date != null and in_date != ''">
		in_date,
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		confirm_emp,
		</if>
		state
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{ass_in_no,jdbcType=VARCHAR},
		#{store_id,jdbcType=INTEGER},
		#{store_no,jdbcType=INTEGER},
		#{dept_id,jdbcType=INTEGER},
		#{dept_no,jdbcType=INTEGER},
		#{ass_purpose,jdbcType=VARCHAR},
		#{proj_id,jdbcType=INTEGER},
		#{proj_no,jdbcType=INTEGER},
		#{in_money,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR},
		#{create_emp,jdbcType=INTEGER},
		to_date(#{create_date,jdbcType=DATE},'YYYY-MM-DD'),
		<if test="in_date != null and in_date != ''">
		to_date(#{in_date,jdbcType=DATE},'YYYY-MM-DD'),
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		#{confirm_emp,jdbcType=INTEGER},
		</if>
		#{state,jdbcType=INTEGER}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_CHK_IN_MAIN_General (
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_in_no
		,
		store_id
		,
		store_no
		,
		dept_id
		,
		dept_no
		,
		ass_purpose
		,
		proj_id
		,
		proj_no
		,
		in_money
		,
		note
		,
		create_emp
		,
		create_date
		,
		in_date
		,
		confirm_emp
		,
		state
		
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.ass_in_no,jdbcType=VARCHAR}
			,
			#{item.store_id,jdbcType=INTEGER}
			,
			#{item.store_no,jdbcType=INTEGER}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.dept_no,jdbcType=INTEGER}
			,
			#{item.ass_purpose,jdbcType=VARCHAR}
			,
			#{item.proj_id,jdbcType=INTEGER}
			,
			#{item.proj_no,jdbcType=INTEGER}
			,
			#{item.in_money,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			to_date(#{item.create_date,jdbcType=DATE},'yyyy-mm-dd')
			,
			to_date(#{item.in_date,jdbcType=DATE},'yyyy-mm-dd')
			,
			#{item.confirm_emp,jdbcType=INTEGER}
			,
			#{item.state,jdbcType=INTEGER}
			
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_chk_in_main_General 
		<trim prefix="SET"  suffixOverrides=","> 
		store_id = #{store_id,jdbcType=INTEGER}
		,
		store_no = #{store_no,jdbcType=INTEGER}
		,
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		dept_no = #{dept_no,jdbcType=INTEGER}
		,
		ass_purpose = #{ass_purpose,jdbcType=VARCHAR}
		,
		proj_id = #{proj_id,jdbcType=INTEGER}
		,
		proj_no = #{proj_no,jdbcType=INTEGER}
		,
		in_money = #{in_money,jdbcType=INTEGER}
		,
		note = #{note,jdbcType=VARCHAR}
		,
		<if test="create_emp != null and create_emp != ''">
		create_emp = #{create_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		</if>
		<if test="in_date != null and in_date != ''">
		in_date = to_date(#{in_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="state != null and state != ''">
		state = #{state,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</where>  
	</update>
	<update id="updateInMoney" parameterType="java.util.Map">
	
		UPDATE ass_chk_in_main_General SET
			in_money = #{in_money,jdbcType=INTEGER}
		where                  
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
	</update>
	
	<update id="updateConfirmChkInGeneral" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_chk_in_main_General SET
				in_date = to_date(#{item.in_date,jdbcType=DATE},'YYYY-MM-DD'),
				confirm_emp = #{item.confirm_emp,jdbcType=INTEGER},
				state = 2
			where                  
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_chk_in_main_General 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_id != null and item.dept_id != ''">
			dept_id = #{item.dept_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_no != null and item.dept_no != ''">
			dept_no = #{item.dept_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.ass_purpose != null and item.ass_purpose != ''">
			ass_purpose = #{item.ass_purpose,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.proj_id != null and item.proj_id != ''">
			proj_id = #{item.proj_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.proj_no != null and item.proj_no != ''">
			proj_no = #{item.proj_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.in_money != null and item.in_money != ''">
			in_money = #{item.in_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.create_emp != null and item.create_emp != ''">
			create_emp = #{item.create_emp,jdbcType=INTEGER}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date,jdbcType=DATE}
			,
			</if>
			<if test="item.in_date != null and item.in_date != ''">
			in_date = #{item.in_date,jdbcType=DATE}
			,
			</if>
			<if test="item.confirm_emp != null and item.confirm_emp != ''">
			confirm_emp = #{item.confirm_emp,jdbcType=INTEGER}
			,
			</if>
			<if test="item.state != null and item.state != ''">
			state = #{item.state,jdbcType=INTEGER}
			,
			</if>
			</trim>
			<where>                     
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_chk_in_main_General 
		where                     
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_chk_in_main_General 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assChkInMainGeneral" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.ass_in_no,
		a.store_id,
		a.store_no,b.store_code,b.store_name,
		a.dept_id,
		a.dept_no,c.dept_code,c.dept_name,
		a.ass_purpose,aud.equi_usage_name ass_purpose_name,
		a.proj_id,
		a.proj_no,d.proj_code,d.proj_name,
		a.in_money,
		a.note,
		a.create_emp,su1.user_name create_emp_name,
		a.create_date,
		a.in_date,
		a.confirm_emp,su2.user_name confirm_emp_name,
		a.state,
		case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name
		FROM ASS_CHK_IN_MAIN_General a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_dept_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.dept_id = c.dept_id
		and c.is_stop = 0
		
		left join hos_proj_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.proj_id = d.proj_id
		and d.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.confirm_emp = su2.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND a.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND a.store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND a.ass_purpose = #{ass_purpose,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date(#{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.group_id asc
	</select>
	<select id="queryByCode" resultMap="assChkInMainGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.ass_in_no,
		a.store_id,
		a.store_no,b.store_code,b.store_name,
		a.dept_id,
		a.dept_no,c.dept_code,c.dept_name,
		a.ass_purpose,aud.equi_usage_name ass_purpose_name,
		a.proj_id,
		a.proj_no,d.proj_code,d.proj_name,
		a.in_money,
		a.note,
		a.create_emp,su1.user_name create_emp_name,
		a.create_date,
		a.in_date,
		a.confirm_emp,su2.user_name confirm_emp_name,
		a.state,
		case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name
		FROM ASS_CHK_IN_MAIN_General a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_dept_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.dept_id = c.dept_id
		and c.is_stop = 0
		
		left join hos_proj_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.proj_id = d.proj_id
		and d.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.confirm_emp = su2.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		where                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
	
	</select>
	<select id="queryByUniqueness" resultMap="assChkInMainGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		store_id,
		store_no,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		state
		FROM ASS_CHK_IN_MAIN_General 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="ass_purpose != null and ass_purpose != ''">
		AND ass_purpose = #{ass_purpose,jdbcType=VARCHAR}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assChkInMainGeneral"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		store_id,
		store_no,
		dept_id,
		dept_no,
		ass_purpose,
		proj_id,
		proj_no,
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		state
		FROM ASS_CHK_IN_MAIN_General 
		where                  
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		order by group_id asc
	</select>
	
	<!-- 	主表批量打印 -->
	<select id="queryAssChkInMainGeneralPrintTemlateByMainBatch" resultType="java.util.Map"  parameterType="java.util.Map" >
	
		SELECT 
		a.ass_in_no id,
		a.ass_in_no,
		a.store_id,
		a.store_no,
		b.store_code,
		b.store_name,
		a.dept_id,
		a.dept_no,
		c.dept_code,
		c.dept_name,
		aud.equi_usage_name ass_purpose,
		a.proj_id,
		a.proj_no,
		d.proj_code,
		d.proj_name,
		to_char(a.in_money,'FM999,999,990.00')  in_money,
		a.note,
		su1.user_name create_emp,
		to_char(a.create_date, 'yyyy-mm-dd') as create_date,
		to_char(a.in_date, 'yyyy-mm-dd') as audit_date,
		su2.user_name audit_emp,
		case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state
		FROM ASS_CHK_IN_MAIN_General a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_dept_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.dept_id = c.dept_id
		and c.is_stop = 0
		
		left join hos_proj_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.proj_id = d.proj_id
		and d.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.confirm_emp = su2.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		where                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.ass_in_no in (${paraId})
	
	</select>
	<!-- 	主表模板打印 -->
	<select id="queryAssChkInMainGeneralPrintTemlateByMain" resultType="java.util.Map"  parameterType="java.util.Map" >
	
		SELECT 
		a.ass_in_no id,
		a.store_id,
		a.store_no,
		b.store_code,
		b.store_name,
		a.dept_id,
		a.dept_no,
		c.dept_code,
		c.dept_name,
		aud.equi_usage_name ass_purpose,
		a.proj_id,
		a.proj_no,
		d.proj_code,
		d.proj_name,
		to_char(a.in_money,'FM999,999,990.00')  in_money,
		a.note,
		su1.user_name create_emp,
		to_char(a.create_date, 'yyyy-mm-dd') as create_date,
		to_char(a.in_date, 'yyyy-mm-dd') as audit_date,
		su2.user_name audit_emp,
		case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state
		FROM ASS_CHK_IN_MAIN_General a
		left join hos_store_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.store_id = b.store_id
		and b.is_stop = 0
		
		left join hos_dept_dict c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.dept_id = c.dept_id
		and c.is_stop = 0
		
		left join hos_proj_dict d on
		a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.proj_id = d.proj_id
		and d.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.confirm_emp = su2.user_id
		
		left join ass_usage_dict aud on
		a.group_id = aud.group_id
		and a.hos_id = aud.hos_id
		and a.copy_code = aud.copy_code
		and a.ass_purpose = aud.equi_usage_code
		where                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.ass_in_no = #{ass_in_no}
		order by a.ass_in_no asc
	
	</select>
	<!-- 明细表数据打印 -->
	<select id="queryAssChkInMainGeneralPrintTemlateByDetail" resultType="java.util.Map"  parameterType="java.util.Map" >
							select

				 t5.ass_in_no id,
				 t5.ass_id,
				 t5.ass_no,
				 t5.ass_brand,
				 t5.ass_spec,
				 t5.ass_model,
				 b.ass_code,
				 b.ass_name,
				 t5.fac_id,
				 t5.fac_no,
				 c.fac_code,
				 c.fac_name,
				 t5.unit_code,
				 t5.in_amount,
				 t5.price PRICE_DETAIL,
				 t5.add_depre ADD_DEPRE_DETAIL,
				 t5.add_depre_month,
				 t5.cur_money CUR_MONEY_DETAIL,
				 t5.fore_money FORE_MONEY_DETAIL,
				 t5.note note_detail,
				 to_char(price_sum, 'FM999,999,990.00') price_sum,
				 to_char(zc_price, 'FM999,999,990.00') zc_price,
				 to_char(cz_price, 'FM999,999,990.00') cz_price,
				 to_char(ky_price, 'FM999,999,990.00') ky_price,
				 to_char(jx_price, 'FM999,999,990.00') jx_price
				
				  from (select t3.source_id,
				               t3.group_id,
				               t3.hos_id,
				               t3.copy_code,
				               sum(t3.price) sum_price,
				               sum(t2.price) price_sum,
				               t2.ass_id,
				               t2.ass_no,
				               t2.ass_in_no
				          from ass_card_General t2
				        
				          left join ass_resource_General t3
				            on t3.ass_card_no = t2.ass_card_no
				           and t3.group_id = t2.group_id
				           and t3.hos_id = t3.hos_id
				           and t3.copy_code = t2.copy_code
				        WHERE 
						a.group_id = #{group_id,jdbcType=INTEGER}   
						and a.hos_id = #{hos_id,jdbcType=INTEGER}  
						and a.copy_code = #{copy_code,jdbcType=VARCHAR}
						<if test="p_num==1">
							and t2.ass_in_no in (${paraId})
						</if>
						<if test="p_num==0">
							and t2.ass_in_no = #{ass_in_no}
						</if>
				         group by t3.source_id,
				                  t2.ass_id,
				                  t2.ass_no,
				                  t3.group_id,
				                  t3.hos_id,
				                  t2.ass_in_no,
				                  t3.copy_code) pivot(sum(sum_price) as price for source_id in('1' as ZC,
				                                                                               '2' as CZ,
				                                                                               '3' as KY,
				                                                                               '4' as JX)) t
							  left join ass_chk_in_detail_General t5
							    on t.ass_id = t5.ass_id
							   and t5.group_id = t.group_id
							   and t5.hos_id = t.hos_id
							   and t5.copy_code = t.copy_code
							   and t5.ass_in_no = t.ass_in_no
							  left join ass_no_dict b
							    on t5.group_id = b.group_id
							   and t5.hos_id = b.hos_id
							   and t5.copy_code = b.copy_code
							   and t5.ass_id = b.ass_id
							   and b.is_stop = 0
							  left join hos_fac_dict c
							    on t5.group_id = c.group_id
							   and t5.hos_id = c.hos_id
							   and t5.fac_id = c.fac_id
							   and c.is_stop = 0
											
					WHERE 
						t5.group_id = #{group_id,jdbcType=INTEGER}   
						and t5.hos_id = #{hos_id,jdbcType=INTEGER}  
						and t5.copy_code = #{copy_code,jdbcType=VARCHAR}
						<if test="p_num==1">
							and t5.ass_in_no in (${paraId})
						</if>
						<if test="p_num==0">
							and t5.ass_in_no = #{ass_in_no}
						</if>
					group by t5.ass_in_no,
					          t5.ass_id,
					          t5.ass_no,
					          t5.ass_brand,
					          t5.ass_spec,
					          t5.ass_model,
					          b.ass_code,
					          b.ass_name,
					          t5.fac_id,
					          t5.fac_no,
					          c.fac_code,
					          c.fac_name,
					          t5.unit_code,
					          t5.in_amount,
					          t5.price,
					          t5.add_depre,
					          t5.add_depre_month,
					          t5.cur_money,
					          t5.fore_money,
					          t5.note,
					          price_sum,
					          zc_price,
					          cz_price,
					          ky_price,
					          jx_price
					order by t5.ass_in_no asc
	
	
		<!-- SELECT 
		a.ass_in_no id,
		a.ass_id,
		a.ass_no,
		a.ass_brand,
	    a.ass_spec,
	    a.ass_model,
		c.ass_code,
	    c.ass_name,
		a.fac_id,
		a.fac_no,
		hfd.fac_code,
	    hfd.fac_name,
		a.unit_code,
		a.in_amount,
		a.price PRICE_DETAIL,
		a.add_depre ADD_DEPRE_DETAIL,
		a.add_depre_month,
		a.cur_money CUR_MONEY_DETAIL,
		a.fore_money FORE_MONEY_DETAIL,
		a.note note_detail
		FROM ass_chk_in_detail_General a
	    left join hos_fac_dict hfd on 
	      a.group_id = hfd.group_id
	      and a.hos_id = hfd.hos_id
	      and a.fac_no = hfd.fac_no
	      and a.fac_id = hfd.fac_id
	    left join ass_no_dict c on
	      a.group_id = c.group_id
	      and a.hos_id = c.hos_id
	      and a.copy_code = c.copy_code 
	      and a.ass_id = c.ass_id
	      and c.is_stop = 0
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   
		and a.hos_id = #{hos_id,jdbcType=INTEGER}  
		and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="p_num==1">
			and a.ass_in_no in (${paraId})
		</if>
		<if test="p_num==0">
			and a.ass_in_no = #{ass_in_no}
		</if> -->
	</select>
	
	<select id="queryState" resultType="java.lang.String"  parameterType="java.util.Map" >
	
		SELECT
		  ass_in_no
		FROM ASS_CHK_IN_MAIN_General 
		WHERE                     
		group_id = #{group_id}
		
		AND hos_id = #{hos_id}
		
		AND copy_code = #{copy_code}
		
		<if test="paraId != null and paraId != ''">
		AND ass_in_no in (${paraId})
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		AND  state != 2
	</select>
	
</mapper>

