<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.base.AssInitAccountMapper">
	<resultMap id="assCardValidateMap" type="java.util.Map">
		<result property="price" column="price"/>
		<result property="depre_money" column="depre_money"/>
		<result property="manage_depre_money" column="manage_depre_money"/>
		<result property="cur_money" column="cur_money"/>
		<result property="ass_card_no" column="ass_card_no"/>
		<result property="fore_money" column="fore_money"/>
		<result property="area" column="area"/>
		<result property="add_depre_month" column="add_depre_month"/>
	</resultMap>

	<select id="selectInitCardExists" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from v_ass_card_init where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
	</select>
	
	<select id="selectInitResourceExists" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from v_ass_resource_init where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
	</select>
	
	<select id="querResourceValidate"  parameterType="java.util.Map" resultMap="assCardValidateMap">
		select t1.ass_card_no,nvl(t1.price,0) - nvl(t2.price,0) price,nvl(t1.depre_money,0) - nvl(t2.depre_money,0) depre_money,nvl(t1.manage_depre_money,0) - nvl(t2.manage_depre_money,0) manage_depre_money,nvl(t1.cur_money,0) - nvl(t2.cur_money,0) cur_money,nvl(t1.fore_money,0) - nvl(t2.fore_money,0) fore_money from v_ass_card_init t1
			left join (
			     select t.ass_naturs,t.group_id,t.hos_id,t.copy_code,t.ass_card_no,nvl(sum(t.price),0) price,nvl(sum(t.depre_money),0) depre_money,nvl(sum(t.manage_depre_money),0) manage_depre_money,nvl(sum(t.cur_money),0) cur_money,nvl(sum(t.fore_money),0) fore_money from v_ass_resource_init t
			     where 
			     t.group_id = #{group_id} and t.hos_id = #{hos_id} and t.copy_code = #{copy_code}
			     group by t.ass_naturs,t.group_id,t.hos_id,t.copy_code,t.ass_card_no
			) t2 on
			t1.group_id = t2.group_id
			and t1.hos_id = t2.hos_id
			and t1.copy_code = t2.copy_code
			and t1.ass_naturs = t2.ass_naturs
			and t1.ass_card_no = t2.ass_card_no
	 where 
			     t1.group_id = #{group_id} and t1.hos_id = #{hos_id} and t1.copy_code = #{copy_code}
	</select>
	
	<select id="selectInitShareDeptExists" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from (
			select * from ass_share_dept_init_special where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_share_dept_init_general where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_share_dept_init_house where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_share_dept_init_other where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_share_dept_init_inassets where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_share_dept_init_land where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		)
	</select>
	
	<select id="querShareDeptValidate" parameterType="java.util.Map" resultMap="assCardValidateMap">
		select t1.ass_card_no,t2.area from v_ass_card_init t1
			left join (
			     	select group_id,hos_id,copy_code,ass_card_no,nvl(sum(area),0) area from ass_share_dept_init_special where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			     	group by group_id,hos_id,copy_code,ass_card_no
					union all
					select group_id,hos_id,copy_code,ass_card_no,nvl(sum(area),0) area from ass_share_dept_init_general where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
					group by group_id,hos_id,copy_code,ass_card_no
					union all
					select group_id,hos_id,copy_code,ass_card_no,nvl(sum(area),0) area from ass_share_dept_init_house where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
					group by group_id,hos_id,copy_code,ass_card_no
					union all
					select group_id,hos_id,copy_code,ass_card_no,nvl(sum(area),0) area from ass_share_dept_init_other where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
					group by group_id,hos_id,copy_code,ass_card_no
					union all
					select group_id,hos_id,copy_code,ass_card_no,nvl(sum(area),0) area from ass_share_dept_init_inassets where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
					group by group_id,hos_id,copy_code,ass_card_no
					union all
					select group_id,hos_id,copy_code,ass_card_no,nvl(sum(area),0) area from ass_share_dept_init_land where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
					group by group_id,hos_id,copy_code,ass_card_no
			     
			) t2 on
			t1.group_id = t2.group_id
			and t1.hos_id = t2.hos_id
			and t1.copy_code = t2.copy_code
			and t1.ass_card_no = t2.ass_card_no
	 where 
			     t1.group_id = #{group_id} and t1.hos_id = #{hos_id} and t1.copy_code = #{copy_code}
	
	</select>
	
	<select id="selectInitDepreAccExists" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from (
			select * from ass_depre_acc_init_special where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_depre_acc_init_general where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_depre_acc_init_house where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_depre_acc_init_other where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_depre_acc_init_inassets where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			union all
			select * from ass_depre_acc_init_land where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		)
	</select>
	
	<select id="querDepreAccValidate" parameterType="java.util.Map" resultMap="assCardValidateMap">
		select t1.ass_card_no,nvl(t1.price,0) - nvl(t2.prim_money,0) price,nvl(t1.depre_money,0) - nvl(t2.add_depre_amount,0) depre_money,nvl(t1.add_depre_month,0) - nvl(t2.add_depre_month,0) add_depre_month,nvl(t1.cur_money,0) - nvl(t2.cur_money,0) cur_money,nvl(t1.fore_money,0) - nvl(t2.fore_money,0) fore_money from v_ass_card_init t1
      left join (
          select group_id,hos_id,copy_code,ass_card_no,sum(prim_money) prim_money,sum(now_depre_amount) now_depre_amount,sum(add_depre_amount) add_depre_amount,max(add_depre_month) add_depre_month,sum(cur_money) cur_money,sum(fore_money) fore_money from ass_depre_acc_init_special where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
          group by group_id,hos_id,copy_code,ass_card_no
          union all
          select group_id,hos_id,copy_code,ass_card_no,sum(prim_money) prim_money,sum(now_depre_amount) now_depre_amount,sum(add_depre_amount) add_depre_amount,max(add_depre_month) add_depre_month,sum(cur_money) cur_money,sum(fore_money) fore_money from ass_depre_acc_init_general where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
          group by group_id,hos_id,copy_code,ass_card_no   
          union all
          select group_id,hos_id,copy_code,ass_card_no,sum(prim_money) prim_money,sum(now_depre_amount) now_depre_amount,sum(add_depre_amount) add_depre_amount,max(add_depre_month) add_depre_month,sum(cur_money) cur_money,sum(fore_money) fore_money from ass_depre_acc_init_house where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
          group by group_id,hos_id,copy_code,ass_card_no
          union all
          select group_id,hos_id,copy_code,ass_card_no,sum(prim_money) prim_money,sum(now_depre_amount) now_depre_amount,sum(add_depre_amount) add_depre_amount,max(add_depre_month) add_depre_month,sum(cur_money) cur_money,sum(fore_money) fore_money from ass_depre_acc_init_other where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
          group by group_id,hos_id,copy_code,ass_card_no
          union all
          select group_id,hos_id,copy_code,ass_card_no,sum(prim_money) prim_money,sum(now_depre_amount) now_depre_amount,sum(add_depre_amount) add_depre_amount,max(add_depre_month) add_depre_month,sum(cur_money) cur_money,sum(fore_money) fore_money from ass_depre_acc_init_inassets where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
          group by group_id,hos_id,copy_code,ass_card_no
          union all
          select group_id,hos_id,copy_code,ass_card_no,sum(prim_money) prim_money,sum(now_depre_amount) now_depre_amount,sum(add_depre_amount) add_depre_amount,max(add_depre_month) add_depre_month,sum(cur_money) cur_money,sum(fore_money) fore_money from ass_depre_acc_init_land where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
          group by group_id,hos_id,copy_code,ass_card_no
 ) t2 on
      t1.group_id = t2.group_id
      and t1.hos_id = t2.hos_id
      and t1.copy_code = t2.copy_code
      and t1.ass_card_no = t2.ass_card_no
   where 
           t1.group_id = #{group_id} and t1.hos_id = #{hos_id} and t1.copy_code = #{copy_code}
           and t1.price - t2.add_depre_amount != 0
	</select>
	
	
	<!--卡片 -->
	<insert id="addCardAccount" parameterType="java.util.Map">
		begin
		
				<if test="isfg == 1">
				delete from ass_accessory_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_accessory_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_accessory_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_accessory_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_accessory_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_accessory_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_RESOURCE_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_RESOURCE_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_RESOURCE_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_RESOURCE_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_RESOURCE_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_RESOURCE_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_share_dept_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_share_dept_r_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_r_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_r_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_r_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_r_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_share_dept_r_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_file_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_file_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_file_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_file_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and  t.ass_card_no = ass_card_no and t.is_init = 1);
				delete from ass_file_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and  t.ass_card_no = ass_card_no and t.is_init = 1);
				delete from ass_file_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_photo_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_photo_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_photo_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_photo_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_photo_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_photo_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_pay_stage_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_pay_stage_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_pay_stage_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_pay_stage_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_pay_stage_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_pay_stage_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_depre_acc_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_acc_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_acc_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_acc_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_acc_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_acc_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_depre_manage_special a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and exists(select 1 from ass_card_special t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_manage_general a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_general t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_manage_house a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_house t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_manage_other a   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_other t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_manage_inassets a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_inassets t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				delete from ass_depre_manage_land a where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and exists(select 1 from ass_card_land t where a.group_id = t.group_id and a.hos_id = t.hos_id and a.copy_code = t.copy_code and a.ass_card_no =t. ass_card_no and t.is_init = 1);
				</if>
				
				<if test="isfg == 1">
				delete from ass_card_special where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and is_init = 1;
				delete from ass_card_general where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and is_init = 1;
				delete from ass_card_house   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and is_init = 1;
				delete from ass_card_other   where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and is_init = 1;
				delete from ass_card_inassets where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and is_init = 1;
				delete from ass_card_land where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}  and is_init = 1;
				</if>
		
			insert into ass_card_special(
				   GROUP_ID,
				   HOS_ID,
			       COPY_CODE,
			       ASS_CARD_NO,
			       ASS_ORI_CARD_NO,
			       ASS_ID,
			       ASS_NO,
			       GB_CODE,
			       ASS_SPEC,
			       ASS_MONDL,
			       ASS_BRAND,
			       ASS_AMOUNT,
			       UNIT_CODE,
			       FAC_NO,
			       FAC_ID,
			       VEN_ID,
			       VEN_NO,
			       IS_DEPT,
			       DEPT_ID,
			       DEPT_NO,
			       STORE_ID,
			       STORE_NO,
			       PRICE,
			       DEPRE_MONEY,
			       MANAGE_DEPRE_MONEY,
			       CUR_MONEY,
			       FORE_MONEY,
			       BUY_TYPE,
			       USE_STATE,
			       IS_DEPR,
			       DEPR_METHOD,
			       ACC_DEPRE_AMOUNT,
			       IS_MANAGE_DEPRE,
			       MANAGE_DEPR_METHOD,
			       MANAGE_DEPRE_AMOUNT,
			       IS_MEASURE,
			       IS_THROW,
			       pact_code,
			       INS_MONEY,
			       INS_DATE,
			       ACCEPT_EMP,
			       ACCEPT_DATE,
			       SERVICE_DATE,
			       ASS_SEQ_NO,
			       LOCATION,
			       ASS_PURPOSE,
			       PROJ_ID,
			       PROJ_NO,
			       NOTE,
			       ASS_IN_NO,
			       IN_DATE,
			       RUN_DATE,
			       IS_BAR,
			       BAR_TYPE,
			       BAR_CODE,
			       BAR_URL,
			       ADD_DEPRE_MONTH,
			       ADD_MANAGE_MONTH,
			       DISPOSE_TYPE,
			       APPLY_DATE,
			       DISPOSE_DATE,
			       DISPOSE_COST,
			       DISPOSE_INCOME,
			       DISPOSE_TAX,
			       IS_INIT,
			       PROC_STORE_ID,
			       PROC_STORE_NO
			) 
			select 
			   GROUP_ID,
		       HOS_ID,
		       COPY_CODE,
		       ASS_CARD_NO,
		       ASS_ORI_CARD_NO,
		       ASS_ID,
		       ASS_NO,
		       GB_CODE,
		       ASS_SPEC,
		       ASS_MONDL,
		       ASS_BRAND,
		       ASS_AMOUNT,
		       UNIT_CODE,
		       FAC_NO,
		       FAC_ID,
		       VEN_ID,
		       VEN_NO,
		       IS_DEPT,
		       DEPT_ID,
		       DEPT_NO,
		       STORE_ID,
		       STORE_NO,
		       PRICE,
		       DEPRE_MONEY,
		       MANAGE_DEPRE_MONEY,
		       CUR_MONEY,
		       FORE_MONEY,
		       BUY_TYPE,
		       USE_STATE,
		       IS_DEPR,
		       DEPR_METHOD,
		       ACC_DEPRE_AMOUNT,
		       IS_MANAGE_DEPRE,
		       MANAGE_DEPR_METHOD,
		       MANAGE_DEPRE_AMOUNT,
		       IS_MEASURE,
		       IS_THROW,
		       pact_code,
		       INS_MONEY,
		       INS_DATE,
		       ACCEPT_EMP,
		       ACCEPT_DATE,
		       SERVICE_DATE,
		       ASS_SEQ_NO,
		       LOCATION,
		       ASS_PURPOSE,
		       PROJ_ID,
		       PROJ_NO,
		       NOTE,
		       ASS_IN_NO,
		       IN_DATE,
		       RUN_DATE,
		       IS_BAR,
		       BAR_TYPE,
		       BAR_CODE,
		       BAR_URL,
		       ADD_DEPRE_MONTH,
		       ADD_MANAGE_MONTH,
		       null DISPOSE_TYPE,
			   null     APPLY_DATE,
			   null     DISPOSE_DATE,
			   null     DISPOSE_COST,
			   null     DISPOSE_INCOME,
			   null     DISPOSE_TAX,
					   1 is_init,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  	from ASS_CARD_INIT_SPECIAL
  	
  	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
  	
  	<if test="isfg == 0">
  		and not exists (
  		select 1 from ass_card_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.is_init = 1
  	)
  	</if>
  	;
  	
  		insert into ass_card_general (
  			   GROUP_ID,
		       HOS_ID,
		       COPY_CODE,
		       ASS_CARD_NO,
		       ASS_ORI_CARD_NO,
		       ASS_ID,
		       ASS_NO,
		       GB_CODE,
		       ASS_SPEC,
		       ASS_MONDL,
		       ASS_BRAND,
		       ASS_AMOUNT,
		       UNIT_CODE,
		       FAC_ID,
		       FAC_NO,
		       VEN_ID,
		       VEN_NO,
		       IS_DEPT,
		       DEPT_ID,
		       DEPT_NO,
		       STORE_ID,
		       STORE_NO,
		       PRICE,
		       DEPRE_MONEY,
		       MANAGE_DEPRE_MONEY,
		       CUR_MONEY,
		       FORE_MONEY,
		       BUY_TYPE,
		       USE_STATE,
		       IS_DEPR,
		       DEPR_METHOD,
		       ACC_DEPRE_AMOUNT,
		       IS_MANAGE_DEPRE,
		       MANAGE_DEPR_METHOD,
		       MANAGE_DEPRE_AMOUNT,
		       IS_MEASURE,
		       IS_THROW,
		       pact_code,
		       INS_MONEY,
		       INS_DATE,
		       ACCEPT_EMP,
		       ACCEPT_DATE,
		       SERVICE_DATE,
		       ASS_SEQ_NO,
		       LOCATION,
		       ASS_PURPOSE,
		       PROJ_ID,
		       PROJ_NO,
		       NOTE,
		       ASS_IN_NO,
		       IN_DATE,
		       RUN_DATE,
		       IS_BAR,
		       BAR_TYPE,
		       BAR_CODE,
		       BAR_URL,
		       CAR_PLACE,
		       CAR_SIGN,
		       CAR_FRAME,
		       CAR_ENGINE,
		       CAR_BRAND,
		       CAR_GAS,
		       ADD_DEPRE_MONTH,
		       ADD_MANAGE_MONTH,
		       DISPOSE_TYPE,
		       APPLY_DATE,
		       DISPOSE_DATE,
		       DISPOSE_COST,
		       DISPOSE_INCOME,
		       DISPOSE_TAX,
			       IS_INIT,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  		
  		)select GROUP_ID,
       HOS_ID,
       COPY_CODE,
       ASS_CARD_NO,
       ASS_ORI_CARD_NO,
       ASS_ID,
       ASS_NO,
       GB_CODE,
       ASS_SPEC,
       ASS_MONDL,
       ASS_BRAND,
       ASS_AMOUNT,
       UNIT_CODE,
       FAC_ID,
       FAC_NO,
       VEN_ID,
       VEN_NO,
       IS_DEPT,
       DEPT_ID,
       DEPT_NO,
       STORE_ID,
       STORE_NO,
       PRICE,
       DEPRE_MONEY,
       MANAGE_DEPRE_MONEY,
       CUR_MONEY,
       FORE_MONEY,
       BUY_TYPE,
       USE_STATE,
       IS_DEPR,
       DEPR_METHOD,
       ACC_DEPRE_AMOUNT,
       IS_MANAGE_DEPRE,
       MANAGE_DEPR_METHOD,
       MANAGE_DEPRE_AMOUNT,
       IS_MEASURE,
       IS_THROW,
       pact_code,
       INS_MONEY,
       INS_DATE,
       ACCEPT_EMP,
       ACCEPT_DATE,
       SERVICE_DATE,
       ASS_SEQ_NO,
       LOCATION,
       ASS_PURPOSE,
       PROJ_ID,
       PROJ_NO,
       NOTE,
       ASS_IN_NO,
       IN_DATE,
       RUN_DATE,
       IS_BAR,
       BAR_TYPE,
       BAR_CODE,
       BAR_URL,
       CAR_PLACE,
       CAR_SIGN,
       CAR_FRAME,
       CAR_ENGINE,
       CAR_BRAND,
       CAR_GAS,
       ADD_DEPRE_MONTH,
       ADD_MANAGE_MONTH,
       null DISPOSE_TYPE,
			   null     APPLY_DATE,
			   null     DISPOSE_DATE,
			   null     DISPOSE_COST,
			   null     DISPOSE_INCOME,
			   null     DISPOSE_TAX,
					   1 is_init,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  from ASS_CARD_INIT_GENERAL
  where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
  
  <if test="isfg == 0">
  		and not exists (
  		select 1 from ass_card_GENERAL t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.is_init = 1
  	)
  </if>
  ;
  
  		insert into ASS_CARD_HOUSE(
  			GROUP_ID,
	       HOS_ID,
	       COPY_CODE,
	       ASS_CARD_NO,
	       ASS_ORI_CARD_NO,
	       ASS_ID,
	       ASS_NO,
	       ASS_AMOUNT,
	       UNIT_CODE,
	       VEN_ID,
	       VEN_NO,
	       DEPT_ID,
	       DEPT_NO,
	       PRICE,
	       DEPRE_MONEY,
	       MANAGE_DEPRE_MONEY,
	       CUR_MONEY,
	       FORE_MONEY,
	       BUY_TYPE,
	       USE_STATE,
	       IS_DEPR,
	       DEPR_METHOD,
	       ACC_DEPRE_AMOUNT,
	       IS_MANAGE_DEPRE,
	       MANAGE_DEPR_METHOD,
	       MANAGE_DEPRE_AMOUNT,
	       pact_code,
	       ACCEPT_DATE,
	       LOCATION,
	       NOTE,
	       ASS_IN_NO,
	       IN_DATE,
	       RUN_DATE,
	       ADD_DEPRE_MONTH,
	       ADD_MANAGE_MONTH,
	       STRUCT_CODE,
	       HOUSE_AREA,
	       USE_AREA,
	       BASE_AREA,
	       CERT_NAME,
	       CERT_CODE,
	       CERT_DATE,
	       PROP_CODE,
	       DISPOSE_TYPE,
	       APPLY_DATE,
	       DISPOSE_DATE,
	       DISPOSE_COST,
	       DISPOSE_INCOME,
	       DISPOSE_TAX,
			       IS_INIT,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  		) select   
  				   GROUP_ID,
			       HOS_ID,
			       COPY_CODE,
			       ASS_CARD_NO,
			       ASS_ORI_CARD_NO,
			       ASS_ID,
			       ASS_NO,
			       ASS_AMOUNT,
			       UNIT_CODE,
			       VEN_ID,
			       VEN_NO,
			       DEPT_ID,
			       DEPT_NO,
			       PRICE,
			       DEPRE_MONEY,
			       MANAGE_DEPRE_MONEY,
			       CUR_MONEY,
			       FORE_MONEY,
			       BUY_TYPE,
			       USE_STATE,
			       IS_DEPR,
			       DEPR_METHOD,
			       ACC_DEPRE_AMOUNT,
			       IS_MANAGE_DEPRE,
			       MANAGE_DEPR_METHOD,
			       MANAGE_DEPRE_AMOUNT,
			       pact_code,
			       ACCEPT_DATE,
			       LOCATION,
			       NOTE,
			       ASS_IN_NO,
			       IN_DATE,
			       RUN_DATE,
			       ADD_DEPRE_MONTH,
			       ADD_MANAGE_MONTH,
			       STRUCT_CODE,
			       HOUSE_AREA,
			       USE_AREA,
			       BASE_AREA,
			       CERT_NAME,
			       CERT_CODE,
			       CERT_DATE,
			       PROP_CODE,
			       null DISPOSE_TYPE,
				   null     APPLY_DATE,
				   null     DISPOSE_DATE,
				   null     DISPOSE_COST,
				   null     DISPOSE_INCOME,
				   null     DISPOSE_TAX,
					   1 is_init,
			       PROC_STORE_ID,
			       PROC_STORE_NO

  from ASS_CARD_INIT_HOUSE
  where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
  
  <if test="isfg == 0">
  		and not exists (
  		select 1 from ass_card_HOUSE t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.is_init = 1
  	)
  </if>
  ;
  
  		insert into ass_card_other(
  			   GROUP_ID,
		       HOS_ID,
		       COPY_CODE,
		       ASS_CARD_NO,
		       ASS_ORI_CARD_NO,
		       ASS_ID,
		       ASS_NO,
		       GB_CODE,
		       ASS_SPEC,
		       ASS_MONDL,
		       ASS_BRAND,
		       ASS_AMOUNT,
		       UNIT_CODE,
		       FAC_ID,
		       FAC_NO,
		       VEN_ID,
		       VEN_NO,
		       IS_DEPT,
		       DEPT_ID,
		       DEPT_NO,
		       STORE_ID,
		       STORE_NO,
		       PRICE,
		       DEPRE_MONEY,
		       MANAGE_DEPRE_MONEY,
		       CUR_MONEY,
		       FORE_MONEY,
		       BUY_TYPE,
		       USE_STATE,
		       IS_DEPR,
		       DEPR_METHOD,
		       ACC_DEPRE_AMOUNT,
		       IS_MANAGE_DEPRE,
		       MANAGE_DEPR_METHOD,
		       MANAGE_DEPRE_AMOUNT,
		       IS_MEASURE,
		       IS_THROW,
		       pact_code,
		       INS_MONEY,
		       INS_DATE,
		       ACCEPT_EMP,
		       ACCEPT_DATE,
		       SERVICE_DATE,
		       ASS_SEQ_NO,
		       LOCATION,
		       ASS_PURPOSE,
		       PROJ_ID,
		       PROJ_NO,
		       NOTE,
		       ASS_IN_NO,
		       IN_DATE,
		       RUN_DATE,
		       IS_BAR,
		       BAR_TYPE,
		       BAR_CODE,
		       BAR_URL,
		       ADD_DEPRE_MONTH,
		       ADD_MANAGE_MONTH,
		       BOOK_AMOUNT,
		       RELIC_AMOUNT,
		       RELIC_GRADE_CODE,
		       DISPOSE_TYPE,
		       APPLY_DATE,
		       DISPOSE_DATE,
		       DISPOSE_COST,
		       DISPOSE_INCOME,
		       DISPOSE_TAX,
			       IS_INIT,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  		)
			select 
			       GROUP_ID,
			       HOS_ID,
			       COPY_CODE,
			       ASS_CARD_NO,
			       ASS_ORI_CARD_NO,
			       ASS_ID,
			       ASS_NO,
			       GB_CODE,
			       ASS_SPEC,
			       ASS_MONDL,
			       ASS_BRAND,
			       ASS_AMOUNT,
			       UNIT_CODE,
			       FAC_ID,
			       FAC_NO,
			       VEN_ID,
			       VEN_NO,
			       IS_DEPT,
			       DEPT_ID,
			       DEPT_NO,
			       STORE_ID,
			       STORE_NO,
			       PRICE,
			       DEPRE_MONEY,
			       MANAGE_DEPRE_MONEY,
			       CUR_MONEY,
			       FORE_MONEY,
			       BUY_TYPE,
			       USE_STATE,
			       IS_DEPR,
			       DEPR_METHOD,
			       ACC_DEPRE_AMOUNT,
			       IS_MANAGE_DEPRE,
			       MANAGE_DEPR_METHOD,
			       MANAGE_DEPRE_AMOUNT,
			       IS_MEASURE,
			       IS_THROW,
			       pact_code,
			       INS_MONEY,
			       INS_DATE,
			       ACCEPT_EMP,
			       ACCEPT_DATE,
			       SERVICE_DATE,
			       ASS_SEQ_NO,
			       LOCATION,
			       ASS_PURPOSE,
			       PROJ_ID,
			       PROJ_NO,
			       NOTE,
			       ASS_IN_NO,
			       IN_DATE,
			       RUN_DATE,
			       IS_BAR,
			       BAR_TYPE,
			       BAR_CODE,
			       BAR_URL,
			       ADD_DEPRE_MONTH,
			       ADD_MANAGE_MONTH,
			       BOOK_AMOUNT,
			       RELIC_AMOUNT,
			       RELIC_GRADE_CODE,
			       null DISPOSE_TYPE,
				   null     APPLY_DATE,
				   null     DISPOSE_DATE,
				   null     DISPOSE_COST,
				   null     DISPOSE_INCOME,
				   null     DISPOSE_TAX,
					   1 is_init,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  from ASS_CARD_INIT_OTHER
  where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
  
  <if test="isfg == 0">
  		and not exists (
  		select 1 from ass_card_OTHER t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.is_init = 1
  	)
  </if>
  ;
  
  			insert into ASS_CARD_INASSETS( 
  					   GROUP_ID,
				       HOS_ID,
				       COPY_CODE,
				       ASS_CARD_NO,
				       ASS_ORI_CARD_NO,
				       ASS_ID,
				       ASS_NO,
				       GB_CODE,
				       ASS_BRAND,
				       ASS_AMOUNT,
				       UNIT_CODE,
				       FAC_ID,
				       FAC_NO,
				       VEN_ID,
				       VEN_NO,
				       IS_DEPT,
				       DEPT_ID,
				       DEPT_NO,
				       STORE_ID,
				       STORE_NO,
				       PRICE,
				       DEPRE_MONEY,
				       MANAGE_DEPRE_MONEY,
				       CUR_MONEY,
				       FORE_MONEY,
				       BUY_TYPE,
				       USE_STATE,
				       IS_DEPR,
				       DEPR_METHOD,
				       ACC_DEPRE_AMOUNT,
				       IS_MANAGE_DEPRE,
				       MANAGE_DEPR_METHOD,
				       MANAGE_DEPRE_AMOUNT,
				       IS_THROW,
				       pact_code,
				       INS_MONEY,
				       INS_DATE,
				       ACCEPT_EMP,
				       ACCEPT_DATE,
				       SERVICE_DATE,
				       LOCATION,
				       ASS_PURPOSE,
				       PROJ_ID,
				       PROJ_NO,
				       NOTE,
				       ASS_IN_NO,
				       IN_DATE,
				       RUN_DATE,
				       ADD_DEPRE_MONTH,
				       ADD_MANAGE_MONTH,
				       DISPOSE_TYPE,
				       APPLY_DATE,
				       DISPOSE_DATE,
				       DISPOSE_COST,
				       DISPOSE_INCOME,
				       DISPOSE_TAX,
			           IS_INIT,
			       PROC_STORE_ID,
			       PROC_STORE_NO)
			select 
			       GROUP_ID,
			       HOS_ID,
			       COPY_CODE,
			       ASS_CARD_NO,
			       ASS_ORI_CARD_NO,
			       ASS_ID,
			       ASS_NO,
			       GB_CODE,
			       ASS_BRAND,
			       ASS_AMOUNT,
			       UNIT_CODE,
			       FAC_ID,
			       FAC_NO,
			       VEN_ID,
			       VEN_NO,
			       IS_DEPT,
			       DEPT_ID,
			       DEPT_NO,
			       STORE_ID,
			       STORE_NO,
			       PRICE,
			       DEPRE_MONEY,
			       MANAGE_DEPRE_MONEY,
			       CUR_MONEY,
			       FORE_MONEY,
			       BUY_TYPE,
			       USE_STATE,
			       IS_DEPR,
			       DEPR_METHOD,
			       ACC_DEPRE_AMOUNT,
			       IS_MANAGE_DEPRE,
			       MANAGE_DEPR_METHOD,
			       MANAGE_DEPRE_AMOUNT,
			       IS_THROW,
			       pact_code,
			       INS_MONEY,
			       INS_DATE,
			       ACCEPT_EMP,
			       ACCEPT_DATE,
			       SERVICE_DATE,
			       LOCATION,
			       ASS_PURPOSE,
			       PROJ_ID,
			       PROJ_NO,
			       NOTE,
			       ASS_IN_NO,
			       IN_DATE,
			       RUN_DATE,
			       ADD_DEPRE_MONTH,
			       ADD_MANAGE_MONTH,
			       null DISPOSE_TYPE,
				   null     APPLY_DATE,
				   null     DISPOSE_DATE,
				   null     DISPOSE_COST,
				   null     DISPOSE_INCOME,
				   null     DISPOSE_TAX,
					   1 is_init,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  			from ASS_CARD_INIT_INASSETS
  			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
  			
  			<if test="isfg == 0">
  				and not exists (
  					select 1 from ass_card_INASSETS t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.is_init = 1
		  		)
		  </if>
  			;
  		
  		insert into ass_card_land (
  					   GROUP_ID,
				       HOS_ID,
				       COPY_CODE,
				       ASS_CARD_NO,
				       ASS_ORI_CARD_NO,
				       ASS_ID,
				       ASS_NO,
				       GB_CODE,
				       ASS_AMOUNT,
				       UNIT_CODE,
				       VEN_ID,
				       VEN_NO,
				       DEPT_ID,
				       DEPT_NO,
				       PRICE,
				       DEPRE_MONEY,
				       MANAGE_DEPRE_MONEY,
				       CUR_MONEY,
				       FORE_MONEY,
				       BUY_TYPE,
				       USE_STATE,
				       IS_DEPR,
				       DEPR_METHOD,
				       ACC_DEPRE_AMOUNT,
				       IS_MANAGE_DEPRE,
				       MANAGE_DEPR_METHOD,
				       MANAGE_DEPRE_AMOUNT,
				       pact_code,
				       LOCATION,
				       NOTE,
				       ASS_IN_NO,
				       IN_DATE,
				       RUN_DATE,
				       ADD_DEPRE_MONTH,
				       ADD_MANAGE_MONTH,
				       CERT_NAME,
				       CERT_CODE,
				       CERT_DATE,
				       PROP_CODE,
				       LAND_AREA,
				       LAND_NO,
				       GAIN_DATE,
				       LAND_SOURCE_CODE,
				       DISPOSE_TYPE,
				       APPLY_DATE,
				       DISPOSE_DATE,
				       DISPOSE_COST,
				       DISPOSE_INCOME,
				       DISPOSE_TAX,
			       	   IS_INIT,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  				)
  				select 
  					   GROUP_ID,
				       HOS_ID,
				       COPY_CODE,
				       ASS_CARD_NO,
				       ASS_ORI_CARD_NO,
				       ASS_ID,
				       ASS_NO,
				       GB_CODE,
				       ASS_AMOUNT,
				       UNIT_CODE,
				       VEN_ID,
				       VEN_NO,
				       DEPT_ID,
				       DEPT_NO,
				       PRICE,
				       DEPRE_MONEY,
				       MANAGE_DEPRE_MONEY,
				       CUR_MONEY,
				       FORE_MONEY,
				       BUY_TYPE,
				       USE_STATE,
				       IS_DEPR,
				       DEPR_METHOD,
				       ACC_DEPRE_AMOUNT,
				       IS_MANAGE_DEPRE,
				       MANAGE_DEPR_METHOD,
				       MANAGE_DEPRE_AMOUNT,
				       pact_code,
				       LOCATION,
				       NOTE,
				       ASS_IN_NO,
				       IN_DATE,
				       RUN_DATE,
				       ADD_DEPRE_MONTH,
				       ADD_MANAGE_MONTH,
				       CERT_NAME,
				       CERT_CODE,
				       CERT_DATE,
				       PROP_CODE,
				       LAND_AREA,
				       LAND_NO,
				       GAIN_DATE,
				       LAND_SOURCE_CODE,
				       null DISPOSE_TYPE,
					   null     APPLY_DATE,
					   null     DISPOSE_DATE,
					   null     DISPOSE_COST,
					   null     DISPOSE_INCOME,
					   null     DISPOSE_TAX,
					   1 is_init,
			       PROC_STORE_ID,
			       PROC_STORE_NO
  from ASS_CARD_INIT_LAND
  where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
  
  <if test="isfg == 0">
  		and not exists (
  		select 1 from ass_card_LAND t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.is_init = 1
  	)
  </if>
  ;
		end;
	</insert>
	
	<!-- 资金来源 -->
	<insert id="addResourceAccount" parameterType="java.util.Map">
		begin 
		
		
		
		insert into ASS_RESOURCE_SPECIAL(GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY)
         select GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY
    	from ASS_RESOURCE_init_SPECIAL
    	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
    	<if test="isfg == 0">
  			and not exists (
  			select 1 from ASS_RESOURCE_SPECIAL t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.source_id = source_id
		  	)
	    </if>
    	;
    		
    		
    	insert into ASS_RESOURCE_GENERAL(GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY)
         select GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY
    	from ASS_RESOURCE_init_GENERAL
    	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
    	<if test="isfg == 0">
  			and not exists (
  			select 1 from ASS_RESOURCE_GENERAL t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.source_id = source_id
		  	)
	    </if>
    	;
    	
    	insert into ASS_RESOURCE_HOUSE(GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY)
         select GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY
    	from ASS_RESOURCE_init_HOUSE
    	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
    	<if test="isfg == 0">
  			and not exists (
  			select 1 from ASS_RESOURCE_HOUSE t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.source_id = source_id
		  	)
	    </if>
    	;
    	
    	insert into ASS_RESOURCE_OTHER(GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY)
         select GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY
    	from ASS_RESOURCE_init_OTHER
    	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
    	<if test="isfg == 0">
  			and not exists (
  			select 1 from ASS_RESOURCE_OTHER t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.source_id = source_id
		  	)
	    </if>
    	;
    	
    	insert into ASS_RESOURCE_INASSETS(GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY)
         select GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY
    	from ASS_RESOURCE_init_INASSETS
    	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
    	<if test="isfg == 0">
  			and not exists (
  			select 1 from ASS_RESOURCE_INASSETS t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.source_id = source_id
		  	)
	    </if>
    	;
    	
    	insert into ASS_RESOURCE_LAND(GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY)
         select GROUP_ID,
		         HOS_ID,
		         COPY_CODE,
		         ASS_CARD_NO,
		         SOURCE_ID,
		         PRICE,
		         DEPRE_MONEY,
		         MANAGE_DEPRE_MONEY,
		         CUR_MONEY,
		         FORE_MONEY,
		         PAY_MONEY,
		         UNPAY_MONEY
    	from ASS_RESOURCE_init_LAND
    	where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
    	<if test="isfg == 0">
  			and not exists (
  			select 1 from ASS_RESOURCE_LAND t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.source_id = source_id
		  	)
	    </if>
    	;
    
		end;	
	</insert>
	
	<!-- 使用科室 -->
	<insert id="addShareDeptAccount" parameterType="java.util.Map">
		begin 
		
			insert into ass_share_dept_special(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_special
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
				  	)
			    </if>
				;
				
			insert into ass_share_dept_general(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_general
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
				  	)
			    </if>
				;
				
			insert into ass_share_dept_house(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_house
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
				  	)
			    </if>
				;
				
			insert into ass_share_dept_other(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_other
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
				  	)
			    </if>
				;	
			
			insert into ass_share_dept_inassets(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_inassets
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
				  	)
			    </if>
				;
				
			insert into ass_share_dept_land(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_land
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
				  	)
			    </if>
				;			
		end;
	</insert>
	
	<insert id="addShareDeptRAccount" parameterType="java.util.Map">
		begin 
		
			insert into ass_share_dept_r_special(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,   
				ASS_YEAR,
				ASS_MONTH,
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE, 
					#{ass_year} ASS_YEAR,
					#{ass_month} ASS_MONTH, 
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_special
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_r_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
		  			and ass_year = #{ass_year} and ass_month = #{ass_month}
				  	)
			    </if>
				;
				
			insert into ass_share_dept_r_general(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,  
				ASS_YEAR,
				ASS_MONTH, 
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					#{ass_year} ASS_YEAR,
					#{ass_month} ASS_MONTH,
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_general
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_r_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
		  			and ass_year = #{ass_year} and ass_month = #{ass_month}
				  	)
			    </if>
				;
				
			insert into ass_share_dept_r_house(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,  
				ASS_YEAR,
				ASS_MONTH, 
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					#{ass_year} ASS_YEAR,
					#{ass_month} ASS_MONTH,
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_house
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_r_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
		  			and ass_year = #{ass_year} and ass_month = #{ass_month}
				  	)
			    </if>
				;
				
			insert into ass_share_dept_r_other(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE,  
				ASS_YEAR,
				ASS_MONTH, 
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE, 
					#{ass_year} ASS_YEAR,
					#{ass_month} ASS_MONTH, 
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_other
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_r_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
		  			and ass_year = #{ass_year} and ass_month = #{ass_month}
				  	)
			    </if>
				;	
			
			insert into ass_share_dept_r_inassets(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE, 
				ASS_YEAR,
				ASS_MONTH,  
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE, 
					#{ass_year} ASS_YEAR,
					#{ass_month} ASS_MONTH, 
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_inassets
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_r_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
		  			and ass_year = #{ass_year} and ass_month = #{ass_month}
				  	)
			    </if>
				;
				
			insert into ass_share_dept_r_land(
				GROUP_ID,    
				HOS_ID,      
				COPY_CODE, 
				ASS_YEAR,
				ASS_MONTH,  
				ASS_CARD_NO, 
				DEPT_ID,     
				DEPT_NO,    
				AREA,        
				NOTE        
			)select GROUP_ID,   
					HOS_ID,     
					COPY_CODE,  
					#{ass_year} ASS_YEAR,
					#{ass_month} ASS_MONTH,
					ASS_CARD_NO,
					DEPT_ID,    
					DEPT_NO,    
					AREA,       
					NOTE       
				from ass_share_dept_init_land
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_share_dept_r_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.dept_id = dept_id and t.dept_no = dept_no
		  			and ass_year = #{ass_year} and ass_month = #{ass_month}
				  	)
			    </if>
				;			
		end;
	</insert>
	
	<!-- 分期付款 -->
	<insert id="addPayStageAccount" parameterType="java.util.Map">
		begin
		
		
		insert into ass_pay_stage_special(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						STAGE_NO,         
						STAGE_NAME,       
						PAY_TERM_ID,      
						PAY_PLAN_DATE,   
						PAY_PLAN_PERCENT, 
						PAY_PLAN_MONEY,   
						PAY_MONEY,        
						UNPAY_MONEY,      
						VEN_ID,           
						VEN_NO,           
						NOTE,             
						IS_PRE,
						BILL_MONEY,
						UNBILL_MONEY           
		)select GROUP_ID,         
				HOS_ID,           
				COPY_CODE,        
				ASS_CARD_NO,      
				STAGE_NO,         
				STAGE_NAME,       
				PAY_TERM_ID,      
				PAY_PLAN_DATE,    
				PAY_PLAN_PERCENT, 
				PAY_PLAN_MONEY,   
				PAY_MONEY,        
				UNPAY_MONEY,      
				VEN_ID,           
				VEN_NO,           
				NOTE,             
				0 is_pre,
				PAY_MONEY,
				UNPAY_MONEY
		from ass_pay_stage_init_special
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		
		<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_pay_stage_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.stage_no = stage_no 
				  	)
		</if>
		;
		
		insert into ass_pay_stage_general(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						STAGE_NO,         
						STAGE_NAME,       
						PAY_TERM_ID,      
						PAY_PLAN_DATE,   
						PAY_PLAN_PERCENT, 
						PAY_PLAN_MONEY,   
						PAY_MONEY,        
						UNPAY_MONEY,      
						VEN_ID,           
						VEN_NO,           
						NOTE,             
						IS_PRE,
						BILL_MONEY,
						UNBILL_MONEY           
		)select GROUP_ID,         
				HOS_ID,           
				COPY_CODE,        
				ASS_CARD_NO,      
				STAGE_NO,         
				STAGE_NAME,       
				PAY_TERM_ID,      
				PAY_PLAN_DATE,    
				PAY_PLAN_PERCENT, 
				PAY_PLAN_MONEY,   
				PAY_MONEY,        
				UNPAY_MONEY,      
				VEN_ID,           
				VEN_NO,           
				NOTE,             
				0 is_pre,
				PAY_MONEY,
				UNPAY_MONEY
		from ass_pay_stage_init_general
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_pay_stage_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.stage_no = stage_no 
				  	)
		</if>
		;
		
		insert into ass_pay_stage_house(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						STAGE_NO,         
						STAGE_NAME,       
						PAY_TERM_ID,      
						PAY_PLAN_DATE,   
						PAY_PLAN_PERCENT, 
						PAY_PLAN_MONEY,   
						PAY_MONEY,        
						UNPAY_MONEY,      
						VEN_ID,           
						VEN_NO,           
						NOTE,             
						IS_PRE,
						BILL_MONEY,
						UNBILL_MONEY           
		)select GROUP_ID,         
				HOS_ID,           
				COPY_CODE,        
				ASS_CARD_NO,      
				STAGE_NO,         
				STAGE_NAME,       
				PAY_TERM_ID,      
				PAY_PLAN_DATE,    
				PAY_PLAN_PERCENT, 
				PAY_PLAN_MONEY,   
				PAY_MONEY,        
				UNPAY_MONEY,      
				VEN_ID,           
				VEN_NO,           
				NOTE,             
				0 is_pre,
				PAY_MONEY,
				UNPAY_MONEY
		from ass_pay_stage_init_house
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_pay_stage_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.stage_no = stage_no 
				  	)
		</if>
		;		
		
		insert into ass_pay_stage_other(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						STAGE_NO,         
						STAGE_NAME,       
						PAY_TERM_ID,      
						PAY_PLAN_DATE,   
						PAY_PLAN_PERCENT, 
						PAY_PLAN_MONEY,   
						PAY_MONEY,        
						UNPAY_MONEY,      
						VEN_ID,           
						VEN_NO,           
						NOTE,             
						IS_PRE,
						BILL_MONEY,
						UNBILL_MONEY           
		)select GROUP_ID,         
				HOS_ID,           
				COPY_CODE,        
				ASS_CARD_NO,      
				STAGE_NO,         
				STAGE_NAME,       
				PAY_TERM_ID,      
				PAY_PLAN_DATE,    
				PAY_PLAN_PERCENT, 
				PAY_PLAN_MONEY,   
				PAY_MONEY,        
				UNPAY_MONEY,      
				VEN_ID,           
				VEN_NO,           
				NOTE,             
				0 is_pre,
				PAY_MONEY,
				UNPAY_MONEY
		from ass_pay_stage_init_other
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_pay_stage_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.stage_no = stage_no 
				  	)
		</if>
		;
		
		insert into ass_pay_stage_inassets(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						STAGE_NO,         
						STAGE_NAME,       
						PAY_TERM_ID,      
						PAY_PLAN_DATE,   
						PAY_PLAN_PERCENT, 
						PAY_PLAN_MONEY,   
						PAY_MONEY,        
						UNPAY_MONEY,      
						VEN_ID,           
						VEN_NO,           
						NOTE,             
						IS_PRE,
						BILL_MONEY,
						UNBILL_MONEY           
		)select GROUP_ID,         
				HOS_ID,           
				COPY_CODE,        
				ASS_CARD_NO,      
				STAGE_NO,         
				STAGE_NAME,       
				PAY_TERM_ID,      
				PAY_PLAN_DATE,    
				PAY_PLAN_PERCENT, 
				PAY_PLAN_MONEY,   
				PAY_MONEY,        
				UNPAY_MONEY,      
				VEN_ID,           
				VEN_NO,           
				NOTE,             
				0 is_pre,
				PAY_MONEY,
				UNPAY_MONEY
		from ass_pay_stage_init_inassets
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_pay_stage_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.stage_no = stage_no 
				  	)
		</if>
		;
		
		insert into ass_pay_stage_land(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						STAGE_NO,         
						STAGE_NAME,       
						PAY_TERM_ID,      
						PAY_PLAN_DATE,   
						PAY_PLAN_PERCENT, 
						PAY_PLAN_MONEY,   
						PAY_MONEY,        
						UNPAY_MONEY,      
						
						VEN_ID,           
						VEN_NO,           
						NOTE,             
						IS_PRE,
						BILL_MONEY,
						UNBILL_MONEY           
		)select GROUP_ID,         
				HOS_ID,           
				COPY_CODE,        
				ASS_CARD_NO,      
				STAGE_NO,         
				STAGE_NAME,       
				PAY_TERM_ID,      
				PAY_PLAN_DATE,    
				PAY_PLAN_PERCENT, 
				PAY_PLAN_MONEY,   
				PAY_MONEY,        
				UNPAY_MONEY,      
				VEN_ID,           
				VEN_NO,           
				NOTE,             
				0 is_pre,
				PAY_MONEY,
				UNPAY_MONEY
		from ass_pay_stage_init_land
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
		<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_pay_stage_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.stage_no = stage_no 
				  	)
		</if>
		;
		end;
	</insert>
	
	<!-- 资产文档 -->
	<insert id="addFileAccount" parameterType="java.util.Map">
		begin
		
			insert into ass_file_special(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										FILE_CODE,       
										FILE_NAME,       
										EQUI_USAGE_CODE, 
										FILE_URL,        
										LOCATION,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					FILE_CODE,       
					FILE_NAME,       
					EQUI_USAGE_CODE, 
					FILE_URL,        
					LOCATION,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP        
				from ass_file_init_special
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_file_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.file_code = file_code 
				  	)
				</if>
				;
			
			insert into ass_file_general(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										FILE_CODE,       
										FILE_NAME,       
										EQUI_USAGE_CODE, 
										FILE_URL,        
										LOCATION,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					FILE_CODE,       
					FILE_NAME,       
					EQUI_USAGE_CODE, 
					FILE_URL,        
					LOCATION,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP         
				from ass_file_init_general
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_file_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.file_code = file_code 
				  	)
				</if>
				;	
				
			insert into ass_file_house(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										FILE_CODE,       
										FILE_NAME,       
										EQUI_USAGE_CODE, 
										FILE_URL,        
										LOCATION,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					FILE_CODE,       
					FILE_NAME,       
					EQUI_USAGE_CODE, 
					FILE_URL,        
					LOCATION,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP         
				from ass_file_init_house
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_file_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.file_code = file_code 
				  	)
				</if>
				;	
				
			insert into ass_file_other(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										FILE_CODE,       
										FILE_NAME,       
										EQUI_USAGE_CODE, 
										FILE_URL,        
										LOCATION,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					FILE_CODE,       
					FILE_NAME,       
					EQUI_USAGE_CODE, 
					FILE_URL,        
					LOCATION,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP        
				from ass_file_init_other
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_file_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.file_code = file_code 
				  	)
				</if>
				;
				
			insert into ass_file_inassets(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										FILE_CODE,       
										FILE_NAME,       
										EQUI_USAGE_CODE, 
										FILE_URL,        
										LOCATION,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					FILE_CODE,       
					FILE_NAME,       
					EQUI_USAGE_CODE, 
					FILE_URL,        
					LOCATION,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP       
				from ass_file_init_inassets
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_file_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.file_code = file_code 
				  	)
				</if>
				;
				
				
			insert into ass_file_land(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										FILE_CODE,       
										FILE_NAME,       
										EQUI_USAGE_CODE, 
										FILE_URL,        
										LOCATION,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					FILE_CODE,       
					FILE_NAME,       
					EQUI_USAGE_CODE, 
					FILE_URL,        
					LOCATION,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP         
				from ass_file_init_land
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_file_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.file_code = file_code 
				  	)
				</if>
				;					
		
		end;
	</insert>
	
	
	<!-- 资产照片-->
	<insert id="addPhotoAccount" parameterType="java.util.Map">
		begin
		
			insert into ass_photo_special(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										PHOTO_CODE,       
										PHOTO_NAME,       
										FILE_URL,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					PHOTO_CODE,       
					PHOTO_NAME,       
					FILE_URL,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP         
				from ass_photo_init_special
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_photo_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.photo_code = photo_code 
				  	)
				</if>
				;
			
			insert into ass_photo_general(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										PHOTO_CODE,       
										PHOTO_NAME,       
										FILE_URL,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					PHOTO_CODE,       
					PHOTO_NAME,       
					FILE_URL,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP        
				from ass_photo_init_general
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_photo_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.photo_code = photo_code 
				  	)
				</if>
				;	
				
			insert into ass_photo_house(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										PHOTO_CODE,       
										PHOTO_NAME,       
										FILE_URL,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					PHOTO_CODE,       
					PHOTO_NAME,       
					FILE_URL,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP         
				from ass_photo_init_house
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_photo_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.photo_code = photo_code 
				  	)
				</if>
				;	
				
			insert into ass_photo_other(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										PHOTO_CODE,       
										PHOTO_NAME,       
										FILE_URL,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					PHOTO_CODE,       
					PHOTO_NAME,       
					FILE_URL,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP         
				from ass_photo_init_other
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_photo_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.photo_code = photo_code 
				  	)
				</if>
				;
				
			insert into ass_photo_inassets(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										PHOTO_CODE,       
										PHOTO_NAME,       
										FILE_URL,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					PHOTO_CODE,       
					PHOTO_NAME,       
					FILE_URL,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP        
				from ass_photo_init_inassets
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_photo_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.photo_code = photo_code 
				  	)
				</if>
				;
				
				
			insert into ass_photo_land(GROUP_ID,        
										HOS_ID,          
										COPY_CODE,       
										ASS_CARD_NO,     
										PHOTO_CODE,       
										PHOTO_NAME,       
										FILE_URL,        
										SPELL_CODE,      
										WBX_CODE,        
										IS_STOP         
			)select GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					ASS_CARD_NO,     
					PHOTO_CODE,       
					PHOTO_NAME,       
					FILE_URL,        
					SPELL_CODE,      
					WBX_CODE,        
					IS_STOP        
				from ass_photo_init_land
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_photo_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.photo_code = photo_code 
				  	)
				</if>
				;					
		end;
	</insert>
	
	<!-- 折旧记录 -->
	<insert id="addDepreAccAccount" parameterType="java.util.Map">
	begin
		insert into ass_depre_acc_special(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_acc_init_special
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_acc_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;
			
		insert into ass_depre_acc_general(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_acc_init_general
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_acc_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;
			
		insert into ass_depre_acc_house(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_acc_init_house
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_acc_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
		insert into ass_depre_acc_other(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_acc_init_other
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_acc_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
		insert into ass_depre_acc_inassets(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_acc_init_inassets
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_acc_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
		insert into ass_depre_acc_land(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_acc_init_land
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_acc_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
			end;				
	</insert>
	
	<!-- 分摊记录 -->
	<insert id="addDepreManageAccount" parameterType="java.util.Map">
	begin
	
		insert into ass_depre_manage_special(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_manage_init_special
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_manage_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;
			
		insert into ass_depre_manage_general(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_manage_init_general
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_manage_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;
			
		insert into ass_depre_manage_house(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_manage_init_house
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_manage_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
		insert into ass_depre_manage_other(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_manage_init_other
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_manage_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
		insert into ass_depre_manage_inassets(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_manage_init_inassets
			
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_manage_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
		insert into ass_depre_manage_land(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					DEPRE_NO,         
					DEPRE_YEAR,       
					DEPRE_MONTH,      
					ASS_CARD_NO,      
					SOURCE_ID,        
					USE_DEPT_ID,      
					USE_DEPT_NO,      
					USE_PERCENT,      
					PRIM_MONEY,       
					NOW_DEPRE_AMOUNT, 
					ADD_DEPRE_AMOUNT, 
					ADD_DEPRE_MONTH,  
					CUR_MONEY,        
					FORE_MONEY,       
					OPERATOR,         
					DEAL_DATE,        
					EQUI_DEPRE_CODE,  
					NOTE             
		) select 	GROUP_ID,        
					HOS_ID,          
					COPY_CODE,       
					DEPRE_NO,        
					DEPRE_YEAR,      
					DEPRE_MONTH,     
					ASS_CARD_NO,     
					SOURCE_ID,       
					USE_DEPT_ID,     
					USE_DEPT_NO,     
					USE_PERCENT,     
					PRIM_MONEY,      
					NOW_DEPRE_AMOUNT,
					ADD_DEPRE_AMOUNT,
					ADD_DEPRE_MONTH, 
					CUR_MONEY,       
					FORE_MONEY,      
					OPERATOR,        
					DEAL_DATE,       
					EQUI_DEPRE_CODE, 
					NOTE            
			from ass_depre_manage_init_land
			where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
			<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_depre_manage_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.depre_no = depre_no
		  			and  t.DEPRE_YEAR = DEPRE_YEAR and t.DEPRE_MONTH = DEPRE_MONTH
				  	)
			</if>
			;	
			
			end;				
	</insert>
	
	
	<!-- 资产附件 -->
	<insert id="addAccessoryAccount" parameterType="java.util.Map">
			begin
			
				insert into ass_accessory_special(
						GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						ACCESSORY_CODE,   
						ACCESSORY_NAME,   
						ACCESSORY_AMOUNT, 
						ACCESSORY_PRICE,  
						ACCESSORY_MONEY,  
						NATURS_CODE,      
						ACCESSORY_CARD_NO,
						SPELL_CODE,       
						WBX_CODE,         
						NOTE,             
						IS_STOP          
				)select GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						ACCESSORY_CODE,   
						ACCESSORY_NAME,   
						ACCESSORY_AMOUNT, 
						ACCESSORY_PRICE,  
						ACCESSORY_MONEY,  
						NATURS_CODE,      
						ACCESSORY_CARD_NO,
						SPELL_CODE,       
						WBX_CODE,         
						NOTE,             
						IS_STOP
				from ass_accessory_init_special
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_accessory_special t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.accessory_code = accessory_code
				  	)
				</if>
				;
				
				insert into ass_accessory_general(
							GROUP_ID,         
							HOS_ID,           
							COPY_CODE,        
							ASS_CARD_NO,      
							ACCESSORY_CODE,   
							ACCESSORY_NAME,   
							ACCESSORY_AMOUNT, 
							ACCESSORY_PRICE,  
							ACCESSORY_MONEY,  
							NATURS_CODE,      
							ACCESSORY_CARD_NO,
							SPELL_CODE,       
							WBX_CODE,         
							NOTE,             
							IS_STOP          
				)select GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						ACCESSORY_CODE,   
						ACCESSORY_NAME,   
						ACCESSORY_AMOUNT, 
						ACCESSORY_PRICE,  
						ACCESSORY_MONEY,  
						NATURS_CODE,      
						ACCESSORY_CARD_NO,
						SPELL_CODE,       
						WBX_CODE,         
						NOTE,             
						IS_STOP
				from ass_accessory_init_general
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_accessory_general t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.accessory_code = accessory_code
				  	)
				</if>
				;
				
				insert into ass_accessory_house(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					ASS_CARD_NO,      
					ACCESSORY_CODE,   
					ACCESSORY_NAME,   
					ACCESSORY_AMOUNT, 
					ACCESSORY_PRICE,  
					ACCESSORY_MONEY,  
					NATURS_CODE,      
					ACCESSORY_CARD_NO,
					SPELL_CODE,       
					WBX_CODE,         
					NOTE,             
					IS_STOP          
				)select GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						ACCESSORY_CODE,   
						ACCESSORY_NAME,   
						ACCESSORY_AMOUNT, 
						ACCESSORY_PRICE,  
						ACCESSORY_MONEY,  
						NATURS_CODE,      
						ACCESSORY_CARD_NO,
						SPELL_CODE,       
						WBX_CODE,         
						NOTE,             
						IS_STOP
				from ass_accessory_init_house
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_accessory_house t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.accessory_code = accessory_code
				  	)
				</if>
				;
				
				
				insert into ass_accessory_other(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					ASS_CARD_NO,      
					ACCESSORY_CODE,   
					ACCESSORY_NAME,   
					ACCESSORY_AMOUNT, 
					ACCESSORY_PRICE,  
					ACCESSORY_MONEY,  
					NATURS_CODE,      
					ACCESSORY_CARD_NO,
					SPELL_CODE,       
					WBX_CODE,         
					NOTE,             
					IS_STOP          
				)select GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						ACCESSORY_CODE,   
						ACCESSORY_NAME,   
						ACCESSORY_AMOUNT, 
						ACCESSORY_PRICE,  
						ACCESSORY_MONEY,  
						NATURS_CODE,      
						ACCESSORY_CARD_NO,
						SPELL_CODE,       
						WBX_CODE,         
						NOTE,             
						IS_STOP
				from ass_accessory_init_other
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_accessory_other t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.accessory_code = accessory_code
				  	)
				</if>
				;
				
				
				insert into ass_accessory_inassets(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					ASS_CARD_NO,      
					ACCESSORY_CODE,   
					ACCESSORY_NAME,   
					ACCESSORY_AMOUNT, 
					ACCESSORY_PRICE,  
					ACCESSORY_MONEY,  
					NATURS_CODE,      
					ACCESSORY_CARD_NO,
					SPELL_CODE,       
					WBX_CODE,         
					NOTE,             
					IS_STOP          
				)select GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					ASS_CARD_NO,      
					ACCESSORY_CODE,   
					ACCESSORY_NAME,   
					ACCESSORY_AMOUNT, 
					ACCESSORY_PRICE,  
					ACCESSORY_MONEY,  
					NATURS_CODE,      
					ACCESSORY_CARD_NO,
					SPELL_CODE,       
					WBX_CODE,         
					NOTE,             
					IS_STOP
				from ass_accessory_init_inassets
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_accessory_inassets t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.accessory_code = accessory_code
				  	)
				</if>
				;
				
				
				insert into ass_accessory_land(
					GROUP_ID,         
					HOS_ID,           
					COPY_CODE,        
					ASS_CARD_NO,      
					ACCESSORY_CODE,   
					ACCESSORY_NAME,   
					ACCESSORY_AMOUNT, 
					ACCESSORY_PRICE,  
					ACCESSORY_MONEY,  
					NATURS_CODE,      
					ACCESSORY_CARD_NO,
					SPELL_CODE,       
					WBX_CODE,         
					NOTE,             
					IS_STOP          
				)select GROUP_ID,         
						HOS_ID,           
						COPY_CODE,        
						ASS_CARD_NO,      
						ACCESSORY_CODE,   
						ACCESSORY_NAME,   
						ACCESSORY_AMOUNT, 
						ACCESSORY_PRICE,  
						ACCESSORY_MONEY,  
						NATURS_CODE,      
						ACCESSORY_CARD_NO,
						SPELL_CODE,       
						WBX_CODE,         
						NOTE,             
						IS_STOP
				from ass_accessory_init_land
				
				where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
				<if test="isfg == 0">
		  			and not exists (
		  			select 1 from ass_accessory_land t where t.group_id = group_id and t.hos_id = hos_id and t.copy_code = copy_code and t.ass_card_no = ass_card_no and t.accessory_code = accessory_code
				  	)
				</if>
				;
			
			end;				
	</insert>
	
	<insert id="addCardInitFlag" parameterType="java.util.Map">
	declare
			nums integer;
	begin
		
	select count(1) into nums from ass_card_init_flag where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code};
	
		if  nums = 0 then
			delete from ass_card_init_flag where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code};
			
			insert into ass_card_init_flag(group_id,hos_id,copy_code,ass_naturs,acc_year,acc_month,year_month,init_date)
			select #{group_id},#{hos_id},#{copy_code},'01',#{acc_year},#{acc_month},#{year_month},to_date(#{init_date},'YYYY-MM-DD') from dual
			union all
			select #{group_id},#{hos_id},#{copy_code},'02',#{acc_year},#{acc_month},#{year_month},to_date(#{init_date},'YYYY-MM-DD') from dual
			union all
			select #{group_id},#{hos_id},#{copy_code},'03',#{acc_year},#{acc_month},#{year_month},to_date(#{init_date},'YYYY-MM-DD') from dual
			union all
			select #{group_id},#{hos_id},#{copy_code},'04',#{acc_year},#{acc_month},#{year_month},to_date(#{init_date},'YYYY-MM-DD') from dual
			union all
			select #{group_id},#{hos_id},#{copy_code},'05',#{acc_year},#{acc_month},#{year_month},to_date(#{init_date},'YYYY-MM-DD') from dual
			union all
			select #{group_id},#{hos_id},#{copy_code},'06',#{acc_year},#{acc_month},#{year_month},to_date(#{init_date},'YYYY-MM-DD') from dual;
		end if;
	end;
	</insert>
</mapper>