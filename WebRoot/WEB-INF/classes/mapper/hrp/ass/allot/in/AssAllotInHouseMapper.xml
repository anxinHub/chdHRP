<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.allot.in.AssAllotInHouseMapper">
	
	<resultMap id="assAllotInHouse" type="com.chd.hrp.ass.entity.allot.in.AssAllotInHouse">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="allot_in_no" column="allot_in_no"/>
	<result property="out_group_id" column="out_group_id"/>
	<result property="out_hos_id" column="out_hos_id"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="assAllotInHouseMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="allot_in_no" column="allot_in_no"/>
	<result property="out_group_id" column="out_group_id"/>
	<result property="out_hos_id" column="out_hos_id"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="dept_id" column="dept_id"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	<result property="state_name" column="state_name"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="note_detail" column="note_detail"/>
	<result property="ass_ori_card_no" column="ass_ori_card_no"/>
	<result property="out_hos_name" column="out_hos_name"/>
	<result property="out_group_name" column="out_group_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_ALLOT_IN_House (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="allot_in_no != null and allot_in_no != ''">
		allot_in_no
		,
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		out_group_id
		,
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		out_hos_id
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		to_number(#{group_id})
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		to_number(#{hos_id})
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="allot_in_no != null and allot_in_no != ''">
		#{allot_in_no}
		,
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		to_number(#{out_group_id})
		,
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		to_number(#{out_hos_id})
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_ALLOT_IN_House (
		group_id
		,
		hos_id
		,
		copy_code
		,
		allot_in_no
		,
		out_group_id
		,
		out_hos_id
		,
		price
		,
		add_depre
		,
		cur_money
		,
		fore_money
		,
		create_emp
		,
		create_date
		,
		state
		,
		note
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.allot_in_no}
			,
			#{item.out_group_id}
			,
			#{item.out_hos_id}
			,
			#{item.price}
			,
			#{item.add_depre}
			,
			#{item.cur_money}
			,
			#{item.fore_money}
			,
			#{item.create_emp}
			,
			#{item.create_date}
			,
			#{item.state}
			,
			#{item.note}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_allot_in_House 
		<trim prefix="SET"  suffixOverrides=","> 
			<if test="out_group_id != null and out_group_id != ''">
			out_group_id = #{out_group_id}
			,
			</if>
			<if test="out_hos_id != null and out_hos_id != ''">
			out_hos_id = #{out_hos_id}
			,
			</if>
			<if test="create_date != null and create_date != ''">
			create_date = to_date(#{create_date},'YYYY-MM-DD')
			,
			</if>
			<if test="note != null and note != ''">
			note = #{note}
			,
			</if>
			<if test="note == null and note == ''">
			note = null
			,
			</if>
		</trim>
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code}
			</if>
			<if test="allot_in_no != null and allot_in_no != ''">
			AND allot_in_no = #{allot_in_no}
			</if>
		</where>  
	</update>
	
	
	<update id="updateInMoney" parameterType="java.util.Map">
	
		UPDATE ass_allot_in_House 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="price != null and price != ''">
		price = #{price}
		,
		</if>
		<if test="add_depre != null and add_depre != ''">
		add_depre = #{add_depre}
		,
		</if>
		<if test="cur_money != null and cur_money != ''">
		cur_money = #{cur_money}
		,
		</if>
		<if test="fore_money != null and fore_money != ''">
		fore_money = #{fore_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="allot_in_no != null and allot_in_no != ''">
		AND allot_in_no = #{allot_in_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_allot_in_House  set
			state = 2,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND allot_in_no = #{item.allot_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_allot_in_House  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND allot_in_no = #{item.allot_in_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_allot_in_House  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND allot_in_no = #{item.allot_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_allot_in_House 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.out_group_id != null and item.out_group_id != ''">
			out_group_id = #{item.out_group_id}
			,
			</if>
			<if test="item.out_hos_id != null and item.out_hos_id != ''">
			out_hos_id = #{item.out_hos_id}
			,
			</if>
			<if test="item.price != null and item.price != ''">
			price = #{item.price}
			,
			</if>
			<if test="item.add_depre != null and item.add_depre != ''">
			add_depre = #{item.add_depre}
			,
			</if>
			<if test="item.cur_money != null and item.cur_money != ''">
			cur_money = #{item.cur_money}
			,
			</if>
			<if test="item.fore_money != null and item.fore_money != ''">
			fore_money = #{item.fore_money}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.allot_in_no != null and item.allot_in_no != ''">
			AND allot_in_no = #{item.allot_in_no}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_allot_in_House 
		<where>                     
		group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND allot_in_no = #{allot_in_no}
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_allot_in_House 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				AND hos_id = #{item.hos_id}
				AND copy_code = #{item.copy_code}
				AND allot_in_no = #{item.allot_in_no}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assAllotInHouse" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_in_no,
			a.out_group_id,
			sg.group_name out_group_name,
			a.out_hos_id,
			hi.hos_name out_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note,
            nvl(alms.is_import, 0) as is_import
		FROM ASS_ALLOT_IN_House a
		
		left join sys_group sg on
		a.out_group_id = sg.group_id
		
		left join hos_info hi on
		a.out_group_id = hi.group_id
		and a.out_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
	     left join (select a.group_id,
                           a.hos_id,
                           a.copy_code,
                           a.allot_in_no,
                           case
                             when count(1) > 0 then
                              1
                             else
                              0
                           end as is_import
                      from ass_allot_map_House a
                      left join ASS_ALLOT_IN_House b
                        on a.group_id = b.group_id
                       and a.hos_id = b.hos_id
                       and a.copy_code = b.copy_code
                       and a.allot_in_no = b.allot_in_no
                     group by a.group_id, a.hos_id, a.copy_code, a.allot_in_no) alms
           				on  a.group_id = alms.group_id
					    and a.hos_id = alms.hos_id
					    and a.copy_code = alms.copy_code
					    and a.allot_in_no = alms.allot_in_no
		
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="allot_in_no != null and allot_in_no != ''">
			AND a.allot_in_no = #{allot_in_no}
			</if>
			<if test="out_group_id != null and out_group_id != ''">
			AND a.out_group_id = #{out_group_id}
			</if>
			<if test="out_hos_id != null and out_hos_id != ''">
			AND a.out_hos_id = #{out_hos_id}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="add_depre != null and add_depre != ''">
			AND a.add_depre = #{add_depre}
			</if>
			<if test="cur_money != null and cur_money != ''">
			AND a.cur_money = #{cur_money}
			</if>
			<if test="fore_money != null and fore_money != ''">
			AND a.fore_money = #{fore_money}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != ''">
			AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
			</if>
			<if test="create_date_end != null and create_date_end != ''">
			AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != ''">
			AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
			</if>
			<if test="audit_date_end != null and audit_date_end != ''">
			AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>   
		union all
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null allot_in_no,
		      null out_group_id,
		      null out_group_name,
		      null out_hos_id,
		      null out_hos_name,
		      sum(a.price) price,
		      sum(a.add_depre) add_depre,
		      sum(a.cur_money) cur_money,
		      sum(a.fore_money) fore_money,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      null state,
		      null state_name,
		      '合计' note,
               0    is_import
		    FROM ASS_ALLOT_IN_House a
			<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="allot_in_no != null and allot_in_no != ''">
			AND a.allot_in_no = #{allot_in_no}
			</if>
			<if test="out_group_id != null and out_group_id != ''">
			AND a.out_group_id = #{out_group_id}
			</if>
			<if test="out_hos_id != null and out_hos_id != ''">
			AND a.out_hos_id = #{out_hos_id}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="add_depre != null and add_depre != ''">
			AND a.add_depre = #{add_depre}
			</if>
			<if test="cur_money != null and cur_money != ''">
			AND a.cur_money = #{cur_money}
			</if>
			<if test="fore_money != null and fore_money != ''">
			AND a.fore_money = #{fore_money}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != ''">
			AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
			</if>
			<if test="create_date_end != null and create_date_end != ''">
			AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != ''">
			AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
			</if>
			<if test="audit_date_end != null and audit_date_end != ''">
			AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>  ) t
		order by t.allot_in_no desc
	</select>
	
	<select id="queryAssAllotInHouseByAssInNo" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_in_no as id,
			a.allot_in_no,
			a.out_group_id,
			sg.group_name out_group_name,
			a.out_hos_id,
			hi.hos_name out_hos_name,
			to_char(a.price,'FM999,999,990.00') price,
			to_char(a.add_depre,'FM999,999,990.00') add_depre,
			to_char(a.cur_money,'FM999,999,990.00') cur_money,
			to_char(a.fore_money,'FM999,999,990.00') fore_money,
			su1.user_name as create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			su2.user_name audit_emp,
			to_char(a.audit_date,'yyyy-mm-dd') audit_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end as state,
			a.note
		FROM ASS_ALLOT_IN_House a
		
		left join sys_group sg on
		a.out_group_id = sg.group_id
		
		left join hos_info hi on
		a.out_group_id = hi.group_id
		and a.out_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		 
		 where                      
				a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.allot_in_no in(${allot_in_no})
			order by a.allot_in_no asc
	</select>
	
	
	<select id="queryAssAllotInHouseDetailByAssInNo" parameterType="java.util.Map" resultType="java.util.Map" >
		select t5.allot_in_no as id,
			       t5.ass_id,
			       t5.ass_no,
			       b.ass_code as ass_code,
			       b.ass_name as ass_name,
			       t5.ass_ori_card_no,
			       to_char(t5.price,'FM999,999,990.00')  price_detail,
			       to_char(t5.add_depre,'FM999,999,990.00')  add_depre_detail,
			       t5.add_depre_month,
			       to_char(t5.cur_money,'FM999,999,990.00')  cur_money_detail,
			       to_char(t5.fore_money ,'FM999,999,990.00') fore_money_detail,
			       t5.note note_detail,
			       to_char(price_sum, 'FM999,999,990.00') price_sum,
			       to_char(zc_price, 'FM999,999,990.00') zc_price,
			       to_char(cz_price, 'FM999,999,990.00') cz_price,
			       to_char(ky_price, 'FM999,999,990.00') ky_price,
			       to_char(jx_price, 'FM999,999,990.00') jx_price
			  from (select t3.source_id,
			               t3.group_id,
			               t3.hos_id,
			               t3.copy_code,
			               sum(t3.price) sum_price,
			               sum(t2.price) price_sum,
			               t2.ass_id,
			               t2.ass_no,
			               t2.ass_in_no
			          from ass_card_house t2
			        
			          left join ass_resource_house t3
			            on t3.ass_card_no = t2.ass_card_no
			           and t3.group_id = t2.group_id
			           and t3.hos_id = t3.hos_id
			           and t3.copy_code = t2.copy_code
			        where                    
						t2.group_id = #{group_id,jdbcType=INTEGER}
					AND t2.hos_id = #{hos_id,jdbcType=INTEGER}
					AND t2.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND t2.ass_in_no in (${allot_in_no})
			         group by t3.source_id,
			                  t2.ass_id,
			                  t2.ass_no,
			                  t3.group_id,
			                  t3.hos_id,
			                  t2.ass_in_no,
			                  t3.copy_code) pivot(sum(sum_price) as price for source_id in('1' as ZC,
			                                                                               '2' as CZ,
			                                                                               '3' as KY,
			                                                                               '4' as JX)) t
				  left join ass_allot_in_detail_house t5
				    on t.ass_id = t5.ass_id
				   and t5.group_id = t.group_id
				   and t5.hos_id = t.hos_id
				   and t5.copy_code = t.copy_code
				   and t5.allot_in_no = t.ass_in_no
				  left join ass_no_dict b
				    on t5.group_id = b.group_id
				   and t5.hos_id = b.hos_id
				   and t5.copy_code = b.copy_code
				   and t5.ass_id = b.ass_id
				   and b.is_stop = 0
					where                    
						t5.group_id = #{group_id,jdbcType=INTEGER}
					AND t5.hos_id = #{hos_id,jdbcType=INTEGER}
					AND t5.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND t5.allot_in_no in (${allot_in_no})
					 group by t5.allot_in_no,
					          t5.ass_id,
					          t5.ass_no,
					          b.ass_code,
					          b.ass_name,
					          t5.ass_ori_card_no,
					          t5.price,
					          t5.add_depre,
					          t5.add_depre_month,
					          t5.cur_money,
					          t5.fore_money,
					          t5.note,
					          price_sum,
					          zc_price,
					          cz_price,
					          ky_price,
					          jx_price
					order by t5.allot_in_no asc
	
	
		<!-- SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.allot_in_no as id,
		a.ass_id,
		a.ass_no,
		b.ass_code as ass_code,
		b.ass_name as ass_name,
		a.ass_ori_card_no,
		a.price as price_detail,
		a.add_depre as add_depre_detail,
		a.add_depre_month,
		a.cur_money as cur_money_detail,
		a.fore_money as fore_money_detail,
		a.note
		from ass_allot_in_detail_house a
		left join ass_no_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		and a.ass_id = b.ass_id
		and b.is_stop = 0
		where                    
			a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.allot_in_no in (${allot_in_no}) -->
	</select>
	
	<select id="queryByCode" resultMap="assAllotInHouse"  parameterType="java.util.Map" >
		select 
		a.group_id,
			a.hos_id,
			a.copy_code,
			a.allot_in_no,
			a.out_group_id,
			sg.group_name out_group_name,
			a.out_hos_id,
			hi.hos_name out_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note
		FROM ASS_ALLOT_IN_House a
		
		left join sys_group sg on
		a.out_group_id = sg.group_id
		
		left join hos_info hi on
		a.out_group_id = hi.group_id
		and a.out_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		WHERE 
		a.group_id = #{group_id}   and 
		a.hos_id = #{hos_id}   and 
		a.copy_code = #{copy_code}   and 
		a.allot_in_no = #{allot_in_no} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assAllotInHouse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		allot_in_no,
		out_group_id,
		out_hos_id,
		price,
		add_depre,
		cur_money,
		fore_money,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note
		FROM ASS_ALLOT_IN_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="allot_in_no != null and allot_in_no != ''">
		AND allot_in_no = #{allot_in_no}
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		AND out_group_id = #{out_group_id}
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		AND out_hos_id = #{out_hos_id}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assAllotInHouse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		allot_in_no,
		out_group_id,
		out_hos_id,
		price,
		add_depre,
		cur_money,
		fore_money,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note
		FROM ASS_ALLOT_IN_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="allot_in_no != null and allot_in_no != ''">
		AND allot_in_no = #{allot_in_no}
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		AND out_group_id = #{out_group_id}
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		AND out_hos_id = #{out_hos_id}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryDept" parameterType="java.util.Map" resultMap="assAllotInHouseMap">
	select a.dept_id,c.ass_card_no,b.group_id,b.hos_id,b.copy_code from ASS_ALLOT_IN_House b
      left join ASS_CARD_HOUSE c
      on b.group_id=c.group_id
      and b.hos_id = c.hos_id
      and b.copy_code = c.copy_code
       and b.allot_in_no = c.ASS_IN_NO 
       left join ASS_SHARE_DEPT_HOUSE a
       on a.ass_card_no =c.ass_card_no
       and a.group_id =c.group_id
       and a.hos_id = c.hos_id
       and a.copy_code =c.copy_code
		 where
		  	b.group_id=#{group_id,jdbcType=INTEGER} and
			 b.hos_id=#{hos_id,jdbcType=INTEGER} and
			 b.copy_code=#{copy_code,jdbcType=VARCHAR} 
			 <if test="allot_in_no != null and allot_in_no != ''">
			AND b.allot_in_no = #{allot_in_no,jdbcType=VARCHAR}
		</if>
	
	</select>
	
	
		
		<!-- 状态查询  （打印时校验数据专用） -->
	<select id="queryAssAllotInHouseStates" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT allot_in_no  FROM ASS_ALLOT_IN_House 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="allot_in_no != null and allot_in_no != ''">
			AND allot_in_no in  (${allot_in_no})
			</if>
		
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	<!-- 明细查询 -->
	<select id="queryDetails" resultMap="assAllotInHouseMap" parameterType="java.util.Map">
	
		with detail_tmp as
						 (select
						  
						   a.group_id,
						   a.hos_id,
						   a.copy_code,
						   a.allot_in_no,
						   
						   a.out_group_id,
						   d.group_name   out_group_name,
						   a.out_hos_id,
						   e.hos_name     out_hos_name,
						   
						   b.price,
						   b.add_depre,
						   b.cur_money,
						   b.fore_money,
						   a.create_emp,
						   su1.user_name create_emp_name,
						   a.create_date,
						   a.audit_emp,
						   su2.user_name audit_emp_name,
						   a.audit_date,
						   a.state,
						   case
						     when a.state = 0 then
						      '新建'
						     when a.state = 1 then
						      '审核'
						     when a.state = 2 then
						      '入库确认'
						     else
						      ''
						   end state_name,
						   a.note,
						   b. ass_id,
						   b.ass_no,
						   f.ass_code,
						   f.ass_name,
						   b.ass_ori_card_no,
						   
						   b.note note_detail
						  
						    from ASS_ALLOT_IN_house a
						    left join ASS_ALLOT_IN_DETAIL_house b
						      on a.group_id = b.group_id
						     and a.hos_id = b.hos_id
						     and a.copy_code = b.copy_code
						     and a.allot_in_no = b.allot_in_no
						    left join ass_no_dict f
						      on a.group_id = f.group_id
						     and b.hos_id = f.hos_id
						     and b.copy_code = f.copy_code
						     and b.ass_id = f.ass_id
						     and f.is_stop = 0
						    left join sys_group d
						      on d.group_id = a.out_group_id
						    left join hos_info e
						      on a.out_group_id = e.group_id
						     and a.out_hos_id = e.hos_id
						    left join sys_user su1
						      on a.group_id = su1.group_id
						     and a.hos_id = su1.hos_id
						     and a.create_emp = su1.user_id
						  
						    left join sys_user su2
						      on a.group_id = su2.group_id
						     and a.hos_id = su2.hos_id
						     and a.audit_emp = su2.user_id
						     <where>                     
									<if test="group_id != null and group_id != ''">
									AND a.group_id = #{group_id}
									</if>
									<if test="hos_id != null and hos_id != ''">
									AND a.hos_id = #{hos_id}
									</if>
									<if test="copy_code != null and copy_code != ''">
									AND a.copy_code = #{copy_code}
									</if>
									<if test="allot_in_no != null and allot_in_no != ''">
									AND a.allot_in_no = #{allot_in_no}
									</if>
									<if test="out_group_id != null and out_group_id != ''">
									AND a.out_group_id = #{out_group_id}
									</if>
									<if test="out_hos_id != null and out_hos_id != ''">
									AND a.out_hos_id = #{out_hos_id}
									</if>
									<if test="price != null and price != ''">
									AND a.price = #{price}
									</if>
									<if test="add_depre != null and add_depre != ''">
									AND a.add_depre = #{add_depre}
									</if>
									<if test="cur_money != null and cur_money != ''">
									AND a.cur_money = #{cur_money}
									</if>
									<if test="fore_money != null and fore_money != ''">
									AND a.fore_money = #{fore_money}
									</if>
									<if test="create_emp != null and create_emp != ''">
									AND a.create_emp = #{create_emp}
									</if>
									<if test="create_date_beg != null and create_date_beg != ''">
									AND a.create_date &gt;= to_date(#{create_date_beg},'YYYY-MM-DD') 
									</if>
									<if test="create_date_end != null and create_date_end != ''">
									AND a.create_date &lt;= to_date(#{create_date_end},'YYYY-MM-DD')
									</if>
									<if test="audit_emp != null and audit_emp != ''">
									AND a.audit_emp = #{audit_emp}
									</if>
									<if test="audit_date_beg != null and audit_date_beg != ''">
									AND a.audit_date &gt;= to_date(#{audit_date_beg},'YYYY-MM-DD')
									</if>
									<if test="audit_date_end != null and audit_date_end != ''">
									AND a.audit_date &lt;= to_date(#{audit_date_end},'YYYY-MM-DD')
									</if>
									<if test="state != null and state != ''">
									AND a.state = #{state}
									</if>
									<if test="note != null and note != ''">
									AND a.note = #{note}
									</if>
								</where>   
						     ),
						sum_tmp as
						 (select null group_id,
						         null hos_id,
						         null copy_code,
						         null allot_in_no,
						         
						         null out_group_id,
						         null out_group_name,
						         null out_hos_id,
						         null out_hos_name,
						         
						         sum(price) price,
						         sum(add_depre) add_depre,
						         sum(cur_money) cur_money,
						         sum(fore_money) fore_money,
						         null create_emp,
						         null create_emp_name,
						         null create_date,
						         null audit_emp,
						         null audit_emp_name,
						         null audit_date,
						         null state,
						         null state_name,
						         '合计' note,
						         null ass_id,
						         null ass_no,
						         null ass_code,
						         null ass_name,
						         null ass_ori_card_no,
						         
						         null note_detail
						    from detail_tmp)
						
						select group_id,
						       hos_id,
						       copy_code,
						       allot_in_no,
						       
						       out_group_id,
						       out_group_name,
						       out_hos_id,
						       out_hos_name,
						       
						       price,
						       add_depre,
						       cur_money,
						       fore_money,
						       create_emp,
						       create_emp_name,
						       create_date,
						       audit_emp,
						       audit_emp_name,
						       audit_date,
						       state,
						       state_name,
						       note,
						       ass_id,
						       ass_no,
						       ass_code,
						       ass_name,
						       ass_ori_card_no,
						       
						       note_detail
						  from detail_tmp
						union all
						select group_id,
						       hos_id,
						       copy_code,
						       allot_in_no,
						       
						       out_group_id,
						       out_group_name,
						       out_hos_id,
						       out_hos_name,
						       
						       price,
						       add_depre,
						       cur_money,
						       fore_money,
						       create_emp,
						       create_emp_name,
						       create_date,
						       audit_emp,
						       audit_emp_name,
						       audit_date,
						       state,
						       state_name,
						       note,
						       ass_id,
						       ass_no,
						       ass_code,
						       ass_name,
						       ass_ori_card_no,
						       
						       note_detail
						  from sum_tmp
						
						 order by allot_in_no desc
		
	
	
	</select>
</mapper>

