<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.bill.back.AssBackBillDetailMapper">
	
	<resultMap id="assBackBillDetail" type="com.chd.hrp.ass.entity.bill.back.AssBackBillDetail">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="bill_no" column="bill_no"/>
	<result property="naturs_code" column="naturs_code"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="bill_money" column="bill_money"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="assBackBillDetailMap" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="bill_no" column="bill_no"/>
		<result property="naturs_code" column="naturs_code"/>
		<result property="ass_card_no" column="ass_card_no"/>
		<result property="bill_money" column="bill_money"/>
		<result property="pay_plan_money" column="pay_plan_money"/>
		<result property="pay_money" column="pay_money"/>
		<result property="unpay_money" column="unpay_money"/>
		<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_BACK_BILL_DETAIL (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="bill_no != null and bill_no != ''">
		bill_no
		,
		</if>
		<if test="naturs_code != null and naturs_code != ''">
		naturs_code
		,
		</if>
		<if test="ass_card_no != null and ass_card_no != ''">
		ass_card_no
		,
		</if>
		<if test="bill_money != null and bill_money != ''">
		bill_money
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="bill_no != null and bill_no != ''">
		#{bill_no}
		,
		</if>
		<if test="naturs_code != null and naturs_code != ''">
		#{naturs_code}
		,
		</if>
		<if test="ass_card_no != null and ass_card_no != ''">
		#{ass_card_no}
		,
		</if>
		<if test="bill_money != null and bill_money != ''">
		#{bill_money}
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_BACK_BILL_DETAIL (
		group_id
		,
		hos_id
		,
		copy_code
		,
		bill_no
		,
		naturs_code
		,
		ass_card_no
		,
		bill_money
		,
		note
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.bill_no}
			,
			#{item.naturs_code}
			,
			#{item.ass_card_no}
			,
			nvl(#{item.bill_money},0)
			,
			nvl(#{item.note},'')
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ASS_BACK_BILL_DETAIL 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="bill_money != null and bill_money != ''">
		bill_money = #{bill_money}
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		<if test="naturs_code != null and naturs_code != ''">
		AND naturs_code = #{naturs_code}
		</if>
		<if test="ass_card_no != null and ass_card_no != ''">
		AND ass_card_no = #{ass_card_no}
		</if>
		</where>  
	</update>
	
	<update id="updateBillMoney" parameterType="java.util.Map">
	
		UPDATE ASS_BACK_BILL_DETAIL  set
		bill_money = #{bill_money}
		<where>                     
		AND group_id = #{group_id}
		AND hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND bill_no = #{bill_no}
		AND naturs_code = #{naturs_code}
		AND ass_card_no = #{ass_card_no}
		</where>  
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_BILL_DETAIL 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.bill_money != null and item.bill_money != ''">
			bill_money = #{item.bill_money}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.bill_no != null and item.bill_no != ''">
			AND bill_no = #{item.bill_no}
			</if>  
			<if test="item.naturs_code != null and item.naturs_code != ''">
			AND naturs_code = #{item.naturs_code}
			</if>  
			<if test="item.ass_card_no != null and item.ass_card_no != ''">
			AND ass_card_no = #{item.ass_card_no}
			</if>  
			<if test="item.bill_money != null and item.bill_money != ''">
			AND bill_money = #{item.bill_money}
			</if>  
			<if test="item.note != null and item.note != ''">
			AND note = #{item.note}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ASS_BACK_BILL_DETAIL 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		<if test="naturs_code != null and naturs_code != ''">
		AND naturs_code = #{naturs_code}
		</if>
		<if test="ass_card_no != null and ass_card_no != ''">
		AND ass_card_no = #{ass_card_no}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ASS_BACK_BILL_DETAIL 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code}
				</if>
				<if test="item.bill_no != null and item.bill_no != ''">
				AND bill_no = #{item.bill_no}
				</if>
				<if test="item.naturs_code != null and item.naturs_code != ''">
				AND naturs_code = #{item.naturs_code}
				</if>
				<if test="item.ass_card_no != null and item.ass_card_no != ''">
				AND ass_card_no = #{item.ass_card_no}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assBackBillDetail" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.naturs_code,
			b.naturs_name,
			a.naturs_code||' '||b.naturs_name ass_nature,
			a.ass_card_no,
			d.ass_id,
			d.ass_no,
			d.ass_code,
			d.ass_name,
			a.bill_money,
			a.note
		FROM ASS_BACK_BILL_DETAIL a
		left join ass_naturs b on
		a.naturs_code = b.naturs_code
		
		left join (select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_general
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_special
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_house
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_inassets
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_land
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_other
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
						
						) c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.ass_card_no = c.ass_card_no
		
		left join ass_no_dict d on
		c.group_id = d.group_id
		and c.hos_id = d.hos_id
		and c.copy_code = d.copy_code
		and c.ass_id = d.ass_id
		and d.is_stop = 0
		
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no = #{bill_no}
			</if>
			<if test="naturs_code != null and naturs_code != ''">
			AND a.naturs_code = #{naturs_code}
			</if>
			<if test="ass_card_no != null and ass_card_no != ''">
			AND a.ass_card_no = #{ass_card_no}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>   
		order by a.ass_card_no asc
	</select>
	
	<select id="queryByBillNo" parameterType="java.util.Map" resultMap="assBackBillDetailMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.naturs_code,
			b.naturs_name,
			a.ass_card_no,
			d.ass_id,
			d.ass_no,
			d.ass_code,
			d.ass_name,
			a.bill_money,
			a.note
		FROM ASS_BACK_BILL_DETAIL a
		left join ass_naturs b on
		a.naturs_code = b.naturs_code
		
		left join (select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_general
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_special
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_house
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_inassets
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_land
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_other
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
						
						) c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.ass_card_no = c.ass_card_no
		
		left join ass_no_dict d on
		c.group_id = d.group_id
		and c.hos_id = d.hos_id
		and c.copy_code = d.copy_code
		and c.ass_id = d.ass_id
		and d.is_stop = 0
		
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.bill_no = #{bill_no}
		</where>   
	</select>
	
	<select id="queryByAll" parameterType="java.util.Map" resultMap="assBackBillDetailMap" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.naturs_code,
			a.ass_card_no,
			sum(a.bill_money) bill_money,
		    max(tt.pay_plan_money) pay_plan_money,
		    max(tt.pay_money) pay_money,
		    max(tt.unpay_money) unpay_money	 
		FROM ASS_BACK_BILL_DETAIL a
		left join (
			select * from (
			select group_id,
			       hos_id,
			       copy_code,
			       ass_card_no,
			       sum(pay_plan_money) pay_plan_money,
			       sum(pay_money) pay_money,
			       sum(unpay_money) unpay_money
			  from ass_pay_stage_general
			  	where group_id = #{group_id}
			  		  and hos_id = #{hos_id}
			  		  and copy_code = #{copy_code}
			  group by group_id,hos_id,copy_code,ass_card_no	
			union all
			select group_id,
			       hos_id,
			       copy_code,
			       ass_card_no,
			       sum(pay_plan_money) pay_plan_money,
			       sum(pay_money) pay_money,
			       sum(unpay_money) unpay_money
			  from ass_pay_stage_special
			  	where group_id = #{group_id}
			  		  and hos_id = #{hos_id}
			  		  and copy_code = #{copy_code}
			  group by group_id,hos_id,copy_code,ass_card_no		  
			union all
			select group_id,
			       hos_id,
			       copy_code,
			       ass_card_no,
			       sum(pay_plan_money) pay_plan_money,
			       sum(pay_money) pay_money,
			       sum(unpay_money) unpay_money
			  from ass_pay_stage_other
			  	where group_id = #{group_id}
			  		  and hos_id = #{hos_id}
			  		  and copy_code = #{copy_code}
			  group by group_id,hos_id,copy_code,ass_card_no		  
			union all
			select group_id,
			       hos_id,
			       copy_code,
			       ass_card_no,
			       sum(pay_plan_money) pay_plan_money,
			       sum(pay_money) pay_money,
			       sum(unpay_money) unpay_money
			  from ass_pay_stage_house
			  	where group_id = #{group_id}
			  		  and hos_id = #{hos_id}
			  		  and copy_code = #{copy_code}
			  group by group_id,hos_id,copy_code,ass_card_no		  
			union all
			select group_id,
			       hos_id,
			       copy_code,
			       ass_card_no,
			       sum(pay_plan_money) pay_plan_money,
			       sum(pay_money) pay_money,
			       sum(unpay_money) unpay_money
			  from ass_pay_stage_inassets
			  	where group_id = #{group_id}
			  		  and hos_id = #{hos_id}
			  		  and copy_code = #{copy_code}
			  group by group_id,hos_id,copy_code,ass_card_no		  
			union all
			select group_id,
			       hos_id,
			       copy_code,
			       ass_card_no,
			       sum(pay_plan_money) pay_plan_money,
			       sum(pay_money) pay_money,
			       sum(unpay_money) unpay_money
			  from ass_pay_stage_land
			  	where group_id = #{group_id}
			  		  and hos_id = #{hos_id}
			  		  and copy_code = #{copy_code}
			  group by group_id,hos_id,copy_code,ass_card_no		  
			) t	
		) tt on
			a.group_id = tt.group_id
			and a.hos_id = tt.hos_id
			and a.copy_code = tt.copy_code
			and a.ass_card_no = tt.ass_card_no
		<where>                     
			AND a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.bill_no = #{bill_no}
		</where>   
		group by a.group_id,a.hos_id,a.copy_code,a.naturs_code,a.ass_card_no
	</select>
	
	
	
	<select id="queryByCode" resultMap="assBackBillDetail"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		bill_no,
		naturs_code,
		ass_card_no,
		bill_money,
		note
		FROM ASS_BACK_BILL_DETAIL 
		WHERE 
		group_id = #{group_id}   and 
		hos_id = #{hos_id}   and 
		copy_code = #{copy_code}   and 
		bill_no = #{bill_no}   and 
		naturs_code = #{naturs_code}   and 
		ass_card_no = #{ass_card_no} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assBackBillDetail"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		bill_no,
		naturs_code,
		ass_card_no,
		bill_money,
		note
		FROM ASS_BACK_BILL_DETAIL 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		<if test="naturs_code != null and naturs_code != ''">
		AND naturs_code = #{naturs_code}
		</if>
		<if test="ass_card_no != null and ass_card_no != ''">
		AND ass_card_no = #{ass_card_no}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND bill_money = #{bill_money}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assBackBillDetail"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		bill_no,
		naturs_code,
		ass_card_no,
		bill_money,
		note
		FROM ASS_BACK_BILL_DETAIL 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no}
		</if>
		<if test="naturs_code != null and naturs_code != ''">
		AND naturs_code = #{naturs_code}
		</if>
		<if test="ass_card_no != null and ass_card_no != ''">
		AND ass_card_no = #{ass_card_no}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND bill_money = #{bill_money}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- <select id="queryByImportPay" parameterType="java.util.Map" resultMap="assBackBillDetail">
	SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.naturs_code,
			b.naturs_name,
			a.naturs_code||' '||b.naturs_name ass_nature,
			a.ass_card_no,
			d.ass_id,
			d.ass_no,
			d.ass_code,
			d.ass_name,
			a.bill_money,
			a.note
		FROM ASS_BACK_BILL_DETAIL a
		left join ass_naturs b on
		a.naturs_code = b.naturs_code
		
		left join (select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_general
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_special
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_house
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_inassets
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_land
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
			union all
			select group_id,hos_id,copy_code,ass_card_no,ass_id,ass_no from ass_card_other
				where   group_id = #{group_id}
						AND hos_id = #{hos_id}
						AND copy_code = #{copy_code}
						
						) c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.ass_card_no = c.ass_card_no
		
		left join ass_no_dict d on
		c.group_id = d.group_id
		and c.hos_id = d.hos_id
		and c.copy_code = d.copy_code
		and c.ass_id = d.ass_id
		and d.is_stop = 0
		
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND a.bill_no = #{bill_no}
			</if>
			<if test="naturs_code != null and naturs_code != ''">
			AND a.naturs_code = #{naturs_code}
			</if>
			<if test="ass_card_no != null and ass_card_no != ''">
			AND a.ass_card_no = #{ass_card_no}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND a.bill_money = #{bill_money}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>   
		order by a.ass_card_no asc
	</select> -->
</mapper>

