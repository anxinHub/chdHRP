<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.sell.out.AssSellOutHouseMapper">
	
	<resultMap id="assSellOutHouse" type="com.chd.hrp.ass.entity.sell.out.AssSellOutHouse">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="sell_out_no" column="sell_out_no"/>
	<result property="in_group_id" column="in_group_id"/>
	<result property="in_hos_id" column="in_hos_id"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="sell_price" column="sell_price"/>
	<result property="dispose_income" column="dispose_income"/>
	<result property="dispose_tax" column="dispose_tax"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="assSellOutHouseMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="sell_out_no" column="sell_out_no"/>
	<result property="in_group_id" column="in_group_id"/>
	<result property="in_hos_id" column="in_hos_id"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="sell_price" column="sell_price"/>
	<result property="dispose_income" column="dispose_income"/>
	<result property="dispose_tax" column="dispose_tax"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	
	
	<result property="add_manage_depre" column="add_manage_depre"/>
	<result property="add_depre_month" column="add_depre_month"/>
	<result property="now_depre" column="now_depre"/>
	<result property="now_manage_depre" column="now_manage_depre"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="state_name" column="state_name"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="in_hos_name" column="in_hos_name"/>
	<result property="in_group_name" column="in_group_name"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="bus_type_name" column="bus_type_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_SELL_OUT_House (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		sell_out_no
		,
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		in_group_id
		,
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		in_hos_id
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		#{sell_out_no}
		,
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		to_number(#{in_group_id})
		,
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		to_number(#{in_hos_id})
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		#{bus_type_code}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_SELL_OUT_House (
		group_id
		,
		hos_id
		,
		copy_code
		,
		sell_out_no
		,
		in_group_id
		,
		in_hos_id
		,
		bus_type_code
		,
		create_emp
		,
		create_date
		,
		state
		,
		note
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id}
			,
			#{item.hos_id}
			,
			#{item.copy_code}
			,
			#{item.sell_out_no}
			,
			#{item.in_group_id}
			,
			#{item.in_hos_id}
			,
			#{item.bus_type_code}
			,
			#{item.create_emp}
			,
			#{item.create_date}
			,
			#{item.state}
			,
			#{item.note}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_sell_out_House 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="in_group_id != null and in_group_id != ''">
		in_group_id = #{in_group_id}
		,
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		in_hos_id = #{in_hos_id}
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code = #{bus_type_code}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note}
		,
		</if>
		<if test="note == null and note == ''">
		note = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND sell_out_no = #{sell_out_no}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_sell_out_House 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.in_group_id != null and item.in_group_id != ''">
			in_group_id = #{item.in_group_id}
			,
			</if>
			<if test="item.in_hos_id != null and item.in_hos_id != ''">
			in_hos_id = #{item.in_hos_id}
			,
			</if>
			<if test="item.price != null and item.price != ''">
			price = #{item.price}
			,
			</if>
			<if test="item.add_depre != null and item.add_depre != ''">
			add_depre = #{item.add_depre}
			,
			</if>
			<if test="item.cur_money != null and item.cur_money != ''">
			cur_money = #{item.cur_money}
			,
			</if>
			<if test="item.fore_money != null and item.fore_money != ''">
			fore_money = #{item.fore_money}
			,
			</if>
			<if test="item.sell_price != null and item.sell_price != ''">
			sell_price = #{item.sell_price}
			,
			</if>
			<if test="item.dispose_income != null and item.dispose_income != ''">
			dispose_income = #{item.dispose_income}
			,
			</if>
			<if test="item.dispose_tax != null and item.dispose_tax != ''">
			dispose_tax = #{item.dispose_tax}
			,
			</if>
			<if test="item.create_emp != null and item.create_emp != ''">
			create_emp = #{item.create_emp}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code}
			</if>  
			<if test="item.sell_out_no != null and item.sell_out_no != ''">
			AND sell_out_no = #{item.sell_out_no}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_sell_out_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND sell_out_no = #{sell_out_no}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_sell_out_House 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code}
				</if>
				<if test="item.sell_out_no != null and item.sell_out_no != ''">
				AND sell_out_no = #{item.sell_out_no}
				</if>
			</foreach>
	    </where>  
	</delete>
	
	
	
	<update id="updateSellOutMoney" parameterType="java.util.Map">
	
		UPDATE ASS_SELL_OUT_House 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="price != null and price != ''">
		price = #{price}
		,
		</if>
		<if test="add_depre != null and add_depre != ''">
		add_depre = #{add_depre}
		,
		</if>
		<if test="cur_money != null and cur_money != ''">
		cur_money = #{cur_money}
		,
		</if>
		<if test="fore_money != null and fore_money != ''">
		fore_money = #{fore_money}
		,
		</if>
		<if test="sell_price != null and sell_price != ''">
		sell_price = #{sell_price}
		,
		</if>
		<if test="dispose_income != null and dispose_income != ''">
		dispose_income = #{dispose_income}
		,
		</if>
 		<if test="dispose_tax != null and dispose_tax != ''">
		dispose_tax = #{dispose_tax}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND sell_out_no = #{sell_out_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_SELL_OUT_House  set
			state = 2,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND sell_out_no = #{item.sell_out_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_SELL_OUT_House  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND sell_out_no = #{item.sell_out_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_SELL_OUT_House  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND sell_out_no = #{item.sell_out_no}
			</where>  			
		</foreach>
	</update>
	
	
	<select id="query" parameterType="java.util.Map" resultMap="assSellOutHouse" >
		select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_out_no,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.sell_price,
			a.dispose_income,
			a.dispose_tax,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '出库确认' else '' end state_name,
			a.note,
			a.bus_type_code,
			abtd.bus_type_name
		FROM ASS_SELL_OUT_House  a
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND a.sell_out_no = #{sell_out_no}
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		AND a.in_group_id = #{in_group_id}
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		AND a.in_hos_id = #{in_hos_id}
		</if>
		<if test="price != null and price != ''">
		AND a.price = #{price}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND a.add_depre = #{add_depre}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND a.cur_money = #{cur_money}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND a.fore_money = #{fore_money}
		</if>
		<if test="sell_price != null and sell_price != ''">
		AND a.sell_price = #{sell_price}
		</if>
		<if test="dispose_income != null and dispose_income != ''">
		AND a.dispose_income = #{dispose_income}
		</if>
		<if test="dispose_tax != null and dispose_tax != ''">
		AND a.dispose_tax = #{dispose_tax}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp}
		</if>
		<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
		AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND a.bus_type_code = #{bus_type_code}
		</if>
		</where>   
		union all
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null sell_out_no,
		      null in_group_id,
		      null in_group_name,
		      null in_hos_id,
		      null in_hos_name,
		      sum(a.price) price,
			  sum(a.add_depre) add_depre,
			  sum(a.cur_money) cur_money,
			  sum(a.fore_money) fore_money,
			  sum(a.sell_price) sell_price,
			  sum(a.dispose_income) dispose_income,
			  sum(a.dispose_tax) dispose_tax,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      null state,
		      null state_name,
		      '合计' note,
		      null bus_type_code,
		      null bus_type_name
		    FROM ASS_SELL_OUT_House a
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND a.sell_out_no = #{sell_out_no}
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		AND a.in_group_id = #{in_group_id}
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		AND a.in_hos_id = #{in_hos_id}
		</if>
		<if test="price != null and price != ''">
		AND a.price = #{price}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND a.add_depre = #{add_depre}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND a.cur_money = #{cur_money}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND a.fore_money = #{fore_money}
		</if>
		<if test="sell_price != null and sell_price != ''">
		AND a.sell_price = #{sell_price}
		</if>
		<if test="dispose_income != null and dispose_income != ''">
		AND a.dispose_income = #{dispose_income}
		</if>
		<if test="dispose_tax != null and dispose_tax != ''">
		AND a.dispose_tax = #{dispose_tax}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp}
		</if>
		<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
		AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND a.bus_type_code = #{bus_type_code}
		</if>
		</where>  ) t
		order by t.sell_out_no desc
	</select>
	
	
	
	<select id="queryAssSellOutHouseByAssInNo" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_out_no as id,
			a.sell_out_no,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			to_char(a.price,'FM999,999,990.00') price,
			to_char(a.add_depre,'FM999,999,990.00') add_depre,
			to_char(a.cur_money,'FM999,999,990.00') cur_money,
			to_char(a.fore_money,'FM999,999,990.00') fore_money,
			to_char(a.sell_price,'FM999,999,990.00') sell_price,
			to_char(a.dispose_income,'FM999,999,990.00') dispose_income,
			to_char(a.dispose_tax,'FM999,999,990.00') dispose_tax,
<!-- 			a.create_emp, -->
			su1.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			<!-- a.audit_emp, -->
			su2.user_name audit_emp,
			to_char(a.audit_date,'yyyy-mm-dd') back_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state,
			a.note,
		<!-- 	a.bus_type_code, -->
			abtd.bus_type_name as bus_type_code
		FROM ASS_SELL_OUT_House  a
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		where
			a.group_id = #{group_id}
		AND a.hos_id = #{hos_id}
		AND a.copy_code = #{copy_code}
		AND a.sell_out_no in (${sell_out_no})
		order by a.sell_out_no asc
	</select>
	
	<select id="queryAssSellOutHouseDetailByAssInNo" parameterType="java.util.Map" resultType="java.util.Map"  >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_out_no as id,
			a.ass_card_no,
			c.ass_id,
			c.ass_no,
			c.ass_code,
			c.ass_name,
			c.ass_model,
			c.ass_spec,
	      	d.fac_code,
	      	d.fac_name,
			c.ass_brand,
			to_char(a.price,'FM999,999,990.00') price_detail,
			to_char(a.now_depre,'FM999,999,990.00') now_depre,
			to_char(a.now_manage_depre,'FM999,999,990.00') now_manage_depre,
			to_char(a.add_depre,'FM999,999,990.00') add_depre_detail,
			to_char(a.add_manage_depre,'FM999,999,990.00') add_manage_depre,
			a.add_depre_month,
			to_char(a.cur_money,'FM999,999,990.00') cur_money_detail,
			to_char(a.fore_money,'FM999,999,990.00') fore_money_detail,
			to_char(a.sell_price,'FM999,999,990.00') sell_price,
			to_char(a.dispose_income,'FM999,999,990.00') dispose_income,
			to_char(a.dispose_tax,'FM999,999,990.00') dispose_tax,
			a.note
		FROM ASS_SELL_OUT_DETAIL_House a
		left join ass_card_House b on
			a.group_id = b.group_id
			and a.hos_id = b.hos_id
		    and a.copy_code = b.copy_code
		    and a.ass_card_no = b.ass_card_no
		    
		    left join ass_no_dict c on
		    b.group_id = c.group_id
		    and b.hos_id = c.hos_id
		    and b.copy_code = c.copy_code 
		    and b.ass_id = c.ass_id
		    and c.is_stop = 0
		    left join hos_fac_dict d
		    on c.group_id = d.group_id
		    and c.hos_id = d.hos_id
		    and c.fac_id = d.fac_id
		    and c.fac_no = d.fac_no
		    and d.is_stop = 0 
		    and d.is_disable = 0
		where                  
			a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.sell_out_no in (${sell_out_no})
		order by a.sell_out_no asc
	</select>
	
	<select  id="queryBySellInImport" parameterType="java.util.Map" resultMap="assSellOutHouse" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_out_no,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.sell_price,
			a.dispose_income,
			a.dispose_tax,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note,
			a.bus_type_code,
			abtd.bus_type_name
		FROM ASS_SELL_OUT_House a
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		<where>          
			AND a.group_id = #{out_group_id}
			AND a.hos_id = #{out_hos_id}
			<!-- AND a.out_store_id = #{out_store_id}
			AND a.out_store_no = #{out_store_no} -->
			and a.in_group_id = #{group_id}
			and a.in_hos_id = #{hos_id}
			and not exists (
				select 1 from ass_sell_map_House where
							out_group_id = a.in_group_id
							AND out_hos_id = a.in_hos_id
							and sell_out_no = a.sell_out_no
			)
			AND a.state = 2
			<if test="sell_out_no != null and sell_out_no != ''">
			AND a.sell_out_no = #{sell_out_no}
			</if>
			<if test="in_group_id != null and in_group_id != ''">
			AND a.in_group_id = #{in_group_id}
			</if>
			<if test="in_hos_id != null and in_hos_id != ''">
			AND a.in_hos_id = #{in_hos_id}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="bus_type_code != null and bus_type_code != ''">
			AND a.bus_type_code = #{bus_type_code}
			</if>
		</where>   
		order by a.sell_out_no desc
	</select>
	
	
	<select  id="queryBySellInImportView" parameterType="java.util.Map" resultMap="assSellOutHouse" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_out_no,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.sell_price,
			a.dispose_income,
			a.dispose_tax,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note,
			a.bus_type_code,
			abtd.bus_type_name
		FROM ASS_sell_OUT_House a
		
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_sell_map_House alms on
		a.group_id = alms.group_id
		and a.hos_id = alms.hos_id
		and a.copy_code = alms.copy_code
		and a.sell_out_no = alms.sell_out_no
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		<where>          
			AND a.group_id = #{out_group_id}
			AND a.hos_id = #{out_hos_id}
			<!-- AND a.out_store_id = #{out_store_id}
			AND a.out_store_no = #{out_store_no} -->
			and a.in_group_id = #{group_id}
			and a.in_hos_id = #{hos_id}
			and alms.sell_out_no = #{sell_out_no}
			AND a.state = 2
			<if test="sell_out_no != null and sell_out_no != ''">
			AND a.sell_out_no = #{sell_out_no}
			</if>
			<if test="in_group_id != null and in_group_id != ''">
			AND a.in_group_id = #{in_group_id}
			</if>
			<if test="in_hos_id != null and in_hos_id != ''">
			AND a.in_hos_id = #{in_hos_id}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="bus_type_code != null and bus_type_code != ''">
			AND a.bus_type_code = #{bus_type_code}
			</if>
		</where>   
		order by a.sell_out_no desc
	</select>
	
	
	
	
	<select id="queryByCode" resultMap="assSellOutHouse"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_out_no,
			a.in_group_id,
			sg.group_name in_group_name,
			a.in_hos_id,
			hi.hos_name in_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.sell_price,
			a.dispose_income,
			a.dispose_tax,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note,
			a.bus_type_code,
			abtd.bus_type_name
		FROM ASS_SELL_OUT_House  a
		left join sys_group sg on
		a.in_group_id = sg.group_id
		
		left join hos_info hi on
		a.in_group_id = hi.group_id
		and a.in_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		WHERE 
		a.group_id = #{group_id}   and 
		a.hos_id = #{hos_id}   and 
		a.copy_code = #{copy_code}   and 
		a.sell_out_no = #{sell_out_no} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assSellOutHouse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		sell_out_no,
		in_group_id,
		in_hos_id,
		price,
		add_depre,
		cur_money,
		fore_money,
		sell_price,
		dispose_income,
		dispose_tax,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note,
		bus_type_code
		FROM ASS_SELL_OUT_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND sell_out_no = #{sell_out_no}
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		AND in_group_id = #{in_group_id}
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		AND in_hos_id = #{in_hos_id}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money}
		</if>
		<if test="sell_price != null and sell_price != ''">
		AND sell_price = #{sell_price}
		</if>
		<if test="dispose_income != null and dispose_income != ''">
		AND dispose_income = #{dispose_income}
		</if>
		<if test="dispose_tax != null and dispose_tax != ''">
		AND dispose_tax = #{dispose_tax}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assSellOutHouse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		sell_out_no,
		in_group_id,
		in_hos_id,
		price,
		add_depre,
		cur_money,
		fore_money,
		sell_price,
		dispose_income,
		dispose_tax,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note,
		bus_type_code
		FROM ASS_SELL_OUT_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="sell_out_no != null and sell_out_no != ''">
		AND sell_out_no = #{sell_out_no}
		</if>
		<if test="in_group_id != null and in_group_id != ''">
		AND in_group_id = #{in_group_id}
		</if>
		<if test="in_hos_id != null and in_hos_id != ''">
		AND in_hos_id = #{in_hos_id}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money}
		</if>
		<if test="sell_price != null and sell_price != ''">
		AND sell_price = #{sell_price}
		</if>
		<if test="dispose_income != null and dispose_income != ''">
		AND dispose_income = #{dispose_income}
		</if>
		<if test="dispose_tax != null and dispose_tax != ''">
		AND dispose_tax = #{dispose_tax}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="collectAssSellOutHouse" statementType="CALLABLE"
		parameterType="java.util.Map">
		<![CDATA[ {call PKG_ASS_APP.prc_CalcDepreSingle(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{ass_year,jdbcType=VARCHAR, mode=IN},
	        #{ass_month,jdbcType=VARCHAR, mode=IN},
	        #{ass_naturs,jdbcType=VARCHAR, mode=IN},
	        #{ass_card_no,jdbcType=VARCHAR, mode=IN},
	        'B',
	        #{ass_json_str,jdbcType=VARCHAR,mode=OUT},
	        #{ass_AppCode,jdbcType=INTEGER,mode=OUT},
	        #{ass_ErrTxt,jdbcType=VARCHAR,mode=OUT}
        )} 
		 ]]>
	</select>
	
			<!-- 状态查询  （打印时校验数据专用） -->
	<select id="queryAssSellOutStates" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT sell_out_no  FROM ASS_SELL_OUT_House 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="sell_out_no != null and sell_out_no != ''">
			AND sell_out_no in  (${sell_out_no})
			</if>
		
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	
	<!-- 明细查询 -->
	<select id="queryDetails" parameterType="java.util.Map" resultMap="assSellOutHouseMap">
				with detail_tmp as
								 (select a.group_id,
								         a.hos_id,
								         a.copy_code,
								         a.sell_out_no,
								         a.in_group_id,
								         sg.group_name in_group_name,
								         a.in_hos_id,
								         hi.hos_name in_hos_name,
								         b.price,
								         b.add_depre,
								         b.cur_money,
								         b.fore_money,
								         a.create_emp,
								         su1.user_name create_emp_name,
								         a.create_date,
								         a.audit_emp,
								         su2.user_name audit_emp_name,
								         a.audit_date,
								         a.state,
								         a.bus_type_code,
								         abtd.bus_type_name,
								         case
								           when a.state = 0 then
								            '新建'
								           when a.state = 1 then
								            '审核'
								           when a.state = 2 then
								            '出库确认'
								           else
								            ''
								         end state_name,
								         a.note,
								         b.add_manage_depre,
								         b.add_depre_month,
								         b.now_depre,
								         b.now_manage_depre,
								         b.ass_card_no,
								         d.ass_id,
								         d.ass_no,
								         d.ass_code,
								         d.ass_name
								    from ASS_SELL_OUT_House a
								    left join ASS_SELL_OUT_DETAIL_House b
								      on a.group_id = b.group_id
								     and a.hos_id = b.hos_id
								     and a.copy_code = b.copy_code
								     and a.sell_out_no = b.sell_out_no
								    left join sys_group sg
								      on a.in_group_id = sg.group_id
								  
								    left join hos_info hi
								      on a.in_group_id = hi.group_id
								     and a.in_hos_id = hi.hos_id
								    left join sys_user su1
								      on a.group_id = su1.group_id
								     and a.hos_id = su1.hos_id
								     and a.create_emp = su1.user_id
								  
								    left join sys_user su2
								      on a.group_id = su2.group_id
								     and a.hos_id = su2.hos_id
								     and a.audit_emp = su2.user_id
								    left join ass_bus_type_dict abtd
								      on a.group_id = abtd.group_id
								     and a.hos_id = abtd.hos_id
								     and a.copy_code = abtd.copy_code
								     and a.bus_type_code = abtd.bus_type_code
								    left join ass_card_House c
								      on b.group_id = c.group_id
								     and b.hos_id = c.hos_id
								     and b.copy_code = c.copy_code
								     and b.ass_card_no = c.ass_card_no
								  
								    left join ass_no_dict d
								      on c.group_id = d.group_id
								     and c.hos_id = d.hos_id
								     and c.copy_code = d.copy_code
								     and c.ass_id = d.ass_id
								     and d.is_stop = 0
								  <where>                     
										<if test="group_id != null and group_id != ''">
										AND a.group_id = #{group_id}
										</if>
										<if test="hos_id != null and hos_id != ''">
										AND a.hos_id = #{hos_id}
										</if>
										<if test="copy_code != null and copy_code != ''">
										AND a.copy_code = #{copy_code}
										</if>
										<if test="sell_out_no != null and sell_out_no != ''">
										AND a.sell_out_no = #{sell_out_no}
										</if>
										<if test="in_group_id != null and in_group_id != ''">
										AND a.in_group_id = #{in_group_id}
										</if>
										<if test="in_hos_id != null and in_hos_id != ''">
										AND a.in_hos_id = #{in_hos_id}
										</if>
										<if test="price != null and price != ''">
										AND a.price = #{price}
										</if>
										<if test="add_depre != null and add_depre != ''">
										AND a.add_depre = #{add_depre}
										</if>
										<if test="cur_money != null and cur_money != ''">
										AND a.cur_money = #{cur_money}
										</if>
										<if test="fore_money != null and fore_money != ''">
										AND a.fore_money = #{fore_money}
										</if>
										<if test="sell_price != null and sell_price != ''">
										AND a.sell_price = #{sell_price}
										</if>
										<if test="dispose_income != null and dispose_income != ''">
										AND a.dispose_income = #{dispose_income}
										</if>
										<if test="dispose_tax != null and dispose_tax != ''">
										AND a.dispose_tax = #{dispose_tax}
										</if>
										<if test="create_emp != null and create_emp != ''">
										AND a.create_emp = #{create_emp}
										</if>
										<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
										AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
										</if>
										<if test="audit_emp != null and audit_emp != ''">
										AND a.audit_emp = #{audit_emp}
										</if>
										<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
										AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
										</if>
										<if test="state != null and state != ''">
										AND a.state = #{state}
										</if>
										<if test="note != null and note != ''">
										AND a.note = #{note}
										</if>
										<if test="bus_type_code != null and bus_type_code != ''">
										AND a.bus_type_code = #{bus_type_code}
										</if>
										</where>
								  ),
								sum_tmp as
								 (select null group_id,
								         null hos_id,
								         null copy_code,
								         null sell_out_no,
								         null in_group_id,
								         null in_group_name,
								         null in_hos_id,
								         null in_hos_name,
								         sum(price) price,
								         sum(add_depre) add_depre,
								         sum(cur_money) cur_money,
								         sum(fore_money) fore_money,
								         null create_emp,
								         null create_emp_name,
								         null create_date,
								         null audit_emp,
								         null audit_emp_name,
								         null audit_date,
								         null state,
								         null bus_type_code,
								         null bus_type_name,
								         null state_name,
								         '合计' note,
								         sum(add_manage_depre) add_manage_depre,
								         null add_depre_month,
								         sum(now_depre) now_depre,
								         sum(now_manage_depre) now_manage_depre,
								         null ass_card_no,
								         null ass_id,
								         null ass_no,
								         null ass_code,
								         null ass_name
								    from detail_tmp)
								
								select group_id,
								       hos_id,
								       copy_code,
								       sell_out_no,
								       in_group_id,
								       in_group_name,
								       in_hos_id,
								       in_hos_name,
								       price,
								       add_depre,
								       cur_money,
								       fore_money,
								       create_emp,
								       create_emp_name,
								       create_date,
								       audit_emp,
								       audit_emp_name,
								       audit_date,
								       state,
								       bus_type_code,
								       bus_type_name,
								       state_name,
								       note,
								       add_manage_depre,
								       add_depre_month,
								       now_depre,
								       now_manage_depre,
								       ass_card_no,
								       ass_id,
								       ass_no,
								       ass_code,
								       ass_name
								  from detail_tmp
								union all
								select group_id,
								       hos_id,
								       copy_code,
								       sell_out_no,
								       in_group_id,
								       in_group_name,
								       in_hos_id,
								       in_hos_name,
								       price,
								       add_depre,
								       cur_money,
								       fore_money,
								       create_emp,
								       create_emp_name,
								       create_date,
								       audit_emp,
								       audit_emp_name,
								       audit_date,
								       state,
								       bus_type_code,
								       bus_type_name,
								       state_name,
								       note,
								       add_manage_depre,
								       add_depre_month,
								       now_depre,
								       now_manage_depre,
								       ass_card_no,
								       ass_id,
								       ass_no,
								       ass_code,
								       ass_name
								  from sum_tmp
								
								 order by sell_out_no desc
				
	
	</select>
</mapper>

