<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.sell.in.AssSellInLandMapper">
	
	<resultMap id="assSellInLand" type="com.chd.hrp.ass.entity.sell.in.AssSellInLand">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="sell_in_no" column="sell_in_no"/>
	<result property="out_group_id" column="out_group_id"/>
	<result property="out_hos_id" column="out_hos_id"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="assSellInLandMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="sell_in_no" column="sell_in_no"/>
	<result property="out_group_id" column="out_group_id"/>
	<result property="out_hos_id" column="out_hos_id"/>
	<result property="dept_id" column="dept_id"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="price" column="price"/>
	<result property="add_depre" column="add_depre"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="note" column="note"/>
	
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="bus_type_name" column="bus_type_name"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="ass_ori_card_no" column="ass_ori_card_no"/>
	<result property="add_depre_month" column="add_depre_month"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="out_group_name" column="out_group_name"/>
	<result property="out_hos_name" column="out_hos_name"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_SELL_IN_LAND (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="sell_in_no != null and sell_in_no != ''">
		sell_in_no
		,
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		out_group_id
		,
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		out_hos_id
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		to_number(#{group_id})
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		to_number(#{hos_id})
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code}
		,
		</if>
		<if test="sell_in_no != null and sell_in_no != ''">
		#{sell_in_no}
		,
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		to_number(#{out_group_id})
		,
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		to_number(#{out_hos_id})
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		#{bus_type_code}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		,
		</if>
		<if test="note != null and note != ''">
		#{note}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_SELL_IN_LAND (
		group_id
		,
		hos_id
		,
		copy_code
		,
		sell_in_no
		,
		out_group_id
		,
		out_hos_id
		,
		bus_type_code
		,
		create_emp
		,
		create_date
		,
		state
		,
		note
		
		) select ASS_SELL_IN_LAND_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.sell_in_no,jdbcType=VARCHAR}
			,
			#{item.out_group_id,jdbcType=INTEGER}
			,
			#{item.out_hos_id,jdbcType=INTEGER}
			,
			#{item.bus_type_code,jdbcType=VARCHAR}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			#{item.create_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_sell_in_land 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="out_group_id != null and out_group_id != ''">
		out_group_id = #{out_group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		out_hos_id = #{out_hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code = #{bus_type_code}
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="note == null and note == ''">
		note = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="sell_in_no != null and sell_in_no != ''">
		AND sell_in_no = #{sell_in_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	
	<update id="updateInMoney" parameterType="java.util.Map">
	
		UPDATE ass_sell_in_land 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="price != null and price != ''">
		price = #{price}
		,
		</if>
		<if test="add_depre != null and add_depre != ''">
		add_depre = #{add_depre}
		,
		</if>
		<if test="cur_money != null and cur_money != ''">
		cur_money = #{cur_money}
		,
		</if>
		<if test="fore_money != null and fore_money != ''">
		fore_money = #{fore_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="sell_in_no != null and sell_in_no != ''">
		AND sell_in_no = #{sell_in_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_sell_in_land  set
			state = 2,
			audit_emp = #{item.audit_emp},
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND sell_in_no = #{item.sell_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_sell_in_land  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND sell_in_no = #{item.sell_in_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_sell_in_land  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND sell_in_no = #{item.sell_in_no}
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_sell_in_land 
		<where>                     
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND sell_in_no = #{sell_in_no,jdbcType=VARCHAR}
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_sell_in_land 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND sell_in_no = #{item.sell_in_no,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assSellInLand" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_in_no,
			a.out_group_id,
			sg.group_name out_group_name,
			a.out_hos_id,
			hi.hos_name out_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note,
            nvl(alms.is_import, 0) as is_import,
            a.bus_type_code,
            abtd.bus_type_name
		FROM ass_sell_in_land a
		
		left join sys_group sg on
		a.out_group_id = sg.group_id
		
		left join hos_info hi on
		a.out_group_id = hi.group_id
		and a.out_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		 left join (select a.group_id,
                           a.hos_id,
                           a.copy_code,
                           a.sell_in_no,
                           case
                             when count(1) > 0 then
                              1
                             else
                              0
                           end as is_import
                      from ass_sell_map_land a
                      left join ASS_SELL_IN_LAND b
                        on a.group_id = b.group_id
                       and a.hos_id = b.hos_id
                       and a.copy_code = b.copy_code
                       and a.sell_in_no = b.sell_in_no
                     group by a.group_id, a.hos_id, a.copy_code, a.sell_in_no) alms
           				on  a.group_id = alms.group_id
					    and a.hos_id = alms.hos_id
					    and a.copy_code = alms.copy_code
					    and a.sell_in_no = alms.sell_in_no
		
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="sell_in_no != null and sell_in_no != ''">
			AND a.sell_in_no = #{sell_in_no}
			</if>
			<if test="out_group_id != null and out_group_id != ''">
			AND a.out_group_id = #{out_group_id}
			</if>
			<if test="out_hos_id != null and out_hos_id != ''">
			AND a.out_hos_id = #{out_hos_id}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="add_depre != null and add_depre != ''">
			AND a.add_depre = #{add_depre}
			</if>
			<if test="cur_money != null and cur_money != ''">
			AND a.cur_money = #{cur_money}
			</if>
			<if test="fore_money != null and fore_money != ''">
			AND a.fore_money = #{fore_money}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="bus_type_code != null and bus_type_code != ''">
			AND a.bus_type_code = #{bus_type_code}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>   
		union all
			SELECT 
			  null group_id,
		      null hos_id,
		      null copy_code,
		      null sell_in_no,
		      null out_group_id,
		      null out_group_name,
		      null out_hos_id,
		      null out_hos_name,
		      sum(a.price) price,
		      sum(a.add_depre) add_depre,
		      sum(a.cur_money) cur_money,
		      sum(a.fore_money) fore_money,
		      null create_emp,
		      null create_emp_name,
		      null create_date,
		      null audit_emp,
		      null audit_emp_name,
		      null audit_date,
		      null state,
		      null state_name,
		      '合计' note,
               0    is_import,
              null bus_type_code,
              null bus_type_name
		    FROM ass_sell_in_land a
			<where>                     
			<if test="group_id != null and group_id != ''">
			AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND a.copy_code = #{copy_code}
			</if>
			<if test="sell_in_no != null and sell_in_no != ''">
			AND a.sell_in_no = #{sell_in_no}
			</if>
			<if test="out_group_id != null and out_group_id != ''">
			AND a.out_group_id = #{out_group_id}
			</if>
			<if test="out_hos_id != null and out_hos_id != ''">
			AND a.out_hos_id = #{out_hos_id}
			</if>
			<if test="price != null and price != ''">
			AND a.price = #{price}
			</if>
			<if test="add_depre != null and add_depre != ''">
			AND a.add_depre = #{add_depre}
			</if>
			<if test="cur_money != null and cur_money != ''">
			AND a.cur_money = #{cur_money}
			</if>
			<if test="fore_money != null and fore_money != ''">
			AND a.fore_money = #{fore_money}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND a.create_emp = #{create_emp}
			</if>
			<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			AND a.audit_emp = #{audit_emp}
			</if>
			<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
			</if>
			<if test="state != null and state != ''">
			AND a.state = #{state}
			</if>
			<if test="bus_type_code != null and bus_type_code != ''">
			AND a.bus_type_code = #{bus_type_code}
			</if>
			<if test="note != null and note != ''">
			AND a.note = #{note}
			</if>
		</where>  ) t
		order by t.sell_in_no desc
	</select>
	
	<select id="queryAssSellInLandByAssInNo" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_in_no as id,
			a.sell_in_no,
			a.out_group_id,
			sg.group_name out_group_name,
			a.out_hos_id,
			hi.hos_name out_hos_name,
			to_char(a.price,'FM999,999,990.00') price,
			to_char(a.add_depre,'FM999,999,990.00') add_depre,
			to_char(a.cur_money,'FM999,999,990.00') cur_money,
			to_char(a.fore_money,'FM999,999,990.00') fore_money,
			su1.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			su2.user_name confirm_emp,
			to_char(a.audit_date,'yyyy-mm-dd') back_date,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state,
			a.note,
            abtd.bus_type_name as bus_type_code
		FROM ass_sell_in_land a
		
		left join sys_group sg on
		a.out_group_id = sg.group_id
		
		left join hos_info hi on
		a.out_group_id = hi.group_id
		and a.out_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		 where                      
				a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.sell_in_no in (${sell_in_no})
			 order by a.sell_in_no asc
	</select>
	
	
	
	<select id="queryAssSellInLandDetailByAssInNo" parameterType="java.util.Map" resultType="java.util.Map" >
			
			select t5.sell_in_no as id,
       t5.ass_id,
       t5.ass_no,
       b.ass_id,
       b.ass_no,
       b.ass_code,
       b.ass_name,
       b.ass_model,
       b.ass_spec,
       b.ass_brand,
       d.fac_code,
       d.fac_name,
       t5.ass_ori_card_no,
       to_char(t5.price,'FM999,999,990.00') price_detail,
       to_char(price_sum, 'FM999,999,990.00') price_sum,
       to_char(t5.add_depre,'FM999,999,990.00')  add_depre_detail,
       t5.add_depre_month,
       to_char(t5.cur_money,'FM999,999,990.00')  cur_money_detail,
       to_char(t5.fore_money,'FM999,999,990.00') fore_money_detail,
       t5.note note_detail,
       to_char(zc_price, 'FM999,999,990.00') zc_price,
       to_char(cz_price, 'FM999,999,990.00') cz_price,
       to_char(ky_price, 'FM999,999,990.00') ky_price,
       to_char(jx_price, 'FM999,999,990.00') jx_price
  from (select t3.source_id,
               t3.group_id,
               t3.hos_id,
               t3.copy_code,
               sum(t3.price) sum_price,
               sum(t2.price) price_sum,
               t2.ass_id,
               t2.ass_no,
               t2.ass_in_no
          from ass_card_land t2
        
          left join ass_resource_land t3
            on t3.ass_card_no = t2.ass_card_no
           and t3.group_id = t2.group_id
           and t3.hos_id = t3.hos_id
           and t3.copy_code = t2.copy_code
       where
				t2.group_id = #{group_id,jdbcType=INTEGER}
			AND t2.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t2.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND t2.ass_in_no in (${sell_in_no})
         group by t3.source_id,
                  t2.ass_id,
                  t2.ass_no,
                  t3.group_id,
                  t3.hos_id,
                  t2.ass_in_no,
                  t3.copy_code) pivot(sum(sum_price) as price for source_id in('1' as ZC,
                                                                               '2' as CZ,
                                                                               '3' as KY,
                                                                               '4' as JX)) t
		  left join ass_sell_in_detail_land t5
		    on t.ass_id = t5.ass_id
		   and t5.group_id = t.group_id
		   and t5.hos_id = t.hos_id
		   and t5.copy_code = t.copy_code
		   and t5.sell_in_no = t.ass_in_no
		  left join ass_no_dict b
		    on t5.group_id = b.group_id
		   and t5.hos_id = b.hos_id
		   and t5.copy_code = b.copy_code
		   and t5.ass_id = b.ass_id
		   and b.is_stop = 0
		  left join hos_fac_dict d
		    on b.group_id = d.group_id
		   and b.hos_id = d.hos_id
		   and b.fac_id = d.fac_id
		   and b.fac_no = d.fac_no
		   and d.is_stop = 0
		   and d.is_disable = 0
			where
				t5.group_id = #{group_id,jdbcType=INTEGER}
			AND t5.hos_id = #{hos_id,jdbcType=INTEGER}
			AND t5.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND t5.sell_in_no in (${sell_in_no})		
			 group by t5.sell_in_no,
		          t5.ass_id,
		          t5.ass_no,
		          b.ass_id,
		          b.ass_no,
		          b.ass_code,
		          b.ass_name,
		          b.ass_model,
		          b.ass_spec,
		          b.ass_brand,
		          d.fac_code,
		          d.fac_name,
		          t5.ass_ori_card_no,
		          t5.price,
		          price_sum,
		          t5.add_depre,
		          t5.add_depre_month,
		          t5.cur_money,
		          t5.fore_money,
		          t5.note,
		          zc_price,
		          cz_price,
		          ky_price,
		          jx_price
			 order by t5.sell_in_no asc
	
	
	
	
		<!-- select a.group_id,
		       a.hos_id,
		       a.copy_code,
		       a.sell_in_no      as id,
		       a.ass_id,
		       a.ass_no,
		       c.ass_id,
		       c.ass_no,
		       c.ass_code,
		       c.ass_name,
		       c.ass_model,
		       c.ass_spec,
		       c.ass_brand,
		       d.fac_code,
		       d.fac_name,
		       a.ass_ori_card_no,
		       a.price           as price_DETAIL,
		       a.add_depre       as add_depre_detail,
		       a.add_depre_month,
		       a.cur_money       as cur_money_detail,
		       a.fore_money      as fore_money_detail,
		       a.note
		  from ass_sell_in_detail_land a
		  left join ass_no_dict c
		    on a.group_id = c.group_id
		   and a.hos_id = c.hos_id
		   and a.copy_code = c.copy_code
		   and a.ass_id = c.ass_id
		   and c.is_stop = 0
		  left join hos_fac_dict d
		    on c.group_id = d.group_id
		   and c.hos_id = d.hos_id
		   and c.fac_id = d.fac_id
		   and c.fac_no = d.fac_no
		   and d.is_stop = 0
		   and d.is_disable = 0
		where
				a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.sell_in_no in (${sell_in_no}) -->
	</select>
	
	
	<select id="queryByCode" resultMap="assSellInLand"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.sell_in_no,
			a.out_group_id,
			sg.group_name out_group_name,
			a.out_hos_id,
			hi.hos_name out_hos_name,
			a.price,
			a.add_depre,
			a.cur_money,
			a.fore_money,
			a.create_emp,
			su1.user_name create_emp_name,
			a.create_date,
			a.audit_emp,
			su2.user_name audit_emp_name,
			a.audit_date,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name,
			a.note,
			a.bus_type_code,
			abtd.bus_type_name,
			alms.is_import
		FROM ass_sell_in_land a
		
		left join sys_group sg on
		a.out_group_id = sg.group_id
		
		left join hos_info hi on
		a.out_group_id = hi.group_id
		and a.out_hos_id = hi.hos_id
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		 left join (select a.group_id,
                           a.hos_id,
                           a.copy_code,
                           a.sell_in_no,
                           case
                             when count(1) > 0 then
                              1
                             else
                              0
                           end as is_import
                      from ass_sell_map_land a
                      left join ASS_SELL_IN_LAND b
                        on a.group_id = b.group_id
                       and a.hos_id = b.hos_id
                       and a.copy_code = b.copy_code
                       and a.sell_in_no = b.sell_in_no
                     group by a.group_id, a.hos_id, a.copy_code, a.sell_in_no) alms
           				on  a.group_id = alms.group_id
					    and a.hos_id = alms.hos_id
					    and a.copy_code = alms.copy_code
					    and a.sell_in_no = alms.sell_in_no
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.sell_in_no = #{sell_in_no,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assSellInLand"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		sell_in_no,
		out_group_id,
		out_hos_id,
		price,
		add_depre,
		cur_money,
		fore_money,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note,
		bus_type_code
		FROM ASS_SELL_IN_LAND 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="sell_in_no != null and sell_in_no != ''">
		AND sell_in_no = #{sell_in_no,jdbcType=VARCHAR}
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		AND out_group_id = #{out_group_id,jdbcType=INTEGER}
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		AND out_hos_id = #{out_hos_id,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre,jdbcType=INTEGER}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money,jdbcType=INTEGER}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assSellInLand"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		sell_in_no,
		out_group_id,
		out_hos_id,
		price,
		add_depre,
		cur_money,
		fore_money,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		note,
		bus_type_code
		FROM ASS_SELL_IN_LAND 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="sell_in_no != null and sell_in_no != ''">
		AND sell_in_no = #{sell_in_no,jdbcType=VARCHAR}
		</if>
		<if test="out_group_id != null and out_group_id != ''">
		AND out_group_id = #{out_group_id,jdbcType=INTEGER}
		</if>
		<if test="out_hos_id != null and out_hos_id != ''">
		AND out_hos_id = #{out_hos_id,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND price = #{price,jdbcType=INTEGER}
		</if>
		<if test="add_depre != null and add_depre != ''">
		AND add_depre = #{add_depre,jdbcType=INTEGER}
		</if>
		<if test="cur_money != null and cur_money != ''">
		AND cur_money = #{cur_money,jdbcType=INTEGER}
		</if>
		<if test="fore_money != null and fore_money != ''">
		AND fore_money = #{fore_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryDept" parameterType="java.util.Map" resultMap="assSellInLandMap">
	select a.dept_id,c.ass_card_no,b.group_id,b.hos_id,b.copy_code from ass_sell_in_Land b
      left join ASS_CARD_LAND c
      on b.group_id=c.group_id
      and b.hos_id = c.hos_id
      and b.copy_code = c.copy_code
      and b.sell_in_no = c.ass_in_no
       left join ASS_SHARE_DEPT_LAND a
       on a.ass_card_no =c.ass_card_no
       and a.group_id =c.group_id
       and a.hos_id = c.hos_id
       and a.copy_code =c.copy_code
		 where
		  	b.group_id=#{group_id,jdbcType=INTEGER} and
			 b.hos_id=#{hos_id,jdbcType=INTEGER} and
			 b.copy_code=#{copy_code,jdbcType=VARCHAR} 
			 <if test="sell_in_no != null and sell_in_no != ''">
			AND b.sell_in_no = #{sell_in_no,jdbcType=VARCHAR}
		</if>
	
	</select>
	
			<!-- 状态查询  （打印时校验数据专用） -->
	<select id="queryAssSellInLandStates" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT sell_in_no  FROM ASS_SELL_IN_LAND 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="sell_in_no != null and sell_in_no != ''">
			AND sell_in_no in  (${sell_in_no})
			</if>
		
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	
	<!-- 明细查询 -->
	<select id="queryDetails" parameterType="java.util.Map" resultMap="assSellInLandMap">
			with detail_tmp as
							 (select a.group_id,
							         a.hos_id,
							         a.copy_code,
							         a.sell_in_no,
							         a.out_group_id,
							         sg.group_name out_group_name,
							         a.out_hos_id,
							         hi.hos_name out_hos_name,
							         b.price,
							         b.add_depre,
							         b.cur_money,
							         b.fore_money,
							         a.create_emp,
							         su1.user_name create_emp_name,
							         a.create_date,
							         a.audit_emp,
							         su2.user_name audit_emp_name,
							         a.audit_date,
							         a.state,
							         case
							           when a.state = 0 then
							            '新建'
							           when a.state = 1 then
							            '审核'
							           when a.state = 2 then
							            '入库确认'
							           else
							            ''
							         end state_name,
							         a.note,
							         a.bus_type_code,
							         abtd.bus_type_name,
							         b.ass_id,
							         b.ass_no,
							         c.ass_code,
							         c.ass_name,
							         b.ass_ori_card_no,
							         b.add_depre_month
							    from ass_sell_in_LAND a
							    left join ASS_sell_IN_DETAIL_LAND b
							      on a.group_id = b.group_id
							     and a.hos_id = b.hos_id
							     and a.copy_code = b.copy_code
							     and a.sell_in_no = b.sell_in_no
							    left join sys_group sg
							      on a.out_group_id = sg.group_id
							  
							    left join hos_info hi
							      on a.out_group_id = hi.group_id
							     and a.out_hos_id = hi.hos_id
							  
							    left join sys_user su1
							      on a.group_id = su1.group_id
							     and a.hos_id = su1.hos_id
							     and a.create_emp = su1.user_id
							  
							    left join sys_user su2
							      on a.group_id = su2.group_id
							     and a.hos_id = su2.hos_id
							     and a.audit_emp = su2.user_id
							  
							    left join ass_bus_type_dict abtd
							      on a.group_id = abtd.group_id
							     and a.hos_id = abtd.hos_id
							     and a.copy_code = abtd.copy_code
							     and a.bus_type_code = abtd.bus_type_code
							    left join ass_no_dict c
							      on b.group_id = c.group_id
							     and b.hos_id = c.hos_id
							     and b.copy_code = c.copy_code
							     and b.ass_id = c.ass_id
							     and c.is_stop = 0
							  <where>                     
								<if test="group_id != null and group_id != ''">
								AND a.group_id = #{group_id}
								</if>
								<if test="hos_id != null and hos_id != ''">
								AND a.hos_id = #{hos_id}
								</if>
								<if test="copy_code != null and copy_code != ''">
								AND a.copy_code = #{copy_code}
								</if>
								<if test="sell_in_no != null and sell_in_no != ''">
								AND a.sell_in_no = #{sell_in_no}
								</if>
								<if test="out_group_id != null and out_group_id != ''">
								AND a.out_group_id = #{out_group_id}
								</if>
								<if test="out_hos_id != null and out_hos_id != ''">
								AND a.out_hos_id = #{out_hos_id}
								</if>
								<if test="price != null and price != ''">
								AND a.price = #{price}
								</if>
								<if test="add_depre != null and add_depre != ''">
								AND a.add_depre = #{add_depre}
								</if>
								<if test="cur_money != null and cur_money != ''">
								AND a.cur_money = #{cur_money}
								</if>
								<if test="fore_money != null and fore_money != ''">
								AND a.fore_money = #{fore_money}
								</if>
								<if test="create_emp != null and create_emp != ''">
								AND a.create_emp = #{create_emp}
								</if>
								<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
								AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
								</if>
								<if test="audit_emp != null and audit_emp != ''">
								AND a.audit_emp = #{audit_emp}
								</if>
								<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
								AND a.audit_date between to_date(#{audit_date_beg},'YYYY-MM-DD') and to_date(#{audit_date_end},'YYYY-MM-DD')
								</if>
								<if test="state != null and state != ''">
								AND a.state = #{state}
								</if>
								<if test="bus_type_code != null and bus_type_code != ''">
								AND a.bus_type_code = #{bus_type_code}
								</if>
								<if test="note != null and note != ''">
								AND a.note = #{note}
								</if>
							</where>
							  ),
							sum_tmp as
							 (select null group_id,
							         null hos_id,
							         null copy_code,
							         null sell_in_no,
							         null out_group_id,
							         null out_group_name,
							         null out_hos_id,
							         null out_hos_name,
							         null price,
							         null add_depre,
							         null cur_money,
							         null fore_money,
							         null create_emp,
							         null create_emp_name,
							         null create_date,
							         null audit_emp,
							         null audit_emp_name,
							         null audit_date,
							         null state,
							         null state_name,
							         '合计' note,
							         null bus_type_code,
							         null bus_type_name,
							         null ass_id,
							         null ass_no,
							         null ass_code,
							         null ass_name,
							         null ass_ori_card_no,
							         null add_depre_month
							  
							    from detail_tmp)
							
							select group_id,
							       hos_id,
							       copy_code,
							       sell_in_no,
							       out_group_id,
							       out_group_name,
							       out_hos_id,
							       out_hos_name,
							       price,
							       add_depre,
							       cur_money,
							       fore_money,
							       create_emp,
							       create_emp_name,
							       create_date,
							       audit_emp,
							       audit_emp_name,
							       audit_date,
							       state,
							       state_name,
							       note,
							       bus_type_code,
							       bus_type_name,
							       ass_id,
							       ass_no,
							       ass_code,
							       ass_name,
							       ass_ori_card_no,
							       add_depre_month
							  from detail_tmp
							union all
							select group_id,
							       hos_id,
							       copy_code,
							       sell_in_no,
							       out_group_id,
							       out_group_name,
							       out_hos_id,
							       out_hos_name,
							       price,
							       add_depre,
							       cur_money,
							       fore_money,
							       create_emp,
							       create_emp_name,
							       create_date,
							       audit_emp,
							       audit_emp_name,
							       audit_date,
							       state,
							       state_name,
							       note,
							       bus_type_code,
							       bus_type_name,
							       ass_id,
							       ass_no,
							       ass_code,
							       ass_name,
							       ass_ori_card_no,
							       add_depre_month
							  from sum_tmp
							
							 order by sell_in_no desc
			
	
	</select>
</mapper>

