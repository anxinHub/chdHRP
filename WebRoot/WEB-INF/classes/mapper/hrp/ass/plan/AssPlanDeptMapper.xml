<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.plan.AssPlanDeptMapper">   
	
	<resultMap id="assPlanDept" type="com.chd.hrp.ass.entity.plan.AssPlanDept">  
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="hos_name" column="hos_name"/>
	<result property="copy_code" column="copy_code"/>
	<result property="plan_id" column="plan_id"/>
	<result property="plan_no" column="plan_no"/>
	<result property="plan_year" column="plan_year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="plan_money" column="plan_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>  
	<result property="check_emp" column="check_emp"/>
	<result property="check_date" column="check_date"/>
	<result property="is_add" column="is_add"/>
	<result property="state" column="state"/>
	<result property="buy_code" column="buy_code"/>
	<result property="note" column="note"/>
	<result property="is_group" column="is_group"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="check_emp_name" column="check_emp_name"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="is_import" column="is_import"/>
	<result property="proj_id" column="proj_id"/>
	<result property="proj_no" column="proj_no"/>
	</resultMap>
	
	<resultMap id="assPlanDeptMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="hos_name" column="hos_name"/>
	<result property="copy_code" column="copy_code"/>
	<result property="plan_id" column="plan_id"/>
	<result property="plan_no" column="plan_no"/>
	<result property="plan_year" column="plan_year"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="plan_money" column="plan_money"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="check_emp" column="check_emp"/>
	<result property="check_date" column="check_date"/>
	<result property="is_add" column="is_add"/>
	<result property="state" column="state"/>
	<result property="buy_code" column="buy_code"/>
	<result property="note" column="note"/>
	<result property="is_group" column="is_group"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="check_emp_name" column="check_emp_name"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="is_import" column="is_import"/>
	
	</resultMap>
	
	<select id="queryAssPlanDeptSequence" resultType="java.lang.Long">
		select ASS_PLAN_DEPT_SEQ.currval val from dual
	</select>
	
	
	<insert id="addAssPlanDept" useGeneratedKeys="true" >
	
		INSERT INTO ASS_PLAN_DEPT (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		plan_id
		,
		<if test="plan_no != null and plan_no != ''">
		plan_no
		,
		</if>
		<if test="plan_year != null and plan_year != ''">
		plan_year
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="plan_money != null and plan_money != ''">
		plan_money
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="check_emp != null and check_emp != ''">
		check_emp
		,
		</if>
		<if test="check_date != null and check_date != ''">
		check_date
		,
		</if>
		<if test="is_add != null and is_add != ''">
		is_add
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="buy_code != null and buy_code != ''">
		buy_code
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="is_group != null and is_group != ''">
		is_group
		,
		</if>
		<if test="dept_code != null and dept_code != ''">
		dept_code
		,
		</if>
		<if test="dept_name != null and dept_name != ''">
		dept_name
		,
		</if>
		<if test="create_emp_name != null and create_emp_name != ''">
		create_emp_name
		,
		</if>
		<if test="check_emp_name != null and check_emp_name != ''">
		check_emp_name
		,
		</if>
		<if test="audit_emp_name != null and audit_emp_name != ''">
		audit_emp_name
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		ASS_PLAN_DEPT_SEQ.nextval
		,
		<if test="plan_no != null and plan_no != ''">
		#{plan_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_year != null and plan_year != ''">
		#{plan_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		#{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		#{dept_no,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_money != null and plan_money != ''">
		#{plan_money,jdbcType=INTEGER}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		#{create_date,jdbcType=DATE}
		,
		</if>
		<if test="check_emp != null and check_emp != ''">
		#{check_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="check_date != null and check_date != ''">
		#{check_date,jdbcType=DATE}
		,
		</if>
		<if test="is_add != null and is_add != ''">
		#{is_add,jdbcType=INTEGER}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=INTEGER}
		,
		</if>
		<if test="buy_code != null and buy_code != ''">
		#{buy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="is_group != null and is_group != ''">
		#{is_group,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_code != null and dept_code != ''">
		#{dept_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="dept_name != null and dept_name != ''">
		#{dept_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp_name != null and create_emp_name != ''">
		#{create_emp_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="check_emp_name != null and check_emp_name != ''">
		#{check_emp_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="audit_emp_name != null and audit_emp_name != ''">
		#{audit_emp_name,jdbcType=VARCHAR}
		</if>
		
		</trim>
		)
	
	</insert>
	<insert id="addBatchAssPlanDept" parameterType="java.util.List" >
	
		INSERT INTO ASS_PLAN_DEPT (
		group_id
		,
		hos_id
		,
		copy_code
		,
		plan_id
		,
		plan_no
		,
		plan_year
		,
		dept_id
		,
		dept_no
		,
		plan_money
		,
		create_emp
		,
		create_date
		,
		check_emp
		,
		check_date
		,
		is_add
		,
		state
		,
		buy_code
		,
		note
		,
		is_group
		
		) select ASS_PLAN_DEPT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{plan_id,jdbcType=INTEGER}
			,
			#{plan_no,jdbcType=VARCHAR}
			,
			#{plan_year,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{dept_no,jdbcType=INTEGER}
			,
			#{plan_money,jdbcType=INTEGER}
			,
			#{create_emp,jdbcType=VARCHAR}
			,
			#{create_date,jdbcType=DATE}
			,
			#{check_emp,jdbcType=VARCHAR}
			,
			#{check_date,jdbcType=DATE}
			,
			#{is_add,jdbcType=INTEGER}
			,
			#{state,jdbcType=INTEGER}
			,
			#{buy_code,jdbcType=VARCHAR}
			,
			#{note,jdbcType=VARCHAR}
			,
			#{is_group,jdbcType=INTEGER}
			
		
		</foreach>
		)t
	</insert>
	
	<insert id="addAssPlanDeptImportBid" useGeneratedKeys="true" >
	
		INSERT INTO ASS_APPLY_PLAN_MAP  (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
 		<if test="apply_id != null and apply_id != ''">
		apply_id
		,
		</if>
		<if test="apply_detail_id != null and apply_detail_id != ''">
		apply_detail_id
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		plan_id
		,
		</if>
		<if test="plan_detail_id != null and plan_detail_id != ''">
		plan_detail_id
		,
		</if>
		 
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
 
		<if test="apply_id != null and apply_id != ''">
		#{apply_id,jdbcType=INTEGER}
		,
		</if>
		<if test="apply_detail_id != null and apply_detail_id != ''">
		#{apply_detail_id,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		#{plan_id,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_detail_id != null and plan_detail_id != ''">
		#{plan_detail_id,jdbcType=INTEGER}
		,
		</if>
		 
		</trim>		
		)
	
	</insert>
	
	
	<update id="updateToExamine" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_plan_dept set state = 1,check_emp = #{item.check_emp},check_date = #{item.check_date} 
			where
			 group_id = #{item.group_id,jdbcType=INTEGER}
			 AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			 AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 AND plan_id = #{item.plan_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="updateNotToExamine" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_plan_dept set state = 0 ,check_emp = null,check_date = null
		where 
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND plan_id = #{item.plan_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="examineAndApprove" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_plan_dept set check_emp = #{item.check_emp},check_date = #{item.check_date} 
		where 
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			AND plan_id = #{item.plan_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<update id="updateAssPlanDept" parameterType="java.util.Map">
	
		UPDATE ass_plan_dept 
		<trim prefix="SET"  suffixOverrides=","> 
		plan_no = #{plan_no,jdbcType=VARCHAR}
		,
		plan_year = #{plan_year,jdbcType=VARCHAR}
		,
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		dept_no = #{dept_no,jdbcType=INTEGER}
		,
		<if test="plan_money != null and plan_money != ''">
		plan_money = #{plan_money,jdbcType=INTEGER}
		,
		</if>
		create_emp = #{create_emp,jdbcType=VARCHAR}
		,
		create_date = #{create_date,jdbcType=DATE}
		,
		is_add = #{is_add,jdbcType=INTEGER}
		,
		state = #{state,jdbcType=INTEGER}
		,
		buy_code = #{buy_code,jdbcType=VARCHAR}
		,
		note = #{note,jdbcType=VARCHAR}
		,
		is_group = #{is_group,jdbcType=INTEGER}
		</trim>
		<where>
			group_id =#{group_id,jdbcType=INTEGER}
			AND hos_id =#{hos_id,jdbcType=INTEGER}
			AND copy_code =#{copy_code,jdbcType=VARCHAR}
			AND plan_id =#{plan_id,jdbcType=INTEGER}
			<if test="plan_no != null and plan_no != ''">
			AND plan_no =#{plan_no,jdbcType=VARCHAR}
			</if>
		</where>
	</update>
	
	<update id="updateAssPlanDeptMoney" parameterType="java.util.Map">
		UPDATE ass_plan_dept set
		plan_money = #{plan_money,jdbcType=INTEGER}
		<where>
			group_id =#{group_id,jdbcType=INTEGER}
			AND hos_id =#{hos_id,jdbcType=INTEGER}
			AND copy_code =#{copy_code,jdbcType=VARCHAR}
			AND plan_id =#{plan_id,jdbcType=INTEGER}
			AND plan_no =#{plan_no,jdbcType=VARCHAR}
		</where>
	</update>
	
	<update id="updateBatchAssPlanDept" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE ass_plan_dept SET
			plan_no = #{plan_no,jdbcType=VARCHAR}
			,
			plan_year = #{plan_year,jdbcType=VARCHAR}
			,
			dept_id = #{dept_id,jdbcType=INTEGER}
			,
			dept_no = #{dept_no,jdbcType=INTEGER}
			,
			plan_money = #{plan_money,jdbcType=INTEGER}
			,
			create_emp = #{create_emp,jdbcType=VARCHAR}
			,
			create_date = #{create_date,jdbcType=DATE}
			,
			check_emp = #{check_emp,jdbcType=VARCHAR}
			,
			check_date = #{check_date,jdbcType=DATE}
			,
			is_add = #{is_add,jdbcType=INTEGER}
			,
			state = #{state,jdbcType=INTEGER}
			,
			buy_code = #{buy_code,jdbcType=VARCHAR}
			,
			note = #{note,jdbcType=VARCHAR}
			,
			is_group = #{is_group,jdbcType=INTEGER}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			plan_id = #{item.plan_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteAssPlanDept" parameterType="java.util.Map">
	
		DELETE FROM ass_plan_dept WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		plan_id = #{plan_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchAssPlanDept" parameterType="java.util.List">
		DELETE FROM ass_plan_dept WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				plan_id = #{item.plan_id,jdbcType=INTEGER}
				
			</foreach>
	
	</delete>
	<select id="queryAssPlanDept" parameterType="java.util.Map" resultMap="assPlanDept" >
	select *
  from (select apd.group_id,
               apd.hos_id,
               apd.copy_code,
               apd.plan_id,
               apd.plan_no,
               apd.plan_year,
               apd.dept_id,
               apd.dept_no,
               apd.plan_money,
               apd.create_emp,
               su.user_name create_name,
               apd.create_date,
               apd.check_emp,
               apd.check_date,
               apd.is_add,
               apd.state,
               apd.buy_code,
               apd.note,
               apd.is_group,
               hdd.dept_code as dept_code,
               hdd.dept_name as dept_name,
               su.user_name as create_emp_name,
               su1.user_name as check_emp_name,
               nvl(aapm.is_import, 0) + nvl(aagh.is_import, 0) as is_import
          from ASS_PLAN_DEPT apd
          left join Hos_Dept_Dict hdd
            on apd.group_id = hdd.group_id
           and apd.hos_id = hdd.hos_id
           and apd.dept_id = hdd.dept_id
           and hdd.is_stop = 0
          left join Sys_User su
            on apd.group_id = su.group_id
           and apd.hos_id = su.hos_id
           and apd.create_emp = su.user_id
          left join Sys_User su1
            on apd.group_id = su1.group_id
           and apd.hos_id = su1.hos_id
           and apd.check_emp = su1.user_id
          left join (select a.group_id,
                           a.hos_id,
                           a.copy_code,
                           a.plan_id,
                           case
                             when count(1) > 0 then
                              1
                             else
                              0
                           end as is_import
                      from ASS_APPLY_PLAN_MAP a
                      left join ASS_PLAN_DEPT b
                        on a.group_id = b.group_id
                       and a.hos_id = b.hos_id
                       and a.copy_code = b.copy_code
                       and a.plan_id = b.plan_id
                     group by a.group_id, a.hos_id, a.copy_code, a.plan_id) aapm
            on apd.group_id = aapm.group_id
           and apd.hos_id = aapm.hos_id
           and apd.copy_code = aapm.copy_code
           and apd.plan_id = aapm.plan_id
        
          left join (select a.group_id,
                           a.hos_id,
                           a.copy_code,
                           a.group_plan_id,
                           case
                             when count(1) > 0 then
                              2
                             else
                              0
                           end as is_import
                      from ASS_PLAN_GROUP_HOS a
                      left join ASS_PLAN_DEPT b
                        on a.group_id = b.group_id
                       and a.hos_id = b.hos_id
                       and a.copy_code = b.copy_code
                       and a.group_plan_id = b.plan_id
                     group by a.group_id,
                              a.hos_id,
                              a.copy_code,
                              a.group_plan_id) aagh
            on apd.group_id = aagh.group_id
           and apd.hos_id = aagh.hos_id
           and apd.copy_code = aagh.copy_code
           and apd.plan_id = aagh.group_plan_id
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND apd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND apd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND apd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND apd.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND apd.plan_no like '%${plan_no}%'
		</if>
		<if test="plan_year1 != null and plan_year1 != '' and plan_year2 != null and plan_year2 != ''">
		AND apd.plan_year between #{plan_year1} and #{plan_year2}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND apd.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND apd.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND apd.plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND apd.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date1 != null and create_date1 != '' and create_date2 != null and create_date2 != ''">
		AND apd.create_date between to_date(#{create_date1},'yyyy/MM/dd') and to_date(#{create_date2},'yyyy/MM/dd')
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND apd.check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date1 != null and check_date1 != '' and check_date2 != null and check_date2 != ''">
		AND apd.check_date between to_date(#{check_date1},'yyyy/MM/dd') and to_date(#{check_date2},'yyyy/MM/dd')
		</if>
		<if test="is_add != null and is_add != ''">
		AND apd.is_add = #{is_add,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND apd.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="buy_code != null and buy_code != ''">
		AND apd.buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND apd.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND apd.is_group = #{is_group,jdbcType=INTEGER}
		</if>
		<if test="is_exists != null and is_exists != ''">
		AND not exists(select 1 from ASS_PLAN_GROUP_HOS where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and HOS_PLAN_ID = apd.plan_id)
		</if>
		</where>   
		union all
		
		select 0 as group_id,
               0 as hos_id,
               null as copy_code,
               0 as plan_id,
               null as plan_no,
               null as plan_year,
               0 as dept_id,
               0 as dept_no,
               sum(plan_money) as plan_money,
               null as create_emp,
               null as create_name,
               to_date(null, 'yyyy-MM-dd') as create_date,
               null as check_emp,
               to_date(null, 'yyyy-MM-dd') as check_date,
               null,
               null,
               null as buy_code,
               '合计' as note,
               0 as is_group,
               null as dept_code,
               null as dept_name,
               null as create_emp_name,
               null as check_emp_name,
               0 is_import
          from ASS_PLAN_DEPT apd
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND apd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND apd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND apd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND apd.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND apd.plan_no like '%${plan_no}%'
		</if>
		<if test="plan_year1 != null and plan_year1 != '' and plan_year2 != null and plan_year2 != ''">
		AND apd.plan_year between #{plan_year1} and #{plan_year2}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND apd.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND apd.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND apd.plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND apd.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date1 != null and create_date1 != '' and create_date2 != null and create_date2 != ''">
		AND apd.create_date between to_date(#{create_date1},'yyyy/MM/dd') and to_date(#{create_date2},'yyyy/MM/dd')
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND apd.check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date1 != null and check_date1 != '' and check_date2 != null and check_date2 != ''">
		AND apd.check_date between to_date(#{check_date1},'yyyy/MM/dd') and to_date(#{check_date2},'yyyy/MM/dd')
		</if>
		<if test="is_add != null and is_add != ''">
		AND apd.is_add = #{is_add,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND apd.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="buy_code != null and buy_code != ''">
		AND apd.buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND apd.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND apd.is_group = #{is_group,jdbcType=INTEGER}
		</if>
		</where>   ) b
		order by b.plan_no desc
	</select>  
	
	
	<select id="queryAssPlanDeptByGroup" parameterType="java.util.Map" resultMap="assPlanDept" >
	select * from (
		SELECT 
		apd.group_id,
		apd.hos_id,
		hi.hos_name,
		apd.copy_code,
		apd.plan_id,
		apd.plan_no,
		apd.plan_year,
		apd.dept_id,
		apd.dept_no,
		apd.plan_money,
		apd.create_emp,
		apd.create_date,
		apd.check_emp,
		apd.check_date,
		apd.is_add,
		apd.state,
		apd.buy_code,
		apd.note,
		apd.is_group,
    hdd.dept_code dept_code,
    hdd.dept_name dept_name,
    su.user_name create_emp_name,
    su1.user_name check_emp_name
		FROM ASS_PLAN_DEPT apd
    left join Hos_Dept_Dict hdd on apd.group_id=hdd.group_id and apd.hos_id=hdd.hos_id and apd.dept_id=hdd.dept_id and hdd.is_stop=0
    left join Sys_User su on apd.group_id=su.group_id and apd.hos_id=su.hos_id and  apd.create_emp=su.user_id
    left join Sys_User su1 on apd.group_id=su1.group_id and apd.hos_id=su1.hos_id and  apd.check_emp=su1.user_id
	left join hos_info hi on apd.group_id = hi.group_id and apd.hos_id=hi.hos_id
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND apd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND apd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND apd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND apd.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND apd.plan_no like '%${plan_no}%'
		</if>
		<if test="plan_year1 != null and plan_year1 != '' and plan_year2 != null and plan_year2 != ''">
		AND apd.plan_year between #{plan_year1} and #{plan_year2}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND apd.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND apd.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND apd.plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND apd.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date1 != null and create_date1 != '' and create_date2 != null and create_date2 != ''">
		AND apd.create_date between to_date(#{create_date1},'yyyy/MM/dd') and to_date(#{create_date2},'yyyy/MM/dd')
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND apd.check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date1 != null and check_date1 != '' and check_date2 != null and check_date2 != ''">
		AND apd.check_date between to_date(#{check_date1},'yyyy/MM/dd') and to_date(#{check_date2},'yyyy/MM/dd')
		</if>
		<if test="is_add != null and is_add != ''">
		AND apd.is_add = #{is_add,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND apd.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="buy_code != null and buy_code != ''">
		AND apd.buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND apd.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND apd.is_group = #{is_group,jdbcType=INTEGER}
		</if>
		<if test="is_exists != null and is_exists != ''">
			AND not exists(select 1 from ASS_PLAN_GROUP_HOS where 
				<if test="group_id != null and group_id != ''">
				 group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
			and HOS_PLAN_ID = apd.plan_id
		
		)
		</if>
		</where>   
		
		union all
		
		SELECT 
		0 group_id,
		0 hos_id,
		'' hos_name,
		'' copy_code,
		0 plan_id,
		'' plan_no,
		'' plan_year,
		0 dept_id,
		0 dept_no,
		sum(plan_money) plan_money,
		''create_emp,
		to_date('', 'yyyy-MM-dd') create_date,
		'' check_emp,
		to_date('', 'yyyy-MM-dd') check_date,
		null,
		null,
		'' buy_code,
		'合计' note,
		0 is_group,
	    '' dept_code,
	    '' dept_name,
	    '' create_emp_name,
	    '' check_emp_name
		FROM ASS_PLAN_DEPT apd
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND apd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND apd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND apd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND apd.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND apd.plan_no like '%${plan_no}%'
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND apd.plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND apd.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND apd.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND apd.plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND apd.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date1 != null and create_date1 != '' and create_date2 != null and create_date2 != ''">
		AND apd.create_date between to_date(#{create_date1},'yyyy/MM/dd') and to_date(#{create_date2},'yyyy/MM/dd')
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND apd.check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date1 != null and check_date1 != '' and check_date2 != null and check_date2 != ''">
		AND apd.check_date between to_date(#{check_date1},'yyyy/MM/dd') and to_date(#{check_date2},'yyyy/MM/dd')
		</if>
		<if test="is_add != null and is_add != ''">
		AND apd.is_add = #{is_add,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND apd.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="buy_code != null and buy_code != ''">
		AND apd.buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND apd.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND apd.is_group = #{is_group,jdbcType=INTEGER}
		</if>
		<if test="is_exists != null and is_exists != ''">
			AND not exists(select 1 from ASS_PLAN_GROUP_HOS where 
				<if test="group_id != null and group_id != ''">
				 group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
			and HOS_PLAN_ID = apd.plan_id
		
		)
		</if>
		</where>   ) b
		
		order by b.plan_no desc
	</select>
	
	
	<select id="queryAssPlanDepts" parameterType="java.util.Map" resultMap="assPlanDept" >
	
		SELECT 
		apd.group_id,
		apd.hos_id,
		apd.copy_code,
		apd.plan_id,
		apd.plan_no,
		apd.plan_year,
		apd.dept_id,
		apd.dept_no,
		apd.plan_money,
		apd.create_emp,
		apd.create_date,
		apd.check_emp,
		apd.check_date,
		apd.is_add,
		apd.state,
		apd.buy_code,
		apd.note,
		apd.is_group,
    hdd.dept_code dept_code,
    hdd.dept_name dept_name,
    su.user_name create_emp_name,
    su1.user_name check_emp_name
		FROM ASS_PLAN_DEPT apd
    left join Hos_Dept_Dict hdd on apd.group_id=hdd.group_id and apd.hos_id=hdd.hos_id and apd.dept_id=hdd.dept_id and hdd.is_stop=0
    left join Sys_User su on apd.group_id=su.group_id and apd.hos_id=su.hos_id  and apd.create_emp=su.user_id
    left join Sys_User su1 on apd.group_id=su1.group_id and apd.hos_id=su1.hos_id  and apd.check_emp=su1.user_id
		<where>  
		<if test="group_id != null and group_id != ''">
		AND apd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND apd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND apd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND apd.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND apd.plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND apd.plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND apd.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND apd.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND apd.plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND apd.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date1 != null and create_date1 != '' and create_date2 != null and create_date2 != ''">
		AND apd.create_date between to_date (#{create_date1},'yyyy/MM/dd') and to_date(#{create_date2},'yyyy/MM/dd')
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND apd.check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date1 != null and check_date1 != '' and check_date2 != null and check_date2 != ''">
		AND apd.check_date between to_date (#{check_date1},'yyyy/MM/dd') and to_date(#{check_date2},'yyyy/MM/dd')
		</if>
		<if test="is_add != null and is_add != ''">
		AND apd.is_add = #{is_add,jdbcType=INTEGER}
		</if>
<!-- 		<if test="state != null and state != ''"> -->
		AND apd.state &lt;&gt; 0
<!-- 		</if> -->
		<if test="buy_code != null and buy_code != ''">
		AND apd.buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND apd.note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND apd.is_group = #{is_group,jdbcType=INTEGER}
		</if>
		<if test="is_plan_dept != null and is_plan_dept != ''">
			and not exists (select 1 from ASS_BID_PLAN_MAP  abpm
			where
			apd.plan_id = plan_id
			AND abpm.group_id = #{group_id,jdbcType=INTEGER}
			AND abpm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND abpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			)
		</if>	
		</where>   
		order by apd.plan_no desc
	</select>
	
	
	<select id="queryAssPlanDeptsByHosGroup" parameterType="java.util.Map" resultMap="assPlanDept" >
	
		SELECT 
		apd.group_id,
		apd.hos_id,
		hi.hos_name,
		apd.copy_code,
		apd.plan_id,
		apd.plan_no,
		apd.plan_year,
		apd.dept_id,
		apd.dept_no,
		apd.plan_money,
		apd.create_emp,
		apd.create_date,
		apd.check_emp,
		apd.check_date,
		apd.is_add,
		apd.state,
		apd.buy_code,
		apd.note,
		apd.is_group,
    hdd.dept_code dept_code,
    hdd.dept_name dept_name,
    su.user_name create_emp_name,
    su1.user_name check_emp_name
		FROM ASS_PLAN_DEPT apd
    left join Hos_Dept_Dict hdd on apd.group_id=hdd.group_id and apd.hos_id=hdd.hos_id and apd.dept_id=hdd.dept_id and hdd.is_stop=0
    left join Sys_User su on apd.group_id=su.group_id and apd.hos_id=su.hos_id  and apd.create_emp=su.user_id
    left join Sys_User su1 on apd.group_id=su1.group_id and apd.hos_id=su1.hos_id  and apd.check_emp=su1.user_id
	left join hos_info hi on apd.group_id = hi.group_id and apd.hos_id=hi.hos_id
		where  
		
		 apd.group_id = #{group_id}
		AND apd.hos_id = #{hos_id}
		AND apd.copy_code = #{copy_code}
		and exists
		(
		select 1 from ass_plan_group_hos a
		where a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.group_plan_id = #{plan_id}
			and a.hos_group_id = apd.group_id
			and a.hos_hos_id = apd.hos_id
			and a.hos_copy_code = apd.copy_code
			and a.hos_plan_id = apd.plan_id 
		)
		order by apd.plan_no desc
	</select>
	
	
	<select id="queryAssPlanDeptByCode" resultType="com.chd.hrp.ass.entity.plan.AssPlanDept" parameterType="java.util.Map" >
	
		SELECT 
		apd.group_id,
		apd.hos_id,
		apd.copy_code,
		apd.plan_id,
		apd.plan_no,
		apd.plan_year,
		apd.dept_id,
		apd.dept_no,
		apd.plan_money,
		apd.create_emp,
		apd.create_date,
		apd.check_emp,
		apd.check_date,
		apd.is_add,
		apd.state,
		apd.buy_code,
		apd.note,
		apd.is_group,
    hdd.dept_code dept_code,
    hdd.dept_name dept_name,
    su.user_name create_emp_name,
    su1.user_name check_emp_name
		FROM ASS_PLAN_DEPT apd
    left join Hos_Dept_Dict hdd on apd.group_id=hdd.group_id and apd.hos_id=hdd.hos_id and apd.dept_id=hdd.dept_id and hdd.is_stop=0
    left join Sys_User su on apd.group_id=su.group_id and apd.hos_id=su.hos_id and apd.create_emp=su.user_id
    left join Sys_User su1 on apd.group_id=su1.group_id and apd.hos_id=su1.hos_id and  apd.check_emp=su1.user_id
		WHERE 
		apd.group_id = #{group_id,jdbcType=INTEGER}   and 
		apd.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		apd.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		apd.plan_id = #{plan_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryAssPlanDeptByUniqueness" resultType="com.chd.hrp.ass.entity.plan.AssPlanDept" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_year,
		dept_id,
		dept_no,
		plan_money,
		create_emp,
		create_date,
		check_emp,
		check_date,
		is_add,
		state,
		buy_code,
		note,
		is_group
		FROM ASS_PLAN_DEPT 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="is_add != null and is_add != ''">
		AND is_add = #{is_add,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="buy_code != null and buy_code != ''">
		AND buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND is_group = #{is_group,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>

	<select id="queryAssPlanDeptExists" resultMap="assPlanDept" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_year,
		dept_id,
		dept_no,
		plan_money,
		create_emp,
		create_date,
		check_emp,
		check_date,
		is_add,
		state,
		buy_code,
		note,
		is_group
		FROM ASS_PLAN_DEPT 
		<where>       
		<if test="is_plan_dept != null and is_plan_dept != ''">
		 plan_id in ( select abpm.plan_detail_id from ASS_BID_PLAN_MAP abpm
		 
		 <where>
			 <if test="group_id != null and group_id != ''">
			AND abpm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND abpm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND abpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
		 </where>
		 ) 
		 </if>             
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_year != null and plan_year != ''">
		AND plan_year = #{plan_year,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="plan_money != null and plan_money != ''">
		AND plan_money = #{plan_money,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND check_emp = #{check_emp,jdbcType=VARCHAR}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="is_add != null and is_add != ''">
		AND is_add = #{is_add,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="buy_code != null and buy_code != ''">
		AND buy_code = #{buy_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="is_group != null and is_group != ''">
		AND is_group = #{is_group,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 购置计划主表打印 -->
	<select id="queryAssPlanDeptBatch" parameterType="java.util.Map" resultType="java.util.Map">
		select a.plan_id as id , a.group_id,a.hos_id,a.copy_code,a.plan_no,a.plan_year,h.dept_code,h.dept_name,to_char(a.plan_money,'FM999,999,990.00') plan_money ,s.user_name as create_emp,s1.user_name as 
				check_emp ,to_char(a.create_date,'yyyy-mm-dd') create_date,to_char(a.check_date,'yyyy-mm-dd') check_date,
				a.note,
				case when a.state = 0 then '新建' when a.state = 1 then '审核'  else '' end state ,
         		case when a.is_add = 0 then '是' when a.state = 1 then '否'  else '' end is_add,
         		case when a.buy_code = 0 then '自主采购' when a.buy_code = 1 then '集中采购'  else '' end buy_code
		from ASS_PLAN_DEPT a
				left join HOS_DEPT_DICT h  on h.group_id = a.group_id and h.hos_id = a.hos_id and h.dept_id = a.dept_id and h.is_stop = 0
				left join sys_user s on  s.group_id = a.group_id and s.hos_id = a.hos_id and s.user_id = a.create_emp and s.is_stop = 0
				left join sys_user s1 on s1.group_id=a.group_id and s1.hos_id=a.hos_id and s1.user_id=a.check_emp  and s1.IS_STOP = 0
      
      where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.plan_id in (${paraId})
      <!--   <where>
		<if test="group_id !=null and group_id !='' ">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			and a.plan_id in  (${paraId})
		</where> -->
        
		
	</select>
	
	<select id="queryAssPlanDeptByPrint" parameterType="java.util.Map" resultType="java.util.Map">
		select a.plan_id as id , a.group_id,a.hos_id,a.copy_code,a.plan_no,a.plan_year,h.dept_code,h.dept_name,to_char(a.plan_money,'FM999,999,990.00') plan_money,s.user_name as create_emp,s1.user_name as 
				check_emp ,to_char(a.create_date,'yyyy-mm-dd') create_date,to_char(a.check_date,'yyyy-mm-dd') check_date,
				a.note,
				case when a.state = 0 then '新建' when a.state = 1 then '审核'  else '' end state ,
         		case when a.is_add = 0 then '是' when a.state = 1 then '否'  else '' end is_add,
         		case when a.buy_code = 0 then '自主采购' when a.buy_code = 1 then '集中采购'  else '' end buy_code
		from ASS_PLAN_DEPT a
				left join HOS_DEPT_DICT h  on h.group_id = a.group_id and h.hos_id = a.hos_id and h.dept_id = a.dept_id and h.is_stop = 0
				left join sys_user s on  s.group_id = a.group_id and s.hos_id = a.hos_id and s.user_id = a.create_emp and s.is_stop = 0
				left join sys_user s1 on s1.group_id=a.group_id and s1.hos_id=a.hos_id and s1.user_id=a.check_emp  and s1.IS_STOP = 0
       
       where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.plan_no = #{plan_no}
       
       <!--  <where>
		<if test="group_id !=null and group_id !='' ">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="plan_no !=null and plan_no !='' ">
				and a.plan_no = #{plan_no,jdbcType=INTEGER}
			</if>
		</where> -->
	
	</select>
	<!-- 购置计划从表打印 -->
	<select id="queryAssPlanDept_detail" parameterType="java.util.Map" resultType="java.util.Map">
		select a.plan_id as id,
       a.group_id,
       a.hos_id,
       a.copy_code,
       n.ass_code,
       n.ass_no,
       n.ass_name,
       a.ass_spec,
       a.ass_model,
       a.ass_brand,
       f.fac_code,
       f.fac_no,
       a.plan_amount,
       f.fac_name,
       to_char(a.need_date, 'yyyy-mm-dd') as need_date,
       to_char(a.advice_price,'FM999,999,990.00') advice_price,
       a.ass_usage_code,
       r.source_code,
       r.source_name,
      to_char(e.price,'FM999,999,990.00') price
  from ASS_PLAN_DEPT_DETAIL a
  left join ASS_NO_DICT n
    on n.group_id = a.group_id
   and n.hos_id = a.hos_id
   and n.ass_id = a.ass_id
   and n.is_stop = 0
  left join hos_fac_dict f
    on a.group_id = f.group_id
   and a.hos_id = f.hos_id
   and a.fac_id = f.fac_id
   and a.fac_no = f.fac_no
  left join ASS_PLAN_RESOURCE e
    on e.group_id = a.group_id
   and e.hos_id = a.hos_id
   and e.copy_code = a.copy_code
   and e.plan_id = a.plan_id
   and e.plan_detail_id = a.plan_detail_id
   and e.plan_no = a.plan_no
  left join hos_source r
    on r.group_id = e.group_id
   and r.hos_id = e.hos_id
   and r.source_id = e.source_id
   and r.is_stop = 0
   
   where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			 AND a.plan_id in (${paraId})
			</if>
			<if test="plan_id != null and plan_id != ''">
			AND a.plan_id = #{plan_id,jdbcType=VARCHAR}
   			</if>
    <!-- 
      <where>
			<if test="group_id !=null and group_id !='' ">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="p_num != null and p_num ==1">
				and a.plan_id in (${paraId})
			</if>
			<if test="p_num != null and p_num ==0">
				and  a.plan_id=#{plan_id,jdbcType=NUMERIC}
			</if>	
		</where> -->
      
		
		
	</select>
	
	<!-- 打印状态 -->
	<select id="queryPlanDeptState" parameterType="java.util.Map" resultType="java.lang.String">
	select plan_no from ASS_PLAN_DEPT
	WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND plan_id in  (${paraId})
			</if>
			<if test="plan_id != null and plan_id != ''">
			AND plan_id = #{plan_id,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   1 确认 -->
			and state != #{state,jdbcType=INTEGER}	
	</select>
	
</mapper>

