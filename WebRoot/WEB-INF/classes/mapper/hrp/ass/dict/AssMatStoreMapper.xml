<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssMatStoreMapper">

	<resultMap id="matStore" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="store_id" column="store_id" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />

		<result property="is_location" column="is_location" />
		<result property="is_purchase" column="is_purchase" />
		<result property="is_com" column="is_com" />

		<result property="dept_id" column="dept_id" />
		<result property="dept_name" column="dept_name" />

		<result property="manager" column="manager" />
		<result property="manager_name" column="manager_name" />
		<result property="acc_emp" column="acc_emp" />
		<result property="acc_emp_name" column="acc_emp_name" />
		<result property="stock_emp" column="stock_emp" />
		<result property="stock_emp_name" column="stock_emp_name" />
		<result property="telephone" column="telephone" />



		<result property="is_stop" column="is_stop" />

		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="sort_code" column="sort_code" />
		<result property="note" column="note" />

		<result property="alias" column="alias" />
		<result property="wbx_code" column="wbx_code" />

		<result property="store_no" column="store_no" />
		<result property="user_name" column="user_name" />
		<result property="create_time" column="create_time" />
		<result property="dlog" column="dlog" />
		<result property="is_control" column="is_control" />
	</resultMap>
	<!-- 添加 -->
	<insert id="add" useGeneratedKeys="true">

		INSERT INTO MAT_STORE (
			group_id ,
			hos_id ,
			store_id 
			<if test="is_location != null and is_location != ''">, is_location</if>
			<if test="alias != null and alias != ''">, alias</if>
			<if test="is_purchase != null and is_purchase != ''">, is_purchase</if>
			<if test="is_com != null and is_com != ''">, is_com</if>
			<if test="dept_id != null and dept_id != ''">, dept_id</if>
			<if test="manager != null and manager != ''">, manager</if>
			<if test="acc_emp != null and acc_emp != ''">, acc_emp</if>
			<if test="stock_emp != null and stock_emp != ''">, stock_emp</if>
			<if test="telephone != null and telephone != ''">, telephone</if>
			<if test="is_control != null and is_control != ''">, is_control</if>
			
		) VALUES (
		
			#{group_id,jdbcType=INTEGER} ,
			#{hos_id,jdbcType=INTEGER} ,
			#{store_id,jdbcType=INTEGER} 
			<if test="is_location != null">, #{is_location,jdbcType=INTEGER}</if>
			<if test="alias != null and alias != ''">, #{alias,jdbcType=VARCHAR}</if>
			<if test="is_purchase != null">, #{is_purchase,jdbcType=INTEGER}</if>
			<if test="is_com != null">, #{is_com,jdbcType=INTEGER}</if>
			<if test="dept_id != null and dept_id != ''">, #{dept_id,jdbcType=INTEGER}</if>
			<if test="manager != null and manager != ''">, #{manager,jdbcType=INTEGER}</if>
			<if test="acc_emp != null and acc_emp != ''">, #{acc_emp,jdbcType=INTEGER}</if>
			<if test="stock_emp != null and stock_emp != ''">, #{stock_emp,jdbcType=INTEGER}</if>
			<if test="telephone != null and telephone != ''">, #{telephone,jdbcType=VARCHAR}</if>
			<if test="is_control != null">, #{is_control,jdbcType=INTEGER}</if>
		
		)

	</insert>
	
	

	<!-- 更新 -->
	<update id="update" parameterType="java.util.Map">

		UPDATE mat_store
		SET
			is_location = #{is_location} ,
			alias = #{alias} ,
			is_purchase = #{is_purchase} ,
			is_com = #{is_com} ,
			dept_id = #{dept_id} ,
			manager = #{manager} ,
			acc_emp = #{acc_emp} ,
			stock_emp = #{stock_emp} ,
			telephone = #{telephone},
			is_control=#{is_control}
		WHERE group_id =#{group_id}
			and hos_id =#{hos_id}
			and store_id =#{store_id}


	</update>
	
	
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM mat_store
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and store_id = #{store_id,jdbcType=INTEGER}

	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM mat_store WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id}
			and hos_id = #{item.hos_id}
			and store_id = #{item.store_id}
		</foreach>
	</delete>
	
	<!-- 主查询 -->
	<select id="query" parameterType="java.util.Map" resultMap="matStore">
		select
			a.store_id,
			a.store_code,
			a.store_name,
			c.dept_name dept_name,
			a.is_stop
		from hos_store_dict a
		left join mat_store ms 
			on ms.group_id = a.group_id 
			and ms.hos_id= a.hos_id
			and ms.store_id = a.store_id 
		inner join v_user_data_perm b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			AND b.user_id = #{user_id}
			AND b.table_code = 'HOS_STORE_DICT'
			and b.is_read = 1 
			and b.is_write = 1
			and a.store_id = b.perm_code 
		left join hos_dept_dict c 
			on ms.group_id = c.group_id 
			and ms.hos_id = c.hos_id 
			and ms.dept_id = c.dept_id 
			and c.is_stop = 0 
		<where>
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			<if test="store_code != null and store_code != ''">
				AND a.store_code like #{store_code}||'%'
			</if>
				<if test="is_ass != null and is_ass != ''">
				AND a.is_ass = #{is_ass}
			</if>
			<if test="is_mat != null and is_mat != ''">
				AND a.is_mat = #{is_mat}
			</if>
			<if test="is_med != null and is_med != ''">
				AND a.is_med = #{is_med}
			</if>
			<if test="store_name != null and store_name != ''">
				and (a.store_name like '%'||#{store_name}||'%'
				     or upper(a.spell_code) like '%'||#{store_name}||'%'
				     or upper(a.wbx_code) like '%'||#{store_name}||'%'
				     or lower(a.spell_code) like '%'||#{store_name}||'%'
				     or lower(a.wbx_code) like '%'||#{store_name}||'%')
			</if>
			and a.is_stop = 0
		</where>
		order by a.store_id 
	</select>
	
	<!-- 根据ID查询 -->
	<select id="queryByCode" resultMap="matStore" parameterType="java.util.Map">

		SELECT
			a.group_id,
			a.hos_id,
			a.store_id,
			a.store_code,
			a.store_name,
			a.is_stop,
			c.type_code,
			c.type_code||' '||c.type_name type_name,
			a.spell_code,
			a.wbx_code,
			a.sort_code,
			a.note,
	
			nvl(b.is_purchase, 0) is_purchase,
			b.alias,
			nvl(b.is_location, 0) is_location,
			nvl(b.is_com, 0) is_com,
			 nvl(b.is_control, 0) is_control, 
			b.dept_id,
			hd.dept_code||' '||hd.dept_name dept_name,
			he.emp_id acc_emp,
			he.emp_code||' '||he.emp_name acc_emp_name,
			mh.emp_id manager,
			mh.emp_code||' '||mh.emp_name manager_name,
			sh.emp_id stock_emp,
			sh.emp_code||' '||sh.emp_name stock_emp_name,
			b.telephone

		FROM hos_store a
		left join mat_store b on a.store_id = b.store_id
			and a.hos_id = b.hos_id
			and a.group_id = b.group_id
		left join hos_store_type c on a.type_code = c.type_code
			and c.hos_id = a.hos_id
			and c.group_id = a.group_id
			and c.is_stop = 0
		left join hos_dept hd on hd.dept_id = b.dept_id
			and hd.hos_id = b.hos_id
			and hd.group_id = b.group_id
			and hd.is_stop = 0
		left join hos_emp he on he.emp_id = b.acc_emp
			and he.group_id = b.group_id
			and he.hos_id = b.hos_id
			and he.is_stop = 0
		left join hos_emp mh on mh.emp_id = b.manager
			and mh.group_id = b.group_id
			and mh.hos_id = b.hos_id
			and mh.is_stop = 0
		left join hos_emp sh on sh.emp_id = b.stock_emp
			and sh.group_id = b.group_id
			and sh.hos_id = b.hos_id
			and sh.is_stop = 0
		where a.is_stop = 0
			and a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.store_id = #{store_id}

	</select>
	
	
	<select id="queryByUniqueness" resultType="com.chd.hrp.mat.entity.MatStore"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		store_id,
		alias,
		is_location,
		is_purchase,
		is_com,
		dept_id,
		manager,
		acc_emp,
		stock_emp,
		telephone
		FROM MAT_STORE
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="is_location != null and is_location != ''">
				AND is_location = #{is_location,jdbcType=INTEGER}
			</if>
			<if test="is_purchase != null and is_purchase != ''">
				AND is_purchase = #{is_purchase,jdbcType=INTEGER}
			</if>
			<if test="is_com != null and is_com != ''">
				AND is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="manager != null and manager != ''">
				AND manager = #{manager,jdbcType=INTEGER}
			</if>
			<if test="acc_emp != null and acc_emp != ''">
				AND acc_emp = #{acc_emp,jdbcType=INTEGER}
			</if>
			<if test="stock_emp != null and stock_emp != ''">
				AND stock_emp = #{stock_emp,jdbcType=INTEGER}
			</if>
			<if test="telephone != null and telephone != ''">
				AND telephone = #{telephone,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	
	<!-- 查看变更记录 -->
	<select id="queryMatStoreDict" resultMap="matStore" parameterType="java.util.Map">
		select

			a.store_code,
			a.store_name,
			a.type_code,
			a.sort_code,
			a.note,
			a.is_stop,
			b.user_name,
			to_char(a.create_date,'yyyy-mm-dd') create_time,
			a.dlog

		from hos_store_dict a
		left join sys_user b on a.user_code = b.user_code
			and a.hos_id = b.hos_id
			and a.group_id = b.group_id
		where a.group_id = #{group_id}
		
		<if test="store_id != null and store_id != ''">
			AND store_id = #{store_id}
		</if>

		<if test="hos_id != null and hos_id != ''">
			AND a.hos_id = #{hos_id}
		</if>
		<if test="is_ass != null and is_ass != ''">
			AND a.is_ass = #{is_ass}
		</if>
		<if
			test="create_dateB != null and create_dateB != '' and create_dateE !=null and create_dateE !='' ">
			and create_date between to_date(#{create_dateB},'yyyy/mm/dd') 
			and to_date(#{create_dateE},'yyyy/mm/dd')
		</if>
		order by create_date desc,store_no desc
	</select>
	
	<!-- 查看是否存在附属信息 -->
	<select id="queryIsExistsByCode" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from mat_store
		where  group_id = #{group_id,jdbcType=INTEGER}
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				AND store_id = #{store_id,jdbcType=INTEGER}
		    </if>
	</select>
	
	<!-- 返回值 hos_store表信息 -->
	<select id="queryHosStoreByCode" resultMap="matStore" parameterType="java.util.Map">
		select a.group_id,
			a.hos_id,
			a.store_id,
			a.store_code,
			a.store_name,
			a.type_code,
			a.type_code||' '||b.type_name type_name,
			a.spell_code,
			a.wbx_code,
			a.is_stop,
			a.sort_code,
			a.note
		from hos_store a
		left join hos_store_type b 
			on a.type_code = b.type_code
			and a.hos_id = b.hos_id 
			and a.group_id = b.group_id 
			and b.is_stop = 0
		where a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.store_id = #{store_id,jdbcType=INTEGER}
	</select>
</mapper>

