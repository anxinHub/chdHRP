<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssMatInvDictMapper">
	
	<resultMap id="matInvDict" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="alias" column="alias"/>
		<result property="spell_code" column="spell_code"/>
		<result property="wbx_code" column="wbx_code"/>
		<result property="mat_type_id" column="mat_type_id"/>
		<result property="mat_type_no" column="mat_type_no"/>
		<result property="mat_type_code" column="mat_type_code"/>
		<result property="mat_type_name" column="mat_type_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="fac_id" column="fac_id"/>
		<result property="fac_no" column="fac_no"/>
		<result property="fac_code" column="fac_code"/>
		<result property="fac_name" column="fac_name"/>
		<result property="amortize_type" column="amortize_type"/>
		<result property="price_type" column="price_type"/>
		<result property="plan_price" column="plan_price"/>
		<result property="price_rate" column="price_rate"/>
		<result property="sell_price" column="sell_price"/>
		<result property="is_single_ven" column="is_single_ven"/>
		<result property="is_batch" column="is_batch"/>
		<result property="is_bar" column="is_bar"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="is_inv_bar" column="is_inv_bar"/>
		<result property="is_cert" column="is_cert"/>
		<result property="is_quality" column="is_quality"/>
		<result property="is_disinfect" column="is_disinfect"/>
		<result property="is_com" column="is_com"/>
		<result property="is_dura" column="is_dura"/>
		<result property="is_highvalue" column="is_highvalue"/>
		<result property="is_charge" column="is_charge"/>
		<result property="is_sec_whg" column="is_sec_whg"/>
		<result property="is_shel_make" column="is_shel_make"/>
		<result property="sdate" column="sdate"/>
		<result property="edate" column="edate"/>
		<result property="bar_code_new" column="bar_code_new"/>
		<result property="abc_type" column="abc_type"/>
		<result property="per_weight" column="per_weight"/>
		<result property="per_volum" column="per_volum"/>
		<result property="brand_name" column="brand_name"/>
		<result property="agent_name" column="agent_name"/>
		<result property="inv_structure" column="inv_structure"/>
		<result property="inv_usage" column="inv_usage"/>
		<result property="use_state" column="use_state"/>
		<result property="note" column="note"/>
		<result property="state" column="state"/>
		<result property="check_date" column="check_date"/>
		<result property="checker" column="checker"/>
		<result property="is_bid" column="is_bid"/>
		<result property="bid_date" column="bid_date"/>
		<result property="bid_code" column="bid_code"/>
		<result property="is_involved" column="is_involved"/>
		<result property="is_implant" column="is_implant"/>
		<result property="stora_tran_cond" column="stora_tran_cond"/>
		<result property="is_zero_store" column="is_zero_store"/>
		<result property="change_user" column="change_user"/>
		<result property="change_user_name" column="change_user_name"/>
		<result property="change_date" column="change_date"/>
		<result property="change_note" column="change_note"/>
		<result property="is_stop" column="is_stop"/>
		<result property="alias" column="alias"/>
		<result property="alias_spell" column="alias_spell"/>
		<result property="manage_type" column="manage_type"/>
		<result property="memory_encoding" column="memory_encoding"/>
		<result property="source_plan" column="source_plan"/>
		<result property="is_add_sale" column="is_add_sale"></result>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO MAT_INV_DICT (
			inv_no, group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,wbx_code, mat_type_id, mat_type_no, 
			price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, fac_id, fac_no,
			agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, note, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, is_per_bar,  
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new, 
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, 
			change_user, change_date, change_note, is_stop, alias, alias_spell, manage_type, 
			memory_encoding, source_plan
		) VALUES (
			MAT_INV_DICT_SEQ.nextval,
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{inv_id,jdbcType=INTEGER},
			#{inv_code,jdbcType=VARCHAR},
			#{inv_name,jdbcType=VARCHAR},
			#{spell_code,jdbcType=VARCHAR},
			#{wbx_code,jdbcType=VARCHAR},
			#{mat_type_id,jdbcType=INTEGER},
			#{mat_type_no,jdbcType=INTEGER},
			#{price_type,jdbcType=INTEGER},
			#{amortize_type,jdbcType=INTEGER},
			#{inv_model,jdbcType=VARCHAR},
			#{unit_code,jdbcType=VARCHAR},
			#{plan_price,jdbcType=INTEGER},
			#{price_rate,jdbcType=INTEGER},
			#{sell_price,jdbcType=INTEGER},
			#{fac_id,jdbcType=INTEGER},
			#{fac_no,jdbcType=INTEGER},
			#{agent_name,jdbcType=VARCHAR},
			#{brand_name,jdbcType=VARCHAR},
			#{inv_usage,jdbcType=VARCHAR},
			#{inv_structure,jdbcType=VARCHAR},
			#{sdate,jdbcType=DATE},
			#{edate,jdbcType=DATE},
			#{per_weight,jdbcType=INTEGER},
			#{per_volum,jdbcType=INTEGER},
			#{abc_type,jdbcType=VARCHAR},
			#{use_state,jdbcType=INTEGER},
			#{note,jdbcType=VARCHAR},
			
			#{is_single_ven,jdbcType=INTEGER},
			#{is_charge,jdbcType=INTEGER},
			#{is_highvalue,jdbcType=INTEGER},
			#{is_dura,jdbcType=INTEGER},
			#{is_com,jdbcType=INTEGER},
			#{is_bar,jdbcType=INTEGER},
			#{is_per_bar,jdbcType=INTEGER},
			#{is_inv_bar,jdbcType=INTEGER},
			#{is_quality,jdbcType=INTEGER},
			#{is_disinfect,jdbcType=INTEGER}, 
			#{is_cert,jdbcType=INTEGER},
			#{is_sec_whg,jdbcType=INTEGER},
			#{is_shel_make,jdbcType=INTEGER},
			#{is_batch,jdbcType=INTEGER}, 
			#{state,jdbcType=INTEGER},  
			#{inv_code,jdbcType=VARCHAR}, <!-- 品种码默认等于材料编码 -->
			#{is_bid,jdbcType=INTEGER},
			#{bid_date,jdbcType=DATE},
			#{bid_code,jdbcType=VARCHAR}, 
			#{is_involved,jdbcType=INTEGER},  
			#{is_implant,jdbcType=INTEGER},
			#{stora_tran_cond,jdbcType=VARCHAR}, 
			#{is_zero_store,jdbcType=INTEGER},

			#{change_user,jdbcType=VARCHAR},
			#{change_date,jdbcType=DATE},
			#{change_note,jdbcType=VARCHAR},
			0,<!-- 添加默认为不停用 -->
			#{alias,jdbcType=VARCHAR},
			#{alias_spell,jdbcType=VARCHAR}, 
			#{manage_type,jdbcType=VARCHAR},
			#{memory_encoding,jdbcType=VARCHAR}, 
			#{source_plan,jdbcType=INTEGER}
		)	
	</insert>
	
	<insert id="addForDelete" useGeneratedKeys="false"  parameterType="java.util.Map">
		INSERT INTO MAT_INV_DICT (
			inv_no, group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,wbx_code, mat_type_id, mat_type_no, 
			price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, fac_id, 
			agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, note, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, is_per_bar,  
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new, 
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, 
			change_user, change_date, change_note, is_stop, alias, alias_spell, manage_type,source_plan
		) 
		select MAT_INV_DICT_SEQ.nextval, group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,
			wbx_code, mat_type_id, mat_type_no, price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, 
			fac_id, agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, note, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, is_per_bar,  
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new, 
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, 
			#{change_user,jdbcType=INTEGER}, #{change_date,jdbcType=DATE}, 
			#{change_note,jdbcType=VARCHAR}, 1, alias, alias_spell, manage_type,#{source_plan,jdbcType=INTEGER}
		from MAT_INV_DICT
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and inv_id in (${inv_ids})
			and is_stop = 0
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MAT_INV_DICT (
				inv_no, group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,wbx_code, mat_type_id, mat_type_no 
				, inv_model, amortize_type,price_type, is_batch, is_quality, is_dura
				, is_sec_whg, is_shel_make, is_bar, is_cert, is_com, is_highvalue, is_charge
				, change_user, change_date, is_stop, source_plan, is_inv_bar,is_add_sale, unit_code
				<if test="item.plan_price != null and item.plan_price != ''">, plan_price</if>
				<if test="item.price_rate != null and item.price_rate != ''">, price_rate</if>
				<if test="item.sell_price != null and item.sell_price != ''">, sell_price</if>
				<if test="item.fac_id != null and item.fac_id != ''">, fac_id</if>
				<if test="item.fac_no != null and item.fac_no != ''">, fac_no</if>
				<if test="item.agent_name != null ">, agent_name</if>
				<if test="item.brand_name != null ">, brand_name</if>
				<if test="item.inv_usage != null and item.inv_usage != ''">, inv_usage</if>
				<if test="item.inv_structure != null and item.inv_structure != ''">, inv_structure</if>
				<if test="item.sdate != null and item.sdate != ''">, sdate</if>
				<if test="item.edate != null and item.edate != ''">, edate</if>
				<if test="item.per_weight != null and item.per_weight != ''">, per_weight</if> 
				<if test="item.per_volum != null and item.per_volum != ''">, per_volum</if>
				<if test="item.abc_type != null and item.abc_type != ''">, abc_type</if>
				<if test="item.use_state != null and item.use_state != ''">, use_state</if>
				<if test="item.note != null ">, note</if>
				<if test="item.is_single_ven != null and item.is_single_ven != ''">, is_single_ven</if>
				<if test="item.is_per_bar != null and item.is_per_bar != ''">, is_per_bar</if>
				<if test="item.is_disinfect != null and item.is_disinfect != ''">, is_disinfect</if>
				<if test="item.state != null and item.state != ''">, state</if>
				<if test="item.bar_code_new != null and item.bar_code_new != ''">, bar_code_new</if>
				<if test="item.is_bid != null and item.is_bid != ''">, is_bid</if>
				<if test="item.bid_date != null and item.bid_date != ''">, bid_date</if>
				<if test="item.bid_code != null and item.bid_code != ''">, bid_code</if>
				<if test="item.is_involved != null and item.is_involved != ''">, is_involved</if>
				<if test="item.is_implant != null and item.is_implant != ''">, is_implant</if>
				<if test="item.stora_tran_cond != null and item.stora_tran_cond != ''">, stora_tran_cond</if> 	
				<if test="item.is_zero_store != null and item.is_zero_store != ''">, is_zero_store</if>
				<if test="item.change_note != null">, change_note</if>
				<if test="item.alias != null ">, alias</if>
				<if test="item.alias_spell != null ">, alias_spell</if>    	
				<if test="item.manage_type != null and item.manage_type != ''">, manage_type</if>
				<if test="item.memory_encoding != null and item.memory_encoding != ''">, memory_encoding</if>
			)  VALUES (MAT_INV_DICT_SEQ.nextval,
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_code,jdbcType=VARCHAR},
				#{item.inv_name,jdbcType=VARCHAR},
				#{item.spell_code,jdbcType=VARCHAR},
				#{item.wbx_code,jdbcType=VARCHAR},
				#{item.mat_type_id,jdbcType=INTEGER},
				#{item.mat_type_no,jdbcType=INTEGER},
				#{item.inv_model,jdbcType=VARCHAR}, 
				#{item.amortize_type,jdbcType=INTEGER},
				#{item.price_type,jdbcType=INTEGER},
				#{item.is_batch,jdbcType=INTEGER},
				#{item.is_quality,jdbcType=INTEGER},
				#{item.is_dura,jdbcType=INTEGER},
				#{item.is_sec_whg,jdbcType=INTEGER},
				#{item.is_shel_make,jdbcType=INTEGER},
				#{item.is_bar,jdbcType=INTEGER},
				#{item.is_cert,jdbcType=INTEGER},
				#{item.is_com,jdbcType=INTEGER},
				#{item.is_highvalue,jdbcType=INTEGER},
				#{item.is_charge,jdbcType=INTEGER},
				#{item.change_user,jdbcType=VARCHAR},
				#{item.change_date,jdbcType=DATE},
				#{item.is_stop,jdbcType=INTEGER},
				#{item.source_plan,jdbcType=INTEGER},
				#{item.is_inv_bar,jdbcType=INTEGER},
				#{item.is_add_sale,jdbcType=INTEGER}, 
				#{item.unit_code,jdbcType=VARCHAR}
			<if test="item.plan_price != null and item.plan_price != ''">, #{item.plan_price,jdbcType=INTEGER}</if>
			<if test="item.price_rate != null and item.price_rate != ''">, #{item.price_rate,jdbcType=INTEGER}</if>
			<if test="item.sell_price != null and item.sell_price != ''">, #{item.sell_price,jdbcType=INTEGER}</if>
			<if test="item.fac_id != null and item.fac_id != ''">, #{item.fac_id,jdbcType=INTEGER}</if>
			<if test="item.fac_no != null and item.fac_no != ''">, #{item.fac_no,jdbcType=INTEGER}</if>
			<if test="item.agent_name != null ">, #{item.agent_name,jdbcType=VARCHAR}</if>
			<if test="item.brand_name != null ">, #{item.brand_name,jdbcType=VARCHAR}</if>
			<if test="item.inv_usage != null and item.inv_usage != ''">, #{item.inv_usage,jdbcType=VARCHAR}</if>
			<if test="item.inv_structure != null and item.inv_structure != ''">, #{item.inv_structure,jdbcType=VARCHAR}</if>
			<if test="item.sdate != null and item.sdate != ''">, #{item.sdate,jdbcType=DATE}</if>
			<if test="item.edate != null and item.edate != ''">, #{item.edate,jdbcType=DATE}</if>
			<if test="item.per_weight != null and item.per_weight != ''">, #{item.per_weight,jdbcType=INTEGER}</if>  
			<if test="item.per_volum != null and item.per_volum != ''">, #{item.per_volum,jdbcType=INTEGER}</if>
			<if test="item.abc_type != null and item.abc_type != ''">, #{item.abc_type,jdbcType=VARCHAR}</if>
			<if test="item.use_state != null and item.use_state != ''">, #{item.use_state,jdbcType=INTEGER}</if>
			<if test="item.note != null ">, #{item.note,jdbcType=VARCHAR}</if>
			<if test="item.is_single_ven != null and item.is_single_ven != ''">, #{item.is_single_ven,jdbcType=INTEGER}</if>
			<if test="item.is_per_bar != null and item.is_per_bar != ''">, #{item.is_per_bar,jdbcType=INTEGER}</if>
			<if test="item.is_disinfect != null and item.is_disinfect != ''">, #{item.is_disinfect,jdbcType=INTEGER}</if>
			<if test="item.state != null and item.state != ''">, #{item.state,jdbcType=INTEGER}</if>
			<if test="item.bar_code_new != null and item.bar_code_new != ''">, #{item.bar_code_new,jdbcType=VARCHAR}</if>
			<if test="item.is_bid != null and item.is_bid != ''">, #{item.is_bid,jdbcType=INTEGER}</if>
			<if test="item.bid_date != null and item.bid_date != ''">, #{item.bid_date,jdbcType=DATE}</if>
			<if test="item.bid_code != null and item.bid_code != ''">, #{item.bid_code,jdbcType=VARCHAR}</if>
			<if test="item.is_involved != null and item.is_involved != ''">, #{item.is_involved,jdbcType=INTEGER}</if>
			<if test="item.is_implant != null and item.is_implant != ''">, #{item.is_implant,jdbcType=INTEGER}</if>
			<if test="item.stora_tran_cond != null and item.stora_tran_cond != ''">, #{item.stora_tran_cond,jdbcType=VARCHAR}</if> 	
			<if test="item.is_zero_store != null and item.is_zero_store != ''">, #{item.is_zero_store,jdbcType=INTEGER}</if>
			<if test="item.change_note != null">, #{item.change_note,jdbcType=VARCHAR}</if>
			<if test="item.alias != null ">, #{item.alias,jdbcType=VARCHAR}</if>
			<if test="item.alias_spell != null ">, #{item.alias_spell,jdbcType=VARCHAR}</if>    	
			<if test="item.manage_type != null and item.manage_type != ''">, #{item.manage_type,jdbcType=VARCHAR}</if>
			<if test="item.memory_encoding != null and item.memory_encoding != ''">, #{item.memory_encoding,jdbcType=VARCHAR}</if>
			)
		</foreach>
		
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE mat_inv_dict SET
			inv_code = #{inv_code,jdbcType=VARCHAR},
			bar_code_new = #{inv_code,jdbcType=VARCHAR},<!-- 品种码默认等于材料编码 -->
			inv_name = #{inv_name,jdbcType=VARCHAR},
			spell_code = #{spell_code,jdbcType=VARCHAR},
			wbx_code = #{wbx_code,jdbcType=VARCHAR},
			mat_type_id = #{mat_type_id,jdbcType=INTEGER},
			mat_type_no = #{mat_type_no,jdbcType=INTEGER},
			price_type = #{price_type,jdbcType=INTEGER},
			amortize_type = #{amortize_type,jdbcType=INTEGER},
			inv_model = #{inv_model,jdbcType=VARCHAR},
			unit_code = #{unit_code,jdbcType=VARCHAR},
			plan_price = #{plan_price,jdbcType=INTEGER},
			price_rate = #{price_rate,jdbcType=INTEGER},
			sell_price = #{sell_price,jdbcType=INTEGER},
			fac_id = #{fac_id,jdbcType=INTEGER},
			fac_no = #{fac_no,jdbcType=INTEGER},
			agent_name = #{agent_name,jdbcType=VARCHAR},
			brand_name = #{brand_name,jdbcType=VARCHAR},
			inv_usage = #{inv_usage,jdbcType=VARCHAR},
			inv_structure = #{inv_structure,jdbcType=VARCHAR},
			sdate = #{sdate,jdbcType=DATE},
			edate = #{edate,jdbcType=DATE},
			per_weight = #{per_weight,jdbcType=INTEGER},
			per_volum = #{per_volum,jdbcType=INTEGER},
			abc_type =  #{abc_type,jdbcType=VARCHAR},
			use_state = #{use_state,jdbcType=INTEGER},
			note =  #{note,jdbcType=VARCHAR},
			is_single_ven = #{is_single_ven,jdbcType=INTEGER},
			
			is_charge = #{is_charge,jdbcType=INTEGER},
			is_highvalue = #{is_highvalue,jdbcType=INTEGER},
			is_dura = #{is_dura,jdbcType=INTEGER},
			is_com = #{is_com,jdbcType=INTEGER},
			is_bar = #{is_bar,jdbcType=INTEGER},
			is_per_bar = #{is_per_bar,jdbcType=INTEGER},
			is_inv_bar = #{is_inv_bar,jdbcType=INTEGER},
			is_quality = #{is_quality,jdbcType=INTEGER},
			is_disinfect = #{is_disinfect,jdbcType=INTEGER},
			is_cert = #{is_cert,jdbcType=INTEGER},
			is_sec_whg = #{is_sec_whg,jdbcType=INTEGER},
			is_shel_make = #{is_shel_make,jdbcType=INTEGER},
			<!-- 材料全部按批不能修改该属性
			is_batch = #{is_batch,jdbcType=INTEGER},
			-->
			is_bid = #{is_bid,jdbcType=INTEGER},
			bid_date = #{bid_date,jdbcType=DATE},
			bid_code = #{bid_code,jdbcType=VARCHAR},
			is_involved = #{is_involved,jdbcType=INTEGER},
			is_implant = #{is_implant,jdbcType=INTEGER},
			stora_tran_cond = #{stora_tran_cond,jdbcType=VARCHAR},
			is_zero_store = #{is_zero_store,jdbcType=INTEGER},
			
			change_user = #{change_user,jdbcType=VARCHAR},
			change_date = #{change_date,jdbcType=DATE},
			change_note = #{change_note,jdbcType=VARCHAR},
			alias = #{alias,jdbcType=VARCHAR},
			alias_spell = #{alias_spell,jdbcType=VARCHAR}, 
			manage_type = #{manage_type,jdbcType=VARCHAR},
			memory_encoding = #{memory_encoding,jdbcType=VARCHAR}, 
			source_plan = #{source_plan,jdbcType=INTEGER} 
		WHERE group_id =#{group_id,jdbcType=INTEGER}
			and hos_id =#{hos_id,jdbcType=INTEGER}
			and copy_code =#{copy_code,jdbcType=VARCHAR}
			and inv_id =#{inv_id,jdbcType=INTEGER}
			<if test="inv_no != null and inv_no != ''">
				and inv_no =#{inv_no,jdbcType=INTEGER}
			</if>
	</update>
	<!-- 批量停用 -->
	<update id="updateIsStop" parameterType="java.util.Map">
		UPDATE mat_inv_dict 
			<trim prefix="SET"  suffixOverrides=","> 
				<if test="is_stop != null and is_stop != ''">
					is_stop = #{is_stop,jdbcType=INTEGER}, 
				</if>
				<if test="fac_id != null and fac_id != ''">
					fac_id = #{fac_id,jdbcType=INTEGER}, 
				</if>
				<if test="fac_no != null and fac_no != ''">
					fac_no = #{fac_no,jdbcType=INTEGER}, 
				</if>
				<if test="change_date != null and change_date != ''">
					change_date = #{change_date,jdbcType=DATE}, 
				</if>
				<if test="change_user != null and change_user != ''">
					change_user = #{change_user,jdbcType=INTEGER}, 
				</if>
				<if test="change_note != null and change_note != ''">
					change_note = #{change_note,jdbcType=VARCHAR}, 
				</if>
			</trim>
			
		<where>
			<if test="group_id != null and group_id !='' ">
				group_id =#{group_id,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id !='' ">
				and hos_id =#{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code !='' ">
				and copy_code =#{copy_code,jdbcType=VARCHAR}
			</if>
			and inv_id in (${inv_ids})
			<if test="inv_no != null and inv_no != ''">
				and inv_no =#{inv_no,jdbcType=INTEGER}
			</if>
			<if test="is_stops != null and is_stops != ''">
				and is_stop =#{is_stops,jdbcType=INTEGER}
			</if>
		</where>
			
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_inv_dict SET
				inv_code = #{item.inv_code,jdbcType=VARCHAR},
				bar_code_new = #{item.inv_code,jdbcType=VARCHAR},<!-- 品种码默认等于材料编码 -->
				inv_name = #{item.inv_name,jdbcType=VARCHAR},
				spell_code = #{item.spell_code,jdbcType=VARCHAR},
				wbx_code = #{item.wbx_code,jdbcType=VARCHAR},
				mat_type_id = #{item.mat_type_id,jdbcType=INTEGER},
				mat_type_no = #{item.mat_type_no,jdbcType=INTEGER},
				price_type = #{item.price_type,jdbcType=INTEGER},
				amortize_type = #{item.amortize_type,jdbcType=INTEGER},
				inv_model = #{item.inv_model,jdbcType=VARCHAR},
				unit_code = #{item.unit_code,jdbcType=VARCHAR},
				plan_price = #{item.plan_price,jdbcType=INTEGER},
				price_rate = #{item.price_rate,jdbcType=INTEGER},
				sell_price = #{item.sell_price,jdbcType=INTEGER},
				fac_id = #{item.fac_id,jdbcType=INTEGER},
				fac_no = #{item.fac_no,jdbcType=INTEGER},
				agent_name = #{item.agent_name,jdbcType=VARCHAR},
				brand_name = #{item.brand_name,jdbcType=VARCHAR},
				inv_usage = #{item.inv_usage,jdbcType=VARCHAR},
				inv_structure = #{item.inv_structure,jdbcType=VARCHAR},
				sdate = #{item.sdate,jdbcType=DATE},
				edate = #{item.edate,jdbcType=DATE},
				per_weight = #{item.per_weight,jdbcType=INTEGER},
				per_volum = #{item.per_volum,jdbcType=INTEGER},
				abc_type =  #{item.abc_type,jdbcType=VARCHAR},
				use_state = #{item.use_state,jdbcType=INTEGER},
				note =  #{item.note,jdbcType=VARCHAR},
				is_single_ven = #{item.is_single_ven,jdbcType=INTEGER},
				
				is_charge = #{item.is_charge,jdbcType=INTEGER},
				is_highvalue = #{item.is_highvalue,jdbcType=INTEGER},
				is_dura = #{item.is_dura,jdbcType=INTEGER},
				is_com = #{item.is_com,jdbcType=INTEGER},
				is_bar = #{item.is_bar,jdbcType=INTEGER},
				is_per_bar = #{item.is_per_bar,jdbcType=INTEGER},
				is_inv_bar = #{item.is_inv_bar,jdbcType=INTEGER},
				is_quality = #{item.is_quality,jdbcType=INTEGER},
				is_disinfect = #{item.is_disinfect,jdbcType=INTEGER},
				is_cert = #{item.is_cert,jdbcType=INTEGER},
				is_sec_whg = #{item.is_sec_whg,jdbcType=INTEGER},
				is_shel_make = #{item.is_shel_make,jdbcType=INTEGER},
				<!-- 材料全部按批不能修改该属性
				is_batch = #{item.is_batch,jdbcType=INTEGER},
				-->
				is_bid = #{item.is_bid,jdbcType=INTEGER},
				bid_date = #{item.bid_date,jdbcType=DATE},
				bid_code = #{item.bid_code,jdbcType=VARCHAR},
				is_involved = #{item.is_involved,jdbcType=INTEGER},
				is_implant = #{item.is_implant,jdbcType=INTEGER},
				stora_tran_cond = #{item.stora_tran_cond,jdbcType=VARCHAR},
				is_zero_store = #{item.is_zero_store,jdbcType=INTEGER}, 
				
				change_user = #{item.change_user,jdbcType=VARCHAR},
				change_date = #{item.change_date,jdbcType=DATE},
				change_note = #{item.change_note,jdbcType=VARCHAR},
				is_stop = #{item.is_stop,jdbcType=INTEGER},
				alias = #{item.alias,jdbcType=VARCHAR},
				alias_spell = #{item.alias_spell,jdbcType=VARCHAR},	
				manage_type = #{item.manage_type,jdbcType=VARCHAR},
				memory_encoding = #{item.memory_encoding,jdbcType=VARCHAR}, 
				source_plan = #{item.source_plan,jdbcType=INTEGER} 
			WHERE inv_no = #{item.inv_no,jdbcType=INTEGER}
			 and group_id = #{item.group_id,jdbcType=INTEGER}
			 and hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and inv_id = #{item.inv_id,jdbcType=INTEGER}			
		</foreach>
	</update>
	
	
	<!-- 材料批量审核 -->
	<update id="auditMatInvDict" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE mat_inv_dict SET
				state = 1,
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
				
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				 and hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and inv_id = #{item.inv_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<select id="query" parameterType="java.util.Map" resultMap="matInvDict" >
		SELECT 
			a.inv_no, a.group_id, a.hos_id, a.copy_code, a.inv_code, a.inv_name, b.mat_type_name, a.inv_model, c.unit_name, 
			d.user_name change_user_name, a.change_date, a.change_note, a.is_stop ,a.alias
		FROM MAT_INV_DICT a
		LEFT JOIN MAT_TYPE_DICT b
			ON a.group_id = b.group_id
			AND a.hos_id = b.hos_id
			AND a.copy_code = b.copy_code
			AND a.mat_type_no = b.mat_type_no
		LEFT JOIN HOS_UNIT c
			ON a.group_id = c.group_id
			AND a.hos_id = c.hos_id
			AND a.unit_code = c.unit_code
		LEFT JOIN SYS_USER d
			ON a.group_id = d.group_id
			AND a.hos_id = d.hos_id
			AND a.change_user = d.user_id
		<where>                     
			<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="begin_date != null and begin_date != ''">
				AND a.change_date &gt;= #{begin_date,jdbcType=DATE}
			</if>
			<if test="end_date != null and end_date != ''">
				AND a.change_date &lt;= #{end_date,jdbcType=DATE}
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
				     a.inv_code like '${inv_code}%'
				     or a.inv_name like '%${inv_code}%'
				     or upper(a.spell_code) like '%${inv_code}%'
				     or upper(a.wbx_code) like '%${inv_code}%'
				     or lower(a.spell_code) like '%${inv_code}%'
				     or lower(a.wbx_code) like '%${inv_code}%')
			</if>
			<if test="alias != null and alias != ''">
			 and (a.alias like '%${alias}%'
				or LOWER(a.alias_spell) like '%${alias}%'
				or UPPER(a.alias_spell) like '%${alias}%'
				)
			</if>
		</where>   
		order by a.inv_code, a.inv_no
	</select>
	<select id="queryByCode" resultMap="matInvDict" parameterType="java.util.Map" >
		SELECT 
			a.group_id, a.hos_id, a.copy_code, a.inv_id, a.inv_no, a.inv_code, a.inv_name, a.spell_code, 
			a.wbx_code, a.mat_type_id, a.mat_type_no, a.inv_model, a.unit_code, c.unit_name, 
			a.amortize_type, a.price_type, a.fac_id, e.fac_no, e.fac_code, e.fac_name, a.plan_price, 
			a.price_rate, a.sell_price,  a.sdate, a.edate, a.agent_name, a.brand_name, a.inv_usage, 
			a.inv_structure, a.per_weight, a.per_volum, a.abc_type, a.note, a.is_single_ven, a.is_charge,  
			a.is_highvalue, a.is_dura, a.is_com, a.is_bar, a.is_per_bar, a.is_inv_bar, a.is_quality, a.is_disinfect, 
			a.is_cert, a.is_sec_whg, a.is_shel_make, a.change_note, a.is_bid, a.bid_date, a.bid_code, 
			a.is_involved, a.is_implant, a.stora_tran_cond, a.is_zero_store,a.alias,a.alias_spell, a.manage_type, 
			a.memory_encoding, a.source_plan
		FROM mat_inv_dict a 
		left join mat_type_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.mat_type_id = b.mat_type_id
			and a.mat_type_no = b.mat_type_no
		left join hos_unit c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
		left join hos_fac_dict e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
			and a.fac_no = e.fac_no
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
			and a.inv_no = #{inv_no,jdbcType=INTEGER} 
	</select>
	
	<!-- 用于批量修改 -->
	<select id="queryByCodes" resultMap="matInvDict" parameterType="java.util.Map" >
		SELECT 
			group_id, hos_id, copy_code, inv_id, inv_no, inv_code, inv_name, spell_code,wbx_code, mat_type_id, mat_type_no, 
			price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, fac_id, 
			agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, note, is_per_bar,  
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new, 
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, alias, alias_spell,
			manage_type, memory_encoding, source_plan, is_stop
		FROM mat_inv_dict  
		WHERE group_id = #{group_id,jdbcType=INTEGER}    
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
			and inv_id in (${inv_ids}) 
			and is_stop = 0
	</select>
	
	<select id="queryByUniqueness" resultMap="matInvDict" parameterType="java.util.Map" >
		SELECT 
		inv_no,
		group_id,
		hos_id,
		copy_code,
		inv_id,
		inv_code,
		inv_name,
		alias,
		spell_code,
		wbx_code,
		mat_type_no,
		mat_type_id,
		mat_type_no,
		inv_model,
		unit_code,
		amortize_type,
		price_type,
		sup_id,
		fac_id,
		plan_price,
		price_rate,
		sell_price,
		is_batch,
		is_quality,
		is_dura,
		is_overstock,
		is_sec_whg,
		is_shel_make,
		is_bar,
		bar_code_new,
		is_cert,
		is_highvalue,
		is_com,
		is_charge,
		sdate,
		edate,
		per_weight,
		per_volum,
		brand_name,
		agent_name,
		inv_structure,
		inv_usage,
		is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store,
		change_user,
		change_date,
		change_note,
		is_stop,
		alias,
		alias_spell, 
		manage_type
		FROM MAT_INV_DICT 
		<where>                     
		<if test="inv_no != null and inv_no != ''">
		AND inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="inv_code != null and inv_code != ''">
		AND inv_code = #{inv_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_name != null and inv_name != ''">
		AND inv_name = #{inv_name,jdbcType=VARCHAR}
		</if>
		<if test="alias != null and alias != ''">
		AND alias = #{alias,jdbcType=VARCHAR}
		</if>
		<if test="spell_code != null and spell_code != ''">
		AND spell_code = #{spell_code,jdbcType=VARCHAR}
		</if>
		<if test="wbx_code != null and wbx_code != ''">
		AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
		</if>
		<if test="mat_type_no != null and mat_type_no != ''">
		AND mat_type_no = #{mat_type_no,jdbcType=INTEGER}
		</if>
		<if test="mat_type_id != null and mat_type_id != ''">
		AND mat_type_id = #{mat_type_id,jdbcType=INTEGER}
		</if>
		<if test="fina_type_code != null and fina_type_code != ''">
		AND fina_type_code = #{fina_type_code,jdbcType=VARCHAR}
		</if>
		<if test="inv_model != null and inv_model != ''">
		AND inv_model = #{inv_model,jdbcType=VARCHAR}
		</if>
		<if test="unit_code != null and unit_code != ''">
		AND unit_code = #{unit_code,jdbcType=VARCHAR}
		</if>
		<if test="amortize_type != null and amortize_type != ''">
		AND amortize_type = #{amortize_type,jdbcType=INTEGER}
		</if>
		<if test="price_type != null and price_type != ''">
		AND price_type = #{price_type,jdbcType=INTEGER}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="fac_id != null and fac_id != ''">
		AND fac_id = #{fac_id,jdbcType=INTEGER}
		</if>
		<if test="plan_price != null and plan_price != ''">
		AND plan_price = #{plan_price,jdbcType=INTEGER}
		</if>
		<if test="price_rate != null and price_rate != ''">
		AND price_rate = #{price_rate,jdbcType=INTEGER}
		</if>
		<if test="sell_price != null and sell_price != ''">
		AND sell_price = #{sell_price,jdbcType=INTEGER}
		</if>
		<if test="is_batch != null and is_batch != ''">
		AND is_batch = #{is_batch,jdbcType=INTEGER}
		</if>
		<if test="is_quality != null and is_quality != ''">
		AND is_quality = #{is_quality,jdbcType=INTEGER}
		</if>
		<if test="is_dura != null and is_dura != ''">
		AND is_dura = #{is_dura,jdbcType=INTEGER}
		</if>
		<if test="is_overstock != null and is_overstock != ''">
		AND is_overstock = #{is_overstock,jdbcType=INTEGER}
		</if>
		<if test="is_sec_whg != null and is_sec_whg != ''">
		AND is_sec_whg = #{is_sec_whg,jdbcType=INTEGER}
		</if>
		<if test="is_shel_make != null and is_shel_make != ''">
		AND is_shel_make = #{is_shel_make,jdbcType=INTEGER}
		</if>
		<if test="is_bar != null and is_bar != ''">
		AND is_bar = #{is_bar,jdbcType=INTEGER}
		</if>
		<if test="bar_code_new != null and bar_code_new != ''">
		AND bar_code_new = #{bar_code_new,jdbcType=VARCHAR}
		</if>
		<if test="is_cert != null and is_cert != ''">
		AND is_cert = #{is_cert,jdbcType=INTEGER}
		</if>
		<if test="is_highvalue != null and is_highvalue != ''">
		AND is_highvalue = #{is_highvalue,jdbcType=INTEGER}
		</if>
		<if test="is_com != null and is_com != ''">
		AND is_com = #{is_com,jdbcType=INTEGER}
		</if>
		<if test="is_charge != null and is_charge != ''">
		AND is_charge = #{is_charge,jdbcType=INTEGER}
		</if>
		<if test="sdate != null and sdate != ''">
		AND sdate = #{sdate,jdbcType=DATE}
		</if>
		<if test="edate != null and edate != ''">
		AND edate = #{edate,jdbcType=DATE}
		</if>
		<if test="per_weight != null and per_weight != ''">
		AND per_weight = #{per_weight,jdbcType=INTEGER}
		</if>
		<if test="per_volum != null and per_volum != ''">
		AND per_volum = #{per_volum,jdbcType=INTEGER}
		</if>
		<if test="brand_name != null and brand_name != ''">
		AND brand_name = #{brand_name,jdbcType=VARCHAR}
		</if>
		<if test="agent_name != null and agent_name != ''">
		AND agent_name = #{agent_name,jdbcType=VARCHAR}
		</if>
		<if test="inv_structure != null and inv_structure != ''">
		AND inv_structure = #{inv_structure,jdbcType=VARCHAR}
		</if>
		<if test="inv_usage != null and inv_usage != ''">
		AND inv_usage = #{inv_usage,jdbcType=VARCHAR}
		</if>
		<if test="is_bid != null and is_bid != ''">
			AND is_bid = #{is_bid,jdbcType=INTEGER},
		</if>
		<if test="bid_date != null and bid_date != ''">
			AND bid_date = #{bid_date,jdbcType=DATE},
		</if>
		<if test="bid_code != null and bid_code != ''">
			AND bid_code = #{bid_code,jdbcType=VARCHAR},
		</if>
		<if test="is_involved != null and is_involved != ''">
			AND is_involved = #{is_involved,jdbcType=INTEGER},
		</if>
		<if test="is_implant != null and is_implant != ''">
			AND is_implant = #{is_implant,jdbcType=INTEGER},
		</if>
		<if test="stora_tran_cond != null and stora_tran_cond != ''">
			AND stora_tran_cond = #{stora_tran_cond,jdbcType=VARCHAR},
		</if>
		<if test="is_zero_store != null and is_zero_store != ''">
			AND is_zero_store = #{is_zero_store,jdbcType=INTEGER}
		</if>
		<if test="change_user != null and change_user != ''">
		AND change_user = #{change_user,jdbcType=VARCHAR}
		</if>
		<if test="change_date != null and change_date != ''">
		AND change_date = #{change_date,jdbcType=DATE}
		</if>
		<if test="change_note != null and change_note != ''">
		AND change_note = #{change_note,jdbcType=VARCHAR}
		</if>
		<if test="is_stop != null and is_stop != ''">
		AND is_stop = #{is_stop,jdbcType=INTEGER}
		</if>
		<if test="manage_type != null and manage_type != ''">
		AND manage_type = #{manage_type,jdbcType=INTEGER}
		</if>
		</where>   
		order by inv_code, inv_no
	</select>
	
	
	<select id="queryMatInvIdByFacId" parameterType="java.util.Map" resultMap="matInvDict"> 
		select a.group_id, a.hos_id, a.copy_code, a.inv_id, a.inv_code, a.inv_name,a.alias, 
			a.spell_code,a.wbx_code, a.mat_type_id, a.mat_type_no, a.inv_model, a.unit_code, 
			a.fac_id, a.fac_no, a.amortize_type, a.price_type, a.plan_price,a.price_rate, 
			a.sell_price,a.is_single_ven,a.is_batch,a.is_bar,a.is_per_bar,a.is_cert, a.is_quality,
			a.is_disinfect,a.is_com,a.is_dura,a.is_highvalue,a.is_charge,a.is_sec_whg, a.sdate,a.edate, 
			a.bar_code_new,a.abc_type,a.per_weight,a.per_volum,a.brand_name,a.agent_name,a.inv_structure,a.inv_usage, 
			a.use_state,a.state,a.note,a.change_user,a.change_date,a.change_note,a.is_bid,
			a.bid_date, a.bid_code,a.is_involved, a.is_implant,a.stora_tran_cond,a.is_zero_store,a.source_plan, 
			a.alias_spell,a.manage_type,a.is_inv_bar, a.is_shel_make,a.memory_encoding,a.is_add_sale
		from mat_inv_dict a
		<where>
			<if test="group_id !=null and group_id !=''">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !=''">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !=''">
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="fac_id !=null and fac_id !=''">
				and a.fac_id=#{fac_id,jdbcType=INTEGER}
			</if>
			and a.is_stop=0
		</where>
	</select>
	
	<select id="queryMatInvIdByFacIds" parameterType="java.util.Map" resultType="String"> 
		select to_char(wm_concat(to_char(inv_id)))
		from mat_inv_dict
		<where>
			<if test="group_id !=null and group_id !=''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !=''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !=''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="fac_id !=null and fac_id !=''">
				and fac_id=#{fac_id,jdbcType=INTEGER}
			</if>
			and is_stop=0
		</where>
	</select>
</mapper>

