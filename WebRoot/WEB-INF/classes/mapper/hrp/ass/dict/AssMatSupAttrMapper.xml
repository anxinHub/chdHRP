<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.dict.AssMatSupAttrMapper">
	
	<resultMap id="matSupAttr" type="com.chd.hrp.ass.entity.dict.AssSupAttr">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_code" column="sup_code"/>
		<result property="sup_name" column="sup_name"/>
		<result property="spell_code" column="spell_code"/>
		<result property="wbx_code" column="wbx_code"/>
		<result property="sort_code" column="sort_code"/>
		<result property="note" column="note"/>
		<result property="type_code" column="type_code"/>
		<result property="type_name" column="type_name"/>
		<result property="mod_code" column="mod_code"/>
		<result property="mod_name" column="mod_name"/>
		<result property="bank_name" column="bank_name"/>
		<result property="bank_number" column="bank_number"/>
		<result property="legal" column="legal"/>
		<result property="regis_no" column="regis_no"/>
		<result property="phone" column="phone"/>
		<result property="mobile" column="mobile"/>
		<result property="contact" column="contact"/>
		<result property="fax" column="fax"/>
		<result property="email" column="email"/>
		<result property="region" column="region"/>
		<result property="zip_code" column="zip_code"/>
		<result property="address" column="address"/>
		<result property="sup_alias" column="sup_alias"/>
		<result property="ven_trade" column="ven_trade"/>
		<result property="prov" column="prov"/>
		<result property="city" column="city"/>
		<result property="ven_dis_rate" column="ven_dis_rate"/>
		<result property="ven_pay_con" column="ven_pay_con"/>
		<result property="ven_person" column="ven_person"/>
		<result property="ven_dir_address" column="ven_dir_address"/>
		<result property="ven_cre_grade" column="ven_cre_grade"/>
		<result property="end_date" column="end_date"/>
		<result property="is_count" column="is_count"/>
		<result property="dept_id" column="dept_id"/>
		<result property="ven_cre_line" column="ven_cre_line"/>
		<result property="bven_tax" column="bven_tax"/>
		<result property="ven_dev_date" column="ven_dev_date"/>
		<result property="products" column="products"/>
		<result property="is_stop" column="is_stop"/>
		<result property="business_charter" column="business_charter"/>
		<result property="frequency" column="frequency"/>
		<result property="is_flag" column="is_flag"/>
	</resultMap>
	
	<insert id="addMatSupAttr" useGeneratedKeys="true" >
		INSERT INTO ASS_SUP_ATTR (
			group_id
			,
			hos_id
			,
			sup_id
			,
			legal
			,
			regis_no
			,
			phone
			,
			mobile
			,
			contact
			,
			fax
			,
			email
			,
			region
			,
			zip_code
			,
			address
			,
			note,
			sup_alias, ven_trade, prov, city, ven_dis_rate, ven_pay_con, 
			ven_person, ven_dir_address, ven_cre_grade, end_date, is_count, dept_id, ven_cre_line, 
			bven_tax, ven_dev_date, products, is_stop, business_charter, frequency
		) VALUES (
			#{group_id,jdbcType=INTEGER}		,
			#{hos_id,jdbcType=INTEGER}		,
			#{sup_id,jdbcType=INTEGER}		,
			#{legal,jdbcType=VARCHAR}		,
			#{regis_no,jdbcType=VARCHAR}		,
			#{phone,jdbcType=VARCHAR}		,
			#{mobile,jdbcType=VARCHAR}		,
			#{contact,jdbcType=VARCHAR}		,
			#{fax,jdbcType=VARCHAR}		,
			#{email,jdbcType=VARCHAR}		,
			#{region,jdbcType=VARCHAR}		,
			#{zip_code,jdbcType=VARCHAR}		,
			#{address,jdbcType=VARCHAR}		,
			#{note,jdbcType=VARCHAR}, 
			#{sup_alias,jdbcType=VARCHAR}, #{ven_trade,jdbcType=VARCHAR}, 
			#{prov,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
			#{ven_dis_rate,jdbcType=VARCHAR}, #{ven_pay_con,jdbcType=VARCHAR},
			#{ven_person,jdbcType=VARCHAR}, #{ven_dir_address,jdbcType=VARCHAR}, 
			#{ven_cre_grade,jdbcType=VARCHAR}, to_date(#{end_date},'yyyy-MM-dd'), 
			#{is_count,jdbcType=INTEGER}, #{dept_id,jdbcType=INTEGER}, 
			#{ven_cre_line,jdbcType=INTEGER}, #{bven_tax,jdbcType=INTEGER}, 
			to_date(#{ven_dev_date},'yyyy-MM-dd'), #{products,jdbcType=VARCHAR}, 
			#{is_stop,jdbcType=INTEGER}, #{business_charter,jdbcType=VARCHAR}, 
			#{frequency,jdbcType=VARCHAR}		
		)
	
	</insert>
	<insert id="addBatchMatSupAttr" parameterType="java.util.List" >
	
		INSERT INTO ASS_SUP_ATTR (
			group_id
			,
			hos_id
			,
			sup_id
			,
			legal
			,
			regis_no
			,
			phone
			,
			mobile
			,
			contact
			,
			fax
			,
			email
			,
			region
			,
			zip_code
			,
			address
			,
			note,
			sup_alias, ven_trade, prov, city, ven_dis_rate, ven_pay_con, 
			ven_person, ven_dir_address, ven_cre_grade, end_date, is_count, dept_id, ven_cre_line, 
			bven_tax, ven_dev_date, products, is_stop, business_charter, frequency
		
		) select ASS_SUP_ATTR_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.sup_id}			,
				#{item.legal}			,
				#{item.regis_no}			,
				#{item.phone}			,
				#{item.mobile}			,
				#{item.contact}			,
				#{item.fax}			,
				#{item.email}			,
				#{item.region}			,
				#{item.zip_code}			,
				#{item.address}			,
				#{item.note}			,
				#{item.sup_alias}, #{item.ven_trade}, #{item.prov}, #{item.city}, #{item.ven_dis_rate}, 
				#{item.ven_pay_con}, #{item.ven_person}, 
				#{item.ven_dir_address}, #{item.ven_cre_grade}, to_date(#{item.end_date},'yyyy-MM-dd'), #{item.is_count}, 
				#{item.dept_id}, #{item.ven_cre_line}, #{item.bven_tax}, to_date(#{item.ven_dev_date},'yyyy-MM-dd'), #{item.products}, 
				#{item.is_stop}, #{item.business_charter}, #{item.frequency}
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMatSupAttr" parameterType="java.util.Map">
	
		UPDATE ass_sup_attr SET
		legal = #{legal,jdbcType=VARCHAR}
		,
		regis_no = #{regis_no,jdbcType=VARCHAR}
		,
		phone = #{phone,jdbcType=VARCHAR}
		,
		mobile = #{mobile,jdbcType=VARCHAR}
		,
		contact = #{contact,jdbcType=VARCHAR}
		,
		fax = #{fax,jdbcType=VARCHAR}
		,
		email = #{email,jdbcType=VARCHAR}
		,
		region = #{region,jdbcType=VARCHAR}
		,
		zip_code = #{zip_code,jdbcType=VARCHAR}
		,
		address = #{address,jdbcType=VARCHAR}
		,
		note = #{note,jdbcType=VARCHAR}
		,
		sup_alias = #{sup_alias,jdbcType=VARCHAR}
		,
		ven_trade = #{ven_trade,jdbcType=VARCHAR}
		,
		prov = #{prov,jdbcType=VARCHAR}
		,
		city = #{city,jdbcType=VARCHAR}
		,
		ven_dis_rate = #{ven_dis_rate,jdbcType=VARCHAR}
		,
		ven_pay_con = #{ven_pay_con,jdbcType=VARCHAR}
		,
		ven_person = #{ven_person,jdbcType=VARCHAR}
		,
		ven_dir_address = #{ven_dir_address,jdbcType=VARCHAR}
		,
		ven_cre_grade = #{ven_cre_grade,jdbcType=VARCHAR}
		,
		end_date = #{end_date,jdbcType=DATE}
		,
		is_count = #{is_count,jdbcType=INTEGER}
		,
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		ven_cre_line = #{ven_cre_line,jdbcType=VARCHAR}
		,
		bven_tax = #{bven_tax,jdbcType=VARCHAR}
		,
		ven_dev_date = #{ven_dev_date,jdbcType=DATE}
		,
		products = #{products,jdbcType=VARCHAR}
		,
		is_stop = #{is_stop,jdbcType=INTEGER}
		,
		business_charter = #{business_charter,jdbcType=VARCHAR}
		,
		frequency = #{frequency,jdbcType=VARCHAR}
		
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}
		 and 
		hos_id = #{hos_id,jdbcType=INTEGER}
		 and 
		sup_id = #{sup_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMatSupAttr" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE ass_sup_attr SET
			legal = #{item.legal}
			,
			regis_no = #{item.regis_no}
			,
			phone = #{item.phone}
			,
			mobile = #{item.mobile}
			,
			contact = #{item.contact}
			,
			fax = #{item.fax}
			,
			email = #{item.email}
			,
			region = #{item.region}
			,
			zip_code = #{item.zip_code}
			,
			address = #{item.address}
			,
			note = #{item.note}
			,
			sup_alias = #{item.sup_alias}
			,
			ven_trade = #{item.ven_trade}
			,
			prov = #{item.prov}
			,
			city = #{item.city}
			,
			ven_dis_rate = #{item.ven_dis_rate}
			,
			ven_pay_con = #{item.ven_pay_con}
			,
			ven_person = #{item.ven_person}
			,
			ven_dir_address = #{item.ven_dir_address}
			,
			ven_cre_grade = #{item.ven_cre_grade}
			,
			end_date = #{item.end_date}
			,
			is_count = #{item.is_count}
			,
			dept_id = #{item.dept_id}
			,
			ven_cre_line = #{item.ven_cre_line}
			,
			bven_tax = #{item.bven_tax}
			,
			ven_dev_date = #{item.ven_dev_date}
			,
			products = #{item.products}
			,
			is_stop = #{item.is_stop}
			,
			business_charter = #{item.business_charter}
			,
			frequency = #{item.frequency}
			
			WHERE 
			group_id = #{item.item.group_id}
			 and 
			hos_id = #{item.item.hos_id}
			 and 
			sup_id = #{item.item.sup_id}
			
		</foreach>
	</update>
	
	
	
	<delete id="deleteMatSupAttr" parameterType="java.util.Map">
		DELETE FROM ass_sup_attr WHERE
			group_id = #{group_id}   and 
			hos_id = #{hos_id}   and 
			sup_id = #{sup_id}  
	</delete>
	
	<delete id="deleteBatchMatSupAttr" parameterType="java.util.List">
		DELETE FROM ass_sup_attr WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and sup_id = #{item.sup_id}
			</foreach> 
	</delete>
	
	<!-- 查询数据 -->
	<select id="queryMatSupAttr" parameterType="java.util.Map" resultMap="matSupAttr" >
		SELECT
		    hsd.group_id,hsd.hos_id,hsd.sup_id,hsd.sup_code,hsd.sup_name,hst.type_name,
		    hsm.mod_code,sm.mod_name,asa.legal, asa.regis_no, asa.phone, asa.mobile, 
		    asa.contact, asa.fax, asa.email, asa.region, asa.zip_code, asa.address, 
		    asa.note, asa.sup_alias, asa.ven_trade, asa.prov, asa.city, asa.ven_dis_rate, 
		    asa.ven_pay_con, asa.ven_person, asa.ven_dir_address, asa.ven_cre_grade, asa.end_date, 
		    asa.is_count, asa.dept_id, asa.ven_cre_line, asa.bven_tax, asa.ven_dev_date, 
		    asa.products, asa.is_stop, asa.business_charter, asa.frequency
		FROM HOS_SUP_DICT hsd
		LEFT JOIN ASS_SUP_ATTR asa
		ON
		     hsd.group_id = asa.group_id and hsd.hos_id = asa.hos_id
		     and hsd.sup_id = asa.sup_id and asa.is_stop = 0
		LEFT JOIN HOS_SUP_TYPE hst
		ON
		     hsd.group_id = hst.group_id and hsd.hos_id = hst.hos_id 
		     and hsd.type_code = hst.type_code and hst.is_stop = 0
		LEFT JOIN HOS_SUP_MOD hsm
		ON
		     hsd.group_id = hsm.group_id and hsd.hos_id = hsm.hos_id
		     and hsd.sup_id = hsm.sup_id
		LEFT JOIN SYS_MOD sm
		ON
		     hsm.mod_code = sm.mod_code
		<where>       
			hsd.is_stop=0 
				<if test="is_ass != null and is_ass != ''">
				AND hsd.is_ass = #{is_ass}
			</if>
			<if test="is_mat != null and is_mat != ''">
				AND hsd.is_mat = #{is_mat}
			</if>
			<if test="is_med != null and is_med != ''">
				AND hsd.is_med = #{is_med}
			</if>
			<if test="group_id != null and group_id != ''">
			AND hsd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hsd.hos_id = #{hos_id}
			</if>
			<if test="sup_id != null and sup_id != ''">
			AND hsd.sup_id = #{sup_id}
			</if>
			<if test="type_code != null and type_code != '' and type_code != '01' and type_code != '02'">
			AND hsd.type_code = #{type_code}
			</if>
			<if test="type_code == '01' or type_code == '02'">
			AND hsd.type_code like '${type_code}%'
			</if>
			<!-- 
			and  exists (
				select 1 from v_user_data_perm b 
				where a.group_id=b.group_id and a.hos_id=b.hos_id 
					and a.sup_id=b.perm_code and b.user_id=#{user_id}
					and b.table_code='HOS_SUP_DICT'
			) -->
		</where>   
		order by  hsd.sup_code asc
	</select>
	
	<!-- 修改页查询 -->
	<select id="queryMatSupAttrByCode" resultMap="matSupAttr" parameterType="java.util.Map" >
	
		SELECT 
			hs.group_id,
			hs.hos_id,
			hs.sup_id,
			hs.sup_code,
			hs.sup_name,
			hs.spell_code,
			hs.wbx_code,
			hs.sort_code ,
			hs.note ,
			h.type_code ,
			hst.type_name ,
			hsm.mod_code,
			sm.mod_name,
			a.legal,
			a.regis_no,
			a.phone,
			a.mobile,
			a.contact,
			a.fax,
			a.email,
			a.region,
			a.zip_code,
			a.address,
		    a.sup_alias, a.ven_trade, a.prov, a.city, a.ven_dis_rate, a.ven_pay_con, 
			a.ven_person, a.ven_dir_address, a.ven_cre_grade, a.end_date, a.is_count, a.dept_id, a.ven_cre_line, 
			a.bven_tax, a.ven_dev_date, a.products, hs.is_stop, a.business_charter, a.frequency,a.sup_id is_flag
		FROM HOS_SUP_dict h
		left join hos_sup hs
		on
			 h.group_id = hs.group_id and h.hos_id = hs.hos_id
		     and h.sup_id = hs.sup_id and h.sup_code = hs.sup_code
		     and hs.is_stop = 0 
		left join ass_sup_attr a
		on 
			  h.group_id = a.group_id AND h.hos_id = a.hos_id 
			  AND h.sup_id = a.sup_id and a.is_stop = 0
		left join HOS_SUP_MOD hsm 
 			on
 				h.group_id = hsm.group_id and h.hos_id = hsm.hos_id 
 				and h.sup_id= hsm.sup_id
 		left join SYS_MOD sm 
 			on hsm.mod_code= sm.mod_code
 		left join HOS_SUP_TYPE hst
 			on
 				h.group_id = hst.group_id and h.hos_id = hst.hos_id 
 				and h.type_code= hst.type_code and hst.is_stop = 0
		WHERE 
		    h.group_id = #{group_id}   
			and h.hos_id = #{hos_id}  
			and h.sup_id = #{sup_id} 
		    and h.is_stop=0
	</select>
	
	<select id="querySupIdByCode" resultType="java.lang.Long" parameterType="java.util.Map" >
	
		SELECT sup_id from HOS_SUP_DICT 
		WHERE 
		    is_stop=0 and
		    group_id = #{group_id}   
			and hos_id = #{hos_id}  
			and sup_code = #{sup_code} 
	</select>
	
	<select id="queryDeptIdByCode" resultType="java.lang.Long" parameterType="java.util.Map" >
	
		SELECT dept_id from HOS_DEPT_DICT 
		WHERE 
		    is_stop=0 and
		    group_id = #{group_id}   
			and hos_id = #{hos_id}   
			and dept_code = #{dept_code} 
	</select>
	
	<!-- 添加 供应商 与模块的对应关系 -->
	<insert id="addHosSupMod" useGeneratedKeys="true" >
		INSERT INTO HOS_SUP_MOD (
			group_id
			,
			hos_id
			,
			sup_id
			,
			mod_code
		) VALUES (
			#{group_id,jdbcType=INTEGER}		,
			#{hos_id,jdbcType=INTEGER}		,
			#{sup_id,jdbcType=INTEGER}		,
			#{mod_code,jdbcType=VARCHAR}
		)
	</insert>
	<!-- 更新 供应商 与模块的对应关系 (专用Sql mms  勿动)-->
	<update id="updateHosSupMod" parameterType="java.util.Map" >
		UPDATE HOS_SUP_MOD SET
		sup_id = #{sup_id,jdbcType=INTEGER}
		,
		mod_code = #{mod_code,jdbcType=VARCHAR}
		
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}
		 and 
		hos_id = #{hos_id,jdbcType=INTEGER}
		 and 
		sup_id = #{sup_id,jdbcType=INTEGER}
		 and 
		mod_code = #{mod_codeOld,jdbcType=VARCHAR}
		
	</update>
	<!-- 查询供应商 与模块的对应关系 是否存在-->
	<select  id="queryHosSupModExist" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(sup_id) from HOS_SUP_MOD 
		where
			group_id = #{group_id,jdbcType=INTEGER}		
			and hos_id = #{hos_id,jdbcType=INTEGER}		
			and sup_id = #{sup_id,jdbcType=INTEGER}		
			and mod_code = #{mod_code,jdbcType=VARCHAR}
	</select>
	<!-- 删除供应商 与模块的对应关系 -->
	<delete id="deleteBatchHosSupMod" parameterType="java.util.List">
		DELETE FROM HOS_SUP_MOD WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and sup_id = #{item.sup_id}
				and mod_code = #{item.mod_code}
			</foreach> 
	</delete>
	
	<!-- 根据供应商类别编码 查询该供应商类别是否存在  -->
	<select  id="querySupTypeExist" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(type_code) from HOS_SUP_TYPE 
		where
			group_id = #{group_id,jdbcType=INTEGER}		
			and hos_id = #{hos_id,jdbcType=INTEGER}		
			and type_code = #{type_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据供应商ID 查询该供应商附属表是否存在  -->
	<select  id="querySupAttrExist" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(1) from ASS_SUP_ATTR 
		where
			group_id = #{group_id,jdbcType=INTEGER}		
			and hos_id = #{hos_id,jdbcType=INTEGER}		
			and sup_id = #{sup_id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询 所属系统模块编码是否存在  -->
	<select  id="queryModExist" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(1) from SYS_MOD 
		where
			 mod_code = #{mod_code,jdbcType=VARCHAR}
	</select>
</mapper>

