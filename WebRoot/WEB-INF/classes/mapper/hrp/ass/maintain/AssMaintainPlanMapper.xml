<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.maintain.AssMaintainPlanMapper">
	
	<resultMap id="assMaintainPlan" type="com.chd.hrp.ass.entity.maintain.AssMaintainPlan"> 
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="plan_id" column="plan_id"/>
	<result property="plan_no" column="plan_no"/>
	<result property="plan_name" column="plan_name"/>
	<result property="ass_year" column="ass_year"/>
	<result property="sharp_name" column="sharp_name"/>
	<result property="ass_month" column="ass_month"/>
	<result property="ass_nature" column="ass_nature"/>
	<result property="naturs_name" column="naturs_name"/>
	<result property="maintain_degree" column="maintain_degree"/>
	<result property="cycle_unit" column="cycle_unit"/>
	<result property="plan_cycle" column="plan_cycle"/>
	<result property="plan_exec_emp" column="plan_exec_emp"/>
	<result property="plan_exec_emp_name" column="plan_exec_emp_name"/>
	<result property="maintain_desc" column="maintain_desc"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="queryDate" column="queryDate"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="last_exec_date" column="last_exec_date"/>
	<result property="next_exec_date" column="next_exec_date"/>
	<result property="plan_start_date" column="plan_start_date"/>
	<result property="plan_end_date" column="plan_end_date"/>
	<result property="stop_emp" column="stop_emp"/>
	<result property="stop_emp_name" column="stop_emp_name"/>
	<result property="stop_date" column="stop_date"/>
	</resultMap>
	
	<resultMap id="assMaintainPlanMap" type="java.util.Map"> 
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="plan_id" column="plan_id"/>
	<result property="plan_no" column="plan_no"/>
	<result property="plan_name" column="plan_name"/>
	<result property="ass_year" column="ass_year"/>
	<result property="sharp_name" column="sharp_name"/>
	<result property="ass_month" column="ass_month"/>
	<result property="ass_nature" column="ass_nature"/>
	<result property="naturs_name" column="naturs_name"/>
	<result property="maintain_degree" column="maintain_degree"/>
	<result property="cycle_unit" column="cycle_unit"/>
	<result property="plan_cycle" column="plan_cycle"/>
	<result property="plan_exec_emp" column="plan_exec_emp"/>
	<result property="plan_exec_emp_name" column="plan_exec_emp_name"/>
	<result property="maintain_desc" column="maintain_desc"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="queryDate" column="queryDate"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="audit_date" column="audit_date"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="last_exec_date" column="last_exec_date"/>
	<result property="next_exec_date" column="next_exec_date"/>
	<result property="plan_start_date" column="plan_start_date"/>
	<result property="plan_end_date" column="plan_end_date"/>
	<result property="stop_emp" column="stop_emp"/>
	<result property="stop_emp_name" column="stop_emp_name"/>
	<result property="stop_date" column="stop_date"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="ass_spec" column="ass_spec"/>
	<result property="ass_mondl" column="ass_mondl"/>
	<result property="ass_brand" column="ass_brand"/>
	<result property="ass_seq_no" column="ass_seq_no"/>
	<result property="fac_name" column="fac_name"/>
	</resultMap>
	 <select id="queryCurrentSequence" resultType="java.lang.Long">
		select ASS_MAINTAIN_PLAN_SEQ.currval val from dual
	</select>
	<insert id="addAssMaintainPlan" useGeneratedKeys="true" >
	
		INSERT INTO ASS_MAINTAIN_PLAN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		plan_id
		,
	
		<if test="plan_no != null and plan_no != ''">
		plan_no
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		plan_name
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		ass_year
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		ass_month
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		maintain_degree
		,
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		cycle_unit
		,
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		plan_cycle
		,
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		plan_exec_emp
		,
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		maintain_desc
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		last_exec_date
		,
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		next_exec_date
		,
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		plan_start_date
		,
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		plan_end_date
		,
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		stop_emp
		,
		</if>
		<if test="stop_date != null and stop_date != ''">
		stop_date
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if> 
		ASS_MAINTAIN_PLAN_SEQ.nextval
		, 
		<if test="plan_no != null and plan_no != ''">
		#{plan_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		#{plan_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		#{ass_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		#{ass_month,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		#{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		#{maintain_degree,jdbcType=INTEGER}
		,
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		#{cycle_unit,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		#{plan_cycle,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		#{plan_exec_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		#{maintain_desc,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		#{create_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		#{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		#{audit_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		#{audit_date,jdbcType=DATE}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=INTEGER}
		,
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		#{last_exec_date,jdbcType=DATE}
		,
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		#{next_exec_date,jdbcType=DATE}
		,
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		#{plan_start_date,jdbcType=DATE}
		,
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		#{plan_end_date,jdbcType=DATE}
		,
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		#{stop_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="stop_date != null and stop_date != ''">
		#{stop_date,jdbcType=DATE}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatchAssMaintainPlan" parameterType="java.util.List" >
	
		INSERT INTO ASS_MAINTAIN_PLAN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="plan_id != null and plan_id != ''">
		plan_id
		,
		</if>
		<if test="plan_no != null and plan_no != ''">
		plan_no
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		plan_name
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		ass_year
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		ass_month
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature
		,
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		maintain_degree
		,
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		cycle_unit
		,
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		plan_cycle
		,
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		plan_exec_emp
		,
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		maintain_desc
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		last_exec_date
		,
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		next_exec_date
		,
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		plan_start_date
		,
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		plan_end_date
		,
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		stop_emp
		,
		</if>
		<if test="stop_date != null and stop_date != ''">
		stop_date
		,
		</if>
		</trim>
		) select ASS_MAINTAIN_PLAN_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			<trim suffix="" suffixOverrides=",">
			<if test="group_id != null and group_id != ''">
			#{item.group_id},jdbcType=INTEGER}
			,
			</if>
			<if test="hos_id != null and hos_id != ''">
			#{item.hos_id},jdbcType=INTEGER}
			,
			</if>
			<if test="copy_code != null and copy_code != ''">
			#{item.copy_code},jdbcType=VARCHAR}
			,
			</if>
			<if test="plan_id != null and plan_id != ''">
			#{item.plan_id},jdbcType=INTEGER}
			,
			</if>
			<if test="plan_no != null and plan_no != ''">
			#{item.plan_no},jdbcType=VARCHAR}
			,
			</if>
			<if test="plan_name != null and plan_name != ''">
			#{item.plan_name},jdbcType=VARCHAR}
			,
			</if>
			<if test="ass_year != null and ass_year != ''">
			#{item.ass_year},jdbcType=VARCHAR}
			,
			</if>
			<if test="ass_month != null and ass_month != ''">
			#{item.ass_month},jdbcType=VARCHAR}
			,
			</if>
			<if test="ass_nature != null and ass_nature != ''">
			#{item.ass_nature},jdbcType=VARCHAR}
			,
			</if>
			<if test="maintain_degree != null and maintain_degree != ''">
			#{item.maintain_degree},jdbcType=INTEGER}
			,
			</if>
			<if test="cycle_unit != null and cycle_unit != ''">
			#{item.cycle_unit},jdbcType=INTEGER}
			,
			</if>
			<if test="plan_cycle != null and plan_cycle != ''">
			#{item.plan_cycle},jdbcType=INTEGER}
			,
			</if>
			<if test="plan_exec_emp != null and plan_exec_emp != ''">
			#{item.plan_exec_emp},jdbcType=INTEGER}
			,
			</if>
			<if test="maintain_desc != null and maintain_desc != ''">
			#{item.maintain_desc},jdbcType=VARCHAR}
			,
			</if>
			<if test="create_emp != null and create_emp != ''">
			#{item.create_emp},jdbcType=INTEGER}
			,
			</if>
			<if test="create_date != null and create_date != ''">
			#{item.create_date},jdbcType=DATE}
			,
			</if>
			<if test="audit_emp != null and audit_emp != ''">
			#{item.audit_emp},jdbcType=INTEGER}
			,
			</if>
			<if test="audit_date != null and audit_date != ''">
			#{item.audit_date},jdbcType=DATE}
			,
			</if>
			<if test="state != null and state != ''">
			#{item.state},jdbcType=INTEGER}
			,
			</if>
			<if test="last_exec_date != null and last_exec_date != ''">
			#{item.last_exec_date},jdbcType=DATE}
			,
			</if>
			<if test="next_exec_date != null and next_exec_date != ''">
			#{item.next_exec_date},jdbcType=DATE}
			,
			</if>
			<if test="plan_start_date != null and plan_start_date != ''">
			#{item.plan_start_date},jdbcType=DATE}
			,
			</if>
			<if test="plan_end_date != null and plan_end_date != ''">
			#{item.plan_end_date},jdbcType=DATE}
			,
			</if>
			<if test="stop_emp != null and stop_emp != ''">
			#{item.stop_emp},jdbcType=INTEGER}
			,
			</if>
			<if test="stop_date != null and stop_date != ''">
			#{item.stop_date},jdbcType=DATE}
			,
			</if>
			</trim>
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateAssMaintainPlan" parameterType="java.util.Map">
	
		UPDATE ass_maintain_plan 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="plan_no != null and plan_no != ''">
		plan_no = #{plan_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="plan_name != null and plan_name != ''">
		plan_name = #{plan_name,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_year != null and ass_year != ''">
		ass_year = #{ass_year,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_month != null and ass_month != ''">
		ass_month = #{ass_month,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		ass_nature = #{ass_nature,jdbcType=VARCHAR}
		,
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		maintain_degree = #{maintain_degree,jdbcType=INTEGER}
		,
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		cycle_unit = #{cycle_unit,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		plan_cycle = #{plan_cycle,jdbcType=INTEGER}
		,
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		plan_exec_emp = #{plan_exec_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		maintain_desc = #{maintain_desc,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp = #{create_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = #{create_date,jdbcType=DATE}
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp = #{audit_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date = #{audit_date,jdbcType=DATE}
		,
		</if>
		<if test="state != null and state != ''">
		state = #{state,jdbcType=INTEGER}
		,
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		last_exec_date = #{last_exec_date,jdbcType=DATE}
		,
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		next_exec_date = #{next_exec_date,jdbcType=DATE}
		,
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		plan_start_date = #{plan_start_date,jdbcType=DATE}
		,
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		plan_end_date = #{plan_end_date,jdbcType=DATE}
		,
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		stop_emp = #{stop_emp,jdbcType=INTEGER}
		,
		</if>
		<if test="stop_date != null and stop_date != ''">
		stop_date = #{stop_date,jdbcType=DATE}
		,
		</if>
		</trim>
		<where>  
		group_id = #{group_id} and
		hos_id = #{hos_id}     and
		copy_code = #{copy_code} and 
		plan_id = #{plan_id}   
		
		</where>  
	</update>
	<update id="updateBatchAssMaintainPlan" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_maintain_plan 
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.state != null and item.state != ''">
					state = #{item.state},
				</if> 
			    <if test="item.audit_emp != null and item.audit_emp != ''">
					audit_emp = #{item.audit_emp} ,
				</if>
				<if test="item.audit_date != null and item.audit_date != ''">
					audit_date = #{item.audit_date} ,
				</if>
			 
			</trim>
		   <where>
					state=0
				<if test="item.group_id != null and item.group_id != ''">
					AND group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code}
				</if> 
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id}
				</if>
			</where>
		</foreach>
	</update>
	
	
		<update id="updateBatchAssMaintainPlanBack" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE ass_maintain_plan
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.state != null and item.state != ''">
					state = #{item.state},
				</if> 
					  audit_emp = #{item.audit_emp},  
				      audit_date = #{item.audit_date},
				 
			</trim>
			<where>
					state=1
				<if test="item.group_id != null and item.group_id != ''">
					AND group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code}
				</if> 
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id}
				</if>
			</where>
			</foreach>
	</update>
	
	
	 <update id="updateBatchAssMaintainPlanStop" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE ass_maintain_plan
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.state != null and item.state != ''">
					state = #{item.state},
				</if>  
				  stop_emp = #{item.stop_emp},  
				  stop_date = #{item.stop_date},
			</trim>
			<where> 
				<if test="item.group_id != null and item.group_id != ''">
					AND group_id = #{item.group_id}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code}
				</if> 
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id}
				</if>
			</where>
			</foreach>
	</update>
	
	<delete id="deleteAssMaintainPlan" parameterType="java.util.Map">
	
		DELETE FROM ass_maintain_plan 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		<if test="ass_year != null and ass_year != ''">
		AND ass_year = #{ass_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_month != null and ass_month != ''">
		AND ass_month = #{ass_month,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		AND maintain_degree = #{maintain_degree,jdbcType=INTEGER}
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		AND cycle_unit = #{cycle_unit,jdbcType=INTEGER}
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		AND plan_cycle = #{plan_cycle,jdbcType=INTEGER}
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		AND plan_exec_emp = #{plan_exec_emp,jdbcType=INTEGER}
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		AND maintain_desc = #{maintain_desc,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		AND last_exec_date = #{last_exec_date,jdbcType=DATE}
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		AND next_exec_date = #{next_exec_date,jdbcType=DATE}
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		AND plan_start_date = #{plan_start_date,jdbcType=DATE}
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		AND plan_end_date = #{plan_end_date,jdbcType=DATE}
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		AND stop_emp = #{stop_emp,jdbcType=INTEGER}
		</if>
		<if test="stop_date != null and stop_date != ''">
		AND stop_date = #{stop_date,jdbcType=DATE}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatchAssMaintainPlan" parameterType="java.util.List">
		DELETE FROM ass_maintain_plan 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 		state = 0	
				AND group_id = #{item.group_id,jdbcType=INTEGER}
	 
				AND hos_id = #{item.hos_id,jdbcType=INTEGER} 
				
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
		 
				AND plan_id = #{item.plan_id,jdbcType=INTEGER}
			 
			</foreach>
	    </where>  
	</delete>
	<select id="queryAssMaintainPlan" parameterType="java.util.Map" resultMap="assMaintainPlan" >
	
		SELECT amp.group_id,
		       amp.hos_id,
		       amp.copy_code,
		       amp.plan_id,
		       amp.plan_no,
		       amp.plan_name,
		       amp.ass_year,
		       amp.ass_month,
		       amp.ass_nature,
		       an.naturs_name,
		       amp.maintain_degree,
		       case amp.cycle_unit
		         when 0 then
		          '年'
		         when 1 then
		          '月'
		         when 2 then
		          '日'
		       end as sharp_name,
		       amp.plan_cycle,
		       amp.plan_exec_emp,
		       su.user_name plan_exec_emp_name,
		       amp.maintain_desc,
		       amp.create_emp,
		       suu.user_name create_emp_name,
		       amp.create_date,
		       amp.audit_emp,
		       suuu.user_name audit_emp_name,
		       amp.audit_date,
		       amp.state,
		       amp.last_exec_date,
		       amp.next_exec_date,
		       amp.plan_start_date,
		       amp.plan_end_date,
		       amp.stop_emp,
		       suuus.user_name stop_emp_name,
		       amp.stop_date
		  FROM ASS_MAINTAIN_PLAN amp
		  left join (select group_id,
		                    hos_id,
		                    copy_code,
		                    plan_id,
		                    max(ass_card_no) ass_card_no
		               from ass_maintain_plan_ass
		              group by group_id, hos_id, copy_code, plan_id) aa
		    on aa.group_id = amp.group_id
		   and aa.hos_id = amp.hos_id
		   and aa.copy_code = amp.copy_code
		   and aa.plan_id = amp.plan_id
		  left join v_ass_card ca
		    on ca.GROUP_ID = aa.group_id
		   and ca.HOS_ID = aa.hos_id
		   and ca.COPY_CODE = aa.copy_code
		   and ca.ASS_CARD_NO = aa.ass_card_no
		  left join ass_no_dict di
		    on di.group_id = ca.GROUP_ID
		   and di.hos_id = ca.HOS_ID
		   and di.copy_code = ca.COPY_CODE
		   and di.ass_id = ca.ASS_ID
		   and di.ass_no = ca.ASS_NO
		   and di.is_stop = 0
		
		  left join ASS_NATURS an
		    on amp.ass_nature = an.naturs_code
		  left join sys_user su
		    on amp.plan_exec_emp = su.user_id
		  left join sys_user suu
		    on amp.create_emp = suu.user_id
		  left join sys_user suuu
		    on amp.audit_emp = suuu.user_id
		  left join sys_user suuus
		    on amp.stop_emp = suuus.user_id

		<where>    
		           
		<if test="group_id != null and group_id != ''">
		AND amp.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND amp.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND amp.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND amp.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND amp.plan_no like '%${plan_no}%'
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND amp.plan_name  like '%${plan_name}%'
		</if>
		<if test="ass_year != null and ass_year != ''">
		AND amp.ass_year = #{ass_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_month != null and ass_month != ''">
		AND amp.ass_month = #{ass_month,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND amp.ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		AND amp.maintain_degree = #{maintain_degree,jdbcType=INTEGER}
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		AND amp.cycle_unit = #{cycle_unit,jdbcType=INTEGER}
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		AND amp.plan_cycle = #{plan_cycle,jdbcType=INTEGER}
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		AND amp.plan_exec_emp = #{plan_exec_emp,jdbcType=INTEGER}
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		AND amp.maintain_desc = #{maintain_desc,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND amp.create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND amp.create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="create_date_begin != null and create_date_begin != '' and create_date_end != null and create_date_end != ''">
			AND amp.create_date between to_date(#{create_date_begin},'yyyy/mm/dd') and to_date(#{create_date_end},'yyyy/mm/dd')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND amp.audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND amp.audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="audit_date_begin != null and audit_date_begin != '' and audit_date_end != null and audit_date_end != ''">
			AND amp.audit_date between to_date(#{audit_date_begin},'yyyy/mm/dd') and to_date(#{audit_date_end},'yyyy/mm/dd')
		</if>
		<if test="state != null and state != ''">
		AND amp.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		AND amp.last_exec_date = to_date(#{last_exec_date},'yyyy/mm/dd')  
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		AND amp.next_exec_date = to_date(#{next_exec_date},'yyyy/mm/dd')  
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		AND amp.plan_start_date = #{plan_start_date,jdbcType=DATE}
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		AND amp.plan_end_date = to_date(#{plan_end_date},'yyyy/mm/dd')  
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		AND amp.stop_emp = #{stop_emp,jdbcType=INTEGER}
		</if>
		<if test="stop_date != null and stop_date != ''">
		AND amp.stop_date = to_date(#{stop_date},'yyyy/mm/dd')  
		</if>
		<if test="ass_table != null and ass_table != ''">
		AND (di.ass_name like '%${ass_table}%' 
		or aa.ass_card_no  like '%${ass_table}%' 
		or di.ass_code like '%${ass_table}%'  
		)
		</if>
		</where>   
		order by amp.plan_no asc
	</select>
	<select id="queryAssMaintainPlanByCode" resultMap="assMaintainPlan"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_name,
		ass_year,
		ass_month,
		ass_nature,
		maintain_degree,
		cycle_unit,
		plan_cycle,
		plan_exec_emp,
		maintain_desc,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		last_exec_date,
		next_exec_date,
		plan_start_date,
		plan_end_date,
		stop_emp,
		stop_date
		FROM ass_maintain_plan 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		plan_id = #{plan_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryAssMaintainPlanByUniqueness" resultMap="assMaintainPlan"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_name,
		ass_year,
		ass_month,
		ass_nature,
		maintain_degree,
		cycle_unit,
		plan_cycle,
		plan_exec_emp,
		maintain_desc,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		last_exec_date,
		next_exec_date,
		plan_start_date,
		plan_end_date,
		stop_emp,
		stop_date
		FROM ASS_MAINTAIN_PLAN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		<if test="ass_year != null and ass_year != ''">
		AND ass_year = #{ass_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_month != null and ass_month != ''">
		AND ass_month = #{ass_month,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		AND maintain_degree = #{maintain_degree,jdbcType=INTEGER}
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		AND cycle_unit = #{cycle_unit,jdbcType=INTEGER}
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		AND plan_cycle = #{plan_cycle,jdbcType=INTEGER}
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		AND plan_exec_emp = #{plan_exec_emp,jdbcType=INTEGER}
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		AND maintain_desc = #{maintain_desc,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		AND last_exec_date = #{last_exec_date,jdbcType=DATE}
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		AND next_exec_date = #{next_exec_date,jdbcType=DATE}
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		AND plan_start_date = #{plan_start_date,jdbcType=DATE}
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		AND plan_end_date = #{plan_end_date,jdbcType=DATE}
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		AND stop_emp = #{stop_emp,jdbcType=INTEGER}
		</if>
		<if test="stop_date != null and stop_date != ''">
		AND stop_date = #{stop_date,jdbcType=DATE}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryAssMaintainPlanExists" resultMap="assMaintainPlan"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		plan_id,
		plan_no,
		plan_name,
		ass_year,
		ass_month,
		ass_nature,
		maintain_degree,
		cycle_unit,
		plan_cycle,
		plan_exec_emp,
		maintain_desc,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		state,
		last_exec_date,
		next_exec_date,
		plan_start_date,
		plan_end_date,
		stop_emp,
		stop_date
		FROM ASS_MAINTAIN_PLAN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND plan_no = #{plan_no,jdbcType=VARCHAR}
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		<if test="ass_year != null and ass_year != ''">
		AND ass_year = #{ass_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_month != null and ass_month != ''">
		AND ass_month = #{ass_month,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		AND maintain_degree = #{maintain_degree,jdbcType=INTEGER}
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		AND cycle_unit = #{cycle_unit,jdbcType=INTEGER}
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		AND plan_cycle = #{plan_cycle,jdbcType=INTEGER}
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		AND plan_exec_emp = #{plan_exec_emp,jdbcType=INTEGER}
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		AND maintain_desc = #{maintain_desc,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		AND last_exec_date = #{last_exec_date,jdbcType=DATE}
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		AND next_exec_date = #{next_exec_date,jdbcType=DATE}
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		AND plan_start_date = #{plan_start_date,jdbcType=DATE}
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		AND plan_end_date = #{plan_end_date,jdbcType=DATE}
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		AND stop_emp = #{stop_emp,jdbcType=INTEGER}
		</if>
		<if test="stop_date != null and stop_date != ''">
		AND stop_date = #{stop_date,jdbcType=DATE}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 保养提醒 -->
	<select id="queryAssMainRemindPlan" parameterType="java.util.Map" resultMap="assMaintainPlan" >
					SELECT 
      amp.group_id,
      amp.hos_id,
      amp.copy_code,
      amp.plan_id,
      amp.plan_no,
      amp.plan_name,
      amp.ass_year,
      amp.ass_month,
      amp.ass_nature,
        an.naturs_name,
      amp.maintain_degree,
        
         case amp.cycle_unit when 0 then '年'
      when 1 then '月'
        when 2 then '日'
          end as sharp_name,
        amp.plan_cycle,
        amp.plan_exec_emp,
        su.user_name plan_exec_emp_name,
        amp.maintain_desc,
        amp.create_emp,
        suu.user_name create_emp_name,
        amp.create_date,
        amp.audit_emp,
        suuu.user_name audit_emp_name,
        amp.audit_date,
        amp.last_exec_date,
        amp.next_exec_date,
        amp.plan_start_date,
        amp.plan_end_date,
        amp.stop_emp,
        suuus.user_name stop_emp_name,
        amp.stop_date,
        case amp.cycle_unit
        when 0 then 
           (case when nvl(ROUND(TO_NUMBER( add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt; 0 then '过期'
            when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) = 0 then '到期'
            when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt; p.para_value then '临近'  
             end)
        
        when 1 then
          (case when nvl(ROUND(TO_NUMBER( add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt; 0 then '过期'
            when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) = 0 then '到期'
            when nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt; p.para_value then '临近'  
             end )
        when 2 then
        (case when nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt; 0 then '过期'
        when nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) = 0 then '到期'
       when nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt; p.para_value then '临近'  
           end)
           end  as state_name
        FROM ASS_MAINTAIN_PLAN amp
        left join ASS_NATURS an on amp.ass_nature = an.naturs_code
        left join sys_user su on amp.plan_exec_emp = su.user_id
        left join sys_user suu on amp.create_emp = suu.user_id
        left join sys_user suuu on amp.audit_emp = suuu.user_id
        left join sys_user suuus on amp.stop_emp = suuus.user_id
        left join acc_para p on amp.group_id = p.group_id  and 
        amp.hos_id = p.hos_id  and 
        amp.copy_code = p.copy_code and 
        p.para_code = '05003'
		<where>    
		           
		<if test="group_id != null and group_id != ''">
		AND amp.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND amp.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND amp.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		AND amp.state = 1
		<if test="queryDate != null and queryDate != ''">
		AND amp.create_date =  to_date(#{queryDate,jdbcType=VARCHAR},'yyyy-MM-dd')
		</if>
		<if test="state_name ==1 ">
		and((nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0)&gt;  0 and  nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date('2018-01-10', 'yyyy-MM-dd'))), 0)  &lt;  p.para_value and amp.cycle_unit = 0) 
        or (nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0)&gt; 0 and nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date('2018-01-10', 'yyyy-MM-dd'))), 0)  &lt; p.para_value and amp.cycle_unit = 1) 
        or ( nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0)&gt; 0 and nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date('2018-01-10', 'yyyy-MM-dd'))), 0)  &lt;  p.para_value and amp.cycle_unit = 2))
		</if>
		<if test="state_name ==2">
		and ((nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) = 0 and amp.cycle_unit = 0)
		or
		(nvl(ROUND(TO_NUMBER(add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) = 0 and amp.cycle_unit = 1)
		or
		(nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) = 0 and amp.cycle_unit = 2))
		</if>
		<if test="state_name ==3">
		and ((nvl(ROUND(TO_NUMBER( add_months(amp.AUDIT_DATE,12*amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt;  0 and amp.cycle_unit = 0)
		or
		(nvl(ROUND(TO_NUMBER( add_months(amp.AUDIT_DATE,amp.plan_cycle) - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt;  0 and amp.cycle_unit = 1)
		or
		(nvl(ROUND(TO_NUMBER(amp.AUDIT_DATE+amp.plan_cycle - to_date(#{newDate,jdbcType=DATE}, 'yyyy-MM-dd'))), 0) &lt;  0 and amp.cycle_unit = 2)) 
		
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND amp.ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if> -->
		<if test="plan_name != null and plan_name != ''">
		AND amp.plan_name = #{plan_name,jdbcType=VARCHAR}
		</if>
		</where>   
		order by amp.plan_no asc
		
	</select>
	
	<!-- 打印主表 -->
	<select id="queryAssMainTainPlanByMainBatch" parameterType="java.util.Map" resultType="java.util.Map">
			
		SELECT 
			
		   amp.plan_id as id,
		  amp.plan_no ,
		
		  amp.plan_name,
		  amp.ass_year,
		  amp.group_id,
			amp.hos_id,
			amp.copy_code,
		  amp.ass_month,
		  amp.ass_nature,
		    an.naturs_name,
		     case when amp.maintain_degree = 0 then '一级保养' when amp.maintain_degree = 1 then '二级保养' when amp.maintain_degree = 2 then '三级保养' when amp.maintain_degree = 3 then '四级保养'else '' end maintain_degree,
		       case amp.cycle_unit when 0 then '年'
		      when 1 then '月'
		        when 2 then '日'
		          end as sharp_name,
		    amp.plan_cycle,
		    amp.plan_exec_emp,
		    su.user_name plan_exec_emp_name,
		    amp.maintain_desc,
		    amp.create_emp,
		    suu.user_name create_emp_name,
		    amp.create_date,
		    amp.audit_emp,
		    suuu.user_name audit_emp_name,
		    amp.audit_date,
		    case when amp.state = 0 then '新建' when amp.state = 1 then '审核' when amp.state = 2 then '终止' else '' end state,
		    amp.last_exec_date,
		    amp.next_exec_date,
		    amp.plan_start_date,
		    amp.plan_end_date,
		    amp.stop_emp,
		    suuus.user_name stop_emp_name,
		    amp.stop_date
		    FROM ASS_MAINTAIN_PLAN amp
		    left join ASS_NATURS an on amp.ass_nature = an.naturs_code
		    left join sys_user su on amp.plan_exec_emp = su.user_id
		    left join sys_user suu on amp.create_emp = suu.user_id
		    left join sys_user suuu on amp.audit_emp = suuu.user_id
		    left join sys_user suuus on amp.stop_emp = suuus.user_id
			where                     
			amp.group_id = #{group_id}
			AND amp.hos_id = #{hos_id}
			AND amp.copy_code = #{copy_code}
			AND amp.plan_id in (${paraId})
		order by amp.plan_id asc
	
	</select>
	
	<!-- 明细查询 -->
	<select id="queryAssMainTainPlanByDetail" parameterType="java.util.Map" resultType="java.util.Map">
		
		select 
       a.plan_id as id,
       a.ass_card_no,
       a.group_id,
       a.hos_id,
       a.copy_code,
       b.ASS_SPEC,
       b.ASS_MONDL,
       b.ASS_BRAND,
       c.ass_code,
       c.ass_name,
       d.fac_code,
       d.fac_name,
       f.item_code,
       f.item_name,
       b.ASS_SEQ_NO
  from ASS_MAINTAIN_PLAN_ASS a
  left join v_ass_card b
    on a.group_id = b.GROUP_ID
   and a.hos_id = b.HOS_ID
   and a.copy_code = b.COPY_CODE
   and a.ass_card_no = b.ASS_CARD_NO
  left join ass_no_dict c
    on c.group_id = b.GROUP_ID
   and c.hos_id = b.HOS_ID
   and c.copy_code = b.COPY_CODE
   and c.ass_id = b.ASS_ID
   and c.ass_no = b.ASS_NO
   and c.is_stop = 0
  left join hos_fac_dict d
    on d.group_id = b.GROUP_ID
   and d.hos_id = b.HOS_ID
   and d.fac_id = b.FAC_ID
   and d.fac_no = b.FAC_NO
   and d.is_stop = 0
   left join ASS_MAINTAIN_PLAN_ITEM f
   on f.group_id = a.group_id
   and f.hos_id = a.hos_id
   and f.copy_code = a.copy_code
   and f.plan_id = a.plan_id
   and f.ass_card_no = a.ass_card_no
  
	where 
		a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND a.plan_id in  (${paraId})
			</if>
			<if test="plan_id != null and plan_id != ''">
			AND a.plan_id = #{plan_id,jdbcType=VARCHAR}
			</if> 	
	
	order by a.plan_id asc
	</select>
	
	<!-- 修改页面主表打印 -->
	<select id="queryAssMainTainPlanByMain"  parameterType="java.util.Map" resultType="java.util.Map" >
	
		
		SELECT 
			
		  amp.plan_id as id,
		  amp.plan_no,
		  amp.plan_name,
		  amp.ass_year,
		  amp.group_id,
			amp.hos_id,
			amp.copy_code,
		  amp.ass_month,
		  amp.ass_nature,
		    an.naturs_name,
		  amp.maintain_degree,
		       case amp.cycle_unit when 0 then '年'
		      when 1 then '月'
		        when 2 then '日'
		          end as sharp_name,
		    amp.plan_cycle,
		    amp.plan_exec_emp,
		    su.user_name plan_exec_emp_name,
		    amp.maintain_desc,
		    amp.create_emp,
		    suu.user_name create_emp_name,
		    amp.create_date,
		    amp.audit_emp,
		    suuu.user_name audit_emp_name,
		    amp.audit_date,
		     amp.state,
		    amp.last_exec_date,
		    amp.next_exec_date,
		    amp.plan_start_date,
		    amp.plan_end_date,
		    amp.stop_emp,
		    suuus.user_name stop_emp_name,
		    amp.stop_date
		    FROM ASS_MAINTAIN_PLAN amp
		    left join ASS_NATURS an on amp.ass_nature = an.naturs_code
		    left join sys_user su on amp.plan_exec_emp = su.user_id
		    left join sys_user suu on amp.create_emp = suu.user_id
		    left join sys_user suuu on amp.audit_emp = suuu.user_id
		    left join sys_user suuus on amp.stop_emp = suuus.user_id
			where                     
			amp.group_id = #{group_id}
			AND amp.hos_id = #{hos_id}
			AND amp.copy_code = #{copy_code}
			AND amp.plan_id  = #{plan_id}
		order by amp.plan_id asc
	</select>
	
	<!-- 保养计划单打印状态 -->
	<select id="queryAssMainTainState" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT plan_no  FROM ASS_MAINTAIN_PLAN 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND plan_id in  (${paraId})
			</if>
			<if test="plan_id != null and plan_id != ''">
			AND plan_id = #{plan_id,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	
<!-- 保养计划是否显示明细查询 -->
<select id="queryDetails" parameterType="java.util.Map" resultMap="assMaintainPlanMap">
	with detail_temp as
 (
  
  select a.group_id,
          a.hos_id,
          a.copy_code,
          a.plan_id,
          a.plan_no,
          a.plan_name,
          a.ass_year,
          a.ass_month,
          a.ass_nature,
          an.naturs_name,
          a.maintain_degree,
          case a.cycle_unit
            when 0 then
             '年'
            when 1 then
             '月'
            when 2 then
             '日'
          end as sharp_name,
          a.plan_cycle,
          a.plan_exec_emp,
          su.user_name plan_exec_emp_name,
          a.maintain_desc,
          a.create_emp,
          suu.user_name create_emp_name,
          a.create_date,
          a.audit_emp,
          suuu.user_name audit_emp_name,
          a.audit_date,
          a.state,
          a.last_exec_date,
          a.next_exec_date,
          a.plan_start_date,
          a.plan_end_date,
          a.stop_emp,
          suuus.user_name stop_emp_name,
          a.stop_date,
          b.ass_card_no,
          ca.ASS_SPEC,
          ca.ASS_MONDL,
          ca.ASS_BRAND,
          ca.ASS_SEQ_NO,
          di.fac_name,
            c.ass_code,
          c.ass_name
    from ass_maintain_plan a
    left join ass_maintain_plan_ass b
      on a.group_id = b.group_id
     and a.hos_id = b.hos_id
     and a.copy_code = b.copy_code
     and a.plan_id = b.plan_id
    left join v_ass_card ca
      on ca.GROUP_ID = b.group_id
     and ca.HOS_ID = b.hos_id
     and ca.COPY_CODE = b.copy_code
     and ca.ASS_CARD_NO = b.ass_card_no
    left join ass_no_dict c
      on ca.group_id = c.group_id
     and ca.hos_id = c.hos_id
     and ca.copy_code = c.copy_code
     and ca.ass_id = c.ass_id
     and c.is_stop = 0
    left join HOS_FAC_DICT di
      on di.group_id = ca.GROUP_ID
     and di.hos_id = ca.HOS_ID
     and di.fac_id = ca.FAC_ID
     and di.fac_no = ca.FAC_NO
     and di.is_stop = 0
  
    left join ASS_NATURS an
      on a.ass_nature = an.naturs_code
    left join sys_user su
      on a.plan_exec_emp = su.user_id
    left join sys_user suu
      on a.create_emp = suu.user_id
    left join sys_user suuu
      on a.audit_emp = suuu.user_id
    left join sys_user suuus
      on a.stop_emp = suuus.user_id
 <where>    
		           
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="plan_id != null and plan_id != ''">
		AND a.plan_id = #{plan_id,jdbcType=INTEGER}
		</if>
		<if test="plan_no != null and plan_no != ''">
		AND a.plan_no like '%${plan_no}%'
		</if>
		<if test="plan_name != null and plan_name != ''">
		AND a.plan_name  like '%${plan_name}%'
		</if>
		<if test="ass_year != null and ass_year != ''">
		AND a.ass_year = #{ass_year,jdbcType=VARCHAR}
		</if>
		<if test="ass_month != null and ass_month != ''">
		AND a.ass_month = #{ass_month,jdbcType=VARCHAR}
		</if>
		<if test="ass_nature != null and ass_nature != ''">
		AND a.ass_nature = #{ass_nature,jdbcType=VARCHAR}
		</if>
		<if test="maintain_degree != null and maintain_degree != ''">
		AND a.maintain_degree = #{maintain_degree,jdbcType=INTEGER}
		</if>
		<if test="cycle_unit != null and cycle_unit != ''">
		AND a.cycle_unit = #{cycle_unit,jdbcType=INTEGER}
		</if>
		<if test="plan_cycle != null and plan_cycle != ''">
		AND a.plan_cycle = #{plan_cycle,jdbcType=INTEGER}
		</if>
		<if test="plan_exec_emp != null and plan_exec_emp != ''">
		AND a.plan_exec_emp = #{plan_exec_emp,jdbcType=INTEGER}
		</if>
		<if test="maintain_desc != null and maintain_desc != ''">
		AND a.maintain_desc = #{maintain_desc,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="create_date_begin != null and create_date_begin != '' and create_date_end != null and create_date_end != ''">
			AND a.create_date between to_date(#{create_date_begin},'yyyy/mm/dd') and to_date(#{create_date_end},'yyyy/mm/dd')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp,jdbcType=INTEGER}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND a.audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="audit_date_begin != null and audit_date_begin != '' and audit_date_end != null and audit_date_end != ''">
			AND a.audit_date between to_date(#{audit_date_begin},'yyyy/mm/dd') and to_date(#{audit_date_end},'yyyy/mm/dd')
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="last_exec_date != null and last_exec_date != ''">
		AND a.last_exec_date = to_date(#{last_exec_date},'yyyy/mm/dd')  
		</if>
		<if test="next_exec_date != null and next_exec_date != ''">
		AND a.next_exec_date = to_date(#{next_exec_date},'yyyy/mm/dd')  
		</if>
		<if test="plan_start_date != null and plan_start_date != ''">
		AND a.plan_start_date = #{plan_start_date,jdbcType=DATE}
		</if>
		<if test="plan_end_date != null and plan_end_date != ''">
		AND a.plan_end_date = to_date(#{plan_end_date},'yyyy/mm/dd')  
		</if>
		<if test="stop_emp != null and stop_emp != ''">
		AND a.stop_emp = #{stop_emp,jdbcType=INTEGER}
		</if>
		<if test="stop_date != null and stop_date != ''">
		AND a.stop_date = to_date(#{stop_date},'yyyy/mm/dd')  
		</if>
		<if test="ass_table != null and ass_table != ''">
		AND (c.ass_name like '%${ass_table}%' 
		or b.ass_card_no  like '%${ass_table}%' 
		or c.ass_code like '%${ass_table}%'  
		)
		</if>
		</where>   
  )
select group_id,
       hos_id,
       copy_code,
       plan_id,
       plan_no,
       plan_name,
       ass_year,
       ass_month,
       ass_nature,
       naturs_name,
       maintain_degree,
       sharp_name,
       plan_cycle,
       plan_exec_emp,
       plan_exec_emp_name,
       maintain_desc,
       create_emp,
       create_emp_name,
       create_date,
       audit_emp,
       audit_emp_name,
       audit_date,
       state,
       last_exec_date,
       next_exec_date,
       plan_start_date,
       plan_end_date,
       stop_emp,
       stop_emp_name,
       stop_date,
       ass_card_no,
       ASS_SPEC,
       ASS_MONDL,
       ASS_BRAND,
       ASS_SEQ_NO,
       fac_name,
		ass_code,
		ass_name
  from detail_temp

 order by plan_id
	

</select>	
	
</mapper>

