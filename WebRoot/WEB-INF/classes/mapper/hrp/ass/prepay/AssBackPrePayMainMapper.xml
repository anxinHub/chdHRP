<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.prepay.AssBackPrePayMainMapper">
	
	<resultMap id="assBackPrePayMain" type="com.chd.hrp.ass.entity.prepay.AssBackPrePayMain">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_no" column="pay_no"/>
	<result property="pay_date" column="pay_date"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_code" column="ven_code"/>
	<result property="ven_name" column="ven_name"/>
	<result property="pay_money" column="pay_money"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="audit_date" column="audit_date"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="assBackPrePayMainMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_no" column="pay_no"/>
	<result property="pay_date" column="pay_date"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_code" column="ven_code"/>
	<result property="ven_name" column="ven_name"/>
	<result property="pay_money" column="pay_money"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="create_date" column="create_date"/>
	<result property="audit_emp" column="audit_emp"/>
	<result property="audit_emp_name" column="audit_emp_name"/>
	<result property="audit_date" column="audit_date"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_BACK_PRE_PAY_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_no
		,
		pay_date
		,
		ven_id
		,
		ven_no
		,
		pay_money
		,
		state
		,
		create_emp
		,
		create_date
		,
		audit_emp
		,
		audit_date
		,
		note
		,
		operator_emp
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{pay_no,jdbcType=VARCHAR}
		,
		to_date(#{pay_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		#{ven_id,jdbcType=INTEGER}
		,
		#{ven_no,jdbcType=INTEGER}
		,
		nvl(#{pay_money,jdbcType=INTEGER},0)
		,
		#{state,jdbcType=INTEGER}
		,
		#{create_emp,jdbcType=VARCHAR}
		,
		to_date(#{create_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		#{audit_emp,jdbcType=VARCHAR}
		,
		#{audit_date,jdbcType=DATE}
		,
		#{note,jdbcType=VARCHAR}
		,
		#{operator_emp,jdbcType=VARCHAR}
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_BACK_PRE_PAY_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		pay_no
		,
		pay_date
		,
		ven_id
		,
		ven_no
		,
		pay_money
		,
		state
		,
		create_emp
		,
		create_date
		,
		audit_emp
		,
		audit_date
		,
		note
		,
		operator_emp
		)
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.pay_no,jdbcType=VARCHAR}
			,
			#{item.pay_date,jdbcType=DATE}
			,
			#{item.ven_id,jdbcType=INTEGER}
			,
			#{item.ven_no,jdbcType=INTEGER}
			,
			#{item.pay_money,jdbcType=INTEGER}
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.create_emp,jdbcType=VARCHAR}
			,
			#{item.create_date,jdbcType=DATE}
			,
			#{item.audit_emp,jdbcType=VARCHAR}
			,
			#{item.audit_date,jdbcType=DATE}
			,
			#{item.note,jdbcType=VARCHAR}
			,
			#{item.operator_emp,jdbcType=VARCHAR}
		    from dual
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ASS_BACK_PRE_PAY_MAIN 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="pay_date != null and pay_date != ''">
		pay_date = to_date(#{pay_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		</if>
		<if test="ven_id != null and ven_id != ''">
		ven_id = #{ven_id,jdbcType=INTEGER}
		,
		</if>
		<if test="ven_no != null and ven_no != ''">
		ven_no = #{ven_no,jdbcType=INTEGER}
		,
		</if>
		<if test="pay_money != null and pay_money != ''">
		pay_money = #{pay_money,jdbcType=INTEGER}
		,
		</if>
		<if test="state != null and state != ''">
		state = #{state,jdbcType=INTEGER}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp = #{create_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		audit_emp = #{audit_emp,jdbcType=VARCHAR}
		,
		</if>
		<if test="audit_date != null and audit_date != ''">
		audit_date = to_date(#{audit_date,jdbcType=DATE},'YYYY-MM-DD')
		,
		</if>
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="operator_emp != null and operator_emp != ''">
		operator_emp = #{operator_emp,jdbcType=VARCHAR}
		,
		</if>
		
		</trim>
		<where>                     
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND pay_no = #{pay_no,jdbcType=VARCHAR}
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_PRE_PAY_MAIN 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.pay_date != null and item.pay_date != ''">
			pay_date = #{item.pay_date,jdbcType=DATE}
			,
			</if>
			<if test="item.ven_id != null and item.ven_id != ''">
			ven_id = #{item.ven_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.ven_no != null and item.ven_no != ''">
			ven_no = #{item.ven_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.pay_money != null and item.pay_money != ''">
			pay_money = #{item.pay_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.state != null and item.state != ''">
			state = #{item.state,jdbcType=INTEGER}
			,
			</if>
			<if test="item.create_emp != null and item.create_emp != ''">
			create_emp = #{item.create_emp,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date,jdbcType=DATE}
			,
			</if>
			<if test="item.audit_emp != null and item.audit_emp != ''">
			audit_emp = #{item.audit_emp,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.audit_date != null and item.audit_date != ''">
			audit_date = #{item.audit_date,jdbcType=DATE}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.pay_no != null and item.pay_no != ''">
			AND pay_no = #{item.pay_no,jdbcType=VARCHAR}
			</if>  
			<if test="item.pay_date != null and item.pay_date != ''">
			AND pay_date = #{item.pay_date,jdbcType=DATE}
			</if>  
			<if test="item.ven_id != null and item.ven_id != ''">
			AND ven_id = #{item.ven_id,jdbcType=INTEGER}
			</if>  
			<if test="item.ven_no != null and item.ven_no != ''">
			AND ven_no = #{item.ven_no,jdbcType=INTEGER}
			</if>  
			<if test="item.pay_money != null and item.pay_money != ''">
			AND pay_money = #{item.pay_money,jdbcType=INTEGER}
			</if>  
			<if test="item.state != null and item.state != ''">
			AND state = #{item.state,jdbcType=INTEGER}
			</if>  
			<if test="item.create_emp != null and item.create_emp != ''">
			AND create_emp = #{item.create_emp,jdbcType=VARCHAR}
			</if>  
			<if test="item.create_date != null and item.create_date != ''">
			AND create_date = #{item.create_date,jdbcType=DATE}
			</if>  
			<if test="item.audit_emp != null and item.audit_emp != ''">
			AND audit_emp = #{item.audit_emp,jdbcType=VARCHAR}
			</if>  
			<if test="item.audit_date != null and item.audit_date != ''">
			AND audit_date = #{item.audit_date,jdbcType=DATE}
			</if>  
			<if test="item.note != null and item.note != ''">
			AND note = #{item.note,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<update id="updatePayMoney" parameterType="java.util.Map">
		UPDATE ASS_BACK_PRE_PAY_MAIN SET
			pay_money = #{pay_money,jdbcType=INTEGER}
		where                    
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND pay_no = #{pay_no,jdbcType=VARCHAR}
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ASS_BACK_PRE_PAY_MAIN 
		where                    
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		AND pay_no = #{pay_no,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ASS_BACK_PRE_PAY_MAIN 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND pay_no = #{item.pay_no,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assBackPrePayMain" >
	select * from (
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.pay_no,
		a.pay_date,
		a.ven_id,
		a.ven_no,b.sup_code ven_code,b.sup_name ven_name,
		a.pay_money,
		a.state,
		a.create_emp,su1.user_name create_emp_name,
		a.create_date,
		a.audit_emp,su2.user_name audit_emp_name,
		a.audit_date,
		a.note,
		case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
		a.operator_emp,
		su3.user_name operator_emp_name
		FROM ASS_BACK_PRE_PAY_MAIN a
		
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.operator_emp = su3.user_id
		
		<where>                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="pay_no != null and pay_no != ''">
		AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
		</if>
		<if test="pay_date_beg != null and pay_date_beg != '' and pay_date_end != null and pay_date_end != ''">
		AND a.pay_date between to_date(#{pay_date_beg,jdbcType=DATE},'yyyy-MM-dd') and  to_date(#{pay_date_end,jdbcType=DATE},'yyyy-MM-dd')
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id,jdbcType=INTEGER}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND a.ven_no = #{ven_no,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="operator_emp != null and operator_emp != ''">
		AND a.operator_emp = #{operator_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg,jdbcType=DATE},'yyyy-MM-dd') and  to_date(#{create_date_end,jdbcType=DATE},'yyyy-MM-dd')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
		AND a.audit_date between to_date(#{audit_date_beg,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{audit_date_end,jdbcType=DATE},'yyyy-MM-dd')
		</if>
		</where>   
		union all
		SELECT 
		null group_id,
		null hos_id,
		null copy_code,
		null pay_no,
		null pay_date,
		null ven_id,
		null ven_no,
		null ven_code,
		null ven_name,
		sum(pay_money) pay_money,
		null state,
		null create_emp,
		null create_emp_name,
		null create_date,
		null audit_emp,
		null audit_emp_name,
		null audit_date,
		'合计' note,
		null state_name,
		null operator_emp,
		null operator_emp_name
		FROM ASS_BACK_PRE_PAY_MAIN a
		<where>                     
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		<if test="pay_no != null and pay_no != ''">
		AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
		</if>
		<if test="pay_date_beg != null and pay_date_beg != '' and pay_date_end != null and pay_date_end != ''">
		AND a.pay_date between to_date(#{pay_date_beg,jdbcType=DATE},'yyyy-MM-dd') and  to_date(#{pay_date_end,jdbcType=DATE},'yyyy-MM-dd')
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND a.ven_id = #{ven_id,jdbcType=INTEGER}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND a.ven_no = #{ven_no,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="operator_emp != null and operator_emp != ''">
		AND a.operator_emp = #{operator_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg,jdbcType=DATE},'yyyy-MM-dd') and  to_date(#{create_date_end,jdbcType=DATE},'yyyy-MM-dd')
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND a.audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date_beg != null and audit_date_beg != '' and audit_date_end != null and audit_date_end != ''">
		AND a.audit_date between to_date(#{audit_date_beg,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{audit_date_end,jdbcType=DATE},'yyyy-MM-dd')
		</if>
		</where> ) t
		order by t.pay_no desc
	</select>
	<select id="queryByCode" resultMap="assBackPrePayMain"  parameterType="java.util.Map" >
	
		SELECT 
		a.group_id,
		a.hos_id,
		a.copy_code,
		a.pay_no,
		a.pay_date,
		a.ven_id,
		a.ven_no,b.sup_code ven_code,b.sup_name ven_name,
		a.pay_money,
		a.state,
		a.create_emp,su1.user_name create_emp_name,
		a.create_date,
		a.audit_emp,su2.user_name audit_emp_name,
		a.audit_date,
		a.note,
		case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state_name,
		a.operator_emp,
		su3.user_name operator_emp_name
		FROM ASS_BACK_PRE_PAY_MAIN a
		
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and b.is_stop = 0
		
		left join sys_user su1 on
		a.group_id = su1.group_id
		and a.hos_id = su1.hos_id
		and a.create_emp = su1.user_id
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.audit_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.operator_emp = su3.user_id
		
		where                
		a.group_id = #{group_id,jdbcType=INTEGER}
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
	
	</select>
	<select id="queryByUniqueness" resultMap="assBackPrePayMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_no,
		pay_date,
		ven_id,
		ven_no,
		pay_money,
		state,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		note
		FROM ASS_BACK_PRE_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_no != null and pay_no != ''">
		AND pay_no = #{pay_no,jdbcType=VARCHAR}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND pay_date = #{pay_date,jdbcType=DATE}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id,jdbcType=INTEGER}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no,jdbcType=INTEGER}
		</if>
		<if test="pay_money != null and pay_money != ''">
		AND pay_money = #{pay_money,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="assBackPrePayMain"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		pay_no,
		pay_date,
		ven_id,
		ven_no,
		pay_money,
		state,
		create_emp,
		create_date,
		audit_emp,
		audit_date,
		note
		FROM ASS_BACK_PRE_PAY_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_no != null and pay_no != ''">
		AND pay_no = #{pay_no,jdbcType=VARCHAR}
		</if>
		<if test="pay_date != null and pay_date != ''">
		AND pay_date = #{pay_date,jdbcType=DATE}
		</if>
		<if test="ven_id != null and ven_id != ''">
		AND ven_id = #{ven_id,jdbcType=INTEGER}
		</if>
		<if test="ven_no != null and ven_no != ''">
		AND ven_no = #{ven_no,jdbcType=INTEGER}
		</if>
		<if test="pay_money != null and pay_money != ''">
		AND pay_money = #{pay_money,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="audit_emp != null and audit_emp != ''">
		AND audit_emp = #{audit_emp,jdbcType=VARCHAR}
		</if>
		<if test="audit_date != null and audit_date != ''">
		AND audit_date = #{audit_date,jdbcType=DATE}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<resultMap type="java.util.Map" id="assBackPreBillMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="bill_no" column="bill_no"/>
		<result property="invoice_no" column="invoice_no"/>
		<result property="bill_date" column="bill_date"/>
		<result property="bill_money" column="bill_money"/>
		<result property="ven_id" column="ven_id"/>
		<result property="ven_no" column="ven_no"/>
		<result property="ven_code" column="ven_code"/>
		<result property="ven_name" column="ven_name"/>
		<result property="note" column="note"/>
		<result property="state" column="state"/>
	</resultMap>
	<select id="queryAssBackPreBill" parameterType="java.util.Map" resultMap="assBackPreBillMap">
		select 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.invoice_no,
			a.bill_date,
			a.bill_money,
			a.ven_id,
			a.ven_no,
			b.sup_code ven_code,
			b.sup_name ven_name,
			a.note,
			a.state
		from ASS_BACK_PRE_BILL_MAIN a
		
		left join hos_sup_dict b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.ven_id = b.sup_id
		and a.ven_no = b.sup_no
		and b.is_stop = 0 
		
		where
		a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		order by a.bill_no
	</select>
	
	<resultMap type="java.util.Map" id="assBackPreBillDetailMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="bill_no" column="bill_no"/>
		<result property="ass_name" column="ass_name" />
		<result property="bill_money" column="bill_money"/>
		<result property="note" column="note"/>
	</resultMap>
	<select id="queryAssBackPreBillDetail" parameterType="java.util.Map" resultMap="assBackPreBillDetailMap">
		select 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.bill_no,
			a.bill_money,
			b.ass_name,
			a.note
		from ASS_BACK_PRE_BILL_DETAIL a
		
		left join ass_no_dict b
	    on a.group_id = b.group_id
	    and a.hos_id = b.hos_id
	    and a.copy_code = b.copy_code
	    and a.ass_id = b.ass_id
	    and b.is_stop = 0 
		
		where
		a.group_id = #{group_id}
		and a.hos_id = #{hos_id}
		and a.copy_code = #{copy_code}
		and a.bill_no = #{bill_no}
		order by a.bill_no
	</select>
	
	<resultMap type="java.util.Map" id="hrpAssSelect">
		<result property="id" column="id" />
		<result property="text" column="text" />
	</resultMap>
	<select id="queryAccPayType" parameterType="java.util.Map" resultMap="hrpAssSelect">
		select 
		  pay_code id,
		  pay_name text
    	from acc_pay_type
    	where
    	  group_id = #{group_id}
    	  and hos_id = #{hos_id}
    	  and copy_code = #{copy_code}
    	  <if test="key != null and key != ''">
			and (
			pay_code like '%${key}%' or
			pay_name like '%${key}%' or
			spell_code like '%${key}%' or
			wbx_code like '%${key}%'
			)
		  </if>
		  order by pay_code
	</select>
	
	<update id="updateBatchConfirm" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ASS_BACK_PRE_PAY_MAIN SET
			audit_date = to_date(#{item.audit_date},'YYYY-MM-DD'),
			audit_emp = #{item.audit_emp,jdbcType=INTEGER},
			state = 2
			where                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND pay_no = #{item.pay_no}
		</foreach>
	</update>
	
	<resultMap type="java.util.Map" id="assPrePayMap">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="ven_id" column="ven_id" />
		<result property="ven_no" column="ven_no" />
	    <result property="naturs_code" column="naturs_code" />
	    <result property="ass_id" column="ass_id" />
	    <result property="pay_code" column="pay_code" />
		<result property="source_id" column="source_id" />
		<result property="cur_money" column="cur_money" />
	</resultMap>
	<!-- 组装预付核定表数据 -->
	<select id="collectAssPrePayData" parameterType="java.util.Map" resultMap="assPrePayMap">
		select 
		a.group_id,a.hos_id,a.copy_code,
		a.ven_id,a.ven_no,
	    d.naturs_code,
	    d.ass_id,
	    c.pay_code,
		f.source_id,
		sum(nvl(c.pay_money,0)) cur_money
		 from ASS_BACK_PRE_PAY_MAIN a
		left join ASS_BACK_PRE_PAY_DETAIL b
		on a.pay_no = b.pay_no
		and a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.copy_code = b.copy_code
		
		left join ASS_BACK_PRE_PAY_STAGE c
		on b.pay_no = c.pay_no
		and b.bill_no = c.bill_no
		and a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		
		left join ASS_BACK_PRE_BILL_DETAIL d
		on b.bill_no = d.bill_no
		and a.group_id = d.group_id
		and a.hos_id = d.hos_id
		and a.copy_code = d.copy_code
		
		left join ASS_PAY_SOURCE f
		on c.pay_code = f.pay_code
		and a.group_id = f.group_id
		and a.hos_id = f.hos_id
		and a.copy_code = f.copy_code
		
		where 
		a.group_id = #{group_id}
		and a.hos_id = #{hos_id} 
		and a.copy_code = #{copy_code} 
		and a.pay_no = #{pay_no} 
		
		group by a.group_id,a.hos_id,a.copy_code,
		a.ven_id,a.ven_no,
	    d.naturs_code,
	    d.ass_id,
	    c.pay_code,
	    f.source_id
	</select>
	
	<!-- 预退款打印主表 -->
	<select id="queryAssBackPrePayMainBatch" parameterType="java.util.Map" resultType="java.util.Map">
		select a.pay_no as id,a.hos_id,a.group_id,a.copy_code,to_char(a.PAY_MONEY,'FM999,999,990.00') pay_money,a.NOTE,a.pay_no,
        to_char(a.PAY_DATE, 'yyyy-mm-dd') PAY_DATE,
         to_char(a.CREATE_DATE, 'yyyy-mm-dd') CREATE_DATE,
         to_char(a.AUDIT_DATE, 'yyyy-mm-dd') AUDIT_DATE,
          s1.user_name AUDIT_EMP, s.user_name CREATE_EMP,a.ven_id,
					a.ven_no,
					c.sup_code ven_code,
					c.sup_name ven_name,
          case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state
		from ASS_BACK_PRE_PAY_MAIN a
		 left join hos_sup_dict c on	a.group_id = c.group_id and a.hos_id = c.hos_id and a.ven_id = c.sup_id and c.is_stop = 0
		join sys_user s  on s.group_id=a.group_id and s.hos_id=a.hos_id and s.user_id=a.CREATE_EMP and s.IS_STOP = 0
		left join sys_user s1  on s1.group_id=a.group_id and s1.hos_id=a.hos_id and s1.user_id=a.AUDIT_EMP and s1.IS_STOP = 0
		 where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.pay_no in (${paraId})
		
	</select>
	
	<select id="querAssBackPrePayMainByPrint" parameterType="java.util.Map" resultType="java.util.Map">
		select a.pay_no as id,a.hos_id,a.group_id,a.copy_code,to_char(a.PAY_MONEY,'FM999,999,990.00') pay_money,a.NOTE,a.pay_no,
        to_char(a.PAY_DATE, 'yyyy-mm-dd') PAY_DATE,
         to_char(a.CREATE_DATE, 'yyyy-mm-dd') CREATE_DATE,
         to_char(a.AUDIT_DATE, 'yyyy-mm-dd') AUDIT_DATE,
          s1.user_name AUDIT_EMP, s.user_name CREATE_EMP,a.ven_id,
					a.ven_no,
					c.sup_code ven_code,
					c.sup_name ven_name,
          case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '确认' else '' end state
		from ASS_BACK_PRE_PAY_MAIN a
		 left join hos_sup_dict c on	a.group_id = c.group_id and a.hos_id = c.hos_id and a.ven_id = c.sup_id and c.is_stop = 0
		join sys_user s  on s.group_id=a.group_id and s.hos_id=a.hos_id and s.user_id=a.CREATE_EMP and s.IS_STOP = 0
		left join sys_user s1  on s1.group_id=a.group_id and s1.hos_id=a.hos_id and s1.user_id=a.AUDIT_EMP and s1.IS_STOP = 0

		where                     
			a.group_id = #{group_id}
			AND a.hos_id = #{hos_id}
			AND a.copy_code = #{copy_code}
			AND a.pay_no = #{pay_no}
		
	</select>
	
	<!-- 预退款打印从表 -->
	
	<select id="queryAssBackPrePayMain_detail" parameterType="java.util.Map" resultType="java.util.Map">
		select  a.PAY_NO as id,a.hos_id,a.group_id,a.copy_code,to_char(a.bill_money,'FM999,999,990.00') bill_money,l.pay_code,b.pay_name
	    from ASS_BACK_PRE_PAY_DETAIL a
	    left join ASS_BACK_PRE_BILL_MAIN m on m.hos_id=a.hos_id and m.group_id=a.group_id and m.copy_code =a.copy_code and m.BILL_NO=a.BILL_NO
	    left join ASS_BACK_PRE_PAY_STAGE l on l.group_id = a.group_id and l.hos_id = a.hos_id and l.copy_code = a.copy_code and l.pay_no = a.pay_no and l.bill_no = a.bill_no
	    left join  ACC_PAY_TYPE b on b.group_id = l.group_id and b.hos_id = l.hos_id and b.copy_code = l.copy_code and b.pay_code = l.pay_code

		
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			
			<if test="pay_no != null and pay_no != ''">
			AND a.pay_no = #{pay_no,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 资产预退款单状态查询  （打印时校验数据专用） -->
	<select id="queryAssBackPrepayState" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT pay_no  FROM ASS_BACK_PRE_PAY_MAIN 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="paraId != null and paraId != ''">
			AND pay_no in  (${paraId})
			</if>
			<if test="pay_no != null and pay_no != ''">
			AND pay_no = #{pay_no,jdbcType=VARCHAR}
			</if>
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	
		
	</select>
</mapper>

