<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.ass.dao.in.rest.AssInRestMainHouseMapper">
	
	<resultMap id="assInRestMainHouse" type="com.chd.hrp.ass.entity.in.rest.AssInRestMainHouse">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	</resultMap>
		
	<resultMap id="assInRestMainHouseMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="ass_in_no" column="ass_in_no"/>
	<result property="ass_card_no" column="ass_card_no"/>
	<result property="ven_id" column="ven_id"/>
	<result property="ven_no" column="ven_no"/>
	<result property="ven_code" column="ven_code"/>
	<result property="ven_name" column="ven_name"/>
	<result property="in_money" column="in_money"/>
	<result property="note" column="note"/>
	<result property="create_emp" column="create_emp"/>
	<result property="create_date" column="create_date"/>
	<result property="in_date" column="in_date"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="confirm_emp_name" column="confirm_emp_name"/>
	<result property="create_emp_name" column="create_emp_name"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="bus_type_name" column="bus_type_name"/>
	<result property="ass_id" column="ass_id"/>
	<result property="ass_no" column="ass_no"/>
	<result property="ass_code" column="ass_code"/>
	<result property="ass_name" column="ass_name"/>
	<result property="in_amount" column="in_amount"/>
	<result property="price" column="price"/>
	<result property="depre_money" column="depre_money"/>
	<result property="add_depre_month" column="add_depre_month"/>
	<result property="cur_money" column="cur_money"/>
	<result property="fore_money" column="fore_money"/>
	<result property="note_detail" column="note_detail"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ASS_IN_REST_MAIN_House (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		ass_in_no
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code
		,
		</if>
		
		<if test="in_money != null and in_money != ''">
		in_money
		,
		</if>
		<if test="note != null and note != ''">
		note
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		create_emp
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		to_number(#{group_id})
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		to_number(#{hos_id})
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		#{ass_in_no,jdbcType=VARCHAR}
		,
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		#{bus_type_code,jdbcType=VARCHAR}
		,
		</if>
		
		<if test="in_money != null and in_money != ''">
		to_number(#{in_money})
		,
		</if>
		<if test="note != null and note != ''">
		#{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_emp != null and create_emp != ''">
		to_number(#{create_emp})
		,
		</if>
		<if test="create_date != null and create_date != ''">
		to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		<if test="state != null and state != ''">
		to_number(#{state})
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ASS_IN_REST_MAIN_House (
		group_id
		,
		hos_id
		,
		copy_code
		,
		ass_in_no
		,
		bus_type_code
		,
		
		in_money
		,
		note
		,
		create_emp
		,
		create_date
		,
		state
		
		) select  t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.ass_in_no,jdbcType=VARCHAR}
			,
			#{item.bus_type_code,jdbcType=VARCHAR}
			,
			
			#{item.in_money,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			#{item.create_date,jdbcType=DATE}
			,
			#{item.state,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ass_in_rest_main_House 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="bus_type_code != null and bus_type_code != ''">
		bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		,
		</if>
		
		<if test="note != null and note != ''">
		note = #{note,jdbcType=VARCHAR}
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date = to_date(#{create_date},'YYYY-MM-DD')
		,
		</if>
		
		<if test="note == null or note == ''">
		note = null
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</update>
	
	
	<update id="updateInMoney" parameterType="java.util.Map">
	
		UPDATE ass_in_rest_main_House 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="in_money != null and in_money != ''">
		in_money = #{in_money}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no}
		</if>
		</where>  
	</update>
	
	<update id="updateConfirm" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_House  set
			state = 2,
			confirm_emp = #{item.confirm_emp},
			in_date = to_date(#{item.in_date},'YYYY-MM-DD')
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_House  set
			state = 1
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	<update id="updateReAudit" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_House  set
			state = 0
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND ass_in_no = #{item.ass_in_no}
			</where>  			
		</foreach>
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ass_in_rest_main_House 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.bus_type_code != null and item.bus_type_code != ''">
			bus_type_code = #{item.bus_type_code,jdbcType=VARCHAR}
			,
			</if>
			
			<if test="item.in_money != null and item.in_money != ''">
			in_money = #{item.in_money,jdbcType=INTEGER}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.ass_in_no != null and item.ass_in_no != ''">
			AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ass_in_rest_main_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ass_in_rest_main_House 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.ass_in_no != null and item.ass_in_no != ''">
				AND ass_in_no = #{item.ass_in_no,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="assInRestMainHouseMap" >
	select * from (
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			ach.ass_card_no,
			a.bus_type_code,
			abtd.bus_type_name,
			
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name
		FROM ass_in_rest_main_House a
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		left join ass_card_house ach on 
		a.group_id = ach.group_id
		and a.hos_id = ach.hos_id
		and a.copy_code = ach.copy_code
		and a.ass_in_no = ach.ass_in_no
		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
		<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		</where>   
		union all
		
		SELECT 
			null group_id,
			null hos_id,
			null copy_code,
			null ass_in_no,
			null ass_card_no,
			null bus_type_code,
			null bus_type_name,
			
			sum(a.in_money) in_money,
			'合计' note,
			null create_emp,
			null create_emp_name,
			null create_date,
			null in_date,
			null confirm_emp,
			null confirm_emp_name,
			null state,
			'' state_name
		FROM ass_in_rest_main_House a
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND a.ass_in_no = #{ass_in_no}
		</if>
		
		<if test="in_money != null and in_money != ''">
		AND a.in_money = #{in_money}
		</if>
		<if test="note != null and note != ''">
		AND a.note = #{note}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND a.create_emp = #{create_emp}
		</if>
		<if test="create_date != null and create_date != ''">
		AND a.create_date = #{create_date}
		</if>
		<if test="in_date != null and in_date != ''">
		AND a.in_date = #{in_date}
		</if>
	<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
		AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
		</if>
		<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
		AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND a.confirm_emp = #{confirm_emp}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state}
		</if>
		</where>  ) t
		
		order by t.create_date desc
	</select>
	<select id="queryAssInRestMainHouseByAssInNo" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no as id,
			a.ass_in_no,
			a.bus_type_code,
			abtd.bus_type_name,
			to_char(a.in_money,'FM999,999,990.00') in_money,
			t_m.in_amount,
			a.note,
			su2.user_name create_emp,
			to_char(a.create_date,'yyyy-mm-dd') create_date,
			to_char(a.in_date,'yyyy-mm-dd') in_date,
			su3.user_name confirm_emp,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state
		FROM ass_in_rest_main_House a
		
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		
		left join (
			select t.group_id,t.hos_id,t.copy_code,t.ass_in_no,sum(t.in_amount) in_amount from ASS_IN_REST_DETAIL_House t
			where t.group_id = #{group_id}
			AND t.hos_id = #{hos_id}
			AND t.copy_code = #{copy_code}
			AND t.ass_in_no in(${ass_in_no})
			group by t.group_id,t.hos_id,t.copy_code,t.ass_in_no
		) t_m on 
		a.group_id = t_m.group_id
		and a.hos_id = t_m.hos_id
		and a.copy_code = t_m.copy_code
		and a.ass_in_no = t_m.ass_in_no
		
		where                   
			a.group_id = #{group_id}
		AND a.hos_id = #{hos_id}
		AND a.copy_code = #{copy_code}
		AND a.ass_in_no in(${ass_in_no})
	order by a.create_date desc
	</select>
	
	<select id="queryAssInRestMainHouseDetailByAssInNo" parameterType="java.util.Map"  resultType="java.util.Map" >
			select t5.ass_in_no as id,
       b.ass_code   ass_no,
       b.ass_name,
       t5.in_amount d_amount,
	   atd.ass_type_name,
	   t.ass_card_no ass_card_nos,
       to_char(t5.price,'FM999,999,990.00') price,
       to_char(price_sum, 'FM999,999,990.00') price_sum,
       to_char(zc_price, 'FM999,999,990.00') zc_price,
       to_char(cz_price, 'FM999,999,990.00') cz_price,
       to_char(ky_price, 'FM999,999,990.00') ky_price,
       to_char(jx_price, 'FM999,999,990.00') jx_price,
           case when zc_price is not null then '其他资金='||to_char(zc_price,'FM999,999,990.00') end
           ||
           case when cz_price is not null then '财政资金='||to_char(cz_price,'FM999,999,990.00') end
           ||
           case when ky_price is not null then '科研资金='||to_char(ky_price,'FM999,999,990.00') end
           ||
           case when jx_price is not null then '教学资金='||to_char(jx_price,'FM999,999,990.00') end
             
            source_price
  from (select t3.source_id,
               t3.group_id,
               t3.hos_id,
               t3.copy_code,
               sum(t3.price) sum_price,
               sum(t2.price) price_sum,
               t2.ass_id,
               t2.ass_no,
               t2.ass_card_no
          from ass_card_house t2
        
          left join ass_resource_house t3
            on t3.ass_card_no = t2.ass_card_no
           and t3.group_id = t2.group_id
           and t3.hos_id = t3.hos_id
           and t3.copy_code = t2.copy_code
        where                     
		 t2.group_id = #{group_id,jdbcType=INTEGER}
		AND t2.hos_id = #{hos_id,jdbcType=INTEGER}
		AND t2.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND t2.ass_in_no in(${ass_in_no})
      
         group by t3.source_id,
                  t2.ass_id,
                  t2.ass_no,
                  t3.group_id,
                  t3.hos_id,
                  t3.copy_code,
                  t2.ass_card_no) pivot(sum(sum_price) as price for source_id in('1' as ZC,
                                                                               '2' as CZ,
                                                                               '3' as KY,
                                                                               '4' as JX)) t
      left join ass_in_rest_detail_house t5
        on t.ass_id = t5.ass_id
       and t5.group_id = t.group_id
       and t5.hos_id = t.hos_id
       and t5.copy_code = t.copy_code
       and t5.ass_in_no = t.ass_in_no
      left join ass_no_dict b
        on t5.group_id = b.group_id
       and t5.hos_id = b.hos_id
       and t5.copy_code = b.copy_code
       and t5.ass_id = b.ass_id
       and b.is_stop = 0
       
       left join ass_type_dict atd
				    on b.group_id = atd.group_id
				   and b.hos_id = atd.hos_id
				   and b.copy_code = atd.copy_code
				   and b.ass_type_id = atd.ass_type_id  
       
			where                     
		 t5.group_id = #{group_id,jdbcType=INTEGER}
		AND t5.hos_id = #{hos_id,jdbcType=INTEGER}
		AND t5.copy_code = #{copy_code,jdbcType=VARCHAR}
		AND t5.ass_in_no in(${ass_in_no})
		group by t5.ass_in_no,
		          b.ass_code,
		          b.ass_name,
		          t5.in_amount,
		          t5.price,
		          price_sum,
		          zc_price,
		          cz_price,
		          ky_price,
		          jx_price
	
	order by t5.ass_in_no desc
	
	
	</select>
	
	<select id="queryByCode" resultMap="assInRestMainHouse"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.ass_in_no,
			
			a.bus_type_code,
			abtd.bus_type_name,
			
			a.in_money,
			a.note,
			a.create_emp,
			su2.user_name create_emp_name,
			a.create_date,
			a.in_date,
			a.confirm_emp,
			su3.user_name confirm_emp_name,
			a.state,
			case when a.state = 0 then '新建' when a.state = 1 then '审核' when a.state = 2 then '入库确认' else '' end state_name
		FROM ass_in_rest_main_House a
		left join sys_user su2 on
		a.group_id = su2.group_id
		and a.hos_id = su2.hos_id
		and a.create_emp = su2.user_id
		
		left join sys_user su3 on
		a.group_id = su3.group_id
		and a.hos_id = su3.hos_id
		and a.confirm_emp = su3.user_id
		
		
		
		left join ass_bus_type_dict abtd on
		a.group_id = abtd.group_id
		and a.hos_id = abtd.hos_id
		and a.copy_code = abtd.copy_code
		and a.bus_type_code = abtd.bus_type_code
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.ass_in_no = #{ass_in_no,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="assInRestMainHouseMap"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		bus_type_code,
		
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		state
		FROM ASS_IN_REST_MAIN_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by create_date desc
	</select>
	<select id="queryExists" resultMap="assInRestMainHouseMap"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		ass_in_no,
		bus_type_code,
		
		in_money,
		note,
		create_emp,
		create_date,
		in_date,
		confirm_emp,
		state
		FROM ASS_IN_REST_MAIN_House 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="ass_in_no != null and ass_in_no != ''">
		AND ass_in_no = #{ass_in_no,jdbcType=VARCHAR}
		</if>
		<if test="bus_type_code != null and bus_type_code != ''">
		AND bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
		</if>
		
		<if test="in_money != null and in_money != ''">
		AND in_money = #{in_money,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		<if test="in_date != null and in_date != ''">
		AND in_date = #{in_date,jdbcType=DATE}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		</where>   
		order by create_date desc
	</select>
				
				<!-- 查询使用科室 -->
	<select id="queryBydept"  parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from ASS_SHARE_DEPT_HOUSE 
		   where 	group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ASS_CARD_NO = #{ass_card_no,jdbcType=VARCHAR}
	</select>
		<!-- 查询使用科室 -->
	<select id="queryByRdept"  parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from ASS_SHARE_DEPT_R_HOUSE 
		  where 	group_id = #{group_id,jdbcType=INTEGER}
				AND hos_id = #{hos_id,jdbcType=INTEGER}
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
				AND ASS_CARD_NO = #{ass_card_no,jdbcType=VARCHAR}
	</select>
	
			<!-- 状态查询  （打印时校验数据专用） -->
	<select id="queryAssInRestMainHouseStates" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT ass_in_no  FROM ASS_IN_REST_MAIN_House 
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="ass_in_no != null and ass_in_no != ''">
			AND ass_in_no in  (${ass_in_no})
			</if>
		
			<!-- 前台传参   2 确认 -->
			and state != #{state,jdbcType=INTEGER}
	</select>
	<!-- 明细查询 -->
	<select id="queryDetails"  parameterType="java.util.Map" resultMap="assInRestMainHouseMap">
			with detail_tmp as
						 (select a.group_id,
						         a.hos_id,
						         a.copy_code,
						         a.ass_in_no,
						         d.ass_card_no,
						         a.bus_type_code,
						         c.bus_type_name,
						         
						         a.in_money,
						         a.note,
						         a.create_emp,
						         su2.user_name create_emp_name,
						         a.create_date,
						         a.in_date,
						         a.confirm_emp,
						         su3.user_name confirm_emp_name,
						         a.state,
						         case
						           when a.state = 0 then
						            '新建'
						           when a.state = 1 then
						            '审核'
						           when a.state = 2 then
						            '入库确认'
						           else
						            ''
						         end state_name,
						         b.ass_id,
						         b.ass_no,
						         e.ass_code,
						         e.ass_name,
						         b.in_amount,
						         b.price,
						         d.depre_money,
						         d.add_depre_month,
						         d.cur_money,
						         d.fore_money,
						         b.note note_detail
						    from ASS_IN_REST_MAIN_HOUSE a
						    left join ass_in_rest_detail_HOUSE b
						      on a.group_id = b.group_id
						     and a.hos_id = b.hos_id
						     and a.copy_code = b.copy_code
						     and a.ass_in_no = b.ass_in_no
						    left join ass_no_dict e
						      on b.group_id = e.group_id
						     and b.hos_id = e.hos_id
						     and b.copy_code = e.copy_code
						     and b.ass_id = e.ass_id
						     and e.is_stop = 0
						    left join sys_user su2
						      on a.group_id = su2.group_id
						     and a.hos_id = su2.hos_id
						     and a.create_emp = su2.user_id
						  
						    left join sys_user su3
						      on a.group_id = su3.group_id
						     and a.hos_id = su3.hos_id
						     and a.confirm_emp = su3.user_id
						  
						    left join ass_bus_type_dict c
						      on a.group_id = c.group_id
						     and a.hos_id = c.hos_id
						     and a.copy_code = c.copy_code
						     and a.bus_type_code = c.bus_type_code
						  
						    left join ass_card_house d
						      on a.group_id = d.group_id
						     and a.hos_id = d.hos_id
						     and a.copy_code = d.copy_code
						     and a.ass_in_no = d.ass_in_no
						  <where>                     
									<if test="group_id != null and group_id != ''">
									AND a.group_id = #{group_id}
									</if>
									<if test="hos_id != null and hos_id != ''">
									AND a.hos_id = #{hos_id}
									</if>
									<if test="copy_code != null and copy_code != ''">
									AND a.copy_code = #{copy_code}
									</if>
									<if test="ass_in_no != null and ass_in_no != ''">
									AND a.ass_in_no = #{ass_in_no}
									</if>
									
									<if test="in_money != null and in_money != ''">
									AND a.in_money = #{in_money}
									</if>
									<if test="note != null and note != ''">
									AND a.note = #{note}
									</if>
									<if test="create_emp != null and create_emp != ''">
									AND a.create_emp = #{create_emp}
									</if>
									<if test="create_date != null and create_date != ''">
									AND a.create_date = #{create_date}
									</if>
									<if test="in_date != null and in_date != ''">
									AND a.in_date = #{in_date}
									</if>
									<if test="create_date_beg != null and create_date_beg != '' and create_date_end != null and create_date_end != ''">
									AND a.create_date between to_date(#{create_date_beg},'YYYY-MM-DD') and to_date(#{create_date_end},'YYYY-MM-DD')
									</if>
									<if test="in_date_beg != null and in_date_beg != '' and in_date_end != null and in_date_end != ''">
									AND a.in_date between to_date( #{in_date_beg},'YYYY-MM-DD') and to_date(#{in_date_end},'YYYY-MM-DD')
									</if>
									<if test="confirm_emp != null and confirm_emp != ''">
									AND a.confirm_emp = #{confirm_emp}
									</if>
									<if test="state != null and state != ''">
									AND a.state = #{state}
									</if>
									</where>   
						  ),
						sum_tmp as
						 (select null group_id,
						         null hos_id,
						         null copy_code,
						         null ass_in_no,
						         null ass_card_no,
						         null bus_type_code,
						         null bus_type_name,
						         
						         sum(in_money) in_money,
						         '合计' note,
						         null create_emp,
						         null create_emp_name,
						         null create_date,
						         null in_date,
						         null confirm_emp,
						         null confirm_emp_name,
						         null state,
						         null state_name,
						         null ass_id,
						         null ass_no,
						         null ass_code,
						         null ass_name,
						         null in_amount,
						        sum(price) price,
						         sum(depre_money) depre_money,
						         null add_depre_month,
						         sum( cur_money) cur_money,
						         sum( fore_money) fore_money,
						         null note_detail
						    from detail_tmp)
						
						select group_id,
						       hos_id,
						       copy_code,
						       ass_in_no,
						       ass_card_no,
						       bus_type_code,
						       bus_type_name,
						       
						       in_money,
						       note,
						       create_emp,
						       create_emp_name,
						       create_date,
						       in_date,
						       confirm_emp,
						       confirm_emp_name,
						       state,
						       state_name,
						       ass_id,
						       ass_no,
						       ass_code,
						       ass_name,
						       in_amount,
						       price,
						       depre_money,
						       add_depre_month,
						       cur_money,
						       fore_money,
						       note_detail
						  from detail_tmp
						union all
						select group_id,
						       hos_id,
						       copy_code,
						       ass_in_no,
						       ass_card_no,
						       bus_type_code,
						       bus_type_name,
						       
						       in_money,
						       note,
						       create_emp,
						       create_emp_name,
						       create_date,
						       in_date,
						       confirm_emp,
						       confirm_emp_name,
						       state,
						       state_name,
						       ass_id,
						       ass_no,
						       ass_code,
						       ass_name,
						       in_amount,
						       price,
						       depre_money,
						       add_depre_month,
						       cur_money,
						       fore_money,
						       note_detail
						  from sum_tmp
						
						 order by create_date desc

			
	</select>
</mapper>

