<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostDoctorWorkMapper">
	<resultMap id="costDoctorWorkMap" type="com.chd.hrp.cost.entity.CostDoctorWork">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="acc_year" column="acc_year"/>
		<result property="acc_month" column="acc_month"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="emp_id" column="emp_id"/>
		<result property="emp_no" column="emp_no"/>
		<result property="emp_code" column="emp_code"/>
		<result property="emp_name" column="emp_name"/>
		<result property="doctor_num" column="doctor_num"/>
	</resultMap>
	
    <insert id="addCostDoctorWork" useGeneratedKeys="true" >
          insert into cost_doctor_work
					  (group_id,
					   hos_id,
					   copy_code,
					   acc_year,
					   acc_month,
					   dept_id,
					   dept_no,
					   emp_id,
					   emp_no,
					   doctor_num)
					values
					  (#{group_id},
					   #{hos_id},
					   #{copy_code},
					   #{acc_year},
					   #{acc_month},
					   #{dept_id},
					   #{dept_no},
					   #{emp_id},
					   #{emp_no},
					   #{doctor_num})
    </insert>

      <insert id="addBatchCostDoctorWork" parameterType="java.util.List">
	        insert into cost_doctor_work
					  (group_id,
					   hos_id,
					   copy_code,
					   acc_year,
					   acc_month,
					   dept_id,
					   dept_no,
					   emp_id,
					   emp_no,
					   doctor_num)
	     <foreach collection="list" item="item" index="index" separator=" union all " >
			   select 		
					#{item.group_id},
					#{item.hos_id},
					#{item.copy_code},
					#{item.acc_year},
					#{item.acc_month},
					#{item.dept_id},
					#{item.dept_no},
					#{item.emp_id},
					#{item.emp_no},
					#{item.doctor_num}
			  from dual 
		</foreach>
    </insert>
    
    
    <update id="updateCostDoctorWork"  parameterType="java.util.Map" >
                     update cost_doctor_work
					   set doctor_num = #{doctor_num}
					 where group_id = #{group_id}
					   and hos_id = #{hos_id}
					   and copy_code = #{copy_code}
					   and acc_year = #{acc_year}
					   and acc_month = #{acc_month}
					   and dept_id = #{dept_id}
					   and dept_no = #{dept_no}
					   and emp_id = #{emp_id}
					   and emp_no = #{emp_no}
    </update>
    
    <delete id="deleteBatchCostDoctorWork"  parameterType="java.util.List">
         	delete from cost_doctor_work where
		<foreach collection="list" index="index" item="item" separator="or" >
		(
			       group_id = #{item.group_id}
			   and hos_id = #{item.hos_id}
			   and copy_code = #{item.copy_code}
			   and acc_year = #{item.acc_year}
			   and acc_month = #{item.acc_month}
			   and dept_id = #{item.dept_id}
			   and dept_no = #{item.dept_no}
			   and emp_id = #{item.emp_id}
			   and emp_no = #{item.emp_no}
		)
		</foreach>
    </delete>
  
    <select id="queryCostDoctorWorkByCode" parameterType="java.util.Map" resultMap="costDoctorWorkMap">
			        select cdw.group_id,
					       cdw.hos_id,
					       cdw.copy_code,
					       cdw.acc_year,
					       cdw.acc_month,
					       cdw.dept_id,
					       cdw.dept_no,
						   hdd.dept_code,
						   hdd.dept_name,
					       cdw.emp_id,
					       cdw.emp_no,
						   hed.emp_code,
						   hed.emp_name,
					       cdw.doctor_num
					  from cost_doctor_work cdw
						left join hos_dept_dict hdd
						on hdd.group_id = cdw.group_id
						and hdd.hos_id = cdw.hos_id
						and hdd.dept_id = cdw.dept_id
						and hdd.dept_no = cdw.dept_no
						left join hos_emp_dict hed
						on hed.group_id = cdw.group_id
						and hed.hos_id = cdw.hos_id
						and hed.emp_no = cdw.emp_no
						and hed.emp_id = cdw.emp_id
						where cdw.group_id = #{group_id}
						and cdw.hos_id = #{hos_id}
						and cdw.copy_code = #{copy_code}
						and cdw.acc_year = #{acc_year}
						and cdw.acc_month = #{acc_month}
						and cdw.dept_id = #{dept_id}
						and cdw.dept_no = #{dept_no}
						and cdw.emp_id = #{emp_id}
						and cdw.emp_no = #{emp_no}
    </select>
    
    <select id="queryCostDoctorWork" parameterType="java.util.Map" resultMap="costDoctorWorkMap">
               
	       	with temp as(
					select cdw.group_id,
			           cdw.hos_id,
			           cdw.copy_code,
			           cdw.acc_year,
			           cdw.acc_month,
			           cdw.dept_id,
			           cdw.dept_no,
			           hdd.dept_code,
			           hdd.dept_name,
			           cdw.emp_id,
			           cdw.emp_no,
			           hed.emp_code,
			           hed.emp_name,
			           cdw.doctor_num
			      from cost_doctor_work cdw
			      left join hos_dept_dict hdd
			      on hdd.group_id = cdw.group_id
			      and hdd.hos_id = cdw.hos_id
			      and hdd.dept_id = cdw.dept_id
			      and hdd.dept_no = cdw.dept_no
			      left join hos_emp_dict hed
			      on hed.group_id = cdw.group_id
			      and hed.hos_id = cdw.hos_id
			      and hed.emp_no = cdw.emp_no
			      and hed.emp_id = cdw.emp_id
			     <where>
		                  cdw.group_id = #{group_id}
			  	      and cdw.hos_id = #{hos_id}
				      and cdw.copy_code = #{copy_code}
				      <if test="begin_year_month != null and begin_year_month != '' and end_year_month != null and end_year_month != ''">
                      and cdw.acc_year || cdw.acc_month between #{begin_year_month} and #{end_year_month}
                      </if>
                      <if test="dept_code!= null and dept_code != ''">
                         and  hdd.dept_code like #{dept_code}||'%'
                      </if>
                      <if test="emp_id!= null and emp_id != ''">
                      and cdw.emp_id = #{emp_id}
                      </if>
                       <if test="emp_no!= null and emp_no != ''">
                      and cdw.emp_no = #{emp_no}
                      </if>
				 </where>
					)select 
					    group_id,
			            hos_id,
			            copy_code,
			            acc_year,
			            acc_month,
			            dept_id,
			            dept_no,
			            dept_code,
			            dept_name,
			            emp_id,
			            emp_no,
			            emp_code,
			            emp_name,
			            doctor_num
					 from temp
					 union all
					 select null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            null,
			            sum(doctor_num)
					 from temp
           order by group_id,hos_id,copy_code,acc_year,acc_month,dept_code,emp_code
    </select>
</mapper>

