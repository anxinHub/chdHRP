<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.cost.dao.CostConstituteChangeAnalysisMapper">

	<select id="queryCostConstituteChange" parameterType="java.util.Map"  resultType="java.util.Map">
        with dept_dir as(
		select
		a.year_month,d.dept_code
		,d.dept_name ,
		sum(decode(b.cost_type_id,1,a.dir_amount,0)) as cost_emp_amount<!-- 人员经费 -->,
		sum(decode(b.cost_type_id,2,a.dir_amount,0)) as cost_mate_amount<!--卫生材料费-->,
		sum(decode(b.cost_type_id,3,a.dir_amount,0)) as cost_drug_amount<!--药品费-->,
		sum(decode(b.cost_type_id,4,a.dir_amount,0)) as cost_fasset_amount<!--固定资产-->,
		sum(decode(b.cost_type_id,5,a.dir_amount,0)) as cost_iasset_amount<!--无形资产-->,
		sum(decode(b.cost_type_id,6,a.dir_amount,0)) as cost_risk_amount<!--提取医疗风险基金-->,
		sum(decode(b.cost_type_id,7,a.dir_amount,0)) as cost_other_amount<!--其他费用-->
		from
		cost_dept_cost_data a
		left join cost_item_dict b on
		a.group_id=b.group_id and a.hos_id=b.hos_id
		and a.copy_code=b.copy_code
		and a.cost_item_id=b.cost_item_id
		left join hos_dept c on
		a.group_id=c.group_id and a.hos_id=c.hos_id and c.dept_id=a.dept_id
		left join hos_dept_dict d on
		a.group_id=d.group_id and
		a.hos_id=d.hos_id and a.dept_id=d.dept_id
		<if test="is_flag == '1' ">
			and a.dept_no=d.dept_no
		</if>
		<if test="is_flag == '0' or is_flag == ''">
			and d.is_stop=0
		</if>

		<where>
			<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code}
			</if>
			<if test="dept_type != '' and dept_type != null ">
				 ada.type_code = #{dept_type}  and 
				</if>
				<if test="dept_nature != '' and dept_nature != null ">
				 ada.natur_code  = #{dept_nature}  and 
				</if>
			<if test="first_year != '' and first_year != null and  last_year !='' and last_year !=null">
				and substr(a.year_month,1,4) between #{first_year} and #{last_year}
			</if>

		</where>
		group by a.year_month,d.dept_code,d.dept_name
		),
		dept_type as(
		select
		a.year_month,decode(c.type_code,'01','4999','02','3999','03','2999','04','1999')
		dept_code,
		decode(c.type_code,'01','管理科室合计','02','医辅科室合计','03','医技科室合计','04','临床科室合计')
		dept_name,
		sum(decode(b.cost_type_id,1,a.dir_amount,0)) as cost_emp_amount<!--  人员经费 -->,
		sum(decode(b.cost_type_id,2,a.dir_amount,0)) as cost_mate_amount<!--卫生材料费 -->,
		sum(decode(b.cost_type_id,3,a.dir_amount,0)) as cost_drug_amount<!--药品费 -->,
		sum(decode(b.cost_type_id,4,a.dir_amount,0)) as cost_fasset_amount<!--固定资产 -->,
		sum(decode(b.cost_type_id,5,a.dir_amount,0)) as cost_iasset_amount<!--无形资产 -->,
		sum(decode(b.cost_type_id,6,a.dir_amount,0)) as cost_risk_amount<!--提取医疗风险基金 -->,
		sum(decode(b.cost_type_id,7,a.dir_amount,0)) as cost_other_amount<!--其他费用 -->
		from
		cost_dept_cost_data a
		left join cost_item_dict b on
		a.group_id=b.group_id and a.hos_id=b.hos_id
		and a.copy_code=b.copy_code
		and a.cost_item_id=b.cost_item_id
		left join acc_dept_attr c on
		a.group_id=c.group_id and a.hos_id=c.hos_id and c.dept_id=a.dept_id
		left join hos_dept_dict d on
		a.group_id=d.group_id and
		a.hos_id=d.hos_id and a.dept_id=d.dept_id
		<if test="is_flag == '1' ">
			and a.dept_no=d.dept_no
		</if>
		<if test="is_flag == '0' or is_flag == ''">
			and d.is_stop=0
		</if>
		<where>
			<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code}
			</if>
			<if test="dept_type != '' and dept_type != null ">
			 ada.type_code = #{dept_type}  and 
			</if>
			<if test="dept_nature != '' and dept_nature != null ">
			 ada.natur_code  = #{dept_nature}  and 
			</if>
			<if test="first_year != '' and first_year != null and  last_year !='' and last_year !=null">
				and substr(a.year_month,1,4) between #{first_year} and #{last_year}
			</if>
		</where>
		group by a.year_month,c.type_code
		)
		select * from (
		select * from
		dept_dir
		union all
		select * from dept_type
		) t
		order by
		year_month,dept_code asc
    </select>
	
</mapper>

