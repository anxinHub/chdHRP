<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.protocol.MedProtocolMainMapper">
	
	<resultMap id="medProtocolMain" type="com.chd.hrp.med.entity.MedProtocolMain">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="protocol_code" column="protocol_code"/>
	<result property="original_no" column="original_no"/>
	<result property="type_id" column="type_id"/>
	<result property="protocol_name" column="protocol_name"/>
	<result property="sign_date" column="sign_date"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_id" column="sup_id"/>
	<result property="is_bid" column="is_bid"/>
	<result property="start_date" column="start_date"/>
	<result property="end_date" column="end_date"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_id" column="dept_id"/>
	<result property="addr" column="addr"/>
	<result property="first_man" column="first_man"/>
	<result property="second_man" column="second_man"/>
	<result property="second_phone" column="second_phone"/>
	<result property="contract_detail" column="contract_detail"/>
	<result property="service_detail" column="service_detail"/>
	<result property="create_emp" column="create_emp"/>
	<result property="check_emp" column="check_emp"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="spell" column="spell"/>
	<result property="is_init" column="is_init"/>
	</resultMap>
	<!-- 根据ID 多表联合查询采购协议（修改页面回值用） 返回结果Map -->
	<resultMap id="unitMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="hos_name" column="hos_name"/>
	<result property="copy_code" column="copy_code"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="protocol_code" column="protocol_code"/>
	<result property="original_no" column="original_no"/>
	<result property="type_id" column="type_id"/>
	<result property="type_code" column="type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="war_days" column="war_days"/>
	<result property="protocol_name" column="protocol_name"/>
	<result property="sign_date" column="sign_date"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_code" column="sup_code"/>
	<result property="sup_name" column="sup_name"/>
	<result property="is_bid" column="is_bid"/>
	<result property="start_date" column="start_date"/>
	<result property="end_date" column="end_date"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="addr" column="addr"/>
	<result property="first_man" column="first_man"/>
	<result property="emp_no" column="emp_no"/>
	<result property="emp_code" column="emp_code"/>
	<result property="emp_name" column="emp_name"/>
	<result property="second_man" column="second_man"/>
	<result property="second_phone" column="second_phone"/>
	<result property="contract_detail" column="contract_detail"/>
	<result property="service_detail" column="service_detail"/>
	<result property="create_emp" column="create_emp"/>
	<result property="check_emp" column="check_emp"/>
	<result property="confirm_emp" column="confirm_emp"/>
	<result property="state" column="state"/>
	<result property="spell" column="spell"/>
	<result property="is_init" column="is_init"/>

	</resultMap>
	
	<!-- 议类型开始年、月 、协议前缀 -->
	<resultMap id="preMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pre" column="pre"/>
	</resultMap>
	
	<!-- grid内 下拉框 元素Map -->
	<resultMap id="listMap" type="java.util.Map">
	<result property="type_code" column="type_code"/>
	<result property="typeName" column="typeName"/>
	<result property="dept_id" column="dept_id"/>
	<result property="deptName" column="deptName"/>
	<result property="mana_emp" column="mana_emp"/>
	<result property="mana_name" column="mana_name"/>
	</resultMap>
	
	<!-- 物资药品明细Map   协议明细Map-->
	<resultMap id="detailMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="detail_id" column="detail_id"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_no" column="inv_no"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="price" column="price"/>
	<result property="cert_code" column="cert_code"/>
	<result property="note" column="note"/>
	<result property="fac_name" column="fac_name"/>
    <result property="fac_id" column="fac_id"/>
	</resultMap>
	
	<!-- 协议文档信息Map-->
	<resultMap id="fileMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="file_id" column="file_id"/>
	<result property="protocol_id" column="protocol_id"/>
	<result property="type_code" column="type_code"/>
	<result property="type_name" column="type_name"/>
	<result property="file_code" column="file_code"/>
	<result property="file_name" column="file_name"/>
	<result property="at_local" column="at_local"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="mana_emp" column="mana_emp"/>
	<result property="emp_code" column="emp_code"/>
	<result property="emp_no" column="emp_no"/>
	<result property="emp_name" column="emp_name"/>
	<result property="file_path" column="file_path"/>
	</resultMap>
	
	<resultMap id="prMap" type="java.util.Map">
	<result property="price" column="price"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	</resultMap>
	
	<insert id="addMedProtocolMain" useGeneratedKeys="true" >
	
		INSERT INTO MED_PROTOCOL_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		protocol_id
		,
		protocol_code
		,
		original_no
		,
		type_id
		,
		protocol_name
		,
		sign_date
		,
		sup_no
		,
		sup_id
		,
		is_bid
		,
		start_date
		,
		end_date
		,
		dept_no
		,
		dept_id
		,
		addr
		,
		first_man
		,
		second_man
		,
		second_phone
		,
		contract_detail
		,
		service_detail
		,
		create_emp
		,
		check_emp
		,
		confirm_emp
		,
		state
		,
		spell
		,
		is_init
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		MED_PROTOCOL_MAIN_SEQ.nextval 
		,
		#{protocol_code,jdbcType=VARCHAR}
		,
		#{original_no,jdbcType=VARCHAR}
		,
		#{type_id,jdbcType=INTEGER}
		,
		#{protocol_name,jdbcType=VARCHAR}
		,
		to_date(#{sign_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		#{sup_no,jdbcType=INTEGER}
		,
		#{sup_id,jdbcType=INTEGER}
		,
		#{is_bid,jdbcType=INTEGER}
		,
		to_date(#{start_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		to_date(#{end_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		#{dept_no,jdbcType=INTEGER}
		,
		#{dept_id,jdbcType=INTEGER}
		,
		#{addr,jdbcType=VARCHAR}
		,
		#{first_man,jdbcType=VARCHAR}
		,
		#{second_man,jdbcType=VARCHAR}
		,
		#{second_phone,jdbcType=VARCHAR}
		,
		#{contract_detail,jdbcType=VARCHAR}
		,
		#{service_detail,jdbcType=VARCHAR}
		,
		#{create_emp,jdbcType=INTEGER}
		,
		#{check_emp,jdbcType=INTEGER}
		,
		#{confirm_emp,jdbcType=INTEGER}
		,
		#{state,jdbcType=INTEGER}
		,
		#{spell,jdbcType=VARCHAR}
		,
		#{is_init,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatchMedProtocolMain" parameterType="java.util.List" >
	
		INSERT INTO MED_PROTOCOL_MAIN (
		protocol_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		protocol_code
		,
		original_no
		,
		type_id
		,
		protocol_name
		,
		sign_date
		,
		sup_no
		,
		sup_id
		,
		is_bid
		,
		start_date
		,
		end_date
		,
		dept_no
		,
		dept_id
		,
		addr
		,
		first_man
		,
		second_man
		,
		second_phone
		,
		contract_detail
		,
		service_detail
		,
		create_emp
		,
		check_emp
		,
		confirm_emp
		,
		state
		,
		spell
		,
		is_init
		
		) select MED_PROTOCOL_MAIN_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.protocol_code,jdbcType=VARCHAR}
			,
			#{item.item.original_no,jdbcType=VARCHAR}
			,
			#{item.type_id,jdbcType=INTEGER}
			,
			#{item.protocol_name,jdbcType=VARCHAR}
			,
			to_date(#{item.sign_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			#{item.sup_no,jdbcType=INTEGER}
			,
			#{item.sup_id,jdbcType=INTEGER}
			,
			#{item.is_bid,jdbcType=INTEGER}
			,
			to_date(#{item.start_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			to_date(#{item.end_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			#{item.dept_no,jdbcType=INTEGER}
			,
			#{item.dept_id,jdbcType=INTEGER}
			,
			#{item.addr,jdbcType=VARCHAR}
			,
			#{item.first_man,jdbcType=VARCHAR}
			,
			#{item.second_man,jdbcType=VARCHAR}
			,
			#{item.second_phone,jdbcType=VARCHAR}
			,
			#{item.contract_detail,jdbcType=VARCHAR}
			,
			#{item.service_detail,jdbcType=VARCHAR}
			,
			#{item.create_emp,jdbcType=INTEGER}
			,
			#{item.check_emp,jdbcType=INTEGER}
			,
			#{item.confirm_emp,jdbcType=INTEGER}
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.spell,jdbcType=VARCHAR}
			,
			#{item.is_init,jdbcType=INTEGER}
				from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMedProtocolMain" parameterType="java.util.Map">
	
		UPDATE med_protocol_main SET
		protocol_code = #{protocol_code,jdbcType=VARCHAR}
		,
		original_no = #{original_no,jdbcType=VARCHAR}
		,
		type_id = #{type_id,jdbcType=INTEGER}
		,
		protocol_name = #{protocol_name,jdbcType=VARCHAR}
		,
		sign_date = to_date(#{sign_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		sup_no = #{sup_no,jdbcType=INTEGER}
		,
		sup_id = #{sup_id,jdbcType=INTEGER}
		,
		is_bid = #{is_bid,jdbcType=INTEGER}
		,
		start_date = to_date(#{start_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		end_date = to_date(#{end_date,jdbcType=DATE},'yyyy-MM-dd')
		,
		dept_no = #{dept_no,jdbcType=INTEGER}
		,
		dept_id = #{dept_id,jdbcType=INTEGER}
		,
		addr = #{addr,jdbcType=VARCHAR}
		,
		first_man = #{first_man,jdbcType=VARCHAR}
		,
		second_man = #{second_man,jdbcType=VARCHAR}
		,
		second_phone = #{second_phone,jdbcType=VARCHAR}
		,
		contract_detail = #{contract_detail,jdbcType=VARCHAR}
		,
		service_detail = #{service_detail,jdbcType=VARCHAR}
		,
		create_emp = #{create_emp,jdbcType=INTEGER}
		,
		check_emp = #{check_emp,jdbcType=INTEGER}
		,
		confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		,
		state = #{state,jdbcType=INTEGER}
		,
		spell = #{spell,jdbcType=VARCHAR}
		,
		is_init = #{is_init,jdbcType=INTEGER}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		protocol_id =#{protocol_id,jdbcType=INTEGER}
		
	
	</update>
	
	
	<select id="existsMedProtocolMainStateBatch" parameterType="java.util.List" resultType="java.lang.Long">
		SELECT count(1)
		FROM med_protocol_main
		WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and protocol_id = #{item.protocol_id,jdbcType=INTEGER}
			and state > 1
		</foreach>
	</select>
	
	<update id="updateBatchMedProtocolMain" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_protocol_main SET
			protocol_code = #{item.protocol_code,jdbcType=VARCHAR}
			,
			original_no = #{item.original_no,jdbcType=VARCHAR}
			,
			type_id = #{item.type_id,jdbcType=INTEGER}
			,
			protocol_name = #{item.protocol_name,jdbcType=VARCHAR}
			,
			sign_date = to_date(#{item.sign_date,jdbcType=DATE}
			,
			sup_no = #{item.sup_no,jdbcType=INTEGER}
			,
			sup_id = #{item.sup_id,jdbcType=INTEGER}
			,
			is_bid = #{item.is_bid,jdbcType=INTEGER}
			,
			start_date = to_date(#{item.start_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			end_date = to_date(#{item.end_date,jdbcType=DATE},'yyyy-MM-dd')
			,
			dept_no = #{item.dept_no,jdbcType=INTEGER}
			,
			dept_id = #{item.dept_id,jdbcType=INTEGER}
			,
			addr = #{item.addr,jdbcType=VARCHAR}
			,
			first_man = #{item.first_man,jdbcType=VARCHAR}
			,
			second_man = #{item.second_man,jdbcType=VARCHAR}
			,
			second_phone = #{item.second_phone,jdbcType=VARCHAR}
			,
			contract_detail = #{item.contract_detail,jdbcType=VARCHAR}
			,
			service_detail = #{item.service_detail,jdbcType=VARCHAR}
			,
			create_emp = #{item.create_emp,jdbcType=INTEGER}
			,
			check_emp = #{item.check_emp,jdbcType=INTEGER}
			,
			confirm_emp = #{item.confirm_emp,jdbcType=INTEGER}
			,
			state = #{item.state,jdbcType=INTEGER}
			,
			spell = #{item.spell,jdbcType=VARCHAR}
			,
			is_init = #{item.is_init,jdbcType=INTEGER}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			protocol_id = #{item.protocol_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	<!-- 审核、消审、确认、取消确认、终止、取消终止 -->
	<update id="updateState" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_protocol_main SET
			state = #{item.state,jdbcType=INTEGER}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			protocol_id = #{item.protocol_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	<delete id="deleteMedProtocolMain" parameterType="java.util.Map">
	
		DELETE FROM med_protocol_main WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		protocol_id = #{protocol_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMedProtocolMain" parameterType="java.util.List">
		DELETE FROM med_protocol_main WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				protocol_id = #{item.protocol_id,jdbcType=INTEGER}
				
			</foreach>
	
	</delete>
	<select id="queryMedProtocolMain" parameterType="java.util.Map" resultMap="medProtocolMain" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		protocol_code,
		original_no,
		type_id,
		protocol_name,
		sign_date,
		sup_no,
		sup_id,
		is_bid,
		start_date,
		end_date,
		dept_no,
		dept_id,
		addr,
		first_man,
		second_man,
		second_phone,
		contract_detail,
		service_detail,
		create_emp,
		check_emp,
		confirm_emp,
		state,
		spell,
		is_init
		FROM MED_PROTOCOL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="protocol_code != null and protocol_code != ''">
		AND protocol_code like '%'||#{protocol_code}||'%'
		</if>
		<if test="original_no != null and original_no != ''">
		AND original_no = #{original_no,jdbcType=VARCHAR}
		</if>
		<if test="type_id != null and type_id != ''">
		AND type_id = #{type_id,jdbcType=INTEGER}
		</if>
		<if test="protocol_name != null and protocol_name != ''">
		AND( protocol_name like '%'||#{protocol_name}||'%' or
				spell like	'%'||#{protocol_name}||'%'
			)
		</if>
		<if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
		AND sign_date between to_date(#{beginDate},'yyyy-MM-dd') and to_date(#{endDate},'yyyy-MM-dd')
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND sup_no = #{sup_no,jdbcType=INTEGER}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="is_bid != null and is_bid != ''">
		AND is_bid = #{is_bid,jdbcType=INTEGER}
		</if>
		<if test="start_date != null and start_date != ''">
		AND start_date = #{start_date,jdbcType=DATE}
		</if>
		<if test="end_date != null and end_date != ''">
		AND end_date = #{end_date,jdbcType=DATE}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="addr != null and addr != ''">
		AND addr = #{addr,jdbcType=VARCHAR}
		</if>
		<if test="first_man != null and first_man != ''">
		AND first_man = #{first_man,jdbcType=VARCHAR}
		</if>
		<if test="second_man != null and second_man != ''">
		AND second_man like '%' || ${second_man} ||'%'
		</if>
		<if test="second_phone != null and second_phone != ''">
		AND second_phone = #{second_phone,jdbcType=VARCHAR}
		</if>
		<if test="contract_detail != null and contract_detail != ''">
		AND contract_detail = #{contract_detail,jdbcType=VARCHAR}
		</if>
		<if test="service_detail != null and service_detail != ''">
		AND service_detail = #{service_detail,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND check_emp = #{check_emp,jdbcType=INTEGER}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="spell != null and spell != ''">
		AND spell = #{spell,jdbcType=VARCHAR}
		</if>
		<if test="is_init != null and is_init != ''">
		AND is_init = #{is_init,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 多表联合查询 采购协议详细信息 -->
	<select id="queryMedProtocolMainInfo" parameterType="java.util.Map" resultMap="unitMap" >
	
		SELECT 
			mpm.group_id,
			mpm.hos_id,
			hi.hos_name,
			mpm.copy_code,
			mpm.protocol_id,
			mpm.protocol_code,
			mpm.original_no,
			mpm.type_id,
			mpt.type_code,
			mpt.type_name,
			mpt.war_days,
			mpm.protocol_name,
			mpm.sign_date,
			mpm.sup_no,
			mpm.sup_id,
			hsd.sup_code,
			hsd.sup_name,
			mpm.is_bid,
			mpm.start_date,
			mpm.end_date,
			mpm.dept_no,
			mpm.dept_id,
			hdd.dept_code,
			hdd.dept_name,
			mpm.addr,
			mpm.first_man,
			hed.emp_no,
			hed.emp_code,
			hed.emp_name,
			mpm.second_man,
			mpm.second_phone,
			mpm.contract_detail,
			mpm.service_detail,
			mpm.create_emp,
			mpm.check_emp,
			mpm.confirm_emp,
			mpm.state,
			mpm.spell,
			mpm.is_init
			FROM MED_PROTOCOL_MAIN  mpm left join MED_PROTOCOL_TYPE mpt
				ON 
					mpm.group_id = mpt.group_id  and 
					mpm.hos_id = mpt.hos_id  and 
					mpm.copy_code = mpt.copy_code  and 
					mpm.type_id = mpt.type_id 
			left join HOS_SUP_DICT hsd 
				ON 
					mpm.group_id = hsd.group_id  and 
					mpm.hos_id = hsd.hos_id  and 
					mpm.sup_id = hsd.sup_id and 
					mpm.sup_no = hsd.sup_no and 
					hsd.is_stop = 0 
			left join HOS_INFO hi
				ON 
					mpm.group_id = hi.group_id  and 
					mpm.hos_id = hi.hos_id 
			left join HOS_DEPT_DICT hdd 
				ON 
					mpm.group_id = hdd.group_id  and 
					mpm.hos_id = hdd.hos_id  and 
					mpm.dept_id = hdd.dept_id and 
					mpm.dept_no = hdd.dept_no and 
					hdd.is_stop = 0 
			left join HOS_EMP_DICT hed 
				ON 
					mpm.group_id = hed.group_id  and 
					mpm.hos_id = hed.hos_id  and 
					mpm.first_man = hed.emp_id and 
					hed.is_stop = 0 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND mpm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="protocol_id != null and protocol_id != ''">
			AND mpm.protocol_id = #{protocol_id,jdbcType=INTEGER}
			</if>
			<if test="protocol_code != null and protocol_code != ''">
			AND mpm.protocol_code like '%'||#{protocol_code}||'%'
			</if>
			<if test="original_no != null and original_no != ''">
			AND mpm.original_no = #{original_no,jdbcType=VARCHAR}
			</if>
			<if test="type_id != null and type_id != ''">
			AND mpm.type_id = #{type_id,jdbcType=INTEGER}
			</if>
			<if test="protocol_name != null and protocol_name != ''">
			AND( mpm.protocol_name like '%'||#{protocol_name}||'%' or
					mpm.spell like	'%'||#{protocol_name}||'%'
				)
			</if>
			<if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
			AND mpm.sign_date between to_date(#{beginDate},'yyyy-MM-dd') and to_date(#{endDate},'yyyy-MM-dd')
			</if>
			<if test="sup_no != null and sup_no != ''">
			AND mpm.sup_no = #{sup_no,jdbcType=INTEGER}
			</if>
			<if test="sup_id != null and sup_id != ''">
			AND mpm.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="is_bid != null and is_bid != ''">
			AND mpm.is_bid = #{is_bid,jdbcType=INTEGER}
			</if>
			<if test="start_date != null and start_date != ''">
			AND mpm.start_date = #{start_date,jdbcType=DATE}
			</if>
			<if test="end_date != null and end_date != ''">
			AND mpm.end_date = #{end_date,jdbcType=DATE}
			</if>
			<if test="dept_no != null and dept_no != ''">
			AND mpm.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND mpm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="addr != null and addr != ''">
			AND mpm.addr = #{addr,jdbcType=VARCHAR}
			</if>
			<if test="first_man != null and first_man != ''">
			AND mpm.first_man = #{first_man,jdbcType=VARCHAR}
			</if>
			<if test="second_man != null and second_man != ''">
			AND mpm.second_man like '%${second_man}%'
			</if>
			<if test="second_phone != null and second_phone != ''">
			AND mpm.second_phone = #{second_phone,jdbcType=VARCHAR}
			</if>
			<if test="contract_detail != null and contract_detail != ''">
			AND mpm.contract_detail = #{contract_detail,jdbcType=VARCHAR}
			</if>
			<if test="service_detail != null and service_detail != ''">
			AND mpm.service_detail = #{service_detail,jdbcType=VARCHAR}
			</if>
			<if test="create_emp != null and create_emp != ''">
			AND mpm.create_emp = #{create_emp,jdbcType=INTEGER}
			</if>
			<if test="check_emp != null and check_emp != ''">
			AND mpm.check_emp = #{check_emp,jdbcType=INTEGER}
			</if>
			<if test="confirm_emp != null and confirm_emp != ''">
			AND mpm.confirm_emp = #{confirm_emp,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
			AND mpm.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="spell != null and spell != ''">
			AND mpm.spell = #{spell,jdbcType=VARCHAR}
			</if>
			<if test="is_init != null and is_init != ''">
			AND mpm.is_init = #{is_init,jdbcType=INTEGER}
			</if>
			<!-- 下面条件 为 协议截止提醒页面中用   (截止日期  - 当前系统时间  <= 预警天数)   -->
			<if test=" warn != null and warn != ''">
				AND mpm.end_date - sysdate &lt;=  mpt.war_days 
			
			</if>
		
		</where>   
		order by mpm.protocol_id desc
	</select>
	<select id="queryMedProtocolMainByCode" resultType="com.chd.hrp.med.entity.MedProtocolMain" parameterType="java.util.Map" >
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		protocol_code,
		original_no,
		type_id,
		protocol_name,
		sign_date,
		sup_no,
		sup_id,
		is_bid,
		start_date,
		end_date,
		dept_no,
		dept_id,
		addr,
		first_man,
		second_man,
		second_phone,
		contract_detail,
		service_detail,
		create_emp,
		check_emp,
		confirm_emp,
		state,
		spell,
		is_init
		FROM med_protocol_main 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="protocol_id != null and protocol_id != ''">
			AND protocol_id = #{protocol_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<!-- 根据ID 多表联合查询采购协议（修改页面回值用） -->
	<select id="queryMedProtocolMainUnit" resultMap="unitMap" parameterType="java.util.Map" >
		SELECT 
		mpm.group_id,
		mpm.hos_id,
		mpm.copy_code,
		mpm.protocol_id,
		mpm.protocol_code,
		mpm.original_no,
		mpm.type_id,
		mpt.type_code,
		mpt.type_name,
		mpm.protocol_name,
		mpm.sign_date,
		mpm.sup_no,
		mpm.sup_id,
		hsd.sup_code,
		hsd.sup_name,
		mpm.is_bid,
		mpm.start_date,
		mpm.end_date,
		mpm.dept_no,
		mpm.dept_id,
		hdd.dept_code,
		hdd.dept_name,
		mpm.addr,
		mpm.first_man,
		hed.emp_no,
		hed.emp_code,
		hed.emp_name,
		mpm.second_man,
		mpm.second_phone,
		mpm.contract_detail,
		mpm.service_detail,
		mpm.create_emp,
		mpm.check_emp,
		mpm.confirm_emp,
		mpm.state,
		mpm.spell,
		mpm.is_init
		FROM MED_PROTOCOL_MAIN  mpm left join MED_PROTOCOL_TYPE mpt
			ON 
				mpm.group_id = mpt.group_id  and 
				mpm.hos_id = mpt.hos_id  and 
				mpm.copy_code = mpt.copy_code  and 
				mpm.type_id = mpt.type_id 
		left join HOS_SUP_DICT hsd 
			ON 
				mpm.group_id = hsd.group_id  and 
				mpm.hos_id = hsd.hos_id  and 
				mpm.sup_id = hsd.sup_id and 
				mpm.sup_no = hsd.sup_no and 
				hsd.is_stop = 0 
		left join HOS_DEPT_DICT hdd 
			ON 
				mpm.group_id = hdd.group_id  and 
				mpm.hos_id = hdd.hos_id  and 
				mpm.dept_id = hdd.dept_id and 
				mpm.dept_no = hdd.dept_no and 
				hdd.is_stop = 0 
		left join HOS_EMP_DICT hed 
			ON 
				mpm.group_id = hed.group_id  and 
				mpm.hos_id = hed.hos_id  and 
				mpm.first_man = hed.emp_id and 
				hed.is_stop = 0 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND mpm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mpm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mpm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="protocol_id != null and protocol_id != ''">
			AND mpm.protocol_id = #{protocol_id,jdbcType=INTEGER}
			</if>
			order by mpm.protocol_id
		</where>
	</select>
	<!--  -->
	<select id="queryMedProtocolMainByID" resultType="com.chd.hrp.med.entity.MedProtocolMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		protocol_code,
		protocol_name
		FROM med_protocol_main 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="protocol_id != null and protocol_id != ''">
			AND protocol_id != #{protocol_id,jdbcType=INTEGER}
			</if>
			<if test="protocol_name != null and protocol_name != ''">
			AND protocol_name = #{protocol_name,jdbcType=VARCHAR}
			</if> 
		</where>
	</select>
	<select id="queryMedProtocolMainByUniqueness" resultType="com.chd.hrp.med.entity.MedProtocolMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		protocol_id,
		protocol_code,
		original_no,
		type_id,
		protocol_name,
		sign_date,
		sup_no,
		sup_id,
		is_bid,
		start_date,
		end_date,
		dept_no,
		dept_id,
		addr,
		first_man,
		second_man,
		second_phone,
		contract_detail,
		service_detail,
		create_emp,
		check_emp,
		confirm_emp,
		state,
		spell,
		is_init
		FROM MED_PROTOCOL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="protocol_code != null and protocol_code != ''">
		AND protocol_code = #{protocol_code,jdbcType=VARCHAR}
		</if>
		<if test="original_no != null and original_no != ''">
		AND original_no = #{original_no,jdbcType=VARCHAR}
		</if>
		<if test="type_id != null and type_id != ''">
		AND type_id = #{type_id,jdbcType=INTEGER}
		</if>
		<if test="protocol_name != null and protocol_name != ''">
		AND protocol_name = #{protocol_name,jdbcType=VARCHAR}
		</if>
		<if test="sign_date != null and sign_date != ''">
		AND sign_date = #{sign_date,jdbcType=DATE}
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND sup_no = #{sup_no,jdbcType=INTEGER}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="is_bid != null and is_bid != ''">
		AND is_bid = #{is_bid,jdbcType=INTEGER}
		</if>
		<if test="start_date != null and start_date != ''">
		AND start_date = #{start_date,jdbcType=DATE}
		</if>
		<if test="end_date != null and end_date != ''">
		AND end_date = #{end_date,jdbcType=DATE}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="addr != null and addr != ''">
		AND addr = #{addr,jdbcType=VARCHAR}
		</if>
		<if test="first_man != null and first_man != ''">
		AND first_man = #{first_man,jdbcType=VARCHAR}
		</if>
		<if test="second_man != null and second_man != ''">
		AND second_man = #{second_man,jdbcType=VARCHAR}
		</if>
		<if test="second_phone != null and second_phone != ''">
		AND second_phone = #{second_phone,jdbcType=VARCHAR}
		</if>
		<if test="contract_detail != null and contract_detail != ''">
		AND contract_detail = #{contract_detail,jdbcType=VARCHAR}
		</if>
		<if test="service_detail != null and service_detail != ''">
		AND service_detail = #{service_detail,jdbcType=VARCHAR}
		</if>
		<if test="create_emp != null and create_emp != ''">
		AND create_emp = #{create_emp,jdbcType=INTEGER}
		</if>
		<if test="check_emp != null and check_emp != ''">
		AND check_emp = #{check_emp,jdbcType=INTEGER}
		</if>
		<if test="confirm_emp != null and confirm_emp != ''">
		AND confirm_emp = #{confirm_emp,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="spell != null and spell != ''">
		AND spell = #{spell,jdbcType=VARCHAR}
		</if>
		<if test="is_init != null and is_init != ''">
		AND is_init = #{is_init,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 据协议类型Id 查询其协议前缀 -->
	<select id="queryMedProtocolTypePre" parameterType="java.util.Map" resultMap="preMap">
		SELECT
			group_id,
			hos_id,
			copy_code,
			pre
		FROM MED_PROTOCOL_TYPE
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code  != ''">
				and copy_code  = #{copy_code }
			</if>
			<if test="type_id != null and type_id != ''">
				and type_id = #{type_id}
			</if>
		</where>
		order by type_id
	</select>
	<!-- grid明细编辑  文档类别下拉框 -->
	<select id="queryMedFileType" resultMap="listMap">
		select  
			type_code ,
			type_name typeName
		from MED_FILE_TYPE
		where
			is_stop = 0 
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="key != null and key != ''">
				and (
					pack_code like '${key}%' or
					pack_name like '%${key}%' 
				or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
		order by type_code
	</select>
	<!-- grid明细编辑  管理科室下拉框 -->
	<select id="queryManaDept" resultMap="listMap">
		select a.dept_id dept_id,
			a.dept_code||' '||a.dept_name deptName
		from hos_dept a
		left join acc_dept_attr b on a.dept_id = b.dept_id 
     		and a.hos_id = b.hos_id 
     		and a.group_id = b.group_id
     	where a.is_stop = 0
     		<if test="group_id != null  and group_id != ''">
				and a.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and a.hos_id = #{hos_id}
			</if>
			<if test="key != null and key != ''">
				and (
					a.dept_code like '${key}%' or
					a.dept_name like '%${key}%' 
				or
					a.spell_code like '%${key}%' or
					a.wbx_code like '%${key}%'
				)
			</if>
			and b.is_manager = 1
		order by a.dept_id
	</select>
	<!-- grid明细编辑  管理员下拉框 -->
	<select id="queryManaEmp" resultMap="listMap">
		select  emp_id||':'||emp_no mana_emp,
			emp_code||' '||emp_name mana_name
		from hos_emp_dict
		where
			is_stop = 0 
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="emp_id != null  and emp_id != ''">
				and emp_id = #{emp_id}
			</if>
			<if test="key != null and key != ''">
				and (
					emp_code like '${key}%' or
					emp_name like '%${key}%' or
					emp_id like '%${key}%'
				or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
		order by emp_id
	</select>
	<!-- 物资药品明细列表 -->
	<select id="queryMedInvDetail" resultMap="detailMap">
		select 
			distinct
	      mid.group_id,
	      mid.hos_id,
	      mid.copy_code,
	      mid.inv_id,
	      mid.inv_no,
	      mid.inv_code,
	      mid.inv_name,
	      mid.inv_model,
	      mid.unit_code,
	      hu.unit_name,
	      mid.plan_price price,
	      hfd.fac_name
	    from MED_INV_DICT mid
	      left join HOS_UNIT hu
	        ON
	          mid.group_id = hu.group_id  and
	          mid.hos_id = hu.hos_id  and
	          mid.unit_code = hu.unit_code
	      left join MED_INV_CERT_RELA mict 
	        ON
	          mid.group_id = mict.group_id  and 
	          mid.hos_id = mict.hos_id  and
	          mid.copy_code = mict.copy_code and 
	          mid.inv_id = mict.inv_id  
	
	        left join hos_fac_dict hfd
	        on
	         mid.group_id=hfd.group_id
	         and mid.hos_id=hfd.hos_id
	         and mid.fac_id=hfd.fac_id
	         and mid.fac_no=hfd.fac_no
			<where>
				<if test="group_id != null  and group_id != ''">
					and mid.group_id = #{group_id}
				</if>
				<if test="hos_id != null  and hos_id != ''">
					and mid.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null  and copy_code != ''">
					and mid.copy_code = #{copy_code}
				</if>
				<if test="med_type_id != null  and med_type_id != ''">
					and mid.med_type_id = #{med_type_id}
				</if>
				<if test="inv_code != null  and inv_code != ''">
					and ( mid.inv_code like '${inv_code}%' or
						  mid.inv_name like '%${inv_code}%' or
						  mid.spell_code like '%${inv_code}%' or
						  mid.wbx_code like '%${inv_code}%' )
				</if>
					and mid.use_state = 1
				order by mid.inv_id
			</where>
	</select>
	<!-- 协议明细 -->
	<select id="queryMedProtocolDetail" parameterType="java.util.Map" resultMap="detailMap" >
	
		SELECT distinct
    mpd.group_id,
    mpd.hos_id,
    mpd.copy_code,
    mpd.protocol_id,
    mpd.detail_id,
    mpd.inv_no,
    mpd.inv_id,
    t.inv_code,
    t.inv_name,
    t.inv_model,
    t.unit_code,
    t.unit_name,
    mpd.price,
    t.fac_id,
    t.fac_name,
    mpd.note
    FROM MED_PROTOCOL_DETAIL mpd 
    left join (
        select mid.group_id , mid.hos_id, mid.copy_code , mid.inv_id, mid.inv_no,mid.inv_code,mid.inv_name,
          	   mid.inv_model,mid.unit_code, mid.fac_id ,mid.fac_no , hfd.fac_name , hu.unit_name,mid.use_state
        	   from MED_INV_DICT mid 
        left join HOS_UNIT hu
         ON
	         mid.group_id = hu.group_id  and
	         mid.hos_id = hu.hos_id  and
	         mid.unit_code = hu.unit_code
	   left join hos_fac_dict hfd
         on
	         mid.group_id=hfd.group_id
	         and mid.hos_id=hfd.hos_id
	         and mid.fac_id=hfd.fac_id
	         and mid.fac_no=hfd.fac_no
	         
      ) t
      ON
        mpd.group_id = t.group_id and 
        mpd.hos_id = t.hos_id and 
        mpd.copy_code = t.copy_code and 
        mpd.inv_id = t.inv_id and 
        mpd.inv_no = t.inv_no and 
        t.use_state = 1
    left join MED_INV_CERT mic
      ON 
        mpd.group_id = mic.group_id and 
        mpd.hos_id = mic.hos_id and 
        mpd.copy_code = mic.copy_code
        and mpd.cert_no=mic.cert_id
   
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mpd.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mpd.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mpd.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND mpd.protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="detail_id != null and detail_id != ''">
		AND mpd.detail_id = #{detail_id,jdbcType=INTEGER}
		</if>
		<if test="inv_no != null and inv_no != ''">
		AND mpd.inv_no = #{inv_no,jdbcType=INTEGER}
		</if>
		<if test="inv_id != null and inv_id != ''">
		AND mpd.inv_id = #{inv_id,jdbcType=INTEGER}
		</if>
		<if test="price != null and price != ''">
		AND mpd.price = #{price,jdbcType=INTEGER}
		</if>
	
		<if test="note != null and note != ''">
		AND mpd.note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by mpd.detail_id asc
	</select>
	<!-- 协议文档信息 -->
	<select id="queryMedProtocolFile" parameterType="java.util.Map" resultMap="fileMap" >
	
		SELECT 
		mpf.group_id,
		mpf.hos_id,
		mpf.copy_code,
		mpf.protocol_id,
		mpf.file_id,
		mpf.type_code,
		mft.type_name,
		mpf.file_code,
		mpf.file_name,
		mpf.at_local,
		mpf.dept_id,
		hdd.dept_name,
		mpf.mana_emp,
		hed.emp_no,
		hed.emp_code,
		hed.emp_name,
		mpf.file_path
		FROM MED_PROTOCOL_FILE mpf left join MED_FILE_TYPE mft
			ON 
				mpf.group_id = mft.group_id and 
				mpf.hos_id = mft.hos_id and 
				mpf.copy_code = mft.copy_code and 
				mpf.type_code = mft.type_code
			left join HOS_DEPT_DICT hdd 
			ON 
				mpf.group_id = hdd.group_id  and 
				mpf.hos_id = hdd.hos_id  and 
				mpf.dept_id = hdd.dept_id and 
				hdd.is_stop = 0 
		left join HOS_EMP_DICT hed 
			ON 
				mpf.group_id = hed.group_id  and 
				mpf.hos_id = hed.hos_id  and 
				mpf.mana_emp = hed.emp_id and 
				hed.is_stop = 0 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mpf.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mpf.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mpf.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="protocol_id != null and protocol_id != ''">
		AND mpf.protocol_id = #{protocol_id,jdbcType=INTEGER}
		</if>
		<if test="file_id != null and file_id != ''">
		AND mpf.file_id = #{file_id,jdbcType=INTEGER}
		</if>
		<if test="type_code != null and type_code != ''">
		AND mpf.type_code = #{type_code,jdbcType=INTEGER}
		</if>
		<if test="file_code != null and file_code != ''">
		AND mpf.file_code = #{file_code,jdbcType=VARCHAR}
		</if>
		<if test="file_name != null and file_name != ''">
		AND mpf.file_name = #{file_name,jdbcType=VARCHAR}
		</if>
		<if test="at_local != null and at_local != ''">
		AND mpf.at_local = #{at_local,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND mpf.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="mana_emp != null and mana_emp != ''">
		AND mpf.mana_emp = #{mana_emp,jdbcType=INTEGER}
		</if>
		<if test="file_path != null and file_path != ''">
		AND mpf.file_path = #{file_path,jdbcType=VARCHAR}
		</if>
		</where>   
		order by mpf.file_id asc
	</select>
	
	<select id="qureyCurrval" resultType="java.lang.Long">
		select max(protocol_id) protocol_id from  med_protocol_main
	</select>
 
    <select id = "queryMedProtocolMainPur" parameterType="java.util.Map" resultMap="prMap" >
    
      select mpm.group_id,mpm.hos_id,mpm.copy_code,mpm.sup_id,mpm.sup_no,mpm.sign_date,mpm.state,
      mpd.price
      from med_protocol_detail mpd
      left join med_protocol_main mpm on mpd.group_id = mpm.group_id
      and mpd.hos_id = mpm.hos_id and  mpd.copy_code = mpm.copy_code
      and mpd.protocol_id = mpm.protocol_id
      <where>
       mpm.state = '2'
        <if test="group_id != null and group_id != ''">
		AND mpm.group_id = #{group_id}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mpm.hos_id = #{hos_id}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mpm.copy_code = #{copy_code}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND mpm.sup_id = #{sup_id}
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND mpm.sup_no = #{sup_no}
		</if>
      </where>
    
    </select>
 </mapper>

