<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.base.MedAffiOutMapper">
	<!-- 代销出库主表   -->
	<resultMap id="medAffiOut" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="year" column="year"/>
		<result property="month" column="month"/>
		<result property="bus_type_code" column="bus_type_code"/>
		<result property="bus_type_name" column="bus_type_name"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
		<result property="brief" column="brief"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="dept_emp" column="dept_emp"/>
		<result property="emp_no" column="emp_no"/>
		<result property="dept_emp_code" column="dept_emp_code"/>
		<result property="dept_emp_name" column="dept_emp_name"/>
		<result property="use_state" column="use_state"/>
		<result property="maker" column="maker"/>
		<result property="maker_name" column="maker_name"/>
		<result property="out_date" column="out_date"/>
		<result property="checker" column="checker"/>
		<result property="checker_name" column="checker_name"/>
		<result property="check_date" column="check_date"/>
		<result property="confirmer" column="confirmer"/>
		<result property="confirmer_name" column="confirmer_name"/>
		<result property="confirm_date" column="confirm_date"/>
		<result property="state" column="state"/>
		<result property="his_flag" column="his_flag"/>
		<result property="is_dir" column="is_dir"/>
		<result property="proj_id" column="proj_id"/>
		<result property="use_code" column="use_code"/>
	<!-- 代销出库明细表  -->
	
		<result property="detail_id" column="detail_id"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="batch_no" column="batch_no"/>
		<result property="batch_sn" column="batch_sn"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="amount_money" column="amount_money"/>
		<result property="sale_price" column="sale_price"/>
		<result property="sale_money" column="sale_money"/>
		<result property="sell_price" column="sell_price"/>
		<result property="sell_money" column="sell_money"/>
		<result property="allot_price" column="allot_price"/>
		<result property="allot_money" column="allot_money"/>
		<result property="pack_code" column="pack_code"/>
		<result property="num_exchange" column="num_exchange"/>
		<result property="pack_price" column="pack_price"/>
		<result property="num" column="num"/>
		<result property="bar_code" column="bar_code"/>
		<result property="inva_date" column="inva_date"/>
		<result property="disinfect_date" column="disinfect_date"/>
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		<result property="note" column="note"/>
		
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="sn" column="sn"/>
		<result property="sup_id" column="sup_id"/>
		<result property="sup_no" column="sup_no"/>
		<result property="sup_name" column="sup_name"/>
		
	</resultMap>
	
	<!-- 查询最大序号 -->
	<select id="queryMedAffiOutMainSeq"  resultType="java.lang.Long" useCache="false" flushCache="true">	
		select MED_AFFI_OUT_SEQ.nextval from dual
	</select>
	
	<select id="queryMedAffiOutDetailSeq"  resultType="java.lang.Long" useCache="false" flushCache="true">	
		select MED_AFFI_OUT_DETAIL_SEQ.nextval from dual
	</select>
	
	
	<!-- 代销主表增加 -->
	<insert id="addMedAffiOutMain" useGeneratedKeys="true" >	
		INSERT INTO MED_AFFI_OUT (
			group_id, 
			hos_id, 
			copy_code, 
			out_id, 
			out_no, 
			year, 
			month, 
			bus_type_code, 
			store_id, 
			store_no,  
			maker, 
			out_date,
			state
			<if test="brief != null ">, brief</if>
			<if test="dept_id != null and dept_id != ''">, dept_id</if>
			<if test="dept_no != null and dept_no != ''">, dept_no</if>
			<if test="dept_emp != null and dept_emp != ''">, dept_emp</if>		
			<if test="checker != null and checker != ''">, checker</if>
			<if test="check_date != null and check_date != ''">, check_date</if>
			<if test="confirmer != null and confirmer != ''">, confirmer</if>
			<if test="confirm_date != null and confirm_date != ''">, confirm_date</if>
			<if test="his_flag != null ">, his_flag</if>	
			<if test="use_state != null ">, use_state</if>
			<if test="is_dir != null ">, is_dir</if>
			<if test="proj_id != null and proj_id != ''">, proj_id</if>		
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{out_id,jdbcType=INTEGER},
			#{out_no,jdbcType=VARCHAR},
			#{year,jdbcType=VARCHAR},
			#{month,jdbcType=VARCHAR},
			#{bus_type_code,jdbcType=VARCHAR},
			#{store_id,jdbcType=INTEGER},
			#{store_no,jdbcType=INTEGER},			
			#{maker,jdbcType=INTEGER},
			#{out_date,jdbcType=DATE},
			1
			<if test="brief != null ">, #{brief,jdbcType=VARCHAR}</if>
			<if test="dept_id != null and dept_id != ''">, #{dept_id,jdbcType=INTEGER}</if>
			<if test="dept_no != null and dept_no != ''">, #{dept_no,jdbcType=INTEGER}</if>
			<if test="dept_emp != null and dept_emp != ''">, #{dept_emp,jdbcType=INTEGER}</if>
			<if test="checker != null and checker != ''">, #{checker,jdbcType=INTEGER}</if>
			<if test="check_date != null and check_date != ''">, #{check_date,jdbcType=DATE}</if>
			<if test="confirmer != null and confirmer != ''">, #{confirmer,jdbcType=INTEGER}</if>
			<if test="confirm_date != null and confirm_date != ''">, #{confirm_date,jdbcType=DATE}</if>
			<if test="his_flag != null ">, #{his_flag,jdbcType=INTEGER}</if>
			<if test="use_state != null ">, #{use_state,jdbcType=INTEGER}</if>
			<if test="is_dir != null ">, #{is_dir,jdbcType=INTEGER}</if>
			<if test="proj_id != null and proj_id != ''">, #{proj_id,jdbcType=INTEGER}</if>
		)
	</insert>
	
	<!-- 代销主表信息增加  批量 -->
	<insert id="addMedAffiOutMainBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MED_AFFI_OUT (
				group_id, 
				hos_id, 
				copy_code, 
				out_id, 
				out_no, 
				year, 
				month, 
				bus_type_code, 
				store_id, 
				store_no,  
				maker, 
				out_date,
				state
				<if test="item.brief != null ">, brief</if>
				<if test="item.dept_id != null and item.dept_id != ''">, dept_id</if>
				<if test="item.dept_no != null and item.dept_no != ''">, dept_no</if>
				<if test="item.dept_emp != null and item.dept_emp != ''">, dept_emp</if>		
				<if test="item.checker != null and item.checker != ''">, checker</if>
				<if test="item.check_date != null and item.check_date != ''">, check_date</if>
				<if test="item.confirmer != null and item.confirmer != ''">, confirmer</if>
				<if test="item.confirm_date != null and item.confirm_date != ''">, confirm_date</if>
				<if test="item.his_flag != null ">, his_flag</if>	
				<if test="item.use_state != null ">, use_state</if>	
				<if test="item.is_dir != null ">, is_dir</if>	
				<if test="item.proj_id != null and item.proj_id != ''">, proj_id</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=VARCHAR},
				#{item.year,jdbcType=VARCHAR},
				#{item.month,jdbcType=VARCHAR},
				#{item.bus_type_code,jdbcType=VARCHAR},
				#{item.store_id,jdbcType=INTEGER},
				#{item.store_no,jdbcType=INTEGER},			
				#{item.maker,jdbcType=INTEGER},
				#{item.out_date,jdbcType=DATE},
				#{item.state,jdbcType=INTEGER}
				<if test="item.brief != null ">, #{item.brief,jdbcType=VARCHAR}</if>
				<if test="item.dept_id != null and item.dept_id != ''">, #{item.dept_id,jdbcType=INTEGER}</if>
				<if test="item.dept_no != null and item.dept_no != ''">, #{item.dept_no,jdbcType=INTEGER}</if>
				<if test="item.dept_emp != null and item.dept_emp != ''">, #{item.dept_emp,jdbcType=INTEGER}</if>
				<if test="item.checker != null and item.checker != ''">, #{item.checker,jdbcType=INTEGER}</if>
				<if test="item.check_date != null and item.check_date != ''">, #{item.check_date,jdbcType=DATE}</if>
				<if test="item.confirmer != null and item.confirmer != ''">, #{item.confirmer,jdbcType=INTEGER}</if>
				<if test="item.confirm_date != null and item.confirm_date != ''">, #{item.confirm_date,jdbcType=DATE}</if>
				<if test="item.his_flag != null ">, #{item.his_flag,jdbcType=INTEGER}</if>
				<if test="item.use_state != null ">, #{item.use_state,jdbcType=INTEGER}</if>
				<if test="item.is_dir != null  ">, #{item.is_dir,jdbcType=INTEGER}</if>
				<if test="item.proj_id != null and item.proj_id != ''">, #{item.proj_id,jdbcType=INTEGER}</if>
			)
		</foreach>
	</insert>
	
	
	<!-- 代销明细表数据增加(批量)  -->
	<insert id="addMedAffiOutDetail" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MED_AFFI_OUT_DETAIL (
				group_id, 
				hos_id, 
				copy_code, 
				out_id, 
				out_no, 
				detail_id, 
				inv_id, 
				inv_no, 
				amount, 
				price, 
				amount_money
				<if test="item.batch_no != null and item.batch_no != ''">, batch_no</if>
				<if test="item.batch_sn != null and item.batch_sn != ''">, batch_sn</if>
				<if test="item.sale_price != null">, sale_price</if>
				<if test="item.sale_money != null">, sale_money</if>
				<if test="item.sell_price != null">, sell_price</if>
				<if test="item.sell_money != null">, sell_money</if>
				<if test="item.allot_price != null">, allot_price</if>
				<if test="item.allot_money != null">, allot_money</if>
				<if test="item.pack_code != null and item.pack_code != ''">, pack_code</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, num_exchange</if>
				<if test="item.pack_price != null and item.pack_price != ''">, pack_price</if>
				<if test="item.num != null and item.num != ''">, num</if>
				<if test="item.bar_code != null and item.bar_code != ''">, bar_code</if>
				<if test="item.inva_date != null and item.inva_date != ''">, inva_date</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, disinfect_date</if>
				<if test="item.location_id != null">, location_id</if>
				<if test="item.sup_id != null and item.sup_id != ''">, sup_id</if>
				<if test="item.sup_no != null and item.sup_no != ''">, sup_no</if>
				<if test="item.note != null ">, note</if>
			) 
			values(
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=INTEGER},
				#{item.detail_id,jdbcType=INTEGER},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.amount,jdbcType=FLOAT},
				#{item.price,jdbcType=FLOAT},
				#{item.amount_money,jdbcType=FLOAT}
				<if test="item.batch_no != null and item.batch_no != ''">, #{item.batch_no,jdbcType=INTEGER}</if>
				<if test="item.batch_sn != null and item.batch_sn != ''">, #{item.batch_sn,jdbcType=INTEGER}</if>
				<if test="item.sale_price != null">, #{item.sale_price,jdbcType=FLOAT}</if>
				<if test="item.sale_money != null">, #{item.sale_money,jdbcType=FLOAT}</if>
				<if test="item.sell_price != null">, #{item.sell_price,jdbcType=FLOAT}</if>
				<if test="item.sell_money != null">, #{item.sell_money,jdbcType=FLOAT}</if>
				<if test="item.allot_price != null">, #{item.allot_price,jdbcType=FLOAT}</if>
				<if test="item.allot_money != null">, #{item.allot_money,jdbcType=FLOAT}</if>
				<if test="item.pack_code != null and item.pack_code != ''">, #{item.pack_code,jdbcType=VARCHAR}</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, #{item.num_exchange,jdbcType=INTEGER}</if>
				<if test="item.pack_price != null and item.pack_price != ''">, #{item.pack_price,jdbcType=INTEGER}</if>
				<if test="item.num != null and item.num != ''">, #{item.num,jdbcType=INTEGER}</if>
				<if test="item.bar_code != null and item.bar_code != ''">, #{item.bar_code,jdbcType=VARCHAR}</if>
				<if test="item.inva_date != null and item.inva_date != ''">, #{item.inva_date,jdbcType=DATE}</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, #{item.disinfect_date,jdbcType=DATE}</if>
				<if test="item.location_id != null">, #{item.location_id,jdbcType=INTEGER}</if>
				<if test="item.sup_id != null and item.sup_id != ''">, #{item.sup_id,jdbcType=INTEGER}</if>
				<if test="item.sup_no != null and item.sup_no != ''">, #{item.sup_no,jdbcType=INTEGER}</if>
				<if test="item.note != null ">, #{item.note,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	
	<!-- 医嘱核销生成明细 -->
	<insert id="addMedAffiOutDetailInit" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO MED_AFFI_OUT_DETAIL (
				detail_id, 
				group_id, 
				hos_id, 
				copy_code, 
				out_id, 
				out_no, 
				inv_id, 
				inv_no, 
				amount, 
				price, 
				amount_money
				<if test="item.batch_no != null and item.batch_no != ''">, batch_no</if>
				<if test="item.batch_sn != null and item.batch_sn != ''">, batch_sn</if>
				<if test="item.sale_price != null">, sale_price</if>
				<if test="item.sale_money != null">, sale_money</if>
				<if test="item.sell_price != null">, sell_price</if>
				<if test="item.sell_money != null">, sell_money</if>
				<if test="item.allot_price != null">, allot_price</if>
				<if test="item.allot_money != null">, allot_money</if>
				<if test="item.pack_code != null and item.pack_code != ''">, pack_code</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, num_exchange</if>
				<if test="item.pack_price != null and item.pack_price != ''">, pack_price</if>
				<if test="item.num != null and item.num != ''">, num</if>
				<if test="item.bar_code != null and item.bar_code != ''">, bar_code</if>
				<if test="item.inva_date != null and item.inva_date != ''">, inva_date</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, disinfect_date</if>
				<if test="item.location_id != null">, location_id</if>
				<if test="item.note != null ">, note</if>
			) 
			values( #{item.detail_id,jdbcType=INTEGER},  
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.out_no,jdbcType=INTEGER},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_no,jdbcType=INTEGER},
				#{item.amount,jdbcType=FLOAT},
				#{item.price,jdbcType=FLOAT},
				#{item.amount_money,jdbcType=FLOAT}
				<if test="item.batch_no != null and item.batch_no != ''">, #{item.batch_no,jdbcType=INTEGER}</if>
				<if test="item.batch_sn != null and item.batch_sn != ''">, #{item.batch_sn,jdbcType=INTEGER}</if>
				<if test="item.sale_price != null">, #{item.sale_price,jdbcType=FLOAT}</if>
				<if test="item.sale_money != null">, #{item.sale_money,jdbcType=FLOAT}</if>
				<if test="item.sell_price != null">, #{item.sell_price,jdbcType=FLOAT}</if>
				<if test="item.sell_money != null">, #{item.sell_money,jdbcType=FLOAT}</if>
				<if test="item.allot_price != null">, #{item.allot_price,jdbcType=FLOAT}</if>
				<if test="item.allot_money != null">, #{item.allot_money,jdbcType=FLOAT}</if>
				<if test="item.pack_code != null and item.pack_code != ''">, #{item.pack_code,jdbcType=VARCHAR}</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">, #{item.num_exchange,jdbcType=INTEGER}</if>
				<if test="item.pack_price != null and item.pack_price != ''">, #{item.pack_price,jdbcType=INTEGER}</if>
				<if test="item.num != null and item.num != ''">, #{item.num,jdbcType=INTEGER}</if>
				<if test="item.bar_code != null and item.bar_code != ''">, #{item.bar_code,jdbcType=VARCHAR}</if>
				<if test="item.inva_date != null and item.inva_date != ''">, #{item.inva_date,jdbcType=DATE}</if>
				<if test="item.disinfect_date != null and item.disinfect_date != ''">, #{item.disinfect_date,jdbcType=DATE}</if>
				<if test="item.location_id != null">, #{item.location_id,jdbcType=INTEGER}</if>
				<if test="item.note != null ">, #{item.note,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	
	
	<!-- 更新代销出库主表 -->
	<update id="updateMedAffiOutMain" parameterType="java.util.Map">
		UPDATE med_affi_out  
			<trim prefix="SET" suffixOverrides=",">
				<if test="bus_type_code != null and bus_type_code != ''">
					bus_type_code = #{bus_type_code,jdbcType=VARCHAR},
				</if>
				<if test="store_id != null and store_id != ''">
					store_id = #{store_id,jdbcType=INTEGER},
				</if>
				<if test="store_no != null and store_no != ''">
					store_no = #{store_no,jdbcType=INTEGER},
				</if>
				<if test="brief != null ">
					brief = #{brief,jdbcType=VARCHAR},
				</if>
				<if test="out_date != null and out_date != ''">
					out_date = #{out_date,jdbcType=DATE},
				</if>
				<if test="dept_id != null and dept_id != ''">
					dept_id = #{dept_id,jdbcType=INTEGER},
				</if>
				<if test="dept_no != null and dept_no != ''">
					dept_no = #{dept_no,jdbcType=INTEGER},
				</if>
				<if test="dept_emp != null">
					dept_emp = #{dept_emp,jdbcType=INTEGER},
				</if>
				<if test="checker != null and checker != ''">
					checker = #{checker,jdbcType=INTEGER},
				</if>
				<if test="check_date != null and check_date != ''">
					check_date = #{check_date,jdbcType=DATE},
				</if>
				<if test="confirmer != null and confirmer != ''">
					confirmer = #{confirmer,jdbcType=INTEGER},
				</if>
				<if test="confirm_date != null and confirm_date != ''">
					confirm_date = #{confirm_date,jdbcType=DATE},
				</if>
				<if test="state != null and state != ''">
					state = #{state,jdbcType=INTEGER},
				</if>
				<if test="his_flag != null">
					his_flag = #{his_flag,jdbcType=VARCHAR},
				</if>
				<if test="use_state != null">
					use_state = #{use_state,jdbcType=INTEGER},
				</if>
				<if test="is_dir != null">
					is_dir = #{is_dir,jdbcType=INTEGER},
				</if>
				<if test="proj_id != null">
					proj_id = #{proj_id,jdbcType=INTEGER},
				</if>
			</trim>
			<where>
				<if test="group_id != null and group_id != ''">
					and group_id = #{group_id,jdbcType=INTEGER} 
				</if>
				<if test="hos_id != null and hos_id != ''">
					and hos_id = #{hos_id,jdbcType=INTEGER} 	
				</if>
				<if test="copy_code != null and copy_code != ''">
					and copy_code = #{copy_code,jdbcType=VARCHAR} 
				</if>
				<if test="out_id != null and out_id != ''">
					and out_id =#{out_id,jdbcType=INTEGER} 
				</if>
				<if test="out_no != null and out_no != ''">
					and out_no =#{out_no,jdbcType=VARCHAR} 
				</if>
			</where>
	</update>
	
	<!-- 批量更新代销出库主表信息 -->
	<update id="updateBatchMedAffiOutMain" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_out
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.bus_type_code != null and item.bus_type_code != ''">
					bus_type_code = #{item.bus_type_code,jdbcType=VARCHAR}, 
				</if>
				<if test="item.store_id != null and item.store_id != ''">
					store_id = #{item.store_id,jdbcType=INTEGER}, 
				</if>
				<if test="item.store_no != null and item.store_no != ''">
					store_no = #{item.store_no,jdbcType=INTEGER}, 
				</if>
				<if test="item.brief != null ">
					brief = #{item.brief,jdbcType=VARCHAR}, 
				</if>
				<if test="item.out_date != null and item.out_date != ''">
					out_date = #{item.out_date,jdbcType=DATE}, 
				</if>
				<if test="item.dept_id != null and item.dept_id != ''">
					dept_id = #{item.dept_id,jdbcType=INTEGER}, 
				</if>
				<if test="item.dept_no != null and item.dept_no != ''">
					dept_no = #{item.dept_no,jdbcType=INTEGER}, 
				</if>
				<if test="item.dept_emp != null">
					dept_emp = #{item.dept_emp,jdbcType=INTEGER}, 
				</if>
				<if test="item.checker != null and item.checker != ''">
					checker = #{item.checker,jdbcType=INTEGER}, 
				</if>
				<if test="item.check_date != null and item.check_date != ''">
					check_date = #{item.check_date,jdbcType=DATE}, 
				</if>
				<if test="item.confirmer != null and item.confirmer != ''">
					confirmer = #{item.confirmer,jdbcType=INTEGER}, 
				</if>
				
				<if test="item.confirm_date != null and item.confirm_date != ''">
					confirm_date = #{item.confirm_date,jdbcType=DATE}, 
				</if>
				<if test="item.state != null and item.state != ''">
					state = #{item.state,jdbcType=INTEGER}, 
				</if>
				<if test="item.his_flag != null">
					his_flag = #{item.his_flag,jdbcType=VARCHAR}, 
				</if>
				<if test="item.use_state != null">
					use_state = #{item.use_state,jdbcType=INTEGER},
				</if>
				<if test="item.is_dir != null">
					is_dir = #{item.is_dir,jdbcType=INTEGER}, 
				</if>
				<if test="item.proj_id != null">
					proj_id = #{item.proj_id,jdbcType=INTEGER}, 
				</if>
			</trim>
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					and group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.out_id != null and item.out_id != ''">
					and out_id = #{item.out_id,jdbcType=INTEGER}
				</if>
				<if test="item.out_no != null and item.out_no != ''">
					and out_no = #{item.out_no,jdbcType=VARCHAR}
				</if>
			</where>
		</foreach>
	</update>
	
	
	<!-- 批量更新代销出库明细表 -->
	<update id="updateMedAffiOutDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_out_detail 
				<trim prefix="SET" suffixOverrides=",">
					<if test="item.inv_id != null and item.inv_id != ''">
						inv_id = #{item.inv_id,jdbcType=INTEGER},
					</if>
					<if test="item.inv_no != null and item.inv_no != ''">
						inv_no = #{item.inv_no,jdbcType=INTEGER},
					</if>
					<if test="item.batch_no != null and item.batch_no != ''">
						batch_no = #{item.batch_no,jdbcType=VARCHAR},
					</if>
					<if test="item.batch_sn != null and item.batch_sn != ''">
						batch_sn = #{item.batch_sn,jdbcType=VARCHAR},
					</if>
					<if test="item.price != null">
						price = #{item.price,jdbcType=FLOAT},
					</if>
					<if test="item.amount != null and item.amount != ''">
						amount = #{item.amount,jdbcType=INTEGER},
					</if>
					<if test="item.amount_money != null">
						amount_money = #{item.amount_money,jdbcType=FLOAT},
					</if>
					<if test="item.sale_price != null">
						sale_price = #{item.sale_price,jdbcType=FLOAT},
					</if>
					<if test="item.sale_money != null">
						sale_money = #{item.sale_money,jdbcType=FLOAT},
					</if>
					<if test="item.sell_price != null">
						sell_price = #{item.sell_price,jdbcType=FLOAT},
					</if>
					<if test="item.sell_money != null">
						sell_money = #{item.sell_money,jdbcType=FLOAT},
					</if>
					<if test="item.allot_price != null">
						allot_price = #{item.allot_price,jdbcType=FLOAT},
					</if>
					<if test="item.allot_money != null">
						allot_money = #{item.allot_money,jdbcType=FLOAT},
					</if>
					<if test="item.pack_code != null">
						pack_code = #{item.pack_code,jdbcType=VARCHAR},
					</if>
					<if test="item.num_exchange!= null">
						num_exchange = #{item.num_exchange,jdbcType=INTEGER},
					</if>
					<if test="item.pack_price != null">
						pack_price = #{item.pack_price,jdbcType=FLOAT},
					</if>
					<if test="item.num != null">
						num = #{item.num,jdbcType=INTEGER},
					</if>
					<if test="item.bar_code != null and item.bar_code != ''">
						bar_code = #{item.bar_code,jdbcType=VARCHAR},
					</if>
					<if test="item.inva_date != null">
						inva_date = #{item.inva_date,jdbcType=DATE},
					</if>
					<if test="item.disinfect_date != null">
						disinfect_date = #{item.disinfect_date,jdbcType=DATE},
					</if>
					<if test="item.location_id != null">
						location_id = #{item.location_id,jdbcType=INTEGER},
					</if>
					<if test="item.sup_id != null">
						sup_id = #{item.sup_id,jdbcType=INTEGER},
					</if>
					<if test="item.sup_no != null">
						sup_no = #{item.sup_no,jdbcType=INTEGER},
					</if>
					<if test="item.note != null">
						note = #{item.note,jdbcType=VARCHAR},
					</if>
				</trim>
				<where>
					<if test="item.group_id != null and item.group_id != ''">
						and group_id = #{item.group_id,jdbcType=INTEGER}
					</if>
					<if test="item.hos_id != null and item.hos_id != ''">
						and hos_id = #{item.hos_id,jdbcType=INTEGER}
					</if>
					<if test="item.copy_code != null and item.copy_code != ''">
						and copy_code = #{item.copy_code,jdbcType=VARCHAR}
					</if>
					<if test="item.out_id != null and item.out_id != ''">
						and out_id = #{item.out_id,jdbcType=INTEGER}
					</if>
					<if test="item.out_no != null and item.out_no != ''">
						and out_no = #{item.out_no,jdbcType=VARCHAR}
					</if>
					<if test="item.detail_id != null and item.detail_id != ''">
						and detail_id = #{item.detail_id,jdbcType=INTEGER}
					</if>
				</where>
		</foreach>
	</update>
	
	<!-- 删除代销出库主表信息 -->
	<delete id="deleteMedAffiOutMain" parameterType="java.util.Map">
		DELETE FROM med_affi_out
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER} 
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER} 	
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
			</if>
			<if test="out_id != null and out_id != ''">
				and out_id =#{out_id,jdbcType=INTEGER} 
			</if>
			<if test="out_no != null and out_no != ''">
				and out_no =#{out_no,jdbcType=VARCHAR} 
			</if>
		</where> 
		 
	</delete>
	
	<!-- 删除代销出库明细表信息 -->
	<delete id="deleteMedAffiOutDetail" parameterType="java.util.Map">
		DELETE FROM med_affi_out_detail 
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER} 
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER} 	
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
			</if>
			<if test="out_id != null and out_id != ''">
				and out_id =#{out_id,jdbcType=INTEGER} 
			</if>
			<if test="out_no != null and out_no != ''">
				and out_no =#{out_no,jdbcType=VARCHAR} 
			</if>
			<if test="detail_id != null and detail_id != ''">
				and detail_id =#{detail_id,jdbcType=INTEGER} 
			</if>
		</where> 
	</delete>
	
	<!-- 更新代销出库 明细表信息 -->
	<delete id="deleteMedAffiOutDetailForUpdate" parameterType="java.util.Map">
		DELETE FROM med_affi_out_detail
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and out_id = #{out_id,jdbcType=INTEGER} 
			and detail_id not in (${detail_ids})
	</delete>
	
	<!-- 批量删除 代销出库表主表信息 -->
	<delete id="deleteBatchMedAffiOutMain" parameterType="java.util.List">
		DELETE FROM med_affi_out 
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and out_id = #{item.out_id,jdbcType=INTEGER}
			
		</foreach>
	</delete>
	
	<!-- 批量删除 代销出库表明细表信息 -->
	<delete id="deleteBatchMedAffiOutDetail" parameterType="java.util.List">
		DELETE FROM med_affi_out_detail
		WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			group_id = #{item.group_id,jdbcType=INTEGER}
			and hos_id = #{item.hos_id,jdbcType=INTEGER}
			and copy_code = #{item.copy_code,jdbcType=VARCHAR}
			and out_id = #{item.out_id,jdbcType=INTEGER}
			
		</foreach>
	</delete>
	
	<!-- 删除的数据是否是当前用户制的单据  -->
	<select id="queryNotByUserId" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(0) from med_affi_out 
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and out_id  in (${out_ids})
			and maker != #{user_id,jdbcType=INTEGER} 
	
	</select>
	
	<!-- 根据主键查询 代销出库主表信息 -->
	<select id="queryByCode" resultMap="medAffiOut" parameterType="java.util.Map" >
		select mao.group_id,
		       mao.hos_id,
		       mao.copy_code,
		       mao.out_id,
		       mao.out_no,
		       to_char(mao.out_date,'yyyy-mm-dd') out_date,
		       mao.year,
		       mao.month,
		       mao.bus_type_code,
		       mbt.bus_type_name,
		       mao.store_id,
		       mao.store_no,
		       hsd.store_code,
		       hsd.store_name,
		       mao.brief,
		       mao.dept_id,
		       mao.dept_no,
		       hdd.dept_code,
		       hdd.dept_name,
		       mao.dept_emp,
		       he.emp_no emp_no,
		       he.emp_code dept_emp_code,
		       he.emp_name dept_emp_name,
		       mao.maker,
		       s1.user_name maker_name,
		       mao.out_date,
		       mao.checker,
		       s2.user_name checker_name,
		       to_char(mao.check_date,'yyyy-mm-dd') check_date,
		       mao.confirmer,
		       s3.user_name confirmer_name,
		       to_char(mao.confirm_date,'yyyy-mm-dd') check_date,
		       mao.state,
		       mao.use_state,
		       mao.his_flag,
		       mao.is_dir,
		       mao.proj_id,
		       mao.use_code
		from med_affi_out mao
		left join hos_store_dict hsd on mao.store_id = hsd.store_id 
		     and mao.hos_id = hsd.hos_id
		     and mao.group_id = hsd.group_id		     
		     <if test="show_history == 1">
				and mao.store_no = hsd.store_no
			 </if>
			 <if test="show_history == 0">
				and hsd.is_stop = 0
			 </if>
		left join med_bus_type mbt on mbt.bus_type_code = mao.bus_type_code
		     and mbt.is_stop = 0
		left join hos_dept_dict hdd on hdd.dept_no = mao.dept_no 
		     and hdd.hos_id = mao.hos_id 
		     and hdd.group_id = mao.group_id
		     <if test="show_history == 1">
				and hdd.dept_no = mao.dept_no
			 </if>
			 <if test="show_history == 0">
				and hdd.is_stop = 0
			 </if>		     
		left join hos_emp_dict he on he.emp_id = mao.dept_emp
		     and he.hos_id = mao.hos_id 
		     and he.group_id = mao.group_id
			 <if test="show_history == 0">
				and he.is_stop = 0
			 </if>	
		left join sys_user s1 on s1.user_id = mao.maker
		     and s1.hos_id = mao.hos_id 
		     and s1.group_id = mao.group_id
		     and s1.copy_code = mao.copy_code
		     and s1.is_stop = 0
		left join sys_user s2 on s2.user_id = mao.checker
		     and s2.hos_id = mao.hos_id
		     and s2.group_id = mao.group_id
		     and s2.copy_code= mao.copy_code
		     and s2.is_stop = 0
		left join sys_user s3 on s3.user_id = mao.confirmer
		     and s3.hos_id = mao.hos_id
		     and s3.group_id = mao.group_id
		     and s3.copy_code = mao.copy_code
		     and s3.is_stop = 0
		where mao.hos_id = #{hos_id,jdbcType=INTEGER} 
		      and mao.group_id = #{group_id,jdbcType=INTEGER} 
		      and mao.copy_code = #{copy_code,jdbcType=VARCHAR} 
		      and mao.out_id = #{out_id,jdbcType=INTEGER} 
			  <if test="store_id != null and store_id != ''">
				and  mao.store_id = #{store_id,jdbcType=INTEGER}
			  </if>	
			  <if test="bus_type_code != null and bus_type_code != ''">
				and  mao.bus_type_code = #{bus_type_code,jdbcType=INTEGER}
			  </if>
	</select>
	
	<!-- 根据主键查询明细表信息 -->
	<select id="queryByCodeDetail" resultMap="medAffiOut" parameterType="java.util.Map" >
		select 
		  mad.group_id,
		  mad.hos_id,
		  mad.copy_code,
		  mad.out_id,
		  mad.out_no,
		  mad.detail_id,
		  mad.inv_no,
		  mad.inv_id,
		  mid.inv_code,
		  mid.inv_name,
		  mid.inv_model,
		  hu.unit_name,
		  mad.batch_no,--批号
		  mad.batch_sn,--批次
		  mah.cur_amount left_amount,--当前库存
		  mad.amount,
		  mad.price,
		  mad.amount_money,
		  to_char(mad.inva_date,'yyyy-mm-dd') inva_date,
		  to_char(mad.disinfect_date,'yyyy-mm-dd') disinfect_date,
		  mad.bar_code,
		  mad.sale_price,
		  mad.sale_money,
		  mad.sell_price,
		  mad.sell_money,
		  mad.allot_price,
		  mad.allot_money,
		  mad.location_id,
		  mld.location_code,
		  mld.location_name,
		  mad.note,
		  mad.sup_id,
		  mad.sup_no,
		  hsd.sup_name
		from med_affi_out_detail mad
		left join med_affi_out mao on mad.out_id = mao.out_id
		     and mao.group_id = mad.group_id
		     and mao.hos_id = mad.hos_id
		left join med_inv_dict mid on mad.inv_no = mid.inv_no 
		     and mad.inv_id = mid.inv_id
		     and mad.group_id = mid.group_id
		     and mad.hos_id = mid.hos_id
		     and mad.copy_code = mid.copy_code
		    <!--  and mid.is_stop = 0
		     and mid.use_state = 1  -->
		left join hos_sup_dict hsd on mad.group_id = hsd.group_id
			 and mad.hos_id = hsd.hos_id
			 and mad.sup_id = hsd.sup_id
			 and mad.sup_no = hsd.sup_no
		left join hos_unit hu on hu.unit_code = mid.unit_code
		     and hu.group_id = mid.group_id
		     and hu.hos_id = mid.hos_id
		     and hu.is_stop = 0
		left join med_affi_inv_hold mah on mah.group_id = mao.group_id
		     and mah.hos_id = mao.hos_id
		     and mah.copy_code = mao.copy_code
		     and mah.store_id = mao.store_id
		     and mah.inv_id = mad.inv_id
		     --and mah.location_id = mad.location_id
		left join med_location_dict mld on mld.location_id = mad.location_id
		     and mld.group_id = mad.group_id
		     and mld.hos_id = mad.hos_id
		     and mld.is_stop = 0
		where mad.group_id = #{group_id,jdbcType=INTEGER} 
		      and mad.hos_id = #{hos_id,jdbcType=INTEGER} 
		      and mad.copy_code = #{copy_code,jdbcType=VARCHAR} 
		      and mad.out_id = #{out_id,jdbcType=INTEGER} 
		order by mad.out_id,mad.detail_id
	</select>
	
	<!-- 获取个体码 -->
	<select id="queryMedPerBar" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT max_no FROM MED_NO_OTHER
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND type_code = #{type_code,jdbcType=INTEGER}
	</select>
	
	<!-- 插入个体码 -->
	<insert id="insertMedPerBar" parameterType="java.util.Map" >
		INSERT INTO MED_NO_OTHER(group_id, hos_id, type_code, max_no)
		VALUES(
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{type_code,jdbcType=INTEGER},
			#{max_no,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 修改个体码 -->
	<update id="updateMedPerBar" parameterType="java.util.Map" >
		UPDATE MED_NO_OTHER
		SET max_no = #{max_no,jdbcType=VARCHAR}
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND type_code = #{type_code,jdbcType=INTEGER}
	</update>
	
	<!-- 写出入库关系表 -->
	<insert id="addMedAffiTranRela" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			INSERT INTO med_affi_tran_rela (
				group_id, 
				hos_id, 
				copy_code, 
				out_id, 
				in_id
			)values( 
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.out_id,jdbcType=INTEGER},
				#{item.in_id,jdbcType=INTEGER}
			)
		</foreach>
	</insert>
	
	<!-- 删除对应关系表 -->
	<delete id="deleteMedAffiTranRela" parameterType="java.util.Map" >
		delete from med_affi_tran_rela
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and out_id = #{out_id,jdbcType=INTEGER}
	</delete>
	
	<!-- 批量删除对应关系表  -->
	<delete id="deleteBatchMedAffiTranRela" parameterType="java.util.Map">
		delete from med_affi_tran_rela
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and out_id in (${out_ids})
	</delete>
	
	<!-- 根据ID查询明细信息 -->
	<select id="queryAffiOutDetailById" resultMap="medAffiOut" parameterType="java.util.Map">
		WITH  tmp_imme AS(
			SELECT inv_id, batch_sn, batch_no, bar_code, SUM(amount) AS amount
			FROM (
				SELECT inv_id, batch_sn, batch_no, bar_code, SUM(nvl(amount, 0)) AS amount
				FROM med_affi_out mom
				LEFT JOIN med_affi_out_detail medod 
					ON mom.group_id = medod.group_id
					AND mom.hos_id = medod.hos_id
					AND mom.copy_code = medod.copy_code
					AND mom.out_id = medod.out_id 
				WHERE medod.group_id = #{group_id,jdbcType=INTEGER}
					AND medod.hos_id = #{hos_id,jdbcType=INTEGER}
					AND medod.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mom.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[
					AND mom.out_id <> #{out_id,jdbcType=INTEGER} --出库单加载使用
					AND mom.state < 3
					AND mom.bus_type_code <> '29'
					]]>
				GROUP BY inv_id, batch_sn, batch_no, bar_code
				UNION ALL
				SELECT inv_id AS inv_id, batch_sn AS batch_sn, batch_no AS batch_no, bar_code AS bar_code, -1 * SUM(nvl(amount, 0)) AS amount
				FROM med_affi_in mim
				LEFT JOIN med_affi_in_detail medid 
					ON mim.group_id = medid.group_id
					AND mim.hos_id = medid.hos_id
					AND mim.copy_code = medid.copy_code
					AND mim.in_id = medid.in_id 
				WHERE medid.group_id = #{group_id,jdbcType=INTEGER}
					AND medid.hos_id = #{hos_id,jdbcType=INTEGER}
					AND medid.copy_code = #{copy_code,jdbcType=VARCHAR}
					AND mim.store_id = #{store_id,jdbcType=INTEGER}
					<![CDATA[
					AND mim.state < 3
					AND mim.bus_type_code = '30'
					]]>
				GROUP BY inv_id, batch_sn, batch_no, bar_code
			)
			GROUP BY inv_id, batch_sn, batch_no, bar_code
			ORDER BY inv_id ASC
		), 
		tmp_detail AS(
			SELECT modet.group_id, modet.hos_id, modet.copy_code, modet.out_id, modet.detail_id, 
				modet.inv_id, modet.inv_no, modet.batch_no, modet.bar_code, modet.batch_sn, modet.inva_date, 
				modet.disinfect_date, modet.location_id, modet.note, modet.price, modet.amount, modet.amount_money, 
				modet.sale_price, modet.sale_money, modet.sell_price, modet.sell_money, modet.allot_price, modet.allot_money, 
				mfb.left_amount AS cur_amount, mfb.left_amount - nvl(imme.amount, 0) AS imme_amount
				,modet.sup_id,modet.sup_no,hsd.sup_code,hsd.sup_name
			FROM med_affi_out_detail modet
		    left join hos_sup_dict hsd on modet.group_id = hsd.group_id
		    	and modet.hos_id = hsd.hos_id
		    	and modet.sup_id = hsd.sup_id
		    	and modet.sup_no = hsd.sup_no
			LEFT JOIN med_affi_fifo mfb 
				ON modet.group_id = mfb.group_id
				AND modet.hos_id = mfb.hos_id
				AND modet.copy_code = mfb.copy_code
				AND modet.inv_id = mfb.inv_id
				AND modet.batch_sn = mfb.batch_sn
				AND modet.batch_no = mfb.batch_no
				AND modet.bar_code = mfb.bar_code
				AND mfb.store_id = #{store_id,jdbcType=INTEGER}
			LEFT JOIN tmp_imme imme 
				ON modet.inv_id = imme.inv_id
				AND modet.batch_sn = imme.batch_sn
				AND modet.batch_no = imme.batch_no
				AND modet.bar_code = imme.bar_code
			WHERE modet.group_id = #{group_id,jdbcType=INTEGER}
				AND modet.hos_id = #{hos_id,jdbcType=INTEGER}
				AND modet.copy_code = #{copy_code,jdbcType=VARCHAR}
				AND modet.out_id = #{out_id,jdbcType=INTEGER}
			ORDER BY modet.detail_id ASC
		),
		tmp_main AS(
			SELECT main.group_id, main.hos_id, main.copy_code, main.out_id, main.inv_id, main.inv_no, 
				main.batch_no, main.bar_code, main.inva_date, main.disinfect_date, main.location_id, 
				main.note, main.price, main.amount, main.amount_money, main.sale_price, main.sale_money, 
				main.sell_price, main.sell_money, main.allot_price, main.allot_money, 
				SUM(mfb.left_amount) AS cur_amount, SUM(mfb.left_amount) - main.out_amount AS imme_amount
			FROM (
	      SELECT detail.*, nvl(imme.amount, 0) AS out_amount
	      FROM (
					SELECT group_id, hos_id, copy_code, out_id, inv_id, inv_no, batch_no, bar_code, inva_date, 
						disinfect_date, location_id, note, price, SUM(amount) AS amount, SUM(amount_money) AS amount_money, 
						sale_price, SUM(sale_money) AS sale_money, sell_price, SUM(sell_money) AS sell_money, 
						allot_price, SUM(allot_money) AS allot_money 
					FROM tmp_detail
					GROUP BY group_id, hos_id, copy_code, out_id, inv_id, inv_no, batch_no, bar_code, inva_date, 
						disinfect_date, location_id, note, price, sell_price, sale_price, allot_price
				) detail
				LEFT JOIN (
					SELECT inv_id, batch_no, bar_code, SUM(amount) AS amount
					FROM tmp_imme
					GROUP BY inv_id, batch_no, bar_code
				) imme 
					ON detail.inv_id = imme.inv_id
					AND detail.batch_no = imme.batch_no
					AND detail.bar_code = imme.bar_code 
			) main
			LEFT JOIN med_affi_fifo mfb 
				ON main.group_id = mfb.group_id
				AND main.hos_id = mfb.hos_id
				AND main.copy_code = mfb.copy_code
				AND main.inv_id = mfb.inv_id
				AND main.batch_no = mfb.batch_no
				AND main.bar_code = mfb.bar_code
				AND mfb.store_id = #{store_id,jdbcType=INTEGER}
			GROUP BY main.group_id, main.hos_id, main.copy_code, main.out_id, main.inv_id, main.inv_no, 
				main.batch_no, main.bar_code, main.inva_date, main.disinfect_date, main.location_id, 
				main.note, main.price, main.amount, main.amount_money, main.sale_price, main.sale_money, 
				main.sell_price, main.sell_money, main.allot_price, main.allot_money, main.out_amount
		)
		SELECT main.group_id, main.hos_id, main.copy_code, main.out_id, main.inv_id, main.inv_no, main.batch_no, 
			main.price, main.cur_amount, main.imme_amount, main.amount, main.amount_money, main.sale_price, 
			main.sale_money, main.sell_price, main.sell_money, main.allot_price, main.allot_money, main.bar_code, 
			main.inva_date, main.disinfect_date, main.location_id, main.note, mid.inv_code, mid.inv_name, mid.inv_model, 
			mid.unit_code, hu.unit_name, mld.location_code, mld.location_name, main.amount as sum_amount,
			detail.sup_id,detail.sup_no,detail.sup_name, 
			'[' || to_char(WM_CONCAT('{"detail_id":' || detail.detail_id || ',"inv_id":' || detail.inv_id 
			|| ',"inv_code":"' || to_char(mid.inv_code) || '","inv_name":"' || to_char(mid.inv_name) 
			|| '","batch_sn":' || detail.batch_sn || ',"cur_amount":' || detail.cur_amount 
			|| ',"imme_amount":' || detail.imme_amount || ',"amount":' || detail.amount 
			|| ',"price":' || detail.price || ',"amount_money":' || detail.amount_money 
			|| ',"sale_price":' || detail.sale_price || ',"sale_money":' || detail.sale_money 
			|| ',"sell_price":' || detail.sell_price || ',"sell_money":' || detail.sell_money 
			|| '}')) || ']' AS inv_detail_data
		FROM tmp_main main
		LEFT JOIN med_inv_dict mid 
			ON main.group_id = mid.group_id
			AND main.hos_id = mid.hos_id
			AND main.copy_code = mid.copy_code
			AND main.inv_id = mid.inv_id
			AND main.inv_no = mid.inv_no
			
		LEFT JOIN hos_unit hu 
			ON mid.group_id = hu.group_id
			AND mid.hos_id = hu.hos_id
			AND mid.unit_code = hu.unit_code 
		LEFT JOIN med_location_dict mld 
			ON main.group_id = mld.group_id
			AND main.hos_id = mld.hos_id
			AND main.copy_code = mld.copy_code
			AND main.location_id = mld.location_id
			AND mld.is_stop = 0 
		LEFT JOIN tmp_detail detail
			ON main.inv_id = detail.inv_id
			AND main.batch_no = detail.batch_no
			AND main.bar_code = detail.bar_code 
		GROUP BY main.group_id, main.hos_id, main.copy_code, main.out_id, main.inv_id, main.inv_no, main.batch_no, 
			main.price, main.cur_amount, main.imme_amount, main.amount, main.amount_money, main.sale_price, 
			main.sale_money, main.sell_price, main.sell_money, main.allot_price, main.allot_money, main.bar_code, 
			main.inva_date, main.disinfect_date, main.location_id, main.note, mid.inv_code, mid.inv_name, mid.inv_model, 
			mid.unit_code, hu.unit_name, mld.location_code, mld.location_name, main.amount,detail.sup_id,detail.sup_no,detail.sup_name
		ORDER BY inv_detail_data
	</select>
	
	<!-- 确认出库 -->
	<update id="updateBatchConfirm" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_out set 
				year = #{item.year,jdbcType=VARCHAR},
				month = #{item.month,jdbcType=VARCHAR},
				confirm_date = #{item.confirm_date,jdbcType=DATE},
				confirmer = #{item.confirmer,jdbcType=INTEGER},
				state = #{item.state,jdbcType=INTEGER}
			WHERE hos_id = #{item.hos_id,jdbcType=INTEGER}   
				AND group_id = #{item.group_id,jdbcType=INTEGER} 
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}  
				AND out_id = #{item.out_id,jdbcType=INTEGER}            
		</foreach>
	</update>
</mapper>

