<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.info.basic.MedStoreInvMapper">
	<resultMap id="map" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="store_id" column="store_id" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="fac_id" column="fac_id" />
		<result property="fac_name" column="fac_name" />
		<result property="sup_id" column="sup_id" />
		<result property="unit_name" column="unit_name" />
		<result property="unit_code" column="unit_code" />
		<result property="sup_name" column="sup_name" />
		<result property="low_limit" column="low_limit" />
		<result property="stock_secu" column="stock_secu" />
		<result property="high_limit" column="high_limit" />
		<result property="count" column="count" />
		<result property="med_type_name" column="med_type_name" />
		<result property="med_type_code" column="med_type_code" />
		<result property="med_type_id" column="med_type_id" />
		<result property="period_num" column="period_num" />
		<result property="high_limit" column=" high_limit " />
		<result property="secu_limit" column="secu_limit" />
		<result property="low_limit" column="low_limit" />
		<result property="package_code" column="package_code" />
		<result property="num_exchange" column="num_exchange" />
		<result property="pack_amount" column="pack_amount" />
		<result property="warn_amount" column="warn_amount" />
		<result property="period" column="period" />
		<result property="order_amount" column="order_amount" />
		<result property="order_p_amount" column="order_p_amount" />
		<result property="pack_code" column="pack_code" />
		<result property="pack_name" column="pack_name" /> 
		<result property="is_apply" column="is_apply"/>
		<result property="is_set" column="is_set"/>
		<result property="user_name" column="user_name"/><!-- 操作人 -->
		<result property="oper_date" column="oper_date"/><!-- 操作时间 --> 
		<result property="location_id" column="location_id"/>
		<result property="location_code" column="location_code"/>
		<result property="location_name" column="location_name"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
	</resultMap>

	<insert id="addMedStoreInv" useGeneratedKeys="true">

		INSERT INTO
		med_store_inv (
		group_id ,
		hos_id ,
		copy_code ,
		store_id ,
		inv_id

		) values(
		#{group_id,jdbcType=INTEGER} ,
		#{hos_id,jdbcType=INTEGER} ,
		#{copy_code,jdbcType=VARCHAR} ,
		#{store_id,jdbcType=INTEGER} ,
		#{inv_id,jdbcType=INTEGER}
		)
	</insert>
	<!-- 用来添加货位  表med_store_inv -->
	<insert id="addMedLocationInv" useGeneratedKeys="false">
        UPDATE MED_STORE_INV SET location_id = #{location_id}  
        where 
		group_id =#{group_id,jdbcType=INTEGER} 
		and hos_id =#{hos_id,jdbcType=INTEGER} 
		and copy_code =#{copy_code,jdbcType=VARCHAR} 
		and inv_id =#{inv_id,jdbcType=INTEGER}
		and store_id =#{store_id,jdbcType=INTEGER}
		 
	</insert>
	

	<insert id="addBatchMedStoreInv" parameterType="java.util.List">
		INSERT INTO med_store_inv (
			group_id , 
			hos_id , 
			copy_code , 
			store_id , 
			inv_id, 
			is_apply, 
			oper, 
			oper_date
		)
		<foreach collection="list" item="item" index="index" separator="union all">
			SELECT 
				#{item.group_id,jdbcType=INTEGER} , 
				#{item.hos_id,jdbcType=INTEGER} , 
				#{item.copy_code,jdbcType=VARCHAR} , 
				#{item.store_id,jdbcType=INTEGER} , 
				#{item.inv_id,jdbcType=INTEGER}, 
				#{item.is_apply,jdbcType=INTEGER}, 
				#{item.oper,jdbcType=INTEGER}, 
				#{item.oper_date,jdbcType=DATE} 
			FROM dual
		</foreach>
	</insert>
	<!-- 用于批量修改货位  表 MED_STORE_INV -->
	<insert id="addBatchMedLocationInv" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";"> 
			
		UPDATE  MED_STORE_INV 

		 <trim prefix="SET" suffixOverrides=",">
      
      		<if test="item.location_id != null and item.location_id != ''"> 
      		location_id =  #{item.location_id}
      		</if>
      	</trim>
				where   
				group_id =#{item.group_id,jdbcType=INTEGER}  
				and hos_id = #{item.hos_id,jdbcType=INTEGER}  
				and copy_code =#{item.copy_code,jdbcType=VARCHAR}  
				and inv_id =#{item.inv_id,jdbcType=INTEGER}   
				and store_id =#{item.store_id,jdbcType=INTEGER}
			 
		</foreach>
	</insert>
	
	
	<update id="updateMedStoreInv" parameterType="java.util.List">

		UPDATE med_store_inv
		<trim prefix="SET" suffixOverrides=",">
			<if test="period != null and period != ''">
				period = #{period,jdbcType=FLOAT},
			</if>
			<if test="period_num != null and period_num != ''">
				period_num = #{period_num,jdbcType=FLOAT},
			</if>
			<if test="high_limit != null and high_limit != ''">
				high_limit = #{high_limit,jdbcType=FLOAT},
			</if>
			<if test="secu_limit != null and secu_limit != ''">
				secu_limit = #{secu_limit,jdbcType=FLOAT},
			</if>
			<if test="low_limit != null and low_limit != ''">
				low_limit = #{low_limit,jdbcType=FLOAT},
			</if>
			<if test="package_code != null and package_code != ''">
				package_code = #{package_code,jdbcType=FLOAT},
			</if>
			<if test="num_exchange != null and num_exchange != ''">
				num_exchange = #{item.num_exchange,jdbcType=FLOAT},
			</if>
			<if test="pack_amount != null and pack_amount != ''">
				pack_amount = #{item.pack_amount,jdbcType=FLOAT},
			</if>
			<if test="warn_amount != null and warn_amount != ''">
				warn_amount = #{warn_amount,jdbcType=FLOAT},
			</if>
			<if test="oper != null and oper != ''">
				oper = #{oper,jdbcType=INTEGER},
			</if>
			<if test="oper_date != null and oper_date != ''">
				oper_date = #{oper_date,jdbcType=DATE},
			</if>
		</trim>
		<where>
			<if test="group_id != null and group_id != ''">
				group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
				and store_id = #{store_id,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != ''">
				and inv_id = #{inv_id,jdbcType=VARCHAR}
			</if>

		</where>

	</update>
	
	<!-- 用于修改货位 -->
	<update id="updateMedLocationInv" parameterType="java.util.List">

    UPDATE med_store_inv 
    <trim prefix="SET" suffixOverrides=",">
      
      <if test="location_id != null and location_id != ''">
        location_id = #{location_id,jdbcType=INTEGER},
      </if>
    </trim>
    <where>
      <if test="group_id != null and group_id != ''">
        group_id = #{group_id,jdbcType=INTEGER}
      </if>
      <if test="hos_id != null and hos_id != ''">
        and hos_id = #{hos_id,jdbcType=INTEGER}
      </if>
      <if test="copy_code != null and copy_code != ''">
        and copy_code = #{copy_code,jdbcType=VARCHAR}
      </if>
      <if test="inv_id != null and inv_id != ''">
        and inv_id = #{inv_id,jdbcType=VARCHAR}
      </if>
      <if test="store_id != null and store_id != ''">
        and store_id = #{store_id,jdbcType=VARCHAR}
      </if>
        
    </where>
  </update>
	
	<!-- 批量更新 -->
	<update id="updateBatchMedStoreInv" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE med_store_inv
			<trim prefix="SET" suffixOverrides=",">

				<if test="item.period != null and item.period != ''">
					period = #{item.period,jdbcType=FLOAT},
				</if>
				<if test="item.period_num != null and item.period_num != ''">
					period_num = #{item.period_num,jdbcType=FLOAT},
				</if>
				<if test="item.high_limit != null and item.high_limit != ''">
					high_limit = #{item.high_limit,jdbcType=FLOAT},
				</if>
				<if test="item.secu_limit != null and item.secu_limit != ''">
					secu_limit = #{item.secu_limit,jdbcType=FLOAT},
				</if>
				<if test="item.low_limit != null and item.low_limit != ''">
					low_limit = #{item.low_limit,jdbcType=FLOAT},
				</if>
				<if test="item.package_code != null and item.package_code != ''">
					package_code = #{item.package_code,jdbcType=FLOAT},
				</if>
				<if test="item.num_exchange != null and item.num_exchange != ''">
					num_exchange = #{item.num_exchange,jdbcType=FLOAT},
				</if>
				<if test="item.pack_amount != null and item.pack_amount != ''">
					pack_amount = #{item.pack_amount,jdbcType=FLOAT},
				</if>
				<if test="item.warn_amount != null and item.warn_amount != ''">
					warn_amount = #{item.warn_amount,jdbcType=FLOAT},
				</if>
				<if test="item.oper != null and item.oper != ''">
					oper = #{item.oper,jdbcType=INTEGER},
				</if>
				<if test="item.oper_date != null and item.oper_date != ''">
					oper_date = #{item.oper_date,jdbcType=DATE},
				</if>
			</trim>
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.store_id != null and item.store_id != ''">
					and store_id = #{item.store_id,jdbcType=VARCHAR}
				</if>
				<if test="item.inv_id != null and item.inv_id != ''">
					and inv_id = #{item.inv_id,jdbcType=VARCHAR}
				</if>

			</where>
		</foreach>
	</update>

	<delete id="deleteMedStoreInv" parameterType="java.util.Map">

		DELETE FROM
		med_store_inv WHERE
		group_id = #{group_id,jdbcType=INTEGER} and
		hos_id =
		#{hos_id,jdbcType=INTEGER} and
		copy_code =
		#{copy_code,jdbcType=VARCHAR} and
		store_id =
		#{store_id,jdbcType=INTEGER} and
		inv_id = #{inv_id,jdbcType=INTEGER}

	</delete>
	
	
	
	<delete id="deleteStoreMedStoreInv" parameterType="java.util.Map">

		DELETE FROM
		med_store_inv WHERE
		group_id = #{group_id,jdbcType=INTEGER} and
		hos_id =
		#{hos_id,jdbcType=INTEGER} and
		copy_code =
		#{copy_code,jdbcType=VARCHAR} and
		store_id =
		#{store_id,jdbcType=INTEGER} 

	</delete>
	
	<insert id="addStoreMedStoreInv" parameterType="java.util.Map">

		INSERT INTO
		med_store_inv (
		group_id ,
		hos_id ,
		copy_code ,
		store_id ,
		inv_id,
		oper,
		oper_date

		)
		select group_id,hos_id,copy_code,#{store_id} store_id ,inv_id, #{oper}, #{oper_date}
         from med_inv 
		<where>
		    use_state=1
		    <if test="group_id != null and group_id != ''">
			and	group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
		</where>
		 
	</insert>
	
	<delete id="deleteBatchMedStoreInv" parameterType="java.util.List">
		DELETE FROM med_store_inv
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and store_id = #{item.store_id,jdbcType=INTEGER}
				<if test=" item.inv_id != null and item.inv_id != ''">
					and inv_id = #{item.inv_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>

	</delete>
	
	<delete id="deleteBatchMedLocationInv" parameterType="java.util.List">
		DELETE FROM med_location_inv
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
				and location_id = #{item.location_id,jdbcType=INTEGER}
			</foreach>
		</where>

	</delete>
	
	<!-- 材料库存安全设置查询 -->
	<select id="querySafeMedStoreInv" parameterType="java.util.Map" resultMap="map">
		SELECT distinct
			msi.group_id,
			msi.hos_id,
			msi.copy_code,
			msi.store_id,
			msi.inv_id,
			mid.inv_code,
			mid.inv_name,
			mid.inv_model,
			hu.unit_name,
			hfd.fac_name,
			msi.package_code pack_code,	
			nvl(msi.num_exchange,0) num_exchange,
			nvl(msi.period_num,0) period_num,	
			nvl(msi.period,0) period,
			nvl(msi.low_limit,0) low_limit,
			nvl(msi.secu_limit,0) secu_limit,
			nvl(msi.high_limit,0) high_limit,
			nvl(msi.pack_amount,0) pack_amount,
			nvl(msi.warn_amount,0) warn_amount,
			hp.pack_name
		FROM med_store_inv msi
		left join MED_INV_DICT mid on msi.group_id=mid.group_id
			and msi.hos_id=mid.hos_id
			and msi.copy_code=mid.copy_code
			and msi.inv_id=mid.inv_id
			and mid.use_state = 1
		left join HOS_FAC_DICT hfd on msi.group_id=hfd.group_id
			and msi.hos_id=hfd.hos_id
			and mid.fac_id=hfd.fac_id
			and hfd.is_stop = 0
		left join hos_unit hu on msi.group_id=hu.group_id
			and msi.hos_id=hu.hos_id
			and mid.unit_code=hu.unit_code
		left join hos_package hp on msi.group_id=hp.group_id
			and msi.hos_id=hp.hos_id
			and msi.package_code=hp.pack_code
			and hp.is_stop = 0
		<where>
			<if test="group_id != null and group_id != ''">
				msi.group_id= #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and msi.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and msi.copy_code= #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_code != null and inv_code != ''">
					and (mid.inv_code like #{inv_code}||'%'
					 or  mid.inv_name like '%'||#{inv_code}||'%'
				     or upper(mid.spell_code) like '%'||#{inv_code}||'%'
				     or upper(mid.wbx_code) like '%'||#{inv_code}||'%'
				     or lower(mid.spell_code) like '%'||#{inv_code}||'%'
				     or lower(mid.wbx_code) like '%'||#{inv_code}||'%')
			</if>
			<if test="store_id != null and store_id != ''">
				AND msi.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND mid.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				
				and mid.med_type_id in
			(
			 select med_type_id from MED_TYPE
			 where group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
	                  start with  med_type_id in (#{med_type_id,jdbcType=INTEGER})
	                  connect by prior med_type_code = super_code
	           
			)
			</if>
			<if test="is_check == 2 ">
				and msi.secu_limit &gt; 0 
			</if>
			<if test="is_check == 3 ">
				 AND (msi.secu_limit = 0 or msi.secu_limit is null)
			</if>
			<if test="inv_model != null and inv_model != ''">
					and (mid.inv_model like #{inv_model}||'%'
				     or upper(mid.spell_code) like '%'||#{inv_model}||'%'
				     or upper(mid.wbx_code) like '%'||#{inv_model}||'%'
				     or lower(mid.spell_code) like '%'||#{inv_model}||'%'
				     or lower(mid.wbx_code) like '%'||#{inv_model}||'%')
			</if>
		</where>
		order by mid.inv_code asc
	</select>
	<select id="queryMedStoreInvByCode" resultType="com.chd.hrp.med.entity.MedStoreInv" parameterType="java.util.Map">

	SELECT
    ms.group_id,
    ms.hos_id,
    ms.copy_code,
    ms.store_id,
    ms.inv_id,
    ms.low_limit,
    ms.high_limit,
     nvl(ms.location_id,0) as location_id,
    md.location_code,
    md.location_name
    FROM
    med_store_inv ms  
    left join med_location_dict md on
     ms.group_id=md.group_id and ms.hos_id=md.hos_id 
    and ms.copy_code=md.copy_code and ms.store_id=md.store_id
    and ms.location_id=md.location_id and md.is_stop=0
		WHERE
		ms.group_id =#{group_id,jdbcType=INTEGER} and
		ms.hos_id = #{hos_id,jdbcType=INTEGER} and
		ms.copy_code = #{copy_code,jdbcType=VARCHAR} and
		ms.store_id =#{store_id,jdbcType=INTEGER} and
		ms.inv_id = #{inv_id,jdbcType=INTEGER}
		<if test="location_id != null and location_id != '' ">
		and ms.location_id = #{location_id,jdbcType=INTEGER}
		</if>
		  
	</select> 
	
	<select id="queryMedStoreInvByUniqueness" resultType="com.chd.hrp.med.entity.MedStoreInv"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		copy_code,
		store_id,
		inv_id,
		low_limit,
		stock_secu,
		high_limit,
		FROM
		med_store_inv
		<where>
			<if test="group_id != null and group_id != ''">
				group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
				AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="low_limit != null and low_limit != ''">
				AND low_limit = #{low_limit,jdbcType=INTEGER}
			</if>
			<if test="stock_secu != null and stock_secu != ''">
				AND stock_secu = #{stock_secu,jdbcType=INTEGER}
			</if>
			<if test="high_limit != null and high_limit != ''">
				AND high_limit = #{high_limit,jdbcType=INTEGER}
			</if>

		</where>
		order by group_id asc
	</select>

	<select id="queryMedStoreInvNew" parameterType="java.util.Map" resultMap="map">
		with inv_tmp as(
			select a.group_id,a.hos_id,a.copy_code,a.inv_id,b.inv_code,b.inv_name,b.med_type_id,c.med_type_code,c.med_type_name,
				b.inv_model,b.fac_id,d.fac_name,a.store_id,nvl(a.is_apply, 0) is_apply,a.oper,a.oper_date
				,a.location_id,mld.location_code,mld.location_name
	 		from med_store_inv a
			left join med_inv_dict b on  a.group_id=b.group_id
				and a.hos_id=b.hos_id and a.copy_code=b.copy_code and a.inv_id=b.inv_id and b.use_state=1 and b.is_stop=0
			left join med_type_dict c on a.group_id=c.group_id
				and a.hos_id=c.hos_id and a.copy_code=c.copy_code and b.med_type_id=c.med_type_id and c.is_stop=0  
			 LEFT JOIN hos_fac_dict d ON a.group_id = d.group_id
       		 AND a.hos_id = d.hos_id   AND b.fac_id = d.fac_id
       			 AND d.is_stop = 0  
       		<!-- 货位通过med_store_inv 表来进行维护 -->
       		 left join med_location_dict mld on a.group_id=mld.group_id
	        and a.hos_id=mld.hos_id and a.copy_code=mld.copy_code
	        and a.location_id=mld.location_id and mld.is_stop=0	 
       			 <!-- 货位通过med_location_inv表来进行维护 -->
		 <!-- left join med_location_inv mli on a.group_id=mli.group_id
         and a.hos_id=mli.hos_id and a.copy_code=mli.copy_code
         and mli.inv_id=a.inv_id
        left join med_location_dict mld on mli.group_id=mld.group_id
        and mli.hos_id=mld.hos_id and mli.copy_code=mld.copy_code
        and mli.location_id=mld.location_id and mld.is_stop=0 -->
				<!-- and a.hos_id=d.hos_id
				and b.fac_id=d.fac_id
				and d.is_stop=0 -->
			<where>
				
					a.group_id = #{group_id,jdbcType=INTEGER}
				
					AND a.hos_id = #{hos_id,jdbcType=INTEGER}
				
					AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
				
				<if test="inv_id != null and inv_id != ''">
					AND a.inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					AND a.store_id = #{store_id,jdbcType=INTEGER}
				</if>

                <if test="inv_code != null and inv_code != ''">
						and (b.inv_code like '%${inv_code}%'
						 or b.inv_name like '%${inv_code}%'
					     or b.spell_code like upper('%${inv_code}%')
					     or b.wbx_code like upper('%${inv_code}%')
					     or b.spell_code like lower('%${inv_code}%')
					     or b.wbx_code like lower('%${inv_code}%')
					     )
				</if>
				
				<if test="is_app != null and is_app != '' ">
					AND a.is_apply = #{is_app}
				</if>
				
				<if test="med_type_id != null and med_type_id != ''">
					and b.med_type_id in
					(
					 select med_type_id 
					 from MED_TYPE
					 where group_id = #{group_id,jdbcType=INTEGER}   
						and hos_id = #{hos_id,jdbcType=INTEGER} 
						and copy_code = #{copy_code,jdbcType=VARCHAR} 
			            start with  med_type_id in (#{med_type_id,jdbcType=INTEGER})
			            connect by prior med_type_code = super_code
					)
				</if>
				<if test="fac_id != null and fac_id != ''">
				AND b.fac_id = #{fac_id,jdbcType=INTEGER}
			</if>
			<if test="inv_model != null and inv_model != ''">
				AND b.inv_model like '%${inv_model}%'  
			</if>
			</where>
			)
			<if test="is_apply == 1 ">
			,inv_store as(
			    select A.group_id,A.hos_id,A.copy_code,A.inv_id ,A.inv_code,A.inv_name,A.inv_model,A.med_type_id,A.med_type_name,A.med_type_code,
			           A.fac_id,A.fac_name,A.store_id,A.is_apply,A.oper,A.oper_date
			           ,A.location_id,A.location_code,A.location_name
			    from inv_tmp A
			    join(
			      SELECT a.group_id, a.hos_id, a.copy_code, a.inv_id, b.inv_code , a.store_id, a.is_apply
			      FROM med_store_inv a
			      LEFT JOIN med_inv b ON a.group_id = b.group_id
			           and a.hos_id = b.hos_id and a.copy_code = b.copy_code and a.inv_id = b.inv_id and b.use_state = 1 
			      <where>
			      	<if test="group_id != null and group_id != ''">
			      		a.group_id = #{group_id,jdbcType=INTEGER}
			      	</if>
			      	<if test="hos_id != null and hos_id != ''">
						and a.hos_id = #{hos_id,jdbcType=INTEGER}
					</if>
					<if test="copy_code != null and copy_code != ''">
						and a.copy_code = #{copy_code,jdbcType=VARCHAR}
					</if>
					<if test="store_id != null and store_id != ''">
						and a.store_id != #{store_id,jdbcType=INTEGER} 
					</if>
					and a.is_apply = 1
			      </where>
			    ) B on A.group_id =B.group_id and A.hos_id =B.hos_id and A.copy_code=B.copy_code and A.inv_id = B.inv_id 
			)
			</if>
			
			<if test="is_apply != null and is_apply != ''">
				<if test="is_apply == 1 ">
					select inv_tmp.group_id,inv_tmp.hos_id,inv_tmp.copy_code,inv_tmp.inv_id,inv_tmp.inv_code,
					inv_tmp.inv_name,inv_tmp.med_type_id,inv_tmp.med_type_name,inv_tmp.inv_model,
					inv_tmp.fac_id,inv_tmp.fac_name,inv_tmp.store_id,inv_tmp.is_apply,
					case when inv_tmp.is_apply=1 then 1 else 0 end is_set,su.user_name,inv_tmp.oper_date
					,inv_tmp.location_id,inv_tmp.location_code,inv_tmp.location_name
					from inv_tmp inv_tmp
					LEFT JOIN sys_user su
        			ON
						inv_tmp.group_id = su.group_id and inv_tmp.hos_id = su.hos_id
			            and inv_tmp.copy_code = su.copy_code and inv_tmp.oper = su.user_id
			            and su.is_stop = 0 
					where  is_apply = 1
					union 
					select temp.group_id,temp.hos_id,temp.copy_code,temp.inv_id,temp.inv_code,
					temp.inv_name,temp.med_type_id,temp.med_type_name,temp.inv_model,
					temp.fac_id,temp.fac_name,temp.store_id,temp.is_apply,1 as is_set,ssu.user_name,temp.oper_date
					,temp.location_id,temp.location_code,temp.location_name
					from inv_store temp
					LEFT JOIN sys_user ssu
        			ON
						temp.group_id = ssu.group_id and temp.hos_id = ssu.hos_id
			            and temp.copy_code = ssu.copy_code and temp.oper = ssu.user_id
			            and ssu.is_stop = 0 
					order by inv_code
				</if>
				
				<if test="is_apply == 0 ">
					select inv_tmp.group_id,inv_tmp.hos_id,inv_tmp.copy_code,inv_tmp.inv_id,inv_tmp.inv_code,
					inv_tmp.inv_name,inv_tmp.med_type_id,inv_tmp.med_type_name,inv_tmp.inv_model,
					inv_tmp.fac_id,inv_tmp.fac_name,inv_tmp.store_id,inv_tmp.is_apply,
					case when inv_tmp.is_apply=1 then 1 else 0 end is_set,su.user_name,inv_tmp.oper_date
					,inv_tmp.location_id,inv_tmp.location_code,inv_tmp.location_name
					from inv_tmp inv_tmp
					LEFT JOIN sys_user su
		        	ON
			            inv_tmp.group_id = su.group_id and inv_tmp.hos_id = su.hos_id
			            and inv_tmp.copy_code = su.copy_code and inv_tmp.oper = su.user_id
			            and su.is_stop = 0 
					where is_apply = 0 
						and inv_id not in (
						select distinct inv_id from med_store_inv
						<where>
							<if test="group_id != null and group_id != ''">
			      				group_id = #{group_id,jdbcType=INTEGER}
					      	</if>
					      	<if test="hos_id != null and hos_id != ''">
								and hos_id = #{hos_id,jdbcType=INTEGER}
							</if>
							<if test="copy_code != null and copy_code != ''">
								and copy_code = #{copy_code,jdbcType=VARCHAR}
							</if>
							<if test="store_id != null and store_id != ''">
								and store_id != #{store_id,jdbcType=INTEGER} 
							</if>
							and is_apply = 1
						</where> 
					)
					order by inv_tmp.inv_code
				</if>
			</if>
			
			<if test="is_apply == null or is_apply == ''">
				SELECT inv_tmp.group_id, inv_tmp.hos_id, inv_tmp.copy_code, inv_tmp.inv_id, inv_tmp.inv_code
			      , inv_tmp.inv_name, inv_tmp.med_type_id, inv_tmp.med_type_name, inv_tmp.inv_model, inv_tmp.fac_id
			      , inv_tmp.fac_name, inv_tmp.store_id, inv_tmp.is_apply, 
			      CASE WHEN (a.is_apply = 1 or inv_tmp.is_apply=1) THEN 1 ELSE 0 END AS is_set,su.user_name,inv_tmp.oper_date
			      ,inv_tmp.location_id,inv_tmp.location_code,inv_tmp.location_name
			    FROM inv_tmp inv_tmp
			    left join (
			         select distinct inv_id,group_id,hos_id,copy_code,is_apply 
			         from med_store_inv
			         where group_id = #{group_id,jdbcType=INTEGER} 
			         	and hos_id = #{hos_id,jdbcType=INTEGER} 
			         	and copy_code = #{copy_code,jdbcType=VARCHAR}
			         	and store_id != #{store_id,jdbcType=INTEGER} 
			         	and is_apply = 1
			    )a  on inv_tmp.group_id = a.group_id and inv_tmp.hos_id = a.hos_id 
			    	and inv_tmp.copy_code=a.copy_code and inv_tmp.inv_id = a.inv_id
				LEFT JOIN sys_user su
        		ON
					inv_tmp.group_id = su.group_id and inv_tmp.hos_id = su.hos_id
		            and inv_tmp.copy_code = su.copy_code and inv_tmp.oper = su.user_id
		            and su.is_stop = 0 
			    ORDER BY inv_tmp.inv_code
			</if>
			
	</select>
	
	<!-- 弹出材料列表信息（查询出与当前仓库不存在对应关系的材料列表） -->
	<select id="queryMedInv" parameterType="java.util.Map" resultMap="map">
		select a.group_id,a.hos_id,a.copy_code,a.inv_id,a.inv_code,a.inv_name,a.inv_model,c.fac_id,c.fac_name
        from med_inv_dict a
        left join hos_fac c  on a.group_id=c.group_id
        	and a.hos_id=c.hos_id
            and a.fac_id=c.fac_id
            and c.is_stop=0
		<where>
		     a.is_stop=0 and
			a.inv_id not in (
				select inv_id from med_store_inv
                 	<where>
	                 	<if test="group_id != null and group_id != ''">
							and group_id = #{group_id,jdbcType=INTEGER}
				      	</if>
				      	<if test="hos_id != null and hos_id != ''">
					    	AND hos_id = #{hos_id,jdbcType=INTEGER}
				        </if>
				        <if test="copy_code != null and copy_code != ''">
							AND copy_code = #{copy_code,jdbcType=VARCHAR}
				       	</if>
				       	<if test="store_id != null and store_id != ''">
					    	AND store_id = #{store_id,jdbcType=INTEGER}
				        </if>
                 	</where>
            )
			<if test="group_id != null and group_id != ''">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND ( 
					a.inv_code like '${inv_code}%' or
					a.inv_name like '%${inv_code}%' or
					lower(a.spell_code) like '%${inv_code}%' or
					lower(a.wbx_code) like '%${inv_code}%'
				)
			</if>
			<if test="key != null and key != ''">
				AND ( 
					a.inv_code like '${key}%' or
					a.inv_name like '%${key}%' or
					a.spell_code like '%${key}%' or
					a.wbx_code like '%${key}%'
				)
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				and a.med_type_id in(
			 		select med_type_id from MED_TYPE
			 		where group_id = #{group_id,jdbcType=INTEGER}   
						and hos_id = #{hos_id,jdbcType=INTEGER} 
						and copy_code = #{copy_code,jdbcType=VARCHAR} 
	                  	start with  med_type_id in (#{med_type_id,jdbcType=INTEGER})
	                  	connect by prior med_type_code = super_code
				)
			</if>
		</where>
		order by a.inv_code
	</select>

	<!-- 根据仓库Id 查询 与其存在对应关系的所有药品材料Id -->
	<select id="queryMedInvStoreId" parameterType="java.util.Map" resultMap="map">
		select inv_id
		from med_store_inv
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
				AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<!-- 全部材料 -->
	<select id="queryMedInvAllList" parameterType="java.util.Map" resultMap="map">
	    select distinct a.group_id, a.hos_id, a.copy_code, a.inv_id, a.inv_code
      , a.inv_name, a.inv_model, c.fac_id, c.fac_name, temp.is_apply,
      mtd.med_type_id,mtd.med_type_code,mtd.med_type_name
        from med_inv_dict a
        left join hos_fac c  on a.group_id=c.group_id
          and a.hos_id=c.hos_id
            and a.fac_id=c.fac_id
            and c.is_stop=0
        left join med_type_dict mtd on a.group_id=mtd.group_id
           and a.hos_id=mtd.hos_id
           and a.copy_code=mtd.copy_code
           and a.med_type_id=mtd.med_type_id
           and a.is_stop=0
       left join MED_STORE_INV msi on a.group_id=msi.group_id
           and a.hos_id=msi.hos_id 
           and a.copy_code=msi.copy_code
           and a.inv_id=msi.inv_id
       left join HOS_STORE_DICT hsd on a.group_id=hsd.group_id
           and a.hos_id=hsd.hos_id
          and msi.store_id=hsd.store_id
        LEFT JOIN (
         select inv_id,is_apply 
         from med_store_inv
         where
              group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code} and is_apply = 1
	    ) temp 
	    ON
      		a.inv_id = temp.inv_id
        <where>
        	<if test="group_id != null and group_id != ''">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="med_type_code != null and med_type_code != ''">
				AND mtd.med_type_code = #{med_type_code,jdbcType=VARCHAR}
			</if>
			<if test="store_code != null and store_code != ''">
			   and hsd.store_code=#{store_code,jdbcType=VARCHAR}
			   </if>
			<if test="inv_code != null and inv_code != ''">
				AND ( 
					a.inv_code like '${inv_code}%' or
					a.inv_name like '%${inv_code}%' or
					a.spell_code like '%${inv_code}%' or
					a.wbx_code like '%${inv_code}%'
				)
			</if>
	    
			<if test="key != null and key != ''">
				AND ( 
					a.inv_code like '${key}%' or
					a.inv_name like '%${key}%' or
					a.spell_code like '%${key}%' or
					a.wbx_code like '%${key}%'
				)
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				and a.med_type_id in(
			 		select med_type_id from MED_TYPE
			 		where group_id = #{group_id,jdbcType=INTEGER}   
						and hos_id = #{hos_id,jdbcType=INTEGER} 
						and copy_code = #{copy_code,jdbcType=VARCHAR} 
	                  	start with  med_type_id in (#{med_type_id,jdbcType=INTEGER})
	                  	connect by prior med_type_code = super_code
				)
			</if>
			<if test="cert_id != null and cert_id != ''">
				and a.inv_id not in (
			 		select distinct inv_id from med_inv_cert_rela
			 		where group_id = #{group_id,jdbcType=INTEGER}   
						and hos_id = #{hos_id,jdbcType=INTEGER} 
						and copy_code = #{copy_code,jdbcType=VARCHAR} 
	                  	and cert_id = #{cert_id,jdbcType=INTEGER} 
				)
			</if>
			
			<!-- 2017/03/15 增加此处查询条件 本仓库已经绑定过对应关系的材料过滤掉 -->
			<if test="store_id != null and store_id != '' ">
				AND a.inv_id not in (
					SELECT inv_id
			        FROM med_store_inv
			        WHERE group_id = #{group_id,jdbcType=INTEGER}
						AND hos_id = #{hos_id,jdbcType=INTEGER} 
				        AND copy_code = #{copy_code,jdbcType=VARCHAR}
				        AND store_id = #{store_id,jdbcType=INTEGER}
				)
			</if>
			
			<!-- 20170310 增加此处条件,避免材料已经删除,还能在仓库材料定义添加材料时,下拉列表出现已经删除的材料 -->
				AND a.is_stop = 0
			order by a.inv_code 
        </where>
	</select>
	<!-- 判断添加的材料是否在该仓库中 -->
	<select id="existsMedInvInStore" resultType="String" parameterType="java.util.Map" >
		SELECT wm_concat(to_char(b.inv_code||' '||b.inv_name)) FROM (
			SELECT REGEXP_SUBSTR ('${inv_ids}', '[^,]+', 1,rownum) as inv_id
			FROM DUAL
			CONNECT BY ROWNUM &lt;=LENGTH ('${inv_ids}') - LENGTH (REPLACE ('${inv_ids}', ',', ''))+1
		) a
		LEFT JOIN med_inv_dict b
			ON b.group_id = #{group_id,jdbcType=INTEGER} 
			AND b.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND b.copy_code = #{copy_code,jdbcType=VARCHAR} 
			AND b.is_stop = 0
			AND a.inv_id = b.inv_id
		WHERE  EXISTS (
			SELECT 1 FROM med_store_inv 
			WHERE group_id = #{group_id,jdbcType=INTEGER} 
				AND hos_id = #{hos_id,jdbcType=INTEGER} 
				AND copy_code = #{copy_code,jdbcType=VARCHAR} 
				AND store_id = #{store_id,jdbcType=INTEGER} 
				AND inv_id = a.inv_id
			)
			<![CDATA[AND rownum <= 50]]>
	</select>
	
	<!-- 查询材料申领仓库 -->
	<select id="queryMedInvApplyStore" parameterType="java.util.Map" resultMap="map">
		SELECT 
			store_id,inv_id
		FROM med_store_inv
		WHERE
			group_id = #{group_id} and hos_id = #{hos_id} 
			and copy_code = #{copy_code} and inv_id in(${inv_ids})
			and is_apply = 1
	</select>
	
	<!-- 修改材料默认申领仓库状态 -->
	<update id="updateMedInvApplyStore" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin"
			separator=";" close=";end;">
			UPDATE med_store_inv 
				set is_apply = #{item.is_apply,jdbcType=INTEGER}, 
					oper = #{item.oper,jdbcType=INTEGER},
					oper_date = #{item.oper_date,jdbcType=DATE}
			WHERE
				group_id = #{item.group_id,jdbcType=INTEGER} 
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR} 
				and store_id = #{item.store_id,jdbcType=INTEGER}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 删除材料时删除对应关系 -->
	<delete id="deleteBatchMedStoreInvRela" parameterType="java.util.List">
		DELETE FROM med_store_inv
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
			</foreach>
		</where>

	</delete>
</mapper>

