<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.info.basic.MedInvMapper">
	<resultMap id="medInv" type="java.util.Map">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="inv_id" column="inv_id"/>
		<result property="inv_no" column="inv_no"/>
		<result property="inv_code" column="inv_code"/>
		<result property="inv_name" column="inv_name"/>
		<result property="alias" column="alias"/>
		<result property="spell_code" column="spell_code"/>
		<result property="wbx_code" column="wbx_code"/>
		<result property="med_type_id" column="med_type_id"/>
		<result property="med_type_no" column="med_type_no"/>
		<result property="med_type_code" column="med_type_code"/>
		<result property="med_type_name" column="med_type_name"/>
		<result property="inv_model" column="inv_model"/>
		<result property="unit_code" column="unit_code"/>
		<result property="unit_name" column="unit_name"/>
		<result property="fac_id" column="fac_id"/>
		<result property="fac_no" column="fac_no"/>
		<result property="fac_code" column="fac_code"/>
		<result property="fac_name" column="fac_name"/>
		<result property="sup_name" column="sup_name"/>
		<result property="amortize_type" column="amortize_type"/>
		<result property="price_type" column="price_type"/>
		<result property="plan_price" column="plan_price"/>
		<result property="price_rate" column="price_rate"/>
		<result property="sell_price" column="sell_price"/>
		<result property="is_single_ven" column="is_single_ven"/>
		<result property="is_batch" column="is_batch"/>
		<result property="is_bar" column="is_bar"/>
		<result property="is_per_bar" column="is_per_bar"/>
		<result property="is_inv_bar" column="is_inv_bar"/>
		<result property="is_cert" column="is_cert"/>
		<result property="is_quality" column="is_quality"/>
		<result property="is_disinfect" column="is_disinfect"/>
		<result property="is_com" column="is_com"/>
		<result property="is_dura" column="is_dura"/>
		<result property="is_highvalue" column="is_highvalue"/>
		<result property="is_charge" column="is_charge"/>
		<result property="is_sec_whg" column="is_sec_whg"/>
		<result property="is_shel_make" column="is_shel_make"/>
		<result property="sdate" column="sdate"/>
		<result property="edate" column="edate"/>
		<result property="bar_code_new" column="bar_code_new"/>
		<result property="abc_type" column="abc_type"/>
		<result property="per_weight" column="per_weight"/>
		<result property="per_volum" column="per_volum"/>
		<result property="brand_name" column="brand_name"/>
		<result property="agent_name" column="agent_name"/>
		<result property="inv_structure" column="inv_structure"/>
		<result property="inv_usage" column="inv_usage"/>
		<result property="use_state" column="use_state"/>
		<result property="note" column="note"/>
		<result property="state" column="state"/>
		<result property="check_date" column="check_date"/>
		<result property="checker" column="checker"/>
		<result property="is_bid" column="is_bid"/>
		<result property="bid_date" column="bid_date"/>
		<result property="bid_code" column="bid_code"/>
		<result property="is_involved" column="is_involved"/>
		<result property="is_implant" column="is_implant"/>
		<result property="stora_tran_cond" column="stora_tran_cond"/>
		<result property="is_zero_store" column="is_zero_store"/>
		<result property="alias" column="alias"/>
		<result property="alias_spell" column="alias_spell"/>
		<result property="manage_type" column="manage_type"/>
		<result property="cert_code" column="cert_code"/>
		<result property="start_date" column="start_date"/>
		<result property="end_date" column="end_date"/>
		<result property="memory_encoding" column="memory_encoding"/>
		<result property="source_plan" column="source_plan"/>
		<result property="manage_type_name" column="manage_type_name"/>
		<result property="med_jx_id" column="med_jx_id"/>
		<result property="med_jx_name" column="med_jx_name"/>
		<result property="med_sx_id" column="med_sx_id"/>
		<result property="med_sx_name" column="med_sx_name"/>
		<result property="bqplxs" column="bqplxs"/>
		<result property="mzplxs" column="mzplxs"/>
	</resultMap>
	
	
	<resultMap id="certSupMap" type="java.util.Map">
		<result property="sup_id" column="sup_id"/>
		<result property="sup_code" column="sup_code"/>
		<result property="sup_name" column="sup_name"/>
	</resultMap>
	
	<resultMap id="facMap" type="java.util.Map">
		<result property="fac_id" column="fac_id"/>
		<result property="fac_name" column="fac_name"/>
	</resultMap>
	
	<resultMap id="invCert" type="java.util.Map">
    	<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="cert_id" column="cert_id"/>
		<result property="cert_code" column="cert_code"/>
		<result property="cert_inv_name" column="cert_inv_name"/>
		<result property="type_id" column="type_id"/>
		<result property="type_name" column="type_name"/>
		<result property="fac_id" column="fac_id"/>
		<result property="cert_date" column="cert_date"/>
		<result property="issuing_authority" column="issuing_authority"/>
		<result property="start_date" column="start_date"/>
		<result property="end_date" column="end_date"/>
		<result property="cert_memo" column="cert_memo"/>
		<result property="cert_state" column="cert_state"/>
		<result property="fac_code" column="fac_code"/>
		<result property="fac_name" column="fac_name"/>
	</resultMap>
	
	
	<select id="queryMedInvSeq"  resultType="java.lang.Integer">
		SELECT MED_INV_SEQ.nextval as inv_id FROM DUAL
	</select>
	
	<select id="queryMedInvSeqCur"  resultType="java.lang.Integer">
		SELECT MED_INV_SEQ.CURRVAL as inv_id FROM DUAL
	</select>
	
	<!-- 材料添加 -->
	<insert id="add" parameterType="java.util.Map" >
		INSERT INTO MED_INV (
			group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,wbx_code, med_type_id, 
			price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, fac_id, 
			agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, is_per_bar, 
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new, 
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store,alias,alias_spell,
			manage_type, memory_encoding, source_plan,med_jx_id,med_sx_id,bqplxs,mzplxs
		) 
		VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{copy_code,jdbcType=VARCHAR},
			#{inv_id,jdbcType=INTEGER},
			#{inv_code,jdbcType=VARCHAR},
			#{inv_name,jdbcType=VARCHAR},
			#{spell_code,jdbcType=VARCHAR},
			#{wbx_code,jdbcType=VARCHAR},
			#{med_type_id,jdbcType=INTEGER},
			#{price_type,jdbcType=INTEGER},
			#{amortize_type,jdbcType=INTEGER},
			#{inv_model,jdbcType=VARCHAR},
			#{unit_code,jdbcType=VARCHAR},
			#{plan_price,jdbcType=INTEGER},
			#{price_rate,jdbcType=INTEGER},
			#{sell_price,jdbcType=INTEGER},
			#{fac_id,jdbcType=INTEGER},
			#{agent_name,jdbcType=VARCHAR},
			#{brand_name,jdbcType=VARCHAR},
			#{inv_usage,jdbcType=VARCHAR},
			#{inv_structure,jdbcType=VARCHAR},
			#{sdate,jdbcType=DATE},
			#{edate,jdbcType=DATE},
			#{per_weight,jdbcType=INTEGER},
			#{per_volum,jdbcType=INTEGER},
			#{abc_type,jdbcType=VARCHAR},
			#{use_state,jdbcType=INTEGER},
			
			#{is_single_ven,jdbcType=INTEGER},
			#{is_charge,jdbcType=INTEGER},
			#{is_highvalue,jdbcType=INTEGER},
			#{is_dura,jdbcType=INTEGER},
			#{is_com,jdbcType=INTEGER},
			#{is_bar,jdbcType=INTEGER},
			#{is_per_bar,jdbcType=INTEGER},
			#{is_inv_bar,jdbcType=INTEGER},
			#{is_quality,jdbcType=INTEGER},
			#{is_disinfect,jdbcType=INTEGER}, 
			#{is_cert,jdbcType=INTEGER},
			#{is_sec_whg,jdbcType=INTEGER},
			#{is_shel_make,jdbcType=INTEGER},
			#{is_batch,jdbcType=INTEGER}, 
			#{state,jdbcType=INTEGER},  
			#{inv_code,jdbcType=VARCHAR}, <!-- 品种码默认等于材料编码 -->
			#{is_bid,jdbcType=INTEGER},
			#{bid_date,jdbcType=DATE},
			#{bid_code,jdbcType=VARCHAR}, 
			#{is_involved,jdbcType=INTEGER},  
			#{is_implant,jdbcType=INTEGER},
			#{stora_tran_cond,jdbcType=VARCHAR}, 
			#{is_zero_store,jdbcType=INTEGER},
			#{alias,jdbcType=VARCHAR}, 
			#{alias_spell,jdbcType=VARCHAR},
			#{manage_type,jdbcType=VARCHAR},
			#{memory_encoding,jdbcType=VARCHAR}, 
			#{source_plan,jdbcType=INTEGER},
			
			#{med_jx_id,jdbcType=INTEGER}
			,
			#{med_sx_id,jdbcType=INTEGER}
			,
			#{bqplxs,jdbcType=INTEGER}
			,
			#{mzplxs,jdbcType=INTEGER}
			
		)
	</insert>
	
	<!-- 材料批量添加 -->
	<insert id="addBatch" parameterType="java.util.List" >
		INSERT INTO MED_INV (
			alias,alias_spell, group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,wbx_code, med_type_id, 
			price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, fac_id, 
			agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, is_per_bar,  
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new,
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, manage_type, 
			memory_encoding, source_plan,med_jx_id,med_sx_id,bqplxs,mzplxs 
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 	
			    #{item.alias,jdbcType=VARCHAR},
			    #{item.alias_spell,jdbcType=VARCHAR},
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.inv_code,jdbcType=VARCHAR},
				#{item.inv_name,jdbcType=VARCHAR},
				#{item.spell_code,jdbcType=VARCHAR},
				#{item.wbx_code,jdbcType=VARCHAR},
				#{item.med_type_id,jdbcType=INTEGER},
				#{item.price_type,jdbcType=INTEGER},
				#{item.amortize_type,jdbcType=INTEGER},
				#{item.inv_model,jdbcType=VARCHAR},
				#{item.unit_code,jdbcType=VARCHAR},
				#{item.plan_price,jdbcType=INTEGER},
				#{item.price_rate,jdbcType=INTEGER},
				#{item.sell_price,jdbcType=INTEGER},
				#{item.fac_id,jdbcType=INTEGER},
				#{item.agent_name,jdbcType=VARCHAR},
				#{item.brand_name,jdbcType=VARCHAR},
				#{item.inv_usage,jdbcType=VARCHAR},
				#{item.inv_structure,jdbcType=VARCHAR},
				#{item.sdate,jdbcType=DATE},
				#{item.edate,jdbcType=DATE},
				#{item.per_weight,jdbcType=INTEGER},
				#{item.per_volum,jdbcType=INTEGER},
				#{item.abc_type,jdbcType=VARCHAR},
				#{item.use_state,jdbcType=INTEGER},
				
				#{item.is_single_ven,jdbcType=INTEGER},
				#{item.is_charge,jdbcType=INTEGER},
				#{item.is_highvalue,jdbcType=INTEGER},
				#{item.is_dura,jdbcType=INTEGER},
				#{item.is_com,jdbcType=INTEGER},
				#{item.is_bar,jdbcType=INTEGER},
				#{item.is_per_bar,jdbcType=INTEGER},
				#{item.is_inv_bar,jdbcType=INTEGER},
				#{item.is_quality,jdbcType=INTEGER},
				#{item.is_disinfect,jdbcType=INTEGER}, 
				#{item.is_cert,jdbcType=INTEGER},
				#{item.is_sec_whg,jdbcType=INTEGER},
				#{item.is_shel_make,jdbcType=INTEGER},
				#{item.is_batch,jdbcType=INTEGER}, 
				#{item.state,jdbcType=INTEGER},  
				#{item.inv_code,jdbcType=VARCHAR}, <!-- 品种码默认等于材料编码 -->
				#{item.is_bid,jdbcType=INTEGER},
				#{item.bid_date,jdbcType=DATE},
				#{item.bid_code,jdbcType=VARCHAR}, 
				#{item.is_involved,jdbcType=INTEGER},  
				#{item.is_implant,jdbcType=INTEGER},
				#{item.stora_tran_cond,jdbcType=VARCHAR}, 
				#{item.is_zero_store,jdbcType=INTEGER}, 
				#{item.manage_type,jdbcType=VARCHAR}, 
				#{item.memory_encoding,jdbcType=VARCHAR}, 
				#{item.source_plan,jdbcType=INTEGER},
				
				#{item.med_jx_id,jdbcType=INTEGER}
				,
				#{item.med_sx_id,jdbcType=INTEGER}
				,
				#{item.bqplxs,jdbcType=INTEGER}
				,
				#{item.mzplxs,jdbcType=INTEGER} 
			FROM DUAL
		</foreach>
		)t
	</insert>
	
	<!-- 材料修改 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE med_inv SET
			inv_code = #{inv_code,jdbcType=VARCHAR},
			bar_code_new = #{inv_code,jdbcType=VARCHAR},<!-- 品种码默认等于材料编码 -->
			inv_name = #{inv_name,jdbcType=VARCHAR},
			spell_code = #{spell_code,jdbcType=VARCHAR},
			wbx_code = #{wbx_code,jdbcType=VARCHAR},
			med_type_id = #{med_type_id,jdbcType=INTEGER},
			price_type = #{price_type,jdbcType=INTEGER},
			amortize_type = #{amortize_type,jdbcType=INTEGER},
			inv_model = #{inv_model,jdbcType=VARCHAR},
			unit_code = #{unit_code,jdbcType=VARCHAR},
			plan_price = #{plan_price,jdbcType=INTEGER},
			price_rate = #{price_rate,jdbcType=INTEGER},
			sell_price = #{sell_price,jdbcType=INTEGER},
			fac_id = #{fac_id,jdbcType=INTEGER},
			agent_name = #{agent_name,jdbcType=VARCHAR},
			brand_name = #{brand_name,jdbcType=VARCHAR},
			inv_usage = #{inv_usage,jdbcType=VARCHAR},
			inv_structure = #{inv_structure,jdbcType=VARCHAR},
			sdate = #{sdate,jdbcType=DATE},
			edate = #{edate,jdbcType=DATE},
			per_weight = #{per_weight,jdbcType=INTEGER},
			per_volum = #{per_volum,jdbcType=INTEGER},
			abc_type =  #{abc_type,jdbcType=VARCHAR},
			use_state = #{use_state,jdbcType=INTEGER},
			is_single_ven = #{is_single_ven,jdbcType=INTEGER},
			
			is_charge = #{is_charge,jdbcType=INTEGER},
			is_highvalue = #{is_highvalue,jdbcType=INTEGER},
			is_dura = #{is_dura,jdbcType=INTEGER},
			is_com = #{is_com,jdbcType=INTEGER},
			is_bar = #{is_bar,jdbcType=INTEGER},
			is_per_bar = #{is_per_bar,jdbcType=INTEGER},
			is_inv_bar = #{is_inv_bar,jdbcType=INTEGER},
			is_quality = #{is_quality,jdbcType=INTEGER},
			is_disinfect = #{is_disinfect,jdbcType=INTEGER},
			is_cert = #{is_cert,jdbcType=INTEGER},
			is_sec_whg = #{is_sec_whg,jdbcType=INTEGER},
			is_shel_make = #{is_shel_make,jdbcType=INTEGER},
			note = #{note,jdbcType=VARCHAR},
			is_bid = #{is_bid,jdbcType=INTEGER},
			bid_date = #{bid_date,jdbcType=DATE},
			bid_code = #{bid_code,jdbcType=VARCHAR},
			is_involved = #{is_involved,jdbcType=INTEGER},
			is_implant = #{is_implant,jdbcType=INTEGER},
			stora_tran_cond = #{stora_tran_cond,jdbcType=VARCHAR},
			is_zero_store = #{is_zero_store,jdbcType=INTEGER},
			alias = #{alias,jdbcType=VARCHAR},
			alias_spell = #{alias_spell,jdbcType=INTEGER}, 
			manage_type = #{manage_type,jdbcType=VARCHAR},
			memory_encoding = #{memory_encoding,jdbcType=VARCHAR}, 
			source_plan = #{source_plan,jdbcType=INTEGER},
			med_jx_id = #{med_jx_id,jdbcType=INTEGER},
			med_sx_id = #{med_sx_id,jdbcType=INTEGER},
			bqplxs = #{bqplxs,jdbcType=INTEGER},
			mzplxs = #{mzplxs,jdbcType=INTEGER} 
			<!-- 材料全部按批不能修改该属性
			is_batch = #{is_batch,jdbcType=INTEGER},
			-->
		WHERE 
			group_id =#{group_id,jdbcType=INTEGER}
		 	and hos_id =#{hos_id,jdbcType=INTEGER}
		 	and copy_code =#{copy_code,jdbcType=VARCHAR}
		 	and inv_id =#{inv_id,jdbcType=INTEGER}
	</update>
	
	<!-- 材料批量修改 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_inv SET
				inv_code = #{item.inv_code,jdbcType=VARCHAR},
				bar_code_new = #{item.inv_code,jdbcType=VARCHAR},<!-- 品种码默认等于材料编码 -->
				inv_name = #{item.inv_name,jdbcType=VARCHAR},
				spell_code = #{item.spell_code,jdbcType=VARCHAR},
				wbx_code = #{item.wbx_code,jdbcType=VARCHAR},
				med_type_id = #{item.med_type_id,jdbcType=INTEGER},
				price_type = #{item.price_type,jdbcType=INTEGER},
				amortize_type = #{item.amortize_type,jdbcType=INTEGER},
				inv_model = #{item.inv_model,jdbcType=VARCHAR},
				unit_code = #{item.unit_code,jdbcType=VARCHAR},
				plan_price = #{item.plan_price,jdbcType=NUMERIC},
				price_rate = #{item.price_rate,jdbcType=NUMERIC},
				sell_price = #{item.sell_price,jdbcType=NUMERIC},
				fac_id = #{item.fac_id,jdbcType=INTEGER},
				agent_name = #{item.agent_name,jdbcType=VARCHAR},
				brand_name = #{item.brand_name,jdbcType=VARCHAR},
				inv_usage = #{item.inv_usage,jdbcType=VARCHAR},
				inv_structure = #{item.inv_structure,jdbcType=VARCHAR},
				sdate = #{item.sdate,jdbcType=DATE},
				edate = #{item.edate,jdbcType=DATE},
				per_weight = #{item.per_weight,jdbcType=INTEGER},
				per_volum = #{item.per_volum,jdbcType=INTEGER},
				abc_type =  #{item.abc_type,jdbcType=VARCHAR},
				use_state = #{item.use_state,jdbcType=INTEGER},
				is_single_ven = #{item.is_single_ven,jdbcType=INTEGER},
				
				is_charge = #{item.is_charge,jdbcType=INTEGER},
				is_highvalue = #{item.is_highvalue,jdbcType=INTEGER},
				is_dura = #{item.is_dura,jdbcType=INTEGER},
				is_com = #{item.is_com,jdbcType=INTEGER},
				is_bar = #{item.is_bar,jdbcType=INTEGER},
				is_per_bar = #{item.is_per_bar,jdbcType=INTEGER},
				is_inv_bar = #{item.is_inv_bar,jdbcType=INTEGER},
				is_quality = #{item.is_quality,jdbcType=INTEGER},
				is_disinfect = #{item.is_disinfect,jdbcType=INTEGER},
				is_cert = #{item.is_cert,jdbcType=INTEGER},
				is_sec_whg = #{item.is_sec_whg,jdbcType=INTEGER},
				is_shel_make = #{item.is_shel_make,jdbcType=INTEGER},
				note = #{item.note,jdbcType=VARCHAR},
				is_bid = #{item.is_bid,jdbcType=INTEGER},
				bid_date = #{item.bid_date,jdbcType=DATE},
				bid_code = #{item.bid_code,jdbcType=VARCHAR},
				is_involved = #{item.is_involved,jdbcType=INTEGER},
				is_implant = #{item.is_implant,jdbcType=INTEGER},
				stora_tran_cond = #{item.stora_tran_cond,jdbcType=VARCHAR},
				is_zero_store = #{item.is_zero_store,jdbcType=INTEGER},
				alias = #{item.alias,jdbcType=VARCHAR},
			    alias_spell = #{item.alias_spell,jdbcType=VARCHAR}, 
			    manage_type = #{item.manage_type,jdbcType=VARCHAR},
			    memory_encoding = #{item.memory_encoding,jdbcType=VARCHAR}, 
			    source_plan = #{item.source_plan,jdbcType=INTEGER},
			    med_jx_id = #{item.med_jx_id,jdbcType=INTEGER},
				med_sx_id = #{item.med_sx_id,jdbcType=INTEGER},
				bqplxs = #{item.bqplxs,jdbcType=INTEGER},
				mzplxs = #{item.mzplxs,jdbcType=INTEGER}
				<!-- 材料全部按批不能修改该属性
				is_batch = #{item.is_batch,jdbcType=INTEGER},
				-->
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				 and hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and inv_id = #{item.inv_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 材料删除 -->
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM med_inv 
		WHERE group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}  
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
			and inv_id = #{inv_id,jdbcType=INTEGER} 
	</delete>
	
	<!-- 材料批量删除 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM med_inv WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
			</foreach>
	</delete>
	
	
	<!-- 材料批量审核 -->
	<update id="auditMedInv" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_inv SET
				state = 1,
				checker = #{item.checker,jdbcType=INTEGER},
				check_date = #{item.check_date,jdbcType=DATE}
				
			WHERE group_id = #{item.group_id,jdbcType=INTEGER}
				 and hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and inv_id = #{item.inv_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 主页面查询 -->
	<select id="query" parameterType="java.util.Map" resultMap="medInv" >
		SELECT 
			a.group_id, a.hos_id, a.copy_code,a.memory_encoding ,a.inv_id, a.inv_code, a.inv_name, a.spell_code, 
			a.med_type_id,b.med_type_name, a.inv_model, c.unit_name, a.plan_price, e.fac_name, 
			a.is_charge, a.is_highvalue,a.state,a.check_date, a.use_state, a.alias, a.alias_spell, 
			a.is_involved, a.is_implant, a.bid_code, mic.cert_code, mic.start_date, mic.end_date,  hsd.sup_name,
			a.is_com,mm.manage_type_name,a.med_jx_id,g.med_jx_name,a.med_sx_id,f.med_sx_name,a.bqplxs,a.mzplxs
		from med_inv a
		<!-- 2017/03/21 温州医院  查询条件增加证件号 证件起始日期 -->
		left join (
			select group_id ,hos_id ,copy_code ,inv_id,max(cert_id) cert_id 
			from med_inv_cert_rela group by group_id ,hos_id ,copy_code ,inv_id 
		) micr 
			on a.inv_id = micr.inv_id 
			and a.group_id = micr.group_id 
			and a.hos_id = micr.hos_id 
			and a.copy_code = micr.copy_code
		left  join med_inv_cert mic 
			on micr.cert_id = mic.cert_id
			and micr.group_id = mic.group_id 
			and micr.hos_id = mic.hos_id 
			and micr.copy_code = mic.copy_code
		join med_type_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.med_type_id = b.med_type_id
			and b.is_stop = 0
		left join med_sx f
			on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.med_sx_id= f.med_sx_id
			and f.is_stop=0
		left join med_jx g
			on a.group_id = g.group_id
			and a.hos_id = g.hos_id
			and a.med_jx_id= g.med_jx_id
			and g.is_stop=0
		<!-- 2017/03/15 台州中心医院需求:查询有药品分类权限的材料 -->
		<!-- JOIN V_USER_DATA_PERM vu 
			ON vu.group_id = b.group_id AND vu.hos_id = b.hos_id
			AND vu.user_id = #{user_id,jdbcType=INTEGER} 
			AND vu.table_code = 'MED_TYPE_DICT' 
			AND vu.perm_code = b.med_type_id AND vu.is_read = 1 AND vu.is_write = 1 -->
		left join hos_unit c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
		left join hos_fac e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
			<!-- and e.is_stop = 0 -->
		<if test="sup_id != null and sup_id != ''">
		inner join med_inv_sup mis
			on a.group_id = mis.group_id
			and a.hos_id = mis.hos_id
			and a.copy_code = mis.copy_code
			and a.inv_id = mis.inv_id
			and mis.sup_id = #{sup_id,jdbcType=INTEGER}
<!-- 			20170620温州市人民医院需求 ：只查询默认供应商材料-->
			and mis.is_default = 1 
		</if>
		<if test="sup_id == null or sup_id == ''">
		left join med_inv_sup mis
			on a.group_id = mis.group_id
			and a.hos_id = mis.hos_id
			and a.copy_code = mis.copy_code
			and a.inv_id = mis.inv_id
			and mis.is_default = 1 
		</if>
		left join hos_sup_dict hsd 
			on a.group_id = hsd.group_id 
			and a.hos_id = hsd.hos_id 
			and mis.sup_id = hsd.sup_id 
			and hsd.is_stop = 0
		left join med_inv_mana_type mm on a.group_id=mm.group_id and a.hos_id=mm.hos_id and a.copy_code=mm.copy_code
         	and a.manage_type=mm.manage_type
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<!-- 2017/03/15 台州中心医院需求:查询有药品分类权限的材料 -->
		    and b.med_type_id in (select vu.perm_code from  V_USER_DATA_PERM vu 
									where vu.group_id =#{group_id,jdbcType=INTEGER} AND vu.hos_id = #{hos_id,jdbcType=INTEGER}
									AND vu.user_id = #{user_id,jdbcType=INTEGER} 
									AND vu.table_code = 'MED_TYPE_DICT' 
									 AND vu.is_read = 1 AND vu.is_write = 1
									)
			<if test="inv_id != null and inv_id != ''">
				AND a.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND a.inv_code like '${inv_code}%'
			</if>
			<if test="inv_name != null and inv_name != ''">
				and (a.inv_name like '%${inv_name}%'
				     or a.alias like '%${inv_name}%'
				     or upper(a.spell_code) like '%${inv_name}%'
				     or upper(a.wbx_code) like '%${inv_name}%'
				     or upper(a.alias_spell) like '%${inv_name}%'
				     or lower(a.spell_code) like '%${inv_name}%'
				     or lower(a.wbx_code) like '%${inv_name}%'
				     or lower(a.alias_spell) like '%${inv_name}%'
				     )
			</if>
			<if test="med_type_code != null and med_type_code != ''">
				AND b.med_type_code like '${med_type_code}%'
			</if>
			<if test="fim_type_code != null and fim_type_code != ''">
				AND b.fim_type_code like '${fim_type_code}%'
			</if>
			<if test="amortize_type != null and amortize_type != ''">
				AND a.amortize_type = #{amortize_type,jdbcType=INTEGER}
			</if>
			<if test="fac_id != null and fac_id != ''">
				AND a.fac_id = #{fac_id,jdbcType=INTEGER}
			</if>
			<if test="is_highvalue != null and is_highvalue != ''">
				AND a.is_highvalue = #{is_highvalue,jdbcType=INTEGER}
			</if>
			<if test="is_charge != null and is_charge != ''">
				AND a.is_charge = #{is_charge,jdbcType=INTEGER}
			</if>
			<if test="alias != null and alias != ''">
				AND (a.alias like '%${alias}%'
					or LOWER(a.alias_spell) like '%${alias}%'
					or UPPER(a.alias_spell) like '%${alias}%'
				)
			</if>
			<if test="inv_model != null and inv_model != ''">
				and (a.inv_model like '%${inv_model}%'
				     or upper(a.spell_code) like '%${inv_model}%'
				     or upper(a.wbx_code) like '%${inv_model}%'
				     or lower(a.spell_code) like '%${inv_model}%'
				     or lower(a.wbx_code) like '%${inv_model}%'
			     )
			</if>
			<if test="is_involved != null and is_involved != '' ">
				and a.is_involved = #{is_involved,jdbcType=INTEGER}
			</if>
			<if test="is_implant != null and is_implant != '' ">
				and a.is_implant = #{is_implant,jdbcType=INTEGER}
			</if>
			<if test="is_com != null and is_com != '' ">
				and a.is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="bid_code != null and bid_code != '' ">
				and a.bid_code like  '%${bid_code}%' 
			</if>
			<if test="cert_code != null and cert_code != '' ">
				and mic.cert_code like '%${cert_code}%'
			</if>
			<if test="start_date != null and start_date != '' ">
				and mic.start_date &gt;= to_date(#{start_date ,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="end_date != null and end_date != '' ">
				and mic.end_date &lt;= to_date(#{end_date ,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="use_state != null and use_state != ''"> 
				AND a.use_state = #{use_state,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != '' ">
				and a.state = #{state,jdbcType=INTEGER}
			</if>
		order by a.inv_code 
	</select>
	
	<!-- 一般用于修改页面数据加载 -->
	<select id="queryByCode" resultMap="medInv" parameterType="java.util.Map" >
		SELECT 
			a.group_id, a.hos_id, a.copy_code, a.inv_id, mid.inv_no, a.inv_code, a.inv_name, a.spell_code, 
			a.wbx_code, a.med_type_id, mid.med_type_no,b.med_type_name, a.inv_model, a.unit_code, c.unit_name, 
			a.amortize_type, a.price_type, a.fac_id, mid.fac_no, e.fac_code, e.fac_name, a.plan_price, 
			a.price_rate, a.sell_price,  a.sdate, a.edate, a.agent_name, a.brand_name, a.inv_usage, 
			a.inv_structure, a.per_weight, a.per_volum, a.abc_type,  a.is_single_ven, a.use_state, 
			a.is_charge, a.is_highvalue, a.is_dura, a.is_com, a.is_bar, a.is_per_bar, a.is_inv_bar, a.is_quality, a.is_disinfect, 
			a.is_cert, a.is_sec_whg, a.is_shel_make, a.note, a.is_bid, a.bid_date, a.bid_code, a.is_involved, a.is_implant, 
			a.stora_tran_cond, a.is_zero_store,a.alias,a.alias_spell, a.manage_type, a.memory_encoding, a.source_plan, 
			mid.is_bid,mid.bid_date,mid.bid_code,
			a.med_jx_id,g.med_jx_name,a.med_sx_id,f.med_sx_name,a.bqplxs,a.mzplxs
		FROM med_inv a 
		left join med_inv_dict mid
			on a.group_id = mid.group_id
			and a.hos_id = mid.hos_id
			and a.copy_code = mid.copy_code
			and a.inv_id = mid.inv_id
			and mid.is_stop = 0
		left join med_type_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.med_type_id = b.med_type_id
			and b.is_stop = 0
		left join hos_unit c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
			and c.is_stop=0
		left join hos_fac e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
		left join med_sx f
			on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.med_sx_id= f.med_sx_id
			and f.is_stop=0
		left join med_jx g
			on a.group_id = g.group_id
			and a.hos_id = g.hos_id
			and a.med_jx_id= g.med_jx_id
			and g.is_stop=0
<!-- 			and e.is_stop = 0 -->
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}    
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}  
			and a.inv_id = #{inv_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 用于批量修改 -->
	<select id="queryByCodes" resultMap="medInv" parameterType="java.util.Map" >
		SELECT 
			group_id, hos_id, copy_code, inv_id, inv_code, inv_name, spell_code,wbx_code, med_type_id, 
			price_type, amortize_type, inv_model, unit_code, plan_price, price_rate, sell_price, fac_id, 
			agent_name, brand_name, inv_usage, inv_structure, sdate, edate, per_weight, per_volum, 
			abc_type, use_state, is_single_ven, is_charge, is_highvalue, is_dura, is_com, is_bar, note, is_per_bar,  
			is_inv_bar, is_quality, is_disinfect, is_cert, is_sec_whg, is_shel_make, is_batch, state, bar_code_new, 
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, alias, alias_spell,
			manage_type, memory_encoding, source_plan,med_jx_id,med_sx_id,bqplxs,mzplxs
		FROM med_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}    
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
			and inv_id in (${inv_ids}) 
	</select>
	
	<select id="queryMedInvPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
			SELECT 
				a.group_id, a.hos_id, a.copy_code,a.memory_encoding ,a.inv_id, a.inv_code, a.inv_name, a.spell_code, 
				a.med_type_id,b.med_type_name, a.inv_model, c.unit_name, a.plan_price, e.fac_name, 
				a.is_charge, a.is_highvalue,a.state,a.check_date, a.use_state, a.alias, a.alias_spell, 
				a.is_involved, a.is_implant, a.bid_code, mic.cert_code, mic.start_date, mic.end_date,  hsd.sup_name,
				a.med_jx_id,g.med_jx_name,a.med_sx_id,f.med_sx_name,a.bqplxs,a.mzplxs
			from med_inv a
			
		   left join (select group_id ,hos_id ,copy_code ,inv_id,max(cert_id) cert_id 
		           from med_inv_cert_rela group by group_id ,hos_id ,copy_code ,inv_id ) micr 
            on a.inv_id = micr.inv_id 
            and a.group_id = micr.group_id 
            and a.hos_id = micr.hos_id 
            and a.copy_code = micr.copy_code
            
        left  join med_inv_cert mic 
              on micr.cert_id = mic.cert_id
              and micr.group_id = mic.group_id 
              and micr.hos_id = mic.hos_id 
              and micr.copy_code = mic.copy_code
       join med_type_dict b
        on a.group_id = b.group_id
        and a.hos_id = b.hos_id
        and a.copy_code = b.copy_code
        and a.med_type_id = b.med_type_id
        and b.is_stop = 0
   
      left join hos_unit c
        on a.group_id = c.group_id
        and a.hos_id = c.hos_id
        and a.unit_code = c.unit_code
      left join hos_fac e
        on a.group_id = e.group_id
        and a.hos_id = e.hos_id
        and a.fac_id = e.fac_id
<!--         and e.is_stop = 0 -->
       
      left join med_inv_sup mis
        on a.group_id = mis.group_id
        and a.hos_id = mis.hos_id
        and a.copy_code = mis.copy_code
        and a.inv_id = mis.inv_id
        and mis.is_default = 1 
       
      left join hos_sup_dict hsd 
        on a.group_id = hsd.group_id 
        and a.hos_id = hsd.hos_id 
        and mis.sup_id = hsd.sup_id 
        and hsd.is_stop = 0
       left join med_sx f
			on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.med_sx_id= f.med_sx_id
			and f.is_stop=0
	   left join med_jx g
			on a.group_id = g.group_id
			and a.hos_id = g.hos_id
			and a.med_jx_id= g.med_jx_id
			and g.is_stop=0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}    
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}  
			and a.inv_id in (${paraId})
			order by a.inv_code
	</select>
	
	<select id="queryByUniqueness" resultMap="medInv" parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			inv_id,
			inv_code,
			inv_name,
			alias,
			spell_code,
			wbx_code,
			med_type_id,
			inv_model,
			unit_code,
			amortize_type,
			price_type,
			fac_id,
			plan_price,
			price_rate,
			sell_price,
			is_single_ven,
			is_batch,
			is_quality,
			is_dura,
			is_sec_whg,
			is_shel_make,
			is_add_sale,
			is_bar,
			bar_code_new,
			is_cert,
			is_highvalue,
			is_com,
			is_charge,
			sdate,
			edate,
			per_weight,
			per_volum,
			brand_name,
			agent_name,
			inv_structure,
			inv_usage,
			use_state,
			note,
			alias,
			alias_spell,
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, manage_type,
			med_jx_id,med_sx_id,bqplxs,mzplxs
		FROM MED_INV 
		<where>                     
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND inv_code = #{inv_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_name != null and inv_name != ''">
				AND inv_name = #{inv_name,jdbcType=VARCHAR}
			</if>
			<if test="alias != null and alias != ''">
				AND alias = #{alias,jdbcType=VARCHAR}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code,jdbcType=VARCHAR}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				AND med_type_id = #{med_type_id,jdbcType=INTEGER}
			</if>
			<if test="inv_model != null and inv_model != ''">
				AND inv_model = #{inv_model,jdbcType=VARCHAR}
			</if>
			<if test="unit_code != null and unit_code != ''">
				AND unit_code = #{unit_code,jdbcType=VARCHAR}
			</if>
			<if test="amortize_type != null and amortize_type != ''">
				AND amortize_type = #{amortize_type,jdbcType=INTEGER}
			</if>
			<if test="price_type != null and price_type != ''">
				AND price_type = #{price_type,jdbcType=INTEGER}
			</if>
			<if test="fac_id != null and fac_id != ''">
				AND fac_id = #{fac_id,jdbcType=INTEGER}
			</if>
			<if test="plan_price != null and plan_price != ''">
				AND plan_price = #{plan_price,jdbcType=INTEGER}
			</if>
			<if test="price_rate != null and price_rate != ''">
				AND price_rate = #{price_rate,jdbcType=INTEGER}
			</if>
			<if test="sell_price != null and sell_price != ''">
				AND sell_price = #{sell_price,jdbcType=INTEGER}
			</if>
			<if test="is_single_ven != null and is_single_ven != ''">
				AND is_single_ven = #{is_single_ven,jdbcType=INTEGER}
			</if>
			<if test="is_batch != null and is_batch != ''">
				AND is_batch = #{is_batch,jdbcType=INTEGER}
			</if>
			<if test="is_quality != null and is_quality != ''">
				AND is_quality = #{is_quality,jdbcType=INTEGER}
			</if>
			<if test="is_dura != null and is_dura != ''">
				AND is_dura = #{is_dura,jdbcType=INTEGER}
			</if>
			<if test="stay_time != null and stay_time != ''">
				AND stay_time = #{stay_time,jdbcType=INTEGER}
			</if>
			<if test="is_overstock != null and is_overstock != ''">
				AND is_overstock = #{is_overstock,jdbcType=INTEGER}
			</if>
			<if test="is_sec_whg != null and is_sec_whg != ''">
				AND is_sec_whg = #{is_sec_whg,jdbcType=INTEGER}
			</if>
			<if test="is_shel_make != null and is_shel_make != ''">
				AND is_shel_make = #{is_shel_make,jdbcType=INTEGER}
			</if>
			<if test="is_add_sale != null and is_add_sale != ''">
				AND is_add_sale = #{is_add_sale,jdbcType=INTEGER}
			</if>
			<if test="is_bar != null and is_bar != ''">
				AND is_bar = #{is_bar,jdbcType=INTEGER}
			</if>
			<if test="bar_code_new != null and bar_code_new != ''">
				AND bar_code_new = #{bar_code_new,jdbcType=VARCHAR}
			</if>
			<if test="is_cert != null and is_cert != ''">
				AND is_cert = #{is_cert,jdbcType=INTEGER}
			</if>
			<if test="is_highvalue != null and is_highvalue != ''">
				AND is_highvalue = #{is_highvalue,jdbcType=INTEGER}
			</if>
			<if test="is_com != null and is_com != ''">
				AND is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="is_charge != null and is_charge != ''">
				AND is_charge = #{is_charge,jdbcType=INTEGER}
			</if>
			<if test="sdate != null and sdate != ''">
				AND sdate = #{sdate,jdbcType=DATE}
			</if>
			<if test="edate != null and edate != ''">
				AND edate = #{edate,jdbcType=DATE}
			</if>
			<if test="per_weight != null and per_weight != ''">
				AND per_weight = #{per_weight,jdbcType=INTEGER}
			</if>
			<if test="per_volum != null and per_volum != ''">
				AND per_volum = #{per_volum,jdbcType=INTEGER}
			</if>
			<if test="brand_name != null and brand_name != ''">
				AND brand_name = #{brand_name,jdbcType=VARCHAR}
			</if>
			<if test="agent_name != null and agent_name != ''">
				AND agent_name = #{agent_name,jdbcType=VARCHAR}
			</if>
			<if test="inv_structure != null and inv_structure != ''">
				AND inv_structure = #{inv_structure,jdbcType=VARCHAR}
			</if>
			<if test="inv_usage != null and inv_usage != ''">
				AND inv_usage = #{inv_usage,jdbcType=VARCHAR}
			</if>
			<if test="use_state != null and use_state != ''">
				AND use_state = #{use_state,jdbcType=INTEGER}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note,jdbcType=INTEGER},
			</if>
			<if test="is_bid != null and is_bid != ''">
				AND is_bid = #{is_bid,jdbcType=INTEGER},
			</if>
			<if test="bid_date != null and bid_date != ''">
				AND bid_date = #{bid_date,jdbcType=DATE},
			</if>
			<if test="bid_code != null and bid_code != ''">
				AND bid_code = #{bid_code,jdbcType=VARCHAR},
			</if>
			<if test="is_involved != null and is_involved != ''">
				AND is_involved = #{is_involved,jdbcType=INTEGER},
			</if>
			<if test="is_implant != null and is_implant != ''">
				AND is_implant = #{is_implant,jdbcType=INTEGER},
			</if>
			<if test="stora_tran_cond != null and stora_tran_cond != ''">
				AND stora_tran_cond = #{stora_tran_cond,jdbcType=VARCHAR},
			</if>
			<if test="is_zero_store != null and is_zero_store != ''">
				AND is_zero_store = #{is_zero_store,jdbcType=INTEGER}
			</if>
			<if test="manage_type != null and manage_type != ''">
				AND manage_type = #{manage_type,jdbcType=VARCHAR}
			</if>
		</where>   
		order by inv_code
	</select>
	
	<!-- 材料供应商结果集byCode -->
	<select id="queryMedInvSupbyCode" resultType="java.util.Map" parameterType="java.util.Map" >
		select group_id,hos_id,copy_code,inv_id,sup_id
        from med_inv_sup
        where 
         group_id = #{group_id,jdbcType=INTEGER}
         and hos_id = #{hos_id,jdbcType=INTEGER}
         and  copy_code = #{copy_code,jdbcType=VARCHAR}
         and  inv_id = #{inv_id,jdbcType=INTEGER}
         and  sup_id = #{sup_id,jdbcType=INTEGER}
	</select>
	<!-- 材料供应商结果集 -->
	<select id="queryMedInvSup" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		SELECT a.sup_id, b.sup_code, b.sup_name,a.is_default
		FROM med_inv_sup a
		LEFT JOIN hos_sup_dict b
			ON a.group_id = b.group_id
			AND a.hos_id = b.hos_id
			AND a.sup_id = b.sup_id
			AND b.is_stop = 0
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.inv_id = #{inv_id,jdbcType=INTEGER}
	</select>
	<!-- 供应商选择列表 -->
	<select id="queryMedInvSupList" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		SELECT sup_id, sup_code, sup_name
		FROM hos_sup_dict
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0
			AND NOT EXISTS(
				select 1 from med_inv_sup 
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					and inv_id = #{inv_id,jdbcType=INTEGER}
					and sup_id = hos_sup_dict.sup_id)
			<if test="key != null and key != ''">
				AND (
					sup_code like '%${key}%' or 
					sup_name like '%${key}%'
					or
					spell_code like '%${key}%' or 
					wbx_code like '%${key}%'
				)
			</if>
		order by sup_code
	</select>
	
		<!-- 供应商选择列表不查停用材料 -->
	<select id="queryMedInvSupListDisable" resultType="java.util.TreeMap" parameterType="java.util.Map" >
		SELECT sup_id, sup_code, sup_name
		FROM hos_sup_dict
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0
			and is_disable=0
			and is_med = 1
			AND NOT EXISTS(
				select 1 from med_inv_sup 
				where group_id = #{group_id,jdbcType=INTEGER}
					and hos_id = #{hos_id,jdbcType=INTEGER}
					and copy_code = #{copy_code,jdbcType=VARCHAR}
					and inv_id = #{inv_id,jdbcType=INTEGER}
					and sup_id = hos_sup_dict.sup_id)
			<if test="key != null and key != ''">
				AND (
					sup_code like '%${key}%' or 
					sup_name like '%${key}%'
					or
					spell_code like '%${key}%' or 
					wbx_code like '%${key}%'
				)
			</if>
		order by sup_code
	</select>
	
	<!-- 新增供应商材料对应关系 -->
	<insert id="addMedInvSup" parameterType="java.util.List" >
		INSERT INTO MED_INV_SUP (
			group_id, hos_id, copy_code, inv_id, sup_id,is_default
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 	
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.copy_code,jdbcType=VARCHAR},
				#{item.inv_id,jdbcType=INTEGER},
				#{item.sup_id,jdbcType=INTEGER},
				#{item.is_default,jdbcType=INTEGER}
			from dual
		</foreach>
		)t
	</insert>
	<!-- 新增供应商材料对应关系 -->
	<delete id="deleteMedInvSup" parameterType="java.util.Map">
		DELETE FROM med_inv_sup 
		WHERE group_id = #{group_id,jdbcType=INTEGER}   
			and hos_id = #{hos_id,jdbcType=INTEGER}  
			and copy_code = #{copy_code,jdbcType=VARCHAR}  
			and inv_id = #{inv_id,jdbcType=INTEGER} 
	</delete>
	<!-- 材料批量删除供应商材料对应关系 -->
	<delete id="deleteMedInvSupBatch" parameterType="java.util.List">
		DELETE FROM med_inv_sup WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
			</foreach>
	</delete>
	<!-- 根据是否默认供应商删除材料供应商信息 -->
	<update id="deleteMedInvSupByDefault" parameterType="java.util.List">
		DELETE med_inv_sup 
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
				and is_default = #{item.is_default,jdbcType=INTEGER}
			</foreach>
	</update>
	
	<!-- 批量修改材料供应商为非默认 -->
	<update id="updateMedInvSupIsNotDefault" parameterType="java.util.List">
		update med_inv_sup 
			set is_default = 0  
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
			</foreach>
	</update>
	
	<update id="updateMedInvSupIsDefault" parameterType="java.util.List">
		update med_inv_sup 
			set is_default = 1  
		WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and inv_id = #{item.inv_id,jdbcType=INTEGER}
				and sup_id = #{item.sup_id,jdbcType=INTEGER}
			</foreach>
	</update>
	
	<!-- 按分类取最大材料编码 -->
	<select id="queryMedInvMaxByType"  parameterType="java.util.Map" resultType="java.lang.String" >
		select '1' || MAX(inv_code)+1 from MED_INV_dict 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			AND med_type_id = #{med_type_id,jdbcType=INTEGER}
			and is_stop = 0
	</select>
	<!-- 复制时 根据材料名称、规格 查询 材料是否存在 （专用SQL 不允许修改）-->
	<select id="queryMedInvExist" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(inv_model)
        from med_inv
        where 
         group_id = #{group_id,jdbcType=INTEGER}
         and hos_id = #{hos_id,jdbcType=INTEGER}
         and  copy_code = #{copy_code,jdbcType=VARCHAR}
         and  inv_name = #{inv_name,jdbcType=VARCHAR}
         and  inv_model = #{inv_model,jdbcType=VARCHAR}
	</select>
	
	
	<select id="queryExists" resultMap="medInv" parameterType="java.util.Map" >
		SELECT 
			group_id,
			hos_id,
			copy_code,
			inv_id,
			inv_code,
			inv_name,
			alias,
			spell_code,
			wbx_code,
			med_type_id,
			inv_model,
			unit_code,
			amortize_type,
			price_type,
			fac_id,
			plan_price,
			price_rate,
			sell_price,
			is_single_ven,
			is_batch,
			is_quality,
			is_dura,
			is_sec_whg,
			is_shel_make,
			is_add_sale,
			is_bar,
			bar_code_new,
			is_cert,
			is_highvalue,
			is_com,
			is_charge,
			sdate,
			edate,
			per_weight,
			per_volum,
			brand_name,
			agent_name,
			inv_structure,
			inv_usage,
			use_state,
			note,
			alias,
			alias_spell,
			is_bid, bid_date, bid_code, is_involved, is_implant, stora_tran_cond, is_zero_store, manage_type
		FROM MED_INV 
		<where>                     
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND inv_code = #{inv_code,jdbcType=VARCHAR}
			</if>
			<if test="inv_name != null and inv_name != ''">
				AND inv_name = #{inv_name,jdbcType=VARCHAR}
			</if>
			<if test="alias != null and alias != ''">
				AND alias = #{alias,jdbcType=VARCHAR}
			</if>
			<if test="spell_code != null and spell_code != ''">
				AND spell_code = #{spell_code,jdbcType=VARCHAR}
			</if>
			<if test="wbx_code != null and wbx_code != ''">
				AND wbx_code = #{wbx_code,jdbcType=VARCHAR}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
				AND med_type_id = #{med_type_id,jdbcType=INTEGER}
			</if>
			<if test="inv_model != null and inv_model != ''">
				AND inv_model = #{inv_model,jdbcType=VARCHAR}
			</if>
			<if test="unit_code != null and unit_code != ''">
				AND unit_code = #{unit_code,jdbcType=VARCHAR}
			</if>
			<if test="amortize_type != null and amortize_type != ''">
				AND amortize_type = #{amortize_type,jdbcType=INTEGER}
			</if>
			<if test="price_type != null and price_type != ''">
				AND price_type = #{price_type,jdbcType=INTEGER}
			</if>
			<if test="fac_id != null and fac_id != ''">
				AND fac_id = #{fac_id,jdbcType=INTEGER}
			</if>
			<if test="plan_price != null and plan_price != ''">
				AND plan_price = #{plan_price,jdbcType=INTEGER}
			</if>
			<if test="price_rate != null and price_rate != ''">
				AND price_rate = #{price_rate,jdbcType=INTEGER}
			</if>
			<if test="sell_price != null and sell_price != ''">
				AND sell_price = #{sell_price,jdbcType=INTEGER}
			</if>
			<if test="is_single_ven != null and is_single_ven != ''">
				AND is_single_ven = #{is_single_ven,jdbcType=INTEGER}
			</if>
			<if test="is_batch != null and is_batch != ''">
				AND is_batch = #{is_batch,jdbcType=INTEGER}
			</if>
			<if test="is_quality != null and is_quality != ''">
				AND is_quality = #{is_quality,jdbcType=INTEGER}
			</if>
			<if test="is_dura != null and is_dura != ''">
				AND is_dura = #{is_dura,jdbcType=INTEGER}
			</if>
			<if test="stay_time != null and stay_time != ''">
				AND stay_time = #{stay_time,jdbcType=INTEGER}
			</if>
			<if test="is_overstock != null and is_overstock != ''">
				AND is_overstock = #{is_overstock,jdbcType=INTEGER}
			</if>
			<if test="is_sec_whg != null and is_sec_whg != ''">
				AND is_sec_whg = #{is_sec_whg,jdbcType=INTEGER}
			</if>
			<if test="is_shel_make != null and is_shel_make != ''">
				AND is_shel_make = #{is_shel_make,jdbcType=INTEGER}
			</if>
			<if test="is_add_sale != null and is_add_sale != ''">
				AND is_add_sale = #{is_add_sale,jdbcType=INTEGER}
			</if>
			<if test="is_bar != null and is_bar != ''">
				AND is_bar = #{is_bar,jdbcType=INTEGER}
			</if>
			<if test="bar_code_new != null and bar_code_new != ''">
				AND bar_code_new = #{bar_code_new,jdbcType=VARCHAR}
			</if>
			<if test="is_cert != null and is_cert != ''">
				AND is_cert = #{is_cert,jdbcType=INTEGER}
			</if>
			<if test="is_highvalue != null and is_highvalue != ''">
				AND is_highvalue = #{is_highvalue,jdbcType=INTEGER}
			</if>
			<if test="is_com != null and is_com != ''">
				AND is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="is_charge != null and is_charge != ''">
				AND is_charge = #{is_charge,jdbcType=INTEGER}
			</if>
			<if test="sdate != null and sdate != ''">
				AND sdate = #{sdate,jdbcType=DATE}
			</if>
			<if test="edate != null and edate != ''">
				AND edate = #{edate,jdbcType=DATE}
			</if>
			<if test="per_weight != null and per_weight != ''">
				AND per_weight = #{per_weight,jdbcType=INTEGER}
			</if>
			<if test="per_volum != null and per_volum != ''">
				AND per_volum = #{per_volum,jdbcType=INTEGER}
			</if>
			<if test="brand_name != null and brand_name != ''">
				AND brand_name = #{brand_name,jdbcType=VARCHAR}
			</if>
			<if test="agent_name != null and agent_name != ''">
				AND agent_name = #{agent_name,jdbcType=VARCHAR}
			</if>
			<if test="inv_structure != null and inv_structure != ''">
				AND inv_structure = #{inv_structure,jdbcType=VARCHAR}
			</if>
			<if test="inv_usage != null and inv_usage != ''">
				AND inv_usage = #{inv_usage,jdbcType=VARCHAR}
			</if>
			<if test="use_state != null and use_state != ''">
				AND use_state = #{use_state,jdbcType=INTEGER}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note,jdbcType=INTEGER},
			</if>
			<if test="is_bid != null and is_bid != ''">
				AND is_bid = #{is_bid,jdbcType=INTEGER},
			</if>
			<if test="bid_date != null and bid_date != ''">
				AND bid_date = #{bid_date,jdbcType=DATE},
			</if>
			<if test="bid_code != null and bid_code != ''">
				AND bid_code = #{bid_code,jdbcType=VARCHAR},
			</if>
			<if test="is_involved != null and is_involved != ''">
				AND is_involved = #{is_involved,jdbcType=INTEGER},
			</if>
			<if test="is_implant != null and is_implant != ''">
				AND is_implant = #{is_implant,jdbcType=INTEGER},
			</if>
			<if test="stora_tran_cond != null and stora_tran_cond != ''">
				AND stora_tran_cond = #{stora_tran_cond,jdbcType=VARCHAR},
			</if>
			<if test="is_zero_store != null and is_zero_store != ''">
				AND is_zero_store = #{is_zero_store,jdbcType=INTEGER}
			</if>
			<if test="manage_type != null and manage_type != ''">
				AND manage_type = #{manage_type,jdbcType=VARCHAR}
			</if>
		</where>   
		order by inv_code
	</select>
	
	<select id="queryMedInvCertInfo" parameterType="java.util.Map" resultMap="invCert" >
		select b.group_id, b.hos_id, b.copy_code, b.cert_id, b.cert_code, b.cert_inv_name, b.type_id, 
			d.type_name, b.fac_id, b.cert_date, b.issuing_authority, b.start_date, b.end_date,
    		b.cert_memo, b.cert_state, c.fac_code, c.fac_name
		from med_inv_cert_rela a
		left join med_inv_cert b 
			on 
				a.group_id = b.group_id 
				and a.hos_id =b.hos_id
				and a.copy_code =b.copy_code
		     	and a.cert_id = b.cert_id
		left join hos_fac c 
			on 
				b.group_id = c.group_id 
				and b.hos_id = c.hos_id 
				and b.fac_id = c.fac_id
<!-- 		     	and c.is_stop =0 -->
		left join MED_INV_CERT_TYPE d 
			on 
				b.group_id = d.group_id 
				and b.hos_id = d.hos_id 
				and b.type_id = d.type_id
		<where>                     
			<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND a.copy_code = #{copy_code}
			</if>
			<if test="inv_id != null and inv_id != ''">
				AND a.inv_id = #{inv_id}
			</if>
		</where>
		order by b.cert_code asc
	</select>
	
	<!-- 材料改变药品类别查询改类别材料数 -->
	<select id="queryChangeMedTypeCode" parameterType="java.util.Map" resultMap="invCert">
		select count(mid.inv_code) as inv_count, max(mid.inv_code) as inv_code
		  from MED_TYPE_DICT mtd
		  left join MED_INV_DICT mid
		    on mtd.group_id = mid.group_id
		   and mtd.hos_id = mid.hos_id
		   and mtd.copy_code = mid.copy_code
		   and mtd.med_type_id = mid.med_type_id
		 where mtd.group_id = #{group_id,jdbcType=INTEGER}
		   and mtd.hos_id =  #{hos_id,jdbcType=INTEGER}
		   and mtd.copy_code = #{copy_code,jdbcType=VARCHAR}
		   and mtd.med_type_id = #{med_type_id,jdbcType=INTEGER}
		   and mid.is_stop = 0
	</select>
	
	<!-- 停用药品材料验证材料库存 -->
	<select id="queryStopTimeByCode" parameterType="java.util.Map" resultMap="invCert">
		select sum(mih.inv_id) as inv_id,mih.cur_amount as cur_amount
			  from ${table} mih
			 where mih.group_id = #{group_id}
			  and mih.hos_id = #{hos_id}
			  and mih.copy_code = #{copy_code}
			  and mih.inv_id = #{inv_id}
			  group by mih.cur_amount 
	</select>
	
	<select id="queryMedInvSupCode" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select 
		 count(1) 
        from MED_INV_SUP
        where 
         group_id = #{group_id,jdbcType=INTEGER}
         and hos_id = #{hos_id,jdbcType=INTEGER}
         and  copy_code = #{copy_code,jdbcType=VARCHAR}
         and  inv_id = #{inv_id,jdbcType=INTEGER}
         and  sup_id = #{sup_id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据 证件信息 查询 对应的 供应商信息  -->
	<select id="queryCertSup" resultMap="certSupMap" parameterType="java.util.Map" >
		select 
		mcs.sup_id ,
		hsd.sup_code ,
		hsd.sup_name 
        from MED_CERT_SUP mcs
        left join hos_sup_dict hsd
        	on
        		mcs.group_id  = hsd.group_id
        		and mcs.hos_id  = hsd.hos_id
        		and mcs.sup_id = hsd.sup_id
        		and hsd.is_stop = 0 
        where 
         mcs.group_id = #{group_id,jdbcType=INTEGER}
         and mcs.hos_id = #{hos_id,jdbcType=INTEGER}
         and  mcs.copy_code = #{copy_code,jdbcType=VARCHAR}
         and  mcs.cert_id = #{cert_id,jdbcType=INTEGER}
	</select>
	
	<!-- 生产厂商的字典 -->
	<select id="queryHosFacDict" resultMap="facMap">
		SELECT
			fac_id ,
			fac_code||' '||fac_name as fac_name
		FROM HOS_FAC
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="fac_id != null  and fac_id != ''">
				and fac_id = #{fac_id}
			</if>
<!-- 			and is_stop = 0 -->
			<if test="key != null and key != ''">
				and (
				fac_code like '${key}%' or 
				fac_name like '%${key}%'
				or
				spell_code like '%${key}%' 
				or wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by fac_code
	</select>
	
	<!-- 导入过程中获取已插入的材料ID  -->
	<select id="getInvIdByImp"  parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT inv_id
		FROM MED_INV 
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			AND inv_name = #{inv_name,jdbcType=VARCHAR}
			AND inv_model = #{inv_model,jdbcType=VARCHAR}
			AND fac_id = #{fac_id,jdbcType=INTEGER}
			AND rownum = 1
	</select>
	
	
	<select id="queryMedInvInSup" parameterType="java.util.List" resultType="java.util.Map">
		with inv_list as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.inv_id,jdbcType=VARCHAR} as inv_id,
					#{item.sup_id,jdbcType=VARCHAR} as sup_id
				from dual
			</foreach>
		)
		select group_id,hos_id,copy_code,inv_id,sup_id
		from inv_list 
		where inv_id in (
		    select distinct a.inv_id 
			from inv_list a
			join med_inv_sup b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
				and a.sup_id=b.sup_id and a.inv_id=b.inv_id and b.is_default=0
		)
	</select>
	
	<select id="queryMedInvNotInSup" parameterType="java.util.List" resultType="java.util.Map">
		with inv_list as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.inv_id,jdbcType=VARCHAR} as inv_id,
					#{item.sup_id,jdbcType=VARCHAR} as sup_id
				from dual
			</foreach>
		)
		select group_id,hos_id,copy_code,inv_id,sup_id
		from inv_list 
		where inv_id not in (
		      select distinct a.inv_id 
		      from inv_list a
		      join med_inv_sup b on a.group_id=b.group_id and a.hos_id=b.hos_id and a.copy_code=b.copy_code
		      	and a.sup_id=b.sup_id and a.inv_id=b.inv_id
		)
	</select>
	
	<!-- 获取药品属性 -->
	<select id="queryMedSx" parameterType="java.util.Map" resultType="com.chd.hrp.med.entity.info.basic.MedSx" >
      
        SELECT 
            group_id,
            hos_id,
            copy_code,
            med_sx_id,
            med_sx_name,
            is_stop,
            spell_code,
            wbx_code,
            note
        FROM MED_SX 
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
               <if test="copy_code != null and copy_code != ''">
                    AND copy_code = #{copy_code}
               </if>
			    <if test="med_sx_id != null and med_sx_id != '' and med_sx_id != '%%'">
                    AND med_sx_id like #{med_sx_id}
               </if>
			    <if test="med_sx_name != null and med_sx_name != '' and med_sx_name != '%%'">
                    AND med_sx_name like #{med_sx_name}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND is_stop = #{is_stop}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND wbx_code = #{wbx_code}
               </if>
			    <if test="note != null and note != ''">
                    AND note = #{note}
               </if>
        </where>   
				order by group_id asc
    </select>
    <!-- 获取药品属性 -->
	<select id="queryMedJx" parameterType="java.util.Map" resultType="com.chd.hrp.med.entity.info.basic.MedJx" >
      
        SELECT 
            group_id,
            hos_id,
            copy_code,
            med_jx_id,
            med_jx_name,
            is_stop,
            spell_code,
            wbx_code,
            note
        FROM MED_JX 
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
               <if test="copy_code != null and copy_code != ''">
                    AND copy_code = #{copy_code}
               </if>
			    <if test="med_jx_id != null and med_jx_id != '' and med_jx_id != '%%'">
                    AND med_jx_id like #{med_sx_id}
               </if>
			    <if test="med_jx_name != null and med_jx_name != '' and med_jx_name != '%%'">
                    AND med_sx_name like #{med_sx_name}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND is_stop = #{is_stop}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND wbx_code = #{wbx_code}
               </if>
			    <if test="note != null and note != ''">
                    AND note = #{note}
               </if>
        </where>   
				order by group_id asc
    </select>
    
    
    
    <!-- 用于导出 -->
	<select id="queryMedInvList" resultType="java.util.Map" parameterType="java.util.Map" >
		SELECT 
			a.group_id, a.hos_id, a.copy_code, a.inv_id, mid.inv_no, a.inv_code, a.inv_name, a.spell_code, 
			a.wbx_code, a.med_type_id, mid.med_type_no,b.med_type_name, a.inv_model, a.unit_code, c.unit_name, 
			a.amortize_type, a.price_type, a.fac_id, mid.fac_no, e.fac_code, e.fac_name, a.plan_price, 
			a.price_rate, a.sell_price,  a.sdate, a.edate, a.agent_name, a.brand_name, a.inv_usage, 
			a.inv_structure, a.per_weight, a.per_volum, a.abc_type,  a.is_single_ven, a.use_state, 
			a.is_charge, a.is_highvalue, a.is_dura, a.is_com, a.is_bar, a.is_per_bar, a.is_inv_bar, a.is_quality, a.is_disinfect, 
			a.is_cert, a.is_sec_whg, a.is_shel_make, a.note, a.is_bid, a.bid_date, a.bid_code, a.is_involved, a.is_implant, 
			a.stora_tran_cond, a.is_zero_store,a.alias,a.alias_spell, a.manage_type, a.memory_encoding, a.source_plan, 
			mid.is_bid,mid.bid_date,mid.bid_code,
			a.med_jx_id,g.med_jx_name,a.med_sx_id,f.med_sx_name,a.bqplxs,a.mzplxs,hsd.sup_name
		FROM med_inv a 
		left join med_inv_dict mid
			on a.group_id = mid.group_id
			and a.hos_id = mid.hos_id
			and a.copy_code = mid.copy_code
			and a.inv_id = mid.inv_id
			and mid.is_stop = 0
		left join med_type_dict b
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.med_type_id = b.med_type_id
			and b.is_stop = 0
		left join hos_unit c
			on a.group_id = c.group_id
			and a.hos_id = c.hos_id
			and a.unit_code = c.unit_code
			and c.is_stop=0
		left join hos_fac e
			on a.group_id = e.group_id
			and a.hos_id = e.hos_id
			and a.fac_id = e.fac_id
		left join med_sx f
			on a.group_id = f.group_id
			and a.hos_id = f.hos_id
			and a.med_sx_id= f.med_sx_id
			and f.is_stop=0
		left join med_jx g
			on a.group_id = g.group_id
			and a.hos_id = g.hos_id
			and a.med_jx_id= g.med_jx_id
			and g.is_stop=0
		left join med_inv_sup mis
		on
		     a.group_id = mis.group_id
		     and a.hos_id = mis.hos_id
		     and a.copy_code = mis.copy_code
		     and a.inv_id = mis.inv_id
		     and mis.is_default = 1
		left join hos_sup_dict hsd
		on
		     mis.sup_id = hsd.sup_id
		     and hsd.is_stop = 0
		     
		WHERE a.group_id = #{group_id,jdbcType=INTEGER}    
			and a.hos_id = #{hos_id,jdbcType=INTEGER} 
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}  
			
		<!-- 2017/03/15 台州中心医院需求:查询有药品分类权限的材料 -->
		and b.med_type_id in (select vu.perm_code from  V_USER_DATA_PERM vu 
									where vu.group_id =#{group_id,jdbcType=INTEGER} AND vu.hos_id = #{hos_id,jdbcType=INTEGER}
									AND vu.user_id = #{user_id,jdbcType=INTEGER} 
									AND vu.table_code = 'MED_TYPE_DICT' 
									 AND vu.is_read = 1 AND vu.is_write = 1
									)
			<if test="inv_id != null and inv_id != ''">
				AND a.inv_id = #{inv_id,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				AND a.inv_code like '${inv_code}%'
			</if>
			<if test="inv_name != null and inv_name != ''">
				and (a.inv_name like '%${inv_name}%'
				     or a.alias like '%${inv_name}%'
				     or upper(a.spell_code) like '%${inv_name}%'
				     or upper(a.wbx_code) like '%${inv_name}%'
				     or upper(a.alias_spell) like '%${inv_name}%'
				     or lower(a.spell_code) like '%${inv_name}%'
				     or lower(a.wbx_code) like '%${inv_name}%'
				     or lower(a.alias_spell) like '%${inv_name}%'
				     )
			</if>
			<if test="med_type_code != null and med_type_code != ''">
				AND b.med_type_code like '${med_type_code}%'
			</if>
			<if test="fim_type_code != null and fim_type_code != ''">
				AND b.fim_type_code like '${fim_type_code}%'
			</if>
			<if test="amortize_type != null and amortize_type != ''">
				AND a.amortize_type = #{amortize_type,jdbcType=INTEGER}
			</if>
			<if test="fac_id != null and fac_id != ''">
				AND a.fac_id = #{fac_id,jdbcType=INTEGER}
			</if>
			<if test="is_highvalue != null and is_highvalue != ''">
				AND a.is_highvalue = #{is_highvalue,jdbcType=INTEGER}
			</if>
			<if test="is_charge != null and is_charge != ''">
				AND a.is_charge = #{is_charge,jdbcType=INTEGER}
			</if>
			<if test="alias != null and alias != ''">
				AND (a.alias like '%${alias}%'
					or LOWER(a.alias_spell) like '%${alias}%'
					or UPPER(a.alias_spell) like '%${alias}%'
				)
			</if>
			<if test="inv_model != null and inv_model != ''">
				and (a.inv_model like '%${inv_model}%'
				     or upper(a.spell_code) like '%${inv_model}%'
				     or upper(a.wbx_code) like '%${inv_model}%'
				     or lower(a.spell_code) like '%${inv_model}%'
				     or lower(a.wbx_code) like '%${inv_model}%'
			     )
			</if>
			<if test="is_involved != null and is_involved != '' ">
				and a.is_involved = #{is_involved,jdbcType=INTEGER}
			</if>
			<if test="is_implant != null and is_implant != '' ">
				and a.is_implant = #{is_implant,jdbcType=INTEGER}
			</if>
			<if test="is_com != null and is_com != '' ">
				and a.is_com = #{is_com,jdbcType=INTEGER}
			</if>
			<if test="bid_code != null and bid_code != '' ">
				and a.bid_code like  '%${bid_code}%' 
			</if>
			<if test="cert_code != null and cert_code != '' ">
				and mic.cert_code like '%${cert_code}%'
			</if>
			<if test="start_date != null and start_date != '' ">
				and mic.start_date &gt;= to_date(#{start_date ,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="end_date != null and end_date != '' ">
				and mic.end_date &lt;= to_date(#{end_date ,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="use_state != null and use_state != ''"> 
				AND a.use_state = #{use_state,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != '' ">
				and a.state = #{state,jdbcType=INTEGER}
			</if>
		order by a.inv_code 
	</select>
	
	<!-- 查询药品用于导入 -->
	<select id="queryMedInvListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT inv_id, inv_code, inv_name, inv_model
		FROM med_inv
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询药品分类用于导入 -->
	<select id="queryMedTypeListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT med_type_id, med_type_no, med_type_code, med_type_name
		FROM med_type_dict
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND is_stop = 0
	</select>
	
	<!-- 查询药品属性用于导入 -->
	<select id="queryMedSxListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT med_sx_id, med_sx_name
		FROM med_sx
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND is_stop = 0
	</select>
	
	<!-- 查询药品剂型用于导入 -->
	<select id="queryMedJxListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT med_jx_id, med_jx_name
		FROM med_jx
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND is_stop = 0
	</select>
	
	<!-- 查询计量单位用于导入 -->
	<select id="queryHosUnitListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT unit_code, unit_name
		FROM hos_unit
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0
	</select>
	
	<!-- 查询生产厂商用于导入 -->
	<select id="queryHosFacListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT fac_id, fac_no, fac_code, fac_name
		FROM hos_fac_dict
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0
	</select>
	
	<!-- 查询供应商用于导入 -->
	<select id="queryHosSupListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT sup_id, sup_no, sup_code, sup_name
		FROM hos_sup_dict
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND is_stop = 0
	</select>
	
	<!-- 查询管理类别用于导入 -->
	<select id="queryManaTypeListForImport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT manage_type, manage_type_name
		FROM med_inv_mana_type
		WHERE group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
</mapper>

