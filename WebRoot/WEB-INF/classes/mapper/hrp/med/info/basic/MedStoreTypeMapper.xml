<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.info.basic.MedStoreTypeMapper">
	
	<resultMap id="medStoreType" type="com.chd.hrp.med.entity.MedStoreType">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="store_id" column="store_id"/>
	<result property="med_type_id" column="med_type_id"/>
	</resultMap>
	
	<resultMap id="map" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="med_type_id" column="med_type_id"/>
	<result property="med_type_code" column="med_type_code"/>
	<result property="med_type_name" column="med_type_name"/>
	<result property="store_id" column="store_id"/>
	</resultMap>
	<insert id="addMedStoreType" useGeneratedKeys="true" >
	
		INSERT INTO MED_STORE_TYPE (
		group_id
		,
		hos_id
		,
		copy_code
		,
		store_id
		,
		med_type_id
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{store_id,jdbcType=INTEGER}
		,
		#{med_type_id,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatchMedStoreType" parameterType="java.util.List" >
	
		INSERT INTO MED_STORE_TYPE (
		group_id
		,
		hos_id
		,
		copy_code
		,
		store_id
		,
		med_type_id
		
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.store_id,jdbcType=INTEGER}
			,
			#{item.med_type_id,jdbcType=INTEGER}
				from dual
		</foreach>
	</insert>
	
	<update id="updateMedStoreType" parameterType="java.util.Map">
	
		UPDATE med_store_type SET
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		store_id =#{store_id,jdbcType=INTEGER}
		 and 
		med_type_id =#{med_type_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMedStoreType" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE med_store_type SET
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			store_id = #{item.store_id,jdbcType=INTEGER}
			 and 
			med_type_id = #{item.med_type_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMedStoreType" parameterType="java.util.Map">
	
		DELETE FROM med_store_type 
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="med_type_id != null and med_type_id != ''">
			AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if> 
		</where>
	
	</delete>
	<delete id="deleteBatchMedStoreType" parameterType="java.util.List">
		DELETE FROM med_store_type 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				store_id = #{item.store_id,jdbcType=INTEGER}
				<if test="item.med_type_id != null and item.med_type_id != '' ">
					and med_type_id = #{item.med_type_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>
			
	
	</delete>
	<select id="queryMedStoreType" parameterType="java.util.Map" resultMap="medStoreType" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		store_id,
		med_type_id
		FROM MED_STORE_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryMedStoreTypeByCode" resultType="com.chd.hrp.med.entity.MedStoreType" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		store_id,
		med_type_id
		FROM med_store_type 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		</where>    
	</select>
	<select id="queryMedStoreTypeByUniqueness" resultType="com.chd.hrp.med.entity.MedStoreType" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		store_id,
		med_type_id
		FROM MED_STORE_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 查询出药品类别字典表 MED_TYPE中IS_STOP=0的所有药品类别记录 -->
	<select id="queryStoreType" parameterType="java.util.Map" resultMap="map" >
	
		SELECT 
		mt.group_id,
		mt.hos_id,
		mt.copy_code,
		mt.med_type_id,
		mt.med_type_code,
		mt.med_type_name,
		mst.store_id 
		FROM MED_TYPE mt left join MED_STORE_TYPE mst
			ON
				mt.group_id = mst.group_id  and 
				mt.hos_id = mst.hos_id  and
				mt.copy_code = mst.copy_code  and
				mt.med_type_id = mst.med_type_id 
				
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND mt.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mt.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mt.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND mt.med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		<if test="type_level != null and type_level != ''">
		AND mt.type_level = #{type_level,jdbcType=INTEGER}
		</if>
		<if test="store_id != null and store_id != ''">
		 AND mst.store_id = #{store_id,jdbcType=INTEGER}
		</if>
		
		and mt.is_stop = 0
		and mt.is_last = 1
		</where>   
		order by mt.med_type_id asc
	</select>
	
	<select id="queryExist" parameterType="java.util.Map" resultType="java.lang.Long" >
	
		SELECT count(med_type_id)
		FROM MED_STORE_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	
	
	<select id="queryMedTypeByStore" parameterType="java.util.Map" resultMap="map" >
	
		SELECT 
		mt.group_id,
		mt.hos_id,
		mt.copy_code,
		mt.med_type_id,
		mt.med_type_code,
		mt.med_type_name
		
		FROM MED_TYPE mt 
		where 
	mt.med_type_id  not in 
	(
	  select med_type_id from  MED_STORE_TYPE
         where store_id=#{store_id,jdbcType=INTEGER}
	   <if test="group_id != null and group_id != ''">
		 AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
	)
		                    
		<if test="group_id != null and group_id != ''">
		AND mt.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND mt.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND mt.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="med_type_id != null and med_type_id != ''">
		AND mt.med_type_id = #{med_type_id,jdbcType=INTEGER}
		</if>
		
		
		and mt.is_stop = 0
		and mt.is_last=1
		  
		order by mt.med_type_id asc
	</select>
	
	
	<delete id="deleteBatchMedTypeByStore" parameterType="java.util.List">
		DELETE FROM MED_STORE_TYPE
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and copy_code = #{item.copy_code,jdbcType=VARCHAR}
				and store_id = #{item.store_id,jdbcType=INTEGER}
				<if test=" item.med_type_id != null and item.med_type_id != ''">
					and med_type_id = #{item.med_type_id,jdbcType=INTEGER}
				</if>
			</foreach>
		</where>

	</delete>
	
	
	<insert id="addBatchMedTypeByStore" parameterType="java.util.List">
		INSERT INTO MED_STORE_TYPE (
			group_id , 
			hos_id , 
			copy_code , 
			store_id , 
			med_type_id
			
		)
		<foreach collection="list" item="item" index="index" separator="union all">
			SELECT 
				#{item.group_id,jdbcType=INTEGER} , 
				#{item.hos_id,jdbcType=INTEGER} , 
				#{item.copy_code,jdbcType=VARCHAR} , 
				#{item.store_id,jdbcType=INTEGER} , 
				#{item.med_type_id,jdbcType=INTEGER}
			FROM dual
		</foreach>
	</insert>
	
</mapper>

