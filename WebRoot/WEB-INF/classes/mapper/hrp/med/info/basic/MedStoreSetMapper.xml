<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.info.basic.MedStoreSetMapper">
	
	<resultMap id="medStoreSet" type="com.chd.hrp.med.entity.MedStoreSet">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="set_id" column="set_id"/>
		<result property="set_code" column="set_code"/>
		<result property="set_name" column="set_name"/>
	</resultMap> 
	
	<resultMap id="storeDetail" type="java.util.Map">
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_code" column="store_code"/>
	<result property="store_name" column="store_name"/>
	<result property="set_id" column="set_id"/>
	<result property="is_account" column="is_account"/>
	</resultMap>
	
	<insert id="addMedStoreSet" useGeneratedKeys="true" >
	
		INSERT INTO MED_STORE_SET (
		group_id
		,
		hos_id
		,
		set_id
		,
		set_code
		,
		set_name
		
		) VALUES (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		MED_STORE_SET_SEQ.nextval
		,
		#{set_code,jdbcType=VARCHAR}
		,
		#{set_name,jdbcType=VARCHAR}
		
		)
	
	</insert>
	<insert id="addBatchMedStoreSet" parameterType="java.util.List" >
	
		INSERT INTO MED_STORE_SET (
			set_id
			,
			group_id
			,
			hos_id
			,
			set_code
			,
			set_name
		
		) select MED_STORE_SET_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.set_code,jdbcType=VARCHAR}
			,
			#{item.set_name,jdbcType=VARCHAR}
				from dual
		</foreach>
			)t
	</insert>
	
	<update id="updateMedStoreSet" parameterType="java.util.Map">
	
		UPDATE med_store_set 
		
		<set>
		
			<if test="set_name != null and set_name != ''">
					set_name = #{set_name,jdbcType=VARCHAR},
			</if>
			<if test="set_code != null and set_code != ''">
					set_code = #{set_code,jdbcType=VARCHAR},
			</if>
			
		
		</set>
		
		
		WHERE 
		set_id =#{set_id,jdbcType=INTEGER}
		
	</update>
	<update id="updateBatchMedStoreSet" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE med_store_set SET
			group_id = #{item.group_id,jdbcType=INTEGER}
			,
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			,
			set_code = #{item.set_code,jdbcType=VARCHAR}
			,
			set_name = #{item.set_name,jdbcType=VARCHAR}
			
			WHERE 
			set_id = #{item.set_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMedStoreSet" parameterType="java.util.Map">
	
		DELETE FROM med_store_set WHERE
		set_id = #{set_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMedStoreSet" parameterType="java.util.List">
		DELETE FROM med_store_set WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				set_id = #{item.set_id,jdbcType=INTEGER}
				
			</foreach>
	
	</delete>
	<select id="queryMedStoreSet" parameterType="java.util.Map" resultMap="medStoreSet" >
	
		SELECT 
			group_id,
			hos_id,
			set_id,
			set_code,
			set_name
		FROM MED_STORE_SET 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="set_id != null and set_id != ''">
			AND set_id = #{set_id,jdbcType=INTEGER}
			</if>
			<if test="set_code != null and set_code != ''">
			AND set_code like #{set_code}||'%'
			</if>
			<if test="set_name != null and set_name != ''">
			AND set_name like '%'||#{set_name}||'%'
			</if>
		</where>   
		order by set_code asc
	</select>
	<select id="queryMedStoreSetByCode" resultType="com.chd.hrp.med.entity.MedStoreSet" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		set_id,
		set_code,
		set_name
		FROM med_store_set 
		WHERE 
		set_id = #{set_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryMedStoreSetByUniqueness" resultType="com.chd.hrp.med.entity.MedStoreSet" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		set_id,
		set_code,
		set_name
		FROM MED_STORE_SET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="set_id != null and set_id != ''">
		AND set_id = #{set_id,jdbcType=INTEGER}
		</if>
		<if test="set_code != null and set_code != ''">
		AND set_code = #{set_code,jdbcType=VARCHAR}
		</if>
		<if test="set_name != null and set_name != ''">
		AND set_name = #{set_name,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 根据输入的 名称查询 08108 虚仓仓库设置（判断名称是否已存在）  -->
	<select id="queryMedStoreSetByName" resultType="com.chd.hrp.med.entity.MedStoreSet" parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		set_id,
		set_code,
		set_name
		FROM med_store_set 
		<where>
		
		   
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND (set_code = #{set_code,jdbcType=VARCHAR} 
				or set_name = #{set_name,jdbcType=VARCHAR}
			)
			
			
		</where>
	</select>
	
	<select id="queryMedStoreData" resultMap="storeDetail">
		select  
				a.store_id,
				a.store_no , 
				a.store_code,
				a.store_name,
				t.set_id
		from HOS_STORE_DICT a 
		inner join MED_STORE ms 
			ON 
				a.group_id = ms.group_id and 
				a.hos_id = ms.hos_id and  
				a.store_id = ms.store_id  and 
				a.is_stop = 0
		<!-- left join 
		  v_user_data_perm
		b on b.perm_code = a.store_id and a.group_id = b.group_id and a.hos_id = b.hos_id -->
		left join ( select store_id, set_id , group_id , hos_id  from  MED_STORE_DETAIL 
					where set_id = ${set_id} )  t
			on a.group_id = t.group_id and 
			   a.hos_id  = t.hos_id and 
			   a.store_id = t.store_id
		WHERE  a.group_id = #{group_id} 
			AND a.hos_id = #{hos_id}
			AND a.is_stop = 0
			and a.store_id in (
				select b.perm_code from v_user_data_perm b 
				where b.group_id = #{group_id}  and   b.hos_id = #{hos_id}
					AND b.table_code = 'HOS_STORE_DICT' 
					AND b.IS_READ = 1 
					AND b.IS_WRITE = 1 
					and b.user_id = #{user_id} 
			)
			<if test="key != null and key != ''">
				and (
					store_code like '${key}%' or
					store_name like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
	</select>
	
	<select id="queryMedStoreDetail" resultMap="storeDetail">
		SELECT a.set_id, a.store_id, b.store_code, b.store_name, a.is_account
		FROM med_store_detail a 
		LEFT JOIN hos_store_dict b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.store_id = b.store_id
			AND b.is_stop = 0 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			AND a.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND a.set_id = #{set_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 是否含有已在别的库房设置结账的库房 -->
	<select id="existsIsAccount" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT a.set_name 
		FROM med_store_set a 
		LEFT JOIN med_store_detail b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.set_id = b.set_id 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			AND a.hos_id = #{hos_id,jdbcType=INTEGER} 
			AND a.set_id &lt;&gt; #{set_id,jdbcType=INTEGER} 
			AND b.store_id = #{store_id,jdbcType=INTEGER} 
			AND b.is_account = 1 
	</select>
	
	<!-- 保存虚仓对应仓库是否结账 -->
	<delete id="updateBatchForIsAccount" parameterType="java.util.Map">
		BEGIN	
			<!-- 先把虚仓下所有的库房更新为不结账 -->
			UPDATE med_store_detail 
			SET is_account = 0 
			WHERE group_id = #{group_id,jdbcType=INTEGER} 
				AND hos_id = #{hos_id,jdbcType=INTEGER} 
				AND set_id = #{set_id,jdbcType=INTEGER};
				
			<!-- 再按页面更新指定库房为结账 -->
			UPDATE med_store_detail
			SET is_account = 1 
			WHERE group_id = #{group_id,jdbcType=INTEGER} 
				AND hos_id = #{hos_id,jdbcType=INTEGER} 
				AND set_id = #{set_id,jdbcType=INTEGER}
				AND store_id in 
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
				#{item.store_id,jdbcType=INTEGER}
			</foreach>;
		END;
	</delete>
</mapper>

