<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.requrie.store.MedStoreRequirePlanMapper">

	<resultMap id="medStoreReqMain" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="req_id" column="req_id" />
		<result property="req_code" column="req_code" />
		
		<result property="pur_id" column="pur_id" />
		<result property="pur_code" column="pur_code" />
		
		<result property="req_code" column="req_code" />
		<result property="brif" column="brif" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_id" column="dept_id" />
		
		<result property="dept_name" column="dept_name" />
		<result property="stock_no" column="stock_no" />
		<result property="stock_id" column="stock_id" />
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		
		<result property="maker" column="maker" />
		<result property="make_date" column="make_date" />
		<result property="checker" column="checker" />
		<result property="check_date" column="check_date" />
		<result property="state" column="state" />
		<result property="req_type" column="req_type" />
		<result property="come_from" column="come_from" />
		<result property="return_reason" column="return_reason" />
		<result property="other_inv" column="other_inv" />
		
		<result property="inv_id" column="inv_id" />
		<result property="inv_no" column="inv_no" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_name" column="unit_name" />
		<result property="begin_amount" column="begin_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="amount" column="amount" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		
		
		<result property="differ" column="differ" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="req_amount" column="req_amount" />
		<result property="exec_amount" column="exec_amount" />
		
		<result property="last_expend" column="last_expend" />
		<result property="last_plan" column="last_plan" />
		<result property="this_plan" column="this_plan" />
		
	</resultMap>
	
	<resultMap id="medStoreReqDetail" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="req_id" column="req_id" />
		<result property="req_code" column="req_code" />
		<result property="req_detail_id" column="req_detail_id" />
		
		<result property="inv_no" column="inv_no" />
		<result property="inv_id" column="inv_id" />
		<result property="inv_code" column="inv_code" />
		<result property="inv_name" column="inv_name" />
		<result property="inv_model" column="inv_model" />
		<result property="unit_code" column="unit_code" />
		<result property="unit_name" column="unit_name" />
		<result property="num_exchange" column="num_exchange" />
		<result property="num" column="num" />
		
		<result property="store_id" column="store_id" />
		<result property="store_no" column="store_no" />		
		<result property="store_code" column="store_code" />
		<result property="store_name" column="store_name" />
		
		<result property="amount" column="amount" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		<result property="sum_money" column="sum_money" />
	
		<result property="pack_code" column="pack_code" />
		<result property="pack_name" column="pack_name" />
		
		<result property="sup_no" column="sup_no" />
		<result property="sup_id" column="sup_id" />
		<result property="sup_code" column="sup_code" />
		<result property="sup_name" column="sup_name" />
		
		<result property="fac_code" column="fac_code" />
		<result property="fac_name" column="fac_name" />
		<result property="fac_id" column="fac_id" />
		<result property="fac_no" column="fac_no" />
		<result property="memo" column="memo" />
		<result property="is_closed" column="is_closed" />
		
		<result property="secu_limit" column="secu_limit" />
		<result property="period_num" column="period_num" />
		<result property="period" column="period" />
		<result property="warn_amount" column="warn_amount" />
		<result property="cur_amount" column="cur_amount" />
		<result property="secu_limit" column="secu_limit" />
		<result property="differ_amount" column="differ_amount" />
		<result property="differ_num" column="differ_num" />
		<result property="abs_differ" column="abs_differ" />
		<result property="abs_num" column="abs_num" />
		
		<result property="plan_amount" column="plan_amount" />
		<result property="plan_price" column="plan_price" />
		
		
		<result property="differ" column="differ" />
		<result property="price" column="price" />
		<result property="money" column="money" />
		
		<result property="req_amount" column="req_amount" />
		<result property="exec_amount" column="exec_amount" />
		
		<result property="last_expend" column="last_expend" />
		<result property="last_plan" column="last_plan" />
		<result property="this_plan" column="this_plan" />
		
	</resultMap>
	
	
	<!-- 编制页面查询  -->
	<select id="queryStorePlan" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
		  mrm.group_id,
		  mrm.hos_id,
		  mrm.copy_code,
		  mrm.req_id,
		  mrm.req_code,
		  mrm.dept_id,
		  mrm.dept_no,
		  hdd.dept_code,
		  hdd.dept_name,
		  mrm.stock_id,
		  mrm.stock_no,
		  hsd.store_code,
		  hsd.store_name,
		  su.user_name maker,
		  mrm.make_date,
		  su1.user_name checker,
		  mrm.check_date,
		  mrm.state,
		  mrm.other_inv,
		  mrm.return_reason,
		  mrm.brif,
		  mrm.come_from,
		  mdd.field_desc
		from MED_REQ_STORE_MAIN mrm
		left join hos_dept_dict hdd on mrm.group_id = hdd.group_id
		    and mrm.hos_id = hdd.hos_id
		    and mrm.dept_id = hdd.dept_id 
		    <if test="show_history == 1">
				and mrm.dept_no = hdd.dept_no
			</if>
			<if test="show_history == 0">
				and hdd.is_stop = 0
			</if>
		<!-- join v_user_data_perm b  on hdd.group_id = b.group_id 
			and hdd.hos_id = b.hos_id
			and b.user_id = #{user_id,jdbcType=INTEGER} 
			and b.table_code = 'HOS_DEPT_DICT' 
			and b.perm_code = hdd.dept_id 
			and b.is_read = 1 
			and b.is_write = 1 -->
		left join hos_store_dict hsd on mrm.group_id = hsd.group_id
			and mrm.hos_id = hsd.hos_id
			and mrm.stock_id = hsd.store_id
			<if test="show_history == 1">
				and mrm.stock_no = hsd.store_no
			</if>
			<if test="show_history == 0">
				and hsd.is_stop = 0
			</if>
		<!-- join v_user_data_perm b1  on hsd.group_id = b1.group_id 
			and hsd.hos_id = b1.hos_id
			and b1.user_id = #{user_id,jdbcType=INTEGER} 
			and b1.table_code = 'HOS_STORE_DICT' 
			and b1.perm_code = hsd.store_id 
			and b1.is_read = 1 
			and b1.is_write = 1 -->
		left join sys_user su on mrm.maker = su.user_id
		     and su.copy_code = mrm.copy_code
		     and su.hos_id = mrm.hos_id
		     and su.group_id = mrm.group_id
		left join sys_user su1 on su1.user_id = mrm.checker
		     and su1.copy_code = mrm.copy_code
		     and su1.hos_id = mrm.hos_id
		     and su1.group_id = mrm.group_id
		left join med_data_dict mdd on mdd.field_code = 'STORE_REQ_FROM'
     		 and mdd.data_code='08004'
     		 and mrm.come_from = mdd.field_value 							
		<where>
		hsd.store_id in (select b1.perm_code from v_user_data_perm b1 
					    where b1.group_id = #{group_id,jdbcType=INTEGER}
						and  b1.hos_id = #{hos_id,jdbcType=INTEGER}
						and b1.user_id = #{user_id,jdbcType=INTEGER} 
						and b1.table_code = 'HOS_STORE_DICT' 
						and b1.is_read = 1 
						and b1.is_write = 1
						)
			<if test="group_id != null and group_id != ''">
				and  mrm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND mrm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mrm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="req_id != null and req_id != ''">
				AND mrm.req_id = #{req_id,jdbcType=INTEGER}
			</if>
			<if test="req_code != null and req_code != ''">
				AND mrm.req_code like '${req_code}%'
			</if>
			<if test="begin_date != null and begin_date != ''">
				AND mrm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				AND  mrm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND mrm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND mrm.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="brif != null and brif != ''">
				AND mrm.brif  like  '%'||#{brif,jdbcType=VARCHAR}||'%'
			</if>
			<if test="store_no != null and store_no != ''">
				AND mrm.stock_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				AND mrm.stock_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				AND mrm.state = #{state,jdbcType=INTEGER}
			</if>
			
		</where>
		order by mrm.req_id desc
	</select>
	
	<!--科室需求计划生成 科室需求计划中仓库列表  -->
	<select id="queryStoreByDept" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
	       hsd.store_id||','||hsd.store_no id,
	       hsd.store_code||' '||hsd.store_name text
		from hos_store_dict hsd
		<!-- join v_user_data_perm vdp 
      		on hsd.group_id = vdp.group_id 
      		and hsd.hos_id = vdp.hos_id
      		and hsd.store_id  = vdp.perm_code
    		and vdp.user_id = #{user_id,jdbcType=INTEGER}
    		and vdp.table_code = 'HOS_STORE_DICT' 
			and vdp.is_read = 1 
			and vdp.is_write = 1 -->
		right join (
		     select distinct group_id, hos_id, copy_code,stock_id store_id,stock_no store_no
		     from med_require_main 
		     where group_id = #{group_id,jdbcType=INTEGER}
		           and hos_id = #{hos_id,jdbcType=INTEGER}
		           and copy_code = #{copy_code,jdbcType=VARCHAR}
		           and stock_id is not null      
		) mrm on hsd.group_id = mrm.group_id
	  		and hsd.hos_id = mrm.hos_id
	  		and hsd.store_id = mrm.store_id
	  		and hsd.store_no = mrm.store_no
	  	<where>
	  	hsd.store_id in (select vdp.perm_code from  v_user_data_perm vdp 
				      		where vdp.group_id = #{group_id,jdbcType=INTEGER}
				      		and  vdp.hos_id = #{hos_id,jdbcType=INTEGER}
				    		and vdp.user_id = #{user_id,jdbcType=INTEGER}
				    		and vdp.table_code = 'HOS_STORE_DICT' 
							and vdp.is_read = 1 
							and vdp.is_write = 1
							)
	  		<if test="group_id != null and group_id != ''">
				 hsd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hsd.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="key != null and key != ''">
				and (
					hsd.store_code like '${key}%' or
					hsd.store_name like '%${key}%' or
					hsd.spell_code like '%${key}%' or
					hsd.wbx_code like '%${key}%'
				)
			</if>
	  	</where>
	  	order by hsd.store_code 
	</select>
	
	<!--科室需求计划生成 仓库与药品对应关系中申领仓库  -->
	<select id="queryStoreByInv" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
	       hsd.store_id||','||hsd.store_no id,
	       hsd.store_code||' '||hsd.store_name text
		from med_store_inv msi 
		<!-- join v_user_data_perm vdp  on msi.group_id = vdp.group_id 
	     	and msi.hos_id = vdp.hos_id
	     	and vdp.user_id = #{user_id,jdbcType=INTEGER}
	     	and vdp.table_code = 'HOS_STORE_DICT' 
	     	and msi.store_id =vdp.perm_code  
	     	and vdp.is_read = 1 
	     	and vdp.is_write = 1 -->
		left join hos_store_dict hsd
	     	on msi.group_id = hsd.group_id
	     	and msi.hos_id = hsd.hos_id
	     	and msi.store_id = hsd.store_id
	     	and hsd.is_stop = 0
		<where>
		msi.store_id in (select vdp.perm_code from  v_user_data_perm vdp 
					    where vdp.group_id = #{group_id,jdbcType=INTEGER} 
				     	and  vdp.hos_id = #{hos_id,jdbcType=INTEGER}
				     	and vdp.user_id = #{user_id,jdbcType=INTEGER}
				     	and vdp.table_code = 'HOS_STORE_DICT' 
				     	and vdp.is_read = 1 
				     	and vdp.is_write = 1
				     	)
	  		<if test="group_id != null and group_id != ''">
				 msi.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND msi.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND msi.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="key != null and key != ''">
				and (
					hsd.store_code like '${key}%' or
					hsd.store_name like '%${key}%' or
					hsd.spell_code like '%${key}%' or
					hsd.wbx_code like '%${key}%'
				)
			</if>
			and msi.is_apply = 1
	  	</where>
	  order by hsd.store_code
	</select>
	
	<!-- 科室需求计划生成  查询 -->
	<select id="queryDeptGDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		
		select mrd.group_id,mrd.hos_id,mrd.copy_code,mrd.req_id,mrd.req_code,mrd.inv_id,mrd.inv_no,
			mrd.num_exchange,mrd.pack_code,hp.pack_name,mrd.req_detail_id,
       		mid.inv_code,mid.inv_name,mid.inv_model,hu.unit_code,hu.unit_name,nvl(mrd.amount,0) amount, 
       		nvl(mrd.amount,0) exec_amount, nvl(mrd.price,0) price, nvl(mrd.price,0)*nvl(mrd.amount,0) amount_money,
       		hsd.store_id,hsd.store_no,hsd.store_code,hsd.store_name
		from med_require_detail mrd 
		left join med_require_main mrm on mrd.group_id = mrm.group_id and mrd.hos_id = mrm.hos_id
		    and mrd.copy_code = mrm.copy_code and mrd.req_id = mrm.req_id
		<if test="is_store == 1">
			left join hos_store_dict hsd on mrm.group_id = hsd.group_id and mrm.hos_id = hsd.hos_id
				and mrm.stock_id = hsd.store_id and mrm.stock_no = hsd.store_no and hsd.is_stop = 0
			<!-- left join v_user_data_perm vdp  on hsd.group_id = vdp.group_id  and hsd.hos_id = vdp.hos_id
		    	and hsd.store_id  = vdp.perm_code and vdp.user_id = #{user_id,jdbcType=INTEGER}
		    	and vdp.table_code = 'HOS_STORE_DICT'  and vdp.is_read = 1  and vdp.is_write = 1 --> 
		</if>
		<if test="is_store == 0">
			left join med_store_inv msi on mrd.group_id = msi.group_id and mrd.hos_id = msi.hos_id
				and mrd.copy_code = msi.copy_code and mrd.inv_id = msi.inv_id and msi.is_apply = 1
			left join hos_store_dict hsd on msi.group_id = hsd.group_id and msi.hos_id = hsd.hos_id
				and msi.store_id = hsd.store_id and hsd.is_stop = 0 
			<!-- left join v_user_data_perm vdp  on hsd.group_id = vdp.group_id  and hsd.hos_id = vdp.hos_id
		    	and hsd.store_id  = vdp.perm_code and vdp.user_id = #{user_id,jdbcType=INTEGER}
		    	and vdp.table_code = 'HOS_STORE_DICT'  and vdp.is_read = 1  and vdp.is_write = 1 -->
		</if> 
		
		left join med_inv_dict mid  on mrd.group_id = mid.group_id and mrd.hos_id = mid.hos_id
		    and mrd.copy_code = mid.copy_code and mrd.inv_id = mid.inv_id and mrd.inv_no = mid.inv_no
		left join hos_unit hu on mid.group_id = hu.group_id
		    and mid.hos_id = hu.hos_id
		    and mid.unit_code = hu.unit_code
		    and hu.is_stop = 0
		left join med_inv_unit_map mium  on mid.group_id = mium.group_id  
     	    and mid.hos_id = mium.hos_id 
     		and mid.copy_code = mium.copy_code
     		and mid.inv_id = mium.inv_id
    	left join hos_package hp on mium.group_id = hp.group_id 
         	and mium.hos_id = hp.hos_id
         	and mium.pack_code = hp.pack_code
         	and hp.is_stop = 0
		<where>
		<if test="is_store == 1">
			hsd.store_id in (select vdp.perm_code from v_user_data_perm vdp  
						     where vdp.group_id = #{group_id,jdbcType=INTEGER} and  vdp.hos_id = #{hos_id,jdbcType=INTEGER}
					    	 vdp.user_id = #{user_id,jdbcType=INTEGER}
					    	and vdp.table_code = 'HOS_STORE_DICT'  and vdp.is_read = 1  and vdp.is_write = 1 
					    	)
		</if>
		<if test="is_store == 0">
			hsd.store_id in (select vdp.perm_code from  v_user_data_perm vdp
							  where vdp.group_id = #{group_id,jdbcType=INTEGER}  and vdp.hos_id = #{hos_id,jdbcType=INTEGER}
						    	 and vdp.user_id = #{user_id,jdbcType=INTEGER}
						    	and vdp.table_code = 'HOS_STORE_DICT'  and vdp.is_read = 1  and vdp.is_write = 1
						    	)
		    	
		</if> 
		
			<if test="group_id != null and group_id != ''">
				AND mrd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND mrd.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND mrd.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="begin_date != null and begin_date != ''">
				AND mrm.make_date &gt;=  to_date(#{begin_date},'yyyy/MM/dd') 
			</if>
			<if test="end_date != null and end_date != ''">
				AND mrm.make_date &lt;= to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND mrm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="store_id != null and store_id != ''">
				AND hsd.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				AND mrm.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="inv_code != null and inv_code != ''">
				and (
					mid.inv_code like '${inv_code}%' or
					mid.inv_name like '%${inv_code}%' or
					mid.spell_code like '%${inv_code}%' or
					mid.wbx_code like '%${inv_code}%'
				)
			</if>
			
			and nvl(mrd.amount,0) > 0
			and mrd.is_closed = 0
		</where>
		ORDER BY mrd.req_code,mid.inv_code 
	</select>
	
	<!-- 科室需求计划生成 重新组装明细数据 -->
	<select id="queryDeptNewDetail" parameterType="java.util.List" resultType="java.util.Map" >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					<if test="item.dept_req_id != null and item.dept_req_id != ''">
						#{item.dept_req_id,jdbcType=INTEGER} as req_id,
					</if>
					<if test="item.dept_detail_id != null and item.dept_detail_id != ''">
						#{item.dept_detail_id,jdbcType=INTEGER} as req_detail_id,
					</if>
					<if test="item.inv_id != null and item.inv_id != ''">
						#{item.inv_id,jdbcType=INTEGER} as inv_id,
					</if>
					<if test="item.inv_no != null or item.inv_no != ''">
						#{item.inv_no,jdbcType=INTEGER} as inv_no,
					</if>
					<if test="item.amount != null or item.amount != ''">
						#{item.amount,jdbcType=INTEGER} as amount,
					</if>
					<if test="item.exec_amount != null or item.exec_amount != ''">
						#{item.exec_amount,jdbcType=INTEGER} as exec_amount,
					</if>
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		),sum_list as(
		     select  group_id,hos_id,copy_code,inv_id,inv_no,sum(nvl(exec_amount,0)) exec_amount 
		     from list_temp
		     group by group_id,hos_id,copy_code,inv_id,inv_no,inv_id,inv_no
		) 
		select sum_list.group_id,
		      sum_list.hos_id,
		      sum_list.copy_code,
		      sum_list.inv_id,
		      sum_list.inv_no,
		      mid.inv_code,
		      mid.inv_name,
		      mid.inv_model,
		      mid.unit_code,
		      hu.unit_name,
		      hfd.fac_code,
		      hfd.fac_name,
		      hsd.sup_code,
		      hsd.sup_name,
		      hsd.sup_id,
		      hsd.sup_no,
		      sum_list.exec_amount as amount,
		      mid.plan_price as price,
		      nvl(sum_list.exec_amount,0)*nvl(mid.plan_price,0) as sum_money,
		      rela.req_rela
		    from sum_list sum_list
		    left join med_inv_dict mid on sum_list.group_id = mid.group_id
		      and sum_list.hos_id = mid.hos_id
		      and sum_list.copy_code = mid.copy_code
		      and sum_list.inv_id = mid.inv_id
		      and sum_list.inv_no = mid.inv_no
		    left join hos_unit hu on mid.group_id = hu.group_id
		      and mid.hos_id = hu.hos_id
		      and mid.unit_code = hu.unit_code
		      and hu.is_stop = 0
		    left join hos_fac_dict hfd on mid.group_id = hfd.group_id
		      and mid.hos_id = hfd.hos_id
		      and mid.fac_id = hfd.fac_id
		      and mid.fac_no = hfd.fac_no
		    left join med_inv_sup mis on mid.group_id = mis.group_id
		      and mid.hos_id = mis.hos_id
		      and mid.copy_code = mis.copy_code
		      and mid.inv_id = mis.inv_id
		      and mis.is_default = 1
		    left join hos_sup_dict hsd on mis.group_id = hsd.group_id
		      and mis.hos_id = hsd.hos_id
		      and mis.sup_id = hsd.sup_id
		      and hsd.is_stop = 0
		    left join (
		    	select inv_id,inv_no, '['||to_char(wm_concat('{"dept_req_id":'||req_id||',"dept_detail_id":'||req_detail_id||',"inv_id":'||inv_id||',"amount":'||amount||',"exec_amount":'||exec_amount||'}'))||']' req_rela 
		        from list_temp
		        group by inv_id,inv_no
		    ) rela on sum_list.inv_id = rela.inv_id 
		    	and sum_list.inv_no = rela.inv_no
		    order by mid.inv_code 
		
	</select>
	
	<!-- 更新明细状态 明细为汇总 is_closed=3 -->
	<update id="updateColsed" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update MED_REQUIRE_DETAIL 
			set is_closed = 3
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.dept_req_id != null and item.dept_req_id != ''">
					AND req_id = #{item.dept_req_id,jdbcType=INTEGER}
				</if>
				<if test="item.dept_detail_id != null and item.dept_detail_id != ''">
					AND req_detail_id = #{item.dept_detail_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 更新明细状态 明细为汇总 is_closed=0 -->
	<update id="updateDeptDetailClosed" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update MED_REQUIRE_DETAIL 
			set is_closed = 0
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				and req_detail_id in (
					select distinct dept_detail_id
					from med_req_store_rela 
					<where>
						<if test="item.group_id != null and item.group_id != ''">
							group_id = #{item.group_id,jdbcType=INTEGER}
						</if>
						<if test="item.hos_id != null and item.hos_id != ''">
							AND hos_id = #{item.hos_id,jdbcType=INTEGER}
						</if>
						<if test="item.copy_code != null and item.copy_code != ''">
							AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
						</if>
						<if test="item.req_id != null and item.req_id != ''">
							AND store_req_id = #{item.req_id,jdbcType=INTEGER}
						</if>
					</where>
				)
			</where>
		</foreach>
	</update>
	
	<!-- 中止单据 -->
	<update id="abortMedStoreRequriedPlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MED_REQ_STORE_MAIN 
			SET  state = 0
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					AND req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_code != null and item.req_code != ''">
					AND req_code = #{item.req_code,jdbcType=VARCHAR}
				</if>
			</where>

		</foreach>
	</update>
	
	<!-- 审核 -->
	<update id="submitMedStoreRequriedConfirm" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MED_REQ_STORE_MAIN 
			SET  state = 3,
				 checker = #{item.checker},
				 check_date = to_date(#{item.check_date},'yyyy/MM/dd')
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					AND req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_code != null and item.req_code != ''">
					AND req_code = #{item.req_code,jdbcType=VARCHAR}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 取消审核 -->
	<update id="unSubmitMedStoreRequriedConfirm" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MED_REQ_STORE_MAIN 
			SET  state = 2,
				 checker = '',
				 check_date = ''
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					AND req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_code != null and item.req_code != ''">
					AND req_code = #{item.req_code,jdbcType=VARCHAR}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 提交单据 -->
	<update id="updateSubmitMedStorePlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MED_REQ_STORE_MAIN 
			SET  state = 2
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					AND req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_code != null and item.req_code != ''">
					AND req_code = #{item.req_code,jdbcType=VARCHAR}
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 取消提交单据 -->
	<update id="updateUnSubmitMedStorePlan" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE MED_REQ_STORE_MAIN 
			SET  state = 1
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.req_id != null and item.req_id != ''">
					AND req_id = #{item.req_id,jdbcType=INTEGER}
				</if>
				<if test="item.req_code != null and item.req_code != ''">
					AND req_code = #{item.req_code,jdbcType=VARCHAR}
				</if>
			</where>
		</foreach>
	</update>
	
	
</mapper>

