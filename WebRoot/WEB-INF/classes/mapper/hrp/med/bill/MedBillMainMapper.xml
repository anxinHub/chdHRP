<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.bill.MedBillMainMapper">
	
	<resultMap id="medBillMain" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="bill_id" column="bill_id"/>
	<result property="bill_code" column="bill_code"/>
	<result property="bill_no" column="bill_no"/>
	<result property="ori_no" column="ori_no"/>
	<result property="bill_type" column="bill_type"/>
	<result property="stock_type_code" column="stock_type_code"/>
	<result property="bill_date" column="bill_date"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="note" column="note"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="chk_date" column="chk_date"/>
	<result property="is_init" column="is_init"/>
	<result property="state" column="state"/>
	<result property="state_name" column="state_name"/>
	<result property="payable_money" column="payable_money"/>
	<result property="bill_money" column="bill_money"/>
	<result property="fav_money" column="fav_money"/>
	</resultMap>
	<!-- 发票详细信息   修改页面回值用 Map-->
	<resultMap id="billUpdateMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="bill_id" column="bill_id"/>
	<result property="bill_code" column="bill_code"/>
	<result property="bill_no" column="bill_no"/>
	<result property="in_id" column="in_id"/>
	<result property="ori_no" column="ori_no"/>
	<result property="bill_type" column="bill_type"/>
	<result property="stock_type_code" column="stock_type_code"/>
	<result property="bill_date" column="bill_date"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_code" column="sup_code"/>
	<result property="sup_name" column="sup_name"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_term_code" column="pay_term_code"/>
	<result property="pay_term_name" column="pay_term_name"/>
	<result property="note" column="note"/>
	<result property="maker" column="maker"/>
	<result property="make_date" column="make_date"/>
	<result property="checker" column="checker"/>
	<result property="chk_date" column="chk_date"/>
	<result property="is_init" column="is_init"/>
	<result property="state" column="state"/>
	<result property="payable_money" column="payable_money"/>
	<result property="bill_money" column="bill_money"/>
	</resultMap>
	<!-- 入库单 Map -->
	<resultMap id="inMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="in_id" column="in_id"/>
	<result property="in_no" column="in_no"/>
	<result property="bus_type_code" column="bus_type_code"/>
	<result property="bus_type_name" column="bus_type_name"/>
	<result property="sup_id" column="sup_id"/>
	<result property="sup_no" column="sup_no"/>
	<result property="sup_name" column="sup_name"/>
	<result property="store_id" column="store_id"/>
	<result property="store_no" column="store_no"/>
	<result property="store_name" column="store_name"/>
	<result property="app_dept" column="app_dept"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	<result property="stocker" column="stocker"/>
	<result property="emp_name" column="emp_name"/>
	<result property="in_date" column="in_date"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="checker" column="checker"/>
	<result property="checker_name" column="checker_name"/>
	<result property="confirmer" column="confirmer"/>
	<result property="confirmer_name" column="confirmer_name"/>
	<result property="confirm_date" column="confirm_date"/>
	<result property="payable_money" column="payable_money"/>
	<result property="bill_money" column="bill_money"/>
	<result property="init" column="init"/>
	<result property="flag" column="flag"/>
		<result property="set_id" column="set_id"/>
	<result property="bill_no" column="bill_no"/>
	<result property="brief" column="brief"/>
	
	</resultMap>
	
	<!-- 入库单明细 Map -->
	<resultMap id="inDetailMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="in_id" column="in_id"/>
	<result property="in_detail_id" column="in_detail_id"/>
	<result property="detail_id" column="detail_id"/>
	<result property="inv_id" column="inv_id"/>
	<result property="inv_no" column="inv_no"/>
	<result property="inv_code" column="inv_code"/>
	<result property="inv_name" column="inv_name"/>
	<result property="unit_code" column="unit_code"/>
	<result property="unit_name" column="unit_name"/>
	<result property="inv_model" column="inv_model"/>
	<result property="batch_sn" column="batch_sn"/>
	<result property="batch_no" column="batch_no"/>
	<result property="sn" column="sn"/>
	<result property="price" column="price"/>
	<result property="amount" column="amount"/>
	<result property="payable_money" column="payable_money"/>
	<result property="bill_id" column="bill_id"/>
	<result property="bill_no" column="bill_no"/>
	<result property="bill_money" column="bill_money"/>
	<result property="init" column="init"/>
	</resultMap>
	
	<insert id="addMedBillMain" useGeneratedKeys="true" >
	
		INSERT INTO MED_BILL_MAIN (
		group_id
		,
		hos_id
		,
		copy_code
		,
		bill_id
		,
		bill_no
		,
		bill_code
		,
		ori_no
		,
		bill_type
		,
		stock_type_code
		,
		bill_date
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		is_init
		,
		payable_money
		,
		bill_money
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		note
	
		) VALUES (
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{bill_id,jdbcType=INTEGER},
		#{bill_no,jdbcType=VARCHAR},
		#{bill_code,jdbcType=VARCHAR},
		#{ori_no,jdbcType=VARCHAR},
		#{bill_type,jdbcType=VARCHAR},
		#{stock_type_code,jdbcType=VARCHAR},
		#{bill_date,jdbcType=DATE},
		#{sup_id,jdbcType=INTEGER},
		#{sup_no,jdbcType=INTEGER},
		#{pay_code,jdbcType=VARCHAR},
		#{is_init,jdbcType=INTEGER},
		#{payable_money,jdbcType=INTEGER},
		#{bill_money,jdbcType=INTEGER},
		#{maker,jdbcType=INTEGER},
		#{make_date,jdbcType=DATE},
		#{checker,jdbcType=INTEGER},
		#{chk_date,jdbcType=DATE},
		#{state,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		)
	
	</insert>
	<insert id="addBatchMedBillMain" parameterType="java.util.List" >
	
		INSERT INTO MED_BILL_MAIN (
		bill_id
		,
		group_id
		,
		hos_id
		,
		copy_code
		,
		bill_no
		,
		bill_code
		,
		ori_no
		,
		bill_type
		,
		stock_type_code
		,
		bill_date
		,
		sup_id
		,
		sup_no
		,
		pay_code
		,
		is_init
		,
		payable_money
		,
		bill_money
		,
		maker
		,
		make_date
		,
		checker
		,
		chk_date
		,
		state
		,
		note
		
		) select MED_BILL_MAIN_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.bill_no,jdbcType=VARCHAR}
			,
			#{item.bill_code,jdbcType=VARCHAR}
			,
			#{item.ori_no,jdbcType=VARCHAR}
			,
			#{item.bill_type,jdbcType=VARCHAR}
			,
			#{item.stock_type_code,jdbcType=VARCHAR}
			,
			#{item.bill_date,jdbcType=DATE},
			,
			#{item.sup_id,jdbcType=INTEGER}
			,
			#{item.sup_no,jdbcType=INTEGER}
			,
			#{item.pay_code,jdbcType=VARCHAR}
			,
			#{item.is_init,jdbcType=INTEGER}
			,
			#{item.payable_money,jdbcType=INTEGER}
			,
			#{item.bill_money,jdbcType=INTEGER}
			,
			#{item.maker,jdbcType=INTEGER}
			,
			#{item.make_date,jdbcType=DATE},
			,
			#{item.checker,jdbcType=INTEGER}
			,
			#{item.chk_date,jdbcType=DATE},
			,
			#{item.state,jdbcType=INTEGER}
			,
			#{item.note,jdbcType=VARCHAR}
			 from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateMedBillMain" parameterType="java.util.Map">
	
		UPDATE med_bill_main SET
		bill_code = #{bill_code,jdbcType=VARCHAR}
		,
		bill_no = #{bill_no,jdbcType=VARCHAR}
		,
		ori_no = #{ori_no,jdbcType=VARCHAR}
		,
		bill_type = #{bill_type,jdbcType=VARCHAR}
		,
		stock_type_code = #{stock_type_code,jdbcType=VARCHAR}
		,
		bill_date = #{bill_date,jdbcType=DATE}
		,
		sup_id = #{sup_id,jdbcType=INTEGER}
		,
		sup_no = #{sup_no,jdbcType=INTEGER}
		,
		pay_code = #{pay_code,jdbcType=VARCHAR}
		,
		note = #{note,jdbcType=VARCHAR}
		,
		maker = #{maker,jdbcType=INTEGER}
		,
		make_date = #{make_date,jdbcType=DATE}
		,
		checker = #{checker,jdbcType=INTEGER}
		,
		chk_date = #{chk_date,jdbcType=DATE}
		,
		is_init = #{is_init,jdbcType=INTEGER}
		,
		state = #{state,jdbcType=INTEGER}
		,
		payable_money = #{payable_money,jdbcType=INTEGER}
		,
		bill_money = #{bill_money,jdbcType=INTEGER}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		bill_id =#{bill_id,jdbcType=INTEGER}
		
	
	</update>
	<update id="updateBatchMedBillMain" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_bill_main SET
			bill_code = #{item.bill_code,jdbcType=VARCHAR}
			,
			bill_no = #{item.bill_no,jdbcType=VARCHAR}
			,
			ori_no = #{iteVARCHARjdbcType=VARCHAR}
			,
			bill_type = #{item.bill_type,jdbcType=VARCHAR}
			,
			stock_type_code = #{item.stock_type_code,jdbcType=VARCHAR}
			,
			bill_date = #{item.bill_date,jdbcType=DATE}
			,
			sup_id = #{item.sup_id,jdbcType=INTEGER}
			,
			sup_no = #{item.sup_no,jdbcType=INTEGER}
			,
			pay_code = #{item.pay_code,jdbcType=VARCHAR}
			,
			note = #{item.note,jdbcType=VARCHAR}
			,
			maker = #{item.maker,jdbcType=INTEGER}
			,
			make_date = #{item.make_date,jdbcType=DATE}
			,
			checker = #{item.checker,jdbcType=INTEGER}
			,
			chk_date = #{item.chk_date,jdbcType=DATE}
			,
			is_init = #{item.is_init,jdbcType=INTEGER}
			,
			state = #{item.state,jdbcType=INTEGER}
			,
			payable_money = #{item.payable_money,jdbcType=INTEGER}
			,
			bill_money = #{item.bill_money,jdbcType=INTEGER}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			bill_id = #{item.bill_id,jdbcType=INTEGER}
			
		</foreach>
	</update>
	
	<delete id="deleteMedBillMain" parameterType="java.util.Map">
	
		DELETE FROM med_bill_main WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		bill_id = #{bill_id,jdbcType=INTEGER} 
	
	</delete>
	<delete id="deleteBatchMedBillMain" parameterType="java.util.List">
		DELETE FROM med_bill_main WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				bill_id = #{item.bill_id,jdbcType=INTEGER}
				 and 
				bill_no = #{item.bill_no,jdbcType=INTEGER}
			</foreach>
	
	</delete>
	<select id="queryMedBillMain" parameterType="java.util.Map" resultMap="medBillMain" >
		SELECT 
			null group_id 	,
			null hos_id		,
			null copy_code	,
			null bill_id 	,
			null bill_no		,
			to_char('合计') bill_code	,
			null ori_no		,
			null bill_type	,
			null stock_type_code		,
			null bill_date	,
			null sup_id		,
			null sup_no		,
			null sup_name 	,
			null pay_code	,
			null is_init		,
			sum(payable_money) payable_money		,
			sum(mbm.bill_money) bill_money		,
			null maker		,
			null maker_name ,
			null make_date	,
			null checker		,
			null checker_name ,
			null chk_date	,
			null state		,
			null state_name, 
			null note
		FROM MED_BILL_MAIN mbm
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND mbm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mbm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mbm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="bill_id != null and bill_id != ''">
			AND mbm.bill_id = #{bill_id,jdbcType=INTEGER}
			</if>
			<if test="bill_code != null and bill_code != ''">
			AND mbm.bill_code = #{bill_code,jdbcType=VARCHAR}
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND mbm.bill_no like '${bill_no}%'
			</if>
			<if test="ori_no != null and ori_no != ''">
			AND mbm.ori_no = #{ori_no,jdbcType=VARCHAR}
			</if>
			<if test="bill_type != null and bill_type != ''">
			AND mbm.bill_type = #{bill_type,jdbcType=VARCHAR}
			</if>
			<if test="stock_type_code != null and stock_type_code != ''">
			AND mbm.stock_type_code = #{stock_type_code,jdbcType=VARCHAR}
			</if>
			<if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
			AND mbm.bill_date between to_date(#{beginDate},'yyyy-MM-dd') and to_date(#{endDate},'yyyy-MM-dd')
			</if>
			<if test="makeBeginDate != null and makeBeginDate != '' and makeEndDate !=null and makeEndDate !=''">
			AND mbm.make_date between to_date(#{makeBeginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{makeEndDate,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="sup_id != null and sup_id != ''">
			AND mbm.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="sup_no != null and sup_no != ''">
			AND mbm.sup_no = #{sup_no,jdbcType=INTEGER}
			</if>
			<if test="pay_code != null and pay_code != ''">
			AND mbm.pay_code = #{pay_code,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
			AND mbm.note = #{note,jdbcType=VARCHAR}
			</if>
			<if test="maker != null and maker != ''">
			AND mbm.maker = #{maker,jdbcType=INTEGER}
			</if>
			<!-- <if test="madeDate1 != null and madeDate1 != '' and madeDate2 != null and madeDate2 != ''">
			AND mbm.make_date between to_date(#{madeDate1},'yyyy-MM-dd') and to_date(#{madeDate2},'yyyy-MM-dd')
			</if> -->
			<if test="checker != null and checker != ''">
			AND mbm.checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="chk_date != null and chk_date != ''">
			AND mbm.chk_date = #{chk_date,jdbcType=DATE}
			</if>
			<if test="is_init != null and is_init != ''">
			AND mbm.is_init = #{is_init,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
			AND mbm.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="payable_money != null and payable_money != ''">
			AND mbm.payable_money = #{payable_money,jdbcType=INTEGER}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND mbm.bill_money = #{bill_money,jdbcType=INTEGER}
			</if>
			AND EXISTS(
				SELECT 1 FROM med_bill_detail mbd
				LEFT JOIN med_in_main mim 
					ON mbd.group_id = mim.group_id 
					AND mbd.hos_id = mim.hos_id 
					AND mbd.copy_code = mim.copy_code 
					AND mbd.in_id = mim.in_id 
					
	 left join hos_store_dict hs on mim.group_id = hs.group_id
					and mbd.hos_id = hs.hos_id
					and mim.store_id = hs.store_id
					and mim.store_no = hs.store_no 
      
    left join med_store_detail msd on mim.group_id = msd.group_id
			      and mim.hos_id = msd.hos_id
			      and hs.store_id = msd.store_id
				<!-- JOIN v_user_data_perm vudp 
					ON mbd.group_id = vudp.group_id 
					AND mbd.hos_id = vudp.hos_id 
					AND vudp.table_code = 'HOS_STORE_DICT'
					AND vudp.is_write = 1
					AND vudp.user_id = #{user_id,jdbcType=INTEGER}
					AND mim.store_id = vudp.perm_code -->
				WHERE mbd.group_id = mbm.group_id 
					AND mbd.hos_id = mbm.hos_id
					AND mbd.copy_code = mbm.copy_code 
					AND mbd.bill_id = mbm.bill_id
					and mim.store_id in (select vudp.perm_code from v_user_data_perm vudp 
										where vudp.group_id = #{group_id,jdbcType=INTEGER}
										AND vudp.hos_id = #{hos_id,jdbcType=INTEGER}
										AND vudp.table_code = 'HOS_STORE_DICT'
										AND vudp.is_write = 1
										AND vudp.user_id = #{user_id,jdbcType=INTEGER}
										)
				 <if test="store_id != null and store_id != '' ">
						 and hs.store_id = #{store_id}
		 		</if>
			 	 <if test="set_id != null and set_id != '' ">
						 and msd.set_id = #{set_id}
			 	</if>
			)
		</where>   
		UNION ALL
		SELECT 
			mbm.group_id 	,
			mbm.hos_id		,
			mbm.copy_code	,
			mbm.bill_id 	,
			mbm.bill_no		,
			to_char(mbm.bill_code) bill_code	,
			mbm.ori_no		,
			mbm.bill_type	,
			mbm.stock_type_code		,
			mbm.bill_date	,
			mbm.sup_id		,
			mbm.sup_no		,
			hsd.sup_name 	,
			mbm.pay_code	,
			mbm.is_init		,
			mbm.payable_money		,
			mbm.bill_money		,
			mbm.maker		,
			su.user_name  maker_name ,
			mbm.make_date	,
			mbm.checker		,
			sysu.user_name  checker_name ,
			mbm.chk_date	,
			mbm.state		,
			case when mbm.state = 1 then '未审核'
			when mbm.state = 2 then '已审核'
			else '记账' end state_name, 
			mbm.note
		FROM MED_BILL_MAIN mbm
		LEFT JOIN HOS_SUP_DICT hsd
			ON
				mbm.group_id = hsd.group_id
				and mbm.hos_id = hsd.hos_id
				and mbm.sup_id = hsd.sup_id
				<!-- and mbm.sup_no = hsd.sup_no -->
				and hsd.is_stop = 0
		LEFT JOIN SYS_USER su
			ON
				mbm.group_id = su.group_id
				and mbm.hos_id = su.hos_id
				and mbm.maker = su.user_id
		LEFT JOIN SYS_USER sysu
			ON
				mbm.group_id = sysu.group_id
				and mbm.hos_id = sysu.hos_id
				and mbm.checker = sysu.user_id
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND mbm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mbm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mbm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="bill_id != null and bill_id != ''">
			AND mbm.bill_id = #{bill_id,jdbcType=INTEGER}
			</if>
			<if test="bill_code != null and bill_code != ''">
			AND mbm.bill_code = #{bill_code,jdbcType=VARCHAR}
			</if>
			<if test="bill_no != null and bill_no != ''">
			AND mbm.bill_no like '${bill_no}%'
			</if>
			<if test="ori_no != null and ori_no != ''">
			AND mbm.ori_no = #{ori_no,jdbcType=VARCHAR}
			</if>
			<if test="bill_type != null and bill_type != ''">
			AND mbm.bill_type = #{bill_type,jdbcType=VARCHAR}
			</if>
			<if test="stock_type_code != null and stock_type_code != ''">
			AND mbm.stock_type_code = #{stock_type_code,jdbcType=VARCHAR}
			</if>
			<if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
			AND mbm.bill_date between to_date(#{beginDate},'yyyy-MM-dd') and to_date(#{endDate},'yyyy-MM-dd')
			</if>
			<if test="makeBeginDate != null and makeBeginDate != '' and makeEndDate !=null and makeEndDate !=''">
			AND mbm.make_date between to_date(#{makeBeginDate,jdbcType=DATE},'yyyy-MM-dd') and to_date(#{makeEndDate,jdbcType=DATE},'yyyy-MM-dd')
			</if>
			<if test="sup_id != null and sup_id != ''">
			AND mbm.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="sup_no != null and sup_no != ''">
			AND mbm.sup_no = #{sup_no,jdbcType=INTEGER}
			</if>
			<if test="pay_code != null and pay_code != ''">
			AND mbm.pay_code = #{pay_code,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
			AND mbm.note = #{note,jdbcType=VARCHAR}
			</if>
			<if test="maker != null and maker != ''">
			AND mbm.maker = #{maker,jdbcType=INTEGER}
			</if>
			<!-- <if test="madeDate1 != null and madeDate1 != '' and madeDate2 != null and madeDate2 != ''">
			AND mbm.make_date between to_date(#{madeDate1},'yyyy-MM-dd') and to_date(#{madeDate2},'yyyy-MM-dd')
			</if> -->
			<if test="checker != null and checker != ''">
			AND mbm.checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="chk_date != null and chk_date != ''">
			AND mbm.chk_date = #{chk_date,jdbcType=DATE}
			</if>
			<if test="is_init != null and is_init != ''">
			AND mbm.is_init = #{is_init,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
			AND mbm.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="payable_money != null and payable_money != ''">
			AND mbm.payable_money = #{payable_money,jdbcType=INTEGER}
			</if>
			<if test="bill_money != null and bill_money != ''">
			AND mbm.bill_money = #{bill_money,jdbcType=INTEGER}
			</if>
			AND EXISTS(
				SELECT 1 FROM med_bill_detail mbd
				LEFT JOIN med_in_main mim 
					ON mbd.group_id = mim.group_id 
					AND mbd.hos_id = mim.hos_id 
					AND mbd.copy_code = mim.copy_code 
					AND mbd.in_id = mim.in_id 
					
	 left join hos_store_dict hs on mim.group_id = hs.group_id
					and mbd.hos_id = hs.hos_id
					and mim.store_id = hs.store_id
					and mim.store_no = hs.store_no 
      
    left join med_store_detail msd on mim.group_id = msd.group_id
			      and mim.hos_id = msd.hos_id
			      and hs.store_id = msd.store_id
				<!-- JOIN v_user_data_perm vudp 
					ON mbd.group_id = vudp.group_id 
					AND mbd.hos_id = vudp.hos_id 
					AND vudp.table_code = 'HOS_STORE_DICT'
					AND vudp.is_write = 1
					AND vudp.user_id = #{user_id,jdbcType=INTEGER}
					AND mim.store_id = vudp.perm_code -->
				WHERE mbd.group_id = mbm.group_id 
					AND mbd.hos_id = mbm.hos_id
					AND mbd.copy_code = mbm.copy_code 
					AND mbd.bill_id = mbm.bill_id
					and mim.store_id in (select vudp.perm_code from  v_user_data_perm vudp 
											where vudp.group_id = #{group_id,jdbcType=INTEGER} 
											AND  vudp.hos_id = #{hos_id,jdbcType=INTEGER}
											AND vudp.table_code = 'HOS_STORE_DICT'
											AND vudp.is_write = 1
											AND vudp.user_id = #{user_id,jdbcType=INTEGER}
											)
				 <if test="store_id != null and store_id != '' ">
						 and hs.store_id = #{store_id}
		 		</if>
			 	 <if test="set_id != null and set_id != '' ">
						 and msd.set_id = #{set_id}
			 	</if>
			)
		</where>   
		order by bill_code desc, make_date desc
	</select>
	<select id="queryMedBillMainByCode" resultType="com.chd.hrp.med.entity.MedBillMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id 	,
		hos_id		,
		copy_code	,
		bill_id 	,
		bill_no		,
		bill_code	,
		ori_no		,
		bill_type	,
		stock_type_code		,
		bill_date	,
		sup_id		,
		sup_no		,
		pay_code	,
		is_init		,
		payable_money		,
		bill_money		,
		maker		,
		make_date	,
		checker		,
		chk_date	,
		state		,
		note
		FROM med_bill_main 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		bill_id = #{bill_id,jdbcType=INTEGER} 
	</select>
	<!-- 多表联合查询 发票详细信息（修改页面回值用） -->
	<select id="queryMedBillMainReturnUpdate" resultMap="billUpdateMap" parameterType="java.util.Map" >
	
		SELECT 
		mbm.group_id,
		mbm.hos_id,
		mbm.copy_code,
		mbm.bill_id,
		mbm.bill_code,
		mbm.bill_no,
		<!-- t.in_id , -->
		mbm.ori_no,
		mbm.bill_type,
		mbm.stock_type_code,
		mbm.bill_date,
		mbm.sup_id,
		mbm.sup_no,
		hsd.sup_code,
		hsd.sup_name,
		mbm.pay_code,
		mpt.pay_term_code,
		mpt.pay_term_name,
		mbm.note,
		mbm.maker,
		mbm.make_date,
		mbm.checker,
		mbm.chk_date,
		mbm.is_init,
		mbm.state,
		mbm.payable_money,
		mbm.bill_money
		FROM MED_BILL_MAIN  mbm 
	<!-- 	LEFT JOIN  (select group_id, hos_id, copy_code,  bill_id, bill_no, in_id, sum(payable_money) payable_money, 
					sum(bill_money)  bill_money
				from  MED_BILL_DETAIL   group by  group_id , hos_id , copy_code ,  bill_id , bill_no ,in_id ) t
			on
				mbm.group_id = t.group_id
				and mbm.hos_id = t.hos_id
				and mbm.copy_code = t.copy_code
				and mbm.bill_id = t.bill_id
				and mbm.bill_no = t.bill_no -->
		LEFT JOIN hos_sup_dict  hsd
			on
				mbm.group_id = hsd.group_id
				and mbm.hos_id = hsd.hos_id
				and mbm.sup_id = hsd.sup_id
				<!-- and mbm.sup_no = hsd.sup_no -->
				and hsd.is_stop = 0
		LEFT JOIN MED_PAY_TERM mpt
			on
				mbm.group_id = mpt.group_id
				and mbm.hos_id = mpt.hos_id
				and mbm.copy_code = mpt.copy_code
				and mbm.pay_code = mpt.pay_term_id
				and mpt.is_stop = 0
		WHERE 
		mbm.group_id = #{group_id,jdbcType=INTEGER}   and 
		mbm.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		mbm.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		mbm.bill_id = #{bill_id,jdbcType=INTEGER} 
	</select>
	<select id="queryMedBillMainByUniqueness" resultType="com.chd.hrp.med.entity.MedBillMain" parameterType="java.util.Map" >
	
		SELECT 
		group_id	,
		hos_id		,
		copy_code	,
		bill_id		,
		bill_no		,
		bill_code	,
		ori_no		,
		bill_type	,
		stock_type_code		,
		bill_date	,
		sup_id		,
		sup_no		,
		pay_code	,
		is_init		,
		payable_money		,
		bill_money	,
		maker		,
		make_date	,
		checker		,
		chk_date	,
		state		,
		note
		FROM MED_BILL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="bill_id != null and bill_id != ''">
		AND bill_id = #{bill_id,jdbcType=INTEGER}
		</if>
		<if test="bill_code != null and bill_code != ''">
		AND bill_code = #{bill_code,jdbcType=VARCHAR}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no,jdbcType=VARCHAR}
		</if>
		<if test="ori_no != null and ori_no != ''">
		AND ori_no = #{ori_no,jdbcType=VARCHAR}
		</if>
		<if test="bill_type != null and bill_type != ''">
		AND bill_type = #{bill_type,jdbcType=VARCHAR}
		</if>
		<if test="stock_type_code != null and stock_type_code != ''">
		AND stock_type_code = #{stock_type_code,jdbcType=VARCHAR}
		</if>
		<if test="bill_date != null and bill_date != ''">
		AND bill_date = #{bill_date,jdbcType=DATE}
		</if>
		<if test="sup_id != null and sup_id != ''">
		AND sup_id = #{sup_id,jdbcType=INTEGER}
		</if>
		<if test="sup_no != null and sup_no != ''">
		AND sup_no = #{sup_no,jdbcType=INTEGER}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="chk_date != null and chk_date != ''">
		AND chk_date = #{chk_date,jdbcType=DATE}
		</if>
		<if test="is_init != null and is_init != ''">
		AND is_init = #{is_init,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="payable_money != null and payable_money != ''">
		AND payable_money = #{payable_money,jdbcType=INTEGER}
		</if>
		<if test="bill_money != null and bill_money != ''">
		AND bill_money = #{bill_money,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 根据 发票信息 查询 其发票号是否已存在 -->
	<select id="queryMedBillMainExists" resultType="java.lang.Long"  parameterType="java.util.Map" >
	
		SELECT count(bill_no)
		FROM MED_BILL_MAIN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="bill_id != null and bill_id != ''">
		AND bill_id != #{bill_id,jdbcType=INTEGER}
		</if>
		<if test="bill_no != null and bill_no != ''">
		AND bill_no = #{bill_no,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<!-- 入库单查询 /期初未付款送货单（ 明细没有全部被发票引用过的采购入库单/期初未付款送货单） -->
	<select id="queryMedCommonInBill" resultMap="inMap" parameterType="java.util.Map" >
		with in_count as(select group_id , hos_id , copy_code , in_id , count(distinct(in_detail_id)) num1 
							from med_in_detail WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
							and copy_code = #{copy_code} group by group_id , hos_id , copy_code , in_id),
 			 bill_count as (select group_id , hos_id , copy_code , in_id , count(distinct(in_detail_id)) num2 
 			 				from med_bill_detail WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
							and copy_code = #{copy_code} group by group_id , hos_id , copy_code , in_id),
 			 nopay_count as(select group_id , hos_id , copy_code , deliver_id in_id , count(distinct(detail_id)) num3 
 			 				from med_nopay_deliver_d WHERE group_id = ${group_id}  and hos_id = ${hos_id} 
							and copy_code = #{copy_code} group by group_id , hos_id , copy_code , deliver_id)
 			
		select distinct
			mim.group_id,
			mim.hos_id,
			mim.copy_code,
			<if test="init == 0">
			mim.in_id,
			mim.in_no,
			mim.bus_type_code,
			mbt.bus_type_name ,
			0  init ,
			</if>
			<if test="init == 1">
			mim.deliver_id  in_id,
			mim.deliver_no  in_no,
			1  init ,
			</if>
			0  flag ,
			mim.sup_id,
			mim.sup_no,
			sup.sup_name ,
			mim.store_id,
			mim.store_no,
			hsd.store_name,
			mim.app_dept,
			hdd.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			mim.stocker,
			he.emp_name,
			mim.in_date,
			mim.maker,
			sus.user_name  maker_name ,
			mim.checker,
			sysu.user_name  checker_name ,
			mim.confirmer,
			su.user_name  confirmer_name ,
			to_char(mim.confirm_date,'yyyy-MM-dd') confirm_date ,
			t.in_money payable_money ,
			t.in_money bill_money,
			mim.bill_no,
			mim.brief
		from ${table}  mim 
		<if test="init == 0">
		LEFT JOIN med_bus_type mbt
				on 
					mim.bus_type_code = mbt.bus_type_code
		
		</if>
		LEFT JOIN hos_sup_dict sup
				on  
					mim.group_id = sup.group_id
					and mim.hos_id = sup.hos_id
					and mim.sup_id = sup.sup_id
					<!-- and mim.sup_no = sup.sup_no -->
					and sup.is_stop = 0
		<!-- join v_user_data_perm b on mim.group_id = b.group_id
and mim.hos_id = b.hos_id
and b.user_id = #{user_id,jdbcType=INTEGER}
and b.table_code = 'HOS_STORE_DICT'
and b.perm_code = mim.store_id
and b.is_read = 1
and b.is_write = 1  -->
	left join hos_store_dict hsd on mim.group_id = hsd.group_id
		and mim.hos_id = hsd.hos_id
		and mim.store_id = hsd.store_id
		and hsd.is_stop = 0 
	left join med_store_detail msd on mim.group_id = msd.group_id
		and mim.hos_id = msd.hos_id
		and hsd.store_id = msd.store_id
			LEFT JOIN hos_dept_dict  hdd
				on
					mim.group_id = hdd.group_id
					and mim.hos_id = hdd.hos_id
					and mim.app_dept = hdd.dept_id
					and hdd.is_stop = 0
			LEFT JOIN hos_emp he
				on 
					mim.group_id = he.group_id
					and mim.hos_id = he.hos_id
					and mim.stocker = he.emp_id
			LEFT JOIN SYS_USER sus
				ON
				mim.group_id = sus.group_id
				and mim.hos_id = sus.hos_id
				and mim.maker = sus.user_id
			LEFT JOIN SYS_USER sysu
				ON
				mim.group_id = sysu.group_id
				and mim.hos_id = sysu.hos_id
				and mim.checker = sysu.user_id
			LEFT JOIN SYS_USER su
				ON
				mim.group_id = su.group_id
				and mim.hos_id = su.hos_id
				and mim.confirmer = su.user_id 
			<if test=" init == 0">
				left join (select in_id , sum(amount_money) in_money from med_in_detail 
						where group_id = #{group_id} and hos_id = #{hos_id} and 
						copy_code  = #{copy_code}  group by in_id ) t
				ON
					mim.in_id  = t.in_id
			</if>
			<if test=" init == 1">
				left join (select deliver_id , sum(amount_money) in_money from med_nopay_deliver_d 
						where group_id = #{group_id} and hos_id = #{hos_id} and 
						copy_code  = #{copy_code}  group by deliver_id ) t
				ON
					mim.deliver_id  = t.deliver_id
			</if>
		<where>
		mim.store_id in (select b.perm_code from  v_user_data_perm b where b.group_id =  #{group_id,jdbcType=INTEGER}
							and b.hos_id = #{hos_id,jdbcType=INTEGER}
							and b.user_id = #{user_id,jdbcType=INTEGER}
							and b.table_code = 'HOS_STORE_DICT'
							and b.is_read = 1
							and b.is_write = 1 
							)
			<if test="group_id != null and group_id != ''">
			AND mim.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mim.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mim.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="sup_id != null and sup_id != ''">
			AND mim.sup_id = #{sup_id,jdbcType=INTEGER}
			</if>
			<if test="app_dept != null and app_dept != ''">
			AND mim.app_dept = #{app_dept,jdbcType=INTEGER}
			</if>
			<if test="stocker != null and stocker != ''">
			AND mim.stocker = #{stocker,jdbcType=INTEGER}
			</if>
			<!-- 红冲发票   入库类型为 采购退货 12 、专购品退货48 -->
			<if test="bill_type == 2 and init == 0 ">
			AND mim.bus_type_code in (12,48 )
			</if>
			<!-- 普通发票   入库类型为 采购入库 2 、专购品入库47  采购退货 12 、专购品退货48  -->
			<if test="bill_type == 1  and init == 0 ">
			AND mim.bus_type_code in (2,47,12,48)
			</if>
			<if test="bus_type_code != null  and bus_type_code != '' ">
			AND mim.bus_type_code = #{bus_type_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
			AND mim.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="set_id != null and set_id != '' ">
			and msd.set_id = #{set_id}
			</if>
			<if test="begin_in_date != null and begin_in_date != ''">
			AND mim.in_date &gt;= to_date(#{begin_in_date},'yyyy-MM-dd')
			</if>
			<if test="end_in_date != null and end_in_date != ''">
			AND mim.in_date &lt;= to_date(#{end_in_date},'yyyy-MM-dd')
			</if>
			<if test="begin_confirm_date != null and begin_confirm_date != ''">
			AND mim.confirm_date &gt;= to_date(#{begin_confirm_date},'yyyy-MM-dd')
			</if>
			<if test="end_confirm_date != null and end_confirm_date != ''">
			AND mim.confirm_date &lt;= to_date(#{end_confirm_date},'yyyy-MM-dd')
			</if>
			<if test="in_no != null and in_no != '' and init == 0 ">
			AND mim.in_no like '${in_no}%'
			</if>
			<if test="in_no != null and in_no != '' and init == 1 ">
			AND mim.deliver_no like '${in_no}%'
			</if>
			<if test="brief != null and brief != ''">
			AND mim.brief like '%${brief}%'
			</if>
			<if test="year != null and year != '' and month != null and month != ''">
			AND to_char(confirm_date,'yyyyMMdd')  between to_char(to_date(#{year},'yyyy-MM-dd'),'yyyyMMdd') and to_char(to_date(#{month},'yyyy-MM-dd'),'yyyyMMdd')
			</if>
			<if test="brief != null and brief != ''">
			AND mim.brief like '%${brief}%'
			</if>
			and mim.state = #{state,jdbcType = INTEGER}
			<!-- 剔除 入库单明细被发票全部引用过的  入库单-->
			<if test=" init == 0 ">
			and  mim.in_id not in (select bill_count.in_id  from bill_count left  join in_count 
									on 
										bill_count.group_id = in_count.group_id 
										and bill_count.hos_id = in_count.hos_id 
										and bill_count.copy_code = in_count.copy_code
										and bill_count.in_id  = in_count.in_id 
       								where  bill_count.num2 &gt;= in_count.num1)	
			</if>
			<!-- 剔除 期初未付款送货单明细被发票全部引用过的  期初未付款送货单 -->
			<if test=" init == 1 ">
			and  mim.deliver_id not in ( select nopay_count.in_id  from nopay_count left  join in_count on 
									nopay_count.group_id = in_count.group_id 
									and nopay_count.hos_id = in_count.hos_id 
									and nopay_count.copy_code = in_count.copy_code
									and nopay_count.in_id  = in_count.in_id 
       								where  nopay_count.num3 &gt;= in_count.num1)	
			</if>
			<!-- and mim.in_id not in ( select in_id  from MED_BILL_DETAIL 
						where group_id = #{group_id,jdbcType=INTEGER}
						 	and hos_id = #{hos_id,jdbcType=INTEGER}
						 	and copy_code = #{copy_code,jdbcType=VARCHAR}) -->
		</where>
		<if test=" init == 0">
		order by mim.in_no 
		</if>
		<if test=" init == 1">
		order by mim.deliver_no 
		</if>
	</select>
	<!-- 入库单明细查询 -->
	<select id="queryMedInDetail" resultMap="inDetailMap" parameterType="java.util.Map" >
		select 
			mid.group_id,
			mid.hos_id,
			mid.copy_code,
			mbd.bill_id ,
			mbd.bill_no ,
			<if test=" init == 0 and flag == 0">
			mid.in_id,
			mid.in_detail_id, 
			</if>
			<if test=" init == 0 and flag == 1">
			mid.in_id,
			mid.detail_id, 
			</if>
			<if test=" init == 1">
			mid.deliver_id  in_id,
			mid.detail_id   in_detail_id , 
			</if>
			mid.inv_id,
			mid.inv_no,
			mic.inv_code,
			mic.inv_name,
			mic.unit_code,
			hu.unit_name ,
			mic.inv_model,
			<if test=" init == 0 ">
			mid.batch_sn,
			mid.sn,
			</if>
			mid.batch_no,
			mid.price,
			mid.amount,
			mid.amount_money as payable_money ,
			nvl(mbd.bill_money,mid.amount_money) as bill_money
		from ${table}  mid 
		LEFT JOIN MED_BILL_DETAIL mbd
			ON	
				mid.group_id = mbd.group_id
				and mid.hos_id = mbd.hos_id
				and mid.copy_code = mbd.copy_code
				<if test="init == 0 and flag == 0">
				and mid.in_id = mbd.in_id
				and mid.in_detail_id = mbd.in_detail_id
				and mid.amount_money=mbd.payable_money
				</if>
				<if test="init == 0 and flag == 1">
				and mid.in_id = mbd.in_id
				and mid.detail_id = mbd.in_detail_id
				</if>
				<if test="init == 1">
				and mid.deliver_id = mbd.in_id
				and mid.detail_id = mbd.in_detail_id
				</if>
		LEFT JOIN  MED_INV_DICT mic
				on  
					mid.group_id = mic.group_id
					and mid.hos_id = mic.hos_id
					and mid.copy_code = mic.copy_code
					and mid.inv_id = mic.inv_id
					and mid.inv_no = mic.inv_no
		LEFT JOIN  hos_unit hu
				on  
					mic.group_id = hu.group_id
					and mic.hos_id = hu.hos_id
					and mic.unit_code = hu.unit_code
					and hu.is_stop = 0
		<where>
			<if test="group_id != null and group_id != ''">
			AND mid.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != '' and init == 0">
			AND mid.in_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="in_id != null and in_id != '' and init == 1">
			AND mid.deliver_id = #{in_id,jdbcType=INTEGER}
			</if>
			<if test="bill_id != null and bill_id != '' and bill_id != '' and init == 0 and flag == 0">
			AND bill_id = #{bill_id,jdbcType=INTEGER}
			AND mid.in_detail_id  in ( select distinct(in_detail_id) from med_bill_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and bill_id = #{bill_id,jdbcType=INTEGER}
												and in_id = #{in_id,jdbcType=INTEGER} )
			</if>
			<if test="bill_id != null and bill_id != '' and bill_id != '' and init == 0 and flag == 1">
			AND bill_id = #{bill_id,jdbcType=INTEGER}
			AND mid.detail_id  in ( select distinct(in_detail_id) from med_bill_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and bill_id = #{bill_id,jdbcType=INTEGER}
												and in_id = #{in_id,jdbcType=INTEGER} )
			</if>
			<if test="bill_id == '' and init == 0 and flag == 0 ">
			AND mid.in_detail_id  not in ( select distinct(in_detail_id) from med_bill_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and in_id = #{in_id,jdbcType=INTEGER})
			</if>
			<if test="bill_id == '' and init == 0 and flag == 1 ">
			AND mid.detail_id  not in ( select distinct(in_detail_id) from med_bill_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and in_id = #{in_id,jdbcType=INTEGER})
			</if>
			<if test="bill_id != null and bill_id != '' and init == 1">
			AND bill_id = #{bill_id,jdbcType=INTEGER}
			AND mid.detail_id  in ( select distinct(in_detail_id) from med_bill_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and bill_id = #{bill_id,jdbcType=INTEGER}
												and in_id = #{in_id,jdbcType=INTEGER})
			</if>
			<if test="bill_id == '' and init == 1 ">
			AND mid.detail_id  not in ( select distinct(in_detail_id) from med_bill_detail 
											where group_id = #{group_id,jdbcType=INTEGER}
												and hos_id = #{hos_id,jdbcType=INTEGER}
												and copy_code = #{copy_code,jdbcType=VARCHAR}
												and in_id = #{in_id,jdbcType=INTEGER})
			</if>
		</where>
		<if test=" init == 0">
		order by mid.in_no 
		</if>
		<if test=" init == 1">
		order by mid.deliver_no 
		</if>
	</select>
	
	<!-- 新增时查询发票明细对应的发票主表的Id -->
	<select id="queryBillMainMaxId" resultType="java.lang.Long" >
		select max(bill_id)  from med_bill_main
	</select>
	
	<!-- 新增时查询发票明细对应的发票主表的Id -->
	<select id="queryBillMainNextSeq" resultType="java.lang.Long" >
		select MED_BILL_MAIN_SEQ.nextval  from dual
	</select>
	
	<!-- 根据 入库单Id 查询入库单明细Id -->
	<select id="queryIn_detail_id" resultType="java.lang.Long" parameterType="java.util.Map" >
		select in_detail_id  from med_in_detail
		<where>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="in_id != null and in_id != ''">
			AND in_id = #{in_id,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<!-- 发票号和发票日期更新到对应入库单 -->
	<update id="updateBatchMedIn" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_in_main 
			set
				invoice_date = to_date(#{item.invoice_date,jdbcType=DATE},'yyyy-MM-dd'),
				invoice_no = #{item.invoice_no,jdbcType=VARCHAR}
			WHERE  group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND in_id = #{item.in_id,jdbcType=INTEGER}
		</foreach>
	</update>
	<!-- 发票号和发票日期更新到对应专购品 -->
	<update id="updateBatchMedSpecial" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_special_main 
			set 
				invoice_date = to_date(#{item.invoice_date,jdbcType=DATE},'yyyy-MM-dd'),
				invoice_no = #{item.invoice_no,jdbcType=VARCHAR}
			WHERE  group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND special_id in ( 
					select special_id 
					from med_special_rela
					where group_id = #{item.group_id,jdbcType=INTEGER}
						AND hos_id = #{item.hos_id,jdbcType=INTEGER}
						AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
						AND in_id = #{item.in_id,jdbcType=INTEGER}
				) 
		</foreach>
	</update>
	<!-- 审核、消审 -->
	<update id="updateBillState" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_bill_main SET
			checker = #{item.checker,jdbcType=INTEGER}
			,
			chk_date = #{item.chk_date,jdbcType=DATE}
			,
			state = #{item.state,jdbcType=INTEGER}
			
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					and group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
					and copy_code = #{item.copy_code,jdbcType=INTEGER}
				</if>
				<if test="item.bill_id != null and item.bill_id != ''">
					and bill_id = #{item.bill_id,jdbcType=INTEGER}
				</if>
			</where>
		</foreach>
	</update>
	
	
	<!-- 入库主表模板打印 -->
	<select id="queryMedBillMainPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		select  
			mbm.bill_code bill_code,
			mbm.bill_no bill_no,
			mbm.bill_code ori_no,
			case when mbm.BILL_TYPE = 2 then '红冲发票' else '普通发票' end bill_type,
			mbm.STOCK_TYPE_CODE,
			to_char(mbm.BILL_DATE, 'yyyy-MM-dd hh24:mi:ss') bill_date,
			hsd.sup_code,
			hsd.sup_name,
			mpt.pay_term_name pay_code,
			mbm.payable_money payable_money,
			mbm.payable_money payable_money_upper,
			mbm.bill_money bill_money,
			mbm.bill_money bill_money_upper,
			mbm.maker,
			to_char(mbm.make_date, 'yyyy-MM-dd hh24:mi:ss') make_date,
			mbm.checker,
			to_char(mbm.chk_date, 'yyyy-MM-dd hh24:mi:ss') chk_date,
			mbm.note
		from  MED_BILL_MAIN mbm  
		left join HOS_SUP_DICT hsd 
			on mbm.group_id=hsd.group_id 
			and mbm.hos_id=hsd.hos_id 
			and mbm.sup_id=hsd.sup_id 
			and mbm.sup_no = hsd.sup_no
		left join MED_PAY_TERM mpt 
  			on mbm.group_id = mpt.group_id 
  			and mbm.hos_id = mpt.hos_id 
  			and mbm.copy_code = mpt.copy_code 
  			and mbm.pay_code = mpt.pay_term_id
		where 
			mbm.group_id = #{group_id,jdbcType=NUMERIC}
			and mbm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mbm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mbm.bill_id=#{bill_id,jdbcType=NUMERIC}
	</select>
	<select id="queryMedBillMainPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		select  
			mbm.bill_id as id, 
			mbm.bill_code bill_code,
			mbm.bill_no bill_no,
			mbm.bill_code ori_no,
			case when mbm.BILL_TYPE = 2 then '红冲发票' else '普通发票' end bill_type,
			mbm.STOCK_TYPE_CODE,
			to_char(mbm.BILL_DATE, 'yyyy-MM-dd hh24:mi:ss') bill_date,
			hsd.sup_code,
			hsd.sup_name,
			mpt.pay_term_name pay_code,
			mbm.payable_money payable_money,
			mbm.payable_money payable_money_upper,
			mbm.bill_money bill_money,
			mbm.bill_money bill_money_upper,
			mbm.maker,
			to_char(mbm.make_date, 'yyyy-MM-dd hh24:mi:ss') make_date,
			mbm.checker,
			to_char(mbm.chk_date, 'yyyy-MM-dd hh24:mi:ss') chk_date,
			mbm.note
		from  MED_BILL_MAIN mbm  
		left join HOS_SUP_DICT hsd 
			on mbm.group_id=hsd.group_id 
			and mbm.hos_id=hsd.hos_id 
			and mbm.sup_id=hsd.sup_id 
			and mbm.sup_no = hsd.sup_no
		left join MED_PAY_TERM mpt 
  			on mbm.group_id = mpt.group_id 
  			and mbm.hos_id = mpt.hos_id 
  			and mbm.copy_code = mpt.copy_code 
  			and mbm.pay_code = mpt.pay_term_id
		where 
			mbm.group_id = #{group_id,jdbcType=NUMERIC}
			and mbm.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mbm.copy_code = #{copy_code,jdbcType=VARCHAR}
			and mbm.bill_id in  (${paraId})
	</select>
	
	<!-- 入库明细表模板打印 -->
	<select id="queryMedBillMainPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		select 
			mbd.bill_id as id, 
			mid.in_no,
			midt.inv_code,
			midt.inv_name, 
			midt.inv_model, 
			midt.bid_code, 
			hfd.fac_name, 
			hu.unit_name, 
			mbd.payable_money d_payable_money, 
			mbd.bill_money d_bill_money
		from MED_BILL_DETAIL  mbd
		left join MED_BILL_MAIN mbm 
			on mbd.group_id=mbm.group_id 
			and mbd.hos_id=mbm.hos_id 
			and mbd.copy_code=mbm.copy_code 
			and mbd.bill_id =mbm.bill_id
 		left join MED_IN_DETAIL mid 
 			on mbd.group_id=mid.group_id 
 			and mbd.hos_id=mid.hos_id 
 			and mbd.copy_code=mid.copy_code 
 			and mbd.in_id=mid.in_id
 			and mbd.in_detail_id = mid.in_detail_id 
 		LEFT JOIN med_inv_dict midt 
 			ON mid.group_id = midt.group_id 
 			AND mid.hos_id = midt.hos_id 
 			AND mid.copy_code = midt.copy_code 
 			AND mid.inv_id = midt.inv_id 
 			AND mid.inv_no = midt.inv_no
 		LEFT JOIN hos_fac_dict hfd 
 			ON midt.group_id = hfd.group_id 
 			AND midt.hos_id = hfd.hos_id 
 			AND midt.fac_id = hfd.fac_id 
 			AND midt.fac_no = hfd.fac_no 
 		LEFT JOIN hos_unit hu 
 			ON midt.group_id = hu.group_id 
 			AND midt.hos_id = hu.hos_id 
 			AND midt.unit_code = hu.unit_code 
 		where
			mbd.group_id = #{group_id,jdbcType=NUMERIC}
			and mbd.hos_id = #{hos_id,jdbcType=NUMERIC}
			and mbd.copy_code = #{copy_code,jdbcType=NUMERIC}
			<if test="p_num ==1">
				and mbm.bill_id in (${paraId})
			</if>
			<if test="p_num ==0">
				and  mbm.bill_id=#{bill_id,jdbcType=NUMERIC}
			</if>
		order by mbm.bill_id
	</select>
	
	<!-- 查询发票是否已付款  -->
	<select id="queryPayOrNot" parameterType="java.util.Map" resultType="java.lang.Integer" >
		select count(bill_id) 
		from med_pay_detail 
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=INTEGER}
			</if>
			<if test="bill_id != null and bill_id != ''">
				and bill_id = #{bill_id,jdbcType=INTEGER}
			</if>
		</where>		

	</select>
	<!-- 更新发票金额 -->
	<update id="updateMedBillMainBillMoney" parameterType="java.util.Map">
	
		UPDATE med_bill_main SET
		
		bill_money = #{bill_money,jdbcType=INTEGER}
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
		 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
		 and 
		bill_id =#{bill_id,jdbcType=INTEGER}
		
	
	</update>
	
	<!-- 根据bill_id查询in_id -->
	<select id="queryMedBillInIds" parameterType="java.util.List" resultType="String">
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.bill_id,jdbcType=INTEGER} as bill_id
				from dual
			</foreach>
		)
		
		select wm_concat(to_char(in_id)) 
		from (
			select distinct b.in_id
      		from list_temp a
      		left join med_bill_detail b on a.group_id=b.group_id and a.hos_id=b.hos_id 
        		and a.copy_code=b.copy_code and a.bill_id = b.bill_id
		)
	</select>
	
	
	<update id="updateBatchMedInMain" parameterType="java.util.Map">
		update med_in_main 
		set bill_no='', bill_date=''
		<where>
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=INTEGER}
			</if>
			<if test="inIds != null">
				and in_id in (${inIds})
			</if>
		</where>
	</update>
</mapper>

