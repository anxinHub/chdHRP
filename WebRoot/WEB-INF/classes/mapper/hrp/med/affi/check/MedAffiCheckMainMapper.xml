<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.med.dao.affi.check.MedAffiCheckMainMapper">
	
	<resultMap id="medAffiCheckMain" type="com.chd.hrp.med.entity.MedAffiCheckMain">
		<result property="hos_id" column="hos_id"/>
		<result property="group_id" column="group_id"/>
		<result property="copy_code" column="copy_code"/>
		<result property="check_id" column="check_id"/>
		<result property="check_code" column="check_code"/>
		<result property="store_id" column="store_id"/>
		<result property="store_no" column="store_no"/>
		<result property="store_code" column="store_code"/>
		<result property="store_name" column="store_name"/>
		<result property="dept_id" column="dept_id"/>
		<result property="dept_no" column="dept_no"/>
		<result property="dept_code" column="dept_code"/>
		<result property="dept_name" column="dept_name"/>
		<result property="check_date" column="check_date"/>
		<result property="emp_id" column="emp_id"/>
		
		<result property="maker" column="maker"/>
		<result property="checker" column="checker"/>
		<result property="state" column="state"/>
		<result property="brif" column="brif"/>
		<result property="create_date" column="create_date"/>
		
		<result property="out_id" column="out_id"/>
		<result property="out_no" column="out_no"/>
		<result property="in_id" column="in_id"/>
		<result property="in_no" column="in_no"/>
	</resultMap>
	
	<select id="queryMedAffiCheckMainSeq" resultType="java.lang.Long" useCache="false" flushCache="true">
		select med_affi_check_main_SEQ.nextval from dual
	</select>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO MED_AFFI_CHECK_MAIN (
			<trim suffix="" suffixOverrides=",">
				<if test="hos_id != null and hos_id != ''">hos_id,</if>
				<if test="group_id != null and group_id != ''">group_id,</if>
				<if test="copy_code != null and copy_code != ''">copy_code,</if>
				<if test="check_id != null and check_id != ''">check_id,</if>
				<if test="check_code != null and check_code != ''">check_code,</if>
				<if test="store_id != null and store_id != ''">store_id,</if>
				<if test="store_no != null and store_no != ''">store_no,</if>
				<if test="dept_id != null and dept_id != ''">dept_id,</if>
				<if test="dept_no != null and dept_no != ''">dept_no,</if>
				<if test="check_date != null and check_date != ''">check_date,</if>
				<if test="emp_id != null and emp_id != ''">emp_id,</if>
				<if test="maker != null and maker != ''">maker,</if>
				<if test="checker != null and checker != ''">checker,</if>
				<if test="state != null and state != ''">state,</if>
				<if test="brif != null ">brif,</if>
				<if test="create_date != null and create_date != ''">create_date,</if>
			</trim>
		) VALUES (
			<trim suffix="" suffixOverrides=",">
				<if test="hos_id != null and hos_id != ''">#{hos_id,jdbcType=INTEGER},</if>
				<if test="group_id != null and group_id != ''">#{group_id,jdbcType=INTEGER},</if>
				<if test="copy_code != null and copy_code != ''">#{copy_code,jdbcType=VARCHAR},</if>
				<if test="check_id != null and check_id != ''">#{check_id,jdbcType=INTEGER},</if>
				<if test="check_code != null and check_code != ''">#{check_code,jdbcType=VARCHAR},</if>
				<if test="store_id != null and store_id != ''">#{store_id,jdbcType=INTEGER},</if>
				<if test="store_no != null and store_no != ''">#{store_no,jdbcType=INTEGER},</if>
				<if test="dept_id != null and dept_id != ''">#{dept_id,jdbcType=INTEGER},</if>
				<if test="dept_no != null and dept_no != ''">#{dept_no,jdbcType=INTEGER},</if>
				<if test="check_date != null and check_date != ''">to_date(#{check_date,jdbcType=VARCHAR},'yyyy/MM/dd'),</if>
				<if test="emp_id != null and emp_id != ''">#{emp_id,jdbcType=INTEGER},</if>
				<if test="maker != null and maker != ''">#{maker,jdbcType=INTEGER},</if>
				<if test="checker != null and checker != ''">#{checker,jdbcType=INTEGER},</if>
				<if test="state != null and state != ''">#{state,jdbcType=INTEGER},</if>
				<if test="brif != null ">#{brif,jdbcType=VARCHAR},</if>
				<if test="create_date != null and create_date != ''">to_date(#{create_date,jdbcType=VARCHAR},'yyyy/MM/dd')</if>
			</trim>	
		)
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO med_affi_check_main (
		<trim suffix="" suffixOverrides=",">
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="check_id != null and check_id != ''">
		check_id
		,
		</if>
		<if test="check_code != null and check_code != ''">
		check_code
		,
		</if>
		<if test="store_id != null and store_id != ''">
		store_id
		,
		</if>
		<if test="store_no != null and store_no != ''">
		store_no
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="check_date != null and check_date != ''">
		check_date
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		emp_id
		,
		</if>
		<if test="maker != null and maker != ''">
		maker
		,
		</if>
		<if test="checker != null and checker != ''">
		checker
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="brif != null ">
		brif
		,
		</if>
		<if test="create_date != null and create_date != ''">
		create_date
		,
		</if>
		</trim>
		) select med_affi_check_main_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			<trim suffix="" suffixOverrides=",">
			<if test="item.hos_id != null and item.hos_id != ''">
			#{item.hos_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.group_id != null and item.group_id != ''">
			#{item.group_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.copy_code != null and item.copy_code != ''">
			#{item.copy_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.check_id != null and item.check_id != ''">
			#{item.check_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.check_code != null and item.check_code != ''">
			#{item.check_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.store_id != null and item.store_id != ''">
			#{item.store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			#{item.store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_id != null and item.dept_id != ''">
			#{item.dept_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_no != null and item.dept_no != ''">
			#{item.dept_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.check_date != null and item.check_date != ''">
			#{item.check_date,jdbcType=DATE}
			,
			</if>
			<if test="item.emp_id != null and item.emp_id != ''">
			#{item.emp_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.maker != null and item.maker != ''">
			#{item.maker,jdbcType=INTEGER}
			,
			</if>
			<if test="item.checker != null and item.checker != ''">
			#{item.checker,jdbcType=INTEGER}
			,
			</if>
			<if test="item.state != null and item.state != ''">
			#{item.state,jdbcType=INTEGER}
			,
			</if>
			<if test="item.brif != null ">
			#{item.brif,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			#{item.create_date,jdbcType=DATE}
			,
			</if>
			</trim>
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE MED_AFFI_CHECK_MAIN 
			<trim prefix="SET"  suffixOverrides=","> 
				<if test="check_code != null and check_code != ''">check_code = #{check_code,jdbcType=VARCHAR},</if>
				<if test="store_id != null and store_id != ''">store_id = #{store_id,jdbcType=INTEGER},</if>
				<if test="store_no != null and store_no != ''">store_no = #{store_no,jdbcType=INTEGER},</if>
				<if test="dept_id != null and dept_id != ''">dept_id = #{dept_id,jdbcType=INTEGER},</if>
				<if test="dept_no != null and dept_no != ''">dept_no = #{dept_no,jdbcType=INTEGER},</if>
				<if test="check_date != null and check_date != ''">check_date = to_date(#{check_date,jdbcType=VARCHAR},'yyyy/MM/dd'),</if>
				<if test="emp_id != null and emp_id != ''">emp_id = #{emp_id,jdbcType=INTEGER},</if>
				<if test="maker != null and maker != ''">maker = #{maker,jdbcType=INTEGER},</if>
				<if test="checker != null and checker != ''">checker = #{checker,jdbcType=INTEGER},</if>
				<if test="state != null and state != ''">state = #{state,jdbcType=INTEGER},</if>
				<if test="brif != null ">brif = #{brif,jdbcType=VARCHAR},</if>
				<if test="create_date != null and create_date != ''">create_date = to_date(#{create_date,jdbcType=VARCHAR},'yyyy/MM/dd'),</if>
			</trim>
		<where>                     
			<if test="hos_id != null and hos_id != ''">AND hos_id = #{hos_id,jdbcType=INTEGER}</if>
			<if test="group_id != null and group_id != ''">AND group_id = #{group_id,jdbcType=INTEGER}</if>
			<if test="copy_code != null and copy_code != ''">AND copy_code = #{copy_code,jdbcType=VARCHAR}</if>
			<if test="check_id != null and check_id != ''">AND check_id = #{check_id,jdbcType=INTEGER}</if>
		</where>   
	</update>
	
	<update id="updateAuditBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_check_main set 
				check_date = to_date(#{item.check_date,jdbcType=VARCHAR},'yyyy/MM/dd'),
				checker = #{item.checker,jdbcType=INTEGER},
				state = #{item.state,jdbcType=INTEGER}
			<where>   
				hos_id = #{item.hos_id,jdbcType=INTEGER}   
				AND group_id = #{item.group_id,jdbcType=INTEGER} 
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}  
				AND check_id = #{item.check_id,jdbcType=INTEGER}            
			</where>  			
		</foreach>
	</update>
	
	<update id="updateStateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_check_main set 
				state = #{item.state,jdbcType=INTEGER}
			<where>   
				hos_id = #{item.hos_id,jdbcType=INTEGER}   
				AND group_id = #{item.group_id,jdbcType=INTEGER} 
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}  
				AND check_id = #{item.check_id,jdbcType=INTEGER}            
			</where>  			
		</foreach>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE med_affi_check_main 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.check_code != null and item.check_code != ''">
			check_code = #{item.check_code,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.store_id != null and item.store_id != ''">
			store_id = #{item.store_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.store_no != null and item.store_no != ''">
			store_no = #{item.store_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_id != null and item.dept_id != ''">
			dept_id = #{item.dept_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.dept_no != null and item.dept_no != ''">
			dept_no = #{item.dept_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.check_date != null and item.check_date != ''">
			check_date = #{item.check_date,jdbcType=DATE}
			,
			</if>
			<if test="item.emp_id != null and item.emp_id != ''">
			emp_id = #{item.emp_id,jdbcType=INTEGER}
			,
			</if>
			<if test="item.maker != null and item.maker != ''">
			maker = #{item.maker,jdbcType=INTEGER}
			,
			</if>
			<if test="item.checker != null and item.checker != ''">
			checker = #{item.checker,jdbcType=INTEGER}
			,
			</if>
			<if test="item.state != null and item.state != ''">
			state = #{item.state,jdbcType=INTEGER}
			,
			</if>
			<if test="item.brif != null ">
			brif = #{item.brif,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.create_date != null and item.create_date != ''">
			create_date = #{item.create_date,jdbcType=DATE}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.check_id != null and item.check_id != ''">
			AND check_id = #{check_id,jdbcType=INTEGER}
			</if>  
			<if test="item.check_code != null and item.check_code != ''">
			AND check_code = #{check_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.store_id != null and item.store_id != ''">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>  
			<if test="item.store_no != null and item.store_no != ''">
			AND store_no = #{store_no,jdbcType=INTEGER}
			</if>  
			<if test="item.dept_id != null and item.dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>  
			<if test="item.dept_no != null and item.dept_no != ''">
			AND dept_no = #{dept_no,jdbcType=INTEGER}
			</if>  
			<if test="item.check_date != null and item.check_date != ''">
			AND check_date = #{check_date,jdbcType=DATE}
			</if>  
			<if test="item.emp_id != null and item.emp_id != ''">
			AND emp_id = #{emp_id,jdbcType=INTEGER}
			</if>  
			<if test="item.maker != null and item.maker != ''">
			AND maker = #{maker,jdbcType=INTEGER}
			</if>  
			<if test="item.checker != null and item.checker != ''">
			AND checker = #{checker,jdbcType=INTEGER}
			</if>  
			<if test="item.state != null and item.state != ''">
			AND state = #{state,jdbcType=INTEGER}
			</if>  
			<if test="item.brif != null ">
			AND brif = #{brif,jdbcType=VARCHAR}
			</if>  
			<if test="item.create_date != null and item.create_date != ''">
			AND create_date = #{create_date,jdbcType=DATE}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM med_affi_check_main 
		<where>                     
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="check_id != null and check_id != ''">
		AND check_id = #{check_id,jdbcType=INTEGER}
		</if>
		<if test="check_code != null and check_code != ''">
		AND check_code = #{check_code,jdbcType=VARCHAR}
		</if>
		<if test="store_id != null and store_id != ''">
		AND store_id = #{store_id,jdbcType=INTEGER}
		</if>
		<if test="store_no != null and store_no != ''">
		AND store_no = #{store_no,jdbcType=INTEGER}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="check_date != null and check_date != ''">
		AND check_date = #{check_date,jdbcType=DATE}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="checker != null and checker != ''">
		AND checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="brif != null ">
		AND brif = #{brif,jdbcType=VARCHAR}
		</if>
		<if test="create_date != null and create_date != ''">
		AND create_date = #{create_date,jdbcType=DATE}
		</if>
		</where>  
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM med_affi_check_main 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.check_id != null and item.check_id != ''">
				AND check_id = #{item.check_id,jdbcType=INTEGER}
				</if>
				<if test="item.check_code != null and item.check_code != ''">
				AND check_code = #{item.check_code,jdbcType=VARCHAR}
				</if>
				<if test="item.store_id != null and item.store_id != ''">
				AND store_id = #{item.store_id,jdbcType=INTEGER}
				</if>
				<if test="item.store_no != null and item.store_no != ''">
				AND store_no = #{item.store_no,jdbcType=INTEGER}
				</if>
				<if test="item.dept_id != null and item.dept_id != ''">
				AND dept_id = #{item.dept_id,jdbcType=INTEGER}
				</if>
				<if test="item.dept_no != null and item.dept_no != ''">
				AND dept_no = #{item.dept_no,jdbcType=INTEGER}
				</if>
				<if test="item.check_date != null and item.check_date != ''">
				AND check_date = #{item.check_date,jdbcType=DATE}
				</if>
				<if test="item.emp_id != null and item.emp_id != ''">
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>
				<if test="item.maker != null and item.maker != ''">
				AND maker = #{item.maker,jdbcType=INTEGER}
				</if>
				<if test="item.checker != null and item.checker != ''">
				AND checker = #{item.checker,jdbcType=INTEGER}
				</if>
				<if test="item.state != null and item.state != ''">
				AND state = #{item.state,jdbcType=INTEGER}
				</if>
				<if test="item.brif != null ">
				AND brif = #{item.brif,jdbcType=VARCHAR}
				</if>
				<if test="item.create_date != null and item.create_date != ''">
				AND create_date = #{item.create_date,jdbcType=DATE}
				</if>
			</foreach>
	    </where>  
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="medAffiCheckMain" >
	
		SELECT 
			hos_id,
			group_id,
			copy_code,
			check_id,
			check_code,
			store_id,
			store_no,
			dept_id,
			dept_no,
			check_date,
			emp_id,
			maker,
			checker,
			state,
			brif,
			create_date
		FROM med_affi_check_main 
		<where>                     
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="check_id != null and check_id != ''">
			AND check_id = #{check_id,jdbcType=INTEGER}
			</if>
			<if test="check_code != null and check_code != ''">
			AND check_code = #{check_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="store_no != null and store_no != ''">
			AND store_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
			AND dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date != ''">
			AND check_date = #{check_date,jdbcType=DATE}
			</if>
			<if test="emp_id != null and emp_id != ''">
			AND emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="maker != null and maker != ''">
			AND maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="checker != null and checker != ''">
			AND checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
			</if>
			<if test="brif != null ">
			AND brif = #{brif,jdbcType=VARCHAR}
			</if>
			<if test="create_date != null and create_date != ''">
			AND create_date = #{create_date,jdbcType=DATE}
			</if>
		</where>   
		order by check_id asc
	</select>
	
	<select id="queryByCode" resultMap="medAffiCheckMain"  parameterType="java.util.Map" >
	
		SELECT 
			hos_id,
			group_id,
			copy_code,
			check_id,
			check_code,
			store_id,
			store_no,
			dept_id,
			dept_no,
			check_date,
			emp_id,
			maker,
			checker,
			state,
			brif,
			create_date
		FROM med_affi_check_main 
		WHERE 
			hos_id = #{hos_id,jdbcType=INTEGER}   and 
			group_id = #{group_id,jdbcType=INTEGER}   and 
			copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			check_id = #{check_id,jdbcType=INTEGER} 
	
	</select>
	
	<select id="queryByUniqueness" resultMap="medAffiCheckMain"  parameterType="java.util.Map" >
	
		SELECT 
			hos_id,
			group_id,
			copy_code,
			check_id,
			check_code,
			store_id,
			store_no,
			dept_id,
			dept_no,
			check_date,
			emp_id,
			maker,
			checker,
			state,
			brif,
			create_date
		FROM med_affi_check_main 
		<where>                     
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="check_id != null and check_id != ''">
			AND check_id = #{check_id,jdbcType=INTEGER}
			</if>
			<if test="check_code != null and check_code != ''">
			AND check_code = #{check_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="store_no != null and store_no != ''">
			AND store_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
			AND dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date != ''">
			AND check_date = #{check_date,jdbcType=DATE}
			</if>
			<if test="emp_id != null and emp_id != ''">
			AND emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="maker != null and maker != ''">
			AND maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="checker != null and checker != ''">
			AND checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
			</if>
			<if test="brif != null ">
			AND brif = #{brif,jdbcType=VARCHAR}
			</if>
			<if test="create_date != null and create_date != ''">
			AND create_date = #{create_date,jdbcType=DATE}
			</if>
		</where>   
		order by check_id asc
	</select>
	
	<select id="queryExists" resultMap="medAffiCheckMain"  parameterType="java.util.Map" >
	
		SELECT 
			hos_id,
			group_id,
			copy_code,
			check_id,
			check_code,
			store_id,
			store_no,
			dept_id,
			dept_no,
			check_date,
			emp_id,
			maker,
			checker,
			state,
			brif,
			create_date
		FROM med_affi_check_main 
		<where>                     
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="check_id != null and check_id != ''">
			AND check_id = #{check_id,jdbcType=INTEGER}
			</if>
			<if test="check_code != null and check_code != ''">
			AND check_code = #{check_code,jdbcType=VARCHAR}
			</if>
			<if test="store_id != null and store_id != ''">
			AND store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="store_no != null and store_no != ''">
			AND store_no = #{store_no,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
			AND dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="check_date != null and check_date != ''">
			AND check_date = to_date(#{check_date,jdbcType=DATE},'yyyy/MM/dd')
			</if>
			<if test="emp_id != null and emp_id != ''">
			AND emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="maker != null and maker != ''">
			AND maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="checker != null and checker != ''">
			AND checker = #{checker,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
			</if>
			<if test="brif != null ">
			AND brif = #{brif,jdbcType=VARCHAR}
			</if>
			<if test="create_date != null and create_date != ''">
			AND create_date = to_date(#{create_date,jdbcType=DATE},'yyyy/MM/dd')
			</if>
		</where>   
		order by check_id asc
	</select>
	
	<select id="queryMedAffiCheckMain"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
		select 
			mcm.group_id as group_id,
			mcm.hos_id as hos_id,
			mcm.copy_code as copy_code,
			mcm.check_id as check_id,--盘点单ID
			mcm.check_code as check_code,--盘点单号
			mcm.brif as brif,
			mcm.store_id as store_id,--仓库ID
			mcm.store_no as store_no,--仓库变更ID
			hsd.store_code as store_code,
			hsd.store_name as store_name,
			mcm.dept_id as dept_id,--科室ID
			mcm.dept_no as dept_no,--科室变更ID
			hdd.dept_code as dept_code, 
			hdd.dept_name as dept_name, 
			mcm.emp_id as emp_id,
			he.emp_code as emp_code,
			he.emp_name as emp_name,
			mcm.maker as maker,
			mcm.create_date create_date,
			sumaker.user_name as maker_user_name,
			mcm.check_date as check_date,--审核日期
			mcm.checker as checker,
			suchecker.user_name as checker_user_name,
			mcm.state as state,--状态
			macr.out_id,
      		macr.out_no,
      		macr.in_id,
      		macr.in_no
		from med_affi_check_main mcm
		left join hos_store_dict hsd 
			on mcm.group_id = hsd.group_id and mcm.hos_id = hsd.hos_id 
			and mcm.store_id = hsd.store_id
			<if test="show_history == 1">
				and mcm.store_no = hsd.store_no
			</if>
			<if test="show_history == 0">
				and hsd.is_stop = 0
			</if>
		left join hos_dept_dict hdd 
			on mcm.group_id = hdd.group_id and mcm.hos_id = hdd.hos_id 
			and mcm.dept_id = hdd.dept_id
			<if test="show_history == 1">
				and mcm.dept_no = hdd.dept_no
			</if>
			<if test="show_history == 0">
				and hdd.is_stop = 0
			</if>
		left join hos_emp he 
			on mcm.group_id = he.group_id and mcm.hos_id = he.hos_id 
			and mcm.emp_id = he.emp_id
		left join sys_user sumaker 
			on mcm.group_id = sumaker.group_id and mcm.hos_id = sumaker.hos_id 
			and mcm.copy_code = sumaker.copy_code and mcm.maker = sumaker.user_id
		left join sys_user suchecker 
			on mcm.group_id = suchecker.group_id and mcm.hos_id = suchecker.hos_id 
			and mcm.copy_code = suchecker.copy_code and mcm.checker = suchecker.user_id
		left join med_affi_check_rela macr on macr.check_code = mcm.check_code
         	and macr.check_id = mcm.check_id
         	and macr.group_id = mcm.group_id
         	and macr.hos_id = mcm.hos_id
         	and macr.copy_code = mcm.copy_code
		where mcm.hos_id = #{hos_id,jdbcType=INTEGER}
			AND mcm.group_id = #{group_id,jdbcType=INTEGER}
			AND mcm.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="create_date_start != null and create_date_start != ''">
				AND mcm.create_date >= #{create_date_start,jdbcType=DATE}
			</if>
			<if test="create_date_end != null and create_date_end != ''">
				<![CDATA[AND mcm.create_date <= #{create_date_end,jdbcType=DATE}]]>
			</if>
			<if test="store_id != null and store_id != ''">
				AND mcm.store_id = #{store_id,jdbcType=INTEGER}
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND mcm.emp_id = #{emp_id,jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				AND mcm.state = #{state,jdbcType=INTEGER}
			</if>
			<if test="check_code != null and check_code != ''">
				AND mcm.check_code like '${check_code}%'
			</if>
		order by mcm.check_id asc
	</select>
	
	<select id="queryMedAffiCheckMainByMedInv"  parameterType="java.util.Map"  resultType="java.util.TreeMap">
		select a.group_id ,
		      a.hos_id ,
		      a.copy_code ,
		      a.inv_id ,
		      mid.inv_no ,
		      mid.inv_code ,
		      mid.inv_name ,
		      mid.inv_model ,--规格型号
		      mid.unit_code,
		      hu.unit_name ,
		      a.price ,--单价
		      a.batch_no as batch_no,
		      a.bar_code as bar_code,
		      a.left_amount ,
		      a.left_money,
		      mbv.inva_date as inva_date,
		      mbd.disinfect_date as disinfect_date,
		      mid.fac_id as fac_id,
		      hfd.fac_code as fac_code,
		      hfd.fac_name as fac_name,
		      a.location_id ,
		      mld.location_code as location_code,
		      mld.location_name as location_name
			from (
			  	select group_id,hos_id,copy_code,store_id,inv_id,batch_no,price,bar_code,location_id,
			  	sum(nvl(left_amount,0)) left_amount,sum(nvl(left_money,0)) left_money 
			  	from med_affi_fifo 
			  	group by group_id,hos_id,copy_code,store_id,inv_id,batch_no,price,bar_code,location_id
			) a left join med_inv_dict mid on a.inv_id = mid.inv_id and a.group_id = mid.group_id 
				and a.hos_id = mid.hos_id and a.copy_code = mid.copy_code and mid.is_stop =0 
				<!-- and mid.use_state =1 -->
			 left join hos_unit hu on mid.group_id = hu.group_id and mid.hos_id = hu.hos_id
			    and mid.unit_code = hu.unit_code  and hu.is_stop = 0
			left join med_batch_validity mbv ON a.group_id = mbv.group_id and a.hos_id = mbv.hos_id
			    and a.copy_code = mbv.copy_code and a.inv_id = mbv.inv_id and a.batch_no = mbv.batch_no 
			left join med_batch_disinfect mbd on a.group_id = mbd.group_id and a.hos_id = mbd.hos_id and a.copy_code = mbd.copy_code
			    and a.inv_id = mbd.inv_id and a.batch_no = mbd.batch_no 
			left join hos_fac_dict hfd on mid.group_id = hfd.group_id and mid.hos_id = hfd.hos_id and mid.fac_id = hfd.fac_id and mid.fac_no=hfd.fac_no
			left join med_location_dict mld on a.group_id = mld.group_id and a.hos_id = mld.hos_id and a.copy_code = mld.copy_code
			    and a.location_id = mld.location_id and mld.is_stop = 0 
		 	<where>                     
				<if test="hos_id != null and hos_id != ''">
					AND mid.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="group_id != null and group_id != ''">
					AND mid.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND mid.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="inv_id != null and inv_id != ''">
					AND mid.inv_id = #{inv_id,jdbcType=INTEGER}
				</if>
				<if test="store_id != null and store_id != ''">
					AND a.store_id = #{store_id,jdbcType=INTEGER}
				</if>
				<if test="med_type_id != null and med_type_id != ''">
					AND mid.med_type_id = #{med_type_id,jdbcType=INTEGER}
				</if>
				<if test="is_zero == 1">
					AND nvl(a.left_amount,0) > 0
				</if>
				<if test="is_zero == 0">
					and nvl(a.left_amount,0) >= 0
				</if>
			</where>   
			order by mid.inv_code
	</select>
	
	<select id="queryMedAffiCheckMainByCode" resultMap="medAffiCheckMain"  parameterType="java.util.Map" >
	
		SELECT 
			mcm.hos_id,
			mcm.group_id,
			mcm.copy_code,
			mcm.check_id,
			mcm.check_code,
			mcm.store_id,
			mcm.store_no,
			hsd.store_code,
			hsd.store_name,
			mcm.dept_id,
			mcm.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			mcm.check_date,
			mcm.emp_id,
			mcm.maker,
			mcm.checker,
			mcm.state,
			mcm.brif,
			mcm.create_date
		FROM med_affi_check_main mcm
		left join hos_store_dict hsd 
			on mcm.group_id = hsd.group_id and mcm.hos_id = hsd.hos_id 
			and mcm.store_id = hsd.store_id 
			<if test="show_history == 1">
				and mcm.store_no = hsd.store_no
			</if>
			<if test="show_history == 0">
				and hsd.is_stop = 0
			</if>
		left join hos_dept_dict hdd 
			on mcm.group_id = hdd.group_id and mcm.hos_id = hdd.hos_id 
			and mcm.dept_id = hdd.dept_id 
			<if test="show_history == 1">
				and mcm.dept_no = hdd.dept_no
			</if>
			<if test="show_history == 0">
				and hdd.is_stop = 0
			</if>
    	left join hos_emp hed 
    		on mcm.group_id = hed.group_id and mcm.hos_id = hed.hos_id 
    		and mcm.emp_id = hed.emp_id and hed.is_stop=0
		WHERE 
			mcm.hos_id = #{hos_id,jdbcType=INTEGER}   and 
			mcm.group_id = #{group_id,jdbcType=INTEGER}   and 
			mcm.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
			mcm.check_id = #{check_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 生成出入库单取主表信息 -->
	<select id="queryMedAffiCheckMainForInOut" resultType="java.util.TreeMap"  parameterType="java.util.Map" >
		SELECT  hos_id, group_id, copy_code, check_id, check_code, store_id, store_no,
			dept_id, dept_no, emp_id as dept_emp
		FROM med_affi_check_main
		WHERE hos_id = #{hos_id,jdbcType=INTEGER} 
			and group_id = #{group_id,jdbcType=INTEGER} 
			and copy_code = #{copy_code,jdbcType=VARCHAR} 
			and check_id = #{check_id,jdbcType=INTEGER} 
	</select>
	
	
	<!-- 盘点单打印 主表信息 -->
	<select id="queryAffiCheckPrintTemlateByMain" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT A.GROUP_ID,A.HOS_ID,A.COPY_CODE,A.CHECK_ID,A.CHECK_CODE,
	       B.STORE_CODE,B.STORE_NAME,C.DEPT_CODE,C.DEPT_NAME,
	       S1.EMP_CODE AS EMP_CODE,S1.EMP_NAME AS EMP_NAME,
	       S2.USER_NAME AS MAKER, to_char(A.CREATE_DATE, 'yyyy-MM-dd hh24:mi:ss') create_date,
	       S3.USER_NAME AS CHECKER, to_char(A.CHECK_DATE, 'yyyy-MM-dd hh24:mi:ss') check_date,
	       A.STATE,A.BRIF,sum(nvl(mcd.chk_amount,0)) CHK_AMOUNT_SUM,
	       sum(mcd.chk_amount * mcd.price) CHK_MONEY_SUM,
	       sum(nvl(mcd.cur_amount,0)) CUR_AMOUNT_SUM,
	       sum(mcd.cur_amount * mcd.price) CUR_MONEY_SUM,
	       sum((nvl(mcd.cur_amount,0)-nvl(mcd.chk_amount,0))) LOSS_AMOUNT_SUM,
	       sum((nvl(mcd.cur_amount,0)-nvl(mcd.chk_amount,0)) * mcd.price) LOSS_MONEY_SUM,
	       
	       sum(mcd.chk_amount * mcd.price) money_sum, 
	       sum(mcd.chk_amount * mcd.price) money_sum_upper 
		FROM MED_AFFI_CHECK_MAIN A
		left join MED_AFFI_CHECK_DETAIL mcd 
			on a.group_id = mcd.group_id and a.hos_id = mcd.hos_id 
			and a.copy_code = mcd.copy_code and a.check_id = mcd.check_id
	    LEFT JOIN HOS_STORE_DICT B ON A.GROUP_ID=B.GROUP_ID 
	         AND A.HOS_ID = B.HOS_ID AND A.STORE_ID = B.STORE_ID AND A.STORE_NO = B.STORE_NO
	    LEFT JOIN HOS_DEPT_DICT C ON A.GROUP_ID = C.GROUP_ID AND A.HOS_ID = C.HOS_ID
	         AND A.DEPT_ID = C.DEPT_ID AND A.DEPT_NO = C.DEPT_NO
	    LEFT JOIN HOS_EMP_DICT S1 ON A.GROUP_ID = S1.GROUP_ID AND A.HOS_ID =S1.HOS_ID
	         AND A.EMP_ID = S1.EMP_ID AND S1.IS_STOP = 0
	    LEFT JOIN SYS_USER S2 ON A.GROUP_ID = S2.GROUP_ID AND A.HOS_ID = S2.HOS_ID
	         AND A.MAKER = S2.USER_ID AND S2.IS_STOP = 0
	    LEFT JOIN SYS_USER S3 ON A.GROUP_ID = S3.GROUP_ID AND A.HOS_ID = S3.HOS_ID
	         AND A.CHECKER = S3.USER_ID AND S3.IS_STOP =0
		<where>
			<if test="group_id !=null and group_id !='' ">
				and A.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and A.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and A.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="check_id !=null and check_id !='' ">
				and A.check_id = #{check_id,jdbcType=INTEGER}
			</if>
		</where>
		group by A.GROUP_ID, A.HOS_ID, A.COPY_CODE, A.CHECK_ID, A.CHECK_CODE,
	       B.STORE_CODE, B.STORE_NAME, C.DEPT_CODE, C.DEPT_NAME, S1.EMP_CODE, 
	       S1.EMP_NAME, S2.USER_NAME, A.CREATE_DATE, S3.USER_NAME, A.CHECK_DATE, 
	       A.STATE, A.BRIF
	</select>
	
	<select id="queryAffiCheckPrintTemlateByMainBatch" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.check_id as id,A.GROUP_ID,A.HOS_ID,A.COPY_CODE,A.CHECK_ID,A.CHECK_CODE,
	       B.STORE_CODE,B.STORE_NAME,C.DEPT_CODE,C.DEPT_NAME,
	       S1.EMP_CODE AS EMP_CODE,S1.EMP_NAME AS EMP_NAME,
	       S2.USER_NAME AS MAKER, to_char(A.CREATE_DATE, 'yyyy-MM-dd hh24:mi:ss') create_date,
	       S3.USER_NAME AS CHECKER, to_char(A.CHECK_DATE, 'yyyy-MM-dd hh24:mi:ss') check_date,
	       A.STATE,A.BRIF, sum(nvl(mcd.chk_amount,0)) CHK_AMOUNT_SUM,
	       sum(mcd.chk_amount * mcd.price) CHK_MONEY_SUM,
	       sum(nvl(mcd.cur_amount,0)) CUR_AMOUNT_SUM,
	       sum(mcd.cur_amount * mcd.price) CUR_MONEY_SUM,
	       sum((nvl(mcd.cur_amount,0)-nvl(mcd.chk_amount,0))) LOSS_AMOUNT_SUM,
	       sum((nvl(mcd.cur_amount,0)-nvl(mcd.chk_amount,0)) * mcd.price) LOSS_MONEY_SUM,
	       sum(mcd.chk_amount * mcd.price) MONEY_SUM,
	       sum(mcd.chk_amount * mcd.price) MONEY_SUM_UPPER ,
	       sum(mcd.chk_amount) AMOUNT_SUM
		FROM MED_AFFI_CHECK_MAIN A
		left join MED_AFFI_CHECK_DETAIL mcd 
			on a.group_id = mcd.group_id and a.hos_id = mcd.hos_id 
			and a.copy_code = mcd.copy_code and a.check_id = mcd.check_id
	    LEFT JOIN HOS_STORE_DICT B ON A.GROUP_ID=B.GROUP_ID 
	         AND A.HOS_ID = B.HOS_ID AND A.STORE_ID = B.STORE_ID AND A.STORE_NO = B.STORE_NO
	    LEFT JOIN HOS_DEPT_DICT C ON A.GROUP_ID = C.GROUP_ID AND A.HOS_ID = C.HOS_ID
	         AND A.DEPT_ID = C.DEPT_ID AND A.DEPT_NO = C.DEPT_NO
	    LEFT JOIN HOS_EMP_DICT S1 ON A.GROUP_ID = S1.GROUP_ID AND A.HOS_ID =S1.HOS_ID
	         AND A.EMP_ID = S1.EMP_ID AND S1.IS_STOP = 0
	    LEFT JOIN SYS_USER S2 ON A.GROUP_ID = S2.GROUP_ID AND A.HOS_ID = S2.HOS_ID
	         AND A.MAKER = S2.USER_ID AND S2.IS_STOP = 0
	    LEFT JOIN SYS_USER S3 ON A.GROUP_ID = S3.GROUP_ID AND A.HOS_ID = S3.HOS_ID
	         AND A.CHECKER = S3.USER_ID AND S3.IS_STOP =0
		<where>
			<if test="group_id !=null and group_id !='' ">
				and A.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and A.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and A.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
	     	and a.check_id in  (${paraId})
		</where>
		group by a.check_id, A.GROUP_ID, A.HOS_ID, A.COPY_CODE, A.CHECK_ID, A.CHECK_CODE,
	       B.STORE_CODE, B.STORE_NAME, C.DEPT_CODE, C.DEPT_NAME, S1.EMP_CODE, 
	       S1.EMP_NAME, S2.USER_NAME, A.CREATE_DATE, S3.USER_NAME, A.CHECK_DATE, 
	       A.STATE, A.BRIF
		order by a.check_id desc
	</select>
	
	
	<!-- 盘点单打印 明细表信息 -->
	<select id="queryAffiCheckPrintTemlateByDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT a.check_id as id,A.GROUP_ID,A.HOS_ID,A.COPY_CODE,
		   B.INV_CODE,B.INV_NAME,B.INV_MODEL,
	       B.UNIT_CODE,C.UNIT_NAME,A.BATCH_NO,A.BAR_CODE,
	       A.PRICE,A.CUR_AMOUNT,nvl(A.CUR_AMOUNT,0)*nvl(A.PRICE,0) CUR_MONEY,
	       A.CHK_AMOUNT,nvl(A.CHK_AMOUNT,0)*nvl(A.PRICE,0) CHK_MONEY,
	       nvl(A.CUR_AMOUNT,0) - nvl(A.CHK_AMOUNT,0) LOSS_AMOUNT,
	       (nvl(A.CUR_AMOUNT,0) - nvl(A.CHK_AMOUNT,0))*(nvl(A.CUR_AMOUNT,0)) LOSS_MONEY,
	       to_char(A.DISINFECT_DATE, 'yyyy-MM-dd') disinfect_date,
	       to_char(A.INVA_DATE, 'yyyy-MM-dd') inva_date, A.NOTE,A.LOCATION_ID,
	       E.LOCATION_CODE,E.LOCATION_NAME,D.CERT_CODE,B.BID_CODE, f.fac_name
		FROM MED_AFFI_CHECK_DETAIL A
	    LEFT JOIN MED_INV_DICT B ON A.GROUP_ID = B.GROUP_ID AND A.HOS_ID = B.HOS_ID
	         AND A.COPY_CODE = B.COPY_CODE AND A.INV_ID = B.INV_ID 
	         AND A.INV_NO = B.INV_NO AND B.USE_STATE = 1
	    LEFT JOIN HOS_UNIT C ON B.GROUP_ID = C.GROUP_ID AND B.HOS_ID = C.HOS_ID
	         AND B.UNIT_CODE = C.UNIT_CODE AND C.IS_STOP= 0
	    LEFT JOIN MED_INV_CERT_RELA D ON B.GROUP_ID = D.GROUP_ID AND B.HOS_ID =D.HOS_ID
	         AND B.INV_ID = D.INV_ID 
	    LEFT JOIN MED_LOCATION_DICT E ON A.GROUP_ID = E.GROUP_ID AND A.HOS_ID = E.HOS_ID
	         AND A.LOCATION_ID = E.LOCATION_ID AND E.IS_STOP = 0
		LEFT JOIN hos_fac_dict f 
			ON b.group_id = f.group_id AND b.hos_id = f.hos_id 
			AND b.fac_id = f.fac_id AND b.fac_no = c.fac_no 
	    <where>
			<if test="group_id !=null and group_id !='' ">
				and A.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id !=null and hos_id !='' ">
				and A.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code !=null and copy_code !='' ">
				and A.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="p_num ==1">
				and a.check_id in (${paraId})
			</if>
			<if test="p_num ==0">
				and  a.check_id=#{check_id,jdbcType=NUMERIC}
			</if>	
			
		</where>
	</select>
	
	<!-- 引入仓库药品 -->
	<select id="queryMedAffiStoreInvDetail" parameterType="java.util.Map" resultType="java.util.Map"  >
		with list_temp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.inv_id,jdbcType=INTEGER} as inv_id,
					#{item.inv_no,jdbcType=INTEGER} as inv_no,
					#{item.price,jdbcType=FLOAT} as price,
					#{item.bar_code,jdbcType=VARCHAR} as bar_code,
					#{item.batch_no,jdbcType=VARCHAR} as batch_no,
					#{item.store_id,jdbcType=INTEGER} as store_id,
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code
				from dual
			</foreach>
		),sum_list as(
		     select mfb.group_id, mfb.hos_id, mfb.copy_code, mfb.store_id, mfb.inv_id, 
		            mfb.batch_no, mfb.price, mfb.bar_code, nvl(mfb.location_id, 0) as location_id, 
		            sum(nvl(mfb.left_amount, 0)) as left_amount, 
		            sum(nvl(mfb.left_money, 0)) as left_money
		      from list_temp lt
		      left join  med_affi_fifo mfb on lt.group_id = mfb.group_id
		      	and lt.hos_id = mfb.hos_id
		      	and lt.copy_code = mfb.copy_code
		      	and lt.inv_id = mfb.inv_id
		      	and lt.store_id = mfb.store_id
		      	and lt.price = mfb.price
		      	and lt.batch_no = mfb.batch_no
		      	and lt.bar_code = mfb.bar_code
		      where nvl(mfb.left_amount,0) > 0 
		      group by mfb.group_id, mfb.hos_id, mfb.copy_code, mfb.store_id, mfb.inv_id, mfb.batch_no, mfb.price, mfb.bar_code, mfb.location_id
		      order by mfb.inv_id
		  ) 
		  
		  select a.group_id, a.hos_id, a.copy_code, a.inv_id, mid.inv_no, mid.inv_code, mid.inv_name, 
		         mid.inv_model, mid.unit_code, hu.unit_name, a.price, a.batch_no, a.bar_code, mbv.inva_date, 
		         mbd.disinfect_date, hsd.sup_id, hsd.sup_no, hsd.sup_code, hsd.sup_name, mid.fac_id, hfd.fac_code, 
		         hfd.fac_name, a.location_id, mld.location_code, mld.location_name, 
		         a.left_amount as cur_amount, a.left_money as cur_money
		  from sum_list a
		  left join med_inv_dict mid on a.group_id = mid.group_id
		    and a.hos_id = mid.hos_id
		    and a.copy_code = mid.copy_code
		    and a.inv_id = mid.inv_id
		    and a.inv_no =mid.inv_no
		   <!--  and mid.use_state = 1  -->
		  left join hos_unit hu on mid.group_id = hu.group_id
		    and mid.hos_id = hu.hos_id
		    and mid.unit_code = hu.unit_code
		    and hu.is_stop = 0 
		  left join med_batch_validity mbv on a.group_id = mbv.group_id
		    and a.hos_id = mbv.hos_id
		    and a.copy_code = mbv.copy_code
		    and a.inv_id = mbv.inv_id
		    and a.batch_no = mbv.batch_no 
		  left join med_batch_disinfect mbd on a.group_id = mbd.group_id
		    and a.hos_id = mbd.hos_id
		    and a.copy_code = mbd.copy_code
		    and a.inv_id = mbd.inv_id
		    and a.batch_no = mbd.batch_no 
		  left join hos_fac_dict hfd on mid.group_id = hfd.group_id
		    and mid.hos_id = hfd.hos_id
		    and mid.fac_id = hfd.fac_id
		    and mid.fac_no = hfd.fac_no 
		  left join med_location_dict mld on a.group_id = mld.group_id
		    and a.hos_id = mld.hos_id
		    and a.copy_code = mld.copy_code
		    and a.location_id = mld.location_id
		    and mld.is_stop = 0 
		  left join med_inv_sup mis on a.group_id = mis.group_id
		    and a.hos_id = mis.hos_id
		    and a.copy_code = mis.copy_code
		    and a.inv_id = mis.inv_id
		    and mis.is_default = 1 
		  left join hos_sup_dict hsd on mis.group_id = hsd.group_id
		    and mis.hos_id = hsd.hos_id
		    and mis.sup_id = hsd.sup_id
		    and hsd.is_stop = 0 
		 order by mid.inv_code
	</select>
	
</mapper>