<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.payable.otherpay.AccElsePayMapper">
	
	<resultMap id="accElsePay" type="com.chd.hrp.acc.entity.payable.AccElsePay">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_money" column="pay_money"/>
	<result property="remark" column="remark"/>
	<result property="price" column="price"/>
	<result property="amount" column="amount"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="payee" column="payee"/>
	<result property="emp_no" column="emp_no"/>
	<result property="emp_code" column="emp_code"/>
	<result property="payee_name" column="payee_name"/>
	<result property="bank" column="bank"/>
	<result property="card_no" column="card_no"/>
	<result property="phone" column="phone"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
	</resultMap>
		
	<resultMap id="accElsePayMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="hos_name" column="hos_name"/>
	<result property="copy_code" column="copy_code"/>
	<result property="pay_code" column="pay_code"/>
	<result property="pay_money" column="pay_money"/>
	<result property="pay_money_s" column="pay_money_s"/>
	<result property="remark" column="remark"/>
	<result property="price" column="price"/>
	<result property="amount" column="amount"/>
	<result property="maker" column="maker"/>
	<result property="maker_name" column="maker_name"/>
	<result property="make_date" column="make_date"/>
	<result property="payee" column="payee"/>
	<result property="emp_no" column="emp_no"/>
	<result property="emp_code" column="emp_code"/>
	<result property="payee_name" column="payee_name"/>
	<result property="bank" column="bank"/>
	<result property="card_no" column="card_no"/>
	<result property="phone" column="phone"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_no" column="dept_no"/>
	<result property="dept_code" column="dept_code"/>
	<result property="dept_name" column="dept_name"/>
    
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO ACC_ELSE_PAY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			pay_code
			,
			pay_money
			,
			remark
			,
			price
			,
			amount
			,
			maker
			,
			make_date
			,
			payee
			,
			bank 
			,
			card_no
			,
			phone
			,
			dept_id 
			,
			dept_no
		) VALUES (
			#{group_id,jdbcType=INTEGER}
			,
			#{hos_id,jdbcType=INTEGER}
			,
			#{copy_code,jdbcType=VARCHAR}
			,
			#{pay_code,jdbcType=VARCHAR}
			,
			#{pay_money,jdbcType=INTEGER}
			,
			#{remark,jdbcType=VARCHAR}
			,
			#{price,jdbcType=INTEGER}
			,
			#{amount,jdbcType=INTEGER}
			,
			#{maker,jdbcType=INTEGER}
			,
			#{make_date,jdbcType=DATE}
			,
			#{payee,jdbcType=INTEGER}
			,
			#{bank,jdbcType=VARCHAR}
			,
			#{card_no,jdbcType=VARCHAR}
			,
			#{phone,jdbcType=VARCHAR}
			,
			#{dept_id,jdbcType=INTEGER}
			,
			#{dept_no,jdbcType=INTEGER}
		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO ACC_ELSE_PAY (
			group_id
			,
			hos_id
			,
			copy_code
			,
			pay_code
			,
			pay_money
			,
			remark
			,
			price
			,
			amount
			,
			maker
			,
			make_date
			,
			payee
			,
			bank 
			,
			card_no
			,
			phone
			,
			dept_id 
			,
			dept_no
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id,jdbcType=INTEGER}
				,
				#{item.hos_id,jdbcType=INTEGER}
				,
				#{item.copy_code,jdbcType=VARCHAR}
				,
				#{item.pay_code,jdbcType=VARCHAR}
				,
				#{item.pay_money,jdbcType=VARCHAR}
				,
				#{item.remark,jdbcType=VARCHAR}
				,
				#{item.price,jdbcType=INTEGER}
				,
				#{item.amount,jdbcType=INTEGER}
				,
				#{item.maker,jdbcType=INTEGER}
				,
				#{item.make_date,jdbcType=DATE}
				,
				#{item.payee,jdbcType=INTEGER}
				,
				#{item.bank,jdbcType=VARCHAR}
				,
				#{item.card_no,jdbcType=VARCHAR}
				,
				#{item.phone,jdbcType=VARCHAR}
				,
				#{item.dept_id,jdbcType=INTEGER}
				,
				#{item.dept_no,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE ACC_ELSE_PAY  set
			pay_money = #{pay_money,jdbcType=VARCHAR}
			,
			remark = #{remark,jdbcType=VARCHAR}
			,
			price = #{price,jdbcType=INTEGER}
			,
			amount = #{amount,jdbcType=INTEGER}
			,
			payee = #{payee,jdbcType=INTEGER}
			,
			bank = #{bank,jdbcType=VARCHAR}
			,
			card_no = #{card_no,jdbcType=VARCHAR}
			,
			phone = #{phone,jdbcType=VARCHAR}
			,
			dept_id = #{dept_id,jdbcType=INTEGER}
			,
			dept_no = #{dept_no,jdbcType=INTEGER}
		where                    
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND pay_code = #{pay_code,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE ACC_ELSE_PAY set
				pay_money = #{item.pay_money,jdbcType=VARCHAR}
				,
				remark = #{item.remark,jdbcType=VARCHAR}
				,
				price = #{item.price,jdbcType=INTEGER}
				,
				amount = #{item.remark,jdbcType=INTEGER}
				,
				payee = #{item.payee,jdbcType=INTEGER}
				,
				bank = #{item.bank,jdbcType=VARCHAR}
				,
				card_no = #{item.card_no,jdbcType=VARCHAR}
				,
				phone = #{item.phone,jdbcType=VARCHAR}
				,
				dept_id = #{item.dept_id,jdbcType=INTEGER}
				,
				dept_no = #{item.dept_no,jdbcType=INTEGER}
			where                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND pay_code = #{item.pay_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM ACC_ELSE_PAY 
		where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND pay_code = #{pay_code,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM ACC_ELSE_PAY 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			    group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				AND pay_code = #{item.pay_code,jdbcType=VARCHAR}
			</foreach>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="accElsePayMap" >
	
		SELECT 
			a.group_id,
			a.hos_id ,
			a.copy_code,
			a.pay_code ,
			a.pay_money ,
			a.remark ,
			a.price ,
			a.amount ,
			a.maker ,
			b.user_name maker_name ,
			a.make_date ,
			a.payee ,
			c.emp_name payee_name ,
			c.emp_code ,
			c.emp_no ,
			a.bank ,
			a.card_no ,
			a.phone	,
			a.dept_id ,
			a.dept_no ,
			hdd.dept_code ,
			hdd.dept_name
		FROM ACC_ELSE_PAY a
		left join sys_user b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.user_id
				and b.is_stop = 0
		left join hos_emp_dict c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.payee = c.emp_id
				and c.is_stop = 0
		left join hos_dept_dict hdd
			on
				a.group_id = hdd.group_id
				and a.hos_id = hdd.hos_id
				and a.dept_id = hdd.dept_id
				and a.dept_no = hdd.dept_no
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			<if test="pay_code != null and pay_code != ''">
			AND a.pay_code = #{pay_code,jdbcType=VARCHAR} 
			</if>
			<if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
			AND a.make_date between to_date(#{start_date},'yyyy-MM-dd') and to_date(#{end_date},'yyyy-MM-dd')
			</if>
			<if test="maker != null and maker != ''">
			AND a.maker = #{maker,jdbcType=INTEGER}
			</if>
			<if test="payee != null and payee != ''">
			AND a.payee = #{payee,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
			AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			
		order by a.pay_code asc
	</select>
	<select id="queryByCode" resultMap="accElsePay"  parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id ,
			a.copy_code,
			a.pay_code ,
			a.pay_money ,
			a.remark ,
			a.price ,
			a.amount ,
			a.maker ,
			b.user_name maker_name ,
			a.make_date ,
			a.payee ,
			c.emp_no ,
			c.emp_code ,
			c.emp_name payee_name ,
			a.bank ,
			a.card_no ,
			a.phone	,
			a.dept_id ,
			a.dept_no ,
			hdd.dept_code ,
			hdd.dept_name
		FROM ACC_ELSE_PAY a
		left join sys_user b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.user_id
				and b.is_stop = 0
		left join hos_emp_dict c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.payee = c.emp_id
				and c.is_stop = 0
		left join hos_dept_dict hdd
			on
				a.group_id = hdd.group_id
				and a.hos_id = hdd.hos_id
				and a.dept_id = hdd.dept_id
				and a.dept_no = hdd.dept_no
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}   
			and a.hos_id = #{hos_id,jdbcType=INTEGER}   
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}   
			and a.pay_code = #{pay_code,jdbcType=VARCHAR} 
	</select>
	<select id="queryByUniqueness" resultMap="accElsePay"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			pay_code
			,
			pay_money
			,
			remark
			,
			price
			,
			amount
			,
			maker
			,
			make_date
			,
			payee
			,
			bank 
			,
			card_no
			,
			phone
			,
			dept_id 
			,
			dept_no
		FROM ACC_ELSE_PAY 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="pay_code != null and pay_code != ''">
		AND pay_code = #{pay_code,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryExists" resultMap="accElsePay"  parameterType="java.util.Map" >
	
		SELECT 
			group_id
			,
			hos_id
			,
			copy_code
			,
			pay_code
			,
			pay_money
			,
			remark
			,
			price
			,
			amount
			,
			maker
			,
			make_date
			,
			payee
			,
			bank 
			,
			card_no
			,
			phone
			,
			dept_id 
			,
			dept_no
		FROM ACC_ELSE_PAY 
		<where>                     
			<if test="group_id != null and group_id != ''">
			AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="pay_code != null and pay_code != ''">
			AND pay_code = #{pay_code,jdbcType=VARCHAR}
			</if>
		</where>   
	</select>
	
	
	<!-- 查询员工所对应的科室-->
	<select id="queryDeptNameByUserId" resultType="java.lang.String" parameterType="java.util.Map">
		select 
			dept_name, 
			maker
        from hos_emp a
        left join hos_dept b
        	on a.dept_id = b.dept_id
        left join ACC_ELSE_PAY c
        	on 
        		c.group_id = b.group_id
         		and c.maker = a.emp_id
        left join acc_dept_attr d
        	on 
        		a.emp_id = d.emp_id
         		and a.dept_id = d.dept_id
		where
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
            and c.maker = a.emp_id
            and a.dept_id=b.dept_id
            and a.dept_id=d.dept_id 
	</select>
	
	<select id="queryPrintData" parameterType="java.util.Map" resultMap="accElsePayMap" >
	
		SELECT 
			a.group_id,
			a.hos_id ,
			hi.hos_name ,
			a.copy_code,
			a.pay_code id,
			a.pay_money ,
			a.pay_money pay_money_s,
			a.remark ,
			a.price ,
			a.amount ,
			a.maker ,
			b.user_name maker_name ,
			to_char(a.make_date,'yyyy-MM-dd') make_date,
			a.payee ,
			c.emp_name payee_name ,
			c.emp_code ,
			c.emp_no ,
			a.bank ,
			a.card_no ,
			a.phone	,
			a.dept_id ,
			a.dept_no ,
			hdd.dept_code ,
			hdd.dept_name
		FROM ACC_ELSE_PAY a
		left join sys_user b
			on
				a.group_id = b.group_id
				and a.hos_id = b.hos_id
				and a.maker = b.user_id
				and b.is_stop = 0
		left join hos_emp_dict c
			on
				a.group_id = c.group_id
				and a.hos_id = c.hos_id
				and a.payee = c.emp_id
				and c.is_stop = 0
		left join hos_dept_dict hdd
			on
				a.group_id = hdd.group_id
				and a.hos_id = hdd.hos_id
				and a.dept_id = hdd.dept_id
				and a.dept_no = hdd.dept_no
		left join hos_info hi
			on
				a.group_id = hi.group_id
				and a.hos_id = hi.hos_id
				and hi.is_stop = 0
		where                     
			a.group_id = #{group_id,jdbcType=INTEGER}
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.pay_code in ( ${paraId} )
	</select>
</mapper>