<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.payable.loanmt.BudgBorrReturnMapper">
	<resultMap id="budgBorrReturn" type="com.chd.hrp.acc.entity.payable.BudgBorrReturn">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="return_code" column="return_code" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="proj_id" column="proj_id" />
		<result property="proj_no" column="proj_no" />
		<result property="emp_id" column="emp_id" />
		<result property="emp_no" column="emp_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="proj_code" column="proj_code" />
		<result property="proj_name" column="proj_name" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="return_amount" column="return_amount" />
		<result property="maker_name" column="maker_name" />
		<result property="make_date" column="make_date" />
		<result property="operator" column="operator" />
		<result property="operator_name" column="operator_name" />
		<result property="rerurn_date" column="rerurn_date" />
		<result property="state" column="state" />
		<result property="state_name" column="state_name" />
		<result property="pay_way" column="pay_way" />
	</resultMap>
	
	
	<insert id="addBudgBorrReturn" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_BORR_RETURN (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="return_code != null and return_code != ''">
		return_code
		,
		</if>
		<if test="return_date != null and return_date != ''">
		return_date
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		dept_id
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		dept_no
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		proj_id
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		proj_no
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		emp_id
		,
		</if>
		<if test="emp_no != null and emp_no != ''">
		emp_no
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		return_amount
		,
		</if>
		<if test="maker != null and maker != ''">
		maker
		,
		</if>
		<if test="make_date != null and make_date != ''">
		make_date
		,
		</if>
		<if test="operator != null and operator != ''">
		operator
		,
		</if>
		<if test="state != null and state != ''">
		state
		,
		</if>
		<if test="pay_way != null and pay_way != ''">
		pay_way
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="return_code != null and return_code != ''">
		#{return_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="return_date != null and return_date != ''">
		to_date(#{return_date},'yyyy/MM/dd')
		,
		</if>
		<if test="dept_id != null and dept_id != ''">
		#{dept_id,jdbcType=INTEGER}
		,
		</if>
		<if test="dept_no != null and dept_no != ''">
		#{dept_no,jdbcType=INTEGER}
		,
		</if>
		<if test="proj_id != null and proj_id != ''">
		#{proj_id,jdbcType=INTEGER}
		,
		</if>
		<if test="proj_no != null and proj_no != ''">
		#{proj_no,jdbcType=INTEGER}
		,
		</if>
		<if test="emp_id != null and emp_id != ''">
		#{emp_id,jdbcType=INTEGER}
		,
		</if>
		<if test="emp_no != null and emp_no != ''">
		#{emp_no,jdbcType=INTEGER}
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		#{return_amount,jdbcType=INTEGER}
		,
		</if>
		<if test="maker != null and maker != ''">
		#{maker,jdbcType=INTEGER}
		,
		</if>
		<if test="make_date != null and make_date != ''">
		#{make_date,jdbcType=DATE}
		,
		</if>
		<if test="operator != null and operator != ''">
		#{operator,jdbcType=INTEGER}
		,
		</if>
		<if test="state != null and state != ''">
		#{state,jdbcType=VARCHAR}
		,
		</if>
		<if test="pay_way != null and pay_way != ''">
		#{pay_way,jdbcType=VARCHAR}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatchBudgBorrReturn" parameterType="java.util.List" >
	
		INSERT INTO BUDG_BORR_RETURN (
		group_id,
		hos_id,
		copy_code,
		return_code,
		return_date,
		dept_id,
		dept_no,
		proj_id,
		proj_no,
		emp_id,
		emp_no,
		return_amount,
		maker,
		make_date,
		operator,
		state
		,
		pay_way
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
				#{item.group_id},
				#{item.hos_id},
				#{item.copy_code},
				#{item.return_code},
				#{item.return_date},
				#{item.dept_id},
				#{item.dept_no},
				#{item.proj_id},
				#{item.proj_no},
				#{item.emp_id},
				#{item.emp_no},
				#{item.return_amount},
				#{item.maker},
				#{item.make_date},
				#{item.operator,jdbcType=INTEGER}
				,
				#{item.state,jdbcType=VARCHAR}
				,
				#{item.pay_way,jdbcType=VARCHAR}
			from dual
		</foreach>
		)t
	</insert>
	
	<update id="updateBudgBorrReturn" parameterType="java.util.Map">
		UPDATE BUDG_BORR_RETURN SET
			dept_id = #{dept_id},
			dept_no = #{dept_no},
			<if test="proj_id != null and proj_id != ''">
				proj_id = #{proj_id},
				proj_no = #{proj_no},
			</if>
			<if test="proj_id == null or proj_id == ''">
				proj_id = null,
				proj_no = null,
			</if>
			emp_id = #{emp_id},
			emp_no = #{emp_no},
			return_date = to_date(#{return_date},'yyyy/MM/dd')
		
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
				 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
				 and 
		return_code =#{return_code,jdbcType=VARCHAR}
	</update>
	<update id="updateBatchBudgBorrReturn" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
			UPDATE BUDG_BORR_RETURN SET
			dept_id = #{item.dept_id},
			dept_no = #{item.dept_no},
			proj_id = #{item.proj_id},
			proj_no = #{item.proj_no},
			emp_id = #{item.emp_id},
			emp_no = #{item.emp_no},
			return_amount = #{item.return_amount},
			return_date = #{item.return_date}
			
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			return_code = #{item.return_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	
	<update id="updateAmount" parameterType="java.util.Map">
		UPDATE BUDG_BORR_RETURN SET
			return_amount = #{return_amount}
		WHERE 
		group_id =#{group_id,jdbcType=INTEGER}
		 and 
		hos_id =#{hos_id,jdbcType=INTEGER}
				 and 
		copy_code =#{copy_code,jdbcType=VARCHAR}
				 and 
		return_code =#{return_code,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateConfirmPay" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_BORR_RETURN SET
			operator = #{item.operator,jdbcType=INTEGER},
			state = #{item.state}
			WHERE 
			group_id = #{item.group_id,jdbcType=INTEGER}
			 and 
			hos_id = #{item.hos_id,jdbcType=INTEGER}
			 and 
			copy_code = #{item.copy_code,jdbcType=VARCHAR}
			 and 
			return_code = #{item.return_code,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="deleteBudgBorrReturn" parameterType="java.util.Map">
	
		DELETE FROM BUDG_BORR_RETURN WHERE
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		return_code = #{return_code,jdbcType=VARCHAR} 
	
	</delete>
	<delete id="deleteBatchBudgBorrReturn" parameterType="java.util.List">
		DELETE FROM BUDG_BORR_RETURN WHERE
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				 and 
				hos_id = #{item.hos_id,jdbcType=INTEGER}
				 and 
				copy_code = #{item.copy_code,jdbcType=VARCHAR}
				 and 
				return_code = #{item.return_code,jdbcType=VARCHAR}
				
			</foreach>
	
	</delete>
	<select id="queryBudgBorrReturn" parameterType="java.util.Map" resultMap="budgBorrReturn" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.return_code,
			a.return_date,
			a.dept_id,
			a.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			a.proj_id,
			a.proj_no,
			hpd.proj_code,
			hpd.proj_name,
			a.emp_id,
			a.emp_no,
			hed.emp_code,
			hed.emp_name,
			a.return_amount,
			a.maker,
			u1.user_name maker_name,
			a.make_date,
			a.operator,
			u2.user_name operator_name,
			a.state,
			bsd.value_name state_name,
			a.pay_way,
			apy.pay_name pay_way_name
		FROM BUDG_BORR_RETURN a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.operator = u2.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'RUTURN_STATE'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND a.return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="return_codes != null and return_codes != ''">
		AND a.return_code in (${return_codes}) 
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="emp_no != null and emp_no != ''">
		AND a.emp_no = #{emp_no,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND a.return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND a.maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND a.make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND a.checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="pay_way != null and pay_way != ''">
		AND a.pay_way = #{pay_way,jdbcType=VARCHAR}
		</if>
		<if test="return_date_b != null and return_date_b != '' and return_date_e != null and return_date_e != ''">
		AND a.return_date between to_date(#{return_date_b},'yyyy/MM/dd') and to_date(#{return_date_e},'yyyy/MM/dd')
		</if>
		</where>   
		order by a.return_code desc
	</select>
	<select id="queryBudgBorrReturnByCode" resultType="com.chd.hrp.acc.entity.payable.BudgBorrReturn" parameterType="java.util.Map" >
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.return_code,
			a.return_date,
			a.dept_id,
			a.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			a.proj_id,
			a.proj_no,
			hpd.proj_code,
			hpd.proj_name,
			a.emp_id,
			a.emp_no,
			hed.emp_code,
			hed.emp_name,
			a.return_amount,
			a.maker,
			u1.user_name maker_name,
			a.make_date,
			a.operator,
			u2.user_name operator_name,
			a.state,
			bsd.value_name state_name,
			a.pay_way,
			apy.pay_name pay_way_name
		FROM BUDG_BORR_RETURN a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.operator = u2.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'RUTURN_STATE'
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.return_code = #{return_code,jdbcType=VARCHAR}
	
	</select>
	<select id="queryBudgBorrReturnByUniqueness" resultType="com.chd.hrp.acc.entity.payable.BudgBorrReturn" parameterType="java.util.Map" >
	
		SELECT 
			group_id,
			hos_id,
			copy_code,
			return_code,
			return_date,
			dept_id,
			dept_no,
			proj_id,
			proj_no,
			emp_id,
			emp_no,
			return_amount,
			maker,
			make_date,
			operator,
			state,
			pay_way
		FROM BUDG_BORR_RETURN 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="emp_no != null and emp_no != ''">
		AND emp_no = #{emp_no,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="operator != null and operator != ''">
		AND operator = #{operator,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="pay_way != null and pay_way != ''">
		AND pay_way = #{pay_way,jdbcType=VARCHAR}
		</if>
		<if test="return_date != null and return_date != ''">
		AND return_date = #{return_date,jdbcType=DATE}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryBorrReturnByPrintTemlate" resultType="java.util.Map" parameterType="java.util.Map" >
	
		SELECT 
			a.return_code,
			a.return_date,
			hdd.dept_code,
			hdd.dept_name,
			hpd.proj_code,
			hpd.proj_name,
			hed.emp_code,
			hed.emp_name,
			a.return_amount return_amount_sum,
			u1.user_name maker,
			a.make_date,
			u2.user_name operator,
			bsd.value_name state,
			apy.pay_name pay_way
		FROM BUDG_BORR_RETURN a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.operator = u2.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'RUTURN_STATE'
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		a.return_code = #{return_code,jdbcType=VARCHAR}
	
	</select>
	
	<select id="queryBudgBorrReturnPrint" parameterType="java.util.Map"  resultType="java.util.Map">
	
		SELECT 
			a.group_id,
			a.hos_id,
			a.copy_code,
			a.return_code,
			a.return_date,
			a.dept_id,
			a.dept_no,
			hdd.dept_code,
			hdd.dept_name,
			a.proj_id,
			a.proj_no,
			hpd.proj_code,
			hpd.proj_name,
			a.emp_id,
			a.emp_no,
			hed.emp_code,
			hed.emp_name,
			a.return_amount,
			a.maker,
			u1.user_name maker_name,
			a.make_date,
			a.operator,
			u2.user_name operator_name,
			a.state,
			bsd.value_name state_name,
			a.pay_way,
			apy.pay_name pay_way_name
		FROM BUDG_BORR_RETURN a
		left join hos_dept_dict hdd on
		a.group_id = hdd.group_id
		and a.hos_id = hdd.hos_id
		and a.dept_id = hdd.dept_id
		and hdd.is_stop = 0
		left join hos_proj_dict hpd on
		a.group_id = hpd.group_id
		and a.hos_id = hpd.hos_id
		and a.proj_id = hpd.proj_id
		and hpd.is_stop = 0
		left join hos_emp_dict hed on
		a.group_id = hed.group_id
		and a.hos_id = hed.hos_id
		and a.emp_id = hed.emp_id
		and hed.is_stop = 0
		left join sys_user u1 on
		a.group_id = u1.group_id
		and a.hos_id = u1.hos_id
		and a.maker = u1.user_id
		left join sys_user u2 on
		a.group_id = u2.group_id
		and a.hos_id = u2.hos_id
		and a.operator = u2.user_id
		left join acc_pay_type apy on
		a.group_id = apy.group_id
		and a.hos_id = apy.hos_id
		and a.copy_code = apy.copy_code
		and a.pay_way = apy.pay_code
		left join BUDG_SYS_DICT bsd on
		a.state = bsd.value_code
		and bsd.f_code = 'RUTURN_STATE'
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND a.return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="return_codes != null and return_codes != ''">
		AND a.return_code in (${return_codes}) 
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND a.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="dept_no != null and dept_no != ''">
		AND a.dept_no = #{dept_no,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		<if test="proj_no != null and proj_no != ''">
		AND a.proj_no = #{proj_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="emp_no != null and emp_no != ''">
		AND a.emp_no = #{emp_no,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND a.return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		<if test="maker != null and maker != ''">
		AND a.maker = #{maker,jdbcType=INTEGER}
		</if>
		<if test="make_date != null and make_date != ''">
		AND a.make_date = #{make_date,jdbcType=DATE}
		</if>
		<if test="checker != null and checker != ''">
		AND a.checker = #{checker,jdbcType=INTEGER}
		</if>
		<if test="state != null and state != ''">
		AND a.state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="pay_way != null and pay_way != ''">
		AND a.pay_way = #{pay_way,jdbcType=VARCHAR}
		</if>
		<if test="return_date_b != null and return_date_b != '' and return_date_e != null and return_date_e != ''">
		AND a.return_date between to_date(#{return_date_b},'yyyy/MM/dd') and to_date(#{return_date_e},'yyyy/MM/dd')
		</if>
		</where>   
		order by a.return_code desc
	</select>
</mapper>

