<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.payable.loanmt.BudgBorrReturnDetMapper">
	
	<resultMap id="budgBorrReturnDet" type="com.chd.hrp.acc.entity.payable.BudgBorrReturnDet">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="return_code" column="return_code"/>
	<result property="source_id" column="source_id"/>
	<result property="source_id_no" column="source_id_no"/>
	<result property="source_name" column="source_name"/>
	<result property="payment_item_id_no" column="payment_item_id_no"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="return_amount" column="return_amount"/>
	<result property="remain_amount" column="remain_amount"/>
	<result property="borrow_amount" column="borrow_amount"/>
	<result property="offset_amount" column="offset_amount"/>
	</resultMap>
		
	<resultMap id="budgBorrReturnDetMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="copy_code" column="copy_code"/>
	<result property="return_code" column="return_code"/>
	<result property="source_id" column="source_id"/>
	<result property="source_id_no" column="source_id_no"/>
	<result property="source_code" column="source_code"/>
	<result property="source_name" column="source_name"/>
	<result property="payment_item_id_no" column="payment_item_id_no"/>
	<result property="payment_item_id" column="payment_item_id"/>
	<result property="payment_item_no" column="payment_item_no"/>
	<result property="payment_item_code" column="payment_item_code"/>
	<result property="payment_item_name" column="payment_item_name"/>
	<result property="return_amount" column="return_amount"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO BUDG_BORR_RETURN_DET (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		group_id
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		hos_id
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		copy_code
		,
		</if>
		<if test="return_code != null and return_code != ''">
		return_code
		,
		</if>
		<if test="source_id != null and source_id != ''">
		source_id
		,
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		payment_item_id
		,
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		payment_item_no
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		return_amount
		,
		</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		<if test="group_id != null and group_id != ''">
		#{group_id,jdbcType=INTEGER}
		,
		</if>
		<if test="hos_id != null and hos_id != ''">
		#{hos_id,jdbcType=INTEGER}
		,
		</if>
		<if test="copy_code != null and copy_code != ''">
		#{copy_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="return_code != null and return_code != ''">
		#{return_code,jdbcType=VARCHAR}
		,
		</if>
		<if test="source_id != null and source_id != ''">
		#{source_id,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		#{payment_item_id,jdbcType=INTEGER}
		,
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		#{payment_item_no,jdbcType=INTEGER}
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		#{return_amount,jdbcType=INTEGER}
		
		</if>
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO BUDG_BORR_RETURN_DET (
		group_id
		,
		hos_id
		,
		copy_code
		,
		return_code
		,
		source_id
		,
		payment_item_id
		,
		payment_item_no
		,
		return_amount
		
		) select BUDG_BORR_RETURN_DET_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.copy_code,jdbcType=VARCHAR}
			,
			#{item.return_code,jdbcType=VARCHAR}
			,
			#{item.source_id,jdbcType=INTEGER}
			,
			#{item.payment_item_id,jdbcType=INTEGER}
			,
			#{item.payment_item_no,jdbcType=INTEGER}
			,
			#{item.return_amount,jdbcType=INTEGER}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE BUDG_BORR_RETURN_DET 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="payment_item_no != null and payment_item_no != ''">
		payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		,
		</if>
		<if test="return_amount != null and return_amount != ''">
		return_amount = #{return_amount,jdbcType=INTEGER}
		,
		</if>
		</trim>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE BUDG_BORR_RETURN_DET 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.payment_item_no != null and item.payment_item_no != ''">
			payment_item_no = #{item.payment_item_no,jdbcType=INTEGER}
			,
			</if>
			<if test="item.borrow_amount != null and item.borrow_amount != ''">
			borrow_amount = #{item.borrow_amount,jdbcType=INTEGER}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.copy_code != null and item.copy_code != ''">
			AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.return_code != null and item.return_code != ''">
			AND return_code = #{item.return_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.source_id != null and item.source_id != ''">
			AND source_id = #{item.source_id,jdbcType=INTEGER}
			</if>  
			<if test="item.payment_item_id != null and item.payment_item_id != ''">
			AND payment_item_id = #{item.payment_item_id,jdbcType=INTEGER}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM BUDG_BORR_RETURN_DET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		</where>  
	</delete>  
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM BUDG_BORR_RETURN_DET where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				    group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.copy_code != null and item.copy_code != ''">
				AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if>
				<if test="item.return_code != null and item.return_code != ''">
				AND return_code = #{item.return_code,jdbcType=VARCHAR}
				</if>
			</foreach>
	</delete>     
	<select id="query" parameterType="java.util.Map" resultMap="budgBorrReturnDet" >
	
 		SELECT 
		    a.group_id,
		    a.hos_id, 
		    a.copy_code,
		    a.source_id,
		    b.source_code||'.'||a.source_id source_id_no,
		    b.source_code||' '||b.source_name source_name,
		    a.payment_item_id,
		    c.payment_item_no,
		    a.payment_item_id||'@'||c.payment_item_no payment_item_id_no,
		    c.payment_item_code||' '||c.payment_item_name payment_item_name,
		    <!-- a.remain_amount return_amount, -->
		    a.borrow_amount - nvl(d.return_amount, 0) return_amount,
		    d.return_amount this_return_amount,
		    a.remain_amount,
		    a.borrow_amount,
		    a.offset_amount
		    FROM 
		    <if test="is_dept == 1">
		    	budg_borr_det_dept a 
		    </if>
		    <if test="is_dept == 0">
		    	budg_borr_det_proj a
		    </if>
		    left join HOS_SOURCE b on
		    a.group_id = b.group_id
		    and a.hos_id = b.hos_id
		    and a.source_id = b.source_id
		    left join BUDG_PAYMENT_ITEM_DICT c on
		    a.group_id = c.group_id
		    and a.hos_id = c.hos_id
		    and a.copy_code = c.copy_code
		    and a.payment_item_id = c.payment_item_id
		    and c.IS_FRESH = 1
		    left join (
		    <!-- 
				select hos_id,group_id,copy_code,source_id,payment_item_id,sum(return_amount) return_amount 
				from BUDG_BORR_RETURN_DET 
			--> 
				select f.proj_id, e.hos_id, e.group_id, e.copy_code, e.source_id, e.payment_item_id, sum(e.return_amount) as return_amount
    			from BUDG_BORR_RETURN_DET e
    			left join BUDG_BORR_RETURN f 
    			on e.group_id = f.group_id 
    			and e.hos_id = f.hos_id
   			 	and e.copy_code = f.copy_code
    			and e.return_code = f.return_code
    			where 1=1
    			<if test="is_dept == 1">
		    	and f.proj_id is null
		    	</if>
				<if test="return_code != null and return_code != ''">
					and return_code = #{return_code,jdbcType=VARCHAR}
				</if>
 				group by e.hos_id, e.group_id, e.copy_code, e.source_id, e.payment_item_id, f.proj_id
				) d on a.group_id = d.group_id
				and a.hos_id = d.hos_id
				and a.copy_code = d.copy_code
				and a.source_id = d.source_id
				and a.payment_item_id = d.payment_item_id 
				<if test="is_dept == 0">
		    	and a.proj_id = d.proj_id
		    	</if>
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND c.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<!-- 
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		 -->
		<if test="is_dept == 0">
		    AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.group_id desc
	</select>
	
	<select id="queryReturnProjDetail" parameterType="java.util.Map" resultMap="budgBorrReturnDet" >
		SELECT 
		    a.group_id,
		    a.hos_id,
		    a.copy_code,
		    a.source_id,
		    b.source_code||'.'||a.source_id source_id_no,
		    b.source_code||' '||b.source_name source_name,
		    a.payment_item_id,
		    c.payment_item_no,
		    a.payment_item_id||'@'||c.payment_item_no payment_item_id_no,
		    c.payment_item_code||' '||c.payment_item_name payment_item_name,
		    d.return_amount,
		    a.remain_amount + d.return_amount - nvl((
   				select sum(e.return_amount) 
    			from budg_borr_return e 
    			where STATE=01 
          			and a.group_id = e.group_id
          			and a.hos_id = e.hos_id
          			and a.emp_id = e.emp_id
         			and a.copy_code = e.copy_code
          			and a.proj_id = e.proj_id
  			), 0) as remain_amount,	<!-- 借款 + 本次还款 - 未提交数据的还款之和 -->
		    a.borrow_amount,
		    a.offset_amount
		    FROM budg_borr_det_proj a 
		    left join HOS_SOURCE b on
		    a.group_id = b.group_id
		    and a.hos_id = b.hos_id
		    and a.source_id = b.source_id
		    left join BUDG_PAYMENT_ITEM_DICT c on
		    a.group_id = c.group_id
		    and a.hos_id = c.hos_id
		    and a.copy_code = c.copy_code
		    and a.payment_item_id = c.payment_item_id
		    and c.IS_FRESH = 1
		   left join (
select hos_id,group_id,copy_code,source_id,payment_item_id,sum(return_amount) return_amount from BUDG_BORR_RETURN_DET
where 1 = 1<if test="return_code != null and return_code != ''">
		 and return_code = #{return_code,jdbcType=VARCHAR}
		</if>
 group by hos_id,group_id,copy_code,source_id,payment_item_id
) d on a.group_id = d.group_id
and a.hos_id = d.hos_id
and a.copy_code = d.copy_code
and a.source_id = d.source_id
and a.payment_item_id = d.payment_item_id 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND c.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="proj_id != null and proj_id != ''">
		AND a.proj_id = #{proj_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.group_id desc
	</select>
	
	<select id="queryReturnDeptDetail" parameterType="java.util.Map" resultMap="budgBorrReturnDet" >
		SELECT 
		    a.group_id,
		    a.hos_id,
		    a.copy_code,
		    a.source_id,
		    b.source_code||'.'||a.source_id source_id_no,
		    b.source_code||' '||b.source_name source_name,
		    a.payment_item_id,
		    c.payment_item_no,
		    a.payment_item_id||'@'||c.payment_item_no payment_item_id_no,
		    c.payment_item_code||' '||c.payment_item_name payment_item_name,
		    d.return_amount,
		    a.remain_amount,
		    a.borrow_amount,
		    a.offset_amount
		    FROM budg_borr_det_dept a 
		    left join HOS_SOURCE b on
		    a.group_id = b.group_id
		    and a.hos_id = b.hos_id
		    and a.source_id = b.source_id
		    left join BUDG_PAYMENT_ITEM_DICT c on
		    a.group_id = c.group_id
		    and a.hos_id = c.hos_id
		    and a.copy_code = c.copy_code
		    and a.payment_item_id = c.payment_item_id
		    and c.IS_FRESH = 1
		    left join (
select hos_id,group_id,copy_code,source_id,payment_item_id,sum(return_amount) return_amount from BUDG_BORR_RETURN_DET
where 1 = 1<if test="return_code != null and return_code != ''">
		 and return_code = #{return_code,jdbcType=VARCHAR}
		</if>
 group by hos_id,group_id,copy_code,source_id,payment_item_id
) d on a.group_id = d.group_id
and a.hos_id = d.hos_id
and a.copy_code = d.copy_code
and a.source_id = d.source_id
and a.payment_item_id = d.payment_item_id 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND a.source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND a.payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND c.payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND a.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		</where>   
		order by a.group_id desc
	</select>
	
	
	<select id="queryByCode" resultMap="budgBorrReturnDet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		return_code,
		source_id,
		payment_item_id,
		payment_item_no,
		return_amount
		FROM BUDG_BORR_RETURN_DET 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		copy_code = #{copy_code,jdbcType=VARCHAR}   and 
		return_code = #{return_code,jdbcType=VARCHAR}   and 
		source_id = #{source_id,jdbcType=INTEGER}   and 
		payment_item_id = #{payment_item_id,jdbcType=INTEGER} 
	
	</select>
	<select id="queryByUniqueness" resultMap="budgBorrReturnDet"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		return_code,
		source_id,
		payment_item_id,
		payment_item_no,
		return_amount
		FROM BUDG_BORR_RETURN_DET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" parameterType="java.util.Map" resultMap="budgBorrReturnDet" >
	
		SELECT 
		group_id,
		hos_id,
		copy_code,
		return_code,
		source_id,
		payment_item_id,
		payment_item_no,
		return_amount
		FROM BUDG_BORR_RETURN_DET 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		<if test="source_id != null and source_id != ''">
		AND source_id = #{source_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_id != null and payment_item_id != ''">
		AND payment_item_id = #{payment_item_id,jdbcType=INTEGER}
		</if>
		<if test="payment_item_no != null and payment_item_no != ''">
		AND payment_item_no = #{payment_item_no,jdbcType=INTEGER}
		</if>
		<if test="return_amount != null and return_amount != ''">
		AND return_amount = #{return_amount,jdbcType=INTEGER}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryBorrReturnDetByPrintTemlate" parameterType="java.util.Map" resultMap="budgBorrReturnDetMap" >
	SELECT 
		b.source_code,
		b.source_name,
		c.payment_item_code,
		c.payment_item_name,
		a.return_amount
	from BUDG_BORR_RETURN_DET a
		left join HOS_SOURCE b on
		a.group_id = b.group_id
		and a.hos_id = b.hos_id
		and a.source_id = b.source_id
		left join BUDG_PAYMENT_ITEM_DICT c on
		a.group_id = c.group_id
		and a.hos_id = c.hos_id
		and a.copy_code = c.copy_code
		and a.payment_item_id = c.payment_item_id
		and c.IS_FRESH = 1
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND a.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND a.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="copy_code != null and copy_code != ''">
		AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
		</if>
		<if test="return_code != null and return_code != ''">
		AND a.return_code = #{return_code,jdbcType=VARCHAR}
		</if>
		</where>   
	</select>
</mapper>

