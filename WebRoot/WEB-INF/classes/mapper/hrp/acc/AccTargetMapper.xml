<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccTargetMapper">
 
	<resultMap id="acctargetMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="target_code" column="target_code" />
		<result property="target_name" column="target_name" />
		<result property="unit_code" column="unit_code" />
		<result property="unit_name" column="unit_name" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="sort_code" column="sort_code" />
		<result property="is_stop" column="is_stop" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap id="acctargetdataMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="acc_month" column="acc_month" />
		<result property="target_name" column="target_name" />
		<result property="target_code" column="target_code" />
		<result property="unit_code" column="unit_code" />
		<result property="unit_name" column="unit_name" />
		<result property="target_num" column="target_num" />
	</resultMap>
	<insert id="addAccTarget" useGeneratedKeys="true">

		insert into
		acc_target(
		group_id
		,
		hos_id
		,
		copy_code
		,
		target_code
		,
		target_name
		,
		unit_code
		,
		spell_code
		,
		wbx_code
		,
		sort_code
		,
		is_stop
		,
		note
		) values (
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{target_code,jdbcType=VARCHAR}
		,
		#{target_name,jdbcType=VARCHAR}
		,
		#{unit_code,jdbcType=VARCHAR}
		,
		#{spell_code,jdbcType=VARCHAR}
		,
		#{wbx_code,jdbcType=VARCHAR}
		,
		#{sort_code,jdbcType=INTEGER}
		,
		#{is_stop,jdbcType=INTEGER}
		,
		#{note,jdbcType=VARCHAR}
		)

	</insert>

	<insert id="addBatchAccTarget" parameterType="java.util.List">

		insert into
		acc_target(
		group_id
		,
		hos_id
		,
		copy_code
		,
		target_code
		,
		target_name
		,
		unit_code
		,
		spell_code
		,
		wbx_code
		,
		sort_code
		,
		is_stop
		,
		note
		)
		<foreach collection="list" item="item" index="index" separator="union all" >
	  	 select 
		#{item.group_id,jdbcType=INTEGER},
		#{item.hos_id,jdbcType=INTEGER},
		#{item.copy_code,jdbcType=VARCHAR},
		#{item.target_code,jdbcType=VARCHAR},
		#{item.target_name,jdbcType=VARCHAR},
		#{item.unit_code,jdbcType=VARCHAR},
		#{item.spell_code,jdbcType=VARCHAR},
		#{item.wbx_code,jdbcType=VARCHAR},
		#{item.sort_code,jdbcType=INTEGER},
		#{item.is_stop,jdbcType=INTEGER},
		#{item.note,jdbcType=VARCHAR} 
	  		from dual
		</foreach>
		

	</insert>

	<update id="updateAccTarget" parameterType="java.util.Map">

		update acc_target set
		target_name = #{target_name,jdbcType=VARCHAR},
		unit_code = #{unit_code,jdbcType=VARCHAR},
		is_stop = #{is_stop,jdbcType=INTEGER},
		note = #{note,jdbcType=VARCHAR},
		spell_code = #{spell_code,jdbcType=VARCHAR},
		wbx_code = #{wbx_code,jdbcType=VARCHAR}
		WHERE
		group_id = #{group_id,jdbcType=INTEGER}
		and
		hos_id = #{hos_id,jdbcType=INTEGER}
		and
		copy_code = #{copy_code,jdbcType=VARCHAR}
		and
		target_code = #{target_code,jdbcType=VARCHAR}

	</update>


	<delete id="deleteBatchAccTarget" parameterType="java.util.List">

		delete from acc_target
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id}
				and
				hos_id = #{item.hos_id}
				and
				copy_code = #{item.copy_code}
				and
				target_code = #{item.target_code}

			</foreach>
		</where>
	</delete>

	<insert id="addAccTargetData" useGeneratedKeys="true"> 

		insert into
		acc_target_data(
		group_id
		,
		hos_id
		,
		copy_code
		,
		acc_year
		,
		acc_month
		,
		target_code
		,
		target_num
		)values(
		#{group_id,jdbcType=INTEGER}
		,
		#{hos_id,jdbcType=INTEGER}
		,
		#{copy_code,jdbcType=VARCHAR}
		,
		#{acc_year,jdbcType=VARCHAR}
		,
		#{acc_month,jdbcType=VARCHAR}
		,
		#{target_code,jdbcType=VARCHAR}
		,
		#{target_num,jdbcType=INTEGER}
		)

	</insert>


   <insert id="addBatchAccTargetData" parameterType="java.util.List"> 

		insert into
		acc_target_data(
		group_id
		,
		hos_id
		,
		copy_code
		,
		acc_year
		,
		acc_month
		,
		target_code
		,
		target_num
		)
		<foreach collection="list" item="item" index="index" separator="union all" >
	  	 select 
		#{item.group_id,jdbcType=INTEGER},
		#{item.hos_id,jdbcType=INTEGER},
		#{item.copy_code,jdbcType=VARCHAR},
		#{item.acc_year,jdbcType=VARCHAR},
		#{item.acc_month,jdbcType=VARCHAR},
		#{item.target_code,jdbcType=VARCHAR},
		#{item.target_num,jdbcType=INTEGER}
	  		from dual
		</foreach>

	</insert>

    <update id="updateAccTargetData" parameterType="java.util.Map">

		update acc_target_data set
		target_code = #{target_code,jdbcType=VARCHAR},
		target_num = #{target_num,jdbcType=INTEGER}
		WHERE
		group_id = #{group_id,jdbcType=INTEGER}
		and
		hos_id = #{hos_id,jdbcType=INTEGER}
		and
		copy_code = #{copy_code,jdbcType=VARCHAR}
		and
		acc_year = #{acc_year,jdbcType=VARCHAR}
		and
		acc_month = #{acc_month,jdbcType=VARCHAR}
		and
		target_code = #{target_code,jdbcType=VARCHAR}

	</update>

  <delete id="deleteAccTargetData" parameterType="java.util.Map">

		delete from acc_target_data 
		        where
				group_id = #{group_id}
				and
				hos_id = #{hos_id}
				and
				copy_code = #{copy_code}
				and 
				acc_year = #{acc_year}
		        and
		        acc_month = #{acc_month}
		        and
		        target_code = #{target_code}
	</delete>

   <delete id="deleteBatchAccTargetData" parameterType="java.util.List">

		delete from acc_target_data
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id}
				and
				hos_id = #{item.hos_id}
				and
				copy_code = #{item.copy_code}
				and 
				acc_year = #{item.acc_year,jdbcType=VARCHAR}
		        and
		        acc_month = #{item.acc_month,jdbcType=VARCHAR}
		        and
		        target_code = #{item.target_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>

	<select id="queryAccTarget" parameterType="java.util.Map"
		resultMap="acctargetMap">
		SELECT
		at.group_id,
		at.hos_id,
		at.copy_code,
		at.target_code,
		at.target_name,
		at.unit_code,
		hu.unit_name,
		at.sort_code,
		at.is_stop,
		at.note
		FROM acc_target at
		left join hos_unit hu
		on at.group_id =
		hu.group_id
		and at.hos_id = hu.hos_id
		and at.unit_code = hu.unit_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND at.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND at.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND at.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="target_code != null and target_code != ''">
				AND at.target_code like
				'%'||#{target_code,jdbcType=VARCHAR}||'%'
			</if>
			<if test="target_name != null and target_name != ''">
				AND at.target_name like
				'%'||#{target_name,jdbcType=VARCHAR}||'%'
			</if>
		</where>
		order by at.target_code
	</select>


	<select id="queryAccTargetData" parameterType="java.util.Map"
		resultMap="acctargetdataMap">

		select att.group_id, att.hos_id, att.copy_code, atd.acc_year, atd.acc_month
			, att.target_code, att.target_name, atd.target_num, hu.unit_code, hu.unit_name
		from  acc_target att
		left join acc_target_data atd on atd.group_id = att.group_id
		and atd.hos_id = att.hos_id
		and atd.copy_code = att.copy_code
		and atd.target_code = att.target_code 
		<if test="year_month != null and year_month != ''" >
				AND atd.acc_year || atd.acc_month = #{year_month,jdbcType=VARCHAR}
		</if>
		left join hos_unit hu on hu.group_id = att.group_id
		and hu.hos_id = att.hos_id
		and hu.unit_code = att.unit_code 
		<where>
			<if test="group_id != null and group_id != ''">
				AND att.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND att.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND att.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			
			<if test="target_code != null and target_code != ''">
				AND atd.target_code = #{target_code,jdbcType=VARCHAR}
			</if>
		</where>
		order by att.target_code
	</select>


	<select id="queryAccTargetByCode" parameterType="java.util.Map"
		resultMap="acctargetMap">
		SELECT
		at.group_id,
		at.hos_id,
		at.copy_code,
		at.target_code,
		at.target_name,
		at.unit_code,
		hu.unit_name,
		at.sort_code,
		at.is_stop,
		at.note
		FROM acc_target at
		left join hos_unit hu
		on at.group_id =
		hu.group_id
		and at.hos_id = hu.hos_id
		and at.unit_code = hu.unit_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND at.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND at.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND at.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="target_code != null and target_code != ''">
				AND at.target_code = #{target_code,jdbcType=VARCHAR}
			</if>
		</where>
		order by at.target_code
	</select>
	
	
	<select id="queryAccTargetDataByCode" parameterType="java.util.Map"
		resultMap="acctargetdataMap">
		select
		atd.group_id,
		atd.hos_id,
		atd.copy_code,
		atd.acc_year,
		atd.acc_month,
		at.target_code,
		at.target_name,
		atd.target_num
		from acc_target_data atd
		left join acc_target at
		on atd.group_id = at.group_id
		and atd.hos_id = at.hos_id
		and atd.copy_code = at.copy_code
		and atd.target_code = at.target_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND atd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND atd.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND atd.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null and acc_year != ''" >
				AND atd.acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="acc_month != null and acc_month != ''" >
				AND atd.acc_month = #{acc_month,jdbcType=VARCHAR}
			</if>
			<if test="target_code != null and target_code != ''">
				AND atd.target_code = #{target_code,jdbcType=VARCHAR}
			</if>
		</where>
		order by atd.target_code
	</select>
	
	
	<delete id="inheritDeleteAccTargetData" parameterType="java.util.Map">

		delete from acc_target_data 
		        where
				group_id = #{group_id}
				and
				hos_id = #{hos_id}
				and
				copy_code = #{copy_code}
				and 
				acc_year = #{acc_year}
		        and
		        acc_month = #{acc_month}

	</delete>
	
	<insert id="inheritAddAccTargetData">
        
        insert into
		acc_target_data(
		group_id
		,
		hos_id
		,
		copy_code
		,
		acc_year
		,
		acc_month
		,
		target_code
		,
		target_num
		)
		
		select 
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{copy_code,jdbcType=VARCHAR},
		#{acc_year,jdbcType=VARCHAR},
		#{acc_month,jdbcType=VARCHAR},
		target_code,
		target_num
		from acc_target_data
		where group_id=#{group_id,jdbcType=INTEGER}
		and   hos_id=#{hos_id,jdbcType=INTEGER}
		and   copy_code=#{copy_code,jdbcType=VARCHAR}
		and   acc_year=to_char(add_months(to_date(#{acc_year,jdbcType=VARCHAR}||''||#{acc_month,jdbcType=VARCHAR}||''||'01','yyyy-mm-dd'),-1),'yyyy')
		and   acc_month=to_char(add_months(to_date(#{acc_year,jdbcType=VARCHAR}||''||#{acc_month,jdbcType=VARCHAR}||''||'01','yyyy-mm-dd'),-1),'mm')

	</insert>
	
	
	<delete id="deleteImportAccTargetData" parameterType="java.util.List">

		delete from acc_target_data
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id}
				and
				hos_id = #{item.hos_id}
				and
				copy_code = #{item.copy_code}
				and 
				acc_year||acc_month = #{item.year_month,jdbcType=VARCHAR}
		        and
		        target_code = #{item.target_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	
	
	<insert id="addImportAccTargetData" parameterType="java.util.List"> 

		insert into
		acc_target_data(
		group_id
		,
		hos_id
		,
		copy_code
		,
		acc_year
		,
		acc_month
		,
		target_code
		,
		target_num
		)
		<foreach collection="list" item="item" index="index" separator="union all" >
	  	 select 
		#{item.group_id,jdbcType=INTEGER},
		#{item.hos_id,jdbcType=INTEGER},
		#{item.copy_code,jdbcType=VARCHAR},
		substr(#{item.year_month,jdbcType=VARCHAR}, 0, 4),
		substr(#{item.year_month,jdbcType=VARCHAR}, 5, 2),
		#{item.target_code,jdbcType=VARCHAR},
		#{item.target_num,jdbcType=INTEGER}
	  		from dual
		</foreach>

	</insert>

</mapper>

