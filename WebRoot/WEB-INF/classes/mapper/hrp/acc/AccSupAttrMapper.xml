<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccSupAttrMapper">

	<resultMap id="accSupAttr" type="com.chd.hrp.acc.entity.AccSupAttr">
		<result property="sup_id" column="sup_id" />
		<result property="sup_code" column="sup_code" />
		<result property="sup_name" column="sup_name" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="bank_name" column="bank_name" />
		<result property="bank_number" column="bank_number" />
		<result property="legal" column="legal" />
		<result property="regis_no" column="regis_no" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="contact" column="contact" />
		<result property="fax" column="fax" />
		<result property="email" column="email" />
		<result property="region" column="region" />
		<result property="zip_code" column="zip_code" />
		<result property="address" column="address" />
		<result property="note" column="note" />
		<result property="sup_code" column="sup_code" />
		<result property="sup_name" column="sup_name" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="is_stop" column="is_stop" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="is_mat" column="is_mat" />
		<result property="is_med" column="is_med" />
		<result property="is_ass" column="is_ass" />
		<result property="is_sup" column="is_sup" />
		<result property="range_id" column="range_id" />
	</resultMap>

	<insert id="addAccSupAttr" useGeneratedKeys="true">

		INSERT INTO ACC_SUP_ATTR (
		sup_id
		,
		group_id
		,
		hos_id
		,
		bank_name
		,
		bank_number
		,
		legal
		,
		regis_no
		,
		phone
		,
		mobile
		,
		contact
		,
		fax
		,
		email
		,
		region
		,
		zip_code
		,
		address
		,
		note,
		range_id

		) VALUES (
		#{sup_id} ,
		#{group_id} ,
		#{hos_id} ,
		#{bank_name} ,
		#{bank_number} ,
		#{legal} ,
		#{regis_no} ,
		#{phone} ,
		#{mobile} ,
		#{contact} ,
		#{fax} ,
		#{email} ,
		#{region} ,
		#{zip_code} ,
		#{address} ,
		#{note},
		#{range_id}
		)

	</insert>
	<insert id="addBatchAccSupAttr" parameterType="java.util.List">

		INSERT INTO ACC_SUP_ATTR (
		sup_id
		,
		group_id
		,
		hos_id
		,
		bank_name
		,
		bank_number
		,
		legal
		,
		regis_no
		,
		phone
		,
		mobile
		,
		contact
		,
		fax
		,
		email
		,
		region
		,
		zip_code
		,
		address
		,
		note,
		range_id
		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.sup_id} ,
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.bank_name} ,
			#{item.bank_number} ,
			#{item.legal} ,
			#{item.regis_no} ,
			#{item.phone} ,
			#{item.mobile} ,
			#{item.contact} ,
			#{item.fax} ,
			#{item.email} ,
			#{item.region} ,
			#{item.zip_code} ,
			#{item.address} ,
			#{item.note},
			#{item.range_id}
			from dual
		</foreach>

	</insert>

	<update id="updateAccSupAttr" parameterType="java.util.Map">

		UPDATE acc_sup_attr SET
		bank_name = #{bank_name}
		,
		bank_number = #{bank_number}
		,
		legal = #{legal}
		,
		regis_no = #{regis_no}
		,
		phone = #{phone}
		,
		mobile = #{mobile}
		,
		contact = #{contact}
		,
		fax = #{fax}
		,
		email = #{email}
		,
		region = #{region}
		,
		zip_code = #{zip_code}
		,
		address = #{address}
		,
		note = #{note},
		
		range_id=#{range_id}

		WHERE
		sup_id = #{sup_id}
		and
		group_id = #{group_id}
		and
		hos_id = #{hos_id}


	</update>
	<update id="updateBatchAccSupAttr" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE acc_sup_attr SET
			bank_name = #{bank_name}
			,
			bank_number = #{bank_number}
			,
			legal = #{legal}
			,
			regis_no = #{regis_no}
			,
			phone = #{phone}
			,
			mobile = #{mobile}
			,
			contact = #{contact}
			,
			fax = #{fax}
			,
			email = #{email}
			,
			region = #{region}
			,
			zip_code = #{zip_code}
			,
			address = #{address}
			,
			note = #{note}

			WHERE
			sup_id = #{item.sup_id}
			and
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}

		</foreach>
	</update>

	<delete id="deleteAccSupAttr" parameterType="java.util.Map">

		DELETE FROM acc_sup_attr WHERE
		sup_id = #{sup_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id}

	</delete>
	<delete id="deleteBatchAccSupAttr" parameterType="java.util.List">
		DELETE FROM acc_sup_attr WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			sup_id = #{item.sup_id}
			and
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}

		</foreach>


	</delete>
	
	<select id="queryAccSupByCode" resultType="com.chd.hrp.acc.entity.AccSupAttr"
		parameterType="string">

		SELECT hs.sup_id, hs.group_id, hs.hos_id, asa.bank_name, asa.bank_number
		, asa.legal, asa.regis_no, asa.phone, asa.mobile, asa.contact
		, asa.fax, asa.email, asa.region, asa.zip_code, asa.address,asa.range_id
		, asa.note, hs.sup_code, hs.sup_name, hs.is_disable, hst.type_code
		, hst.type_name,hs.spell_code,hs.wbx_code,hs.is_mat,hs.is_med,hs.is_ass,hs.is_sup
		FROM hos_sup_dict hs
		left join  acc_sup_attr asa ON hs.group_id = asa.group_id
		AND hs.hos_id = asa.hos_id
		AND hs.sup_id = asa.sup_id and hs.is_stop=0
			LEFT JOIN hos_sup_type hst ON hs.group_id = hst.group_id
		AND hs.hos_id = hst.hos_id
		AND hs.type_code = hst.type_code 
		WHERE  
		hs.sup_id = #{sup_id} and
		hs.group_id = #{group_id} and
		hs.hos_id = #{hos_id}
		and hs.is_stop=0
	</select>

	<select id="queryAccSupAttrByCode" resultType="com.chd.hrp.acc.entity.AccSupAttr"
		parameterType="string">

		SELECT
		sup_id,
		group_id,
		hos_id,
		bank_name,
		bank_number,
		legal,
		regis_no,
		phone,
		mobile,
		contact,
		fax,
		email,
		region,
		zip_code,
		address,
		note,
		range_id
		FROM acc_sup_attr
		WHERE
		sup_id = #{sup_id} and
		group_id = #{group_id} and
		hos_id = #{hos_id}

	</select>
	<select id="queryAccSupAttr" parameterType="java.util.Map"
		resultMap="accSupAttr">

		SELECT
		sup_id,
		group_id,
		hos_id,
		bank_name,
		bank_number,
		legal,
		regis_no,
		phone,
		mobile,
		contact,
		fax,
		email,
		region,
		zip_code,
		address,
		note
		FROM ACC_SUP_ATTR
		<where>
			<if test="sup_id != null and sup_id != ''">
				AND sup_id = #{sup_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="bank_name != null and bank_name != ''">
				AND bank_name = #{bank_name}
			</if>
			<if test="bank_number != null and bank_number != ''">
				AND bank_number = #{bank_number}
			</if>
			<if test="legal != null and legal != ''">
				AND legal = #{legal}
			</if>
			<if test="regis_no != null and regis_no != ''">
				AND regis_no = #{regis_no}
			</if>
			<if test="phone != null and phone != ''">
				AND phone = #{phone}
			</if>
			<if test="mobile != null and mobile != ''">
				AND mobile = #{mobile}
			</if>
			<if test="contact != null and contact != ''">
				AND contact = #{contact}
			</if>
			<if test="fax != null and fax != ''">
				AND fax = #{fax}
			</if>
			<if test="email != null and email != ''">
				AND email = #{email}
			</if>
			<if test="region != null and region != ''">
				AND region = #{region}
			</if>
			<if test="zip_code != null and zip_code != ''">
				AND zip_code = #{zip_code}
			</if>
			<if test="address != null and address != ''">
				AND address = #{address}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
		</where>
		order by sup_id asc
	</select>
	
	<select id="queryHosSupByCode" resultType="com.chd.hrp.acc.entity.AccSupAttr" parameterType="string" >
	      SELECT 
	            hed.group_id,
	            hed.hos_id,
	            hed.sup_id,
	            hed.sup_code,
	            hed.sup_name,
	            hed.type_code,
	            hst.type_name,
	            hed.spell_code,
	            hed.wbx_code,
	            hed.is_stop
			FROM hos_sup_dict hed
			left join HOS_sup_type hst on hed.type_code = hst.type_code and hed.group_id = hst.group_id and hed.hos_id = hst.hos_id
		    WHERE hed.is_stop = 0 and 
        	hed.group_id = #{group_id}   and 
	        hed.hos_id = #{hos_id}   and 
	        hed.sup_id = #{sup_id}
	</select>

</mapper>

