<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.verification.AccVerificationMapper">

	<resultMap id="accLederChecks" type="com.chd.hrp.acc.entity.AccLederCheck">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="acc_year" column="acc_year"/>
        <result property="acc_month" column="acc_month"/>
        <result property="acc_day" column="acc_day"/>
        <result property="subj_code" column="subj_code"/>
        <result property="bal_os" column="bal_os"/>
        <result property="this_od" column="this_od"/>
        <result property="this_oc" column="this_oc"/>
        <result property="sum_od" column="sum_od"/>
        <result property="sum_oc" column="sum_oc"/>
        <result property="end_os" column="end_os"/>
        <result property="bal_os_w" column="bal_os_w"/>
        <result property="this_od_w" column="this_od_w"/>
        <result property="this_oc_w" column="this_oc_w"/>
        <result property="sum_od_w" column="sum_od_w"/>
        <result property="sum_oc_w" column="sum_oc_w"/>
        <result property="end_os_w" column="end_os_w"/>
        <result property="check1_id" column="check1_id"/>
        <result property="check1_no" column="check1_no"/>
        <result property="check2_id" column="check2_id"/>
        <result property="check2_no" column="check2_no"/>
        <result property="check3_id" column="check3_id"/>
        <result property="check3_no" column="check3_no"/>
        <result property="check4_id" column="check4_id"/>
        <result property="check4_no" column="check4_no"/>
        <result property="check5_id" column="check5_id"/>
        <result property="check5_no" column="check5_no"/>
        <result property="check6_id" column="check6_id"/>
        <result property="check6_no" column="check6_no"/>
        <result property="check7_id" column="check7_id"/>
        
        <result property="subj_dire" column="subj_dire"/>
        <result property="balance" column="balance"/>
        <result property="cus_code" column="cus_code"/>
        <result property="cus_name" column="cus_name"/>
        <result property="dept_code" column="dept_code"/>
        <result property="dept_name" column="dept_name"/>
        <result property="emp_code" column="emp_code"/>
        <result property="emp_name" column="emp_name"/>
        <result property="proj_code" column="proj_code"/>
        <result property="proj_name" column="proj_name"/>
        <result property="store_code" column="store_code"/>
        <result property="store_name" column="store_name"/>
        <result property="sup_code" column="sup_code"/>
        <result property="sup_name" column="sup_name"/>
        <result property="source_code" column="source_code"/>
		<result property="source_name" column="source_name"/>
	    <result property="check_item_code" column="check_item_code"/>
		<result property="check_item_name" column="check_item_name"/>
		
		<result property="check_code" column="check_code"/>
        <result property="check_name" column="check_name"/>
        <result property="vouch_no" column="vouch_no"/>
        <result property="summary" column="summary"/>
        <result property="state" column="state"/>
        <result property="con_no" column="con_no"/>
		<result property="business_no" column="business_no"/>
	    <result property="occur_date" column="occur_date"/>
		<result property="due_date" column="due_date"/>
		
		<result property="debit" column="debit"/>
        <result property="credit" column="credit"/>
        <result property="vouch_date" column="vouch_date"/>
        <result property="ver_date" column="ver_date"/>
        <result property="ver_person" column="ver_person"/>
        <result property="bal_amt" column="bal_amt"/>
        <result property="ybal_amt" column="ybal_amt"/>
		<result property="wbal_amt" column="wbal_amt"/>
		<result property="veri_check_id" column="veri_check_id"/>
		<result property="is_check" column="is_check"/>
		<result property="vouch_id" column="vouch_id"/>
	</resultMap>
	
	<resultMap id="accMapS" type="java.util.Map">
		<result property="check_code" column="check_code"/>
		<result property="check_name" column="check_name"/>
		<result property="end_os" column="end_os"/>
		<result property="col_1" column="col_1"/>
		<result property="col_bal_1" column="col_bal_1"/>
		<result property="col_2" column="col_2"/>
		<result property="col_bal_2" column="col_bal_2"/>
		<result property="col_3" column="col_3"/>
		<result property="col_bal_3" column="col_bal_3"/>
		<result property="col_4" column="col_4"/>
		<result property="col_bal_4" column="col_bal_4"/>
		<result property="col_5" column="col_5"/>
		<result property="col_bal_5" column="col_bal_5"/>
		<result property="col_6" column="col_6"/>
		<result property="col_bal_6" column="col_bal_6"/>
		<result property="col_7" column="col_7"/>
		<result property="col_bal_7" column="col_bal_7"/>
		<result property="col_8" column="col_8"/>
		<result property="col_bal_8" column="col_bal_8"/>
		<result property="col_9" column="col_9"/>
		<result property="col_bal_9" column="col_bal_9"/>
		<result property="col_10" column="col_10"/>
		<result property="col_bal_10" column="col_bal_10"/>
		<result property="col_11" column="col_11"/>
		<result property="col_bal_11" column="col_bal_11"/>
	</resultMap>
	
	<resultMap id="accSubjD" type="java.util.Map">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	
	<resultMap type="java.util.Map" id="accBooksVeriMap">
	</resultMap>
	
	<!-- 查看自定义辅助核算挂在哪个会计科目下面 -->
	<select id="queryColumnName" parameterType="java.util.Map" resultMap="accLederChecks" >
		select  column_check as check_name 
		from acc_check_type aa 
     	where   aa.group_id = #{group_id} 
     		and aa.hos_id = #{hos_id} 
     		and aa.copy_code = #{copy_code} 
     		and aa.check_type_id = #{check_type_id}
	</select>
	
	<select id="queryVeriByCheckId" parameterType="java.util.Map" resultType="java.util.Map" >
		select  group_id,hos_id,copy_code,acc_year,credit_check_id,debit_check_id,veri_money  
		from acc_vouch_veri
     	where   group_id = #{group_id} 
     		and hos_id = #{hos_id} 
     		and copy_code = #{copy_code} 
     		and veri_check_id = #{veri_check_id}
	</select>
	
	<!-- 会计科目  带方向 -->
	<select id="querySubjDirect" resultMap="accSubjD">
		SELECT
		subj_dire||'.'||subj_code id,
		subj_code||' '||SUBJ_NAME text
		FROM ACC_SUBJ
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year}
			</if>
			<if test="SUBJ_NATURE_CODE1 != null  and SUBJ_NATURE_CODE1 != ''">
				and SUBJ_NATURE_CODE in (#{SUBJ_NATURE_CODE1},#{SUBJ_NATURE_CODE2})
			</if>
			 <if test="check_type_id != null  and check_type_id != ''">
			 	and (check1 = #{check_type_id} or check2 = #{check_type_id} or check3 = #{check_type_id} or check4 = #{check_type_id})
			 </if>
			 <if test="subj_nature_code != null and subj_nature_code !='' ">
			 	and subj_nature_code=#{subj_nature_code}
			 </if>
			 <if test="subj_type_code != null and subj_type_code !='' ">
			 	and (subj_type_code = #{subj_type_code}
				 <if test="subj_type_code1 != null and subj_type_code1 !='' ">
				 	or subj_type_code1 = #{subj_type_code1}
				 </if>
				 )
			 </if>
			 <if test="is_last != null and is_last !='' ">
			 	and is_last=#{is_last}
			 </if>
			 <if test="check_type_code != null and check_type_code !='' ">
			 	and (check1 in (check_type_code) 
			 			or check2 in (check_type_code) 
			 			or check3 in (check_type_code)
			 			or check4 in (check_type_code))
			 </if>
			 <if test="extras != null and extras != '' ">
			 	and subj_nature_code&lt;&gt;#{extras}
			 </if>
			<if test="key != null and key != ''">
				and (
				SUBJ_CODE like '${key}%' or
				SUBJ_NAME like '%${key}%' or
				spell_code like '%${key}%' or
				wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by subj_code
	</select>
	
	<select id="queryVeriCheckId" resultType="java.lang.String">
		select max(veri_check_id) from acc_vouch_veri where credit_check_id= #{check_id} or debit_check_id=#{check_id} 
		 and group_id = #{group_id} 
		 and hos_id = #{hos_id} 
		 and copy_code = #{copy_code} 
		 and acc_year = #{acc_year}
	</select>
	<!-- 会计科目  是否带辅助核算 -->
	<select id="querySubjIsCheck" resultMap="accSubjD">
		SELECT
		subj_id||'.'||subj_code||'.'||is_check id,
		subj_code||' '||subj_name_all as text
		FROM ACC_SUBJ
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year}
			</if>
			<if test="SUBJ_NATURE_CODE1 != null  and SUBJ_NATURE_CODE1 != ''">
				and SUBJ_NATURE_CODE in (#{SUBJ_NATURE_CODE1},#{SUBJ_NATURE_CODE2})
			</if>
			 <if test="check_type_id != null  and check_type_id != ''">
			 	and (check1 = #{check_type_id} or check2 = #{check_type_id} or check3 = #{check_type_id} or check4 = #{check_type_id})
			 </if>
			 <if test="subj_nature_code != null and subj_nature_code !='' ">
			 	and subj_nature_code=#{subj_nature_code}
			 </if>
			 <if test="subj_type_code != null and subj_type_code !='' ">
			 	and (subj_type_code = #{subj_type_code}
				 <if test="subj_type_code1 != null and subj_type_code1 !='' ">
				 	or subj_type_code1 = #{subj_type_code1}
				 </if>
				 )
			 </if>
			 <if test="is_last != null and is_last !='' ">
			 	and is_last=#{is_last}
			 </if>
			 <if test="check_type_code != null and check_type_code !='' ">
			 	and (check1 in (check_type_code) 
			 			or check2 in (check_type_code) 
			 			or check3 in (check_type_code)
			 			or check4 in (check_type_code))
			 </if>
			 <if test="extras != null and extras != '' ">
			 	and subj_nature_code&lt;&gt;#{extras}
			 </if>
			<if test="key != null and key != ''">
				and (
				SUBJ_CODE like '${key}%' or
				SUBJ_NAME like '%${key}%' or
				spell_code like '%${key}%' or
				wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by subj_code
	</select>
	
	<!-- 往来核销左侧查询 -->
	<select id="queryAccVerificationL" parameterType="java.util.Map" resultMap="accLederChecks">
			select group_id,hos_id,copy_code,acc_year,check_id,vouch_date,vouch_no,check_name,check_code,summary,debit,credit,ybal_amt,wbal_amt,
       			veri_check_id,ver_date,occur_date,due_date,con_no,business_no,vouch_id,is_check,state,acc_month
			from (
				select distinct avc.group_id,
			       avc.hos_id,
			       avc.copy_code,
			       avc.acc_year,
			       avc.vouch_check_id as check_id,
			       to_char(av.vouch_date,'yyyy-MM-dd') vouch_date,
			       substr(avt.vouch_type_short,0,1)||'-'|| av.vouch_no as vouch_no,
			       ${checkCol}
			       avd.summary,
			       nvl(avc.debit,0) as debit, 
			       0 as credit,
			       nvl(avc.bal_amt,0)  as ybal_amt,
			       nvl(avc.debit,0) - nvl(avc.bal_amt,0) as wbal_amt,
			       avi.veri_check_id as veri_check_id,
			       avi.create_date as ver_date,
			       to_char(avc.occur_date,'yyyy-MM-dd') occur_date,
			       to_char(avc.due_date,'yyyy-MM-dd') due_date,
			       avc.con_no,
			       avc.business_no,
			       av.vouch_id,
			       case when (nvl(avc.debit,0)-nvl(avc.bal_amt,0)) = 0 then 1 
			       else	
			       		case when (nvl(avc.debit,0)-nvl(avc.bal_amt,0)) != 0 then 0
			       		else 0
			       		end
			       end is_check,
			       #{veriState} state,av.acc_month
			from acc_vouch_check avc
			<if test="tableName != null and tableName != ''">
				join  ${tableName} b on avc.group_id = b.group_id 
				and avc.hos_id = b.hos_id   
				${check}
			</if>
			left join acc_vouch_detail avd on avc.group_id = avd.group_id
			    and avc.hos_id = avd.hos_id
			    and avc.copy_code = avd.copy_code
			    and avc.vouch_detail_id = avd.vouch_detail_id
			left join acc_vouch av on av.group_id = avd.group_id
			    and av.hos_id = avd.hos_id
			    and av.copy_code = avd.copy_code
			    and av.vouch_id = avd.vouch_id
			left join acc_vouch_type  avt on avt.group_id = av.group_id
				and avt.hos_id = av.hos_id
				and avt.copy_code = av.copy_code  
				and avt.vouch_type_code = av.vouch_type_code
				and avt.is_stop = 0
			left join (
				select group_id,hos_id,copy_code,acc_year,veri_check_id,sum(veri_money) veri_money,debit_check_id,create_date
             	from acc_vouch_veri
             	where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code} and acc_year=#{acc_year}
             	group by group_id,hos_id,copy_code,acc_year,veri_check_id,debit_check_id,create_date
			) avi on avi.group_id = avc.group_id
			    and avi.hos_id = avc.hos_id
			    and avi.copy_code = avc.copy_code
			    and avi.acc_year = avc.acc_year
			    and avi.debit_check_id = avc.vouch_check_id
			where  
					avc.group_id = #{group_id} 
				and avc.hos_id = #{hos_id}
				and avc.copy_code = #{copy_code}
				and avc.acc_year = #{acc_year} 
				<if test="subj_code != null and subj_code != ''">
	            	and avc.subj_code = #{subj_code}
	            </if>
	            <if test="veriState ==2 ">
	            	and (nvl(avc.debit,0)-nvl(avc.bal_amt,0)) = 0
	            </if>
	            <if test="veriState == 1 ">
	            	and (nvl(avc.debit,0)-nvl(avc.bal_amt,0)) != 0
	            </if>
				${state}
				and nvl(avc.debit,0) != 0
				<if test="con_noL != null and con_noL != ''">
	            	and avc.con_no = #{con_noL}
	            </if>
	            <if test="summaryL != null and summaryL != ''">
	            	AND avc.summary like '%'||#{summaryL}||'%'
	            </if>
	            <if test="business_noL != null and business_noL != ''">
	            	AND avc.business_no = #{business_noL}
	            </if>
	            <choose>
        			<when test="acc_monthLB != null and acc_monthLB = '00'">
	            		and (avc.is_init=1 or av.acc_month between #{acc_monthLB} and  #{acc_monthLE})
	            	</when>
        			<otherwise>
        				and av.acc_month between #{acc_monthLB} and  #{acc_monthLE}
        			</otherwise>
        		</choose>
	            <if test="priceL1 != null and priceL1 != '' and priceL2 !=null and priceL2!=''">
	            	AND avc.debit  between #{priceL1,jdbcType=INTEGER} and #{priceL2,jdbcType=INTEGER}
	            </if>
	            <if test="begin_date != null and begin_date !='' ">
		            and av.vouch_date &gt;= to_date(#{begin_date},'yyyy-MM-dd')
		        </if>
		        <if test="end_date != null and end_date !='' ">
		            and av.vouch_date &lt;= to_date(#{end_date},'yyyy-MM-dd')
		        </if>
			)
			order by acc_year,acc_month,vouch_no ,check_name
	</select>
	
	<!-- 往来查询 右侧 -->
	<select id="queryAccVerificationR" parameterType="java.util.Map" resultMap="accLederChecks">
			select group_id,hos_id,copy_code,acc_year,check_id,vouch_date,vouch_no,check_name,check_code,summary,debit,credit,ybal_amt,wbal_amt,
       			veri_check_id,ver_date,occur_date,due_date,con_no,business_no,vouch_id,is_check,state,acc_month
			from (
				select distinct
					avc.group_id,
				    avc.hos_id,
				    avc.copy_code,
				    avc.acc_year,
				    avc.vouch_check_id as check_id,
				    to_char(av.vouch_date,'yyyy-MM-dd') vouch_date,
				    substr(avt.vouch_type_short,0,1)||'-'|| av.vouch_no as vouch_no,
				    ${checkCol}
				    avd.summary,
				    0 as debit,
				    nvl(avc.credit,0) as credit, 
				    nvl(avc.bal_amt,0)  as ybal_amt,
				    nvl(avc.credit,0) - nvl(avc.bal_amt,0) as wbal_amt,
				    avi.veri_check_id as veri_check_id,
					avi.ver_date as ver_date,
				    to_char(avc.occur_date,'yyyy-MM-dd') occur_date,
			        to_char(avc.due_date,'yyyy-MM-dd') due_date,
				    avc.con_no,
				    avc.business_no,
				    av.vouch_id ,
				    case when (nvl(avc.credit,0)-nvl(avc.bal_amt,0)) = 0 then 1 
			       	else	
			       		case when (nvl(avc.credit,0)-nvl(avc.bal_amt,0)) != 0 then 0
			       		else 0
			       		end
			       end is_check,
			       #{veriState} state,av.acc_month
				from acc_vouch_check avc
				<if test="tableName != null and tableName != ''">
					join  ${tableName} b on avc.group_id = b.group_id 
					and avc.hos_id = b.hos_id   ${check}
				</if>
				left join acc_vouch_detail avd on avc.group_id = avd.group_id
				     and avc.hos_id = avd.hos_id
				     and avc.copy_code = avd.copy_code
				     and avc.vouch_detail_id = avd.vouch_detail_id
				left join acc_vouch av on av.group_id = avd.group_id
				     and av.hos_id = avd.hos_id
				     and av.copy_code = avd.copy_code
				     and av.vouch_id = avd.vouch_id
				left join acc_vouch_type  avt on avt.group_id = av.group_id
					 and avt.hos_id = av.hos_id
					 and avt.copy_code = av.copy_code  
					 and avt.vouch_type_code = av.vouch_type_code
					 and avt.is_stop = 0
				left join (
					select max(veri_check_id) veri_check_id,credit_check_id,max(create_date) ver_date 
             		from acc_vouch_veri
             		where group_id=#{group_id} and hos_id=#{hos_id} and copy_code=#{copy_code} and acc_year=#{acc_year}
             		group by group_id,hos_id,copy_code,acc_year,credit_check_id
				) avi on avi.credit_check_id = avc.vouch_check_id
				where   avc.group_id = #{group_id} 
					and avc.hos_id = #{hos_id}
					and avc.copy_code = #{copy_code}
					and avc.acc_year = #{acc_year} 
					<if test="subj_code != null and subj_code != ''">
		            	and avc.subj_code = #{subj_code}
		            </if>
		            <if test="veriState ==2 ">
		            	and (nvl(avc.credit, 0) - nvl(avc.bal_amt, 0)) = 0
		            </if>
		            <if test="veriState == 1 ">
		            	and (nvl(avc.credit, 0) - nvl(avc.bal_amt, 0))!=0
		            </if>
					${state}
					and nvl(avc.credit,0) != 0
					<if test="con_noR != null and con_noR != ''">
		            	and avc.con_no = #{con_noR}
		            </if>
		            <if test="summaryR != null and summaryR != ''">
		            	AND avc.summary like '%'||#{summaryR}||'%'
		            </if>
		            <if test="business_noR != null and business_noR != ''">
		            	AND avc.business_no = #{business_noR}
		            </if>
		            
		           
		            <choose>
	        			<when test="acc_monthRB != null and acc_monthRB = '00'">
		            		and (avc.is_init=1 or av.acc_month between #{acc_monthRB} and  #{acc_monthRE})
		            	</when>
	        			<otherwise>
	        				and av.acc_month between #{acc_monthRB} and  #{acc_monthRE}
	        			</otherwise>
        			</choose>
        		
		            <if test="priceR1 != null and priceR1 != '' and priceR2 !=null and priceR2!=''">
		            	AND avc.credit between #{priceR1} and #{priceR2}
		            </if>
		            <if test="begin_date != null and begin_date !='' ">
		            	and av.vouch_date &gt;= to_date(#{begin_date},'yyyy-MM-dd')
		            </if>
		           
		            <if test="end_date != null and end_date !='' ">
		            	and av.vouch_date &lt;= to_date(#{end_date},'yyyy-MM-dd')
		            </if>
			) 
		    order by acc_year,acc_month,vouch_no ,check_name
		
	</select>
	
	<!-- 往来核销日志表中插入数据 -->
	<insert id="addAccVericationLog" parameterType="java.util.Map">
		insert into acc_vouch_veri_log(
			log_id,
			group_id,
			hos_id,
			copy_code,
			acc_year,
			create_user,
			create_date,
			note
		)
		select  ACC_VOUCH_VERI_LOG_SEQ.nextval ,
			#{group_id}, 
			#{hos_id},
			#{copy_code}, 
			#{acc_year}, 
			#{create_user}, 
			#{create_date},
			#{note}
		FROM dual
	</insert>
	
	<!-- 往来核销表中插入数据 -->
	<insert id="addAccVericationVer" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			insert into acc_vouch_veri(
				veri_id,
				group_id,
				hos_id,
				copy_code,
				acc_year,
				veri_check_id,
				debit_check_id,
				credit_check_id,
				veri_money,
				veri_money_w,
				create_user,
				create_date
			)VALUES (
				ACC_VOUCH_VERI_SEQ.nextval,
				#{item.group_id} , 
				#{item.hos_id} ,
				#{item.copy_code} , 
				#{item.acc_year} ,
				#{item.veri_check_id} ,
				#{item.debit_check_id} , 
				#{item.credit_check_id} , 
				#{item.veri_money} , 
				#{item.veri_money_w} ,
				#{item.create_user} , 
				#{item.create_date}
			)
		</foreach>
	</insert>
	
	<!-- 批量删除  根据时间段来删除核算表中数据 -->
	<delete id="detelBatchAccVeriByTime" parameterType="java.util.Map">
		delete from acc_vouch_veri 
		where veri_check_id  in 
		(
			select distinct avv.veri_check_id 
			from acc_vouch_veri avv
			left join acc_vouch_check avc on avv.group_id = avc.group_id
				and avv.hos_id = avc.hos_id
				and avv.copy_code = avc.copy_code
				and avv.debit_check_id = avc.vouch_check_id	
			<where>
				<if test="group_id !='' and is_auto != null ">
					and avv.group_id = #{group_id}
				</if>
				<if test="hos_id !='' and hos_id != null ">
					and avv.hos_id = #{hos_id}
				</if>
				<if test="copy_code !='' and copy_code != null ">
					and avv.copy_code = #{copy_code}
				</if>
				<if test="acc_year !='' and acc_year != null ">
					and avv.acc_year = #{acc_year}
				</if>
				<if test="begin_date !='' and begin_date != null and end_date !='' and end_date != null">
					and avv.create_date between to_date(#{begin_date},'yyyy-mm-dd HH24:MI:SS') and to_date(#{end_date},'yyyy-mm-dd HH24:MI:SS')
				</if>
				<if test="create_user !='' and create_user != null ">
					and avv.create_user =  #{create_user}
				</if>
					and avc.subj_code = #{subj_code}
			</where>
		) 
			<if test="group_id !='' and group_id != null ">
				and group_id = #{group_id}
			</if>
			<if test="hos_id !='' and hos_id != null ">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code !='' and copy_code != null ">
				and copy_code = #{copy_code}
			</if>
			<if test="acc_year !='' and acc_year != null ">
				and acc_year = #{acc_year}
			</if> 
	</delete>
	
	<!-- 勾选取消核销 核算表中数据 -->
    <delete id="deleteAccVericationVeri" parameterType="java.util.List">
    	delete from acc_vouch_veri 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
	    		<if test="item.group_id !='' and item.group_id != null ">
	    			group_id = #{item.group_id}
	    		</if>
	    		<if test="item.hos_id !='' and item.hos_id != null ">
	    			and hos_id = #{item.hos_id}
	    		</if>
	    		<if test="item.copy_code !='' and item.copy_code != null ">
	    			and copy_code = #{item.copy_code}
	    		</if>
	    		<if test="item.acc_year !='' and item.acc_year != null ">
	    			and acc_year = #{item.acc_year}
	    		</if>
	    		<if test="item.debit_check_id !='' and item.debit_check_id != null ">
	    			and debit_check_id = #{item.debit_check_id}
	    		</if>
	    		<if test="item.credit_check_id !='' and item.credit_check_id != null ">
	    			and credit_check_id = #{item.credit_check_id}
	    		</if>
	    		<if test="item.create_user !='' and item.create_user != null ">
	    			and create_user = #{item.create_user}
	    		</if>
	    		<if test="item.veri_money !='' and item.veri_money != null ">
	    			and veri_money = #{item.veri_money}
	    		</if>
    		</foreach>	
		</where>
    </delete>
	
	<!-- 查看选定的时间范围内是否有核销记录 -->
    <select id="queryAccVericationCount" parameterType="java.util.Map" resultType="java.util.Map" >
		select b.group_id,b.hos_id,b.copy_code,b.acc_year,c.vouch_check_id,(-1)*nvl(b.veri_money,0) as bal_amt
		from acc_vouch_veri b
		left join acc_vouch_check c on c.group_id = b.group_id 
  			and c.hos_id = b.hos_id 
  			and c.copy_code = b.copy_code
  			and c.acc_year = b.acc_year
  			and (c.vouch_check_id = b.debit_check_id or c.vouch_check_id= b.credit_check_id)
		where b.group_id = #{group_id}
  			and b.hos_id = #{hos_id}
  			and b.copy_code = #{copy_code}
            AND c.subj_code  = #{subj_code}
            AND b.create_user  = #{create_user}
  			and b.create_date between to_date(#{begin_date},'yyyy-MM-dd HH24:MI:SS') and to_date(#{end_date},'yyyy-MM-dd HH24:MI:SS') 
  			
		<!-- select c.vouch_check_id as check_id 
		from  acc_vouch_veri b  
  		left join acc_vouch_check c on c.group_id = b.group_id 
  			and c.hos_id = b.hos_id 
  			and c.copy_code = b.copy_code
  			and c.acc_year = b.acc_year
  			and c.vouch_check_id = b.debit_check_id
  		where 	b.group_id = #{group_id}
  			and b.hos_id = #{hos_id}
  			and b.copy_code = #{copy_code}
  			<if test="subj_code != null and subj_code != ''">
            	AND c.subj_code  = #{subj_code}
            </if>
            <if test="create_user != null and create_user != ''">
            	AND b.create_user  = #{create_user}
            </if>
  			and b.create_date between to_date(#{start_days},'yyyy-mm-dd HH24:MI:SS') and to_date(#{end_days},'yyyy-mm-dd HH24:MI:SS') 
  			and rownum=1 -->
	</select>
	
	
	
	<!-- 往来核销  借方已核销数据查询 -->
	<select id="queryAccVerDetailJ" parameterType="java.util.Map" resultMap="accLederChecks">
		select 
			avv.group_id,
	        avv.hos_id,
	        avv.copy_code,
	        avv.acc_year,
	        avv.veri_check_id,
	        avc.vouch_check_id AS check_id, 
	        av.vouch_date, 
	        substr(avt.vouch_type_name, 0, 1) || '-' || av.vouch_no AS vouch_no, 
	        <if test="columnName !=null and columnName !='' ">
	        	${columnName}
	        </if>
	        avc.summary , 
	        nvl(avc.credit, 0) AS debit, 
	        nvl(avv.veri_money, 0) AS ybal_amt,
	        nvl(avc.credit, 0) - nvl(avv.veri_money, 0) AS wbal_amt,
	        su.user_name AS ver_person, 
	        avv.create_date AS ver_date, 
	        avc.occur_date, 
	        avc.due_date, 
	        avc.con_no, 
	        avc.business_no,avc.vouch_id
        from acc_vouch_veri avv
		left join  acc_vouch_check avc  on avc.group_id = avv.group_id
		     and avc.hos_id = avv.hos_id
		     and avc.copy_code = avv.copy_code
		     and avc.acc_year = avv.acc_year
		     and avc.vouch_check_id = avv.credit_check_id
		left join acc_vouch_detail avd on avd.group_id = avc.group_id
		     and avd.hos_id = avc.hos_id
		     and avd.copy_code = avc.copy_code
		     and avd.acc_year = avc.acc_year
		     and avd.vouch_detail_id = avc.vouch_detail_id
		     and avd.vouch_id = avc.vouch_id
		left join acc_vouch av on av.group_id = avd.group_id
		     and av.hos_id = avd.hos_id
		     and av.copy_code  = avd.copy_code
		     and av.acc_year = avd.acc_year
		     and av.vouch_id = avd.vouch_id
		<if test="joinSql !=null and joinSql != '' ">
			${joinSql}
		</if>
		left join acc_vouch_type avt on avt.group_id = av.group_id
			and avt.hos_id = av.hos_id
			and avt.copy_code = av.copy_code
			and avt.vouch_type_code = av.vouch_type_code 
		left join sys_user su on su.group_id = avv.group_id
			and su.hos_id = avv.hos_id
			and su.user_id = avv.create_user 
		  	and su.is_stop = 0	
		where avc.group_id = #{group_id} 
			and avc.hos_id = #{hos_id}
			and avc.copy_code = #{copy_code}
			and avc.acc_year = #{acc_year} 
			and avv.veri_check_id = #{veri_check_id}
    		--and avv.debit_check_id = 0
    		<if test="check_code !=null ">
				 and dd.sup_code=#{check_code}
			</if>
          order by av.vouch_no
	</select>
	
	<!-- 往来核销  贷方已核销数据查询 -->
	<select id="queryAccVerDetailD" parameterType="java.util.Map" resultMap="accLederChecks">
		select 
			avv.group_id,
	        avv.hos_id,
	        avv.copy_code,
	        avv.acc_year,
	        avv.veri_check_id,
	        avc.vouch_check_id AS check_id, 
	        av.vouch_date, 
	        substr(avt.vouch_type_name, 0, 1) || '-' || av.vouch_no AS vouch_no, 
	        <if test="columnName !=null and columnName !='' ">
	        	${columnName}
	        </if>
	        avc.summary ,
	        nvl(avc.debit,0) AS debit, 
	        nvl(avv.veri_money, 0) AS ybal_amt,
	        nvl(avc.debit, 0) - nvl(avv.veri_money, 0) AS wbal_amt,
	        su.user_name AS ver_person, 
	        avv.create_date AS ver_date, 
	        avc.occur_date, 
	        avc.due_date, 
	        avc.con_no, 
	        avc.business_no,avc.vouch_id
		from acc_vouch_veri avv
		left join  acc_vouch_check avc  on avc.group_id = avv.group_id
		     and avc.hos_id = avv.hos_id
		     and avc.copy_code = avv.copy_code
		     and avc.acc_year = avv.acc_year
		     and avc.vouch_check_id = avv.debit_check_id
		left join acc_vouch_detail avd on avd.group_id = avc.group_id
		     and avd.hos_id = avc.hos_id
		     and avd.copy_code = avc.copy_code
		     and avd.acc_year = avc.acc_year
		     and avd.vouch_detail_id = avc.vouch_detail_id
		     and avd.vouch_id = avc.vouch_id
		left join acc_vouch av on av.group_id = avd.group_id
		     and av.hos_id = avd.hos_id
		     and av.copy_code  = avd.copy_code
		     and av.acc_year = avd.acc_year
		     and av.vouch_id = avd.vouch_id
		<if test="joinSql !=null and joinSql != '' ">
			${joinSql}
		</if>
		left join acc_vouch_type avt on avt.group_id = av.group_id
			and avt.hos_id = av.hos_id
			and avt.copy_code = av.copy_code
			and avt.vouch_type_code = av.vouch_type_code 
		left join sys_user su on su.group_id = avv.group_id
			and su.hos_id = avv.hos_id
			and su.user_id = avv.create_user 
		  	and su.is_stop = 0	
		where avc.group_id = #{group_id} 
			and avc.hos_id = #{hos_id}
			and avc.copy_code = #{copy_code}
			and avc.acc_year = #{acc_year} 
			and avv.veri_check_id = #{veri_check_id}
    		--and avv.credit_check_id = 0
    		<if test="check_code !=null ">
				 and dd.sup_code=#{check_code}
			</if>
          order by av.vouch_no
		
	</select>
	
	
	<!-- 往来管理   应收账龄分析 -->
	<select id="queryReceivableAccount" statementType="CALLABLE" parameterType="java.util.Map" resultType="java.util.Map">
		<![CDATA[
		{call PRC_ACC_VERI_REANALYSIS(
			#{group_id,jdbcType=INTEGER},  
	        #{hos_id,jdbcType=INTEGER},  
	        #{copy_code,jdbcType=VARCHAR},
	        #{acc_year,jdbcType=VARCHAR},  
	        #{subj_code,jdbcType=VARCHAR},
	        #{check_type,jdbcType=VARCHAR},
	        #{check_type_id,jdbcType=INTEGER},
	        #{proj1},
	        #{proj2},
	        #{analysisDate},
	        #{end_date},
	        #{showItem},
	        #{is_check},
	        
	        #{check_table},
	        #{column_no},
	        #{column_id},
	        #{column_code},
	        #{column_name},
	        #{column_check},
	        #{is_change},
	        
	        #{pagesize,jdbcType=INTEGER},
			#{page,jdbcType=INTEGER},
			#{tcount,mode=OUT,jdbcType=INTEGER},
			#{rst,jdbcType=CURSOR,mode=OUT,resultMap=com.chd.hrp.acc.dao.verification.AccVerificationMapper.accBooksVeriMap,javaType=java.sql.ResultSet})}
		]]>
	</select>
	
	<update id="updateAccVouchCheck" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE acc_vouch_check set bal_amt = nvl(bal_amt,0) + #{item.bal_amt} 
			where
					 group_id = #{item.group_id,jdbcType=INTEGER}
					and hos_id = #{item.hos_id,jdbcType=INTEGER}
					and copy_code = #{item.copy_code,jdbcType=VARCHAR}
					and acc_year = #{item.acc_year,jdbcType=VARCHAR}
					and vouch_check_id = #{item.vouch_check_id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 往来核销左侧 -->
	<select id="queryAccVerification" parameterType="java.util.List" resultMap="accLederChecks">
		with left_tmp as (
			<foreach collection="list" item="item" index="index" separator=" union all " >
				select    
					#{item.group_id,jdbcType=INTEGER} as group_id, 
					#{item.hos_id,jdbcType=INTEGER} as hos_id, 
					#{item.copy_code,jdbcType=VARCHAR} as copy_code,
					#{item.acc_year,jdbcType=VARCHAR} as acc_year,
					#{item.check_id,jdbcType=INTEGER} as check_id, 
					#{item.vouch_date,jdbcType=VARCHAR} as vouch_date,
					#{item.vouch_no,jdbcType=VARCHAR} as vouch_no,
					#{item.check_code,jdbcType=VARCHAR} as check_code,
					#{item.check_name,jdbcType=VARCHAR} as check_name,
					#{item.summary,jdbcType=VARCHAR} as summary,
			      	#{item.debit,jdbcType=INTEGER} as debit,
			      	#{item.credit,jdbcType=INTEGER} as credit,   
			      	#{item.ybal_amt,jdbcType=INTEGER} as ybal_amt, 
			      	#{item.wbal_amt,jdbcType=INTEGER} as wbal_amt, 
			      	#{item.veri_check_id,jdbcType=INTEGER} as veri_check_id, 
			      	#{item.ver_date,jdbcType=VARCHAR} as ver_date,
			      	#{item.occur_date,jdbcType=VARCHAR} as occur_date,
			      	#{item.due_date,jdbcType=VARCHAR} as due_date,
			      	#{item.con_no,jdbcType=VARCHAR} as con_no,
			      	#{item.business_no,jdbcType=VARCHAR} as business_no,
			        #{item.vouch_id,jdbcType=INTEGER} as vouch_id, 
			        #{item.is_check,jdbcType=INTEGER} as is_check, 
			        #{item.state,jdbcType=INTEGER} as state
				from dual
			</foreach>
		)
		select 
			group_id, hos_id, copy_code, acc_year, check_id, vouch_date, vouch_no, check_code,
			check_name,summary,debit,credit,ybal_amt,wbal_amt,veri_check_id,ver_date,occur_date,due_date,
			con_no,business_no,vouch_id,is_check,state
		from left_tmp
		order by group_id, hos_id, copy_code, acc_year,vouch_date,vouch_no
	</select>
	
	
</mapper>

