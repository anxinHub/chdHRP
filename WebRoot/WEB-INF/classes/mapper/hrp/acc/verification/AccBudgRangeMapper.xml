<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.verification.AccBudgRangeMapper">

	<resultMap id="accBudgRange" type="com.chd.hrp.acc.entity.AccBudgRange">
		<result property="range_id" column="range_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="begin_days" column="begin_days" />
		<result property="end_days" column="end_days" />
		<result property="range_pro" column="range_pro" />
		<result property="note" column="note" />
	</resultMap>

	<insert id="addAccBudgRange" useGeneratedKeys="true">

		INSERT INTO ACC_BUDG_RANGE (
			range_id,
			group_id,
			hos_id,
			copy_code,
			begin_days,
			end_days,
			range_pro,
			note
		) VALUES (
			ACC_BUDG_RANGE_SEQ.nextval ,
			#{group_id} ,
			#{hos_id} ,
			#{copy_code} ,
			#{begin_days} ,
			#{end_days} ,
			#{range_pro} ,
			#{note}
		)

	</insert>
	<insert id="addBatchAccBudgRange" parameterType="java.util.List">

		INSERT INTO ACC_BUDG_RANGE (
			range_id,
			group_id,
			hos_id,
			copy_code,
			begin_days,
			end_days,
			range_pro,
			note
		)
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.range_id} ,
				#{item.group_id} ,
				#{item.hos_id} ,
				#{item.copy_code} ,
				#{item.begin_days} ,
				#{item.end_days} ,
				#{item.range_pro} ,
				#{item.note}
			from dual
		</foreach>

	</insert>

	<update id="updateAccBudgRange" parameterType="java.util.Map">
		UPDATE acc_budg_range 
			SET begin_days = #{begin_days} ,
				end_days = #{end_days} ,
				range_pro = #{range_pro} ,
				note = #{note}
		WHERE group_id=#{group_id}
			and hos_id=#{hos_id}
			and copy_code=#{copy_code}
			and range_id = #{range_id}
	</update>
	
	<update id="updateBatchAccBudgRange" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
			UPDATE acc_budg_range 
			SET group_id = #{item.group_id},
				hos_id = #{item.hos_id},
				copy_code = #{item.copy_code},
				begin_days = #{item.begin_days},
				end_days = #{item.end_days},
				range_pro = #{item.range_pro},
				note = #{item.note}
			WHERE	group_id=#{item.group_id}
				and hos_id=#{item.hos_id}
				and copy_code=#{item.copy_code}
				and range_id = #{item.range_id}

		</foreach>
	</update>

	<delete id="deleteAccBudgRange" parameterType="java.util.Map">
		DELETE FROM acc_budg_range 
		WHERE group_id=#{group_id}
			and hos_id=#{hos_id}
			and copy_code=#{copy_code}
			and range_id = #{range_id}
	</delete>
	
	<delete id="deleteBatchAccBudgRange" parameterType="java.util.List">
		DELETE FROM acc_budg_range WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id=#{item.group_id}
			and hos_id=#{item.hos_id}
			and copy_code=#{item.copy_code}
			and range_id = #{item.range_id}
		</foreach>
	</delete>

	<select id="queryAccBudgRangeByCode" resultType="com.chd.hrp.acc.entity.AccBudgRange" parameterType="string">
		SELECT
			range_id,
			group_id,
			hos_id,
			copy_code,
			begin_days,
			end_days,
			range_pro,
			note
		FROM acc_budg_range
		WHERE group_id=#{group_id}
			and hos_id=#{hos_id}
			and copy_code=#{copy_code}
			and range_id = #{range_id}
	</select>

	<select id="getMaxDay" parameterType="string" resultType="com.chd.hrp.acc.entity.AccBudgRange">
		select * from (
			SELECT begin_days,end_days
			FROM acc_budg_range
			WHERE group_id = #{group_id}
			and hos_id = #{hos_id}
			and copy_code = #{copy_code}
			order by range_id desc
		) 
		where rownum=1
	</select>

	<select id="queryAccBudgRange" parameterType="java.util.Map" resultMap="accBudgRange">

		SELECT
			range_id,
			group_id,
			hos_id,
			copy_code,
			begin_days,
			end_days,
			range_pro,
			note
		FROM ACC_BUDG_RANGE
		<where>
			<if test="range_id != null and range_id != ''">
				AND range_id = #{range_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="begin_days != null and begin_days != ''">
				AND begin_days = #{begin_days}
			</if>
			<if test="end_days != null and end_days != ''">
				AND end_days = #{end_days}
			</if>
			<if test="range_pro != null and range_pro != ''">
				AND range_pro = #{range_pro}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
		</where>
		order by range_id asc
	</select>
	
	<select id="queryAccBugRangeTop" parameterType="java.util.Map" resultMap="accBudgRange">
		SELECT range_id, group_id,hos_id,copy_code,begin_days from (
			select
			range_id,
			group_id,
			hos_id,
			copy_code,
			begin_days,
			end_days,
			range_pro,
			note
			FROM ACC_BUDG_RANGE
			<where>
				group_id = #{group_id}
				AND hos_id = #{hos_id}
				AND copy_code = #{copy_code}
			</where>
			order by range_id asc
		)
		where rownum=1
	</select>
	
	<select id="queryAccBudgRangePrint" parameterType="java.util.Map" resultType="java.util.Map">

		SELECT
			range_id,
			group_id,
			hos_id,
			copy_code,
			begin_days,
			end_days,
			range_pro,
			note
		FROM ACC_BUDG_RANGE
		<where>
			<if test="range_id != null and range_id != ''">
				AND range_id = #{range_id}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="begin_days != null and begin_days != ''">
				AND begin_days = #{begin_days}
			</if>
			<if test="end_days != null and end_days != ''">
				AND end_days = #{end_days}
			</if>
			<if test="range_pro != null and range_pro != ''">
				AND range_pro = #{range_pro}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
		</where>
		order by range_id asc
	</select>
</mapper>

