<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.verification.AccBudgLederMapper">

	<resultMap id="accBudgLeder" type="com.chd.hrp.acc.entity.AccBudgLeder">
		<result property="range_id" column="range_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="acc_month" column="acc_month" />
		<result property="subj_code_hz" column="subj_code_hz" />
		<result property="subj_code_gl" column="subj_code_gl" />
		<result property="range_pro" column="range_pro" />
		<result property="range_type" column="range_type" />

		<result property="subj_name_hz" column="subj_name_hz" />
		<result property="subj_name_gl" column="subj_name_gl" />
		<result property="vouch_date" column="vouch_date" />
		<result property="vouch_code" column="vouch_code" />
		<result property="end_os" column="end_os" />
		<result property="hz_end_os" column="hz_end_os" />
		<result property="hz_os" column="hz_os" />

	</resultMap>
	
	<resultMap id="accTermendTemplate" type="com.chd.hrp.acc.entity.AccTermendTemplate">
		<result property="template_id" column="template_id" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acc_year" column="acc_year" />
		<result property="template_name" column="template_name" />
		<result property="template_type_code" column="template_type_code" />
		<result property="vouch_type_code" column="vouch_type_code" />
		<result property="vouch_type_name" column="vouch_type_name" />
		<result property="rate" column="rate" />
		<result property="summary" column="summary" />
		<result property="debit_subj_id1" column="debit_subj_id1" />
		<result property="debit_subj_code1" column="debit_subj_code1" />
		<result property="debit_subj_name1" column="debit_subj_name1" />
		<result property="debit_subj_dire1" column="debit_subj_dire1" />
		<result property="debit_is_check1" column="debit_is_check1" />
		<result property="debit_is_cash1" column="debit_is_cash1" />
		<result property="debit_subj_type_code1" column="debit_subj_type_code1" />
		<result property="debit_subj_nature_code1" column="debit_subj_nature_code1" />
		<result property="debit_subj_id2" column="debit_subj_id2" />
		<result property="debit_subj_code2" column="debit_subj_code2" />
		<result property="debit_subj_name2" column="debit_subj_name2" />
		<result property="debit_subj_dire2" column="debit_subj_dire2" />
		<result property="debit_is_check2" column="debit_is_check2" />
		<result property="debit_is_cash2" column="debit_is_cash2" />
		<result property="debit_subj_type_code2" column="debit_subj_type_code2" />
		<result property="debit_subj_nature_code2" column="debit_subj_nature_code2" />
		<result property="credit_subj_id1" column="credit_subj_id1" />
		<result property="credit_subj_code1" column="credit_subj_code1" />
		<result property="credit_subj_name1" column="credit_subj_name1" />
		<result property="credit_subj_dire1" column="credit_subj_dire1" />
		<result property="credit_is_check1" column="credit_is_check1" />
		<result property="credit_is_cash1" column="credit_is_cash1" />
		<result property="credit_subj_type_code1" column="credit_subj_type_code1" />
		<result property="credit_subj_nature_code1" column="credit_subj_nature_code1" />
	</resultMap>
	
	<!-- 获取序列号 -->
	<select id="queryAccBudgLederSeq"  resultType="java.lang.Long" useCache="false" flushCache="true">	
		select ACC_BUDG_LEDER_SEQ.nextval from dual
	</select>
	
	<!-- 添加 -->
	<insert id="addAccBudgLeder" useGeneratedKeys="true">
		INSERT INTO ACC_BUDG_LEDER (
			range_id ,
			group_id ,
			hos_id ,
			copy_code ,
			acc_year ,
			acc_month,
			subj_code_hz,
			subj_code_gl,
			range_pro,
			range_type
		) VALUES (
			#{range_id,jdbcType=INTEGER} ,
			#{group_id,jdbcType=INTEGER} ,
			#{hos_id,jdbcType=INTEGER} ,
			#{copy_code,jdbcType=VARCHAR} ,
			#{acc_year,jdbcType=VARCHAR} ,
			#{acc_month,jdbcType=VARCHAR} ,
			#{subj_code_hz,jdbcType=VARCHAR} ,
			#{subj_code_gl,jdbcType=VARCHAR} ,
			#{range_pro,jdbcType=FLOAT} ,
			#{range_type,jdbcType=INTEGER}
		)
	</insert>
	
	<!-- 批量添加 -->
	<insert id="addBatchAccBudgLeder" parameterType="java.util.List">
		INSERT INTO ACC_BUDG_LEDER (
			range_id,
			group_id,
			hos_id,
			copy_code,
			acc_year,
			acc_month,
			subj_code_hz,
			subj_code_gl,
			range_pro,
			range_type
		)
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.range_id} ,
				#{item.group_id} ,
				#{item.hos_id} ,
				#{item.copy_code} ,
				#{item.acc_year} ,
				#{item.acc_month} ,
				#{item.subj_code_hz} ,
				#{item.subj_code_gl} ,
				#{item.range_pro} ,
				#{item.range_type}
			from dual
		</foreach>
	</insert>
	
	<!-- 查询管理费用科目 -->
	<select id="queryManageSubj" resultMap="accBudgLeder" parameterType="java.util.Map">
		SELECT
			subj_code subj_code_hz,
			subj_code||' '||subj_name_all subj_code_gl
		FROM ACC_SUBJ
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last !='' ">
				and is_last = #{is_last,jdbcType=INTEGER}
			</if>
			and subj_code like '5101%'
			<if test="key != null and key != ''">
				and (
					SUBJ_CODE like '%${key}%' or
					SUBJ_NAME like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
		</where>
		union
		select b.subj_code subj_code_hz,
			b.subj_code||' '||b.subj_name_all subj_code_gl
		from ACC_BUDG_LEDER a
		left join acc_subj b on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.acc_year = b.acc_year
			and a.subj_code_gl = b.subj_code
		<where>
			<if test="group_id != null  and group_id != ''">
				and b.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and b.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and b.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and a.acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="acc_month != null  and acc_month != ''">
				and a.acc_month = #{acc_month,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last !='' ">
				and b.is_last = #{is_last,jdbcType=INTEGER}
			</if>
			and b.subj_code like '5101%'
			<if test="key != null and key != ''">
				and (
					b.subj_code like '%${key}%' or
					b.subj_name like '%${key}%' or
					b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by subj_code_gl
	</select>
	
	<!-- 查询坏账科目 -->
	<select id="queryBadSubj" resultMap="accBudgLeder" parameterType="java.util.Map">
		SELECT
		subj_code subj_code_hz,
		subj_code||' '||SUBJ_NAME subj_code_gl
		FROM
		ACC_SUBJ
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="SUBJ_NATURE_CODE1 != null  and SUBJ_NATURE_CODE1 != ''">
				and SUBJ_NATURE_CODE = #{SUBJ_NATURE_CODE1,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last !='' ">
				and is_last = #{is_last,jdbcType=INTEGER}
			</if>
			and subj_code like '1219%'
			<if test="key != null and key != ''">
				and (
					SUBJ_CODE like '%${key}%' or
					SUBJ_NAME like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
		</where>
		union
		select b.subj_code subj_code_hz,
			b.subj_code||' '||b.SUBJ_NAME subj_code_gl
		from ACC_BUDG_LEDER a
		left join acc_subj b on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.acc_year = b.acc_year
			and a.subj_code_hz = b.subj_code
		<where>
			<if test="group_id != null  and group_id != ''">
				and a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and a.acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="acc_month != null  and acc_month != ''">
				and a.acc_month = #{acc_month,jdbcType=VARCHAR}
			</if>
			<if test="SUBJ_NATURE_CODE1 != null  and SUBJ_NATURE_CODE1 != ''">
				and b.SUBJ_NATURE_CODE = #{SUBJ_NATURE_CODE1,jdbcType=VARCHAR}
			</if>
			<if test="is_last != null and is_last !='' ">
				and is_last = #{is_last,jdbcType=INTEGER}
			</if>
			and subj_code like '1219%'
			<if test="key != null and key != ''">
				and (
					b.subj_code like '%${key}%' or
					b.subj_name like '%${key}%' or
					b.spell_code like '%${key}%' or
					b.wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by subj_code_gl
	</select>	
	
	<select id="queryAllSubj" resultMap="accBudgLeder" parameterType="java.util.Map">
		SELECT
			subj_code subj_code_hz,
			subj_code||' '||SUBJ_NAME subj_code_gl
		FROM
		ACC_SUBJ
		<where>
			<if test="group_id != null  and group_id != ''">
				and group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null  and copy_code != ''">
				and copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null  and acc_year != ''">
				and acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="SUBJ_NATURE_CODE1 != null  and SUBJ_NATURE_CODE1 != '' and SUBJ_NATURE_CODE2 !=null and SUBJ_NATURE_CODE2 !='' ">
				and SUBJ_NATURE_CODE in (#{SUBJ_NATURE_CODE1,jdbcType=VARCHAR},#{SUBJ_NATURE_CODE2,jdbcType=VARCHAR})
			</if>
			<if test="is_last != null  and is_last != ''">
				and is_last = #{is_last,jdbcType=INTEGER}
			</if>
			<if test="check_type_id != null  and check_type_id != ''">
				and (check1 = #{check_type_id} or check2 =
				#{check_type_id} or check3 =
				#{check_type_id} or check4 =
				#{check_type_id})
			</if>
			<if test="subj_nature_code != null and subj_nature_code !='' ">
				and subj_nature_code=#{subj_nature_code,jdbcType=VARCHAR}
			</if>
			<if test="subj_type_code != null and subj_type_code !='' ">
				and (
				subj_type_code = #{subj_type_code,jdbcType=VARCHAR}
					<if test="subj_type_code1 != null and subj_type_code1 !='' ">
						or subj_type_code1 = #{subj_type_code1,jdbcType=VARCHAR}
					</if>
				)
			</if>
			<if test="check_type_code != null and check_type_code !='' ">
				and (check1 in (check_type_code)
				or check2 in (check_type_code)
				or check3 in (check_type_code)
				or check4 in (check_type_code))
			</if>
			<if test="extras != null and extras != '' ">
				and subj_nature_code&lt;&gt;#{extras}
			</if>
			<if test="key != null and key != ''">
				and (
					SUBJ_CODE like '%${key}%' or
					SUBJ_NAME like '%${key}%' or
					spell_code like '%${key}%' or
					wbx_code like '%${key}%'
				)
			</if>
		</where>
		order by SUBJ_CODE
	</select>
	
	<!-- 更新坏账表 -->
	<update id="updateAccBudgLeder" parameterType="java.util.Map" >
		UPDATE acc_budg_leder 
			SET acc_month = #{acc_month,jdbcType=VARCHAR} ,
				subj_code_hz = #{subj_code_hz,jdbcType=VARCHAR} ,
				subj_code_gl = #{subj_code_gl,jdbcType=VARCHAR} ,
				range_pro = #{range_pro,jdbcType=FLOAT} ,
				range_type = #{range_type,jdbcType=INTEGER}
		<where>
			<if test="group_id != null and group_id !='' ">
				and group_id = #{group_id,jdbcType=INTEGER} 
			</if>
			<if test="hos_id != null and hos_id !='' ">
				and hos_id = #{hos_id,jdbcType=INTEGER} 
			</if>
			<if test="copy_code != null and copy_code !='' ">
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
			</if>
			<if test="acc_year != null and acc_year !='' ">
				and acc_year = #{acc_year,jdbcType=VARCHAR} 
			</if>
			<if test="range_id != null and range_id !='' ">
				and range_id = #{range_id,jdbcType=INTEGER} 
			</if>
		</where>
	</update>
	
	<select id="queryBudgLederCounts" resultMap="accBudgLeder" parameterType="java.util.Map">
			select range_id,
				group_id,
				hos_id,
				copy_code,
				acc_year,
				acc_month,
				subj_code_hz,
				subj_code_gl,
				nvl(range_pro,0) as range_pro,
				range_type
			from acc_budg_leder
			<where>
				<if test="group_id != null and group_id !='' ">
					and group_id = #{group_id,jdbcType=INTEGER} 
				</if>
				<if test="hos_id != null and hos_id !='' ">
					and hos_id = #{hos_id,jdbcType=INTEGER} 
				</if>
				<if test="copy_code != null and copy_code !='' ">
					and copy_code = #{copy_code,jdbcType=VARCHAR} 
				</if>
				<if test="acc_year != null and acc_year !='' ">
					and acc_year = #{acc_year,jdbcType=VARCHAR} 
				</if>
				<if test="acc_month != null and acc_month !='' ">
					and acc_month = #{acc_month,jdbcType=VARCHAR} 
				</if>
			</where>
	</select>
	
	<!-- 批量更新 -->
	<update id="updateBatchAccBudgLeder" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
			UPDATE acc_budg_leder 
				SET
				subj_code_hz = #{item.subj_code_hz},
				subj_code_gl = #{item.subj_code_gl},
				range_pro = #{item.range_pro},
				range_type = #{item.range_type}
			<where>
				<if test="item.group_id != null and item.group_id !='' ">
					and group_id = #{item.group_id,jdbcType=INTEGER} 
				</if>
				<if test="item.hos_id != null and item.hos_id !='' ">
					and hos_id = #{item.hos_id,jdbcType=INTEGER} 
				</if>
				<if test="item.copy_code != null and item.copy_code !='' ">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR} 
				</if>
				<if test="item.acc_year != null and item.acc_year !='' ">
					and acc_year = #{item.acc_year,jdbcType=VARCHAR} 
				</if>
				<if test="item.acc_month != null and item.acc_month !='' ">
					and acc_month = #{item.acc_month,jdbcType=VARCHAR} 
				</if>
				<if test="item.range_id != null and item.range_id !='' ">
					and range_id = #{item.range_id,jdbcType=INTEGER} 
				</if>
			</where>
		</foreach>
	</update>
	
	<!-- 删除 -->
	<delete id="deleteAccBudgLeder" parameterType="java.util.Map">
		DELETE FROM acc_budg_leder 
		<where>
			<if test="group_id != null and group_id !='' ">
				and group_id = #{group_id,jdbcType=INTEGER} 
			</if>
			<if test="hos_id != null and hos_id !='' ">
				and hos_id = #{hos_id,jdbcType=INTEGER} 
			</if>
			<if test="copy_code != null and copy_code !='' ">
				and copy_code = #{copy_code,jdbcType=VARCHAR} 
			</if>
			<if test="acc_year != null and acc_year !='' ">
				and acc_year = #{acc_year,jdbcType=VARCHAR} 
			</if>
			<if test="range_id != null and range_id !='' ">
				and range_id = #{range_id,jdbcType=INTEGER} 
			</if>
		</where>
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteBatchAccBudgLeder" parameterType="java.util.List">
		
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			DELETE FROM acc_budg_leder 
			<where>
				<if test="item.group_id != null and item.group_id !='' ">
					 group_id = #{item.group_id,jdbcType=INTEGER} 
				</if>
				<if test="item.hos_id != null and item.hos_id !='' ">
					and hos_id = #{item.hos_id,jdbcType=INTEGER} 
				</if>
				<if test="item.copy_code != null and item.copy_code !='' ">
					and copy_code = #{item.copy_code,jdbcType=VARCHAR} 
				</if>
				<if test="item.acc_year != null and item.acc_year !='' ">
					and acc_year = #{item.acc_year,jdbcType=VARCHAR} 
				</if>
				<if test="item.range_id != null and item.range_id !='' ">
					and range_id = #{item.range_id,jdbcType=INTEGER} 
				</if>
			</where>
		</foreach>
	</delete>
	
	<select id="queryAccBudgLederBySubjCode" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			av.vouch_id as vouch_id,
			substr(avf.vouch_type_name,0,1)||'-'|| av.vouch_no as vouch_code,
	     	av.vouch_date as vouch_date,
	    	au.subj_code ||' '|| au.subj_name as subj_code_hz,
	    	ass.subj_code ||' '|| ass.subj_name_all as subj_code_gl,
			(
				select sum(nvl(end_os,0))
				from ACC_LEDER al
				left join acc_subj aa on aa.group_id = al.group_id
					and aa.hos_id = al.hos_id
					and aa.copy_code = al.copy_code
					and aa.acc_year = al.acc_year
					and al.subj_code = aa.subj_code 
				where al.group_id =	#{group_id,jdbcType=INTEGER} 
					and al.hos_id = #{hos_id,jdbcType=INTEGER} 
					and al.copy_code = #{copy_code,jdbcType=VARCHAR} 
					and al.acc_year = #{acc_year,jdbcType=VARCHAR} 
					and al.acc_month = #{acc_month,jdbcType=VARCHAR}
					and aa.subj_code in (#{subj_code}) 
			) end_os,
			( 
				select sum(nvl(end_os,0)) 
		      	from ACC_LEDER al
			  	left join acc_subj aa on aa.group_id = al.group_id 
					and aa.hos_id = al.hos_id
					and aa.copy_code = al.copy_code
					and aa.acc_year = al.acc_year
					and al.subj_code = aa.subj_code
		      	where aa.subj_code in(
		      		select subj_code_hz from ACC_BUDG_LEDER  a
			      		where a.group_id = #{group_id,jdbcType=INTEGER}
				      		and a.hos_id = #{hos_id,jdbcType=INTEGER} 
				      		and a.copy_code = #{copy_code,jdbcType=VARCHAR} 
				      		and a.acc_year = #{acc_year,jdbcType=VARCHAR} 
				      		and a.acc_month = #{acc_month,jdbcType=VARCHAR} 
		       	    ) and aa.subj_code in(#{subj_code})
		        ) hz_end_os,
		      nvl(abl.range_pro,0) as range_pro,
			  (
			  	select sum(nvl(debit,0)) 
			  	from ACC_VOUCH_CHECK c 
			  	inner join ACC_VOUCH_SOURCE s on s.vouch_id=c.vouch_id
			  	left join acc_subj aa on aa.group_id = c.group_id
				  	and aa.hos_id = c.hos_id
				  	and aa.copy_code = c.copy_code
				  	and aa.acc_year = c.acc_year
				  	and c.subj_code = aa.subj_code
			  	where 
				  	    c.group_id = #{group_id,jdbcType=INTEGER} 
				  	and c.hos_id = #{hos_id,jdbcType=INTEGER} 
				  	and c.copy_code = #{copy_code,jdbcType=VARCHAR}
				  	and c.acc_year = #{acc_year,jdbcType=VARCHAR}
				  	and aa.subj_code in(#{subj_code}) 
			  ) hz_os
		from acc_budg_leder abl       
		left join acc_vouch av on abl.group_id = av.group_id
		     and abl.hos_id = av.hos_id
		     and abl.copy_code = av.copy_code
		     and abl.acc_year = av.acc_year 
		     and abl.vouch_id = av.vouch_id
		left join acc_vouch_detail avd on avd.group_id = av.group_id
		     and avd.hos_id = av.hos_id
		     and avd.copy_code = av.copy_code
		     and avd.acc_year = av.acc_year
		     and avd.vouch_id = av.vouch_id
		left join acc_subj abb on abb.group_id = avd.group_id
			 and abb.hos_id = avd.hos_id
			 and abb.copy_code = avd.copy_code
			 and abb.acc_year = avd.acc_year
			 and abb.subj_code = avd.subj_code
		left join acc_vouch_source avs on av.group_id = avs.group_id
		     and av.hos_id = avs.hos_id
		     and av.copy_code = avs.copy_code
		     and av.acc_year = avs.acc_year
		     and av.vouch_id = avs.vouch_id
		left join acc_vouch_type  avf on avf.group_id = av.group_id
			 and avf.hos_id = av.hos_id 
			 and avf.copy_code = av.copy_code 
			 and avf.vouch_type_code=av.vouch_type_code
		left join acc_subj au on au.group_id = abl.group_id
			 and au.hos_id = abl.hos_id
		     and au.copy_code = abl.copy_code
		     and au.acc_year = abl.acc_year
		     and au.subj_code = abl.subj_code_hz
		left join acc_subj ass on ass.group_id = abl.group_id
			 and ass.hos_id = abl.hos_id
		     and ass.copy_code = abl.copy_code
		     and ass.acc_year = abl.acc_year
		     and ass.subj_code = abl.subj_code_gl
		where avs.busi_code = '001'
			 and abl.group_id = #{group_id,jdbcType=INTEGER}
			 and abl.hos_id = #{hos_id,jdbcType=INTEGER}
			 and abl.copy_code = #{copy_code,jdbcType=VARCHAR}
			 and abl.acc_year = #{acc_year,jdbcType=VARCHAR}
			 and abl.acc_month = #{acc_month,jdbcType=VARCHAR}
			 and abb.subj_code in (#{subj_code})
	</select>
	
	<select id="queryAccBudgLeder" parameterType="java.util.Map" resultMap="accBudgLeder">
		SELECT
			range_id,
			group_id,
			hos_id,
			copy_code,
			acc_year,
			acc_month,
			subj_code_hz,
			subj_code_gl,
			range_pro,
			range_type
		FROM ACC_BUDG_LEDER
		<where>
			<if test="range_id != null and range_id != ''">
				AND range_id = #{range_id,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND acc_year = #{acc_year,jdbcType=VARCHAR}
			</if>
			<if test="acc_month != null and acc_month != ''">
				AND acc_month = #{acc_month,jdbcType=VARCHAR}
			</if>
			<if test="subj_code_hz != null and subj_code_hz != ''">
				AND subj_code_hz = #{subj_code_hz,jdbcType=VARCHAR}
			</if>
			<if test="subj_code_gl != null and subj_code_gl != ''">
				AND subj_code_gl = #{subj_code_gl,jdbcType=VARCHAR}
			</if>
			<if test="range_pro != null and range_pro != ''">
				AND range_pro = #{range_pro,jdbcType=FLOAT}
			</if>
			<if test="range_type != null and range_type != ''">
				AND range_type = #{range_type,jdbcType=INTEGER}
			</if>
		</where>
		order by range_id asc
	</select>
	
	<!-- 查看当前会计期间是否结账 -->
	<select id="queryAccMonthIsAcc" parameterType="java.util.Map" resultType="java.lang.Integer">
		select nvl(ACC_FLAG,0)  
		from acc_year_month
		where group_id = #{group_id,jdbcType=INTEGER}
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and copy_code = #{copy_code,jdbcType=VARCHAR}
			and acc_year = #{acc_year,jdbcType=VARCHAR}
			and acc_month = #{acc_month,jdbcType=VARCHAR}
	</select>
	
	<!-- 查看应收科目的科目余额 -->
	<select id="queryRecevieSubjEndOs" parameterType="java.util.Map" resultType="java.lang.Double">
		select nvl(SUM(nvl(end_os, 0)),0)  from ACC_LEDER al
		left join acc_subj au 
			on al.group_id = au.group_id
			and al.hos_id = au.hos_id
			and al.copy_code = au.copy_code
			and al.acc_year = au.acc_year 
			and al.subj_code = au.subj_code
		left join ACC_TERMEND_TEMPLATE_DETAIL attd 
			on au.group_id = attd.group_id
			and au.hos_id = attd.hos_id
			and au.copy_code = attd.copy_code
			and au.subj_code = attd.subj_code
		where al.group_id = #{group_id,jdbcType=INTEGER}
			and al.hos_id = #{hos_id,jdbcType=INTEGER}
			and al.copy_code = #{copy_code,jdbcType=VARCHAR}
			and al.acc_year = #{acc_year,jdbcType=VARCHAR}
			and al.acc_month = #{acc_month,jdbcType=VARCHAR}
			and attd.template_id = #{template_id,jdbcType=INTEGER}
			
	</select>
	
	<!--查看当前期间应收科目是否计提过坏账  -->
	<select id="queryRecevieSubjJtIsOrNot" parameterType="java.util.Map" resultType="java.lang.Integer" >
		select count(*) 
		from acc_budg_subj a
		left join acc_subj b 
			on a.group_id = b.group_id
			and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code
			and a.acc_year = b.acc_year
			and a.subj_code = b.subj_code 
		left join ACC_TERMEND_TEMPLATE_DETAIL attd 
			on b.group_id = attd.group_id
			and b.hos_id = attd.hos_id
			and b.copy_code = attd.copy_code
			and b.subj_code = attd.subj_code
		where a.group_id = #{group_id,jdbcType=INTEGER}
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			and a.copy_code = #{copy_code,jdbcType=VARCHAR}
			and a.acc_year = #{acc_year,jdbcType=VARCHAR}
			and a.acc_month = #{acc_month,jdbcType=VARCHAR}
			and attd.template_id = #{template_id,jdbcType=INTEGER} 
	</select>
	
	<!-- 检查所有应收科目所在凭证是否记账  -->
	<select id="queryRecevieSubjIsAcc" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*) from acc_vouch av 
		left join acc_vouch_detail avc on avc.group_id = av.group_id 
			and avc.hos_id = av.hos_id
			and avc.copy_code = av.copy_code
			and avc.acc_year = av.acc_year
			and avc.vouch_id = av.vouch_id
		left join acc_subj d on d.group_id = avc.group_id
			and d.hos_id = avc.hos_id
			and d.copy_code = avc.copy_code
			and d.acc_year = avc.acc_year
			and d.subj_code = avc.subj_code
		left join ACC_TERMEND_TEMPLATE_DETAIL attd 
			on d.group_id = attd.group_id
			and d.hos_id = attd.hos_id
			and d.copy_code = attd.copy_code
			and d.subj_code = attd.subj_code 
		where av.hos_id = #{hos_id,jdbcType=INTEGER}
			and av.group_id = #{group_id,jdbcType=INTEGER}
			and av.copy_code = #{copy_code,jdbcType=VARCHAR}
			and av.acc_year = #{acc_year,jdbcType=VARCHAR}
			and av.acc_month = #{acc_month,jdbcType=VARCHAR}
			and attd.template_id = #{template_id,jdbcType=INTEGER}
			and av.state != 99
			and av.state != -1 
			<!-- 状态不是记账  并且不是草稿状态！ -->
	</select>
	
	<!-- 坏账计提 查看费用科目下面是否挂有辅助核算  -->
	<select id="queryCreditSubjIdIsCheck" parameterType="java.util.Map" resultType="java.lang.Integer">
		select a.is_check from acc_subj a
		left join acc_termend_template b 
		      on a.group_id = b.group_id
		      and a.hos_id = b.hos_id
		      and a.copy_code = b.copy_code
		      and a.subj_code = b.credit_subj_code1
		where a.group_id = #{group_id,jdbcType=INTEGER}
		      and a.hos_id = #{hos_id,jdbcType=INTEGER}
		      and a.copy_code = #{copy_code,jdbcType=VARCHAR}
		      and a.acc_year = #{acc_year,jdbcType=VARCHAR}
		      and b.template_id = #{template_id,jdbcType=INTEGER}
	</select>
	<!-- 查看模板 -->
	<select id="queryAccTermendTemplate" parameterType="java.util.Map" resultMap="accTermendTemplate">
		select 
		  att.group_id,
	      att.hos_id,
	      att.copy_code,
	      att.acc_year,
	      att.template_id,
	      att.template_name,
	      att.template_type_code,
	      att.vouch_type_code,
	      att.rate,
	      att.summary,
	      a1.subj_code as debit_subj_code1,
	      a1.subj_name as debit_subj_name1,
	      a1.subj_dire as debit_subj_dire1,
	      a1.subj_nature_code as debit_subj_nature_code1,
	      a1.subj_type_code as debit_subj_type_code1,
	      a1.is_cash as debit_is_cash1,
	      a1.is_check as debit_is_check1,
	      a3.subj_code as credit_subj_code1,
	      a3.subj_name as credit_subj_name1,
	      a3.subj_dire as credit_subj_dire1,
	      a3.subj_nature_code as credit_subj_nature_code1,
	      a3.subj_type_code as credit_subj_type_code1,
	      a3.is_cash as credit_is_cash1,
	      a3.is_check as credit_is_check1
		from ACC_TERMEND_TEMPLATE att
		left join acc_subj a1 on att.group_id = a1.group_id
			and att.hos_id = a1.hos_id
			and att.copy_code = a1.copy_code
			and att.debit_subj_code1 = a1.subj_code and att.acc_year=a1.acc_year
		left join acc_subj a3 on att.group_id = a3.group_id
			and att.hos_id = a3.hos_id
			and att.copy_code = a3.copy_code
			and att.credit_subj_code1 = a3.subj_code and att.acc_year=a3.acc_year
		<where>
			<if test="group_id != null and group_id != ''">
				and att.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and att.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				and att.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="template_id != null and template_id != ''">
				and att.template_id = #{template_id,jdbcType=INTEGER}
			</if>
		</where>	
	</select>
	
	<!-- 查看坏账科目的期末余额 -->
	<select id="queryBadSubjEndOs" parameterType="java.util.Map" resultType="java.lang.Double">
		select nvl(SUM(nvl(end_os, 0)),0)  from ACC_LEDER al
		left join acc_subj au 
			on al.group_id = au.group_id
			and al.hos_id = au.hos_id
			and al.copy_code = au.copy_code
			and al.acc_year = au.acc_year 
			and al.subj_code = au.subj_code 
		where al.group_id = #{group_id,jdbcType=INTEGER}
			and al.hos_id = #{hos_id,jdbcType=INTEGER}
			and al.copy_code = #{copy_code,jdbcType=VARCHAR}
			and al.acc_year = #{acc_year,jdbcType=VARCHAR}
			and al.acc_month = #{acc_month,jdbcType=VARCHAR}
			and au.subj_code = #{badSubjId,jdbcType=VARCHAR}
			
	</select>
	
	<!-- 坏账计提   生成凭证 -->
	<select id="queryAccBadDebtsExtractAdd" statementType="CALLABLE" parameterType="java.util.Map" >
		<![CDATA[
		{call prc_acount_badDebtsExtract(
	     		#{group_id,jdbcType=INTEGER}, 	     		
				#{hos_id,jdbcType=INTEGER}, 
				#{copy_code,jdbcType=VARCHAR}, 
				#{user_id,jdbcType=INTEGER}, 
				#{acc_years,jdbcType=VARCHAR},
				#{subj_code,jdbcType=VARCHAR}, 
				#{acc_year,jdbcType=VARCHAR},
				#{acc_month,jdbcType=VARCHAR},
				#{bad_subj_code,jdbcType=VARCHAR},
				#{fy_subj_code,jdbcType=VARCHAR},
				#{range_type,jdbcType=INTEGER},
				#{fix_rate,jdbcType=FLOAT},
				#{vouch_id,jdbcType=INTEGER},
				#{vouch_no,jdbcType=VARCHAR},
				#{reNote,mode=OUT,jdbcType=VARCHAR}
		)}
		]]>
   </select>
   
	<!-- 计提坏账  撤销计提  -->
	<select id="delBadDebtsCancel" statementType="CALLABLE" parameterType="java.util.Map" resultType="String">
		<![CDATA[
			{call prc_acount_DelDebtsExtract(
				#{group_id,jdbcType=INTEGER}, 
				#{hos_id,jdbcType=INTEGER}, 
				#{copy_code,jdbcType=VARCHAR}, 
				#{subj_code,jdbcType=VARCHAR}, 
				#{acc_year,jdbcType=VARCHAR},
				#{acc_month,jdbcType=VARCHAR},
				#{vouch_id,jdbcType=INTEGER}
				)
			}
		]]>
	</select>
	
	<!-- 账龄分析法组装数据 -->
	<select id="queryAccSubjCodeRate" parameterType="java.util.Map" resultType="java.util.Map" >
		with date_tmp as(
			select avc.group_id,
				avc.hos_id,
				avc.copy_code,
				avc.acc_year,
				hs.subj_code,
				nvl(avv.veri_money,0)-nvl(avc.debit,0)-nvl(avc.credit,0) as bal_amt, 
				avc.due_date
			from acc_vouch_check avc
			left join (
	            select check_id,group_id,hos_id,copy_code,acc_year,sum(veri_money) as veri_money from (
	            	select credit_check_id as check_id,group_id,hos_id,copy_code,acc_year,nvl(veri_money,0) veri_money  
	           		from acc_vouch_veri 
	                where  nvl(credit_check_id,0) != 0 
	                union
	                select debit_check_id as check_id, group_id,hos_id,copy_code,acc_year,nvl(veri_money,0) veri_money 
	                from acc_vouch_veri 
	                where nvl(debit_check_id,0) != 0 
	            ) aa  group by check_id,group_id,hos_id,copy_code,acc_year
	        ) avv on avv.group_id = avc.group_id 
	        	and avv.hos_id = avc.hos_id 
	        	and avv.copy_code = avc.copy_code 
	       		and avv.acc_year = avc.acc_year 
	       		and avv.check_id = avc.vouch_check_id
	        left join acc_subj hs on hs.group_id = avc.group_id 
	        	and hs.hos_id = avc.hos_id 
	        	and hs.copy_code = avc.copy_code 
	            and hs.acc_year = avc.acc_year 
	            and hs.subj_code=avc.subj_code
	            and hs.is_stop=0
	        left join acc_vouch_detail avd on avd.group_id = avc.group_id 
	        	and avd.hos_id = avc.hos_id
	            and avd.copy_code = avc.copy_code 
	            and avd.acc_year = avc.acc_year 
	            and avd.vouch_id=avc.vouch_id 
	            and avd.subj_code=hs.subj_code
	        left join acc_vouch av on av.group_id=avd.group_id 
	        	and av.hos_id=avd.hos_id 
	        	and av.copy_code=avd.copy_code
	            and av.acc_year=avd.acc_year 
	            and av.vouch_id=avd.vouch_id 
	        left join ACC_TERMEND_TEMPLATE_DETAIL attd 
				 on hs.group_id = attd.group_id
				and hs.hos_id = attd.hos_id
				and hs.copy_code = attd.copy_code
				and hs.subj_code = attd.subj_code
	       	<where>
	       		<if test="group_id != null and group_id != ''">
					and avc.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
					and avc.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
				<if test="copy_code != null and copy_code != ''">
					and avc.copy_code = #{copy_code,jdbcType=VARCHAR}
				</if>
				<if test="acc_year != null and acc_year != ''">
					and avc.acc_year = #{acc_year,jdbcType=VARCHAR}
				</if>
				and attd.template_id = #{template_id,jdbcType=INTEGER}
				and (nvl(avv.veri_money,0)-nvl(avc.debit,0)-nvl(avc.credit,0)>0)
	       	</where>
	       	order by hs.subj_code
		),diff_tmp as (
			select date_tmp.group_id,
				date_tmp.hos_id,
				date_tmp.copy_code,
				date_tmp.acc_year,
				date_tmp.subj_code,
				date_tmp.bal_amt,
				date_tmp.due_date,
			 	case when date_tmp.due_date is not null then (to_date(date_tmp.due_date,'yyyy-MM-dd')-#{sysDate})
           		else 0 end as diff_date
			from date_tmp date_tmp
         	order by date_tmp.subj_code
		)
		select d_tmp.group_id,
			d_tmp.hos_id ,
			d_tmp.copy_code,
			d_tmp.acc_year,
			d_tmp.subj_code,
			d_tmp.bal_amt,
           	d_tmp.due_date,
           	d_tmp.diff_date,
           	abr.range_pro
    	from  diff_tmp d_tmp
    	left join acc_budg_range abr on d_tmp.group_id = abr.group_id
      		and d_tmp.hos_id = abr.hos_id
      		and d_tmp.copy_code = abr.copy_code 
    	where d_tmp.diff_date between abr.begin_days and abr.end_days
    	order by d_tmp.subj_code
	</select>
	
	<!-- 部门辅助核算挂在哪个辅助核算项下 -->
	<select id="querySubjCheckColumnBySubjId" parameterType="java.util.Map" resultType="java.util.Map" >
		select * from (	
			select b.check_table, b.is_sys, b.column_id, b.column_no, b.column_code, b.column_name, b.is_change, b.column_check
			from acc_subj a
			left join acc_check_type b
				on a.group_id = b.group_id and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code and a.check1 = b.check_type_id
			where a.group_id = #{group_id,jdbcType=INTEGER} 
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				and a.subj_code = #{subj_code,jdbcType=VARCHAR}
				and a.acc_year = #{acc_year,jdbcType=VARCHAR}
				and a.is_stop = 0 
			union all
			select b.check_table, b.is_sys, b.column_id, b.column_no, b.column_code, b.column_name, b.is_change, b.column_check
			from acc_subj a
			left join acc_check_type b
				on a.group_id = b.group_id and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code and a.check2 = b.check_type_id
			where a.group_id = #{group_id,jdbcType=INTEGER} 
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				and a.subj_code = #{subj_code,jdbcType=VARCHAR}
				and a.acc_year = #{acc_year,jdbcType=VARCHAR}
				and a.is_stop = 0 
			union all
			select b.check_table, b.is_sys, b.column_id, b.column_no, b.column_code, b.column_name, b.is_change, b.column_check
			from acc_subj a
			left join acc_check_type b
				on a.group_id = b.group_id and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code and a.check3 = b.check_type_id
			where a.group_id = #{group_id,jdbcType=INTEGER} 
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				and a.subj_code = #{subj_code,jdbcType=VARCHAR}
				and a.acc_year = #{acc_year,jdbcType=VARCHAR}
				and a.is_stop = 0 
			union all
			select b.check_table, b.is_sys, b.column_id, b.column_no, b.column_code, b.column_name, b.is_change, b.column_check
			from acc_subj a
			left join acc_check_type b
				on a.group_id = b.group_id and a.hos_id = b.hos_id
				and a.copy_code = b.copy_code and a.check4 = b.check_type_id
			where a.group_id = #{group_id,jdbcType=INTEGER} 
				and a.hos_id = #{hos_id,jdbcType=INTEGER}
				and a.copy_code = #{copy_code,jdbcType=VARCHAR}
				and a.subj_code = #{subj_code,jdbcType=VARCHAR}
				and a.acc_year = #{acc_year,jdbcType=VARCHAR}
				and a.is_stop = 0 
		) tmp
		where check_table ='HOS_DEPT_DICT'
	
	</select>
	
	<!-- 组装生成凭证的辅助核算信息 -->
	<select id="queryAccBudgLederCheckInfo" parameterType="java.util.Map" resultType="java.util.Map" >
		with emp_tmp as (
			select group_id,hos_id,dept_id,dept_no,count(0) person_count 
			from hos_emp_dict
			<where>
	       		<if test="group_id != null and group_id != ''">
					and group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
					and hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
					and is_stop = 0
	       	</where>
	       	group by group_id,hos_id,dept_id,dept_no
		),emp_sum as(
			select group_id,hos_id,sum(person_count) all_count
			from emp_tmp
	       	group by group_id,hos_id
		),dept_tmp as(
			select dept.group_id,
				dept.hos_id,
				dept.dept_id,
				dept.dept_no,
				emp_tmp.person_count/emp_sum.all_count as dept_rate
			from hos_dept_dict dept
			left join emp_tmp emp_tmp on dept.group_id = emp_tmp.group_id
				and dept.hos_id = emp_tmp.hos_id
				and dept.dept_id = emp_tmp.dept_id
				and dept.dept_no = emp_tmp.dept_no
			left join emp_sum emp_sum on dept.group_id = emp_sum.group_id
				and dept.hos_id = emp_sum.hos_id
			<where>
				<if test="group_id != null and group_id != ''">
					and dept.group_id = #{group_id,jdbcType=INTEGER}
				</if>
				<if test="hos_id != null and hos_id != ''">
					and dept.hos_id = #{hos_id,jdbcType=INTEGER}
				</if>
					and dept.is_stop = 0
					and dept.is_last = 1
					<![CDATA[ and emp_tmp.person_count > 0 ]]> 
			</where>
		)
		<if test="dir==0">
			select a.group_id,
				a.hos_id,
				#{copy_code} as copy_code,
				#{acc_year} as acc_year,
				#{summary} as summary,
				#{subj_code} as subj_code,
				#{end_os}*nvl(a.dept_rate,0) as debit,
				0 as credit, 
				a.dept_id as dept_id,
				a.dept_no as dept_no,
				b.dept_code as dept_code,
				b.dept_name	as dept_name,
				#{end_os}*nvl(a.dept_rate,0) as money
			from dept_tmp a
			left join hos_dept_dict b on a.group_id = b.group_id	
				and a.hos_id = b.hos_id
				and a.dept_id = b.dept_id
				and a.dept_no = b.dept_no
			<where>
				<![CDATA[ nvl(a.dept_rate,0) > 0 ]]> 
			</where>
			order by a.dept_id,a.dept_no
		</if>
		<if test="dir==1">
			select a.group_id,
				a.hos_id,
				#{copy_code} as copy_code,
				#{acc_year} as acc_year,
				#{summary} as summary,
				#{subj_code} as subj_code,
				#{end_os}*nvl(a.dept_rate,0) as credit,
				0 as debit, 
				a.dept_id as dept_id,
				a.dept_no as dept_no,
				#{end_os}*nvl(a.dept_rate,0) as money	
			from dept_tmp a
			left join hos_dept_dict b on a.group_id = b.group_id	
				and a.hos_id = b.hos_id
				and a.dept_id = b.dept_id
				and a.dept_no = b.dept_no 
			<where>
				<![CDATA[ nvl(a.dept_rate,0) > 0 ]]> 
			</where>
			order by a.dept_id,a.dept_no
		</if>
	</select>
	
	<!-- 获取科目期末余额 -->
	<select id="queryEndMoneyBySubj" parameterType="java.util.Map" resultType="java.lang.Double"> 
		SELECT end_os
		FROM acc_leder
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND acc_year = #{acc_year,jdbcType=VARCHAR}
			AND acc_month = #{acc_month,jdbcType=VARCHAR}
			AND subj_code = #{subj_code,jdbcType=INTEGER}
	</select>
	
	<!-- 获取明细收入科目期末余额合计 -->
	<select id="queryEndMoneyByDetailSubj" parameterType="java.util.Map" resultType="java.lang.Double"> 
		SELECT sum(end_os)
		FROM acc_leder 
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND acc_year = #{acc_year,jdbcType=VARCHAR}
			AND acc_month = #{acc_month,jdbcType=VARCHAR}
			AND subj_code in (
				SELECT subj_code 
				FROM acc_termend_template_detail
				WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND acc_year = #{acc_year,jdbcType=VARCHAR}
					AND template_id = #{template_id,jdbcType=INTEGER}
			)
	</select>
	
	<!-- 获取账龄区间 -->
	<select id="queryAccBudgRangeList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT begin_days, end_days, range_pro
		FROM acc_budg_range
		WHERE group_id = #{group_id,jdbcType=INTEGER} 
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
	</select>
	
	<!-- 获取应收科目辅助核算期末余额及个辅助核算的最大到期日期 -->
	<select id="queryCheckEndMoneyByDetailSubj" parameterType="java.util.Map" resultType="java.util.Map"> 
		SELECT a.due_date, case c.subj_dire when 0 then sum(a.debit - a.credit) when 1 then sum(a.credit - a.debit)) end_os
		FROM acc_vouch_check a 
		LEFT JOIN acc_vouch b 
			ON a.group_id = b.group_id 
			AND a.hos_id = b.hos_id 
			AND a.copy_code = b.copy_code 
			AND a.vouch_id = b.vouch_id 
		LEFT JOIN acc_subj c 
			ON a.group_id = c.group_id 
			AND a.hos_id = c.hos_id 
			AND a.copy_code = c.copy_code 
			AND a.acc_year = c.acc_year 
			AND a.subj_code = c.subj_code 
		WHERE a.group_id = #{group_id,jdbcType=INTEGER} 
			AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			AND a.copy_code = #{copy_code,jdbcType=VARCHAR}
			AND a.acc_year = #{acc_year,jdbcType=VARCHAR}
			AND b.vouch_date &lt;= #{vouch_date,jdbcType=DATE}
			AND a.due_date &lt; #{vouch_date,jdbcType=DATE}
			AND a.subj_code in (
				SELECT subj_code 
				FROM acc_termend_template_detail
				WHERE group_id = #{group_id,jdbcType=INTEGER} 
					AND hos_id = #{hos_id,jdbcType=INTEGER}
					AND copy_code = #{copy_code,jdbcType=VARCHAR}
					AND acc_year = #{acc_year,jdbcType=VARCHAR}
					AND template_id = #{template_id,jdbcType=INTEGER}
			)
		GROUP BY a.due_date
	</select>
</mapper>

