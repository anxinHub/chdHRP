<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.paper.AccPaperMainMapper">

	<resultMap id="accPaperMainMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="pid" column="pid" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="user_id" column="user_id" />
		<result property="user_name" column="user_name" />
		<result property="opt_date" column="opt_date" />
		<result property="begin_num" column="begin_num" />
		<result property="end_num" column="end_num" />
		<result property="amount" column="amount" />
		<result property="amoney" column="amoney" />
		<result property="state" column="state" />
		<result property="note" column="note" />
	</resultMap>
	
	<select id="queryAccPaperMainSeq"  resultType="java.lang.Integer">
		SELECT ACC_PAPER_MAIN_SEQ.nextval as pid FROM DUAL
	</select>
	
	<select id="queryAccPaperMainPid" resultType="java.lang.Integer">
		select nvl(max(pid),0) pid from acc_paper_main 
		 where group_id = #{group_id,jdbcType=INTEGER}
		 and hos_id = #{hos_id,jdbcType=INTEGER}
		 and copy_code = #{copy_code,jdbcType=INTEGER}
	</select>
	
	<insert id="addAccPaperMain" useGeneratedKeys="true">
         insert into 
         acc_paper_main (
         group_id,
         hos_id, 
         copy_code,
         pid, 
         type_code, 
         dept_id, 
         dept_no,
         user_id, 
         opt_date,
         begin_num, 
         end_num, 
         amount,
         amoney, 
         state, 
         note
         )values(
         #{group_id,jdbcType=INTEGER},
         #{hos_id,jdbcType=INTEGER},
         #{copy_code,jdbcType=VARCHAR},
         #{pid,jdbcType=INTEGER},
         #{type_code,jdbcType=VARCHAR},
         #{dept_id,jdbcType=INTEGER},
         #{dept_no,jdbcType=INTEGER},
         #{user_id,jdbcType=INTEGER},
         to_date(#{opt_date,jdbcType=DATE},'yyyy/MM/dd'),
         #{begin_num,jdbcType=INTEGER},
         #{end_num,jdbcType=INTEGER},
         #{amount,jdbcType=INTEGER},
         #{amoney,jdbcType=INTEGER},
         #{state,jdbcType=INTEGER},
         #{note,jdbcType=VARCHAR}
         )
	</insert>

	<insert id="addBatchAccPaperMain" parameterType="java.util.List">
          insert into 
         acc_paper_main (
         group_id,
         hos_id, 
         copy_code,
         pid, 
         type_code, 
         dept_id, 
         dept_no,
         user_id, 
         opt_date,
         begin_num, 
         end_num, 
         amount,
         amoney, 
         state, 
         note
         )
         <foreach collection="list" item="item" index="index" separator="union all" >
	  select 
	     #{item.group_id,jdbcType=INTEGER},
         #{item.hos_id,jdbcType=INTEGER},
         #{item.copy_code,jdbcType=VARCHAR},
         #{item.pid,jdbcType=INTEGER},
         #{item.type_code,jdbcType=VARCHAR},
         #{item.dept_id,jdbcType=INTEGER},
         #{item.dept_no,jdbcType=INTEGER},
         #{item.user_id,jdbcType=INTEGER},
         to_date(#{item.opt_date,jdbcType=DATE},'yyyy/MM/dd'),
         #{item.begin_num,jdbcType=INTEGER},
         #{item.end_num,jdbcType=INTEGER},
         #{item.amount,jdbcType=INTEGER},
         #{item.amoney,jdbcType=INTEGER},
         #{item.state,jdbcType=INTEGER},
         #{item.note,jdbcType=VARCHAR},
	  		from dual
		</foreach>

	</insert>

	<update id="updateAccPaperMain" parameterType="java.util.Map">

	   update acc_paper_main  set
       type_code =  #{type_code,jdbcType=VARCHAR},
       dept_id =   #{dept_id,jdbcType=VARCHAR},
       dept_no =   #{dept_no,jdbcType=VARCHAR},
       user_id =   #{user_id,jdbcType=VARCHAR},
       opt_date =  to_date(#{opt_date,jdbcType=DATE},'yyyy/MM/dd'),
       begin_num =   #{begin_num,jdbcType=VARCHAR},
       end_num =   #{end_num,jdbcType=VARCHAR},
       amount =   #{amount,jdbcType=VARCHAR},
       amoney =   #{amoney,jdbcType=VARCHAR},
       state =   #{state,jdbcType=VARCHAR},
       note =   #{note,jdbcType=VARCHAR}
       where 
       group_id =#{group_id,jdbcType=INTEGER}
       and hos_id =  #{hos_id,jdbcType=INTEGER}
       and copy_code = #{copy_code,jdbcType=VARCHAR}
       and pid =#{pid,jdbcType=INTEGER}



	</update>

	<delete id="deleteBatchAccPaperMain" parameterType="java.util.List">
		 delete acc_paper_main 
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				   group_id =#{item.group_id,jdbcType=INTEGER}
                   and hos_id =  #{item.hos_id,jdbcType=INTEGER}
                   and copy_code = #{item.copy_code,jdbcType=VARCHAR}
                   and pid =#{item.pid,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>

	<select id="queryAccPaperMain" parameterType="java.util.Map"
		resultMap="accPaperMainMap">
		SELECT
		    apm.group_id, apm.hos_id, apm.copy_code, apm.pid, apm.type_code,apt.type_name,
	        apm.dept_id, apm.dept_no,hdd.dept_code,hdd.dept_name, apm.user_id,su.user_name, 
	        to_char(apm.opt_date,'yyyy-mm-dd') opt_date,apm.begin_num,apm.end_num, apm.amount, apm.amoney, apm.state, apm.note
			FROM acc_paper_main apm
			left join acc_paper_type apt
			on apm.group_id = apt.group_id
			and apm.hos_id = apt.hos_id
			and apm.copy_code = apt.copy_code
			and apm.type_code = apt.type_code
			left join hos_dept_dict hdd 
			on hdd.group_id = apm.group_id
			and hdd.hos_id = apm.hos_id
			and hdd.dept_id = apm.dept_id
			and hdd.dept_no = apm.dept_no
			left join sys_user su
			on su.group_id = apm.group_id
			and su.hos_id = apm.hos_id
			and su.user_id = apm.user_id
            <where>
			<if test="group_id != null and group_id != ''">
				AND apm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND apm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND apm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="opt_date != null and opt_date != ''">
				AND apm.opt_date = to_date(#{opt_date,jdbcType=DATE},'yyyy/MM/dd')
			</if>
			<if test="begin_date != null and begin_date != '' and end_date != null and end_date != ''">
				AND apm.opt_date between  to_date(#{begin_date},'yyyy/MM/dd') and to_date(#{end_date},'yyyy/MM/dd')
			</if>
			<if test="type_code != null and type_code != ''">
				AND apm.type_code = #{type_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND apm.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND apm.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="begin_end != null and begin_end != ''">
				and (#{begin_num,jdbcType=INTEGER} between apm.begin_num and apm.end_num
				      or
				     #{end_num,jdbcType=INTEGER} between apm.begin_num and apm.end_num
				    )
			</if>
		</where>
		order by apm.pid
	</select>
	<select id="queryAccPaperMainByCode" parameterType="java.util.Map"
		resultMap="accPaperMainMap">
		SELECT
		    apm.group_id, apm.hos_id, apm.copy_code, apm.pid, apm.type_code,apt.type_name,
	        apm.dept_id, apm.dept_no,hdd.dept_code,hdd.dept_name, apm.user_id,su.user_name,su.user_name, 
	        apm.opt_date,apm.begin_num,apm.end_num, apm.amount, apm.amoney, apm.state, apm.note
			FROM acc_paper_main apm
			left join acc_paper_type apt
			on apm.group_id = apt.group_id
			and apm.hos_id = apt.hos_id
			and apm.copy_code = apt.copy_code
			and apm.type_code = apt.type_code
			left join hos_dept_dict hdd 
			on hdd.group_id = apm.group_id
			and hdd.hos_id = apm.hos_id
			and hdd.dept_id = apm.dept_id
			and hdd.dept_no = apm.dept_no
			left join sys_user su
			on su.group_id = apm.group_id
			and su.hos_id = apm.hos_id
			and su.user_id = apm.user_id
            <where>
			<if test="group_id != null and group_id != ''">
				AND apm.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND apm.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND apm.copy_code = #{copy_code,jdbcType=VARCHAR}
			</if>
			<if test="type_code != null and type_code != ''">
				AND apm.type_code = #{type_code,jdbcType=VARCHAR}
			</if>
			<if test="rownum != null and rownum != ''">
				AND  rownum = 1  
			</if>
			<if test="pid != null and pid != ''">
				AND apm.pid  = #{pid,jdbcType=INTEGER}
			</if>
		</where>
		order by apm.pid
	</select>

</mapper>

