<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccWageItemsMapper">
 
	<resultMap id="accWageItems" type="com.chd.hrp.acc.entity.AccWageItems">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="acc_year" column="acc_year"/>
        <result property="wage_code" column="wage_code"/>
        <result property="wage_name" column="wage_name"/>
        <result property="item_code" column="item_code"/>
        <result property="item_name" column="item_name"/>
        <result property="item_type" column="item_type"/>
        <result property="type_name" column="type_name"/>
        <result property="item_cal" column="item_cal"/>
        <result property="item_nature" column="item_nature"/>
        <result property="nature_name" column="nature_name"/>
        <result property="is_jc" column="is_jc"/>
        <result property="is_sum" column="is_sum"/>
        <result property="spell_code" column="spell_code"/>
        <result property="wbx_code" column="wbx_code"/>
        <result property="sort_code" column="sort_code"/>
        <result property="is_stop" column="is_stop"/>
        <result property="note" column="note"/>
        <result property="column_item" column="column_item"/>
        <result property="data_type" column="data_type"/>
	</resultMap>
	
    <insert id="addAccWageItems" useGeneratedKeys="true" >
    	<!-- <selectKey resultType="java.lang.Integer" order="BEFORE"  keyProperty="item_id">
			SELECT ACC_WAGE_ITEM_SEQ.NEXTVAL  as item_id FROM DUAL
		</selectKey> --> 
        INSERT INTO ACC_WAGE_ITEM (

                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
			 		wage_code
			 ,
                    item_code
			 ,
                    item_name
			 ,
                    item_type
			 ,
                    item_cal
			 ,
                    item_nature
			 ,
                    is_jc
			 ,
                    is_sum
			 ,
                    spell_code
			 ,
                    wbx_code
             ,
             		sort_code       
			 ,
                    is_stop
             ,
             		note
		<if test="data_type != null and data_type != ''"> 
		,data_type
		</if>		 
        ) VALUES (
        	
			#{group_id,jdbcType=NUMERIC}			 ,
			#{hos_id,jdbcType=NUMERIC}			 ,
			#{copy_code,jdbcType=VARCHAR}			 ,
			#{acc_year,jdbcType=VARCHAR}			 ,
			#{wage_code,jdbcType=VARCHAR}			 ,
			#{item_code,jdbcType=VARCHAR}			 ,
			#{item_name,jdbcType=VARCHAR}			 ,
			#{item_type,jdbcType=VARCHAR}			 ,
			#{item_cal,jdbcType=NUMERIC}			 ,
			#{item_nature,jdbcType=VARCHAR}			 ,
			#{is_jc,jdbcType=NUMERIC}			 ,
			#{is_sum,jdbcType=NUMERIC}			 ,
			#{spell_code,jdbcType=VARCHAR}			 ,
			#{wbx_code,jdbcType=VARCHAR}			 ,
			#{sort_code,jdbcType=INTEGER} ,
			#{is_stop,jdbcType=NUMERIC}	,
			#{note,jdbcType=VARCHAR}		
		<if test="data_type != null and data_type != ''"> 
		,#{data_type,jdbcType=NUMERIC}
		</if>	  
        )
    
    </insert>
	<insert id="addBatchAccWageItems" parameterType="java.util.List" >
    
        INSERT INTO ACC_WAGE_ITEM (
                    
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    acc_year
			 ,
			 		wage_code
			 ,
                    item_code
			 ,
                    item_name
			 ,
                    item_type
			 ,
                    item_cal
			 ,
                    item_nature
			 ,
                    is_jc
			 ,
                    is_sum
			 ,
                    spell_code
			 ,
                    wbx_code
             ,
             		sort_code       
			 ,
                    is_stop
             ,
             		note
             ,
             		column_item
             ,
             		data_type
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select 		

			#{item.group_id}			 ,
			#{item.hos_id}			 ,
			#{item.copy_code}			 ,
			#{item.acc_year}			 ,
			#{item.wage_code}			 ,
			#{item.item_code}			 ,
			#{item.item_name}			 ,
			#{item.item_type}			 ,
			#{item.item_cal}			 ,
			#{item.item_nature}			 ,
			#{item.is_jc}			 ,
			#{item.is_sum}			 ,
			#{item.spell_code}			 ,
			#{item.wbx_code}			 ,
			#{item.sort_code}			 ,
			#{item.is_stop}	,
			#{item.note}			 ,	
			#{item.column_item}		 ,	
			#{item.data_type}		 
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateAccWageItems" parameterType="java.util.Map">
    
        UPDATE acc_wage_item 
		<trim prefix="SET"  suffixOverrides=","> 
		<if test="group_id != null and group_id != ''"> 
		group_id = ${group_id},
		</if>
		<if test="hos_id != null and hos_id != ''"> 
		 hos_id = ${hos_id},
		</if>
		<if test="copy_code != null and copy_code != ''"> 
		 copy_code = #{copy_code},
		</if>
		<if test="acc_year != null and acc_year != ''"> 
		 acc_year = #{acc_year},
		</if>
		<if test="wage_code != null and wage_code != ''"> 
		wage_code = #{wage_code},
		</if>
      		<if test="item_name != null and item_name != ''"> 
		item_name = #{item_name},
		</if>
      		<if test="item_type != null and item_type != ''"> 
		item_type = #{item_type},
		</if>
      		<if test="item_cal != null and item_cal != ''"> 
		item_cal = ${item_cal},
		</if>
       	<if test="item_nature != null and item_nature != ''"> 
		item_nature = #{item_nature},
		</if>
       	<if test="is_jc != null and is_jc != ''"> 
		is_jc = ${is_jc},
		</if>
       	<if test="is_sum != null and is_sum != ''"> 
		is_sum = ${is_sum},
		</if>
       	<if test="spell_code != null and spell_code != ''"> 
		spell_code = #{spell_code},
		</if>
       	<if test="wbx_code != null and wbx_code != ''"> 
		 wbx_code = #{wbx_code},
		</if>
       	<if test="is_sum != null and is_sum != ''"> 
		sort_code = ${sort_code},
		</if>
       	<if test="is_stop != null and is_stop != ''"> 
		is_stop = ${is_stop},
		</if>
      		<if test="note != null and note != ''"> 
		note = #{note},
		</if>
      	<if test="column_item != null and column_item != ''"> 
		column_item = #{column_item}
		</if>
		<if test="data_type != null and data_type != ''"> 
		data_type = #{data_type}
		</if>
		</trim>
			 
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
			  and 
		 acc_year = #{acc_year}
			  and 
		 item_code = #{item_code}
		 	 and 
		 wage_code = #{wage_code}
			 
   
	</update>
	<update id="updateBatchAccWageItems" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE acc_wage_item SET
			 wage_code = #{item.wage_code}
			 ,
			 item_name = #{item.item_name}
			 ,
			 item_type = #{item.item_type}
			 ,
			 item_cal = #{item.item_cal}
			 ,
			 item_nature = #{item.item_nature}
			 ,
			 is_jc = #{item.is_jc}
			 ,
			 is_sum = #{item.is_sum}
			 ,
			 spell_code = #{item.spell_code}
			 ,
			 wbx_code = #{item.wbx_code}
			 ,
			 sort_code = #{item.sort_code}
			 ,
			 is_stop = #{item.is_stop}
			 ,
			 note = #{item.note}
			 ,
			 column_item = #{item.column_item}
			  ,
			 data_type = #{item.data_type}
			 
        WHERE 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			  and 
		 acc_year = #{item.acc_year}
			  and 
		 item_code = #{item.item_code}
		 	  
			 
    </foreach>
	</update>

    <delete id="deleteAccWageItem" parameterType="java.util.Map">
   
        DELETE FROM acc_wage_items WHERE
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code}   and 
	        acc_year = #{acc_year}  
    </delete>
    <delete id="deleteBatchAccWageItems" parameterType="java.util.List">
        DELETE FROM acc_wage_item WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			  and 
		 acc_year = #{item.acc_year}
		 	and 
		 wage_code = #{item.wage_code}
		 	and 
		 item_code = #{item.item_code}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccWageItemsByCode" resultType="com.chd.hrp.acc.entity.AccWageItems" parameterType="string" >
	  
        SELECT 
            awi.group_id,
            awi.hos_id,
            awi.copy_code,
            awi.acc_year,
            awi.item_code,
            awi.item_name,
            awi.wage_code,
            aw.wage_name,
            awi.item_type,
            awi.item_cal,
            awi.item_nature,
            awi.is_jc,
            awi.is_sum,
            awi.spell_code,
            awi.wbx_code,
            awi.sort_code,
            awi.is_stop,
            awi.note,
            awi.column_item
		FROM acc_wage_item awi left join
		acc_wage aw on awi.group_id = aw.group_id
		and awi.hos_id = aw.hos_id and awi.copy_code=aw.copy_code
		and awi.wage_code=aw.wage_code
	        WHERE 
		        awi.group_id = #{group_id}   and 
		        awi.hos_id = #{hos_id}   and 
		        awi.copy_code = #{copy_code}   and 
		        awi.acc_year = #{acc_year}   and 
		        awi.item_code = #{item_code} and 
		        awi.wage_code = #{wage_code} 
        
	</select>
	<select id="queryAccWageItems" parameterType="java.util.Map" resultMap="accWageItems" >
		SELECT awi.group_id, awi.hos_id, awi.copy_code, awi.acc_year, awi.wage_code, awi.item_code, 
			awi.item_name, awi.item_type,awit.type_name, awi.item_cal, awi.item_nature, awin.nature_name, 
			awi.is_jc, awi.is_sum, awi.spell_code, awi.wbx_code, awi.sort_code, awi.is_stop, awi.note, 
			awi.column_item,awi.data_type
		FROM ACC_WAGE_ITEM awi 
		left join acc_wage_item_nature awin 
			   on awi.group_id = awin.group_id 
			  and awi.hos_id = awin.hos_id
	          and awi.copy_code = awin.copy_code 
	          and awi.item_nature = awin.nature_code 
		left join acc_wage_item_type awit
			   on awi.group_id = awit.group_id 
			  and awi.hos_id = awit.hos_id
	          and awi.copy_code = awit.copy_code 
	          and awi.item_type = awit.type_code
            <where>
            	<if test="scheme_id != null and scheme_id != ''">
            	  awi.column_item not in (select awsi.column_item from acc_wage_scheme_item  awsi 
            	  where  awsi.scheme_id =#{scheme_id})
            	</if>                     
			    <if test="group_id != null and group_id != ''">
                    AND awi.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awi.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awi.copy_code = #{copy_code}
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND awi.acc_year = #{acc_year}
               </if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awi.wage_code = #{wage_code}
               </if>
                <if test="item_code != null and item_code != ''">
                    AND (awi.item_code like '%${item_code}%'
                    or  awi.item_name  like '%${ item_code}%'
                    or  awi.spell_code like '%${ item_code}%'
                    or  awi.wbx_code like '%${ item_code}%')
               </if>
			    <if test="item_name != null and item_name != ''">
                    AND awi.item_name  like '%${ item_name}%'
               </if>
			    <if test="item_type != null and item_type != ''">
                    AND awi.item_type = #{item_type}
               </if>
			    <if test="item_cal != null and item_cal != ''">
                    AND awi.item_cal = #{item_cal}
               </if>
			    <if test="item_nature != null and item_nature != ''">
                    AND awi.item_nature = #{item_nature}
               </if>
			    <if test="is_jc != null and is_jc != ''">
                    AND awi.is_jc = #{is_jc}
               </if>
			    <if test="is_sum != null and is_sum != ''">
                    AND awi.is_sum = #{is_sum}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND awi.spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND awi.wbx_code = #{wbx_code}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND awi.is_stop = #{is_stop}
               </if>
        </where>   
				order by awi.sort_code asc
    </select>
    
    <select id="queryAccWageItemsPrint" parameterType="java.util.Map" resultType="java.util.Map">
      
        SELECT awi.group_id, awi.hos_id, awi.copy_code, awi.acc_year, awi.wage_code
	      ,awi.item_code, awi.item_name, awi.item_type,awit.type_name, awi.item_cal,
	       awi.item_nature,awin.nature_name, awi.is_jc, awi.is_sum, awi.spell_code, 
	      awi.wbx_code, awi.sort_code, awi.is_stop, awi.note, awi.column_item,awi.data_type
	      FROM ACC_WAGE_ITEM awi left join acc_wage_item_nature awin 
	      on awi.group_id = awin.group_id and awi.hos_id = awin.hos_id
	      and awi.copy_code = awin.copy_code 
	      and awi.item_nature = awin.nature_code 
	      left join acc_wage_item_type awit
	      on awi.group_id = awit.group_id and awi.hos_id = awit.hos_id
	      and awi.copy_code = awit.copy_code and awi.item_type = awit.type_code
            <where>
            	<if test="scheme_id != null and scheme_id != ''">
            	  awi.column_item not in (select awsi.column_item from acc_wage_scheme_item  awsi 
            	  where  awsi.scheme_id =#{scheme_id})
            	</if>                     
			    <if test="group_id != null and group_id != ''">
                    AND awi.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awi.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awi.copy_code = #{copy_code}
               </if>
			    <if test="acc_year != null and acc_year != ''">
                    AND awi.acc_year = #{acc_year}
               </if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awi.wage_code = #{wage_code}
               </if>
                <if test="item_code != null and item_code != ''">
                    AND (awi.item_code like '%${item_code}%'
                    or  awi.item_name  like '%${ item_code}%'
                    or  awi.spell_code like '%${ item_code}%'
                    or  awi.wbx_code like '%${ item_code}%')
               </if>
			    <if test="item_name != null and item_name != ''">
                    AND awi.item_name  like '%${ item_name}%'
               </if>
			    <if test="item_type != null and item_type != ''">
                    AND awi.item_type = #{item_type}
               </if>
			    <if test="item_cal != null and item_cal != ''">
                    AND awi.item_cal = #{item_cal}
               </if>
			    <if test="item_nature != null and item_nature != ''">
                    AND awi.item_nature = #{item_nature}
               </if>
			    <if test="is_jc != null and is_jc != ''">
                    AND awi.is_jc = #{is_jc}
               </if>
			    <if test="is_sum != null and is_sum != ''">
                    AND awi.is_sum = #{is_sum}
               </if>
			    <if test="spell_code != null and spell_code != ''">
                    AND awi.spell_code = #{spell_code}
               </if>
			    <if test="wbx_code != null and wbx_code != ''">
                    AND awi.wbx_code = #{wbx_code}
               </if>
			    <if test="is_stop != null and is_stop != ''">
                    AND awi.is_stop = #{is_stop}
               </if>
        </where>   
				order by awi.sort_code asc
    </select>
	
	<!-- 添加工资项目时，动态增加业务表的工资项目字段 -->
	<select id="queryAccWageItemsByAlter" statementType="CALLABLE" parameterType="java.util.Map" >
		<![CDATA[
		{call act_wagepay_alter(
	        #{group_id},
	        #{hos_id},
	        #{copy_code},
	        #{wage_code},
	        #{item_code}
		)}
		]]>
	</select>
	
	<select id="queryAccWageColumnItems" resultType="com.chd.hrp.acc.entity.AccWageItems" parameterType="string" >
        SELECT  to_char(wm_concat(column_item)) column_item
		FROM acc_wage_item
	    WHERE group_id = #{group_id}
	      and hos_id = #{hos_id}
	      and copy_code = #{copy_code}
		  and acc_year = #{acc_year}
		  and wage_code in(#{wage_code})
		  <if test="is_jc !=null and is_jc!=''">
		      and is_jc = #{is_jc}
		  </if>
	</select>
	
	<insert id="extendAccWageItems" useGeneratedKeys="false" >
    	
        INSERT INTO ACC_WAGE_ITEM (
			group_id ,hos_id, copy_code,acc_year,wage_code,item_code,item_name
			,item_type,item_cal,item_nature,is_jc,is_sum,spell_code,wbx_code
            ,sort_code,is_stop,note,column_item,data_type
        )
        select  group_id,hos_id,copy_code,#{acc_year},wage_code,item_code,
                item_name,item_type,item_cal,item_nature ,is_jc,is_sum,spell_code,
                wbx_code,sort_code ,is_stop,note,column_item,data_type
          from ACC_WAGE_ITEM
          	where  not exists(
       				select  group_id,hos_id,copy_code,acc_year,wage_code,item_code,
       						item_name,item_type,item_cal,item_nature ,is_jc,is_sum,spell_code,
       						wbx_code,sort_code ,is_stop,note
       				from ACC_WAGE_ITEM where group_id = #{group_id} and hos_id = #{hos_id}
       				and copy_code = #{copy_code} and  acc_year=to_number(#{acc_year})
       	)  and group_id = #{group_id} and hos_id = #{hos_id}
       and copy_code = #{copy_code} and  acc_year=to_number(#{acc_year})-1
    
    </insert>
    
    <select id="queryAccWageColumnByCal" resultType="com.chd.hrp.acc.entity.AccWageItems"  parameterType="string" >
	  
        SELECT  column_item,item_code,item_name,data_type
		FROM acc_wage_item
	        WHERE 
		        group_id = #{group_id}   and 
		        hos_id = #{hos_id}   and 
		        copy_code = #{copy_code}   and 
		        acc_year = #{acc_year} 
		        and wage_code = #{wage_code}
		     <if test="item_name != null and item_name !=''">
		     	and item_name = #{item_name}
		     </if> 
        
	</select>
	
	<select id="queryAccWagePayScheme" resultType="com.chd.hrp.acc.entity.AccWageItems" parameterType="string">
     SELECT to_char(wm_concat(a.column_item)) column_item
		FROM ACC_WAGE_SCHEME_ITEM a left join (select item_name,column_item,is_sum from acc_wage_item awi 
		<where>   
			    <if test="group_id != null and group_id != ''">
                    AND awi.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awi.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awi.copy_code = #{copy_code}
               </if>
               <if test="wage_where!= null and wage_where!= ''">
                    AND awi.wage_code = #{wage_where}
               </if>
               <if test="acc_year != null and acc_year != ''">
                    AND awi.acc_year= #{acc_year}
               </if>
               <if test="kind_code != null and kind_code != ''">
                    AND awi.kind_code = #{kind_code}
               </if>
        </where> ) b
		on a.column_item=b.column_item
		   <where>   
              <if test="scheme_id != null and scheme_id != '' ">
                     scheme_id = #{scheme_id}
               </if>
        </where>   
				order by a.column_item asc
       
    </select>
    
    <update id="updateSortcodeByItemcode"  parameterType="java.util.Map">
    <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
    update ACC_WAGE_ITEM
     <trim prefix="SET"  suffixOverrides=","> 
    sort_code=#{item.sort_code}
    </trim>
   	     <where> 
         AND group_id = #{item.group_id,jdbcType=NUMERIC}
         AND hos_id = #{item.hos_id,jdbcType=NUMERIC}
         AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
         AND wage_code = #{item.wage_code,jdbcType=VARCHAR}
         AND acc_year= #{item.acc_year,jdbcType=VARCHAR}
         AND item_code = #{item.item_code,jdbcType=VARCHAR}
    	 </where>
     </foreach>
    </update>
   <update id="updateByItemcode" parameterType="java.util.Map">
      update acc_wage_item
      <trim prefix="SET"  suffixOverrides=","> 

      	<if test="item_name != null and item_name != ''"> 
		item_name = #{item_name},
		</if>
      	<if test="item_type != null and item_type != ''"> 
		item_type = #{item_type},
		</if>
      	<if test="item_cal != null and item_cal != ''"> 
		item_cal = ${item_cal},
		</if>
       	<if test="item_nature != null and item_nature != ''"> 
		item_nature = #{item_nature},
		</if>
       	<if test="is_jc != null and is_jc != ''"> 
		is_jc = ${is_jc},
		</if>
       	<if test="is_sum != null and is_sum != ''"> 
		is_sum = ${is_sum},
		</if>
       	<if test="spell_code != null and spell_code != ''"> 
		spell_code = #{spell_code},
		</if>
       	<if test="wbx_code != null and wbx_code != ''"> 
		 wbx_code = #{wbx_code},
		</if>
       	<if test="is_sum != null and is_sum != ''"> 
		sort_code = ${sort_code},
		</if>
       	<if test="is_stop != null and is_stop != ''"> 
		is_stop = ${is_stop},
		</if>
      		<if test="note != null and note != ''"> 
		note = #{note},
		</if>
      		<if test="column_item != null and column_item != ''"> 
		column_item = #{column_item},
		</if>
		<if test="data_type != null and data_type != ''"> 
		data_type = #{data_type}
		</if>
		</trim>
	  where group_id = ${group_id}
	    and hos_id = ${hos_id}
	    and copy_code = #{copy_code}
	    and acc_year = #{acc_year}
	    and wage_code = #{wage_code}
	    and item_code = #{item_code}
   </update>
   
   <select id="queryAccWageItemsByItemcode" resultType="com.chd.hrp.acc.entity.AccWageItems" parameterType="java.util.Map" >
	  
        SELECT 
            awi.group_id,
            awi.hos_id,
            awi.copy_code,
            awi.acc_year,
            awi.item_code,
            awi.item_name,
            awi.wage_code,
            aw.wage_name,
            awi.item_type,
            awi.item_cal,
            awi.item_nature,
            awi.is_jc,
            awi.is_sum,
            awi.spell_code,
            awi.wbx_code,
            awi.sort_code,
            awi.is_stop,
            awi.note,
            awi.column_item
		FROM acc_wage_item awi left join
		acc_wage aw on awi.group_id = aw.group_id
		and awi.hos_id = aw.hos_id and awi.copy_code=aw.copy_code
		and awi.wage_code=aw.wage_code
	        WHERE 
		        awi.group_id = #{group_id}   and 
		        awi.hos_id = #{hos_id}   and 
		        awi.copy_code = #{copy_code}   and 
		        awi.acc_year = #{acc_year}   and 
		        awi.item_code = #{item_code} and 
		        awi.wage_code = #{wage_code} 
        
	</select>
  <select id="querySortcodeByWageCode" resultType="com.chd.hrp.acc.entity.AccWageItems" parameterType="string" >
	  
        SELECT nvl(max(sort_code),0) as sort_code 
		FROM acc_wage_item  
	        WHERE 
		         group_id = #{group_id}   and 
		         hos_id = #{hos_id}   and 
		         copy_code = #{copy_code}   and 
		         acc_year = #{acc_year}   and 
		         wage_code = #{wage_code} 
        
	</select>
</mapper>

