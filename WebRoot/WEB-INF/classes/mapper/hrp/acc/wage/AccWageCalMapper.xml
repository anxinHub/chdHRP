<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.wage.AccWageCalMapper">

	<resultMap id="accWageCal" type="com.chd.hrp.acc.entity.AccWageCal">
        <result property="cal_id" column="cal_id"/>
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="wage_code" column="wage_code"/>
        <result property="wage_name" column="wage_name"/>
        <result property="acc_year" column="acc_year"/>
        <result property="item_code" column="item_code"/>
        <result property="item_name" column="item_name"/>
        <result property="kind_code" column="kind_code"/>
        <result property="kind_name" column="kind_name"/>
        <result property="cal_name" column="cal_name"/>
        <result property="cal_eng" column="cal_eng"/>
        <result property="note" column="note"/>
        <result property="column_item" column="column_item"/>
	</resultMap>
	
    <insert id="addAccWageCal" useGeneratedKeys="true" >
    
        INSERT INTO ACC_WAGE_CAL (
             		cal_id
             ,      
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		item_code
			 ,
			 		kind_code
			 ,
			 		cal_name
			 ,
			 		cal_eng
			<!--  ,
                    note -->
			 
        ) VALUES (
			 		ACC_WAGE_CAL_SEQ.nextval
			 ,
					#{group_id}
			 ,
                    #{hos_id}
			 ,
                    #{copy_code}
			 ,
                    #{wage_code}
			 ,
					#{acc_year}
			 ,
			 		#{item_code}
			 ,
			 		#{kind_code}
			 ,
			 		#{cal_name}
			 ,
					#{cal_eng}
			 <!-- ,
                    #{note}	 -->	
 
        )
    
    </insert>
	<insert id="addBatchAccWageCal" parameterType="java.util.List" >
    
        INSERT INTO ACC_WAGE_CAL (
        
                    cal_id
             ,      
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		item_code
			 ,
			 		kind_code
			 ,
			 		cal_name
			 ,
			 		cal_eng
			 ,
                    note
			 
        ) 
        select ACC_WAGE_CAL_SEQ.nextval,a.* from (
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select
         		
					#{item.group_id}
			 ,
                    #{item.hos_id}
			 ,
                    #{item.copy_code}
			 ,
                    #{item.wage_code}
			 ,
					to_number(#{item.acc_year})+1
			 ,
			 		#{item.item_code}
			 ,
			 		#{item.kind_code}
			 ,
			 		#{item.cal_name}
			 ,
					#{item.cal_eng}
			 ,
                    #{item.note}		
		
		 from dual 
		</foreach>
    	) a
    </insert>

	<update id="updateAccWageCal" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_CAL SET
        
       	<!-- note = #{note}， -->
       <!-- 	kind_code=#{kind_code}, -->
		cal_name=#{cal_name},
		cal_eng=#{cal_eng}
       	
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 acc_year = #{acc_year}
		 	  and 
		 wage_code = #{wage_code}
		  	and 
		 item_code = #{item_code}
		 <if test="kind_code !='0'">
		 and
		 kind_code = #{kind_code}
		 </if>
   
	</update>
	<update id="updateBatchAccWageCal" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE ACC_WAGE_CAL SET
			 
			note = #{item.note}
			 
			 
        WHERE 
		 wage_code = #{item.wage_code}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
			 
    </foreach>
	</update>

    <delete id="deleteAccWageCal" parameterType="java.util.Map">
   
        DELETE FROM ACC_WAGE_CAL WHERE
	        wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code} 
   
    </delete>
    <delete id="deleteBatchAccWageCal" parameterType="java.util.List">
        DELETE FROM ACC_WAGE_CAL WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			cal_id = #{item.cal_id}   and
	        <!-- acc_year = #{item.acc_year}     and  -->
	        group_id = #{item.group_id}   and 
	        hos_id = #{item.hos_id}   and 
	        copy_code = #{item.copy_code} 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccWageCalByCode" resultType="com.chd.hrp.acc.entity.AccWageCal" parameterType="string" >
	  
        SELECT 
            		cal_id
             ,      
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		item_code
			 ,
			 		kind_code
			 ,
			 		cal_name
			 ,
			 		cal_eng
			 ,
                    note
		FROM ACC_WAGE_CAL 
	        WHERE 
		    wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code} and 
	        item_code = #{item_code}  
	    <if test="kind_code !=null and kind_code != ''">
	    and kind_code = #{kind_code}
	    </if>  
        
	</select>
	<select id="queryAccWageCalByCal" parameterType="java.util.Map" resultMap="accWageCal" >
      
       		select awc.wage_code,
		       awc.item_code,
		       awc.kind_code,
		       awc.cal_eng,
		       awi.column_item
		  from acc_wage_cal awc
		  left join acc_wage_item awi
		    on awc.group_id = awi.group_id
		   and awc.hos_id = awi.hos_id
		   and awc.copy_code = awi.copy_code
		   and awc.acc_year = awi.acc_year
		   and awc.item_code = awi.item_code
		   and awc.wage_code = awi.wage_code
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND awc.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awc.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awc.copy_code = #{copy_code}
               </if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awc.wage_code = #{wage_code}
               </if>
               <if test="acc_year != null and acc_year != ''">
                    AND awc.acc_year = #{acc_year}
               </if>
			    
        </where>   
				order by awc.wage_code asc
    </select>
    
    <select id="queryAccWageCal" parameterType="java.util.Map" resultMap="accWageCal" >
      
       		select awc.cal_id,aw.wage_code,aw.wage_name,awi.item_code,awi.item_name,awc.kind_code,
			case when awc.kind_code='0' then '全部' else hek.kind_name end kind_name,
			awc.cal_name,awc.cal_eng
			 from acc_wage_cal awc left join acc_wage aw on awc.group_id=aw.group_id and awc.hos_id = aw.hos_id
			and awc.copy_code = aw.copy_code  and awc.wage_code= aw.wage_code 
			left join acc_wage_item awi on awc.group_id = awi.group_id and awc.hos_id = awi.hos_id
			and awc.copy_code = awi.copy_code and awc.acc_year= awi.acc_year and awc.wage_code= awi.wage_code 
			and awc.item_code = awi.item_code left join hos_emp_kind hek on awc.group_id = hek.group_id 
			and awc.hos_id = hek.hos_id and awc.kind_code=hek.kind_code and hek.is_stop=0
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND awc.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awc.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awc.copy_code = #{copy_code}
               </if>
               <if test="acc_year != null and acc_year != ''">
                    AND awc.acc_year = #{acc_year}
               </if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awc.wage_code = #{wage_code}
               </if>
			    
        </where>   
				order by awc.wage_code asc
    </select>
    
</mapper>

