<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.AccCusAttrMapper">

	<resultMap id="accCusAttr" type="com.chd.hrp.acc.entity.AccCusAttr">
		<result property="cus_id" column="cus_id" />
		<result property="cus_code" column="cus_code" />
		<result property="cus_name" column="cus_name" />
		<result property="is_stop" column="is_stop" />
		<result property="spell_code" column="spell_code" />
		<result property="wbx_code" column="wbx_code" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="bank_name" column="bank_name" />
		<result property="bank_number" column="bank_number" />
		<result property="legal" column="legal" />
		<result property="regis_no" column="regis_no" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="contact" column="contact" />
		<result property="fax" column="fax" />
		<result property="email" column="email" />
		<result property="region" column="region" />
		<result property="zip_code" column="zip_code" />
		<result property="address" column="address" />
		<result property="note" column="note" />
		<result property="is_mat" column="is_mat" />
		<result property="is_ass" column="is_ass" />
		<result property="is_med" column="is_med" />
		<result property="is_sup" column="is_sup" />
		<result property="tmop_code" column="tmop_code" />
		<result property="dang_code" column="dang_code" />
		<result property="aff_code" column="aff_code" />
		<result property="inst_code" column="inst_code" />
		<result property="range_id" column="range_id" />
	</resultMap>

	<insert id="addAccCusAttr" useGeneratedKeys="true">
		insert into
		acc_cus_attr(
		cus_id,
		group_id,
		hos_id,
		bank_name,
		bank_number,
		legal,
		regis_no,
		phone,
		mobile,
		contact,
		fax,
		email,
		region,
		zip_code,
		address,
		note,
			aff_code,
      	    inst_code,
      	    dang_code,
      	    tmop_code,
      	    range_id
		)
		values(
		#{cus_id},
		#{group_id},
		#{hos_id},
		#{bank_name},
		#{bank_number},
		#{legal},
		#{regis_no},
		#{phone},
		#{mobile},
		#{contact},
		#{fax},
		#{email},
		#{region},
		#{zip_code},
		#{address},
		#{note},
			#{aff_code},
			#{inst_code},
			#{dang_code},
			#{tmop_code},
			#{range_id}
		
		)

	</insert>
	<insert id="addBatchAccCusAttr" parameterType="java.util.List">

		INSERT INTO ACC_Cus_ATTR (
		cus_id,
		group_id,
		hos_id,
		bank_name,
		bank_number,
		legal,
		regis_no,
		phone,
		mobile,
		contact,
		fax,
		email,
		region,
		zip_code,
		address,
		note
		)
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{cus_id},
			#{group_id},
			#{hos_id},
			#{bank_name},
			#{bank_number},
			#{legal},
			#{regis_no},
			#{phone},
			#{mobile},
			#{contact},
			#{fax},
			#{email},
			#{region},
			#{zip_code},
			#{address},
			#{note}
			from dual
		</foreach>

	</insert>

	<update id="updateAccCusAttr" parameterType="java.util.Map">
		update acc_cus_attr
		set bank_name = #{bank_name},
		bank_number= #{bank_number},
		legal=
		#{legal},
		regis_no= #{regis_no},
		phone= #{phone},
		mobile= #{mobile},
		contact= #{contact},
		fax= #{fax},
		email= #{email},
		region= #{region},
		zip_code= #{zip_code},
		address= #{address},
		note= #{note},
			aff_code=#{aff_code},
      	    inst_code=#{inst_code},
      	    dang_code=#{dang_code},
      	    tmop_code=#{tmop_code},
      	    range_id=#{range_id}
		where
		cus_id=#{cus_id} and
		group_id= #{group_id} and
		hos_id= #{hos_id}

	</update>
	<update id="updateBatchAccCusAttr" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			update acc_cus_attr set bank_name =
			#{bank_name},
			bank_number= #{bank_number},
			legal= #{legal},
			regis_no=
			#{regis_no},
			phone= #{phone},
			mobile= #{mobile},
			contact= #{contact},
			fax= #{fax},
			email= #{email},
			region= #{region},
			zip_code= #{zip_code},
			address= #{address},
			note= #{note}
			where
			cus_id= #{cus_id} and
			group_id=
			#{group_id} and
			hos_id= #{hos_id}

		</foreach>
	</update>

	<delete id="deleteAccCusAttr" parameterType="java.util.Map">

		DELETE FROM
		acc_Cus_attr WHERE
		group_id =#{item.group_id}
		and
		hos_id = #{item.hos_id}
		and
		cus_id =#{item.cus_id}

	</delete>
	<delete id="deleteBatchAccCusAttr" parameterType="java.util.List">
		DELETE FROM acc_Cus_attr WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			group_id =
			#{item.group_id}
			and
			hos_id =
			#{item.hos_id}
			and
			cus_id =
			#{item.cus_id}

		</foreach>


	</delete>

	<select id="queryAccCusAttrByCode" resultType="com.chd.hrp.acc.entity.AccCusAttr"
		parameterType="string">

		select
		cus_id,
		group_id,
		hos_id,
		bank_name,
		bank_number,
		legal,
		regis_no,
		phone,
		mobile,
		contact,
		fax,
		email,
		region,
		zip_code,
		address,
		note
		from acc_cus_attr
		where group_id =
		#{group_id}
		and
		hos_id = #{hos_id}
		and
		cus_id =
		#{cus_id}
	</select>

	<select id="queryCusByCode" resultType="com.chd.hrp.acc.entity.AccCusAttr"
		parameterType="string">
	select
	hc.cus_id,
	hc.group_id,
	hc.hos_id,
	aca.bank_name,
	aca.bank_number,
	aca.legal,
	aca.regis_no,
	aca.phone,
	aca.mobile,
	aca.contact,
	aca.fax,
	aca.email,
	aca.region,
	aca.zip_code,
	aca.address,
	aca.note,
	aca.aff_code,
	aca.inst_code,
	aca.dang_code,
	aca.tmop_code,
	aca.range_id,
	hc.cus_code,
	hc.cus_name,
	hc.is_disable,
	hct.type_code,
	hct.type_name,
	hc.is_mat,
   	hc.is_ass,
   	hc.is_med,
   	hc.is_sup
	 FROM  hos_cus_dict hc
	LEFT JOIN acc_cus_attr aca on
	hc.group_id = aca.group_id and hc.hos_id = aca.hos_id
	and hc.cus_id = aca.cus_id left join hos_cus_type hct
	on hc.group_id = hct.group_id and hc.hos_id = hct.hos_id
	and hc.type_code = hct.type_code
	where
	hc.is_stop= 0
	and hc.group_id =#{group_id}
	and hc.hos_id = #{hos_id} and hc.cus_id =#{cus_id}


	</select>
	<select id="queryAccCusAttr" parameterType="java.util.Map"
		resultMap="accCusAttr">

		SELECT
		cus_id,
		group_id,
		hos_id,
		bank_name,
		bank_number,
		legal,
		regis_no,
		phone,
		mobile,
		contact,
		fax,
		email,
		region,
		zip_code,
		address,
		note
		FROM
		ACC_Cus_ATTR
		<where>
			<if test="Cus_no != null and Cus_no != ''">
				AND Cus_no = #{Cus_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="cus_id != null and cus_id != ''">
				AND cus_id = #{cus_id}
			</if>
		</where>
		order by cus_id asc
	</select>
	
	<select id="queryHosCusByCode" resultType="com.chd.hrp.acc.entity.AccCusAttr" parameterType="string" >
	      SELECT 
	            hed.group_id,
	            hed.hos_id,
	            hed.cus_id,
	            hed.cus_code,
	            hed.cus_name,
	            hed.type_code,
	            hst.type_name,
	            hed.spell_code,
	            hed.wbx_code,
	            hed.is_stop
			FROM hos_Cus_dict hed
			left join HOS_cus_type hst on hed.type_code = hst.type_code and hed.group_id = hst.group_id and hed.hos_id = hst.hos_id
		    WHERE hed.is_stop = 0 and 
        	hed.group_id = #{group_id}   and 
	        hed.hos_id = #{hos_id}   and 
	        hed.cus_id = #{cus_id}
	</select>

	<!-- 把当前数据修改成历史数据 -->
	<update id="updateAccCusAttrHistory">
		UPDATE
			HOS_CUS_DICT
		SET
			IS_STOP = 1,
			IS_DISABLE = 1
		WHERE
			GROUP_ID = #{group_id,jdbcType=INTEGER}
			AND HOS_ID = #{hos_id,jdbcType=INTEGER}
			AND CUS_ID = #{cus_id,jdbcType=INTEGER}
	</update>

</mapper>

