<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.emp.AccBankMapper">

	<resultMap id="accBank" type="com.chd.hrp.acc.entity.AccBank">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="bank_zh" column="bank_zh"/>
        <result property="bank_number" column="bank_number"/>
        <result property="bank_name" column="bank_name"/>
        <result property="simple_name" column="simple_name"/>
        <result property="bank_account" column="bank_account"/>
        <result property="bank_address" column="bank_address"/>
        <result property="phone" column="phone"/>
        <result property="sort_code" column="sort_code"/>
        <result property="is_stop" column="is_stop"/>
        <result property="note" column="note"/>
	</resultMap>
	
    <insert id="addAccBank" useGeneratedKeys="true" >
    
        INSERT INTO ACC_BANK (
                   
                    group_id
			 ,
                    hos_id
			 ,
                    bank_number
			 ,
                    bank_name
			 ,
					simple_name
			 ,
                    bank_account
             ,
             		bank_zh
             ,
             		bank_address
             ,
             		phone
             ,		
             		spell_code
             ,
              		wbx_code     
             ,
             		sort_code
             ,
             		is_stop
             ,
             		note 
			 
        ) VALUES (

					#{group_id}	
		
			，		#{hos_id}		
						
		 	 ，		#{bank_number}
			 
             ，     #{bank_name}	
			 ,
					#{simple_name}	
			 ,
                    #{bank_account}	
             ,
             		#{bank_zh}	
             ,
             		#{bank_address}	
             ,
             		#{phone}	
             ,		
             		#{spell_code}	
             ,
              		#{wbx_code }	   
             ,
             		#{sort_code}	
             ,
             		#{is_stop}	
             ，		
					#{note}		
 
        )
    
    </insert>
	<insert id="addBatchAccBank" parameterType="java.util.List" >
    
        INSERT INTO ACC_BANK (
        
                    group_id
			 ,
                    hos_id
			 ,
                    bank_number
			 ,
                    bank_name
			 ,
					simple_name
			 ,
                    bank_account
             , 
             		bank_zh
             ,
             		bank_address
             ,
             		phone
             ,		
             		spell_code
             ,
              		wbx_code     
             ,
             		sort_code
             ,
             		is_stop
             ,
             		note 
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select
         		
					#{item.group_id}	
		
			，		#{item.hos_id}		
						
		 	 ，		#{item.bank_number}
			 
             ，     #{item.bank_name}	
			 ,
					#{item.simple_name}	
			 ,
                    #{item.bank_account}	
             ,
             		#{item.bank_zh}	
             ,
             		#{item.bank_address}	
             ,
             		#{item.phone}	
             ,		
             		#{item.spell_code}	
             ,
              		#{item.wbx_code  }	   
             ,
             		#{item.sort_code}	
             ,
             		#{item.is_stop}	
             ，		
					#{item.note}		
		
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateAccBank" parameterType="java.util.Map">
    
        UPDATE ACC_BANK SET
        
        			bank_name =#{bank_name}
			 ,
					simple_name=#{simple_name}
			 ,
                    bank_account=#{bank_account}
             ,
             		bank_zh =#{bank_zh}
             ,
             		bank_address=#{bank_address}
             ,
             		phone=#{phone}
             ,		
             		spell_code=#{spell_code}
             ,
              		wbx_code  =#{wbx_code}
             ,
             		sort_code=#{sort_code}
             ,
             		is_stop=#{is_stop}
             ,
             		note =#{note}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 bank_number = #{bank_number}
		     
   
	</update>
	<update id="updateBatchAccBank" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE ACC_BANK SET
			 
			bank_name =#{item.bank_name}
			 ,
					simple_name=#{item.simple_name}
			 ,
                    bank_account=#{item.bank_account}
             ,      
             		bank_zh=#{item.bank_zh}
             ,
             		bank_address=#{item.bank_address}
             ,
             		phone=#{item.phone}
             ,		
             		spell_code=#{item.spell_code}
             ,
              		wbx_code  =#{item.wbx_code}
             ,
             		sort_code=#{item.sort_code}
             ,
             		is_stop=#{item.is_stop}
             ,
             		note =#{item.note}
			 
        WHERE 
		 bank_number = #{item.bank_number}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  
			 
    </foreach>
	</update>

    <delete id="deleteAccBank" parameterType="java.util.Map">
   
        DELETE FROM ACC_BANK WHERE
	        bank_number = #{bank_number}   and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}    
   
    </delete>
    <delete id="deleteBatchAccBank" parameterType="java.util.List">
        DELETE FROM ACC_BANK WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
		 bank_number = #{item.bank_number}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccBankByCode" resultType="com.chd.hrp.acc.entity.AccBank" parameterType="string" >
	  
        SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    bank_number
			 ,
                    bank_name
			 ,
					simple_name
			 ,
                    bank_account
             ,
                    bank_zh
             ,
             		bank_address
             ,
             		phone
             ,		
             		spell_code
             ,
              		wbx_code     
             ,
             		sort_code
             ,
             		is_stop
             ,
             		note
		FROM ACC_BANK 
	        WHERE 
		        bank_number = #{bank_number}   and 
		        group_id = #{group_id}   and 
		        hos_id = #{hos_id}   
        
	</select>
	<select id="queryAccBank" parameterType="java.util.Map" resultMap="accBank" >
      
        SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    bank_number
			 ,
                    bank_name
			 ,
					simple_name
			 ,
                    bank_account
             ,
                    bank_zh
             ,
             		bank_address
             ,
             		phone
             ,		
             		spell_code
             ,
              		wbx_code     
             ,
             		sort_code
             ,
             		is_stop
             ,
             		note 
        FROM ACC_BANK 
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
			    <if test="bank_number != null and bank_number != ''">
                    AND bank_number = #{bank_number}
               </if>
			     <if test="bank_name != null and bank_name != ''">
                   AND (  bank_name  like '%${ bank_name}%'
                    or  spell_code like '%${ bank_name}%'
                    or  wbx_code like '%${ bank_name}%')
               </if>
			    
        </where>   
				order by bank_number asc
    </select>
    
    <select id="queryAccBankPrint" parameterType="java.util.Map" resultType="java.util.Map">
      
        SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    bank_number
			 ,
                    bank_name
			 ,
					simple_name
			 ,
                    bank_account
             ,
                    bank_zh
             ,
             		bank_address
             ,
             		phone
             ,		
             		spell_code
             ,
              		wbx_code     
             ,
             		sort_code
             ,
             		is_stop
             ,
             		note 
        FROM ACC_BANK 
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
			    <if test="bank_number != null and bank_number != ''">
                    AND bank_number = #{bank_number}
               </if>
			     <if test="bank_name != null and bank_name != ''">
                   AND (  bank_name  like '%${ bank_name}%'
                    or  spell_code like '%${ bank_name}%'
                    or  wbx_code like '%${ bank_name}%')
               </if>
			    
        </where>   
				order by bank_number asc
    </select>
	
	<select id="queryAccBankBySortCode" resultType="com.chd.hrp.acc.entity.AccBank" parameterType="string" >
	  
        SELECT  max(sort_code)
		FROM ACC_BANK 
	        WHERE  group_id = #{group_id}   and 
		        hos_id = #{hos_id}   
        
	</select>
</mapper>

