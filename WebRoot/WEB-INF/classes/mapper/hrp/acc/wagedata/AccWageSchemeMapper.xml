<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.wagedata.AccWageSchemeMapper">

	<resultMap id="accWageScheme" type="com.chd.hrp.acc.entity.AccWageScheme">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="scheme_id" column="scheme_id"/>
        <result property="wage_code" column="wage_code"/>
        <result property="scheme_code" column="scheme_code"/>
        <result property="scheme_name" column="scheme_name"/>
        <result property="scheme_type_code" column="scheme_type_code"/>
        <result property="create_user" column="create_user"/>
        <result property="create_date" column="create_date"/>
        <result property="is_gzt" column="is_gzt"/>
	</resultMap>
	
    <insert id="addAccWageScheme" useGeneratedKeys="true" >
	    <selectKey resultType="java.lang.Integer" order="BEFORE"  keyProperty="scheme_id">
	    	select ACC_WAGE_SCHEME_SEQ.nextval as scheme_id from dual
	    </selectKey>
        INSERT INTO ACC_WAGE_SCHEME (
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    scheme_id
			 ,
					wage_code
			 ,
			 		scheme_name
			 ,
                 	create_user
			 ,
			 		create_date
			 ,
			 		scheme_code
			 ,
			 		scheme_type_code,
			 		is_gzt
        ) VALUES (

					#{group_id}
			 ,
                    #{hos_id}
			 ,
                    #{copy_code}
			 ,
                    #{scheme_id}
			 ,
					#{wage_code}
			 ,
			 		#{scheme_name}
			 ,
                 	#{create_user}
			 ,
			 		sysdate 
			 ,
			 		#{scheme_code}
			 ,
			 		#{scheme_type_code},
			 		#{is_gzt}
        )
    
    </insert>
	<insert id="addBatchAccWageScheme" parameterType="java.util.List" >
    
        INSERT INTO ACC_WAGE_SCHEME (
        
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    scheme_id
			 ,
					wage_code
			 ,
			 		scheme_name
			 ,		
			 		scheme_code
			 ,
                 	create_user
			 ,
			 		create_date
			 ,
			 		scheme_type_code
			 
        ) 
		 <foreach collection="list" item="item" index="index" separator=" union all " >
        select
         		
					#{item.group_id}
			 ,
                    #{item.hos_id}
			 ,
                    #{item.copy_code}
			 ,
                    #{item.scheme_id}
			 ,
					#{item.wage_code}
			 ,
			 		#{item.scheme_name}
			 ,		
			 		#{item.scheme_code}
			 ,
                 	#{item.create_user}
			 ,
			 		#{item.create_date}	
			 ,
			 		#{scheme_type_code}
		
		 from dual 
		</foreach>
    
    </insert>

	<update id="updateAccWageScheme" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_SCHEME SET
        
			 scheme_name = #{scheme_name},
			 is_gzt = #{is_gzt}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 scheme_id = #{scheme_id}
		      and 
		 wage_code =#{wage_code}	
		     
   
	</update>
	<update id="updateBatchAccWageScheme" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";" >
        UPDATE ACC_WAGE_SCHEME SET
			 
			 scheme_name = #{item.scheme_name}
			 
        WHERE 
		 scheme_id = #{item.scheme_id}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
		 	  and 
		 wage_code = #{item.wage_code}
			 
    </foreach>
	</update>

    <delete id="deleteAccWageScheme" parameterType="java.util.Map">
   
           DELETE FROM ACC_WAGE_SCHEME WHERE
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code} and 
	        wage_code = #{wage_code} 
	        and scheme_id = #{scheme_id}
   
    </delete>
    <delete id="deleteBatchAccWageScheme" parameterType="java.util.List">
        DELETE FROM ACC_WAGE_SCHEME WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
	        group_id = #{item.group_id}   and 
	        hos_id = #{item.hos_id}   and 
	        copy_code = #{item.copy_code} and 
	        wage_code = #{item.wage_code} 
	        <if test="item.scheme_code != null and item.scheme_code != ''">
	           and scheme_id = #{item.scheme_code}
	        </if>
		</foreach>
        
   
    </delete>
    
    <select id="queryAccWageSchemeByCode" resultType="com.chd.hrp.acc.entity.AccWageScheme" parameterType="java.util.Map" >
        SELECT group_id,
			hos_id,
			copy_code,
			wage_code,
			scheme_id,
			scheme_code,
			scheme_type_code,
			scheme_name,
			create_user,
			create_date,
			is_gzt
		FROM ACC_WAGE_SCHEME 
		WHERE group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and copy_code = #{copy_code, jdbcType=VARCHAR}
		  and wage_code = #{wage_code, jdbcType=VARCHAR}
		  and (
		  	scheme_code = #{scheme_code, jdbcType=VARCHAR} 
	        <if test="scheme_name != null and scheme_name != ''">
	        	or scheme_name=#{scheme_name, jdbcType=VARCHAR}
	        </if>
	        ) 
	</select>
        
	<select id="queryAccWageScheme" parameterType="java.util.Map" resultMap="accWageScheme" >
        SELECT 
            		group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
                 	scheme_id
			 ,
			 		scheme_name
			 ,
			 		create_user
			 ,
			 		create_date
        FROM ACC_WAGE_SCHEME 
            <where>                     
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND copy_code = #{copy_code}
               </if>
			    <if test="scheme_id != null and scheme_id != ''">
                    AND scheme_id = #{scheme_id}
               </if>
               <if test="scheme_type_code != null and scheme_type_code != ''">
					AND aws.scheme_type_code = #{scheme_type_code}
				</if>
        </where>   
				order by scheme_id asc
    </select>
	
	<!-- 通过主键查工资方案 -->
	<select id="queryAccWageSchemeByPK" parameterType="java.util.Map" resultMap="accWageScheme">
		select group_id,
			hos_id,
			copy_code,
			wage_code,
			scheme_name,
			create_user,
			create_date,
			scheme_id,
			scheme_code,
			scheme_type_code
		from acc_wage_scheme
		where scheme_id = #{scheme_id, jdbcType=INTEGER}
	</select>
	
</mapper>

