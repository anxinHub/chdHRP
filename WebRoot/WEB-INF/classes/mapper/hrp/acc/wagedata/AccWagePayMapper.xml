<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.chd.hrp.acc.dao.wagedata.AccWagePayMapper">
	<resultMap id="accWagePay" type="com.chd.hrp.acc.entity.AccWagePay">
        <result property="group_id" column="group_id"/>
        <result property="hos_id" column="hos_id"/>
        <result property="copy_code" column="copy_code"/>
        <result property="wage_code" column="wage_code"/>
        <result property="wage_name" column="wage_name"/>
        <result property="acc_year" column="acc_year"/>
        <result property="acc_month" column="acc_month"/>
        <result property="emp_id" column="emp_id"/>
        <result property="emp_no" column="emp_no"/>
        <result property="emp_code" column="emp_code"/>
        <result property="emp_name" column="emp_name"/>
        <result property="pay_id" column="pay_id"/>
        <result property="dept_id" column="dept_id"/>
        <result property="dept_no" column="dept_no"/>
        <result property="dept_name" column="dept_name"/>
        <result property="kind_code" column="kind_code"/>
        <result property="kind_name" column="kind_name"/>
        <result property="pay_type_code" column="pay_type_code"/>
        <result property="pay_type_name" column="pay_type_name"/>
        <result property="station_code" column="station_code"/>
        <result property="station_name" column="station_name"/>
        <result property="duty_name" column="duty_name"/>
        <result property="duty_code" column="duty_code"/>
        <result property="sex" column="sex"/>
        <result property="id_number" column="id_number"/>
        <result property="user_id" column="user_id"/>
        <result property="create_date" column="create_date"/>
        <result property="state" column="state"/>
        <result property="pay_state" column="pay_state"/>
        <result property="note" column="note"/>
        <result property="scheme_id" column="scheme_id"/>
        <result property="scheme_code" column="scheme_code"/>
        <result property="scheme_name" column="scheme_name"/>
	</resultMap>
	
	<resultMap type="com.chd.hrp.acc.entity.HrpAccSelect" id="map">
		<result property="id" column="id" />
		<result property="text" column="text" />
	</resultMap>
	
    <insert id="addAccWagePay" useGeneratedKeys="true" >
    
        INSERT INTO ACC_WAGE_PAY (
                   
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 <if test="pay_code != null and pay_code  != ''">,pay_type_code</if>
			 
			 <if test="pay_name != null and pay_name != ''">,pay_type_name</if>

			 <if test="kind_code != null and kind_code != ''">,kind_code</if>
			 
			 <if test="kind_name != null and kind_name != ''">,kind_name</if>
			 
			 <if test="station_code != null and station_code != ''">,station_code</if>
			 
			 <if test="station_name != null and station_name != ''">,station_name</if>
			 
			 <if test="duty_code != null and duty_code != ''">,duty_code</if>
			 
			 <if test="duty_name != null and duty_name != ''">,duty_name</if>
			 
			 <if test="sex != null and sex != ''">,sex</if>
			 
			 <if test="id_number != null and id_number != ''">,id_number</if>
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			<if test="note != null and note != ''">,note</if>
			
			<if test="item_column != null and item_column != ''">${item_column} </if>
               
			 
        ) VALUES (

					#{group_id}
			 ,
                    #{hos_id}
			 ,
                    #{copy_code}
			 ,
                    #{wage_code}
			 ,
					#{acc_year}
			 ,
			 		#{acc_month}
			 ,
                 	#{emp_id}
			 ,
			 		ACC_WAGE_PAY_SEQ.nextval
			 ,
			 		#{emp_no}
			 ,
			 		#{dept_id}
			 ,
			 		#{dept_no}
			 		
			 <if test="pay_code != null and pay_code != ''">,#{pay_code}</if>
			 
			 <if test="pay_name != null and pay_name != ''">,#{pay_name}</if>
			
			 <if test="kind_code != null and kind_code != ''">,#{kind_code}</if>
			 
			 <if test="kind_name != null and kind_name != ''">,#{kind_name}</if>
			 
			 <if test="station_code != null and station_code != ''">,#{station_code}</if>
			 
			 <if test="station_name != null and station_name != ''">,#{station_name}</if>
			 
			 <if test="duty_code != null and duty_code != ''">,#{duty_code}</if>
			 
			 <if test="duty_name != null and duty_name != ''">,#{duty_name}</if>
			 
			 <if test="sex != null and sex != ''">,#{sex}</if>
			 
			 <if test="id_number != null and id_number != ''">,#{id_number}</if>
			 ,
			 		#{user_id}
			 ,
			 		#{create_date}
			 ,
			 		'1'
			<if test="note != null and note != ''">,#{note}</if>	
			
			<if test="sql != null and sql != ''">${sql}</if>
 			  
        )
    
    </insert>
    
    <insert id="addAccWagePayByList" useGeneratedKeys="true" >
    
        INSERT INTO ACC_WAGE_PAY (
                   
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
       		 ,
           			pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
             ${sql}
			 
        ) 
        select 
	    			hed.group_id
			 ,
                    hed.hos_id
			 ,
                    #{copy_code}
			 ,
                    #{wage_code}
			 ,
					#{acc_year}
			 ,
			 		#{acc_month}
			 ,
                 	hed.emp_id
			 ,
			 		ACC_WAGE_PAY_SEQ.nextval
			 ,
			 		hed.emp_no
			 ,
			 		hdd.dept_id
			 ,
			 		hdd.dept_no
			 ,
			 		hek.kind_code
			 ,
			 		hek.kind_name
			 ,
			 		apt.pay_type_code
			 ,
			 		apt.pay_type_name
			 ,
			 		hs.station_code
			 ,
			 		hs.station_name
			 ,
			 		hd.duty_code
			 ,
			 		hd.duty_name
			 ,
			 		aea.sex
			 ,
			 		aea.id_number
			 ,
			 		#{user_id}
			 ,
			 		to_date(#{create_date},'yyyy-MM-dd')
			 ,
			 		1
			 ,
                    ''
             ${sqls}
	   from  
	   hos_emp_dict hed left join acc_emp_attr aea on hed.group_id = aea.group_id and hed.hos_id = aea.hos_id and 
	   hed.emp_id = aea.emp_id left join acc_emp_pay apt on aea.group_id = apt.group_id
	   and aea.hos_id = apt.hos_id and aea.pay_type_code = apt.pay_type_code left join 
	   hos_station hs on aea.group_id= hs.group_id and aea.hos_id = hs.hos_id  and aea.station_code = hs.station_code
	   left join hos_duty hd on aea.group_id = hd.group_id and aea.hos_id = hs.hos_id and aea.duty_code = hd.duty_code
	   left join hos_dept_dict hdd on hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no and  hed.group_id = hdd.group_id
	   and hed.hos_id = hdd.hos_id left join hos_emp_kind hek on hed.group_id = hek.group_id and hed.hos_id = hek.hos_id
	   and hed.kind_code = hek.kind_code 
	 <where>
	 		<if test="group_id != null and group_id != ''">
                AND hed.group_id = #{group_id}
            </if>
			<if test="hos_id != null and hos_id != ''">
                AND hed.hos_id = #{hos_id}
            </if>
            <if test="dept_id != null and dept_id != ''">
                AND hed.dept_id = #{dept_id}
            </if>
            <if test="dept_no != null and dept_no != ''">
                AND hed.dept_no = #{dept_no}
            </if>
            <if test="kind_code != null and kind_code != ''">
                AND hed.kind_code = #{kind_code}
            </if>
            <if test="station_code != null and station_code != ''">
                AND aea.station_code = #{station_code}
            </if>
            <if test="duty_code != null and duty_code != ''">
                AND aea.duty_code = #{duty_code}
            </if>
	 </where>
    
    </insert>
    
    <insert id="addAccWagePayByWage" useGeneratedKeys="true" >
    
        INSERT INTO ACC_WAGE_PAY (
                   pay_id
			 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
       		 ,
           			pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
             ,${sql}
			 
        ) 
        select ACC_WAGE_PAY_SEQ.nextval
        	 ,
	    			group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    #{wage_code}
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
             ,     ${sql}
	   from  acc_wage_pay
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
	     AND acc_year = #{acc_year} AND acc_month = #{acc_month} AND wage_code in (${wage_where})
	     and state =1
    </insert>
    
    <insert id="addAccWagePayByWageEmp" useGeneratedKeys="false" >
        INSERT INTO ACC_WAGE_PAY (
        	pay_id, 
			group_id, 
			hos_id, 
			copy_code, 
			wage_code, 
			acc_year, 
			acc_month, 
			emp_id, 
			emp_no, 
			dept_id, 
			dept_no, 
			kind_code, 
			kind_name, 
			pay_type_code, 
			pay_type_name, 
			station_code, 
			station_name, 
			duty_code, 
			duty_name, 
			sex, 
			id_number, 
			user_id, 
        	create_date, 
        	state, 
        	note
        ) 
        select ACC_WAGE_PAY_SEQ.nextval,
	    	   hed.group_id,
			   hed.hos_id,
			   #{copy_code},
			   #{wage_code},
			   #{acc_year},
			   #{acc_month},
			   hed.emp_id,
			   hed.emp_no,
			   hdd.dept_id,
			   hdd.dept_no,
			   hek.kind_code,
			   hek.kind_name,
			   apt.pay_type_code,
			   apt.pay_type_name,
			   hs.station_code,
			   hs.station_name,
			   hd.duty_code,
			   hd.duty_name,
			   aea.sex,
			   aea.id_number,
			   #{user_id},
			   sysdate,
			   1,
			   ''
		from acc_wage_emp awe 
		left join hos_emp_dict hed 
		       on hed.group_id = awe.group_id 
		      and hed.hos_id = awe.hos_id 
		      and hed.emp_id = awe.emp_id
		      and hed.emp_no = awe.emp_no
		left join acc_emp_attr aea 
	           on hed.group_id = aea.group_id 
	          and hed.hos_id = aea.hos_id 
	          and hed.emp_id = aea.emp_id 
	    left join acc_emp_pay apt 
	           on aea.group_id = apt.group_id
	          and aea.hos_id = apt.hos_id 
	          and aea.pay_type_code = apt.pay_type_code 
	    left join hos_station hs 
	           on aea.group_id= hs.group_id 
	          and aea.hos_id = hs.hos_id  
	          and aea.station_code = hs.station_code
	    left join hos_duty hd 
	           on aea.group_id = hd.group_id 
	          and aea.hos_id = hs.hos_id 
	          and aea.duty_code = hd.duty_code
	    left join hos_dept_dict hdd 
	           on hed.dept_id = hdd.dept_id 
	          and hed.dept_no = hdd.dept_no 
	          and hed.group_id = hdd.group_id
	          and hed.hos_id = hdd.hos_id 
	    left join hos_emp_kind hek 
	           on hed.group_id = hek.group_id 
	          and hed.hos_id = hek.hos_id
	          and hed.kind_code = hek.kind_code 
	    where hed.group_id = #{group_id}
          AND hed.hos_id = #{hos_id}
          AND awe.copy_code = #{copy_code}
          AND awe.wage_code = #{wage_code}
          and hed.is_stop = 0
		  and hed.is_disable = 0
          and apt.pay_type_code is not null 
    </insert>
    
    <!-- 通过职工分类添加 -->
    <insert id="addAccWagePayByEmpKindBatch" parameterType="java.util.Map">
    	insert into acc_wage_pay(
			pay_id,
			group_id,
			hos_id,
			copy_code,
			wage_code,
			acc_year,
			acc_month,
			emp_id,
			emp_no,
			dept_id,
			dept_no,
			kind_code,
			kind_name,
			pay_type_code,
			pay_type_name,
			station_code,
			station_name,
			duty_code,
			duty_name,
			sex,
			id_number,
			user_id,
			create_date,
			state,
			note
		)
		select ACC_WAGE_PAY_SEQ.nextval,
			t1.group_id,
			t1.hos_id,
			#{copy_code},
			#{wage_code},
			#{acc_year},
			#{acc_month},
			t1.emp_id,
			t1.emp_no,
			t1.dept_id,
			t2.dept_no,
			t3.kind_code,
			t3.kind_name,
			t5.pay_type_code,
			t5.pay_type_name,
			t6.station_code,
			t6.station_name,
			t7.duty_code,
			t7.duty_name,
			t4.sex,
			t4.id_number,
			#{user_id},
			sysdate,
			1,
			''
		from hos_emp_dict t1
		left join hos_dept_dict t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.dept_id = t1.dept_id
			  and t2.is_stop = 0
			  and t2.is_disable = 0
		left join hos_emp_kind t3
			   on t3.group_id = t1.group_id
			  and t3.hos_id = t1.hos_id
			  and t3.kind_code = t1.kind_code
		left join acc_emp_attr t4
			   on t4.group_id = t1.group_id
			  and t4.hos_id = t1.hos_id
			  and t4.emp_id = t1.emp_id
		left join acc_emp_pay t5
			   on t5.group_id = t1.group_id
			  and t5.hos_id = t1.hos_id
			  and t5.pay_type_code = t4.pay_type_code
		left join hos_station t6
			   on t6.group_id = t1.group_id
			  and t6.hos_id = t1.hos_id
			  and t6.station_code = t4.station_code
		left join hos_duty t7
			   on t7.group_id = t1.group_id
			  and t7.hos_id = t1.hos_id
			  and t7.duty_code = t4.duty_code
		where exists(
				  select t8.kind_code from acc_wage_emp_kind t8
				  where t8.group_id = #{group_id} 
				    and t8.hos_id = #{hos_id}
				    and t8.copy_code = #{copy_code}
				    and t8.wage_code = #{wage_code}
				    and t8.kind_code = t3.kind_code
			  )
		  and t1.group_id = #{group_id}
		  and t1.hos_id = #{hos_id}
		  and t5.pay_type_code is not null 
		  and t1.is_stop = 0 
		  and t4.is_pay = 1 
		  and t1.is_disable = 0
    </insert>
    
	<insert id="addBatchAccWagePay" parameterType="java.util.List" >
    
        INSERT INTO ACC_WAGE_PAY_EMP (
        			pay_id
			 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    ${sql}
			 
        ) 
        select ACC_WAGE_PAY_SEQ.nextval,a.* from (
		 <foreach collection="wageList" item="item" index="index" separator=" union all " >
        select
         		
					#{item.group_id}
			 ,
                    #{item.hos_id}
			 ,
                    #{item.copy_code}
			 ,
                    #{item.wage_code}
			 ,
					#{item.acc_year}
			 ,
			 		#{item.acc_month}
			 ,
                 	#{item.emp_id}
			 ,
			 		#{item.emp_no}
			 ,
			 		#{item.dept_id}
			 ,
			 		#{item.dept_no}
			 ,
			 		#{item.kind_code}
			 ,
			 		#{item.kind_name}
			 ,
			 		#{item.pay_type_code}
			 ,
			 		#{item.pay_type_name}
			 ,
			 		#{item.station_code}
			 ,
			 		#{item.station_name}
			 ,
			 		#{item.duty_code}
			 ,
			 		#{item.duty_name}
			 ,
			 		#{item.sex}
			 ,
			 		#{item.id_number}
			 ,
			 		#{item.user_id}
			 ,
			 		#{item.create_date}
			 ,
			 		#{item.state}
			 ,
                    ${item.sqlValue}	
		
		 from dual 
		</foreach>
    ) a
    </insert>
    
    <update id="addBatchAccWagePayImport" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
        UPDATE ACC_WAGE_PAY SET
			 
			note=#{item.note},${item.sql}
			 
        WHERE 
		 wage_code = #{item.wage_code}
			  and 
		 group_id = #{item.group_id}
			  and 
		 hos_id = #{item.hos_id}
			  and 
		 copy_code = #{item.copy_code}
		 	  and 
		 acc_year = #{item.acc_year}	
			  and 
		 acc_month = #{item.acc_month}
		      and 
		 emp_id = #{item.emp_id}
		      and 
		 emp_no = #{item.emp_no}
    </foreach>
	</update>

	<update id="updateAccWagePay" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_PAY SET
        
        <!-- <if test="note != null and note != ''">
		  
		</if> -->
        note=#{note},  
        ${sqlValue}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 acc_year = #{acc_year}
		 	  and 
		 acc_month = #{acc_month}
		 	  and 
		 wage_code = #{wage_code}
		
		 <if test="emp_id != null and emp_id != ''">
		 and  emp_id = #{emp_id}  
		</if>
		<if test="dept_id != null and dept_id != ''">
		 and  dept_id = #{dept_id}  
		</if>
   		<if test="kind_code != null and kind_code != ''">
		 and  kind_code = #{kind_code}  
		</if>
		<if test="pay_code != null and pay_code != ''">
		 and  pay_type_code = #{pay_code}  
		</if>
		<if test="notes != null and notes != ''">
		 and  note = #{notes}  
		</if>
		<if test="wage_where != null and wage_where != ''">
		 and  ${wage_where}
		</if>
		<if test="wage_where1 != null and wage_where1 != ''">
		 and  ${wage_where1}
		</if>
		<if test="wage_where2 != null and wage_where2 != ''">
		 and  ${wage_where2}
		</if>
		<if test="wage_where3 != null and wage_where3 != ''">
		 and  ${wage_where3}
		</if>
		<if test="wage_where4 != null and wage_where4 != ''">
		 and  ${wage_where4}
		</if>
	</update> 
	
	<update id="updateAccWagePayOfBatch" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_PAY awp SET
        
        <!-- <if test="note != null and note != ''">
		  
		</if> -->
        ${sqlValue}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 acc_year = #{acc_year}
		 	  and 
		 acc_month = #{acc_month}
		 	  and 
		 wage_code = #{wage_code}
		
		 <if test="emp_id != null and emp_id != ''">
		 and  emp_id = #{emp_id}  
		</if>
		<if test="dept_id != null and dept_id != ''">
		 and  dept_id = #{dept_id}  
		</if>
   		<if test="kind_code != null and kind_code != ''">
		 and  kind_code in (${kind_code})  
		</if>
		<if test="pay_code != null and pay_code != ''">
		 and  pay_type_code = #{pay_code}  
		</if>
		<if test="notes != null and notes != ''">
		 and  note = #{notes}  
		</if>
		<if test="wage_where != null and wage_where != ''">
		 and  ${wage_where}
		</if>
		<if test="wage_where1 != null and wage_where1 != ''">
		 and  ${wage_where1}
		</if>
		<if test="wage_where2 != null and wage_where2 != ''">
		 and  ${wage_where2}
		</if>
		<if test="wage_where3 != null and wage_where3 != ''">
		 and  ${wage_where3}
		</if>
		<if test="wage_where4 != null and wage_where4 != ''">
		 and  ${wage_where4}
		</if>
	</update>
	
	<update id="updateBatchAccWagePay" parameterType="java.util.List">
     
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
        UPDATE ACC_WAGE_PAY a SET
			 
			${item.column_item} = ${item.cal_eng}
			 
        WHERE 
		 a.wage_code = #{item.wage_code}
			  and 
		 a.group_id = #{item.group_id}
			  and 
		 a.hos_id = #{item.hos_id}
			  and 
		 a.copy_code = #{item.copy_code}
		 	  and 
		 a.acc_year = #{item.acc_year}	
			  and 
		 a.acc_month = #{item.acc_month}
		 <if test="item.kind_code != null and item.kind_code !='' and item.kind_code !=0">
		 and  a.kind_code = #{item.kind_code}
		 </if> 
    </foreach>
	</update>
	
	<update id="extendAccWagePay" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
	        UPDATE ACC_WAGE_PAY a SET
				${item.sql}
	        WHERE a.wage_code = #{item.wage_code}
			  and a.group_id = #{item.group_id}
			  and a.hos_id = #{item.hos_id}
			  and a.copy_code = #{item.copy_code}
			  and a.acc_year = #{item.acc_year}	
			  and a.acc_month = #{item.acc_month}
			 <if test="item.emp_id != null and item.emp_id != ''">
			  and a.emp_id = #{item.emp_id}
			  </if>
	    </foreach>
	</update>
	
	<update id="updateAccWagePayByEmpDict" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_PAY SET
         <if test="kind_code != null and kind_code != ''">
        kind_code = #{kind_code}
        </if>
         <if test="kind_name != null and kind_name != ''">
         ,kind_name = #{kind_name} 
        </if>
          <if test="dept_id != null and dept_id != ''">
         ,dept_id = #{dept_id} 
        </if>
         <if test="dept_no != null and dept_no != ''">
         ,dept_no = #{dept_no} 
        </if>
       
        <if test="emp_no != null and emp_no != ''">
         ,emp_no = #{emp_no}
        </if>
        WHERE 
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 acc_year = #{acc_year}
		 	  and 
		 acc_month = #{acc_month}
		 <if test="wage_code != null and wage_code != ''">
	   			and wage_code = #{wage_code}
	   	 </if>
	   	 and  emp_id = #{emp_id}  
	
	</update>

    <delete id="deleteAccWagePay" parameterType="java.util.Map">
   
        DELETE FROM ACC_WAGE_PAY 
        where wage_code = #{wage_code}   and
	        acc_year = #{acc_year}     and 
	        acc_month = #{acc_month}   and 
	        group_id = #{group_id}   and 
	        hos_id = #{hos_id}   and 
	        copy_code = #{copy_code} 
	   		<if test="emp_id != null and emp_id != ''">
	   			and emp_id = #{emp_id} 
	   		</if>
    </delete>
    
    <delete id="deleteBatchAccWagePay" parameterType="java.util.List">
        DELETE FROM ACC_WAGE_PAY WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			wage_code = #{item.wage_code}   and
	        acc_year = #{item.acc_year}     and 
	        acc_month = #{item.acc_month}   and 
	        pay_id =#{item.pay_id}     and 
	        group_id = #{item.group_id}   and 
	        hos_id = #{item.hos_id}   and 
	        copy_code = #{item.copy_code} 
		</foreach>
        
   
    </delete>
    
    <select id="queryAccWagePayByCode" resultType="com.chd.hrp.acc.entity.AccWagePay" parameterType="string" >
	  
        SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
		FROM ACC_WAGE_PAY 
		<where> 1=1
		<if test="wage_code != null and wage_code != ''">
			and wage_code = #{wage_code}   
		</if>
		<if test="acc_year != null and acc_year != ''">
		and acc_year = #{acc_year}   
		</if>
		<if test="acc_month != null and acc_month != ''">
		and acc_month = #{acc_month}   
		</if>
		<if test="emp_id != null and emp_id != ''">
		and emp_id = #{emp_id}   
		</if>
		<if test="group_id != null and group_id != ''">
		and group_id = #{group_id}   
		</if>
		<if test="hos_id != null and hos_id != ''">
		and hos_id = #{hos_id}   
		</if>
		<if test="copy_code != null and copy_code != ''">
		and copy_code = #{copy_code} 
		</if>
		</where>
	        
	</select>
	
	<select id="queryAccWagePay" parameterType="java.util.Map" resultType="java.util.Map">
		select distinct NULL group_id, 
			NULL hos_id,
			NULL copy_code,
			NULL wage_code,
			NULL acc_year,
			NULL acc_month,
			0 pay_id,
			0 emp_id,
			'合计' emp_code,
			'' emp_name,
			'' kind_code,
			'' kind_name,
			0 dept_id,
			'' dept_code,
			'' dept_name,
			'' pay_type_code,
			'' pay_type_name,
			'' pay_state,
			'' note,
			'' id_number 
			${sum_item}
		from acc_wage_pay awp
		left join hos_emp_dict hed 
			   on awp.group_id = hed.group_id
			  and awp.hos_id = hed.hos_id
			  and awp.emp_id = hed.emp_id
			  and awp.emp_no = hed.emp_no
		left join hos_emp_kind hek 
			   on awp.group_id = hek.group_id
			  and awp.hos_id = hek.hos_id
			  and awp.kind_code = hek.kind_code
		left join acc_emp_attr aea 
			   on aea.group_id = awp.group_id
			  and aea.hos_id = awp.hos_id
			  and aea.emp_id = awp.emp_id
		left join hos_dept_dict hdd 
			   on awp.group_id = hdd.group_id
			  and awp.hos_id = hdd.hos_id
			  and awp.dept_id = hdd.dept_id
			  and awp.dept_no = hdd.dept_no
		left join acc_emp_pay apt 
			   on awp.group_id = apt.group_id 
			  and awp.hos_id = apt.hos_id
			  and awp.pay_type_code = apt.pay_type_code 
		<where>  
			<if test="scheme_id != null and scheme_id != ''">
				exists(
					<!-- 与职工关联 -->
					select awsk.emp_id from acc_wage_scheme_kind awsk
					where awsk.emp_id = awp.emp_id
					  and awsk.scheme_id = #{scheme_id, jdbcType=INTEGER}
					<!-- 与职工分类关联 -->
<!-- 					select kind_code from acc_wage_s_kind awsk  -->
<!-- 					where awp.kind_code = awsk.kind_code  -->
<!-- 			          and awsk.scheme_id = #{scheme_id} -->
			    )    
			</if>           
            <if test="group_id != null and group_id != ''">
                AND awp.group_id = #{group_id}
            </if>
			<if test="hos_id != null and hos_id != ''">
                AND awp.hos_id = #{hos_id}
            </if>
			<if test="copy_code != null and copy_code != ''">
                AND awp.copy_code = #{copy_code}
            </if>
            <if test="attr_code != null and attr_code != ''">
                AND awp.attr_code = #{attr_code}
            </if>
			<if test="wage_code != null and wage_code != ''">
                AND awp.wage_code = #{wage_code}
               <!--  and awp.emp_id in (select t0.emp_id from acc_wage_emp t0
                                   where t0.group_id = awp.group_id
                                     and t0.hos_id = awp.hos_id
                                     and t0.copy_code = awp.copy_code
                                     and t0.wage_code = awp.wage_code) -->
            </if>
            <if test="kind_code != null and kind_code != ''">
                AND awp.kind_code in (${kind_code})
            </if>
            <if test="dept_code != null and dept_code != ''">
                AND hdd.dept_id = #{dept_code}
            </if>
            <if test="emp_code != null and emp_code != ''">
                AND (
                	hed.emp_code like '%${emp_code}%' or 
                	hed.emp_name like '%${emp_code}%' or  
                	hed.spell_code like '%${emp_code}%' or  
                	hed.wbx_code like '%${emp_code}%'
                )
            </if>
            <if test="dept_kind != null and dept_kind != ''">
                AND hdd.kind_code = #{dept_kind}
            </if>
            <if test="station_code != null and station_code != ''">
                AND awp.station_code = #{station_code}
            </if>
            <if test="duty_code != null and duty_code != ''">
                AND awp.duty_code = #{duty_code}
            </if>
            <if test="id_number != null and id_number != ''">
                AND awp.id_number = #{id_number}
            </if>
            <if test="countries_code != null and countries_code != ''">
                AND aea.countries_code = #{countries_code}
            </if>
            <if test="pay_type_code != null and pay_type_code != ''">
                AND awp.pay_type_code = #{pay_type_code}
            </if>
            <if test="acc_year != null and acc_year != ''">
                AND awp.acc_year = #{acc_year}
            </if>
            <if test="acc_month != null and acc_month != ''">
                AND awp.acc_month = #{acc_month}
            </if>
            <if test="item_name != null and item_name != ''">
                AND ${item_name} 
            </if>
            <if test="item_name1 != null and item_name1 != ''">
                AND ${item_name1}
            </if>
            <if test="item_name2 != null and item_name2 != ''">
                AND ${item_name2} 
            </if>
            <if test="item_name3 != null and item_name3 != ''">
                AND ${item_name3}
            </if>
            <if test="item_name4 != null and item_name4 != ''">
                AND ${item_name4}
            </if>
			<if test="note != null and note != ''">
                AND  awp.note like  '%'||#{note}||'%'
            </if>
        </where> 
		union all
		select * from (
	        select awp.group_id,
	               awp.hos_id,
	               awp.copy_code,
	               awp.wage_code, 
	               awp.acc_year, 
	               awp.acc_month, 
	               awp.pay_id,
	               hed.emp_id,
	               hed.emp_code,
	               hed.emp_name,
	               hek.kind_code,
	               hek.kind_name,
	               hdd.dept_id,
	               hdd.dept_code,
			       hdd.dept_name,
			       apt.pay_type_code,
			       apt.pay_type_name,
			       to_char(awp.pay_state) pay_state,
			       awp.note,awp.id_number ${item_code}
			from acc_wage_pay awp 
		    left join hos_emp_dict hed 
		           on awp.group_id = hed.group_id
			      and awp.hos_id = hed.hos_id
			      and awp.emp_id = hed.emp_id
			      and awp.emp_no = hed.emp_no
			left join hos_emp_kind hek 
			       on awp.group_id = hek.group_id
			      and awp.hos_id = hek.hos_id
			      and awp.kind_code = hek.kind_code
			left join acc_emp_attr aea 
			       on aea.group_id = awp.group_id
			      and aea.hos_id = awp.hos_id
			     and aea.emp_id = awp.emp_id
			left join hos_dept_dict hdd 
			       on awp.group_id = hdd.group_id
			      and awp.hos_id = hdd.hos_id
			      and awp.dept_id = hdd.dept_id
			      and awp.dept_no = hdd.dept_no
			left join acc_emp_pay apt 
			       on awp.group_id = apt.group_id 
			      and awp.hos_id = apt.hos_id
			      and awp.pay_type_code = apt.pay_type_code 
            <where>  
            	<if test="scheme_id != null and scheme_id != ''">   
             		exists(
				     	<!-- 与职工关联 -->
			         	select awsk.emp_id from acc_wage_scheme_kind awsk
			         	where awsk.emp_id = awp.emp_id
			              and awsk.scheme_id = #{scheme_id, jdbcType=INTEGER}
			         	<!-- 与职工分类关联 -->
<!-- 				         select kind_code from acc_wage_s_kind awsk  -->
<!-- 				         where awp.kind_code = awsk.kind_code  -->
<!-- 				           and awsk.scheme_id = #{scheme_id} -->
					)  
				</if>                 
			    <if test="group_id != null and group_id != ''">
                    AND awp.group_id = #{group_id}
                </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awp.hos_id = #{hos_id}
                </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awp.copy_code = #{copy_code}
                </if>
                <if test="attr_code != null and attr_code != ''">
                AND awp.attr_code = #{attr_code}
            	</if>
			    <if test="wage_code != null and wage_code != ''">
                    AND awp.wage_code = #{wage_code} 
                   <!--  and awp.emp_id in (select t0.emp_id from acc_wage_emp t0
                                       where t0.group_id = awp.group_id
                                         and t0.hos_id = awp.hos_id
                                         and t0.copy_code = awp.copy_code
                                         and t0.wage_code = awp.wage_code) -->
                </if>
                <if test="kind_code != null and kind_code != ''">
                    AND awp.kind_code in (${kind_code})
                </if>
                <if test="dept_code != null and dept_code != ''">
                    AND hdd.dept_id = #{dept_code}
                </if>
                <if test="emp_code != null and emp_code != ''">
                    AND (
                        hed.emp_code like '%${emp_code}%' or 
                        hed.emp_name like '%${emp_code}%' or  
                        hed.spell_code like '%${emp_code}%' or  
                        hed.wbx_code like '%${emp_code}%'
                    )
                </if>
                <if test="dept_kind != null and dept_kind != ''">
                    AND hdd.kind_code = #{dept_kind}
                </if>
                <if test="station_code != null and station_code != ''">
                    AND awp.station_code = #{station_code}
                </if>
                <if test="duty_code != null and duty_code != ''">
                    AND awp.duty_code = #{duty_code}
                </if>
                <if test="id_number != null and id_number != ''"> 
                    AND awp.id_number = #{id_number}
                </if>
                <if test="countries_code != null and countries_code != ''">
                    AND aea.countries_code = #{countries_code}
                </if>
                <if test="pay_type_code != null and pay_type_code != ''">
                    AND awp.pay_type_code = #{pay_type_code}
                </if>
                <if test="acc_year != null and acc_year != ''">
                    AND awp.acc_year = #{acc_year}
                </if>
                <if test="acc_month != null and acc_month != ''">
                    AND awp.acc_month = #{acc_month}
                </if>
                <if test="item_name != null and item_name != ''">
                    AND ${item_name} 
                </if>
                <if test="item_name1 != null and item_name1 != ''">
                    AND ${item_name1}
                </if>
                <if test="item_name2 != null and item_name2 != ''">
                    AND ${item_name2} 
                </if>
                <if test="item_name3 != null and item_name3 != ''">
                    AND ${item_name3}
                </if>
                <if test="item_name4 != null and item_name4 != ''">
                    AND ${item_name4}
                </if>
				<if test="note != null and note != ''">
                    AND  awp.note like   '%'||#{note}||'%'
                </if>
			</where> 
			order by hed.emp_code
		)
    </select>
    
    <select id="queryAccWagePayGrid" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.column_item,
			case 
				when a.column_item='sex' then '职工性别' 
				when a.column_item='kind_code' then '职工分类' 
				when a.column_item='dept_code' then '部门编码'
				when a.column_item='dept_name' then '部门名称' 
				when a.column_item='pay_type_code' then '发放方式'
				when a.column_item='id_number' then '身份证号' 
				when a.column_item='station_code' then '岗位'
				when a.column_item='duty_code' then '职务'
				when a.column_item='note' then '备注'  
			else b.item_name end item_name,
			b.is_sum
		FROM (
			select item_name,column_item,is_sum 
			from acc_wage_item awi 
			<where>   
				awi.is_stop=0
				<if test="group_id != null and group_id != ''">
					AND awi.group_id = #{group_id}
				</if>
				<if test="hos_id != null and hos_id != ''">
					AND awi.hos_id = #{hos_id}
				</if>
				<if test="copy_code != null and copy_code != ''">
					AND awi.copy_code = #{copy_code}
				</if>
				<if test="wage_code != null and wage_code != ''">
					AND awi.wage_code = #{wage_code}
				</if>
				<if test="acc_year != null and acc_year != ''">
					AND awi.acc_year= #{acc_year}
				</if>
				<if test="kind_code != null and kind_code != ''">
                    AND awi.kind_code = #{kind_code}
				</if>
			</where> 
        ) b 
        left join ACC_WAGE_SCHEME_ITEM a 
			   on a.column_item=b.column_item
		<where>   
			<if test="scheme_id != null and scheme_id != '' ">
				scheme_id = #{scheme_id}
			</if>
		</where>   
		order by a.detail_id asc
    </select>
    
    <select id="queryAccWageItemGrid" parameterType="java.util.Map" resultType="java.util.Map" >
      
        select 
        awi.column_item,
        awi.item_name,
        awi.is_sum,
        awi.item_nature,
        awi.item_type 
        from  acc_wage_item awi 
		<where>
			awi.is_stop='0'                     
			<if test="group_id != null and group_id != ''">
				AND awi.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND awi.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND awi.copy_code = #{copy_code}
			</if>
			<if test="wage_code != null and wage_code != ''">
				AND awi.wage_code = #{wage_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND awi.acc_year = #{acc_year}
			</if>
		</where>
		order by awi.sort_code asc
    </select>
    
    <select id="queryEmpByWageCode"  parameterType="java.util.Map" resultMap="accWagePay">
    
	 select 
   hed.emp_id,
   hed.emp_no,
   hed.emp_name,
   apt.pay_type_code,
   apt.pay_type_name,
   hdd.dept_id,
   hdd.dept_no,
   hdd.dept_name,
   hek.kind_code,
   hek.kind_name,
   hs.station_code,
   hs.station_name,
   hd.duty_code,
   hd.duty_name,
   aea.sex,
   aea.id_number,
   aea.note
   from  
   hos_emp_dict hed left join acc_emp_attr aea on hed.group_id = aea.group_id and hed.hos_id = aea.hos_id and 
   hed.emp_id = aea.emp_id left join ACC_EMP_PAY apt on aea.group_id = apt.group_id
   and aea.hos_id = apt.hos_id AND aea.pay_type_code = apt.pay_type_code left join 
   hos_station hs on aea.group_id= hs.group_id and aea.hos_id = hs.hos_id  and aea.station_code = hs.station_code
   left join hos_duty hd on aea.group_id = hd.group_id and aea.hos_id = hs.hos_id and aea.duty_code = hd.duty_code
   left join hos_dept_dict hdd on hed.dept_id = hdd.dept_id and hed.dept_no = hdd.dept_no and  hed.group_id = hdd.group_id
   and hed.hos_id = hdd.hos_id left join hos_emp_kind hek on hed.group_id = hek.group_id and hed.hos_id = hek.hos_id
   and hed.kind_code = hek.kind_code 
	 <where>
	 		hed.is_stop = 0
	 		<if test="group_id != null and group_id != ''">
                AND hed.group_id = #{group_id}
            </if>
			<if test="hos_id != null and hos_id != ''">
                AND hed.hos_id = #{hos_id}
            </if>
            <if test="emp_id != null and emp_id != ''">
                AND hed.emp_id = #{emp_id}
            </if>
	 </where>
	 order by hed.emp_id
    </select>
    
    <select id="queryAccWageItemPay" parameterType="java.util.Map" resultType="java.util.Map" >
      
        select awi.item_code, awi.item_name，awsi.column_item  
		from ACC_WAGE_SCHEME_ITEM awsi
 		left join acc_wage_item awi 
 		on awsi.column_item = awi.column_item
            <where>   
             awsi.column_item like upper('item%')                  
			    <if test="group_id != null and group_id != ''">
                    AND awi.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awi.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awi.copy_code = #{copy_code}
               </if>
               <if test="wage_code != null and wage_code != ''">
                    AND awi.wage_code = #{wage_code}
               </if>
               <if test="acc_year != null and acc_year != ''">
                    AND awi.acc_year = #{acc_year}
               </if>
        </where>   
				order by awi.item_code asc
    </select>
    
    <select id="queryAccWageItemPayOfCalName" parameterType="java.util.Map" resultType="java.util.Map" >
      
        select 
        awi.column_item,awic.cal_eng,awi.item_cal
        from acc_wage_item awi left join acc_wage_item_cal awic 
        on awi.wage_code = awic.wage_code
		and awi.item_code = awic.item_code and 
		awi.group_id = awic.group_id and 
		awi.hos_id = awic.hos_id and awi.copy_code = awic.copy_code
		and awi.acc_year = awic.acc_year 
		and  awi.wage_code = awic.wage_code
            <where>   
             	awi.is_stop = 0         
			    <if test="group_id != null and group_id != ''">
                    AND awi.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awi.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awi.copy_code = #{copy_code}
               </if>
               <if test="wage_code != null and wage_code != ''">
                    AND awi.wage_code = #{wage_code}
               </if>
               <if test="acc_year != null and acc_year != ''">
                    AND awi.acc_year = #{acc_year}
               </if>
               <if test="item_code != null and item_id != ''">
                    AND awi.item_code = #{item_code}
               </if>
        </where>   
				order by awi.item_cal asc
    </select>
    
    <select id="queryAccEmpDetail" parameterType="java.util.Map" resultMap="accWagePay" >
      
        select hed.emp_id,hed.emp_no,hed.dept_id,hed.dept_no,aea.pay_type_code,apt.pay_type_name,
		aea.station_code,hs.station_name,aea.duty_code,hd.duty_name,aea.sex,aea.id_number,
		hed.kind_code,hek.kind_name
		from ${sql}
		left join acc_emp_attr aea on hed.group_id = aea.group_id
		and hed.hos_id = aea.hos_id and hed.emp_id = aea.emp_id 
		left join acc_emp_pay apt on 
		aea.group_id = apt.group_id and aea.hos_id= apt.hos_id and aea.pay_type_code = apt.pay_type_code
		left join hos_station hs on aea.group_id = hs.group_id and aea.hos_id = hs.hos_id 
		and aea.station_code = hs.station_code 
		left join  hos_duty hd on aea.group_id = hd.group_id
		and aea.hos_id = hd.hos_id and aea.duty_code = hd.duty_code 
		left join hos_emp_kind hek on
		hed.group_id = hek.group_id and hed.hos_id=hek.hos_id and hed.kind_code = hek.kind_code
		   <where>   
             	<!-- hed.is_stop = 0 and apt.is_stop =0 and hs.is_stop=0 and hd.is_stop=0 and hek.is_stop=0 -->             
			    ${sqlWhere}
			    <if test="group_id != null and group_id != ''">
                    AND hed.group_id = #{group_id}
               </if>
			   <if test="hos_id != null and hos_id != ''">
                    AND hed.hos_id = #{hos_id}
               </if>
               <if test="emp_code != null and emp_code != '' ">
                    AND hed.emp_code = #{emp_code}
               </if>
               <if test="acc_year != null and acc_year != '' ">
                    AND awe.acc_year = #{acc_year}
               </if>
               <if test="acc_month != null and acc_month != '' ">
                    AND awe.acc_month = #{acc_month}
               </if>
        </where>   
				order by hed.emp_id asc
    </select>
    
    <select id="queryAccWageItemSum" resultType="java.util.Map" parameterType="string" >
	  
        SELECT 
            ${sql}
		FROM ACC_WAGE_PAY 
		<where>
			<if test="wage_where != null and wage_where != ''">
				wage_code in(${wage_where}) and
			</if>
			<if test="acc_year != null and acc_year != ''">
			acc_year = #{acc_year}   and
			</if>
			<if test="acc_month != null and acc_month != ''">
			acc_month = #{acc_month}   and
			</if>
			<if test="emp_id != null and emp_id != ''">
			emp_id = #{emp_id}   and
			</if>
			<if test="group_id != null and group_id != ''">
			group_id = #{group_id}   and
			</if>
			<if test="hos_id != null and hos_id != ''">
			hos_id = #{hos_id}   and
			</if>
			<if test="copy_code != null and copy_code != ''">
			copy_code = #{copy_code} 
			</if>
		</where>
	        
	</select>
	
	<select id="queryAccWagePayByMod" parameterType="java.util.Map" resultMap="accWagePay" >
      
        select 
        wage_code
		from acc_wage_pay
		   <where>   
             	
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
               <if test="copy_code != null and copy_code != '' ">
                    AND copy_code = #{copy_code}
               </if>
              <if test="acc_year != null and acc_year != '' ">
                    AND acc_year = #{acc_year}
               </if>
        </where>   
				order by wage_code asc
    </select>
    
    <select id="queryAccSchemeEmpKindList" parameterType="java.util.Map" resultMap="map" >
      
        SELECT hek.kind_code id,hek.kind_name text
	    FROM ACC_WAGE_SCHEME_KIND awsk
	    left join  hos_emp_kind hek
	    on awsk.kind_code = hek.kind_code
		   <where>   
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
               
              <if test="scheme_id != null and scheme_id != '' ">
                    AND scheme_id = #{scheme_id}
               </if>
        </where>   
				order by hek.kind_code asc
    </select>
    <select id="queryAccSchemeWageItemList" parameterType="java.util.Map" resultMap="map" >
      
        SELECT a.column_item id,
		case when a.column_item='sex' then '职工性别' 
		     when a.column_item='kind_code' then '职工分类' 
		     when a.column_item='dept_code' then '部门编码'
		     when a.column_item='dept_name' then '部门名称' 
		     when a.column_item='pay_type_code' then '发放方式'
		     when a.column_item='id_number' then '身份证号' 
		     when a.column_item='station_code' then '岗位'
		     when a.column_item='duty_code' then '职务'
		     when a.column_item='note' then '备注'  
		  else b.item_name end text
		FROM ACC_WAGE_SCHEME_ITEM a left join (select item_name,column_item from acc_wage_item 
		<where>   
			    <if test="group_id != null and group_id != ''">
                    AND group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND hos_id = #{hos_id}
               </if>
              <if test="copy_code != null and copy_code != '' ">
                    AND copy_code = #{copy_code}
               </if>
        </where> ) b
		on a.column_item=b.column_item
		   <where>   
              <if test="scheme_id != null and scheme_id != '' ">
                     scheme_id = #{scheme_id}
               </if>
        </where>   
				order by a.column_item asc
    </select>
    
    <select id="queryAccWagePayByLastMonth" parameterType="java.util.Map" resultType="java.lang.Integer" >
        select count(*)
        from  acc_wage_pay 
        where group_id = #{group_id}
          AND hos_id = #{hos_id}
          AND copy_code = #{copy_code}
          AND wage_code = #{wage_code}
          AND acc_year = #{act_year}
          AND to_number(acc_month) = #{act_month}
    </select>
    
    <select id="queryAccWagePayByColumn" resultType="com.chd.hrp.acc.entity.AccWagePay" parameterType="string" >
	  
        SELECT 
            emp_id,to_char(${column_item}) note
            
		FROM ACC_WAGE_PAY 
		
		where 
		
		wage_code = #{wage_code}   and
		
		acc_year = #{acc_year}   and
		
		acc_month =#{acc_month} and
		
		group_id = #{group_id}   and

		hos_id = #{hos_id}   and
		
		copy_code = #{copy_code} 
	</select>
	
	<select id="queryAccWagePayTree" parameterType="java.util.Map" resultMap="accWagePay" >
		select aw.wage_code,
			aw.wage_name,
			to_char(wm_concat(aws.scheme_id)) scheme_id,
			to_char(wm_concat(aws.scheme_code)) scheme_code,
			to_char(wm_concat(aws.scheme_name)) scheme_name 
		from acc_wage aw 
		left join acc_wage_scheme aws
			   on aw.group_id = aws.group_id 
			  and aw.hos_id = aws.hos_id
			  and aw.copy_code = aws.copy_code 
			  and aw.wage_code = aws.wage_code
			<if test="scheme_type_code != null and scheme_type_code != ''">
				AND aws.scheme_type_code = #{scheme_type_code}
			</if>
		<where>
			<if test="group_id != null and group_id != ''">
				AND aw.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND aw.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != '' ">
				AND aw.copy_code = #{copy_code}
			</if>
			<if test="scheme_code != null and scheme_code != '' ">
				AND aws.scheme_id = #{scheme_code}
			</if>
			<if test="wage_code != null and wage_code != '' ">
				AND aw.wage_code = #{wage_code}
			</if>
		</where>   
		group by aw.wage_code,aw.wage_name
    </select>
    
    <select id="queryAccEmpTetail" parameterType="java.util.Map" resultMap="accWagePay" >
		select hed.emp_id,
			   hed.emp_no,
			   hed.emp_code,
			   hed.emp_name,
			   hdd.dept_name 
		from acc_wage_pay awe
		left join hos_emp_dict hed on awe.group_id = hed.group_id
		and awe.hos_id = hed.hos_id
		and awe.emp_id = hed.emp_id
		and awe.emp_no = hed.emp_no
		left join acc_emp_attr aea on hed.group_id = aea.group_id
		and hed.hos_id = aea.hos_id
		and hed.emp_id = aea.emp_id
		 and aea.is_pay=1
			left join hos_dept_dict hdd on hed.group_id = hdd.group_id
		and hed.hos_id = hdd.hos_id
		and hed.dept_id = hdd.dept_id
		and hed.dept_no = hdd.dept_no
	     	  and hdd.is_stop = '0'
		<where>   
			and hed.is_stop = 0
			<!-- and hed.is_disable = 0 -->
	        <!-- <if test="scheme_type_code != null and scheme_id != ''">
	            and hed.emp_id not in (select emp_id from acc_wage_scheme_kind awsk
		        left join acc_wage_scheme aws
		        on awsk.scheme_id=aws.scheme_id
	             where  awsk.scheme_id = #{scheme_id}
	             )
	        </if> -->
	        <if test="scheme_type_code != null and scheme_type_code != ''">
	            and hed.emp_id not in (select emp_id from acc_wage_scheme_kind awsk
		        left join acc_wage_scheme aws
		        on awsk.scheme_id=aws.scheme_id
	             where  aws.scheme_type_code= #{scheme_type_code}
	             and awsk.scheme_id = #{scheme_id}
	             )
	        </if>
			<if test="group_id != null and group_id != ''">
	            AND awe.group_id = #{group_id}
	        </if>
			<if test="hos_id != null and hos_id != ''">
	            AND awe.hos_id = #{hos_id}
	        </if>
	        <if test="copy_code != null and copy_code != '' ">
	            AND awe.copy_code = #{copy_code}
	        </if>
	        <if test="acc_year != null and acc_year != '' ">
	            AND awe.acc_year = #{acc_year}
	        </if>
	        <if test="kind_code != null and kind_code != '' ">
	            AND hed.kind_code = #{kind_code}
	        </if>
	        <if test="dept_kind != null and dept_kind != '' ">
	            AND hdd.kind_code = #{dept_kind}
	        </if>
	        <if test="dept_code != null and dept_code != '' ">
	            AND hed.dept_id = #{dept_code}
	        </if>
	        <if test="emp_code != null and emp_code != '' ">
	            AND hed.emp_id = #{emp_code}
	        </if>
	        <if test="station_code != null and station_code != '' ">
	            AND aea.station_code = #{station_code}
	        </if>
	        <if test="duty_code != null and duty_code != '' ">
	            AND aea.duty_code = #{duty_code}
	        </if>
	        <if test="wage_code != null and wage_code != '' ">
	            AND awe.wage_code = #{wage_code}
	        </if>
	    </where>
	     group by hed.emp_id, hed.emp_no, hed.emp_code, hed.emp_name, hdd.dept_name
		order by hed.emp_code
    </select> 
    
    <select id="extendAccEmpDetail" parameterType="java.util.Map" resultType="java.util.Map" >
      
	      select 
             emp_id,emp_no,note,${sql}
             <if test="jbgz_value != null and jbgz_value != ''">
                    ,${jbgz_value}
             </if>
             <if test="jcxbt_value != null and jcxbt_value != ''">
                    ,${jcxbt_value}
             </if>
             <if test="yf_value != null and yf_value != ''">
                    ,${yf_value}
             </if>
             <if test="kf_value != null and kf_value != ''">
                    ,${kf_value}
             </if>
             <if test="sf_value != null and sf_value != ''">
                    ,${sf_value}
             </if>
             <if test="qt_value != null and qt_value != ''">
                    ,${qt_value}
             </if>
             from acc_wage_pay
		 where  group_id = #{group_id}
	               
	           AND hos_id = #{hos_id}
	               
	           AND copy_code = #{copy_code}
	              
	           AND wage_code = #{wage_code}
	              
	           AND emp_id = #{emp_id}
	              
	           <choose>
			        <when test="accYearMonth !=null and accYearMonth != '' and acc_year !=null and acc_year != ''">
			            AND acc_year||'.'||to_number(acc_month) between #{acc_year} and #{accYearMonth}
			        </when>
			        <otherwise>
			           AND acc_year||'.'||to_number(acc_month)=#{acc_year}
			        </otherwise>
			    </choose>
<!-- 		group by  emp_id,emp_no,note -->
    </select>
	
	<select id="collectAccWagePay" statementType="CALLABLE" parameterType="java.util.Map" >
		<![CDATA[ {call PKG_WAGE_CAL.prc_WageCalcWage(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{acc_year,jdbcType=VARCHAR, mode=IN},
	        #{acc_month,jdbcType=VARCHAR, mode=IN},
	        #{wage_code,jdbcType=VARCHAR, mode=IN},
	        #{prm_AppCode,jdbcType=INTEGER,mode=OUT},
	        #{prm_ErrTxt,jdbcType=VARCHAR,mode=OUT}
        )} 
		 ]]>
	</select>
	
	<select id="collectAccWagePayByPerson" statementType="CALLABLE" parameterType="java.util.Map" >
		<![CDATA[ {call PKG_WAGE_CAL.prc_WageCalcSingle(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{acc_year,jdbcType=VARCHAR, mode=IN},
	        #{acc_month,jdbcType=VARCHAR, mode=IN},
	        #{wage_code,jdbcType=VARCHAR, mode=IN},
	        #{emp_id,jdbcType=VARCHAR, mode=IN},
	        #{prm_AppCode,jdbcType=INTEGER,mode=OUT},
	        #{prm_ErrTxt,jdbcType=VARCHAR,mode=OUT}
        )} 
		 ]]>
	</select>
	
	<select id="queryWageByExtend"  parameterType="java.util.Map" resultMap="accWagePay">
    
	 select 
   	 		  group_id
			 ,
              hos_id
			 ,
              copy_code
			 ,
              wage_code
			 ,
			  acc_year
			 ,
			  acc_month
			 ,
              emp_id
			 ,
			  emp_no
			 ,
			  dept_id
			 ,
			  dept_no
			 ,
			  kind_code
			 ,
			  kind_name
			 ,
			  pay_type_code
			 ,
			  pay_type_name
			 ,
			  station_code
			 ,
			  station_name
			 ,
			  duty_code
			 ,
			  duty_name
			 ,
			  sex
			 ,
			  id_number
			 ,
			  user_id
			 ,
			  create_date
			 ,
			  state
		     ,note
		     ,${sql}
		   from  acc_wage_pay
		where group_id = #{group_id} and hos_id = #{hos_id} and copy_code = #{copy_code}
	     AND acc_year = #{acc_year} AND acc_month = #{acc_month} AND wage_code in (${wage_where})
	     and state =1
    </select>
    
    <select id="queryAccWageCulumn" parameterType="java.util.Map" resultType="java.util.Map">
      
      SELECT 
      awi.column_item
		FROM acc_wage_item awi 
		   <where>   
		   		<if test="scheme_id != null and scheme_id != ''">
		   		exists (select awsi.column_item from acc_wage_scheme_item awsi 
				 where awi.column_item=awsi.column_item and awsi.scheme_id = #{scheme_id})
		   		</if>
			    <if test="group_id != null and group_id != ''">
                    AND awi.group_id = #{group_id}
               </if>
			    <if test="hos_id != null and hos_id != ''">
                    AND awi.hos_id = #{hos_id}
               </if>
			    <if test="copy_code != null and copy_code != ''">
                    AND awi.copy_code = #{copy_code}
               </if>
               <if test="wage_code != null and wage_code != ''">
                    AND awi.wage_code = #{wage_code}
               </if>
               <if test="acc_year != null and acc_year != ''">
                    AND awi.acc_year= #{acc_year}
               </if>
               <if test="item_name != null and item_name != ''">
                    AND awi.item_name= #{item_name}
               </if>
        </where>    
			
    </select>
    
    <update id="auditBatchAccWagePay" parameterType="java.util.Map">
    
        UPDATE ACC_WAGE_PAY SET
        
        pay_state=#{pay_state}
			 
        WHERE 
        
		 group_id = #{group_id}
			  and 
		 hos_id = #{hos_id}
			  and 
		 copy_code = #{copy_code}
		 	  and 
		 acc_year = #{acc_year}
		 	  and 
		 acc_month = #{acc_month}
		 	  and 
		 wage_code = #{wage_code}
		
		 <if test="emp_id != null and emp_id != ''">
		 and  emp_id = #{emp_id}  
		</if>
   
	</update>
	
	 <select id="queryAccWagePayByItemCal" parameterType="java.util.Map" resultType="java.util.Map">
      
      SELECT <!-- distinct -->
      ${select_cal}
		FROM acc_wage_pay awp left join acc_emp_attr aea on awp.group_id = aea.group_id 
		   and awp.hos_id = aea.hos_id and awp.emp_id = aea.emp_id 
		   left join hos_emp_dict hed on awp.group_id = hed.group_id 
		   and awp.hos_id = hed.hos_id and awp.emp_id = hed.emp_id 
		   where rownum = 1 
    </select>
    
    <select id="queryAccWagePayByDept" parameterType="java.util.Map" resultMap="accWagePay">
      
      SELECT awp.emp_id FROM acc_wage_pay awp left join acc_dept_attr ada
      on awp.group_id = ada.group_id and awp.hos_id=ada.hos_id 
      and awp.dept_id=ada.dept_id
       where  awp.group_id = #{group_id} and  awp.hos_id = #{hos_id}
		and  awp.copy_code = #{copy_code}  and  awp.acc_year = #{acc_year} and awp.acc_month = #{acc_month}
		 and awp.wage_code = #{wage_code}  
		<if test="dept_id != null and dept_id != ''">
		 and  awp.dept_id = #{dept_id}  
		</if>
		<if test="kind_code != null and kind_code != ''">
		 and  awp.kind_code in(${kind_code})
		</if>
		<if test="out_code != null and out_code != ''">
		 and  ada.out_code = #{out_code}  
		</if>
		 group by awp.emp_id
    </select>
    
    <select id="checkEmpNameAndCode" parameterType="java.util.Map" resultType="java.lang.Integer">
    	select count(1) from hos_emp_dict where group_id = #{group_id} and hos_id=#{hos_id} and emp_code=#{emp_code} and emp_name=#{emp_name}
    </select>
    
    <select id="extendAccEmpDetailByQuery" parameterType="java.util.Map" resultType="java.util.Map" >
		select emp_id, emp_no, note, ${sql}
        from (select * from acc_wage_pay
              where group_id = #{group_id}
	            AND hos_id = #{hos_id}
	            AND copy_code = #{copy_code}
	            AND wage_code = #{wage_code}
	            AND emp_id = #{emp_id}
	            AND acc_year||'.'||to_number(acc_month) &lt;= #{acc_year}
	          order by acc_year desc, acc_month desc)
		 where group_id = #{group_id}
	       AND hos_id = #{hos_id}
	       AND copy_code = #{copy_code}
	       AND wage_code = #{wage_code}
	       AND emp_id = #{emp_id}
	       and rownum=1
    </select>
    
    <insert id="addAccWagePayByWageExtend" useGeneratedKeys="false" >
    
        INSERT INTO ACC_WAGE_PAY (
                   pay_id
			 ,
                    group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
       		 ,
           			pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state
			 ,
                    note
             ,       
             		attr_code
             ,${addSql}
			 
        ) 
        select ACC_WAGE_PAY_SEQ.nextval
        	 ,
	    			awp.group_id
			 ,
                    awp.hos_id
			 ,
                    awp.copy_code
			 ,
                    #{wage_code}
			 ,
					 #{acc_year} 
			 ,
			 		 #{acc_month} 
			 ,
                 	hed.emp_id
			 ,
			 		hed.emp_no
			 ,
			 		hdd.dept_id
			 ,
			 		hdd.dept_no
			 ,
			 		hek.kind_code
			 ,
			 		hek.kind_name
			 ,
			 		apt.pay_type_code
			 ,
			 		apt.pay_type_name
			 ,
			 		hs.station_code
			 ,
			 		hs.station_name
			 ,
			 		hd.duty_code
			 ,
			 		hd.duty_name
			 ,
			 		aea.sex
			 ,
			 		aea.id_number
			 ,
			 		awp.user_id
			 ,
			 		awp.create_date
			 ,
			 		awp.state
			 , 
                    awp.note
             ,
             		aea.attr_code       
             ,     ${addSqlValue}
	   from  acc_wage_pay awp
	  	left join hos_emp_dict hed 
		           on awp.group_id = hed.group_id
			      and awp.hos_id = hed.hos_id
			      and awp.emp_id = hed.emp_id
			      and awp.emp_no = hed.emp_no
			left join hos_emp_kind hek 
			       on hed.group_id = hek.group_id
			      and hed.hos_id = hek.hos_id
			      and hed.kind_code = hek.kind_code
			left join acc_emp_attr aea 
			       on aea.group_id = awp.group_id
			      and aea.hos_id = awp.hos_id
			     and aea.emp_id = awp.emp_id
			left join ACC_ATTR_DICT aad 
			   on aea.group_id = aad.group_id
			  and aea.hos_id = aad.hos_id
			  and aea.ATTR_CODE = aad.ATTR_CODE
			left join hos_dept_dict hdd 
			       on awp.group_id = hdd.group_id
			      and awp.hos_id = hdd.hos_id
			      and awp.dept_id = hdd.dept_id
			      and hdd.is_stop=0
			      and hdd.is_disable = 0
			left join acc_emp_pay apt 
			       on awp.group_id = apt.group_id 
			      and awp.hos_id = apt.hos_id
			      and awp.pay_type_code = apt.pay_type_code 
			left join hos_station hs on aea.group_id= hs.group_id and aea.hos_id = hs.hos_id  
		   and aea.station_code = hs.station_code
		   left join hos_duty hd on aea.group_id = hd.group_id and aea.hos_id = hs.hos_id 
		   and aea.duty_code = hd.duty_code
		where not exists( select awp1.emp_id from acc_wage_pay awp1 where awp.group_id = awp1.group_id and awp.hos_id = awp1.hos_id 
		and awp.copy_code=awp1.copy_code and awp.emp_id =awp1.emp_id AND awp1.acc_year = #{acc_year} AND awp1.acc_month = #{acc_month} 
		AND awp1.wage_code =#{wage_code})
		and awp.group_id = #{group_id} and awp.hos_id = #{hos_id} and awp.copy_code = #{copy_code}
	     AND awp.acc_year = #{act_year} AND to_number(awp.acc_month) = #{act_month} AND awp.wage_code =#{wage_code}
	     and aea.is_pay =1
	     and hed.is_stop = 0 and hed.is_disable = 0
	    
    </insert>
    
    <select id="existsAccCheckEmpPayByCode" resultType="java.lang.Integer" parameterType="java.util.List">
		
		SELECT count(1) FROM ACC_WAGE_PAY
		WHERE 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">  
			group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
        	AND attr_code=#{item.old_code,jdbcType=VARCHAR} 
    	</foreach> 
		
	</select>
	
	<select id="queryWageState" parameterType="java.util.Map" resultMap="accWagePay" >
		SELECT 
            group_id
			 ,
                    hos_id
			 ,
                    copy_code
			 ,
                    wage_code
			 ,
					acc_year
			 ,
			 		acc_month
			 ,
                 	emp_id
			 ,
			 		pay_id
			 ,
			 		emp_no
			 ,
			 		dept_id
			 ,
			 		dept_no
			 ,
			 		kind_code
			 ,
			 		kind_name
			 ,
			 		pay_type_code
			 ,
			 		pay_type_name
			 ,
			 		station_code
			 ,
			 		station_name
			 ,
			 		duty_code
			 ,
			 		duty_name
			 ,
			 		sex
			 ,
			 		id_number
			 ,
			 		user_id
			 ,
			 		create_date
			 ,
			 		state, pay_state
			 ,
                    note
		FROM ACC_WAGE_PAY 
		<where> 1=1
		<if test="wage_code != null and wage_code != ''">  
			and wage_code = #{wage_code}   
		</if>
		<if test="acc_year != null and acc_year != ''">
		and acc_year = #{acc_year}   
		</if>
		<if test="acc_month != null and acc_month != ''">
		and acc_month = #{acc_month}   
		</if>
		<if test="emp_id != null and emp_id != ''">
		and emp_id = #{emp_id}   
		</if>
		<if test="group_id != null and group_id != ''">
		and group_id = #{group_id}   
		</if>
		<if test="hos_id != null and hos_id != ''">
		and hos_id = #{hos_id}   
		</if>
		<if test="copy_code != null and copy_code != ''">
		and copy_code = #{copy_code} 
		</if>
		</where>
	</select>
    
</mapper>

