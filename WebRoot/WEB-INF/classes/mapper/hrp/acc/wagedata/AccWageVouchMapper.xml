<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.acc.dao.wagedata.AccWageVouchMapper">
   
	<resultMap id="accWageVouch" type="com.chd.hrp.acc.entity.AccWageVouch">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="wage_code" column="wage_code" />
		<result property="wage_name" column="wage_name" />
		<result property="acc_year" column="acc_year" />
		<result property="scheme_code" column="scheme_code" />
		<result property="scheme_name" column="scheme_name" />
		<result property="summary" column="summary" />
		<result property="vouch_type_code" column="vouch_type_code" />
		<result property="vouch_type_name" column="vouch_type_name" />
		<result property="subj_id" column="subj_id" />
		<result property="subj_code" column="subj_code" />
		<result property="subj_name" column="subj_name" />
		<result property="is_balance" column="is_balance" />
		<result property="is_neg" column="is_neg" />
		<result property="is_assign" column="is_assign" />
		<result property="subj_dire" column="subj_dire" />
		<result property="cal_name" column="cal_name" />
		<result property="cal_eng" column="cal_eng" />
		<result property="kind_code" column="kind_code" />
		<result property="kind_name" column="kind_name" />
		<result property="subj_type_code" column="subj_type_code" />
		<result property="subj_nature_code" column="subj_nature_code" />
		<result property="is_check" column="is_check" />
		<result property="is_cash" column="is_cash" />
		<result property="column_check" column="column_check" />
		<result property="item_money" column="item_money" />
		<result property="out_code" column="out_code" />
	</resultMap>

	<resultMap type="java.util.Map" id="empMap">
		<result property="emp_id" column="emp_id" />
		<result property="emp_no" column="emp_no" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_no" column="dept_no" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
	</resultMap>

	<insert id="addAccWageVouch" useGeneratedKeys="true">

		INSERT INTO ACC_WAGE_Vouch (
			group_id		,
			hos_id		,
			copy_code		,
			acc_year		,
			scheme_code		,
			scheme_name		,
			vouch_type_code		,
			wage_code
		) VALUES (
			#{group_id}		,
			#{hos_id}		,
			#{copy_code}		,
			#{acc_year}		,
			#{scheme_code}		,
			#{scheme_name}		,
			#{vouch_type_code}		,
			#{wage_code}
		)

	</insert>

	<insert id="addBatchAccWageVouch" parameterType="java.util.List">
		INSERT INTO ACC_WAGE_Vouch_EMP (
			group_id		,
			hos_id		,
			copy_code		,
			acc_year		,
			scheme_code		,
			scheme_name		,
			summary		,
			vouch_type_code		,
			wage_code		,
			vouch_no
		)
		select ACC_WAGE_Vouch_SEQ.nextval,a.* from (
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.copy_code}			,
				#{item.acc_year}			,
				#{item.scheme_code}			,
				#{item.scheme_name}			,
				#{item.summary}			,
				#{item.vouch_type_code}			,
				#{item.wage_code}			,
				#{item.vouch_no}
			from dual
		</foreach>
		) a
	</insert>

	<insert id="addBatchAccWageVouchKind" parameterType="java.util.List">
		INSERT INTO ACC_WAGE_Vouch_Kind (
			group_id			,
			hos_id			,
			copy_code			,
			acc_year			,
			scheme_code			,
			kind_code			,
			subj_code,
			vouch_no
		)
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.copy_code}			,
				#{item.acc_year}			,
				#{item.scheme_code}			,
				#{item.kind_code}			,
				#{item.subj_code},
				#{item.vouch_no}
			from dual
		</foreach>
	</insert>

	<insert id="addBatchAccWageVouchSubj" parameterType="java.util.List">
		INSERT INTO ACC_WAGE_Vouch_Subj (
			group_id			,
			hos_id			,
			copy_code			,
			acc_year			,
			scheme_code			,
			subj_code			,
			subj_dire			,
			cal_name			,
			cal_eng			,
			is_balance			,
			is_neg			,
			is_assign			,
			summary			,
			vouch_no
		)
		select a.* from (
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select
				#{item.group_id}			,
				#{item.hos_id}			,
				#{item.copy_code}			,
				#{item.acc_year}			,
				#{item.scheme_code}			,
				#{item.subj_code}			,
				#{item.subj_dire}			,
				#{item.cal_name}			,
				#{item.cal_eng}			,
				#{item.is_balance}			,
				#{item.is_neg}			,
				#{item.is_assign}			,
				#{item.summary}			,
				#{item.vouch_no}
			from dual
		</foreach>
		) a
	</insert>

	<delete id="deleteAccWageVouchKind" parameterType="java.util.Map">
		DELETE FROM ACC_WAGE_Vouch_kind
		where acc_year = #{acc_year} and
			<if test="scheme_code != null and scheme_code != ''">
				scheme_code = #{scheme_code} and
			</if>
			group_id = #{group_id} and
			hos_id = #{hos_id} and
			copy_code = #{copy_code}
	</delete>

	<delete id="deleteAccWageVouchSubj" parameterType="java.util.Map">
		DELETE FROM ACC_WAGE_Vouch_subj
		where
			acc_year = #{acc_year} and
		<if test="scheme_code != null and scheme_code != ''">
			scheme_code = #{scheme_code} and
		</if>
			group_id = #{group_id} and
			hos_id = #{hos_id} and
			copy_code = #{copy_code}
	</delete>

	<update id="updateAccWageVouch" parameterType="java.util.Map">
		UPDATE ACC_WAGE_Vouch SET
			scheme_name = #{scheme_name},
			vouch_type_code = #{vouch_type_code},
			wage_code = #{wage_code}
		WHERE
			group_id = #{group_id}
		and hos_id = #{hos_id}
		and copy_code = #{copy_code}
		and acc_year = #{acc_year}
		and scheme_code = #{scheme_code}
	</update>
	
	<update id="updateBatchAccWageVouch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
			UPDATE ACC_WAGE_Vouch SET
				scheme_name = #{item.scheme_name},
				vouch_type_code = #{item.vouch_type_code},
				wage_code = #{item.wage_code}
			WHERE
					group_id = #{item.group_id}
				and hos_id = #{item.hos_id}
				and copy_code = #{item.copy_code}
				and acc_year = #{item.acc_year}
				and scheme_code = #{item.scheme_code}
		</foreach>
	</update>

	<delete id="deleteAccWageVouch" parameterType="java.util.Map">
		DELETE FROM ACC_WAGE_Vouch
		where acc_year = #{acc_year} and
			<if test="scheme_code != null and scheme_code != ''">
			scheme_code = #{scheme_code} and
			</if>
			group_id = #{group_id} and
			hos_id = #{hos_id} and
			copy_code = #{copy_code}
	</delete>
	
	<delete id="deleteBatchAccWageVouch" parameterType="java.util.List">
		DELETE FROM ACC_WAGE_Vouch WHERE
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			acc_year = #{item.acc_year} and
			scheme_code = #{item.scheme_code} and
			group_id = #{item.group_id} and
			hos_id = #{item.hos_id} and
			copy_code = #{item.copy_code}
		</foreach>
	</delete>

	<select id="queryAccWageVouchByCode" resultType="com.chd.hrp.acc.entity.AccWageVouch" parameterType="string">
		SELECT
			group_id		,
			hos_id		,
			copy_code		,
			acc_year		,
			scheme_code		,
			scheme_name		,
			vouch_type_code
		FROM ACC_WAGE_Vouch
		WHERE
			acc_year = #{acc_year} and
			scheme_code = #{scheme_code} and
			group_id = #{group_id} and
			hos_id = #{hos_id} and
			copy_code = #{copy_code}
	</select>
	
	<select id="queryAccWageVouch" parameterType="java.util.Map" resultMap="accWageVouch">
		select
			awv.group_id		,
			awv.hos_id		,
			awv.copy_code		,
			awv.acc_year		,
			awv.scheme_code		,
			awv.scheme_name		,
			awv.vouch_type_code		,
		<!-- avt.vouch_type_name
		, -->
			awv.wage_code		,
			(case when av.vouch_no is null then av.vouch_no  else avt.vouch_type_name||'-'||av.vouch_no end) vouch_type_name
		from acc_wage_vouch awv left join acc_vouch_type avt on awv.group_id= avt.group_id
			and awv.hos_id = avt.hos_id and awv.copy_code = avt.copy_code and awv.vouch_type_code = avt.vouch_type_code
		left join acc_vouch_source acs on awv.group_id=acs.group_id and awv.hos_id=acs.hos_id
			and awv.copy_code=acs.copy_code and awv.scheme_code=acs.busi_no
			and acs.busi_type_code = 'B001' and acs.acc_year=#{acc_year} and acs.acc_month=#{acc_month}
		left join acc_vouch av on av.group_id=acs.group_id and av.hos_id = acs.hos_id
			and av.copy_code = acs.copy_code and av.acc_year = acs.acc_year
			and av.acc_month = acs.acc_month and av.vouch_id = acs.vouch_id
		<where>
			and avt.is_stop = 0
			<if test="group_id != null and group_id != ''">
				AND awv.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND awv.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND awv.copy_code = #{copy_code}
			</if>
			<if test="wage_code != null and wage_code != ''">
				AND awv.wage_code = #{wage_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND awv.acc_year = #{acc_year}
			</if>
			<if test="scheme_code != null and scheme_code != ''">
				AND awv.scheme_code like '${scheme_code}%'
			</if>
			<if test="scheme_name != null and scheme_name != ''">
				AND awv.scheme_name like '${scheme_name}%'
			</if>
		</where>
		order by awv.scheme_code asc
	</select>

	<select id="queryAccWageVouchBySchemeCode" resultType="com.chd.hrp.acc.entity.AccWageVouch" parameterType="string">
		select
			awv.group_id		,
			awv.hos_id		,
			awv.copy_code		,
			awv.acc_year		,
			awv.scheme_code		,
			awv.scheme_name		,
			awv.vouch_type_code		,
			avt.vouch_type_name		,
			awv.wage_code,
			aw.wage_name
		from acc_wage_vouch awv left join acc_vouch_type avt on awv.group_id= avt.group_id
			and awv.hos_id = avt.hos_id and awv.copy_code = avt.copy_code 
			and awv.vouch_type_code = avt.vouch_type_code 
		left join acc_wage aw on awv.group_id= aw.group_id
			and awv.hos_id = aw.hos_id and awv.copy_code = aw.copy_code and awv.wage_code = aw.wage_code
		<where>
			and avt.is_stop = 0
			<if test="group_id != null and group_id != ''">
				AND awv.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND awv.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND awv.copy_code = #{copy_code}
			</if>
			<if test="wage_code != null and wage_code != ''">
				AND awv.wage_code = #{wage_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND awv.acc_year = #{acc_year}
			</if>
			<if test="scheme_code != null and scheme_code != ''">
				AND awv.scheme_code = #{scheme_code}
			</if>
		</where>
		order by awv.scheme_code asc
	</select>

	<select id="queryAccWageVouchSubj" parameterType="java.util.Map" resultMap="accWageVouch">
		select
			asubj.subj_code,asubj.subj_name,awvs.is_balance,awvs.is_neg,awvs.is_assign,awvs.summary,
			awvs.subj_dire,awvs.cal_name,awvs.cal_eng,replace(to_char(wm_concat(nvl(awvk.kind_code,0))),',',';') kind_code,
			( select replace(to_char(wm_concat(hek.kind_name)),',',';') from hos_emp_kind hek 
	      		where awvk.group_id = #{group_id}
					and awvk.hos_id = #{hos_id}
	    			and hek.kind_code in ( 
						select regexp_substr(replace(awvk.kind_code,';',','), '[^,]+',1,level) 
	          			from ACC_WAGE_VOUCH_kind t
          				connect by level &lt;= length(replace(awvk.kind_code,';',',')) - length(replace(replace(awvk.kind_code,';',','), ',', null)) + 1)
	    				and hek.is_stop = 0 
	        ) kind_name
		from ACC_WAGE_VOUCH awv
		left join ACC_WAGE_VOUCH_SUBJ awvs on awv.group_id = awvs.group_id 
			and awv.hos_id = awvs.hos_id and awv.copy_code = awvs.copy_code 
			and awv.acc_year = awvs.acc_year and awv.scheme_code = awvs.scheme_code
		left join ACC_WAGE_VOUCH_kind awvk on awvs.group_id = awvk.group_id
			and awvs.hos_id = awvk.hos_id and awvs.copy_code = awvk.copy_code 
			and awvs.acc_year = awvk.acc_year and awvs.scheme_code = awvk.scheme_code 
			and awvs.subj_code = awvk.subj_code and awvs.vouch_no = awvk.vouch_no 
		left join acc_subj asubj on asubj.group_id = awvs.group_id 
			and asubj.hos_id = awvs.hos_id and asubj.copy_code = awvs.copy_code 
			and asubj.acc_year = awvs.acc_year and asubj.subj_code = awvs.subj_code
			and asubj.is_stop = 0 and asubj.is_last= 1
		left join hos_emp_kind hek on awvk.group_id = hek.group_id 
			and awvk.hos_id = hek.hos_id and awvk.kind_code = hek.kind_code and hek.is_stop = 0
		<where>
			<if test="group_id != null and group_id != ''">
				AND awv.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND awv.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND awv.copy_code = #{copy_code}
			</if>
			<if test="wage_code != null and wage_code != ''">
				AND awv.wage_code = #{wage_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND awv.acc_year = #{acc_year}
			</if>
			<if test="scheme_code != null and scheme_code != ''">
				AND awv.scheme_code = #{scheme_code}
			</if>
			<if test="scheme_name != null and scheme_name != ''">
				AND awv.scheme_name = #{scheme_name}
			</if>
		</where>
		group by awvk.group_id,awvk.hos_id,asubj.subj_code, asubj.subj_name, awvk.kind_code,awvs.is_balance,awvs.is_neg,
               awvs.is_assign,awvs.summary,awvs.subj_dire,awvs.cal_name,awvs.cal_eng,awvs.vouch_no
        order by to_number(awvs.vouch_no) asc	
    </select>

	<select id="queryAccCheckItem" resultType="com.chd.hrp.acc.entity.AccWageVouch" parameterType="string">
		select b.column_check||','||c.column_check||','||d.column_check||','||e.column_check column_check
		from acc_subj a
		left join acc_check_type b on a.group_id = b.group_id and a.hos_id = b.hos_id
			and a.copy_code = b.copy_code and a.check1 = b.check_type_id
		left join acc_check_type c on a.group_id = c.group_id and a.hos_id = c.hos_id
			and a.copy_code = c.copy_code and a.check2 = c.check_type_id
		left join acc_check_type d on a.group_id = d.group_id and a.hos_id = d.hos_id
			and a.copy_code = d.copy_code and a.check3 = d.check_type_id
		left join acc_check_type e on a.group_id = e.group_id and a.hos_id = e.hos_id
			and a.copy_code = e.copy_code and a.check4 = e.check_type_id
		WHERE a.group_id = #{group_id}
			and a.hos_id = #{hos_id}
			and a.copy_code = #{copy_code}
			and a.subj_code = #{subj_code}
			and a.acc_year=#{acc_year}
	</select>

	<select id="queryAccWageVouchSubjByCode" parameterType="java.util.Map" resultMap="accWageVouch">
		select
			asubj.subj_code,
			asubj.out_code,
			asubj.subj_name_all subj_name,
			awvs.is_balance,
			awvs.is_neg,
			awvs.subj_dire,
			awvs.cal_name,
			awvs.cal_eng,
			awvk.kind_code kind_code,
			asubj.subj_type_code,
			asubj.subj_nature_code,
			asubj.is_cash,
			asubj.is_check,
			awvs.is_neg,
			awvs.is_assign,
			awvs.summary 
		from ACC_WAGE_VOUCH awv
		left join ACC_WAGE_VOUCH_SUBJ awvs on awv.group_id = awvs.group_id
			and awv.hos_id = awvs.hos_id and awv.copy_code = awvs.copy_code 
			and awv.acc_year = awvs.acc_year and awv.scheme_code = awvs.scheme_code
		left join ACC_WAGE_VOUCH_kind awvk on awvs.group_id = awvk.group_id
			and awvs.hos_id = awvk.hos_id and awvs.copy_code = awvk.copy_code 
			and awvs.acc_year = awvk.acc_year and awvs.scheme_code = awvk.scheme_code 
			and awvs.subj_code = awvk.subj_code  and awvs.vouch_no = awvk.vouch_no
		left join acc_subj asubj on asubj.group_id = awvs.group_id 
			and asubj.hos_id = awvs.hos_id and asubj.copy_code = awvs.copy_code 
			and asubj.acc_year = awvs.acc_year and asubj.subj_code = awvs.subj_code 
			and asubj.is_stop = 0 AND asubj.is_last = 1
		<where>
			<if test="group_id != null and group_id != ''">
				AND awv.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND awv.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND awv.copy_code = #{copy_code}
			</if>
			<if test="wage_code != null and wage_code != ''">
				AND awv.wage_code = #{wage_code}
			</if>
			<if test="acc_year != null and acc_year != ''">
				AND awv.acc_year = #{acc_year}
			</if>
			<if test="scheme_code != null and scheme_code != ''">
				AND awv.scheme_code = #{scheme_code}
			</if>
			<if test="scheme_name != null and scheme_name != ''">
				AND awv.scheme_name = #{scheme_name}
			</if>
		</where>
		group by awvk.group_id,awvk.hos_id, asubj.subj_code, asubj.subj_name, awvk.kind_code,awvs.is_balance,awvs.is_neg,
               awvs.is_assign,awvs.summary,awvs.subj_dire,awvs.cal_name,awvs.cal_eng,awvs.vouch_no,asubj.out_code,asubj.subj_name_all,
               asubj.subj_type_code,asubj.subj_nature_code,asubj.is_cash,asubj.is_check
		order by to_number(awvs.vouch_no) asc,awvs.is_balance
	</select>

	<select id="queryAccVouchMoney" resultType="com.chd.hrp.acc.entity.AccWageVouch" parameterType="string">
		select ${sql} as item_money
		from acc_wage_pay awp
		left join hos_emp_dict hed on awp.group_id = hed.group_id
			and awp.hos_id = hed.hos_id
			and awp.emp_id = hed.emp_id
			and awp.emp_no = hed.emp_no and hed.is_stop='0'
		left join acc_emp_attr aea on aea.group_id = hed.group_id
			and aea.hos_id = hed.hos_id
			and aea.emp_id = hed.emp_id
		left join acc_dept_attr ada on awp.group_id = ada.group_id and awp.hos_id = ada.hos_id
			and awp.dept_id = ada.dept_id
		WHERE awp.group_id = #{group_id}
			and awp.hos_id = #{hos_id}
			and awp.copy_code = #{copy_code}
			and awp.wage_code = #{wage_code}
			and awp.acc_year = #{acc_year}
			and awp.acc_month = #{acc_month}
		 	<if test="kind_code != null and kind_code != ''">
		 		and awp.kind_code in(${kind_code})
			</if> 
			<if test="emp_id != null and emp_id != ''">
				AND awp.emp_id = #{emp_id}
			</if>
			<if test="emp_no != null and emp_no != ''">
				AND awp.emp_no = #{emp_no}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND awp.dept_id = #{dept_id}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND awp.dept_no = #{dept_no}
			</if>
			<if test="out_code != null and out_code != ''">
				AND ada.out_code = #{out_code}
			</if>
	</select>

	<select id="queryAccEmpId" parameterType="java.util.Map" resultMap="empMap">
		select
		<!-- awp.emp_id, awp.emp_no, hed.emp_code, hed.emp_name, awp.dept_id, awp.dept_no, 
			hdd.dept_code, hdd.dept_name from acc_wage_pay awp left join hos_emp_dict 
			hed on awp.group_id = hed.group_id and awp.hos_id = hed.hos_id and awp.emp_id 
			= hed.emp_id and awp.emp_no = hed.emp_no left join hos_dept_dict hdd on awp.group_id 
			= hdd.group_id and awp.hos_id = hdd.hos_id and awp.dept_id = hdd.dept_id 
			and awp.dept_no = hdd.dept_no -->
			${sql}
		from acc_wage_pay awp
		left join acc_dept_attr ada on awp.group_id = ada.group_id and awp.hos_id = ada.hos_id
			and awp.dept_id = ada.dept_id ${tableSql}
		WHERE awp.group_id = #{group_id}
			and awp.hos_id = #{hos_id}
			and awp.copy_code = #{copy_code}
			and awp.wage_code = #{wage_code}
			and awp.acc_year = #{acc_year}
			and awp.acc_month = #{acc_month}
		 	<if test="kind_code != null and kind_code != ''">
		 		and awp.kind_code in(${kind_code})
			</if> 
			<if test="out_code != null and out_code != ''">
				AND ada.out_code = #{out_code}
			</if>
			group by ${groupSql}
			order by ${orderSql}
	</select>

	<select id="collectAccWageVouchCal" statementType="CALLABLE" parameterType="java.util.Map" >
		<![CDATA[{#{result_str,mode=OUT,jdbcType=VARCHAR}= call PKG_COMM.fun_ReplaceFunStr(
			#{group_id,jdbcType=INTEGER, mode=IN},  
	        #{hos_id,jdbcType=INTEGER, mode=IN},  
	        #{copy_code,jdbcType=VARCHAR, mode=IN},  
	        #{mod_code,jdbcType=VARCHAR, mode=IN},
	        #{cal_name,jdbcType=VARCHAR, mode=IN}
        )} 
		 ]]>
	</select>
	
	
	<insert id="extendAccWageVouch" parameterType="java.util.List">
		INSERT INTO ACC_WAGE_Vouch (
			group_id		,
			hos_id		,
			copy_code		,
			acc_year		,
			scheme_code		,
			scheme_name		,
			vouch_type_code		,
			wage_code
		)
		select group_id,hos_id,copy_code,#{acc_year},scheme_code,scheme_name,vouch_type_code,wage_code
		from ACC_WAGE_Vouch 
		where group_id = #{group_id} and hos_id = #{hos_id} 
			and copy_code = #{copy_code}
			and to_number(acc_year)=to_number(#{acc_year})-1
	</insert>

	<insert id="extendAccWageVouchKind" parameterType="java.util.List">
		INSERT INTO ACC_WAGE_Vouch_Kind (
			group_id		,
			hos_id		,
			copy_code		,
			acc_year		,
			scheme_code		,
			kind_code		,
			subj_code		,
			vouch_no
		)
		select m.group_id,m.hos_id,m.copy_code,#{acc_year},m.scheme_code,m.kind_code,s1.subj_code,m.vouch_no
		from ACC_WAGE_Vouch_Kind m
		left join acc_subj s  on s.subj_code = m.subj_code
			and s.group_id =#{ group_id}  and s.hos_id = #{ hos_id} and s.copy_code =#{copy_code}
		    and to_number(s.acc_year) = to_number(#{acc_year})-1
		left join acc_subj s1 on s1.subj_code = s.subj_code
		    and s1.group_id =#{group_id}
		    and s1.hos_id = #{hos_id}
		    and s1.copy_code = #{copy_code}
		    and s1.acc_year =to_number(#{acc_year})
		where m.group_id = #{group_id} and m.hos_id = #{hos_id} and m.copy_code = #{copy_code}
			and to_number(m.acc_year)=to_number(#{acc_year})-1
	</insert>

	<insert id="extendAccWageVouchSubj" parameterType="java.util.List">
		INSERT INTO ACC_WAGE_Vouch_Subj (
			group_id		,
			hos_id		,
			copy_code		,
			acc_year		,
			scheme_code		,
			subj_code		,
			subj_dire		,
			cal_name		,
			cal_eng		,
			is_balance		,
			is_neg		,
			is_assign		,
			summary		,
			vouch_no
		)
		select m.group_id,m.hos_id,m.copy_code,#{acc_year},m.scheme_code,s1.subj_code,
			m.subj_dire,m.cal_name,m.cal_eng,m.is_balance,m.is_neg,m.is_assign,m.summary,m.vouch_no
		from ACC_WAGE_Vouch_subj m
		left join acc_subj s on s.subj_code = m.subj_code
		   and s.group_id =#{group_id} and s.hos_id = #{hos_id} and s.copy_code =#{copy_code}
		   and to_number(s.acc_year) = to_number(#{ acc_year})-1
		left join acc_subj s1 on s1.subj_code = s.subj_code and s1.group_id =#{ group_id}
		   and s1.hos_id = #{hos_id} and s1.copy_code = #{copy_code} and s1.acc_year =to_number(#{acc_year})
		where m.group_id = #{group_id} and m.hos_id = #{hos_id} and m.copy_code = #{copy_code}
			 and to_number(m.acc_year)=to_number(#{acc_year})-1
	</insert>
	
	
	
	<insert id="saveAutoVouchLogTemp" parameterType="java.util.Map">
		
		
			INSERT INTO acc_busi_log_temp(
				group_id, hos_id, copy_code,vouch_id, business_no, busi_type_code, template_code, create_date
			)
			VALUES(
				#{group_id,jdbcType=INTEGER}, 
				#{hos_id,jdbcType=INTEGER}, 
				#{copy_code,jdbcType=INTEGER}, 
				#{vouch_id,jdbcType=VARCHAR}, 
				#{business_no,jdbcType=VARCHAR}, 
				#{busi_type_code,jdbcType=VARCHAR}, 
				#{template_code,jdbcType=VARCHAR}, 
				#{create_date,jdbcType=TIMESTAMP}<!-- ,
				#{item.create_user,jdbcType=INTEGER}  -->
			)
	</insert>
</mapper>

