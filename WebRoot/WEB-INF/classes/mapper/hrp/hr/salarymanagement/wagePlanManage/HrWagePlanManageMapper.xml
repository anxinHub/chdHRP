<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.salarymanagement.wagePlanManage.HrWagePlanManageMapper">
	<!-- 薪资方案sql结果映射 start -->
	<resultMap type="com.chd.hrp.hr.entity.salarymanagement.wagePlanManage.HrWagePlan" id="hrWagePlan">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="plan_name" column="plan_name"/>
		<result property="state" column="state"/>
		<result property="state_cn" column="state_cn"/>
		<result property="start_date" column="start_date"/>
		<result property="note" column="note"/>
	</resultMap>
	<resultMap type="java.util.Map" id="hrWagePlanMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="plan_name" column="plan_name"/>
		<result property="state" column="state"/>
		<result property="state_cn" column="state_cn"/>
		<result property="start_date" column="start_date"/>
		<result property="note" column="note"/>
	</resultMap>
	<!-- 薪资方案sql结果映射 end -->
	
	<!-- 工资项sql结果映射 start -->
	<resultMap type="com.chd.hrp.hr.entity.salarymanagement.wagePlanManage.HrWageItem" id="hrWageItem">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="plan_name" column="plan_name"/>
		<result property="item_code" column="item_code"/>
		<result property="item_name" column="item_name"/>
		<result property="item_nature" column="item_nature"/>
		<result property="nature_name" column="nature_name"/>
		<result property="item_type" column="item_type"/>
		<result property="type_name" column="type_name"/>
		<result property="data_type" column="data_type"/>
		<result property="is_sum" column="is_sum"/>
		<result property="is_sum_cn" column="is_sum_cn"/>
		<result property="is_stop" column="is_stop"/>
		<result property="is_stop_cn" column="is_stop_cn"/>
		<result property="spell_code" column="spell_code"/>
		<result property="wbx_code" column="wbx_code"/>
		<result property="note" column="note"/>
		<result property="column_item" column="column_item"/>
		<result property="sort_code" column="sort_code"/>
	</resultMap>
	<resultMap type="java.util.Map" id="hrWageItemMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="plan_name" column="plan_name"/>
		<result property="item_code" column="item_code"/>
		<result property="item_name" column="item_name"/>
		<result property="item_nature" column="item_nature"/>
		<result property="nature_name" column="nature_name"/>
		<result property="item_type" column="item_type"/>
		<result property="type_name" column="type_name"/>
		<result property="data_type" column="data_type"/>
		<result property="is_sum" column="is_sum"/>
		<result property="is_sum_cn" column="is_sum_cn"/>
		<result property="is_stop" column="is_stop"/>
		<result property="is_stop_cn" column="is_stop_cn"/>
		<result property="spell_code" column="spell_code"/>
		<result property="wbx_code" column="wbx_code"/>
		<result property="note" column="note"/>
		<result property="column_item" column="column_item"/>
		<result property="sort_code" column="sort_code"/>
	</resultMap>
	<!-- 工资项sql结果映射 end -->
	
	<!-- 薪资计算公式sql结果映射 start -->
	<resultMap type="com.chd.hrp.hr.entity.salarymanagement.wagePlanManage.HrWageItemCal" id="hrWageItemCal">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="cal_id" column="cal_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="item_code" column="item_code"/>
		<result property="kind_code" column="kind_code"/>
		<result property="item_cal" column="item_cal"/>
		<result property="cal_name" column="cal_name"/>
		<result property="cal_eng" column="cal_eng"/>
		<result property="note" column="note"/>
	</resultMap>
	<resultMap type="java.util.Map" id="hrWageItemCalMap">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="cal_id" column="cal_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="item_code" column="item_code"/>
		<result property="kind_code" column="kind_code"/>
		<result property="item_cal" column="item_cal"/>
		<result property="cal_name" column="cal_name"/>
		<result property="cal_eng" column="cal_eng"/>
		<result property="note" column="note"/>
	</resultMap>
	<!-- 薪资计算公式sql结果映射 end -->
	
	<!-- 薪资方案添加 -->
	<insert id="add" parameterType="java.util.Map">
		insert into HR_WAGE_PLAN(
			group_id, hos_id, plan_code, plan_name, note, start_date, state 
		) values (
			#{group_id, jdbcType=INTEGER},
			#{hos_id, jdbcType=INTEGER},
			#{plan_code, jdbcType=VARCHAR},
			#{plan_name, jdbcType=VARCHAR},
			#{note, jdbcType=VARCHAR},
			to_date(#{start_date, jdbcType=DATE}, 'yyyy-MM-dd'),
			#{state, jdbcType=INTEGER}
		)
	</insert>
	
	<insert id="addHrWagePlanKindBatch" parameterType="java.util.List">
		insert into hr_wage_plan_kind (
			group_id, hos_id, plan_code, emp_kind_code
		) 
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select
				#{item.group_id, jdbcType=INTEGER},
				#{item.hos_id, jdbcType=INTEGER},
				#{item.plan_code, jdbcType=VARCHAR},
				#{item.emp_kind_code, jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	
	<!-- 更新薪资方案 -->
	<update id="updateWagePlan" parameterType="java.util.Map">
		update hr_wage_plan 
		set plan_name = #{plan_name, jdbcType=VARCHAR},
			note = #{note, jdbcType=VARCHAR},
			start_date = to_date(#{start_date, jdbcType=DATE}, 'yyyy-MM-dd'),
			state = #{state, jdbcType=INTEGER}
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=INTEGER}
	</update>
	
	<!-- 薪资方案删除（批量） -->
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from hr_wage_plan
		where 
		<foreach collection="list" item="item" separator=" or ">
			(
				group_id = #{item.group_id, jdbcType=INTEGER} and
				hos_id = #{item.hos_id, jdbcType=INTEGER} and
				plan_code = #{item.plan_code, jdbcType=VARCHAR}
			)
		</foreach>
	</delete>
	
	<!-- 通过外键删除薪资方案与职工分类的关联关系 -->
	<delete id="deleteHrWagePlanKindByFK" parameterType="java.util.List">
		delete from hr_wage_plan_kind
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
	</delete>
	
	<!-- 通过外键删除薪资方案与职工分类的关联关系 -->
	<delete id="deleteHrWagePlanKindByFKBatch" parameterType="java.util.List">
		delete from hr_wage_plan_kind
		where 
		<foreach collection="list" item="item" separator=" or ">
			(
				group_id = #{item.group_id, jdbcType=INTEGER} and 
				hos_id = #{item.hos_id, jdbcType=INTEGER} and 
				plan_code = #{item.plan_code, jdbcType=VARCHAR}
			)
		</foreach>
	</delete>
	
	<!-- 薪资方案主查询 -->
	<select id="query" resultMap="hrWagePlanMap" parameterType="java.util.Map">
		select group_id,
			hos_id,
			plan_code,
			plan_name,
			start_date,
			state,
			case
				when state = 0 then '停用'
				when state = 1 then '启用'
			else '' end as state_cn
		from hr_wage_plan
		where 1=1
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and state = #{state, jdbcType=INTEGER}
			</if>
			<if test="plan_name != null and plan_name != ''">
				and plan_name like '%${plan_name}%'
			</if>
		order by state desc, plan_code asc
	</select>
	
	<select id="queryHrWagePlan" resultMap="hrWagePlan" parameterType="java.util.Map">
		select group_id,
			hos_id,
			plan_code,
			plan_name,
			start_date,
			state,
			case
				when state = 0 then '停用'
				when state = 1 then '启用'
			else '' end as state_cn
		from hr_wage_plan
		where 1=1
			<if test="group_id != null and group_id != ''">
				and group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="state != null and state != ''">
				and state = #{state, jdbcType=INTEGER}
			</if>
			<if test="plan_code != null and plan_code != ''">
				and plan_code = #{plan_code, jdbcType=VARCHAR}
			</if>
			<if test="plan_name != null and plan_name != ''">
				and plan_name = #{plan_name, jdbcType=VARCHAR}
			</if>
		order by state desc, plan_code asc
	</select>
	
	<!-- 查薪资方案编码与名称是否已经存在 -->
	<select id="queryExists" resultMap="hrWagePlanMap" parameterType="java.util.Map">
		select plan_code, plan_name
		from hr_wage_plan
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and (
		  	plan_code = #{plan_code, jdbcType=VARCHAR} or
		  	plan_name = #{plan_name, jdbcType=VARCHAR}
		  )
	</select>
	
	<!-- 通过主键取一个薪资方案 -->
	<select id="findHrWagePlanByPK" resultMap="hrWagePlan" parameterType="java.util.Map">
		select group_id,
			hos_id,
			plan_code,
			plan_name,
			start_date,
			state,
			case
				when state = 0 then '停用'
				when state = 1 then '启用'
			else '' end as state_cn,
			note
		from hr_wage_plan
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
	</select>
	
	<resultMap type="com.chd.hrp.hr.entity.salarymanagement.wagePlanManage.HrWagePlanKind" id="hrWagePlanKind">
		<result property="group_id" column="group_id"/>
		<result property="hos_id" column="hos_id"/>
		<result property="plan_code" column="plan_code"/>
		<result property="emp_kind_code" column="emp_kind_code"/>
	</resultMap>
	<!-- 查一个薪资方案关联的职工分类 -->
	<select id="findHrWagePlanKindByFK" resultMap="hrWagePlanKind" parameterType="java.util.Map">
		select emp_kind_code from hr_wage_plan_kind
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
	</select>
	
	<!-- 修改前，查薪资方案名称是否已占用 -->
	<select id="queryPlanNameOccupy" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from hr_wage_plan
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code != #{plan_code, jdbcType=VARCHAR}
		  and plan_name = #{plan_name, jdbcType=VARCHAR}
	</select>
	
	
	<resultMap type="java.util.Map" id="selectMap">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
	</resultMap>
	<!-- 查所有薪资方案（下拉选用） -->
	<select id="selectWagePlan" resultMap="selectMap" parameterType="java.util.Map">
		select plan_code id, plan_name text
		from hr_wage_plan
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and state = 1
		<!--   <if test="plan_code != null and plan_code != ''">
				and plan_code = #{plan_code, jdbcType=VARCHAR}
			</if> -->
		order by plan_code
	</select>
	<!-- 查薪资方案下的工资项（下拉选用） -->
	<select id="selectWageItem" resultMap="selectMap" parameterType="java.util.Map">
		select item_code id, item_name text
		from hr_wage_item
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
		  and is_stop = 0
		order by sort_code, item_code
	</select>
	
	<!-- 取工资项类型(提供下拉选用) -->
	<select id="selectAccWageItemType" resultMap="selectMap" parameterType="java.util.Map">
		select type_code id, type_name text
		from acc_wage_item_type
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and copy_code = #{copy_code, jdbcType=VARCHAR}
	</select>
	
	<!-- 添加工资项 -->
	<insert id="addWageItem" parameterType="java.util.Map">
		insert into hr_wage_item (
			group_id, hos_id, plan_code, item_code, item_name, item_type, item_nature, data_type, is_sum,
			is_stop, spell_code, wbx_code, note, column_item, sort_code
		) values (
			#{group_id, jdbcType=INTEGER},
			#{hos_id, jdbcType=INTEGER},
			#{plan_code, jdbcType=VARCHAR},
			#{item_code, jdbcType=VARCHAR},
			#{item_name, jdbcType=VARCHAR},
			#{item_type, jdbcType=VARCHAR},
			#{item_nature, jdbcType=VARCHAR},
			#{data_type, jdbcType=VARCHAR},
			#{is_sum, jdbcType=INTEGER},
			#{is_stop, jdbcType=INTEGER},
			#{spell_code, jdbcType=VARCHAR},
			#{wbx_code, jdbcType=VARCHAR},
			#{note, jdbcType=VARCHAR},
			#{column_item, jdbcType=VARCHAR},
			hr_wage_item_sort_code_seq.nextval
		)
	</insert>
	<insert id="addHrWageItemBatch" parameterType="java.util.List">
		insert into hr_wage_item (
			group_id, hos_id, plan_code, item_code, item_name, item_type, item_nature, data_type, is_sum,
			is_stop, spell_code, wbx_code, note, column_item, sort_code
		) (
		<foreach collection="list" item="item" separator=" union all ">
			select
				#{item.group_id, jdbcType=INTEGER},
				#{item.hos_id, jdbcType=INTEGER},
				#{item.plan_code, jdbcType=VARCHAR},
				#{item.item_code, jdbcType=VARCHAR},
				#{item.item_name, jdbcType=VARCHAR},
				#{item.item_type, jdbcType=VARCHAR},
				#{item.item_nature, jdbcType=VARCHAR},
				#{item.data_type, jdbcType=VARCHAR},
				#{item.is_sum, jdbcType=INTEGER},
				#{item.is_stop, jdbcType=INTEGER},
				#{item.spell_code, jdbcType=VARCHAR},
				#{item.wbx_code, jdbcType=VARCHAR},
				#{item.note, jdbcType=VARCHAR},
				#{item.column_item, jdbcType=VARCHAR},
				hr_wage_item_sort_code_seq.nextval
			from dual
		</foreach>
		)
	</insert>
	
	<select id="queryCopyHrWageItemBefore" resultMap="hrWageItemMap" parameterType="java.util.List">
		select t1.item_code
		from hr_wage_item t1
		inner join hr_wage_item t2
				on t2.group_id = t1.group_id
			   and t2.hos_id = t1.hos_id
			   and t2.item_code = t1.item_code
			   and t2.plan_code = #{plan_code, jdbcType=VARCHAR}
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_code = #{target_plan_code, jdbcType=VARCHAR}
	</select>
	
	<!-- 复制薪资方案 -->
	<insert id="copyHrWageItem" parameterType="java.util.List">
		insert into hr_wage_item (
			group_id, hos_id, plan_code, item_code, item_name, item_nature, data_type, is_sum,
			is_stop, spell_code, wbx_code, note, column_item, item_type, sort_code
		)
		select group_id, hos_id, #{target_plan_code, jdbcType=VARCHAR}, item_code, item_name, item_nature, data_type, is_sum,
			is_stop, spell_code, wbx_code, note, column_item, item_type, hr_wage_item_sort_code_seq.nextval
		from hr_wage_item
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
		  and is_stop = 0
	</insert>
	
	<!-- 工资项更新 -->
	<update id="updateHrWageItem" parameterType="java.util.Map">
		update hr_wage_item
		set item_name = #{item_name, jdbcType=VARCHAR},
			item_nature = #{item_nature, jdbcType=VARCHAR},
			item_type = #{item_type, jdbcType=VARCHAR},
			data_type = #{data_type, jdbcType=VARCHAR},
			is_sum = #{is_sum, jdbcType=INTEGER},
			is_stop = #{is_stop, jdbcType=INTEGER},
			spell_code = #{spell_code, jdbcType=VARCHAR},
			wbx_code = #{wbx_code, jdbcType=VARCHAR},
			note = #{note, jdbcType=VARCHAR}
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
		  and item_code = #{item_code, jdbcType=VARCHAR}
	</update>
	
	<!-- 删除工资项（批量） -->
	<delete id="deleteHrWageItemBatch" parameterType="java.util.List">
		delete from hr_wage_item
		where
		<foreach collection="list" item="item" separator=" or ">
			(
				group_id = #{item.group_id, jdbcType=INTEGER} and 
				hos_id = #{item.hos_id, jdbcType=INTEGER} and
				plan_code = #{item.plan_code, jdbcType=VARCHAR} and
				item_code = #{item.item_code, jdbcType=VARCHAR}
			)
		</foreach>
	</delete>
	
	<!-- 工资项主查询 -->
	<select id="queryWageItem" resultMap="hrWageItemMap" parameterType="java.util.Map">
		select t1.group_id,
			t1.hos_id,
			t1.plan_code,
			t2.plan_name,
			t1.item_code,
			t1.item_name,
			t1.item_type,
			t3.type_name,
			t1.item_nature,
			t4.nature_name,
			t1.data_type,
			case
				when t1.data_type = 0 then '数值'
				when t1.data_type = 1 then '文本'
			else '' end as data_type_cn,
			t1.is_sum,
			case
				when t1.is_sum = 0 then '否'
				when t1.is_sum = 1 then '是'
			else '' end as is_sum_cn,
			t1.is_stop,
			case
				when t1.is_stop = 0 then '否'
				when t1.is_stop = 1 then '是'
			else '' end as is_stop_cn,
			t1.note,
			t1.column_item
		from hr_wage_item t1
		left join hr_wage_plan t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.plan_code = t1.plan_code
		left join acc_wage_item_type t3
			   on t3.group_id = t1.group_id
			  and t3.hos_id = t1.hos_id
			  and t3.copy_code = #{copy_code, jdbcType=VARCHAR}
			  and t3.type_code = t1.item_type
		left join acc_wage_item_nature t4
			   on t4.group_id = t1.group_id
			  and t4.hos_id = t1.hos_id
			  and t4.copy_code = #{copy_code, jdbcType=VARCHAR}
			  and t4.nature_code = t1.item_nature
		where 1=1
			<if test="group_id != null and group_id != ''">
				and t1.group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and t1.hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="plan_code != null and plan_code != ''">
				and t1.plan_code = #{plan_code, jdbcType=VARCHAR}
			</if>
			<if test="item_name != null and item_name != ''">
				and t1.item_name like '%${item_name}%'
			</if>
		order by t1.sort_code, t1.item_code
	</select>
	
	<!-- 查一个薪资方案下的所有启用的工资项 -->
	<select id="queryHrWageItemsByPlanCode" resultMap="hrWageItem" parameterType="java.util.Map">
		select group_id,
			hos_id,
			plan_code,
			item_code,
			item_name,
			item_nature,
			item_type,
			data_type,
			is_sum,
			is_stop,
			spell_code,
			wbx_code,
			note,
			column_item,
			sort_code
		from hr_wage_item 
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		    <if test="is_stop != null and is_stop != ''">
		    and plan_code = #{plan_code, jdbcType=VARCHAR}
		  </if>
		
		  <if test="is_stop != null and is_stop != ''">
		      and is_stop = #{is_stop, jdbcType=INTEGER}
		  </if>
		order by item_code, column_item
	</select>
	
	<!-- 查工资项编码与名称是否已经存在 -->
	<select id="queryItemCodeExists" resultMap="hrWageItemMap" parameterType="java.util.Map">
		select item_code, item_name
		from hr_wage_item
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
		  and (
		      item_code = #{item_code, jdbcType=VARCHAR} or
		      item_name = #{item_name, jdbcType=VARCHAR}
		  )
	</select>
	
	<select id="queryHrWageItemsExists" resultMap="hrWageItem" parameterType="java.util.List">
		select item_code, item_name
		from hr_wage_item
		where 
			<foreach collection="list" item="item" separator=" or ">
				(
					group_id = #{item.group_id, jdbcType=INTEGER} and
					hos_id = #{item.hos_id, jdbcType=INTEGER} and 
					plan_code = #{item.plan_code, jdbcType=VARCHAR} and
					(
						item_code = #{item.item_code, jdbcType=VARCHAR} or
						item_name = #{item.item_name, jdbcType=VARCHAR}
					)
				)
			</foreach>
	</select>
	
	<!-- 工资项更新前查询名称是否被占用 -->
	<select id="queryWageItemUpdateBefore" resultMap="hrWageItemMap" parameterType="java.util.Map">
		select item_name from hr_wage_item
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and plan_code = #{plan_code, jdbcType=VARCHAR}
		  and item_code != #{item_code, jdbcType=VARCHAR}
		  and item_name = #{item_name, jdbcType=VARCHAR}
	</select>
	
	<!-- 通过主键取一个工资项 -->
	<select id="findHrWageItemByPK" resultMap="hrWageItem" parameterType="java.util.Map">
		select t1.group_id,
			t1.hos_id,
			t1.plan_code,
			t2.plan_name,
			t1.item_code,
			t1.item_name,
			t1.item_type,
			t3.type_name,
			t1.item_nature,
			t4.nature_name,
			t1.data_type,
			case
				when t1.data_type = 0 then '数值'
				when t1.data_type = 1 then '文本'
			else '' end as data_type_cn,
			t1.is_sum,
			case
				when t1.is_sum = 0 then '否'
				when t1.is_sum = 1 then '是'
			else '' end as is_sum_cn,
			t1.is_stop,
			case
				when t1.is_stop = 0 then '否'
				when t1.is_stop = 1 then '是'
			else '' end as is_stop_cn,
			t1.note,
			t1.column_item,
			t1.sort_code
		from hr_wage_item t1
		left join hr_wage_plan t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.plan_code = t1.plan_code
		left join acc_wage_item_type t3
			   on t3.group_id = t1.group_id
			  and t3.hos_id = t1.hos_id
			  and t3.copy_code = #{copy_code, jdbcType=VARCHAR}
			  and t3.type_code = t1.item_type
		left join acc_wage_item_nature t4
			   on t4.group_id = t1.group_id
			  and t4.hos_id = t1.hos_id
			  and t4.copy_code = #{copy_code, jdbcType=VARCHAR}
			  and t4.nature_code = t1.item_nature
		where t1.group_id = #{group_id, jdbcType=INTEGER}
		  and t1.hos_id = #{hos_id, jdbcType=INTEGER}
		  and t1.plan_code = #{plan_code, jdbcType=VARCHAR}
		  and t1.item_code = #{item_code, jdbcType=VARCHAR}
	</select>
	
	<select id="queryHrWageItem" resultMap="hrWageItem" parameterType="java.util.Map">
		select t1.group_id,
			t1.hos_id,
			t1.plan_code,
			t2.plan_name,
			t1.item_code,
			t1.item_name,
			t1.item_type,
			t3.type_name,
			t1.item_nature,
			t4.nature_name,
			t1.data_type,
			case
				when t1.data_type = 0 then '数值'
				when t1.data_type = 1 then '文本'
			else '' end as data_type_cn,
			t1.is_sum,
			case
				when t1.is_sum = 0 then '否'
				when t1.is_sum = 1 then '是'
			else '' end as is_sum_cn,
			t1.is_stop,
			case
				when t1.is_stop = 0 then '否'
				when t1.is_stop = 1 then '是'
			else '' end as is_stop_cn,
			t1.note,
			t1.column_item,
			t1.sort_code
		from hr_wage_item t1
		left join hr_wage_plan t2
			   on t2.group_id = t1.group_id
			  and t2.hos_id = t1.hos_id
			  and t2.plan_code = t1.plan_code
		left join acc_wage_item_type t3
			   on t3.group_id = t1.group_id
			  and t3.hos_id = t1.hos_id
			  and t3.copy_code = #{copy_code, jdbcType=VARCHAR}
			  and t3.type_code = t1.item_type
		left join acc_wage_item_nature t4
			   on t4.group_id = t1.group_id
			  and t4.hos_id = t1.hos_id
			  and t4.copy_code = #{copy_code, jdbcType=VARCHAR}
			  and t4.nature_code = t1.item_nature
		where 1=1
			<if test="group_id != null and group_id != ''">
				and t1.group_id = #{group_id, jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and t1.hos_id = #{hos_id, jdbcType=INTEGER}
			</if>
			<if test="plan_code != null and plan_code != ''">
				and t1.plan_code = #{plan_code, jdbcType=VARCHAR}
			</if>
			<if test="plan_name != null and plan_name != ''">
				and t1.plan_name = #{plan_name, jdbcType=VARCHAR}
			</if>
		
			<if test="item_name != null and item_name != ''">
				and t1.item_name = #{item_name, jdbcType=VARCHAR}
			</if>
	</select>
	
	<select id="queryWageItemNature" resultType="java.util.Map" parameterType="java.util.Map">
		select nature_code, nature_name
		from acc_wage_item_nature
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and copy_code = #{copy_code, jdbcType=VARCHAR}
	</select>
	
	<select id="queryWageItemType" resultType="java.util.Map" parameterType="java.util.Map">
		select type_code, type_name
		from acc_wage_item_type
		where group_id = #{group_id, jdbcType=INTEGER}
		  and hos_id = #{hos_id, jdbcType=INTEGER}
		  and copy_code = #{copy_code, jdbcType=VARCHAR}
	</select>
</mapper>