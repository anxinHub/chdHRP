<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.chd.hrp.hr.dao.attendancemanagement.scheduling.HrAttendClassTypeMapper">

	<resultMap id="hrAttendClassType"
		type="com.chd.hrp.hr.entity.attendancemanagement.scheduling.HrAttendClassType">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_class_typecode"
			column="attend_class_typecode" />
		<result property="attend_class_typename"
			column="attend_class_typename" />

	</resultMap>

	<resultMap id="hrAttendClassTypeMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_class_typecode"
			column="attend_class_typecode" />
		<result property="attend_class_typename"
			column="attend_class_typename" />
	</resultMap>
	<!--增加 -->
	<insert id="add" useGeneratedKeys="true">
		INSERT INTO HR_ATTEND_CLASS_TYPE (
		<trim suffix="" suffixOverrides=",">
			group_id,
			hos_id,
			attend_class_typecode,
			attend_class_typename,

		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{attend_class_typecode,jdbcType=VARCHAR},
			#{attend_class_typename,jdbcType=VARCHAR},

		</trim>
		)
	</insert>
	<select id="query" resultMap="hrAttendClassTypeMap"
		parameterType="java.util.Map">
		select hac.group_id, hac.hos_id, hac.attend_class_typecode,
		hac.attend_class_typename

		from HR_ATTEND_CLASS_TYPE hac
		<where>
			<if test="group_id != null and group_id != ''">
				AND hac.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hac.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if
				test="attend_class_typecode != null and attend_class_typecode != ''">
				and (
				hac.attend_class_typecode like '%${attend_class_typecode}%'
				or hac.attend_class_typename like '%${attend_class_typecode}%'
				)
			</if>

		</where>
		order by hac.attend_class_typecode
	</select>
	
	<select id="queryAttendClassTypeByPrint" parameterType="java.util.Map" resultType="java.util.Map">
		select hac.group_id, hac.hos_id, hac.attend_class_typecode,
		hac.attend_class_typename

		from HR_ATTEND_CLASS_TYPE hac
		<where>
			<if test="group_id != null and group_id != ''">
				AND hac.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hac.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if
				test="attend_class_typecode != null and attend_class_typecode != ''">
				and (
				hac.attend_class_typecode like '%${attend_class_typecode}%'
				or hac.attend_class_typename like '%${attend_class_typecode}%'
				)
			</if>

		</where>
		order by hac.attend_class_typecode
	</select>
	<select id="queryByCodeClassType" resultMap="hrAttendClassType"
		parameterType="java.util.Map">
		select group_id,hos_id,attend_class_typecode,attend_class_typename
		FROM HR_ATTEND_CLASS_TYPE
		<where>

			AND group_id = #{group_id,jdbcType=INTEGER}

			AND hos_id = #{hos_id,jdbcType=INTEGER}

			AND (attend_class_typecode = #{attend_class_typecode,jdbcType=VARCHAR}
			or attend_class_typename = #{attend_class_typename,jdbcType=VARCHAR})
		</where>
	</select>
	<select id="queryByCodeClassTypeUpdate"  resultMap="hrAttendClassType"
		parameterType="java.util.Map">
		select group_id,hos_id,attend_class_typecode,attend_class_typename
		FROM HR_ATTEND_CLASS_TYPE
		<where>

			AND group_id = #{group_id,jdbcType=INTEGER}

			AND hos_id = #{hos_id,jdbcType=INTEGER}

			AND attend_class_typecode != #{attend_class_typecode,jdbcType=VARCHAR}
			and ( attend_class_typename = #{attend_class_typename,jdbcType=VARCHAR})
		</where>
		</select>
	<select id="queryByCode" resultMap="hrAttendClassType"
		parameterType="java.util.Map">
		select group_id,hos_id,attend_class_typecode,attend_class_typename
		FROM HR_ATTEND_CLASS_TYPE
		<where>

			AND group_id = #{group_id}

			AND hos_id = #{hos_id}

			AND attend_class_typecode = #{attend_class_typecode}

		</where>
	</select>
	<update id="update" parameterType="java.util.Map">
		update HR_ATTEND_CLASS_TYPE

		<trim prefix="SET" suffixOverrides=",">
			attend_class_typecode =
			#{attend_class_typecode,jdbcType=VARCHAR},
			attend_class_typename =
			#{attend_class_typename,jdbcType=VARCHAR},

		</trim>
		<where>
			AND group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id =
			#{hos_id,jdbcType=INTEGER}
			AND attend_class_typecode
			=#{old_calss_typecode,jdbcType=VARCHAR}

		</where>
	</update>
	<delete id="deleteAttendClassType" parameterType="java.util.List">
		DELETE FROM HR_ATTEND_CLASS_TYPE
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{map.group_id}
				and hos_id = #{map.hos_id}
				and
				attend_class_typecode =#{item.attend_class_typecode}

			</foreach>
		</where>
	</delete>
	
	<resultMap id="hrAttendClassMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="attend_area_name" column="attend_area_name" />
	</resultMap>
	
	<select id="queryArea" resultType="java.lang.Integer">

		select count(*) from HR_ATTEND_AREA ha
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				ha.group_id = #{map.group_id}
				and ha.hos_id = #{map.hos_id}
				and ha.attend_class_typecode =#{item.attend_class_typecode}
			</foreach>
		</where>
	</select>
	
	<select id="queryAttendClass" resultType="java.lang.Integer">
		select count(0) from HR_ATTEND_CLASS
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{map.group_id}
				and hos_id = #{map.hos_id}
				and attend_class_typecode =#{item.attend_class_typecode}
			</foreach>
		</where>
	</select>
</mapper>