<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.training.plant.HrPlantMapper">

	<resultMap id="hrPlan" type="com.chd.hrp.hr.entity.training.plant.HrPlant">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="plan_id" column="plan_id" />
		<result property="train_type_code" column="train_type_code" />
		<result property="train_type_name" column="train_type_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_name" column="dept_name" />
		<result property="dept_no" column="dept_no" />
		<result property="year" column="year" />
		<result property="month" column="month" />
		<result property="train_title" column="train_title" />
		<result property="train_way_code" column="train_way_code" />
		<result property="train_way_name" column="train_way_name" />
		<result property="train_object" column="train_object" />
		<result property="is_exam" column="is_exam" />
		<result property="is_exam_name" column="is_exam_name" />
		<result property="is_cert" column="is_cert" />
		<result property="is_cert_name" column="is_cert_name" />
		<result property="credit_hour" column="credit_hour" />
		<result property="id_exe" column="id_exe" />
		<result property="id_exe_name" column="id_exe_name" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap id="hrPlanMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="plan_id" column="plan_id" />
		<result property="train_type_code" column="train_type_code" />
		<result property="train_type_name" column="train_type_name" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_name" column="dept_name" />
		<result property="dept_no" column="dept_no" />
		<result property="year" column="year" />
		<result property="month" column="month" />
		<result property="train_title" column="train_title" />
		<result property="train_way_code" column="train_way_code" />
		<result property="train_way_name" column="train_way_name" />
		<result property="train_object" column="train_object" />
		<result property="is_exam" column="is_exam" />
		<result property="is_exam_name" column="is_exam_name" />
		<result property="is_cert" column="is_cert" />
		<result property="is_cert_name" column="is_cert_name" />
		<result property="credit_hour" column="credit_hour" />
		<result property="id_exe" column="id_exe" />
		<result property="id_exe_name" column="id_exe_name" />
		<result property="note" column="note" />
	</resultMap>

	<insert id="add" useGeneratedKeys="true">

		INSERT INTO HR_TRAIN_PLAN (
		<trim suffix="" suffixOverrides=",">
		
				group_id
				,
		
				hos_id
		       ,
				plan_id
				,
				train_type_code
				,
				dept_id
				,
		
				dept_no
				,
	
				year
				,
		     	month
			    ,
		     	train_title
			    ,
		     	train_way_code
			    ,
		     	train_object
			    ,
		     	is_exam
			    ,
		     	is_cert
			    ,
		     	credit_hour
			    ,
		     	
				note
				,
				
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		
				#{group_id,jdbcType=INTEGER}
				,
		
				#{hos_id,jdbcType=INTEGER}
				,
			
				#{plan_id,jdbcType=INTEGER}
				,
				
				#{train_type_code,jdbcType=VARCHAR}
				,
				
				#{dept_id,jdbcType=INTEGER}
				,
			
				#{dept_no,jdbcType=INTEGER}
				,
		
				#{year,jdbcType=INTEGER}
				,
		
				#{month,jdbcType=VARCHAR}
				,
		
				#{train_title,jdbcType=VARCHAR}
				,
		
				#{train_way_code,jdbcType=VARCHAR}
				,
		
				#{train_object,jdbcType=VARCHAR}
				,
		
				#{is_exam,jdbcType=INTEGER}
				,
			    #{is_cert,jdbcType=INTEGER}
				,
				#{credit_hour,jdbcType=INTEGER}
				,
		
				
				#{note,jdbcType=VARCHAR}

		</trim>
		)

	</insert>
	
	<insert id="addBatch" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_PLAN (
			group_id,
			hos_id,
			plan_id,
			train_type_code,
			dept_id,
			dept_no,
			year,
			month,
			train_title,
		    train_way_code,
		    train_object,
		    is_exam,
		    is_cert,
		    credit_hour,
		    note
		) select t.* from (
		<foreach collection="list" item="item" index="index" separator=" union all ">
			select #{item.group_id,jdbcType=INTEGER} group_id,
				  #{item.hos_id,jdbcType=INTEGER} hos_id,
				  #{item.plan_id,jdbcType=INTEGER} plan_id,
				  #{item.train_type_code,jdbcType=VARCHAR} train_type_code,
				  #{item.dept_id,jdbcType=INTEGER} dept_id,
				  #{item.dept_no,jdbcType=INTEGER} dept_no,
				  #{item.year,jdbcType=INTEGER} year,
				  #{item.month,jdbcType=VARCHAR} month,
				  #{item.train_title,jdbcType=VARCHAR} train_title,
				  #{item.train_way_code,jdbcType=VARCHAR} train_way_code,
				  #{item.train_object,jdbcType=VARCHAR} train_object,
				  #{item.is_exam,jdbcType=INTEGER} is_exam,
		          #{item.is_cert,jdbcType=INTEGER} is_cert,
		          <choose>
		              <when test="item.credit_hour != null and item.credit_hour != '' or item.credit_hour == 0">
						  #{item.credit_hour,jdbcType=INTEGER} credit_hour,
		              </when>
		              <otherwise> null credit_hour, </otherwise>
		          </choose>
		          <choose>
		              <when test="item.note != null and item.note != ''">
				          #{item.note,jdbcType=VARCHAR} note
		              </when>
		              <otherwise> null note </otherwise>
		          </choose>
			from dual
		</foreach>
		)t
	</insert>

	<update id="update" parameterType="java.util.Map">

		UPDATE HR_TRAIN_PLAN
		<trim prefix="SET" suffixOverrides=",">
				train_type_code = #{train_type_code,jdbcType=VARCHAR}
				,
				dept_id = #{dept_id,jdbcType=INTEGER}
				,
		
				dept_no = #{dept_no,jdbcType=VARCHAR}
				,
		
		
				year = #{year,jdbcType=VARCHAR}
				,
			
				month=#{month,jdbcType=VARCHAR}
				,
		
				train_title=#{train_title,jdbcType=VARCHAR}
				,
		
					train_way_code=#{train_way_code,jdbcType=VARCHAR}
				,
		
					train_object=#{train_object,jdbcType=VARCHAR}
				,
		
					is_exam=#{is_exam,jdbcType=INTEGER}
				,
		
					credit_hour=#{credit_hour,jdbcType=INTEGER}
				,
		
					is_cert=#{is_cert,jdbcType=INTEGER}
				,
			
					note=#{note,jdbcType=VARCHAR}
		</trim>
		<where>
			
				AND group_id = #{group_id,jdbcType=INTEGER}
			
				AND hos_id = #{hos_id,jdbcType=INTEGER}
		
				AND plan_id = #{plan_id,jdbcType=INTEGER}
		

		</where>
	</update>
	<update id="updateBatch" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE HR_TRAIN_PLAN
			<trim prefix="SET" suffixOverrides=",">
					train_type_code = #{item.train_type_code,jdbcType=VARCHAR}
					,
					dept_id = #{item.dept_id,jdbcType=INTEGER}
					,
					dept_no = #{item.dept_no,jdbcType=VARCHAR}
					,
					year = #{item.year,jdbcType=VARCHAR}
					,
					month=#{item.month,jdbcType=VARCHAR}
				,
		
				train_title=#{item.train_title,jdbcType=VARCHAR}
				,
		
				train_way_code=#{item.train_way_code,jdbcType=VARCHAR}
				,
		
				train_object=#{item.train_object,jdbcType=VARCHAR}
				,
		
				is_exam=#{item.is_exam,jdbcType=INTEGER}
				,
		<if test="item.credit_hour != null and item.credit_hour != ''">
				credit_hour=#{item.credit_hour,jdbcType=INTEGER}
				,
				</if>
		<if test="item.id_exe != null and item.id_exe != ''">
				id_exe=#{item.id_exe,jdbcType=INTEGER}
				,
				</if>
			<if test="item.note != null and item.note != ''">
				note=#{item.note,jdbcType=VARCHAR}
</if>
			</trim>
			<where>
					AND group_id = #{item.group_id,jdbcType=INTEGER}
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
					AND plan_id = #{item.plan_id,jdbcType=VARCHAR}
				
			</where>
		</foreach>
	</update>

	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM HR_TRAIN_PLAN
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="plan_id != null and plan_id != ''">
				AND plan_id = #{plan_id,jdbcType=VARCHAR}
			</if>
			
		</where>
	</delete>
	<delete id="deletePlant" parameterType="java.util.List">
		DELETE FROM HR_TRAIN_PLAN
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	</delete>
	
	<delete id="deletePlantBach" parameterType="java.util.List">
	begin
		DELETE FROM HR_TRAIN_PLAN
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_CLASS
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
		;
		DELETE FROM HR_TRAIN_OBJECT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_INFORM
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_SIGN_IN
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_KJ
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_PHOTO
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_BK
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_BK_EMP
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_BUKAO
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_BUKAO_EMP
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_EXAM
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_EXAM_RESULT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_CERT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	DELETE FROM HR_TRAIN_EMP_CERT
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
					 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.plan_id != null and item.plan_id != ''">
					AND plan_id = #{item.plan_id,jdbcType=INTEGER}
				</if>
		
			</foreach>
		</where>
	;
	
		end;
	
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hrPlan">
select * from (
	select ht.group_id, ht.hos_id, ht.plan_id, ht.train_type_code, htt.type_name as train_type_name
  , ht.dept_id, ht.dept_no, hd.dept_name, ht.year, ht.month
  , ht.train_title, ht.train_way_code, htw.way_name as train_way_name, ht.train_object, ht.is_exam
  , case 
    when ht.is_exam = 0 then '否'
    when ht.is_exam = 1 then '是'
    else null
  end as is_exam_name, ht.is_cert
  , case 
    when ht.is_cert = 0 then '否'
    when ht.is_cert = 1 then '是'
    else null
  end as is_cert_name, ht.credit_hour,
  case when nvl(htcc.plan_id,0) = 0 then '0'
          else  
               case when nvl(htcc.plan_id,0) != 0 then '1'
             else null
             end
          end id_exe ,
  case when nvl(htcc.plan_id,0) = 0 then '否'
	        else  
	             case when nvl(htcc.plan_id,0) != 0 then '是'
	           else null
	           end
	        end id_exe_name , ht.note
from HR_TRAIN_PLAN ht
left join hos_dept_dict hd on ht.group_id = hd.group_id
and ht.hos_id = hd.hos_id
and ht.dept_id = hd.dept_id
and ht.dept_no = hd.dept_no 
left join HR_TRAIN_TYPE htt on ht.group_id = htt.group_id
and ht.hos_id = htt.hos_id
and ht.train_type_code = htt.type_code 
  left join HR_TRAIN_WAY htw on ht.group_id = htw.group_id
and ht.hos_id = htw.hos_id
and ht.train_way_code = htw.way_code 
left join (select htc.group_id, htc.hos_id,htc.plan_id from HR_TRAIN_CLASS htc left join HR_TRAIN_PLAN ht1 on ht1.group_id=htc.group_id
 and ht1.hos_id=htc.hos_id and ht1.plan_id=htc.plan_id) htcc on ht.group_id=htcc.group_id
 and ht.hos_id=htcc.hos_id and ht.plan_id=htcc.plan_id
) a
		<where>
			<if test="group_id != null and group_id != ''">
				AND a.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND a.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="train_title != null and train_title != ''">
				AND a.train_title like '%${train_title}%'
			</if>
			<if test="train_type_code != null and train_type_code != ''">
				AND a.train_type_code = #{train_type_code,jdbcType=INTEGER}
			</if>
			<if test="train_way_code != null and train_way_code != ''">
				AND a.train_way_code = #{train_way_code,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND a.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND a.dept_no = #{dept_no,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
				AND a.year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="month != null and month != ''">
				AND a.month = #{month,jdbcType=VARCHAR}
			</if>
			<if test="id_exe ==1 ">
				AND a.id_exe != 0
			</if>
			<if test="id_exe == 2 ">
				AND a.id_exe = 0
			</if>
		</where>
		order by a.year, a.month desc
	</select>
	<select id="queryByCode" resultMap="hrPlan" parameterType="java.util.Map">

		SELECT
		htp.group_id
				,
		
				htp.hos_id
		       ,
				htp.plan_id
				,
				htp.train_type_code
				,
				htp.dept_id
				,
		
				htp.dept_no
				,
	            hd.dept_name
	            ,
				htp.year
				,
		     	htp.month
			    ,
		     	htp.train_title
			    ,
		     	htp.train_way_code
			    ,
		     	htp.train_object
			    ,
		     	htp.is_exam
			    ,
		     	htp.is_cert
			    ,
		     	htp.credit_hour
			    ,
		     	
				htp.note
				
		FROM HR_TRAIN_PLAN htp left join  hos_dept hd on <!-- htp.dept_no=hd.dept_no and -->  htp.dept_id=hd.dept_id and htp.group_id=hd.group_id
		and htp.hos_id=hd.hos_id 
		WHERE
		htp.group_id = #{group_id,jdbcType=INTEGER} and
		htp.hos_id = #{hos_id,jdbcType=INTEGER} and
		htp.plan_id = #{plan_id,jdbcType=VARCHAR}

	</select>
	<select id="queryByUniqueness" resultMap="hrPlan"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		plan_id,
		train_type_code,
		dept_id,
		dept_no,
		year,
		note
		FROM HR_TRAIN_PLAN
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="plan_id != null and plan_id != ''">
				AND plan_id = #{plan_id,jdbcType=VARCHAR}
			</if>
			<if test="train_type_code != null and train_type_code != ''">
				AND train_type_code = #{train_type_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
				AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrPlan" parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		plan_id,
		train_type_code,
		dept_id,
		dept_no,
		year,
		note
		FROM HR_TRAIN_PLAN
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="plan_id != null and plan_id != ''">
				AND plan_id = #{plan_id,jdbcType=VARCHAR}
			</if>
			<if test="train_type_code != null and train_type_code != ''">
				AND train_type_code = #{train_type_code,jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no,jdbcType=VARCHAR}
			</if>
			<if test="year != null and year != ''">
				AND year = #{year,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	
		<select id="queryPlantById" resultMap="hrPlan"
		parameterType="java.util.Map">

	SELECT 
		group_id,
		hos_id,
		train_type_code,
		dept_id,
		dept_no,
		year,
		note
		FROM HR_TRAIN_PLAN 
		where
		
				 group_id = #{group_id}
				AND hos_id = #{hos_id}
			AND  train_type_code = #{train_type_code} 
			and train_type_code = #{train_type_code} 
			and dept_id = #{dept_id} 
			and dept_no = #{dept_no} 
			and year = #{year} 
			and month = #{month} 
			and train_title = #{train_title} 
			and train_way_code = #{train_way_code} 
			and train_object = #{train_object} 
			and is_exam = #{is_exam} 
			and is_cert = #{is_cert} 


	</select>
	
	
		<select id="queryPlantByIdName" resultMap="hrPlan"
		parameterType="java.util.Map">

	SELECT 
		group_id,
		hos_id,
		train_type_code,
		dept_id,
		dept_no,
		year,
		note
		FROM HR_TRAIN_PLAN 
		where
		
				 group_id = #{group_id}
				AND hos_id = #{hos_id}
			AND  train_type_code = #{train_type_code} 
			and train_type_code = #{train_type_code} 
			and dept_id = #{dept_id} 
			and dept_no = #{dept_no} 
			and year = #{year} 
			and month = #{month} 
			and train_title = #{train_title} 
			and train_way_code = #{train_way_code} 
			and train_object = #{train_object} 
			and is_exam = #{is_exam} 
			and is_cert = #{is_cert} 
			AND plan_id != #{plan_id}
	</select>
	<select id="queryPlantByName" resultMap="hrPlan"
		parameterType="java.util.Map"> SELECT 
		group_id,
		hos_id,
		train_title
		FROM HR_TRAIN_PLAN 
		where
		
				 group_id = #{group_id}
				AND hos_id = #{hos_id}
		
		and train_title = #{train_title} 
			
			
			</select>
	<select id="queryUsePlant" resultType="java.lang.Integer" >
	 select sum(a) from ( 
 select count(*)  a from HR_TRAIN_CLASS htc  where  htc.group_id = #{group_id} and htc.hos_id = #{hos_id}   and htc.plan_id=#{plan_id}union all
   select count(*) a from   HR_TRAIN_OBJECT hto  where  hto.group_id = #{group_id} and hto.hos_id = #{hos_id}   and hto.plan_id=#{plan_id}union all
  
   select count(*) a from   HR_TRAIN_INFORM htin  where  htin.group_id = #{group_id} and htin.hos_id = #{hos_id}   and htin.plan_id=#{plan_id}union all
   select count(*)  a from   HR_TRAIN_SIGN_IN htsi  where  htsi.group_id = #{group_id} and htsi.hos_id = #{hos_id}   and htsi.plan_id=#{plan_id}union all
   select count(*)  a from   HR_TRAIN_KJ htk  where  htk.group_id = #{group_id} and htk.hos_id = #{hos_id}   and htk.plan_id=#{plan_id}union all
   select count(*) a  from   HR_TRAIN_PHOTO htpo  where  htpo.group_id = #{group_id} and htpo.hos_id = #{hos_id}   and htpo.plan_id=#{plan_id}union all
   select count(*) a from   HR_TRAIN_BK httk  where  httk.group_id = #{group_id} and httk.hos_id = #{hos_id}   and httk.plan_id=#{plan_id}union all
   select count(*) a from   HR_TRAIN_BK_EMP htbe  where  htbe.group_id = #{group_id} and htbe.hos_id = #{hos_id}   and htbe.plan_id=#{plan_id}union all
   select count(*) a  from   HR_BUKAO hbk  where  hbk.group_id = #{group_id} and hbk.hos_id = #{hos_id}   and hbk.plan_id=#{plan_id}union all
   select count(*) a from   HR_BUKAO_EMP hbe  where  hbe.group_id = #{group_id} and hbe.hos_id = #{hos_id}   and hbe.plan_id=#{plan_id}union all
   select count(*)  a from   HR_EXAM hex  where  hex.group_id = #{group_id} and hex.hos_id = #{hos_id}   and hex.plan_id=#{plan_id}union all
   select count(*) a  from   HR_EXAM_RESULT her  where  her.group_id = #{group_id} and her.hos_id = #{hos_id}   and her.plan_id=#{plan_id}union all
   select count(*) a from   HR_TRAIN_CERT htcr  where  htcr.group_id = #{group_id} and htcr.hos_id = #{hos_id}   and htcr.plan_id=#{plan_id}union all
   select count(*)  a from   HR_TRAIN_EMP_CERT  httec  where  httec.group_id = #{group_id} and httec.hos_id = #{hos_id}   and httec.plan_id=#{plan_id}
 ) ac
	
	</select>
	<select id="queryPlantByIdOrName" resultMap="hrPlan"
		parameterType="java.util.Map"> SELECT 
		group_id,
		hos_id,
		train_title
		FROM HR_TRAIN_PLAN 
		where
		
				 group_id = #{group_id}
				AND hos_id = #{hos_id}
		and plan_id!=#{plan_id}
		and train_title = #{train_title} 
			</select>
	<!--部门信息 -->
	<select id="queryDeptInfo" parameterType="java.util.Map" resultType="java.util.Map" >
		select dept_id, dept_code, dept_name,dept_no
		from hos_dept_dict 
		where group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			and is_stop = 0
			and is_last =1
		order by dept_code
	</select>
	<select id="queryDeptNo"  resultType="string" >
		select dept_no
		from hos_dept_dict 
		where group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER}
			and dept_id=#{dept_id,jdbcType=INTEGER} 
			and is_stop = 0
			and is_last =1
		order by dept_code
	</select>
	
		<!--培训类别 -->
	<select id="queryTrainTypeInfo" parameterType="java.util.Map" resultType="java.util.Map" >
		select type_code, type_name
		from HR_TRAIN_TYPE 
		where group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
			
		order by type_code
	</select>
		<!--培训方式 -->
	<select id="queryTrainWayInfo" parameterType="java.util.Map" resultType="java.util.Map" >
		select way_code,way_name
		from HR_TRAIN_WAY 
		where group_id = #{group_id,jdbcType=INTEGER} 
			and hos_id = #{hos_id,jdbcType=INTEGER} 
		order by way_code
	</select>
	<select id="queryByCodeCert" resultType="java.lang.Integer">
	select nvl(count(*),0) from HR_TRAIN_CERT
	where
	group_id = #{group_id}
	and hos_id = #{hos_id}
	and plan_id=#{plan_id}
	</select>
	<select id="queryByCodeExam" resultType="java.lang.Integer">
	select nvl(count(*),0) from HR_exam
	where
	group_id = #{group_id}
	and hos_id = #{hos_id}
	and plan_id=#{plan_id}
	
	</select>
	<select id="queryUserPlan" resultType="java.lang.Integer">
	
	select count(*) from HR_TRAIN_CLASS
	where 
	group_id = #{group_id}
	and hos_id = #{hos_id}
	and plan_id=#{plan_id}
	</select>
</mapper>

