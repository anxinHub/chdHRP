<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.training.HrTrainRecordMapper">
	<resultMap type="java.util.Map" id="trainClass">
		<result column="group_id" property="group_id"/>
		<result column="hos_id" property="hos_id"/>
		<result column="plan_id" property="plan_id"/>
		<result column="train_date" property="train_date"/>
		<result column="train_title" property="train_title"/>
		<result column="time_begin" property="time_begin"/>
		<result column="time_end" property="time_end"/>
		<result column="train_site" property="train_site"/>
		<result column="teacher" property="teacher"/>
		<result column="hours" property="hours"/>
		<result column="train_content" property="train_content"/>
		<result column="note" property="note"/>
		<result column="emp_num" property="emp_num"/>
		<result column="train_way_code" property="train_way_code"/>
	</resultMap>
	<resultMap type="java.util.Map" id="targetMap">
		<result column="emp_id" property="emp_id"/>
		<result column="emp_name" property="emp_name"/>
		<result column="emp_code" property="emp_code"/>
		<result column="dept_code" property="dept_code"/>
		<result column="dept_name" property="dept_name"/>
		<result column="row_id" property="row_id"/>
		<result column="kind_name" property="kind_name"/>
	</resultMap>
	<resultMap type="java.util.Map" id="noticeMap">
		<result column="train_date" property="train_date"/>
		<result column="train_site" property="train_site"/>
		<result column="time" property="time"/>
		<result column="time_begin" property="time_begin"/>
		<result column="time_end" property="time_end"/>
		<result column="train_title" property="train_title"/>
		<result column="teacher" property="teacher"/>
		<result column="seat_number" property="seat_number"/>
		<result column="note" property="note"/>
		<result column="emp_name" property="emp_name"/>
		<result column="emp_id" property="emp_id"/>
		<result column="inform_way_code" property="inform_way_code"/>
		<result column="way_name" property="way_name"/>
		<result column="row_id" property="row_id"/>
	</resultMap>
	<resultMap type="java.util.Map" id="signinMap">
		<result column="dept_name" property="dept_name"/>
		<result column="emp_id" property="emp_id"/>
		<result column="dept_code" property="dept_code"/>
		<result column="emp_code" property="emp_code"/>
		<result column="emp_name" property="emp_name"/>
		<result column="kind_name" property="kind_name"/>
		<result column="in_time" property="in_time"/>
		<result column="out_time" property="out_time"/>
		<result column="sign_case" property="sign_case"/>
		<result column="sign" property="sign"/>
		<result column="row_id" property="row_id"/>
		<result column="group_id" property="group_id"/>
		<result column="hos_id" property="hos_id"/>
		<result column="plan_id" property="plan_id"/>
	</resultMap>
	<resultMap type="java.util.Map" id="coursewareMap">
		<result column="kj_id" property="kj_id"/>
		<result column="unit" property="unit"/>
		<result column="dept" property="dept"/>
		<result column="job_title" property="job_title"/>
		<result column="note" property="note"/>
		<result column="direction" property="direction"/>
		<result column="teacher" property="teacher"/>
		<result column="file_path" property="file_path"/>
	</resultMap>
	<resultMap type="java.util.Map" id="photoMap">
		<result column="group_id" property="group_id"/>
		<result column="hos_id" property="hos_id"/>
		<result column="plan_id" property="plan_id"/>
		<result column="photo_id" property="photo_id"/>
		<result column="file_path" property="file_path"/>
		<result column="up_time" property="up_time"/>
		<result column="user_id" property="user_id"/>
	</resultMap>

	
	<insert id="addTrainClasss" parameterType="java.util.Map">
		INSERT INTO HR_TRAIN_CLASS (GROUP_ID,HOS_ID,PLAN_ID,TRAIN_DATE,TIME_BEGIN,TIME_END,TRAIN_SITE,TEACHER,HOURS,TRAIN_CONTENT,NOTE)
		VALUES(
			#{group_id,jdbcType=NUMERIC},
			#{hos_id,jdbcType=NUMERIC},
			#{plan_id,jdbcType=NUMERIC},
			to_date(#{train_date,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			#{time_begin,jdbcType=VARCHAR},
			#{time_end,jdbcType=VARCHAR},
			#{train_site,jdbcType=VARCHAR},
			#{teacher,jdbcType=VARCHAR},
			#{hours,jdbcType=NUMERIC},
			#{train_content,jdbcType=VARCHAR},
			#{note,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateTrainClasss" parameterType="java.util.Map">
		UPDATE HR_TRAIN_CLASS
		<set>
			<if test="train_date != null and train_date != ''">
				train_date = to_date(#{train_date,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			</if>
			<if test="time_begin != null and time_begin != ''">
				time_begin = #{time_begin,jdbcType=VARCHAR},
			</if>
			<if test="time_end != null and time_end != ''">
				time_end = #{time_end,jdbcType=VARCHAR},
			</if>
			<if test="teacher != null and teacher != ''">
				teacher = #{teacher,jdbcType=VARCHAR},
			</if>
			<if test="hours != null and hours != ''">
				hours = #{hours,jdbcType=NUMERIC},
			</if>
			train_site = #{train_site,jdbcType=VARCHAR},
			train_content = #{train_content,jdbcType=NUMERIC},
			note = #{note,jdbcType=NUMERIC}
		</set>
		<where>
			group_id = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and plan_id = #{plan_id, jdbcType=NUMERIC}
		</where>
	</update>
	
	<insert id="addTrainRecordTarget" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_OBJECT (GROUP_ID,HOS_ID,PLAN_ID,EMP_ID)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{item.group_id,jdbcType=NUMERIC},
			#{item.hos_id,jdbcType=NUMERIC},
			#{item.plan_id,jdbcType=NUMERIC},
			#{item.emp_id,jdbcType=NUMERIC}
			from dual
		</foreach>
	</insert>
	
	<delete id="deleteTrainRecordTarget" parameterType="java.util.List">
		DELETE FROM HR_TRAIN_OBJECT WHERE
		<foreach close=")" collection="list" item="item" index="index"
		open="(" separator="or">
			GROUP_ID = #{item.group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{item.hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{item.plan_id, jdbcType=NUMERIC} 
			and rowid = #{item.row_id, jdbcType=VARCHAR}
		</foreach>
	</delete>
	<delete id="deleteTrainRecordTargetByPlanId" parameterType="java.util.Map">
		DELETE FROM HR_TRAIN_OBJECT 
		WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
		AND PLAN_ID = #{plan_id, jdbcType=NUMERIC} 
	</delete>
	
	<select id="queryTrainRecordTarget" parameterType="java.util.Map" resultMap="targetMap">
		SELECT he.emp_id,he.EMP_NAME,he.EMP_CODE,hd.DEPT_NAME,hd.dept_code,hek.KIND_NAME,ROWIDTOCHAR(hto.ROWID) as row_id FROM 
		HR_TRAIN_OBJECT hto 
		LEFT JOIN HOS_EMP he on hto.GROUP_ID = he.GROUP_ID AND hto.HOS_ID = he.HOS_ID AND hto.EMP_ID = he.EMP_ID 
		LEFT JOIN HOS_EMP_KIND hek ON hto.GROUP_ID  = hek.GROUP_ID AND hto.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HOS_DEPT hd ON hto.GROUP_ID = hd.GROUP_ID AND hto.HOS_ID = hd.HOS_ID AND he.DEPT_ID = hd.DEPT_ID 
		<where>
			hto.group_id = #{group_id, jdbcType=NUMERIC}
			AND hto.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and hto.plan_id = #{plan_id, jdbcType=NUMERIC}
			<if test="kind_code != null and kind_code != ''">
				and he.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and he.DEPT_ID = #{dept_id, jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and he.emp_id = #{emp_id, jdbcType=VARCHAR}
			</if>
		</where>
		order by he.emp_code
	</select>
	
	<select id="queryTrainRecordTargetForAdd" parameterType="java.util.Map" resultMap="targetMap">
		SELECT he.emp_id,he.EMP_NAME,he.EMP_CODE,hd.DEPT_NAME,hd.dept_code,hek.KIND_NAME FROM 
		HOS_EMP he 
		LEFT JOIN HOS_EMP_KIND hek ON he.GROUP_ID  = hek.GROUP_ID AND he.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HOS_DEPT hd ON he.GROUP_ID = hd.GROUP_ID AND he.HOS_ID = hd.HOS_ID AND he.DEPT_ID = hd.DEPT_ID 
		<where>
			he.group_id = #{group_id, jdbcType=NUMERIC}
			AND he.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			<if test="kind_code != null and kind_code != ''">
				and he.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and he.DEPT_ID = #{dept_id, jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and he.emp_id = #{emp_id, jdbcType=VARCHAR}
			</if>
			and he.EMP_ID not in (
				SELECT EMP_ID FROM HR_TRAIN_OBJECT where group_id = #{group_id, jdbcType=NUMERIC}
				AND HOS_ID = #{hos_id, jdbcType=NUMERIC} and plan_id = #{plan_id, jdbcType=NUMERIC}
			)
		</where>
		order by he.emp_code
	</select>
	
	<select id="queryTrainRecordBKEmp" parameterType="java.util.Map" resultMap="targetMap">
		SELECT he.emp_id,he.EMP_NAME,he.EMP_CODE,hd.DEPT_NAME,hd.dept_code,hek.KIND_NAME FROM 
		HR_TRAIN_BK_EMP hto 
		LEFT JOIN HOS_EMP he on hto.GROUP_ID = he.GROUP_ID AND hto.HOS_ID = he.HOS_ID AND hto.EMP_ID = he.EMP_ID 
		LEFT JOIN HOS_EMP_KIND hek ON hto.GROUP_ID  = hek.GROUP_ID AND hto.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HOS_DEPT hd ON hto.GROUP_ID = hd.GROUP_ID AND hto.HOS_ID = hd.HOS_ID AND he.DEPT_ID = hd.DEPT_ID 
		<where>
			hto.group_id = #{group_id, jdbcType=NUMERIC}
			AND hto.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and hto.plan_id = #{plan_id, jdbcType=NUMERIC}
			<if test="kind_code != null and kind_code != ''">
				and he.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and he.DEPT_ID = #{dept_id, jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and he.emp_id = #{emp_id, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="queryTrainRecordNotice" parameterType="java.util.Map" resultMap="noticeMap">
		SELECT TO_CHAR(hti.TRAIN_DATE,'yyyy-mm-dd') train_date,CONCAT(CONCAT(hti.TIME_BEGIN, '-'),hti.TIME_END) as time,hti.TIME_BEGIN,hti.TIME_END,hti.TRAIN_SITE, hti.TRAIN_TITLE,hti.TEACHER, hti.SEAT_NUMBER,hti.NOTE ,he.EMP_NAME,he.EMP_ID ,hti.INFORM_WAY_CODE,hiw.WAY_NAME ,ROWIDTOCHAR(hti.ROWID) as row_id
		FROM 
		HR_TRAIN_INFORM hti 
		LEFT JOIN HOS_EMP he on hti.GROUP_ID = he.GROUP_ID AND hti.HOS_ID = he.HOS_ID AND hti.EMP_ID = he.EMP_ID
		LEFT JOIN HOS_EMP_KIND hek ON hti.GROUP_ID  = hek.GROUP_ID AND hti.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HR_INFORM_WAY hiw on hiw.GROUP_ID = hti.GROUP_ID AND hiw.HOS_ID = hti.HOS_ID AND hti.INFORM_WAY_CODE = hiw.WAY_CODE
		<where>
			hti.group_id = #{group_id, jdbcType=NUMERIC}
			AND hti.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and hti.plan_id = #{plan_id, jdbcType=NUMERIC}
			<if test="kind_code != null and kind_code != ''">
				and he.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and he.DEPT_ID = #{dept_id, jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and he.emp_id = #{emp_id, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="queryTrainClass" parameterType="java.util.Map" resultMap="trainClass">
		SELECT htc.GROUP_ID,htc.HOS_ID,htc.PLAN_ID,htc.TRAIN_DATE,htc.TIME_BEGIN,htc.TIME_END,htc.TRAIN_SITE,htc.TEACHER,htc.HOURS,htc.TRAIN_CONTENT,htc.NOTE,htp.TRAIN_TITLE
		FROM HR_TRAIN_CLASS htc
		LEFT JOIN HR_TRAIN_PLAN htp ON htc.GROUP_ID = htp.GROUP_ID AND htc.HOS_ID = htp.HOS_ID AND htc.PLAN_ID = htp.PLAN_ID		
		WHERE htc.GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND htc.HOS_ID =  #{hos_id, jdbcType=NUMERIC}
		AND htc.PLAN_ID = #{plan_id, jdbcType=NUMERIC}
	</select>
	
	<select id="queryTrainObject" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT EMP_ID as "emp_id" FROM HR_TRAIN_OBJECT
		WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND HOS_ID =  #{hos_id, jdbcType=NUMERIC}
		AND PLAN_ID = #{plan_id, jdbcType=NUMERIC}
		and emp_id not in (
			select emp_id from HR_TRAIN_INFORM 
			WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID =  #{hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{plan_id, jdbcType=NUMERIC}
		)
	</select>
	
	<select id="queryTrainObjectForSignIn" parameterType="java.util.Map" resultMap="signinMap">
		SELECT hro.GROUP_ID,hro.HOS_ID,hro.PLAN_ID,hro.EMP_ID,CONCAT(TO_CHAR(hrc.TRAIN_DATE, 'yyyy-MM-dd'), ' '||hrc.TIME_BEGIN) as IN_TIME,null as OUT_TIME,1 as SIGN_CASE 
		FROM HR_TRAIN_OBJECT hro
		LEFT JOIN HR_TRAIN_CLASS hrc ON hro.GROUP_ID = hrc.GROUP_ID and hro.HOS_ID = hrc.HOS_ID and hro.PLAN_ID = hrc.PLAN_ID
		WHERE hro.GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND hro.HOS_ID =  #{hos_id, jdbcType=NUMERIC}
		AND hro.PLAN_ID = #{plan_id, jdbcType=NUMERIC}
		and hro.emp_id not in (
			select emp_id from hr_train_sign_in 
			WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID =  #{hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{plan_id, jdbcType=NUMERIC}
		)
		<if test="bkemp == 'bkemp'">
			and hro.emp_id not in (
				select emp_id from HR_TRAIN_BK_EMP 
				WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC}
				AND HOS_ID =  #{hos_id, jdbcType=NUMERIC}
				AND PLAN_ID = #{plan_id, jdbcType=NUMERIC}
			)
		</if>
	</select>
	
	<insert id="createTrainRecordNotice" parameterType="java.util.Map">
		INSERT INTO HR_TRAIN_INFORM (GROUP_ID,HOS_ID,PLAN_ID,EMP_ID,TRAIN_DATE,TIME_BEGIN,TIME_END,TRAIN_SITE,TEACHER,TRAIN_TITLE,SEAT_NUMBER,INFORM_WAY_CODE,NOTE)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{group_id,jdbcType=NUMERIC},
			#{hos_id,jdbcType=NUMERIC},
			#{plan_id,jdbcType=NUMERIC},
			#{item.emp_id,jdbcType=NUMERIC},
			to_date(#{train_date,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			#{time_begin,jdbcType=VARCHAR},
			#{time_end,jdbcType=VARCHAR},
			#{train_site,jdbcType=VARCHAR},
			#{teacher,jdbcType=VARCHAR},
			#{train_title,jdbcType=VARCHAR},
			#{item.seat_number,jdbcType=VARCHAR},
			#{inform_way_code,jdbcType=VARCHAR},
			#{note,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	
	<insert id="addTrainRecordNotice" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_INFORM (GROUP_ID,HOS_ID,PLAN_ID,EMP_ID,TRAIN_DATE,TIME_BEGIN,TIME_END,TRAIN_SITE,TEACHER,TRAIN_TITLE,SEAT_NUMBER,INFORM_WAY_CODE,NOTE)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{item.group_id,jdbcType=NUMERIC},
			#{item.hos_id,jdbcType=NUMERIC},
			#{item.plan_id,jdbcType=NUMERIC},
			#{item.emp_id,jdbcType=NUMERIC},
			to_date(#{item.train_date,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			#{item.time_begin,jdbcType=VARCHAR},
			#{item.time_end,jdbcType=VARCHAR},
			#{item.train_site,jdbcType=VARCHAR},
			#{item.teacher,jdbcType=VARCHAR},
			#{item.train_title,jdbcType=VARCHAR},
			#{item.seat_number,jdbcType=NUMERIC},
			#{item.inform_way_code,jdbcType=VARCHAR},
			#{item.note,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	
	<delete id="deleteTrainRecordNotice" parameterType="java.util.List">
		DELETE FROM HR_TRAIN_INFORM WHERE
		<foreach close=")" collection="list" item="item" index="index"
		open="(" separator="or">
			GROUP_ID = #{item.group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{item.hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{item.plan_id, jdbcType=NUMERIC} 
			AND rowid = #{item.row_id, jdbcType=NUMERIC}
		</foreach>
	</delete>
	<delete id="deleteTrainRecordNoticeByPlanId" parameterType="java.util.Map">
		DELETE FROM HR_TRAIN_INFORM WHERE
		GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
		AND PLAN_ID = #{plan_id, jdbcType=NUMERIC} 
	</delete>
	
	<select id="queryTrainRecordSignIn" parameterType="java.util.Map" resultMap="signinMap">
		select hd.DEPT_NAME, he.EMP_ID, he.EMP_NAME, hek.KIND_NAME, TO_CHAR(htsi.IN_TIME,'yyyy-MM-dd hh24:mi') as in_time
			, TO_CHAR(htsi.OUT_TIME,'yyyy-MM-dd hh24:mi') as out_time, he.emp_code, hd.dept_code,ROWIDTOCHAR(htsi.ROWID) as row_id, htsi.SIGN_CASE
			, case htsi.SIGN_CASE
				when '4' then '迟到+早退'
				when '3' then '早退'
				when '2' then '迟到'
				else '正常'
			end as SIGN
		from HR_TRAIN_SIGN_IN htsi
		LEFT JOIN HOS_EMP he on htsi.GROUP_ID = he.GROUP_ID AND htsi.HOS_ID = he.HOS_ID AND htsi.EMP_ID = he.EMP_ID 
		LEFT JOIN HOS_EMP_KIND hek ON htsi.GROUP_ID  = hek.GROUP_ID AND htsi.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HOS_DEPT hd ON htsi.GROUP_ID = hd.GROUP_ID AND htsi.HOS_ID = hd.HOS_ID AND he.DEPT_ID = hd.DEPT_ID 
		<where>
			htsi.group_id = #{group_id, jdbcType=NUMERIC}
			AND htsi.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and htsi.plan_id = #{plan_id, jdbcType=NUMERIC}
			<if test="kind_code != null and kind_code != ''">
				and he.kind_code = #{kind_code, jdbcType=VARCHAR}
			</if>
			<if test="dept_id != null and dept_id != ''">
				and he.DEPT_ID = #{dept_id, jdbcType=VARCHAR}
			</if>
			<if test="emp_id != null and emp_id != ''">
				and he.emp_id = #{emp_id, jdbcType=VARCHAR}
			</if>
			<if test="sign_case != null and sign_case != ''">
				and htsi.SIGN_CASE = #{sign_case, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<delete id="deleteTrainRecordSignIn" parameterType="java.util.List">
		DELETE FROM HR_TRAIN_SIGN_IN WHERE
		<foreach close=")" collection="list" item="item" index="index"
		open="(" separator="or">
			GROUP_ID = #{item.group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{item.hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{item.plan_id, jdbcType=NUMERIC} 
			AND rowid = #{item.row_id, jdbcType=VARCHAR}
		</foreach>
	</delete>
	<delete id="deleteTrainRecordSignInByPlanId" parameterType="java.util.Map">
		DELETE FROM HR_TRAIN_SIGN_IN WHERE
		GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
		AND PLAN_ID = #{plan_id, jdbcType=NUMERIC} 
	</delete>
	
	<insert id="saveTrainRecordSignIn" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_SIGN_IN(GROUP_ID,HOS_ID,PLAN_ID,EMP_ID,IN_TIME,OUT_TIME,SIGN_CASE)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{item.group_id,jdbcType=NUMERIC},
			#{item.hos_id,jdbcType=NUMERIC},
			#{item.plan_id,jdbcType=NUMERIC},
			#{item.emp_id,jdbcType=NUMERIC},
			to_date(#{item.in_time,jdbcType=DATE},'yyyy-MM-dd hh24:mi:ss'),
			to_date(#{item.out_time,jdbcType=DATE},'yyyy-MM-dd hh24:mi:ss'),
			#{item.sign_case,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	
	<select id="queryTrainRecordCourseware" parameterType="java.util.Map" resultMap="coursewareMap">
		SELECT KJ_ID,UNIT,DEPT,JOB_TITLE,NOTE,DIRECTION,TEACHER,FILE_PATH FROM HR_TRAIN_KJ
		where group_id = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and plan_id = #{plan_id, jdbcType=NUMERIC}
	</select>
	
	<delete id="deleteTrainRecordCourseware" parameterType="java.util.List">
		DELETE FROM HR_TRAIN_KJ WHERE
		<foreach close=")" collection="list" item="item" index="index"
		open="(" separator="or">
			GROUP_ID = #{item.group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{item.hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{item.plan_id, jdbcType=NUMERIC} 
			AND KJ_ID = #{item.kj_id, jdbcType=NUMERIC}
		</foreach>
	</delete>
	<delete id="deleteTrainRecordCoursewareByPlanId" parameterType="java.util.Map">
		DELETE FROM HR_TRAIN_KJ 
		WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
		AND PLAN_ID = #{plan_id, jdbcType=NUMERIC} 
	</delete>
	
	<insert id="saveTrainRecordCourseware" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_KJ(GROUP_ID,HOS_ID,PLAN_ID,KJ_ID,UNIT,DEPT,JOB_TITLE,NOTE,DIRECTION,TEACHER,FILE_PATH)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{item.group_id,jdbcType=NUMERIC},
			#{item.hos_id,jdbcType=NUMERIC},
			#{item.plan_id,jdbcType=NUMERIC},
			#{item.kj_id,jdbcType=NUMERIC},
			#{item.unit,jdbcType=VARCHAR},
			#{item.dept,jdbcType=VARCHAR},
			#{item.job_title,jdbcType=VARCHAR},
			#{item.note,jdbcType=VARCHAR},
			#{item.direction,jdbcType=VARCHAR},
			#{item.teacher,jdbcType=VARCHAR},
			#{item.file_path,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	
	<delete id="deleteTrainRecordBKEmp" parameterType="java.util.List">
		DELETE FROM HR_TRAIN_BK_EMP WHERE
		<foreach close=")" collection="list" item="item" index="index"
		open="(" separator="or">
			GROUP_ID = #{item.group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{item.hos_id, jdbcType=NUMERIC}
			AND PLAN_ID = #{item.plan_id, jdbcType=NUMERIC} 
			AND EMP_ID = #{item.emp_id, jdbcType=NUMERIC}
		</foreach>
	</delete>
	<delete id="deleteTrainRecordBKEmpByPlanId" parameterType="java.util.Map">
		DELETE FROM HR_TRAIN_BK_EMP WHERE
		GROUP_ID = #{group_id, jdbcType=NUMERIC}
		AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
		AND PLAN_ID = #{plan_id, jdbcType=NUMERIC} 
	</delete>
	
	<insert id="saveTrainRecordBKEmp" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_BK_EMP(GROUP_ID,HOS_ID,PLAN_ID,EMP_ID)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{item.group_id,jdbcType=NUMERIC},
			#{item.hos_id,jdbcType=NUMERIC},
			#{item.plan_id,jdbcType=NUMERIC},
			#{item.emp_id,jdbcType=NUMERIC}
			from dual
		</foreach>
	</insert>
	
	<insert id="saveTrainRecordBK" parameterType="java.util.Map">
		INSERT INTO HR_TRAIN_BK(GROUP_ID,HOS_ID,PLAN_ID,TRAIN_DATE,TIME_BEGIN,TIME_END,TRAIN_SITE,TRAIN_WAY_CODE,EMP_NUM)
		VALUES(
			#{group_id,jdbcType=NUMERIC},
			#{hos_id,jdbcType=NUMERIC},
			#{plan_id,jdbcType=NUMERIC},
			to_date(#{train_date,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			#{time_begin,jdbcType=VARCHAR},
			#{time_end,jdbcType=VARCHAR},
			#{train_site,jdbcType=VARCHAR},
			#{train_way_code,jdbcType=VARCHAR},
			#{emp_num,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateTrainRecordBK" parameterType="java.util.Map">
		UPDATE HR_TRAIN_BK
		<set>
			<if test="time_begin != null and time_begin != ''">
				time_begin = #{time_begin,jdbcType=VARCHAR},
			</if>
			<if test="time_end != null and time_end != ''">
				time_end = #{time_end,jdbcType=VARCHAR},
			</if>
			<if test="train_site != null and train_site != ''">
				train_site = #{train_site,jdbcType=VARCHAR},
			</if>
			<if test="train_way_code != null and train_way_code != ''">
				train_way_code = #{train_way_code,jdbcType=VARCHAR},
			</if>
			<if test="train_date != null and train_date != ''">
				train_date = to_date(#{train_date,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			</if>
				emp_num = #{emp_num,jdbcType=VARCHAR}
		</set>
		<where>
			group_id = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and plan_id = #{plan_id, jdbcType=NUMERIC}
		</where>
	</update>
	
	<select id="queryTrainRecordBK" parameterType="java.util.Map" resultMap="trainClass">
		SELECT TRAIN_DATE,TIME_END,TIME_BEGIN,TRAIN_SITE,TRAIN_WAY_CODE,EMP_NUM FROM HR_TRAIN_BK 
		where group_id = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and plan_id = #{plan_id, jdbcType=NUMERIC}
	</select>
	
	<select id="queryEmpDetailInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT he.emp_id as "emp_id" , he.EMP_CODE as "emp_code",hek.KIND_NAME as "kind_name",hd.dept_name as "dept_name",hd.dept_code as "dept_code" FROM HOS_EMP he
		LEFT JOIN HOS_EMP_KIND hek ON he.GROUP_ID = hek.GROUP_ID AND he.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HOS_DEPT_DICT hd on he.GROUP_ID = hd.group_id and he.hos_id = hd.hos_id and he.dept_id = hd.dept_id and he.dept_no = hd.dept_no
		where he.group_id = #{group_id, jdbcType=NUMERIC}
			AND he.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and he.emp_id = #{emp_id, jdbcType=NUMERIC}
			and he.is_stop = 0
			<if test="emp_code != null and emp_code != ''">
				and he.emp_code like '%'||#{emp_code,jdbcType=VARCHAR}
			</if>
			<if test="emp_name != null and emp_code != ''">
				and he.emp_name = #{emp_name,jdbcType=VARCHAR}
			</if>
	</select>
	
	<select id="queryEmpIdByCodeName" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT he.emp_id FROM HOS_EMP he
		LEFT JOIN HOS_EMP_KIND hek ON he.GROUP_ID = hek.GROUP_ID AND he.HOS_ID = hek.HOS_ID AND he.KIND_CODE = hek.KIND_CODE
		LEFT JOIN HOS_DEPT_DICT hd on he.GROUP_ID = hd.group_id and he.hos_id = hd.hos_id and he.dept_id = hd.dept_id and he.dept_no = hd.dept_no
		where he.group_id = #{group_id, jdbcType=NUMERIC}
			AND he.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and he.is_stop = 0
			<if test="emp_code != null and emp_code != ''">
				and ltrim(he.emp_code,0) = ltrim(#{emp_code,jdbcType=VARCHAR},0)
			</if>
			<if test="emp_name != null and emp_code != ''">
				and he.emp_name = #{emp_name,jdbcType=VARCHAR}
			</if>
	</select>
	
	<insert id="saveTrainRecordPhoto" parameterType="java.util.List">
		INSERT INTO HR_TRAIN_PHOTO(GROUP_ID,HOS_ID,PLAN_ID,PHOTO_ID,FILE_PATH,UP_TIME,USER_ID)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union">
			select
			#{item.group_id,jdbcType=NUMERIC},
			#{item.hos_id,jdbcType=NUMERIC},
			#{item.plan_id,jdbcType=NUMERIC},
			#{item.photo_id,jdbcType=NUMERIC},
			#{item.file_path,jdbcType=VARCHAR},
			to_date(#{item.up_time,jdbcType=TIMESTAMP},'yyyy-MM-dd'),
			#{item.user_id,jdbcType=NUMERIC}
			from dual
		</foreach>
	</insert>
	
	<select id="querySignInEmpSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT hto.emp_id as "id",hs.EMP_NAME as "label" FROM HR_TRAIN_OBJECT hto
		LEFT JOIN hos_emp hs ON hto.GROUP_ID = hs.GROUP_ID AND hto.HOS_ID = hs.HOS_ID AND hto.EMP_ID = hs.EMP_ID
		where hto.group_id = #{group_id, jdbcType=NUMERIC}
			AND hto.HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and hto.plan_id = #{plan_id, jdbcType=NUMERIC}
			<if test="ids != null and ids != ''">
				and hto.emp_id not in (${ids})
			</if>
			<if test="dept_id != null and dept_id != ''">
				and hs.dept_id = #{dept_id}
			</if>
			<if test="key != null and key != ''">
				and (
				hs.emp_name like '%'||#{key}||'%' or
					he.emp_code like '%'||#{key}||'%' 
				)
			</if>
			<if test="not_table != null and not_table != ''">
				and hto.EMP_ID NOT IN (
					SELECT EMP_ID FROM ${not_table} 
					WHERE GROUP_ID = #{group_id, jdbcType=NUMERIC} 
					AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
					AND PLAN_ID = #{plan_id, jdbcType=NUMERIC}
				)
			</if>
			<if test="key != null and key != ''">
				and (hs.EMP_NAME like '%${key}%' or
				 hs.spell_code like '%'||UPPER(#{key})||'%' or
				 hs.wbx_code like '%'||UPPER(#{key})||'%')
			</if>
	</select>
	
	<select id="queryNoticeModeSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT WAY_CODE as "id" ,WAY_NAME as "label" ,WAY_NAME as "text"  FROM HR_INFORM_WAY
		where group_id = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and is_stop = 0
	</select>
	
	<select id="queryEmpSelectForRecord" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT EMP_ID as "id" ,EMP_NAME as "text",EMP_NAME as "label" FROM HOS_EMP 
		where group_id = #{group_id, jdbcType=NUMERIC}
			AND HOS_ID = #{hos_id, jdbcType=NUMERIC}
			and is_stop = 0
			<if test="notin == null or notin == ''">
			and emp_id not in(
				select emp_id from hr_train_object where 
				group_id = #{group_id, jdbcType=NUMERIC} 
				and hos_id = #{hos_id, jdbcType=NUMERIC}
				and plan_id = #{plan_id, jdbcType=NUMERIC}
			)
			</if>
			<if test="dept_id != null and dept_id != ''">
				and dept_id = #{dept_id}
			</if>
			<if test="key != null and key != ''">
				and (EMP_NAME like '%${key}%' or
				EMP_CODE like '%${key}%' or
				 spell_code like '%'||UPPER(#{key})||'%' or
				 wbx_code like '%'||UPPER(#{key})||'%')
			</if>
			and 100 > ROWNUM 
	</select>
	
	<select id="queryTrainRecordPhoto" parameterType="java.util.Map" resultMap="photoMap">
		select group_id,hos_id,plan_id,photo_id,file_path,TO_CHAR(UP_TIME, 'yyyy-MM-dd') as up_time,user_id from hr_train_photo 
		where group_id = #{group_id, jdbcType=NUMERIC}
		and hos_id = #{hos_id, jdbcType=NUMERIC}
		and plan_id =  #{plan_id, jdbcType=NUMERIC}
		<if test="file_path != null and file_path != ''">
				and file_path = #{file_path}
		</if>
		<if test="doc_id != null and doc_id != ''">
				and doc_id = #{doc_id}
		</if>
	</select>
	
	<delete id="deleteTrainRecordPhoto" parameterType="java.util.Map">
		delete from hr_train_photo 
		where group_id = #{group_id, jdbcType=NUMERIC}
		and hos_id = #{hos_id, jdbcType=NUMERIC}
		and plan_id =  #{plan_id, jdbcType=NUMERIC}
	</delete>
	
	
	<select id="queryEmpExists" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from ${table_code}
		where group_id = #{group_id, jdbcType=NUMERIC}
		and hos_id = #{hos_id, jdbcType=NUMERIC}
		and plan_id =  #{plan_id, jdbcType=NUMERIC}
		and emp_id = #{emp_id, jdbcType=NUMERIC}
	</select>
</mapper>

