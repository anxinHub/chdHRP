<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.organize.HrDeptDictMapper">
 
	<resultMap id="deptDict" type="com.chd.hrp.hr.entity.orangnize.HrDeptDict">
		<result property="dept_no" column="dept_no" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="user_code" column="user_code" />
		<result property="user_name" column="user_name" />
		<result property="create_date" column="create_date" />
		<result property="note" column="note" />
		<result property="is_stop" column="is_stop" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="natur_code" column="natur_code" />
		<result property="natur_name" column="natur_name" />
		<result property="kind_code" column="kind_code" />
		<result property="kind_name" column="kind_name" />
		<result property="out_code" column="out_code" />
		<result property="out_name" column="out_name" />
		<result property="para_code" column="para_code" />
		<result property="para_name" column="para_name" />
		<result property="is_disable" column="is_disable" />
		
	</resultMap>
	
	<resultMap id="deptDict1" type="java.util.Map">
		<result property="dept_no" column="dept_no" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="dept_id" column="dept_id" />
		<result property="dept_code" column="dept_code" />
		<result property="dept_name" column="dept_name" />
		<result property="user_code" column="user_code" />
		<result property="create_date" column="create_date" />
		<result property="note" column="note" />
		<result property="is_stop" column="is_stop" />
		<result property="type_code" column="type_code" />
		<result property="type_name" column="type_name" />
		<result property="natur_code" column="natur_code" />
		<result property="natur_name" column="natur_name" />
		<result property="kind_code" column="kind_code" />
		<result property="kind_name" column="kind_name" />
		<result property="out_code" column="out_code" />
		<result property="out_name" column="out_name" />
		<result property="para_code" column="para_code" />
		<result property="para_name" column="para_name" />
		<result property="is_disable" column="is_disable" />
		
	</resultMap>
	
	<resultMap id="by_tree" type="java.util.Map">
		<result property="id" column="id" />
		<result property="dept_id" column="dept_id" />
		<result property="code" column="code" />
		<result property="text" column="text" />
		<result property="pcode" column="pcode" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="is_disable" column="is_disable" />
	</resultMap>
	<insert id="addDeptDict" useGeneratedKeys="true">

		INSERT INTO
		HR_DEPT_DICT (
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		kind_code,
		super_code,
		dept_level,
		udefine_code,
		sort_code,
		is_last,
		spell_code,
		wbx_code,
		note,
		user_code,
		create_date,
		dlog,
		is_stop  ,    
		is_disable 

		) VALUES (
		HR_DEPT_DICT_SEQ.nextval ,
		#{group_id,jdbcType=INTEGER} ,
		#{hos_id,jdbcType=INTEGER} ,
		#{dept_id,jdbcType=INTEGER} ,
		#{dept_code,jdbcType=VARCHAR} ,
		#{dept_name,jdbcType=VARCHAR} ,
		#{kind_code,jdbcType=VARCHAR} ,
		#{super_code,jdbcType=VARCHAR} ,
		#{dept_level,jdbcType=INTEGER} ,
		#{udefine_code,jdbcType=VARCHAR} ,
		#{sort_code,jdbcType=INTEGER} ,
		#{is_last,jdbcType=INTEGER} ,
		#{spell_code,jdbcType=VARCHAR} ,
		#{wbx_code,jdbcType=VARCHAR} ,
		#{note,jdbcType=VARCHAR} ,
		#{user_code,jdbcType=VARCHAR} ,
		#{create_date,jdbcType=VARCHAR} ,
		#{dlog,jdbcType=VARCHAR} ,
		'0',
        #{is_disable,jdbcType=INTEGER}	
		)

	</insert>
	<insert id="addBatchDeptDict" parameterType="java.util.List">

		INSERT INTO HR_DEPT_DICT (
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		kind_code,
		super_code,
		dept_level,
		udefine_code,
		sort_code,
		is_last,
		spell_code,
		wbx_code,
		note,
		user_code,
		create_date,
		dlog,
		is_stop

		)
		select HR_DEPT_DICT_SEQ.nextval , t.* from(
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id} ,
			#{item.hos_id} ,
			#{item.dept_id} ,
			#{item.dept_code} ,
			#{item.dept_name} ,
			#{item.kind_code} ,
			#{item.super_code} ,
			#{item.dept_level} ,
			#{item.udefine_code} ,
			#{item.sort_code} ,
			#{item.is_last} ,
			#{item.spell_code} ,
			#{item.wbx_code} ,
			#{item.note} ,
			#{item.user_code} ,
			#{item.create_date} ,
			#{item.dlog} ,
			#{item.is_stop}
			from dual
		</foreach>
		) t
	</insert>
	<update id="updateDeptDictState" parameterType="java.util.Map">

		UPDATE
			hr_dept_dict
	  SET
			is_stop = 1
		WHERE
			group_id = #{group_id}
			and
			hos_id = #{hos_id}
			and
			dept_id = #{dept_id}
			and is_stop = '0'
	</update>
	<update id="updateIsLast" parameterType="java.util.Map">
	
			UPDATE hr_dept_dict SET
			is_last = #{is_last}
			WHERE
			group_id = #{group_id}
			and
			hos_id =
			#{hos_id}
			and
			dept_code = #{dept_id,jdbcType=VARCHAR}
			<!-- and is_stop = '0' -->
	</update>
	<update id="updateDeptDict" parameterType="java.util.Map">

		UPDATE hr_dept_dict

		<trim prefix="SET" suffixOverrides=",">
				dept_code = #{dept_code,jdbcType=VARCHAR}
				,
				kind_code = #{kind_code,jdbcType=VARCHAR}
				,
				dept_name = #{dept_name,jdbcType=VARCHAR}
				,
				super_code = #{super_code,jdbcType=VARCHAR}
				,
				udefine_code = #{udefine_code,jdbcType=VARCHAR}
				,
				sort_code = #{sort_code,jdbcType=INTEGER}
				,
				is_stop = #{is_stop,jdbcType=INTEGER}
				,
				is_last = #{is_last,jdbcType=INTEGER}
				,
				spell_code = #{spell_code,jdbcType=VARCHAR}
				,
				wbx_code = #{wbx_code,jdbcType=VARCHAR}
				,
				note = #{note,jdbcType=VARCHAR}
				,
				dept_level = #{dept_level,jdbcType=INTEGER},
				user_code= #{user_code,jdbcType=VARCHAR} ,
				create_date=#{create_date,jdbcType=VARCHAR} ,
				dlog=#{dlog,jdbcType=VARCHAR} ,

		</trim>
		WHERE
		<if test="dept_no != null and dept_no != ''">
			dept_no = #{dept_no,jdbcType=VARCHAR}
			and
		</if>
		group_id = #{group_id,jdbcType=VARCHAR}
		and
		hos_id =
		#{hos_id,jdbcType=VARCHAR}
		and
		dept_id = #{dept_id,jdbcType=VARCHAR}
		<if test="is_stop != null and is_stop != ''">
			and is_stop = #{is_stop,jdbcType=INTEGER}

		</if>


	</update>
	<update id="updateBatchDeptDict" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close="end;" separator=";">
			UPDATE hr_dept_dict SET
			dept_name =
			#{dept_name}
			,
			user_code = #{user_code}
			,
			create_date = #{create_date}
			,
			note = #{note}
			,
			is_stop = #{is_stop}

			WHERE
			dept_no = #{item.dept_no}
			and
			group_id = #{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			dept_id =
			#{item.dept_id}

		</foreach>
	</update>

	<delete id="deleteDeptDict" parameterType="java.util.Map">

		DELETE FROM
		hr_dept_dict WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} and
		dept_id = #{dept_id}
	</delete>
	<delete id="deleteBatchDeptDict" parameterType="java.util.List">
		DELETE FROM hr_dept_dict WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			<!-- dept_no = #{item.dept_no}
			and -->
			group_id =
			#{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			dept_id =
			#{item.dept_id}

		</foreach>


	</delete>
		<delete id="hrdeleteBatchDeptDict" parameterType="java.util.List">
		DELETE FROM hr_dept_dict WHERE
		<foreach collection="list" index="index" item="item" open="("
			separator="or" close=")">
			<!-- dept_no = #{item.dept_no}
			and -->
			group_id =
			#{item.group_id}
			and
			hos_id = #{item.hos_id}
			and
			dept_id =
			#{item.dept_id}

		</foreach>


	</delete>
	<select id="queryDeptDictByDeptCode" resultType="com.chd.hrp.hr.entity.orangnize.HrDeptDict" parameterType="string">

		SELECT
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		user_code,
		create_date,
		note,
		is_stop
		FROM hr_dept_dict
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND dept_code = #{dept_code}
			</if>
			<if test="dept_name != null and dept_name != ''">
				AND dept_name = #{dept_name}
			</if>
			<if test="user_code != null and user_code != ''">
				AND user_code = #{user_code}
			</if>
			<if test="create_date != null and create_date != ''">
				AND create_date = #{create_date}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND is_stop = #{is_stop}
			</if>
		</where>

	</select><select id="queryDeptDictByCode" resultType="com.chd.hrp.hr.entity.orangnize.HrDeptDict"
		parameterType="string">

		SELECT
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		kind_code,
		super_code,
		dept_level,
		udefine_code,
		sort_code,
		is_last,
		spell_code,
		wbx_code,
		note,
		user_code,
		create_date,
		dlog,
		is_stop
		FROM hr_dept_dict
		<where>
			is_stop = 0
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND dept_code = #{dept_code}
			</if>
			<if test="dept_name != null and dept_name != ''">
				AND dept_name = #{dept_name}
			</if>

		</where>
	</select>
	<select id="queryDeptDictByCodeDept" resultType="com.chd.hrp.hr.entity.orangnize.HrDeptDict"
		parameterType="string">

		SELECT
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		kind_code,
		super_code,
		dept_level,
		udefine_code,
		sort_code,
		is_last,
		spell_code,
		wbx_code,
		note,
		user_code,
		create_date,
		dlog,
		is_stop
		FROM hr_dept_dict
		<where>
			is_stop = 0
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND dept_code = #{dept_code}
			</if>
			<if test="dept_name != null and dept_name != ''">
				AND dept_name = #{dept_name}
			</if>

		</where>
	</select>
	
	<select id="queryDeptDictByCodeOrName" resultType="com.chd.hrp.hr.entity.orangnize.HrDeptDict"
		parameterType="java.util.Map">

		SELECT
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		kind_code,
		super_code,
		dept_level,
		udefine_code,
		sort_code,
		is_last,
		spell_code,
		wbx_code,
		note,
		user_code,
		create_date,
		dlog,
		is_stop
		FROM hr_dept_dict
		where
			is_stop = 0
			AND group_id = #{group_id}
			AND hos_id = #{hos_id}
			AND (dept_code = #{dept_code} OR dept_name = #{dept_name})

	</select>

	<select id="queryDeptDictByDeptCodeMap" parameterType="java.util.Map"
		resultMap="deptDict">

		SELECT
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		kind_code,
		super_code,
		dept_level,
		udefine_code,
		sort_code,
		is_last,
		spell_code,
		wbx_code,
		note,
		user_code,
		create_date,
		dlog,
		is_stop
		FROM hr_dept_dict
		<where>
			is_stop = 0
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND dept_code = #{dept_code}
			</if>
		</where>
	</select>

	<select id="queryDeptDictByDeptNo" resultType="com.chd.hrp.hr.entity.orangnize.HrDeptDict"
		parameterType="string">

		SELECT
		dept_no,
		group_id,
		hos_id,
		dept_id,
		dept_code,
		dept_name,
		user_code,
		create_date,
		note,
		is_stop
		FROM hr_dept_dict
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND dept_code = #{dept_code}
			</if>
			AND is_stop = 0
		</where>
	</select>
	<select id="queryDeptDict" parameterType="java.util.Map"
		resultMap="deptDict">

		SELECT
		hdd.dept_no,
		hdd.group_id,
		hdd.hos_id,
		hdd.dept_id,
		hdd.dept_code,
		hdd.kind_code,
		hdk.kind_name,
		hdd.super_code,
		hdd.dept_name,
        hdd.dept_level,
		hdd.udefine_code,
		hdd.sort_code,
		hdd.is_last,
		hdd.spell_code,
		hdd.wbx_code,
		hdd.note,
		hdd.user_code,
		hdd.create_date,
		hdd.dlog,
		hdd.is_stop
		FROM
		HR_DEPT_DICT hdd
	    left join hr_dept_kind hdk on hdd.group_id = hdk.group_id
	    and hdd.hos_id = hdk.hos_id and hdd.kind_code = hdk.kind_code
		<where>
		
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hdd.dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdd.dept_code = #{dept_code}
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hdd.kind_code = #{kind_code}
			</if>
			<if test="create_date != null and create_date != ''">
				AND hdd.create_date = #{create_date}
			</if>
			<if test="note != null and note != ''">
				AND hdd.note = #{note}
			</if>
			<if test="is_last != null and is_last != ''">
				AND hdd.is_last = #{is_last}
			</if>

			<if test="queryTree != null and queryTree != ''">
				and ${select_code} like '%${queryTree}%'
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hdd.is_stop = #{is_stop}
			</if>
			<if test="is_disable != null and is_disable != ''">
				AND hdd.is_disable = #{is_disable}
			</if>
		</where>
		order by hdd.dept_code
	</select>
	
	<select id="queryDeptDictByPrmDept" parameterType="java.util.Map"
		resultMap="deptDict">
SELECT
		hdd.dept_no sys_dept_no,
		hdd.group_id,
		hdd.hos_id,
		hdd.dept_id sys_dept_id,
		hdd.dept_code sys_dept_code,
		hdd.kind_code,
		hdk.kind_name,
		hdd.super_code,
		hdd.dept_name sys_dept_name,
        hdd.dept_level,
		hdd.udefine_code,
		hdd.sort_code,
		hdd.is_last,
		hdd.spell_code,
		hdd.wbx_code,
		hdd.note,
		hdd.user_code,
		hdd.create_date,
		hdd.dlog,
		hdd.is_stop
		FROM
		HR_DEPT_DICT hdd
	    left join hr_dept_kind hdk on hdd.group_id = hdk.group_id
	    and hdd.hos_id = hdk.hos_id and hdd.kind_code = hdk.kind_code
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hdd.dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdd.dept_code = #{dept_code}
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hdd.kind_code = #{kind_code}
			</if>
			<if test="create_date != null and create_date != ''">
				AND hdd.create_date = #{create_date}
			</if>
			<if test="note != null and note != ''">
				AND hdd.note = #{note}
			</if>
			<if test="is_last != null and is_last != ''">
				AND hdd.is_last = #{is_last}
			</if>
			<if test="queryTree != null and queryTree != ''">
				and ${select_code} like '%${queryTree}%'
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hdd.is_stop = #{is_stop}
			</if>
			<if test="is_sys_dept == 1">
				AND not exists (
					select 1 from APHI_DEPT_MAPING adm where
					 adm.group_id = #{group_id} AND adm.hos_id = #{hos_id}  AND  adm.copy_code = #{copy_code}
					 and hdd.dept_id =  adm.sys_dept_id
				)
			</if>
		</where>
		order by hdd.dept_code
	</select>


	<select id="queryDeptDictByType" parameterType="java.util.Map"
		resultMap="deptDict">

		SELECT
		hdd.dept_no,
		hdd.group_id,
		hdd.hos_id,
		hdd.dept_id,
		hdd.dept_code,
		hdd.dept_name,
		hdd.kind_code,
		hdd.super_code,
		hdd.dept_level,
		hdd.udefine_code,
		hdd.sort_code,
		hdd.is_last,
		hdd.spell_code,
		hdd.wbx_code,
		hdd.note,
		hdd.user_code,
		hdd.create_date,
		hdd.dlog,
		hdd.is_stop
		FROM HR_DEPT_DICT hdd
		and hdd.is_stop = 0
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hdd.dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdd.dept_code = #{dept_code}
			</if>
			<if test="dept_name != null and dept_name != ''">
				AND hdd.dept_name = #{dept_name}
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="create_date != null and create_date != ''">
				AND hdd.create_date = #{create_date}
			</if>
			<if test="note != null and note != ''">
				AND hdd.note = #{note}
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hdd.is_stop = #{is_stop}
			</if>

		</where>
		order by hdd.create_date desc
	</select>

	<select id="queryDeptDictNo" parameterType="java.util.Map"
		resultMap="deptDict">
		select a.dept_id, a.dept_no,a.dept_name from
		hr_dept_dict a
		left join
		hr_dept b on a.group_id=b.group_id and
		a.hos_id=b.hos_id and
		a.dept_id=b.dept_id
		<where>
			<if test="is_stop != null  and is_stop != ''">
				and a.is_stop = #{is_stop}
			</if>
			<if test="is_last != null  and is_last != ''">
				and b.is_last = #{is_last}
			</if>
			<if test="group_id != null  and group_id != ''">
				and a.group_id = #{group_id}
			</if>
			<if test="hos_id != null  and hos_id != ''">
				and a.hos_id = #{hos_id}
			</if>
			<if test="kind_code != null  and kind_code != ''">
				and b.kind_code in ${kind_code}
			</if>
			<if test="dept_code != null  and dept_code != ''">
				and b.dept_code = #{dept_code}
			</if>
		</where>
		order by a.dept_id
	</select>

	<update id="updateDeptDict_dept" parameterType="java.util.Map">

		UPDATE
		hr_dept_dict SET
			dept_code = #{dept_code}
			,
			dept_name = #{dept_name}
			,
			kind_code = #{kind_code}
			,
			super_code = #{super_code}
			,
			dept_level =#{dept_level}
			,
			udefine_code = #{udefine_code}
			,
			sort_code = #{sort_code}
			,
			is_last = #{is_last}
			,
			note = #{note}
			,
			spell_code=#{spell_code}
			,
			wbx_code =#{wbx_code}
			,
			user_code = #{user_code}
			,
			create_date =#{create_date}
			,
			dlog = #{dlog}
			,
			is_disable = #{is_disable}
			
		WHERE
			group_id =#{group_id}
			and
			hos_id = #{hos_id}
			and
			dept_id = #{dept_id}
			and
			dept_code =#{dept_code}
			and is_stop = 0

	</update>
	<select id="queryDeptDictByTree" parameterType="java.util.Map"
		resultMap="by_tree">


		select group_id,
		hos_id,dept_id,dept_id||'@'||dept_no id ,dept_code code ,dept_code
		||' '|| dept_name text,super_code pcode from
		hr_dept_dict

		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND (
				dept_code like '${dept_code}%' or
				dept_name like
				'%${dept_code}%'
				or
				spell_code like
				'%${dept_code}%' or
				wbx_code like
				'%${dept_code}%'
				)
			</if>
			<if test="dept_name != null and dept_name != ''">
				AND dept_name = #{dept_name}
			</if>
			<if test="super_code != null and super_code != ''">
				AND super_code = #{super_code}
			</if>
			<if test="is_last != null and is_last != ''">
				AND is_last = #{is_last}
			</if>
			<if test="dept_level != null and dept_level != ''">
				AND dept_level = #{dept_level}
			</if>
			AND is_stop =0
		</where>
		order by dept_code asc
	</select>
	
	<select id="queryDeptDictLike" parameterType="java.util.Map"
		resultMap="deptDict">
		SELECT
				hdd.dept_no,
				hdd.group_id,
				hdd.hos_id,
				hdd.dept_id,
				hdd.dept_code,
				hdd.kind_code,
				hdk.kind_name,
				hdd.super_code,
				rpad(' ', (hdd.dept_level - 1) * 4) || hdd.dept_name as dept_name,
		        hdd.dept_level,
				hdd.udefine_code,
				hdd.sort_code,
				hdd.is_last,
				hdd.spell_code,
				hdd.wbx_code,
				hdd.note,
				hdd.user_code,
				hdd.create_date,
				hdd.dlog,
				hdd.is_stop as is_stop,
				hdd.is_disable as is_disable
				FROM
				HR_DEPT_DICT hdd
			    left join hr_dept_kind hdk 
			      on   
		          hdd.group_id = hdk.group_id
		          and hdd.hos_id = hdk.hos_id 
		          and hdd.kind_code = hdk.kind_code
	
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
 			<if test="dept_code != null and dept_code != ''"> 
 				AND ( 
 				hdd.dept_code like '${dept_code}%' or 
 				hdd.dept_name like 
 				'%${dept_code}%' 
 				or 
 				hdd.spell_code like 
 				'%${dept_code}%' or 
 				hdd.wbx_code like 
 				'%${dept_code}%' 
 				) 
 			</if> 
 			<if test="dept_id != null and dept_id != ''">
				AND ( hdd.dept_code like '%${dept_id}%' or
					hdd.dept_name like '%${dept_id}%' or
					hdd.spell_code like '%${dept_id}%' or 
					hdd.wbx_code like '%${dept_id}%' or
					hdd.dept_id like '%${dept_id}%'
				)
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hdd.kind_code = #{kind_code} 
			</if>
			<if test="dept_level != null and dept_level != ''">
				AND hdd.dept_level = #{dept_level,jdbcType=INTEGER}
			</if>
			<if test="dept_codes != null and dept_codes != ''">
				AND hdd.dept_code  like '${dept_codes}%'
			</if>
			<if test="is_last != null and is_last != ''">
				AND hdd.is_last = #{is_last,jdbcType=INTEGER}
			</if>

			<if test="queryTree != null and queryTree != ''">
				and ${select_code} like '%${queryTree}%'
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hdd.is_stop = #{is_stop,jdbcType=INTEGER}
			</if>
			<if test="is_disable != null and is_disable != ''">
				AND hdd.is_disable = #{is_disable,jdbcType=INTEGER}
			</if>
		</where>
		order by hdd.dept_code,hdd.create_date desc
	</select>
	
	
	<!-- 	打印 -->
	<select id="queryDeptDictLikePrint" parameterType="java.util.Map"
		resultMap="deptDict1">
				SELECT
					hdd.dept_no,
					hdd.group_id,
					hdd.hos_id,
					hdd.dept_id,
					hdd.dept_code,
					hdd.kind_code,
					hdk.kind_name,
					hdd.super_code,
					rpad(' ', (hdd.dept_level - 1) * 4) || hdd.dept_name as dept_name,
			        hdd.dept_level,
					hdd.udefine_code,
					hdd.sort_code,
					hdd.is_last,
					hdd.spell_code,
					hdd.wbx_code,
					hdd.note,
					hdd.user_code,
					hdd.create_date,
					hdd.dlog,
					hdd.is_stop as is_stop,
					hdd.is_disable as is_disable
				FROM
				HR_DEPT_DICT hdd
			    left join hr_dept_kind hdk 
			      on   
		          hdd.group_id = hdk.group_id
		          and hdd.hos_id = hdk.hos_id 
		          and hdd.kind_code = hdk.kind_code
	
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
 			<if test="dept_code != null and dept_code != ''"> 
 				AND ( 
 				hdd.dept_code like '${dept_code}%' or 
 				hdd.dept_name like 
 				'%${dept_code}%' 
 				or 
 				hdd.spell_code like 
 				'%${dept_code}%' or 
 				hdd.wbx_code like 
 				'%${dept_code}%' 
 				) 
 			</if> 
 			<if test="dept_id != null and dept_id != ''">
				AND ( hdd.dept_code like '%${dept_id}%' or
					hdd.dept_name like '%${dept_id}%' or
					hdd.spell_code like '%${dept_id}%' or 
					hdd.wbx_code like '%${dept_id}%' or
					hdd.dept_id like '%${dept_id}%'
				)
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hdd.kind_code = #{kind_code} 
			</if>
			<if test="dept_level != null and dept_level != ''">
				AND hdd.dept_level = #{dept_level,jdbcType=INTEGER}
			</if>
			<if test="dept_codes != null and dept_codes != ''">
				AND hdd.dept_code  like '${dept_codes}%'
			</if>
			<if test="is_last != null and is_last != ''">
				AND hdd.is_last = #{is_last,jdbcType=INTEGER}
			</if>

			<if test="queryTree != null and queryTree != ''">
				and ${select_code} like '%${queryTree}%'
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hdd.is_stop = #{is_stop,jdbcType=INTEGER}
			</if>
			<if test="is_disable != null and is_disable != ''">
				AND hdd.is_disable = #{is_disable,jdbcType=INTEGER}
			</if>
		</where>
		order by hdd.dept_code,hdd.create_date desc
		
	</select>
	
	<select id="queryDeptDictCost" parameterType="java.util.Map"
		resultMap="deptDict">
SELECT
			hdd.dept_no,
			hdd.group_id,
			hdd.hos_id,
			hdd.dept_id,
			hdd.dept_code,
			hdd.kind_code,
			hdk.kind_name,
			hdd.super_code,
			hdd.dept_name,
	        hdd.dept_level,
			hdd.udefine_code,
			hdd.sort_code,
			hdd.is_last,
			hdd.spell_code,
			hdd.wbx_code,
			hdd.note,
			hdd.user_code,
			hdd.create_date,
			hdd.dlog,
			hdd.is_stop
		FROM
		HR_DEPT_DICT hdd
	    left join hr_dept_kind hdk on hdd.group_id = hdk.group_id
	    and hdd.hos_id = hdk.hos_id and hdd.kind_code = hdk.kind_code
		<where>
		hdd.is_last = 1
		<!-- 停用科室不显示 主要用于业务数据配置 而不是查询 所以不需要根据参数盘点是否查询历史记录 -->
		 AND hdd.is_stop =0
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no,jdbcType=INTEGER}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hdd.dept_id = #{dept_id,jdbcType=INTEGER}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdd.dept_code = #{dept_code}
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hdd.kind_code = #{kind_code}
			</if>
			<if test="create_date != null and create_date != ''">
				AND hdd.create_date = #{create_date}
			</if>
			<if test="note != null and note != ''">
				AND hdd.note = #{note}
			</if>
			<if test="queryTree != null and queryTree != ''">
				and ${select_code} like '%${queryTree}%'
			</if>
			
		</where>
		order by hdd.dept_code
	</select>
	
	<select id="queryDeptByEmpid"  parameterType="java.util.Map" resultMap="deptDict">
		 select b.dept_id, b.dept_id ,b.dept_code|| ' '||b.dept_name   as dept_name
		 from hos_emp_dict a
			 left join hr_dept_dict b
			 on a.dept_id=b.dept_id
			 and a.group_id=b.group_id
			 and a.hos_id = b.hos_id
			 and a.is_stop = 0 
			  where a.emp_id=#{emp_id}
	</select>
	
	<!--  用于查询 集团账簿中的部门选择器-->
	<select id="queryGroupDeptDict" parameterType="java.util.Map"
		resultMap="deptDict">
SELECT
			hdd.dept_no,
			hdd.group_id,
			hdd.hos_id,
			hdd.dept_id,
			hdd.dept_code,
			hdd.kind_code,
			hdk.kind_name,
			hdd.super_code,
			hdd.dept_name,
	        hdd.dept_level,
			hdd.udefine_code,
			hdd.sort_code,
			hdd.is_last,
			hdd.spell_code,
			hdd.wbx_code,
			hdd.note,
			hdd.user_code,
			hdd.create_date,
			hdd.dlog,
			hdd.is_stop
		FROM HR_DEPT_DICT hdd
	    left join hr_dept_kind hdk on hdd.group_id = hdk.group_id
	    	and hdd.hos_id = hdk.hos_id and hdd.kind_code = hdk.kind_code
		<where>
			<if test="dept_no != null and dept_no != ''">
				AND hdd.dept_no = #{dept_no}
			</if>
			<if test="group_id != null and group_id != ''">
				AND hdd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hdd.hos_id = #{hos_id}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND hdd.dept_id = #{dept_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
				AND hdd.dept_code = #{dept_code}
			</if>
			<if test="user_code != null and user_code != ''">
				AND hdd.user_code = #{user_code}
			</if>
			<if test="kind_code != null and kind_code != ''">
				AND hdd.kind_code = #{kind_code}
			</if>
			<if test="create_date != null and create_date != ''">
				AND hdd.create_date = #{create_date}
			</if>
			<if test="note != null and note != ''">
				AND hdd.note = #{note}
			</if>
			<if test="is_last != null and is_last != ''">
				AND hdd.is_last = #{is_last}
			</if>

			<if test="queryTree != null and queryTree != ''">
				and ${select_code} like '%${queryTree}%'
			</if>
			<if test="is_stop != null and is_stop != ''">
				AND hdd.is_stop = #{is_stop}
			</if>
		</where>
		order by hdd.dept_code
	</select>
	<select id="queryBySuperCode"  resultType="com.chd.hrp.sys.entity.DeptDict"
	parameterType="java.util.Map">
	
		SELECT
			group_id,
			hos_id,
			dept_id,
			dept_code,
			kind_code,
			dept_name,
			super_code,
			udefine_code,
			sort_code,
			is_stop,
			is_last,
			spell_code,
			wbx_code,
			note,
			dept_level
		FROM HR_DEPT_DICT
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id}
			</if>
			<if test="dept_code != null and dept_code != ''">
			 start with super_code= #{dept_code} connect by prior dept_code = super_code
			</if>
			
	
		</where>
	
	</select>
	<update id="updateBatchSuperCode" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index"
				open="begin" close=";end;" separator=";">
				UPDATE HR_DEPT_DICT SET
					kind_code = #{map.kind_code}
				WHERE
					group_id =
					#{item.group_id}
					and
					hos_id = #{item.hos_id}
					and
					dept_id =
					#{item.dept_id}
	
		</foreach>
	</update>
		
		
	<update id="updateBatchStop" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index"
				open="begin" close=";end;" separator=";">
				UPDATE HR_DEPT_DICT SET
					is_disable = #{map.is_stop}
				WHERE
					group_id =#{item.group_id}
					and
					hos_id = #{item.hos_id}
					and
					dept_id =#{item.dept_id}
	
			</foreach>
	</update>
</mapper>

