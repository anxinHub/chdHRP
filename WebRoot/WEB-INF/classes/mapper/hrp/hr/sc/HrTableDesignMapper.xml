<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.sc.HrTableDesignMapper">

	<resultMap id="hrTableDesign" type="com.chd.hrp.hr.entity.sc.HrTableDesign">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" /> 
		<result property="design_code" column="design_code" />
		<result property="design_name" column="design_name" />
		<result property="super_code" column="super_code" />
		<result property="super_name" column="super_name"/>
		<result property="design_level" column="design_level" />
		<result property="is_last" column="is_last" />
		<result property="design_query_col" column="design_query_col" />
		<result property="design_query_sql" column="design_query_sql" />
		<result property="design_query_page" column="design_query_page" />
		<result property="design_sort" column="design_sort" />
		<result property="is_stop" column="is_stop" />
		<result property="design_note" column="design_note" />
	</resultMap>

	<resultMap id="hrTableDesignMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="design_code" column="design_code" />
		<result property="design_name" column="design_name" />
		<result property="super_code" column="super_code" />
		<result property="super_name" column="super_name"/>
		<result property="design_level" column="design_level" />
		<result property="is_last" column="is_last" />
		<result property="design_query_col" column="design_query_col" />
		<result property="design_query_sql" column="design_query_sql" />
		<result property="design_query_page" column="design_query_page" />
		<result property="design_sort" column="design_sort" />
		<result property="is_stop" column="is_stop" />
		<result property="design_note" column="design_note" />
	</resultMap>
	
	<select id="query" resultMap="hrTableDesign"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
		a.group_id, a.hos_id, a.design_code, a.design_name, a.super_code, b.design_code||' '||b.design_name as super_name, 
		a.design_level, a.is_last, a.design_sort, a.is_stop, a.design_note, a.design_query_col, a.design_query_sql, a.design_query_page
		FROM HR_TABLE_DESIGN a
		left join HR_TABLE_DESIGN b
		  on a.super_code = b.design_code
		 and a.group_id = b.group_id
		 and a.hos_id = b.hos_id  
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}
	
	</select>
	
	<select id="queryHrTableDesignExport" resultMap="hrTableDesign"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
			a.group_id, a.hos_id, a.design_code, a.design_name, a.super_code, b.design_code||' '||b.design_name as super_name, 
			a.design_level, a.is_last, a.design_sort, a.is_stop, a.design_note, a.design_query_col, a.design_query_sql, a.design_query_page
		FROM HR_TABLE_DESIGN a
		left join HR_TABLE_DESIGN b
		  on a.super_code = b.design_code
		 and a.group_id = b.group_id
		 and a.hos_id = b.hos_id  
		WHERE 
			a.group_id = #{group_id,jdbcType=INTEGER}    
			and a.hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="super_code != null and super_code != ''">
			and a.super_code = #{super_code}
			</if>
			<if test="design_code != null and design_code != ''">
			and a.design_code = #{design_code}
			</if>
			<!-- <if test="ids != null and ids != ''">
			and a.design_code in (
	            <foreach collection="ids.split(',')" item="item" separator=",">
	                #{item, jdbcType=VARCHAR}
	            </foreach>
	           ) 
	        </if> -->
	
	</select>

	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO HR_TABLE_DESIGN (
			group_id, hos_id, design_code, design_name, super_code, design_level, is_last, design_sort, is_stop, design_note
			<if test="design_query_col != null ">,design_query_col</if>
            <if test="design_query_sql != null ">,design_query_sql</if>
            <if test="design_query_page != null ">,design_query_page</if>
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{design_code,jdbcType=VARCHAR},
			#{design_name,jdbcType=VARCHAR},
			#{super_code,jdbcType=VARCHAR},
			#{design_level,jdbcType=INTEGER},
			#{is_last,jdbcType=INTEGER},
			#{design_sort,jdbcType=INTEGER},
			#{is_stop,jdbcType=INTEGER},
			#{design_note,jdbcType=VARCHAR}
			<if test="design_query_col != null ">,#{design_query_col,jdbcType=VARCHAR}</if>
            <if test="design_query_sql != null ">,#{design_query_sql,jdbcType=VARCHAR}</if>
            <if test="design_query_page != null ">,#{design_query_page,jdbcType=VARCHAR}</if>
		)
	
	</insert>
	
	<insert id="addBatch" parameterType="java.util.List" >
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
		    MERGE INTO HR_TABLE_DESIGN t1 
            USING (select #{item.group_id} group_id, #{item.hos_id} hos_id, #{item.design_code} design_code from dual) t2
            ON (t1.group_id = t2.group_id and t1.hos_id = t2.hos_id and t1.design_code = t2.design_code)  
            WHEN NOT MATCHED THEN 
			INSERT (
				group_id,
				hos_id,
				design_code,
				design_name
				<if test="item.super_code != null ">,super_code</if>
				<if test="item.design_level != null ">,design_level</if>
				<if test="item.is_last != null ">,is_last</if>
				<if test="item.design_query_col != null ">,design_query_col</if>
				<if test="item.design_query_sql != null ">,design_query_sql</if>
				<if test="item.design_query_page != null ">,design_query_page</if>
				<if test="item.design_sort != null ">,design_sort</if>
				<if test="item.is_stop != null ">,is_stop</if>
				<if test="item.design_note != null ">,design_note</if>
			) VALUES (
				#{item.group_id,jdbcType=INTEGER},
				#{item.hos_id,jdbcType=INTEGER},
				#{item.design_code,jdbcType=VARCHAR},
				#{item.design_name,jdbcType=VARCHAR}
				<if test="item.super_code != null ">,#{item.super_code,jdbcType=VARCHAR}</if>
				<if test="item.design_level != null ">, #{item.design_level,jdbcType=INTEGER}</if>
				<if test="item.is_last != null ">,#{item.is_last,jdbcType=INTEGER}</if>
				<if test="item.design_query_col != null ">,#{item.design_query_col,jdbcType=VARCHAR}</if>
				<if test="item.design_query_sql != null ">,#{item.design_query_sql,jdbcType=VARCHAR}</if>
				<if test="item.design_query_page != null ">,#{item.design_query_page,jdbcType=VARCHAR}</if>
				<if test="item.design_sort != null ">, #{item.design_sort,jdbcType=INTEGER}</if>
				<if test="item.is_stop != null ">,#{item.is_stop,jdbcType=INTEGER}</if>
				<if test="item.design_note != null ">, #{item.design_note,jdbcType=VARCHAR}</if>
			)
		</foreach>
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE HR_TABLE_DESIGN SET
			design_name = #{design_name,jdbcType=VARCHAR},
			design_note = #{design_note,jdbcType=VARCHAR},
			super_code = #{super_code,jdbcType=VARCHAR},
			design_sort = #{design_sort,jdbcType=INTEGER},
			is_stop = #{is_stop,jdbcType=INTEGER}
			<if test="design_query_col != null ">,design_query_col = #{design_query_col,jdbcType=VARCHAR}</if>
            <if test="design_query_sql != null ">,design_query_sql = #{design_query_sql,jdbcType=VARCHAR}</if>
            <if test="design_query_page != null ">,design_query_page = #{design_query_page,jdbcType=VARCHAR}</if>
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND design_code = #{design_code,jdbcType=VARCHAR}
		
	</update>
	
	<update id="updateDesignQueryColByCode" parameterType="java.util.Map">
	
		UPDATE HR_TABLE_DESIGN SET
			design_query_col = #{design_query_col,jdbcType=VARCHAR}
			<if test="design_query_page != null and design_query_page !=''">
			,design_query_page = #{design_query_page,jdbcType=VARCHAR}
			</if>
			<if test="design_query_sql != null and design_query_sql !=''">
			,design_query_sql = #{design_query_sql,jdbcType=VARCHAR}
			</if>
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND design_code = #{design_code,jdbcType=VARCHAR}
		
	</update>
	
	<update id="updateDesignQueryPageByCode" parameterType="java.util.Map">
    
        UPDATE HR_TABLE_DESIGN SET
            design_query_page = #{design_query_page,jdbcType=VARCHAR}
        where group_id = #{group_id,jdbcType=INTEGER}
          AND hos_id = #{hos_id,jdbcType=INTEGER}
          AND design_code = #{design_code,jdbcType=VARCHAR}
        
    </update>
	
	<update id="updateDesignQuerySqlByCode" parameterType="java.util.Map">
	
		UPDATE HR_TABLE_DESIGN SET
			design_query_sql = #{design_query_sql,jdbcType=VARCHAR}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND design_code = #{design_code,jdbcType=VARCHAR}
		
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM HR_TABLE_DESIGN 
		 where group_id = #{group_id,jdbcType=INTEGER}
		   AND hos_id = #{hos_id,jdbcType=INTEGER}
		   <choose>
              <when test="super_code != null and super_code != ''">
                  AND super_code = #{super_code,jdbcType=VARCHAR}
              </when>
              <otherwise>
                  AND design_code = #{design_code,jdbcType=VARCHAR}
              </otherwise>
           </choose>
		   
	</delete>
	
	<select id="queryByCode" resultMap="hrTableDesign"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT 
		a.group_id, a.hos_id, a.design_code, a.design_name, a.super_code, b.design_code||' '||b.design_name as super_name, 
		a.design_level, a.is_last, a.design_sort, a.is_stop, a.design_note, a.design_query_col, a.design_query_sql, a.design_query_page
		FROM HR_TABLE_DESIGN a
		left join HR_TABLE_DESIGN b
		  on a.super_code = b.design_code
		 and a.group_id = b.group_id
		 and a.hos_id = b.hos_id  
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.design_code = #{design_code,jdbcType=VARCHAR} 
	
	</select>
	
	<select id="queryByCodeOrName" resultType="int"  parameterType="java.util.Map"  useCache="false" flushCache="true">
	
		SELECT count(0)
		FROM HR_TABLE_DESIGN 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER} 
		and hos_id = #{hos_id,jdbcType=INTEGER} 
		and (design_code = #{design_code,jdbcType=VARCHAR} or design_name = #{design_name,jdbcType=VARCHAR} )
	
	</select>
	
	<resultMap type="java.util.Map" id="treeMap">
		<result property="id" column="id"/>
		<result property="text" column="text"/>
		<result property="pid" column="pid"/>
		<result property="is_innr" column="is_innr"/>
		<result property="is_stop" column="is_stop"/>
		<result property="design_name" column="design_name"/>
	</resultMap>
	<select id="queryHrTableDesignTree" parameterType="java.util.Map" resultMap="treeMap"  useCache="false" flushCache="true">
		select id, text, pid, design_name, sort from (
			select ty.type_tab_code as id, ty.type_tab_name as design_name, ty.type_tab_name as text, null as pid, 
                table_sort as sort
              from hr_table_type ty
             where exists (
                select 1 from HR_TABLE_DESIGN td where td.super_code = ty.type_tab_code
             )
            union all
			select t.design_code as id,  
			       t.design_name,
			       t.design_name ||'【'||t.design_code||'】' as text, 
				   t.super_code as pid,
				   t.design_sort sort
			  from HR_TABLE_DESIGN t
			 where t.group_id = #{group_id}
			   and t.hos_id = #{hos_id}
			   <if test="super_code != null and super_code != ''">
			   and t.super_code = #{super_code}
			   </if>
			   <if test="key != null and key != ''">
	     		and t.design_code like '%'||#{key}||'%' 
	     		or t.design_name like '%'||#{key}||'%' 
	     	   </if>
	    ) t
		 order by t.sort asc nulls last
	</select>
	
	<resultMap type="java.util.Map" id="tableTreeMap">
		<result property="tab_code" column="tab_code"/>
		<result property="tab_name" column="tab_name"/>
		<result property="pid" column="pid"/>
	</resultMap>
	<select id="queryDBTableTree" parameterType="java.util.Map" resultMap="tableTreeMap"  useCache="false" flushCache="true">
		select tab_code, tab_name, pid from (
			select * from (select ty.type_tab_code as tab_code,
			       ty.type_tab_name as tab_name,
			       null             as pid
			  from hr_table_type ty
			 order by ty.table_sort)
			  
			union all
			
			select * from (select ts.tab_code, ts.tab_name, ts.type_tab_code as pid
			  from hr_table_struc ts
			 where ts.group_id = #{group_id}
			   and ts.hos_id = #{hos_id}
			 order by ts.sort)
			union all
			
			select 'sys' as tab_code, '系统表' as tab_name, null as pid
			  from dual
			union all
			select * from (select t.TABLE_NAME as tab_code,
			       case
			         when comm.comments is null then
			          t.TABLE_NAME
			         else
			          comm.comments
			       end as tab_name,
			       'sys' as pid
			  from user_tables t
			  left join user_tab_comments comm
			    on t.TABLE_NAME = comm.table_name
			 where not exists (select 1 from hr_table_struc ts where ts.tab_code = t.TABLE_NAME)
			 order by t.TABLE_NAME)
		) t
	     <where>
	     	<if test="key != null and key != ''">
	     		t.tab_name like '%'||#{key}||'%' 
	     		or t.tab_code like '%'||upper(#{key})||'%' 
	     	</if>
	     </where>
	</select>
	
	<select id="queryMaxSrotNO" resultType="int" parameterType="map">
		select case when max(design_sort) is null then 1 else max(design_sort)+1 end
			  from HR_TABLE_DESIGN t
			 where t.group_id = #{group_id}
			   and t.hos_id = #{hos_id}
	</select>
	
	<update id="updateLastStateByCode" parameterType="map">
		UPDATE HR_TABLE_DESIGN SET
			is_last = #{is_last}
		where group_id = #{group_id,jdbcType=INTEGER}
		  AND hos_id = #{hos_id,jdbcType=INTEGER}
		  AND design_code = #{super_code,jdbcType=VARCHAR}
	</update>
	
	<select id="queryChildNode" resultType="int" parameterType="map">
		select count(0)
			  from HR_TABLE_DESIGN t
			 where t.group_id = #{group_id}
			   and t.hos_id = #{hos_id}
			   and t.super_code = #{super_code}
	</select>
	
    <select id="queryHrStatisticTableTree" parameterType="java.util.Map" resultMap="tableTreeMap"  useCache="false" flushCache="true">
        select t2.tab_code, t2.tab_name, t2.type_tab_code as pid from hr_store_tab_struc t
          left join hr_table_struc t2
            on t.group_id = t2.group_id
           and t.hos_id = t2.hos_id
           and t.tab_code = t2.tab_code
         where t.group_id = #{group_id}
           and t.hos_id = #{hos_id}
           and t.store_type_code = #{store_type_code}
           <if test="key != null and key != ''">
                t2.tab_name like '%'||#{key}||'%' 
                or t2.tab_code like '%'||upper(#{key})||'%' 
            </if>
         order by t2.sort
        <!-- select tab_code, tab_name, pid from (
            select * from (select ty.type_tab_code as tab_code,
                   ty.type_tab_name as tab_name,
                   null             as pid
              from hr_table_type ty
             order by ty.table_sort)
              
            union all
            
            select * from (select ts.tab_code, ts.tab_name, ts.type_tab_code as pid
              from hr_table_struc ts
             where ts.group_id = #{group_id}
               and ts.hos_id = #{hos_id}
             order by ts.sort)
        ) t
         <where>
            <if test="key != null and key != ''">
                t.tab_name like '%'||#{key}||'%' 
                or t.tab_code like '%'||upper(#{key})||'%' 
            </if>
         </where> -->
    </select>
</mapper>

