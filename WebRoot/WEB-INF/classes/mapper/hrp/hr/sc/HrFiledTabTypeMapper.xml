<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.sc.HrFiledTabTypeMapper">
	
	<resultMap id="hrFiledTabType" type="com.chd.hrp.hr.entity.sc.HrFiledTabType">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="type_filed_code" column="type_filed_code"/>
	<result property="type_filed_name" column="type_filed_name"/>
	<result property="note" column="note"/>
	</resultMap>
	<resultMap id="hrFiledTabTypeMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="type_filed_code" column="type_filed_code"/>
	<result property="type_filed_name" column="type_filed_name"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO HR_FILED_TABLE_TYPE (
			group_id,
			hos_id,
			type_filed_code,
			type_filed_name,
			note
		) VALUES (
			#{group_id,jdbcType=INTEGER},
			#{hos_id,jdbcType=INTEGER},
			#{type_filed_code,jdbcType=VARCHAR},
			#{type_filed_name,jdbcType=VARCHAR},
			#{note,jdbcType=VARCHAR}		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_FILED_TABLE_TYPE (
		group_id
		,
		hos_id
		,
		type_filed_code
		,
		type_filed_name
		,
		note
		
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.type_filed_code,jdbcType=VARCHAR}
			,
			#{item.type_filed_name,jdbcType=VARCHAR}
			,
			#{item.note,jdbcType=VARCHAR}
			
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE HR_FILED_TABLE_TYPE 
		set
		type_filed_name = #{type_filed_name,jdbcType=VARCHAR},
		note = #{note,jdbcType=VARCHAR} 
		where  
			group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND type_filed_code = #{type_filed_code,jdbcType=VARCHAR}
		
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE HR_FILED_TABLE_TYPE 
			<trim prefix="SET"  suffixOverrides=","> 
			<if test="item.type_filed_name != null and item.type_filed_name != ''">
			type_filed_name = #{item.type_filed_name,jdbcType=VARCHAR}
			,
			</if>
			<if test="item.note != null and item.note != ''">
			note = #{item.note,jdbcType=VARCHAR}
			,
			</if>
			</trim>
			<where>                     
			<if test="item.group_id != null and item.group_id != ''">
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			</if>  
			<if test="item.hos_id != null and item.hos_id != ''">
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			</if>  
			<if test="item.type_filed_code != null and item.type_filed_code != ''">
			AND type_filed_code = #{item.type_filed_code,jdbcType=VARCHAR}
			</if>  
			<if test="item.type_filed_name != null and item.type_filed_name != ''">
			AND type_filed_name = #{item.type_filed_name,jdbcType=VARCHAR}
			</if>  
			<if test="item.note != null and item.note != ''">
			AND note = #{item.note,jdbcType=VARCHAR}
			</if>  
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM HR_FILED_TABLE_TYPE 
		where group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND type_filed_code = #{type_filed_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM HR_FILED_TABLE_TYPE 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.type_filed_code != null and item.type_filed_code != ''">
				AND type_filed_code = #{item.type_filed_code,jdbcType=VARCHAR}
				</if>
				<if test="item.type_filed_name != null and item.type_filed_name != ''">
				AND type_filed_name = #{item.type_filed_name,jdbcType=VARCHAR}
				</if>
				<if test="item.note != null and item.note != ''">
				AND note = #{item.note,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	
	<delete id="deleteHrFiledTabType" parameterType="java.util.List">
		DELETE FROM HR_FILED_TABLE_TYPE 
		where
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
					group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND type_filed_code = #{item.type_filed_code,jdbcType=VARCHAR}
		   </foreach>
	</delete>
	
	<select id="queryCount"  parameterType="java.util.List" resultType="java.lang.Integer" >
		select count(1) from HR_FileD_TAB_STRUC where 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
			type_filed_code = #{item.type_filed_code,jdbcType=VARCHAR}
		</foreach>
	
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="hrFiledTabType" >
	
		SELECT 
		group_id,
		hos_id,
		type_filed_code,
		type_filed_name,
		note
		FROM HR_FILED_TABLE_TYPE 
		where 
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="type_filed_code != null and type_filed_code != ''">
		AND type_filed_code = #{type_filed_code,jdbcType=VARCHAR}
		</if>
		order by group_id asc
	</select>
	<select id="queryByCode" resultMap="hrFiledTabType"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		type_filed_code,
		type_filed_name,
		note
		FROM HR_FILED_TABLE_TYPE 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		(	type_filed_code = #{type_filed_code,jdbcType=VARCHAR} 
			OR type_filed_name = #{type_filed_name,jdbcType=VARCHAR}
		)
			
	
	</select>
	<select id="queryByUniqueness" resultMap="hrFiledTabType"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		type_filed_code,
		type_filed_name,
		note
		FROM HR_FILED_TABLE_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="type_filed_code != null and type_filed_code != ''">
		AND type_filed_code = #{type_filed_code,jdbcType=VARCHAR}
		</if>
		<if test="type_filed_name != null and type_filed_name != ''">
		AND type_filed_name = #{type_filed_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrFiledTabType"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		type_filed_code,
		type_filed_name,
		note
		FROM HR_FILED_TABLE_TYPE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="type_filed_code != null and type_filed_code != ''">
		AND type_filed_code = #{type_filed_code,jdbcType=VARCHAR}
		</if>
		<if test="type_filed_name != null and type_filed_name != ''">
		AND type_filed_name = #{type_filed_name,jdbcType=VARCHAR}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<select id="queryFTabTypeByName" resultMap="hrFiledTabType"  parameterType="java.util.Map" >
		SELECT 
			type_filed_code,
			type_filed_name
		FROM HR_FILED_TABLE_TYPE 
		<where>                     
				group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			and type_filed_name = #{type_filed_name,jdbcType=VARCHAR}
		</where>
	</select>
</mapper>

