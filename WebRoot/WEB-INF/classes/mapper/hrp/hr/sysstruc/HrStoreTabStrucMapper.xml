<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.sysstruc.HrStoreTabStrucMapper">

	<resultMap id="hrStoreTabStruc" type="com.chd.hrp.hr.entity.sysstruc.HrStoreTabStruc">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="store_type_code" column="store_type_code" />
		<result property="tab_code" column="tab_code" />
		<result property="tab_name" column="tab_name" />
	</resultMap>

	<resultMap id="hrStoreTab" type="com.chd.hrp.hr.entity.sysstruc.HrTabStruc">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="tab_code" column="tab_code" />
		<result property="tab_name" column="tab_name" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap id="hrStoreTabStrucMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="store_type_code" column="store_type_code" />
		<result property="tab_code" column="tab_code" />
	</resultMap>


	<resultMap type="java.util.Map" id="hrStoreTabMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>
	
	<resultMap id="by_tree" type="java.util.Map">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="pId" column="pId" />
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
	</resultMap>
	<!-- 快速查询(cjc) -->
	<select id="queryAssTypeDictTree" resultMap="hrStoreTabMap" useCache="false" flushCache="true">
		select * from (
		select ht.group_id,ht.hos_id,nvl(hst.store_type_code, '0') as
		id,lpad(chr(41377),2*hst.store_type_code,
		chr(41377))||ht.tab_code||ht.tab_name as text,
		nvl(hst.store_type_code, '0') as pId from HR_STORE_TAB_STRUC hst
		left join HR_TAB_STRUC ht on ht.tab_code=hst.tab_code
		union
		select hs.group_id,hs.hos_id,hs.store_type_code as
		id,hs.store_type_name as text ,nvl(null, '0') as pId from
		HR_STORE_TYPE hs
		order by id ,pid

		)t
		where
		t.group_id = #{group_id}
		and t.hos_id = #{hos_id}
		<if test="key != null and key != ''">
			and t.text like '%${key}%'

		</if>
	</select>
	
	<insert id="add" useGeneratedKeys="true">

		INSERT INTO HR_STORE_TAB_STRUC (
		<trim suffix="" suffixOverrides=",">
			<if test="group_id != null and group_id != ''">
				group_id
				,
			</if>
			<if test="hos_id != null and hos_id != ''">
				hos_id
				,
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				store_type_code
				,
			</if>
			<if test="tab_code != null and tab_code != ''">
				tab_code
				,
			</if>
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
			<if test="group_id != null and group_id != ''">
				#{group_id,jdbcType=INTEGER}
				,
			</if>
			<if test="hos_id != null and hos_id != ''">
				#{hos_id,jdbcType=INTEGER}
				,
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				#{store_type_code,jdbcType=VARCHAR}
				,
			</if>
			<if test="tab_code != null and tab_code != ''">
				#{tab_code,jdbcType=VARCHAR}

			</if>
		</trim>
		)

	</insert>
	<insert id="addBatchHrColStruc" parameterType="java.util.List">

		INSERT INTO HR_STORE_TAB_STRUC (
		group_id
		,
		hos_id
		,
		store_type_code
		,
		tab_code

		) select t.*
		from(
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER}
			,
			#{item.hos_id,jdbcType=INTEGER}
			,
			#{item.store_type_code,jdbcType=VARCHAR}
			,
			#{item.tab_code,jdbcType=VARCHAR}

			from dual
		</foreach>
		)t
	</insert>

	<update id="update" parameterType="java.util.Map">

		UPDATE hr_store_tab_struc
		<trim prefix="SET" suffixOverrides=",">
		
			<if test="tab_code != null and tab_code != ''">
				 tab_code = #{tab_code,jdbcType=VARCHAR}
			</if>
		</trim>
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				AND store_type_code = #{store_type_code,jdbcType=VARCHAR}
			</if>
			
		</where>
	</update>
	<update id="updateBatchHrColStruc" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE hr_store_tab_struc
			<trim prefix="SET" suffixOverrides=",">
			<if test="item.store_type_code != null and item.store_type_code != ''">
				store_type_code =
					#{item.store_type_code,jdbcType=VARCHAR},
				</if>
				<if test="item.tab_code != null and item.tab_code != ''">
					 tab_code = #{item.tab_code,jdbcType=VARCHAR}
				</if>
			</trim>
				
			WHERE                     
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND store_type_code = #{item.store_type_code,jdbcType=CHAR}
				<!-- AND col_code = #{item.col_code,jdbcType=VARCHAR} -->
		</foreach>
	</update>

	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM hr_store_tab_struc
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				AND store_type_code = #{store_type_code,jdbcType=VARCHAR}
			</if>
			<if test="tab_code != null and tab_code != ''">
				AND tab_code = #{tab_code,jdbcType=VARCHAR}
			</if>
		</where>
	</delete>
	<delete id="deleteBatchHrColStruc" parameterType="java.util.List">
		DELETE FROM hr_store_tab_struc
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				 AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				 AND store_type_code = #{item.store_type_code,jdbcType=VARCHAR}
				<if test="item.tab_code != null and item.tab_code != ''">
					AND tab_code = #{item.tab_code,jdbcType=VARCHAR}
				</if>
			</foreach>
		</where>
	</delete>
	<delete id="deleteBatchHrCol" parameterType="java.util.List">
		DELETE FROM hr_store_tab_struc
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.store_type_code != null and item.store_type_code != ''">
					AND store_type_code =
					#{item.store_type_code,jdbcType=VARCHAR}
				</if>
				<!-- <if test="item.tab_code != null and item.tab_code != ''">
					AND tab_code = #{item.tab_code,jdbcType=VARCHAR}
				</if> -->
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteHrColStrucBySTypeCode" parameterType="java.util.Map">
		DELETE FROM hr_store_tab_struc
		 where group_id = #{vo.group_id,jdbcType=INTEGER}
		   and hos_id = #{vo.hos_id,jdbcType=INTEGER}
		   and store_type_code = #{vo.store_type_code,jdbcType=VARCHAR}
		   AND TAB_CODE in
				<if test="list.size gt 1000">
					<foreach collection="list" item="item" close=" ) " open=" ( " separator=" union all ">
						select
							#{item.tab_code,jdbcType=VARCHAR}
						from
							dual
					</foreach>
				</if>
				<if test="list.size lt 1001">
					<foreach collection="list" item="item" close=" ) " open=" ( " separator=",">
						#{item.tab_code,jdbcType=VARCHAR}
					</foreach>
				</if>
	</delete>
	
	<select id="query" parameterType="java.util.Map" resultMap="hrStoreTabStruc" useCache="false" flushCache="true">

		SELECT
			hst.group_id as group_id,
			hst.hos_id as hos_id ,
			hst.store_type_code as store_type_code,
			hst.tab_code as tab_code,
	    	hts.tab_name as tab_name,
	    	hts.note as note
		FROM HR_STORE_TAB_STRUC  hst 
		left join HR_TABLE_STRUC hts on hst.group_id = hts.group_id
and hst.hos_id = hts.hos_id
and hst.tab_code = hts.tab_code 
and hts.is_stop='0' 
and hts.type_tab_code='pf'
		<where>
			<if test="group_id != null and group_id != ''">
				AND hst.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hst.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				AND hst.store_type_code = #{store_type_code,jdbcType=VARCHAR}
			</if>
			<if test="tab_code != null and tab_code != ''">
				AND (
						hst.tab_code like upper('%${tab_code}%')
					or  hts.tab_name like '%${tab_code}%'
				)
			</if>
		</where>
		order by hst.tab_code asc
	</select>
	<select id="queryByCodeHrColStruc" resultMap="hrStoreTabStruc"
		parameterType="java.util.Map" useCache="false" flushCache="true">

		SELECT
		group_id,
		hos_id,
		store_type_code,
		tab_code
		FROM hr_store_tab_struc
		WHERE
		group_id =
		#{group_id,jdbcType=INTEGER} and
		hos_id = #{hos_id,jdbcType=INTEGER}
		and
		store_type_code =
		#{store_type_code,jdbcType=VARCHAR} and
		tab_code =
		#{tab_code,jdbcType=VARCHAR}

	</select>

	<select id="queryStoreTabStrucByCode" parameterType="java.util.Map"
		resultMap="hrStoreTabStruc" useCache="false" flushCache="true">
		SELECT
		group_id,
		hos_id,
		store_type_code,
		tab_code
		FROM
		hr_store_tab_struc
		WHERE
		group_id = #{group_id,jdbcType=INTEGER} and
		hos_id = #{hos_id,jdbcType=INTEGER} and
		store_type_code =
		#{store_type_code,jdbcType=VARCHAR}
		<!-- and tab_code = #{tab_code,jdbcType=VARCHAR} -->

	</select>
	<select id="queryByUniqueness" resultMap="hrStoreTabStruc"
		parameterType="java.util.Map" useCache="false" flushCache="true">

		SELECT
		group_id,
		hos_id,
		store_type_code,
		tab_code
		FROM
		HR_STORE_TAB_STRUC
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				AND store_type_code = #{store_type_code,jdbcType=VARCHAR}
			</if>
			<if test="tab_code != null and tab_code != ''">
				AND tab_code = #{tab_code,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrStoreTabStruc"
		parameterType="java.util.Map" useCache="false" flushCache="true">

		SELECT
		group_id,
		hos_id,
		store_type_code,
		tab_code
		FROM
		HR_STORE_TAB_STRUC
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				AND store_type_code = #{store_type_code,jdbcType=VARCHAR}
			</if>
			<if test="tab_code != null and tab_code != ''">
				AND tab_code = #{tab_code,jdbcType=VARCHAR}
			</if>
		</where>
		order by group_id asc
	</select>
	
	    <!--查询结构表下拉  -->
		<select id="queryHrHosTabStruc" parameterType="java.util.Map" resultType="java.util.Map" useCache="false" flushCache="true">
		select t.tab_code as tab_code ,t.tab_name as tab_name ,t.note as note 
		  from hr_table_struc t
		 where t.group_id = #{group_id}
		   and t.hos_id = #{hos_id}
		   and t.type_tab_code='pf'
		   and t.is_stop=0
		   <if test="type_tab_code != null and type_tab_code != ''">
		   and t.type_tab_code = #{type_tab_code}
		   </if>
		   <if test="tab_code != null and tab_code != '' ">
		   	and (tab_code like upper('%${tab_code}%') or tab_name like '%${tab_code}')
		   </if>
		   <if test="store_type_code != null and store_type_code != '' ">
			and t.tab_code not in
				(select tab_code from HR_STORE_TAB_STRUC where group_id = #{group_id,jdbcType=VARCHAR} 
				 and hos_id = #{hos_id,jdbcType=VARCHAR} and STORE_TYPE_CODE = #{store_type_code,jdbcType=VARCHAR})
		   </if>
		  
	     order by t.tab_code
	</select>
	<!-- 查询数据是否重复 -->
	<select id="queryById" resultMap="hrStoreTabStruc" parameterType="java.util.Map" useCache="false" flushCache="true">
	select *  from HR_STORE_TAB_STRUC 
	<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.store_type_code != null and item.store_type_code != ''">
					AND store_type_code =
					#{item.store_type_code,jdbcType=VARCHAR}
				</if>
				<if test="item.tab_code != null and item.tab_code != ''">
					AND tab_code = #{item.tab_code,jdbcType=VARCHAR}
				</if>
			</foreach>
		</where>
	</select>
	
	<select id="queryHrStoreTabStrucByPrint" resultType="java.util.Map" parameterType="java.util.Map" useCache="false" flushCache="true">
		SELECT
			hst.group_id ,
			hst.hos_id ,
			hst.store_type_code,
			hst.tab_code,
	    	hts.tab_name,
	    	hts.note
		FROM HR_STORE_TAB_STRUC  hst 
		left join  HR_TAB_STRUC hts on hst.group_id=hts.group_id and hst.hos_id=hts.hos_id
			and hst.tab_code=hts.tab_code
		<where>
			<if test="group_id != null and group_id != ''">
				AND hst.group_id = #{group_id,jdbcType=INTEGER}
			</if>
			<if test="hos_id != null and hos_id != ''">
				AND hst.hos_id = #{hos_id,jdbcType=INTEGER}
			</if>
			<if test="store_type_code != null and store_type_code != ''">
				AND hst.store_type_code = #{store_type_code,jdbcType=VARCHAR}
			</if>
			<if test="tab_code != null and tab_code != ''">
				AND (
						hst.tab_code like upper('%${tab_code}%')
					or  hts.tab_name like '%${tab_code}%'
				)
			</if>
		</where>
		order by hst.tab_code asc
	</select>
	
	<!-- 批量添加 -->
	<insert id="addStoreTabBatch">
		begin
			insert into HR_STORE_TAB_STRUC
				(group_id,hos_id,store_type_code,tab_code)
				(select * from
					<foreach collection="list" open=" ( " close=" ) " item="item" separator=" union all ">
						select 
							#{vo.group_id,jdbcType=INTEGER} group_id,
							#{vo.hos_id,jdbcType=INTEGER} hos_id,
							#{vo.store_type_code,jdbcType=VARCHAR} store_type_code,
							#{item,jdbcType=VARCHAR} tab_code
						from
							dual
					</foreach>
				where tab_code not in (
					select 
						tab_code 
					from
						HR_STORE_TAB_STRUC 
					where
						group_id = #{vo.group_id,jdbcType=INTEGER}
						and hos_id = #{vo.hos_id,jdbcType=INTEGER}
						and store_type_code = #{vo.store_type_code,jdbcType=VARCHAR}) );
			insert into HR_STORE_COL_SET 
						(group_Id,hos_id,store_type_code,
						tab_code,col_code,col_name_show,
						 is_view,is_view_tab,is_verify,
						 is_auto,is_read,is_default,is_change)
			(select * from 
				(select 
					group_id,
					hos_id,
					#{vo.store_type_code,jdbcType=VARCHAR} store_type_code,
					tab_code,
					col_code,
					col_name,
					case when instr(col_code,'_ID') = 0 then 1 else 0 end is_view,
					case when instr(col_code,'_ID') = 0 then 1 else 0 end is_view_tab,
					IS_PK is_verify,
					0 IS_AUTO,
					0 IS_READ,
					0 IS_DEFAULT,
					0 IS_CHANGE
				from hr_col_struc
					where group_id = #{vo.group_id,jdbcType=INTEGER}
					and hos_id = #{vo.hos_id,jdbcType=INTEGER}
					and tab_code in
				<foreach collection="list" open=" ( " close=" ) " item="item" separator=" , ">
					 #{item,jdbcType=VARCHAR}
				</foreach>)
			where tab_code||col_code not in (
				select 
					tab_code||col_code 
				from
					HR_STORE_COL_SET
				where
					group_id = #{vo.group_id,jdbcType=INTEGER}
					and hos_id = #{vo.hos_id,jdbcType=INTEGER}
					and tab_code in
					<foreach collection="list" open=" ( " close=" ) " item="item" separator=" , ">
						#{item,jdbcType=VARCHAR}
					</foreach>
					and store_type_code = #{vo.store_type_code,jdbcType=VARCHAR})
			);
	end;
	</insert>
	
</mapper>

