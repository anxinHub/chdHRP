<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.sysstruc.HrTabTypeMapper">

	<resultMap id="hrTabType" type="com.chd.hrp.hr.entity.sysstruc.HrTabType">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="type_tab_code" column="type_tab_code" />
		<result property="type_tab_name" column="type_tab_name" />
		<result property="note" column="note" />
	</resultMap>

	<resultMap id="hrTabTypeMap" type="java.util.Map">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="type_tab_code" column="type_tab_code" />
		<result property="type_tab_name" column="type_tab_name" />
		<result property="note" column="note" />
	</resultMap>

	<insert id="add" useGeneratedKeys="true">

		INSERT INTO HR_TAB_TYPE (
		  group_id,hos_id,type_tab_code,type_tab_name,note
		) VALUES (
		  #{group_id,jdbcType=INTEGER},
		  #{hos_id,jdbcType=INTEGER},
		  #{type_tab_code,jdbcType=VARCHAR},
		  #{type_tab_name,jdbcType=VARCHAR},
		  #{note,jdbcType=VARCHAR}
		)

	</insert>
	<insert id="addBatch" parameterType="java.util.List">

		INSERT INTO HR_TAB_TYPE (
			group_id,
			hos_id,
			type_tab_code,
			type_tab_name,
			note

		) select t.* from(
		<foreach collection="list" item="item" index="index"
			separator=" union all ">
			select
			#{item.group_id,jdbcType=INTEGER},
		    #{item.hos_id,jdbcType=INTEGER},
			#{item.type_tab_code,jdbcType=VARCHAR},
			#{item.type_tab_name,jdbcType=VARCHAR},
			#{item.note,jdbcType=VARCHAR}

			from dual
		</foreach>
		)t
	</insert>

	<update id="update" parameterType="java.util.Map">

		UPDATE hr_tab_type SET
			type_tab_name = #{type_tab_name,jdbcType=VARCHAR},
			note = #{note,jdbcType=VARCHAR}
		where
		    group_id = #{group_id,jdbcType=INTEGER}
		    and hos_id = #{hos_id,jdbcType=INTEGER}
			and type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open="begin"
			close=";end;" separator=";">
			UPDATE hr_tab_type
			<trim prefix="SET" suffixOverrides=",">
				<if test="item.type_tab_name != null and item.type_tab_name != ''">
					type_tab_name = #{item.type_tab_name,jdbcType=VARCHAR}
					,
				</if>
				<if test="item.note != null and item.note != ''">
					note = #{item.note,jdbcType=VARCHAR}
					,
				</if>
			</trim>
			where
				group_id = #{item.group_id,jdbcType=INTEGER}
		    	and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and type_tab_code = #{item.type_tab_code,jdbcType=VARCHAR}
		</foreach>
	</update>

	<delete id="delete" parameterType="java.util.Map">

		DELETE FROM hr_tab_type
		where
		group_id = #{group_id,jdbcType=INTEGER}
    	and hos_id = #{hos_id,jdbcType=INTEGER}
		and type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteBatchHrTabType" parameterType="java.util.List">
		DELETE FROM hr_tab_type
		<where>
			<foreach collection="list" index="index" item="item" open="("
				separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				and hos_id = #{item.hos_id,jdbcType=INTEGER}
				and type_tab_code = #{item.type_tab_code,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hrTabType">

		SELECT
		group_id,
		hos_id,
		type_tab_code,
		type_tab_name,
		note
		FROM HR_TAB_TYPE
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
    		and hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="type_tab_code != null and type_tab_code != ''">
				AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
			</if>
			<if test="type_tab_name != null and type_tab_name != ''">
				AND type_tab_name = #{type_tab_name,jdbcType=VARCHAR}
			</if>
		</where>
		order by type_tab_code asc
	</select>
	
	<select id="queryByCode" resultMap="hrTabType" parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		type_tab_code,
		type_tab_name,
		note
		FROM hr_tab_type
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
    		and hos_id = #{hos_id,jdbcType=INTEGER}
			and	type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
			<if test="type_tab_name != null and type_tab_name != ''">
			OR  type_tab_name = #{type_tab_name,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 用于判断编码或者名称是否存在 -->
	<select id="queryTabTypeExits" parameterType="java.util.Map" resultType="Integer">

		SELECT
			count(1)
		FROM hr_tab_type
		WHERE
			group_id = #{group_id,jdbcType=INTEGER}
    		and hos_id = #{hos_id,jdbcType=INTEGER}
			and	(
				type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
				<if test="type_tab_name != null and type_tab_name != ''">
					OR  type_tab_name = #{type_tab_name,jdbcType=VARCHAR}
				</if>
			)
	</select>
	
	<select id="queryByUniqueness" resultMap="hrTabType"
		parameterType="java.util.Map">

		SELECT
		group_id,
		hos_id,
		type_tab_code,
		type_tab_name,
		note
		FROM HR_TAB_TYPE
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
    		and hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="type_tab_code != null and type_tab_code != ''">
				AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
			</if>
			<if test="type_tab_name != null and type_tab_name != ''">
				AND type_tab_name = #{type_tab_name,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note,jdbcType=VARCHAR}
			</if>
		</where>
		order by type_tab_code asc
	</select>
	
	<select id="queryExists" resultMap="hrTabType" parameterType="java.util.Map">

		SELECT
			group_id,
			hos_id,
			type_tab_code,
			type_tab_name,
			note
		FROM HR_TAB_TYPE
		<where>
			group_id = #{group_id,jdbcType=INTEGER}
    		and hos_id = #{hos_id,jdbcType=INTEGER}
			<if test="type_tab_code != null and type_tab_code != ''">
				AND type_tab_code = #{type_tab_code,jdbcType=VARCHAR}
			</if>
			<if test="type_tab_name != null and type_tab_name != ''">
				AND type_tab_name = #{type_tab_name,jdbcType=VARCHAR}
			</if>
			<if test="note != null and note != ''">
				AND note = #{note,jdbcType=VARCHAR}
			</if>
		</where>
		order by type_tab_code asc
	</select>
	
	<select id="queryTypeTabByName" resultMap="hrTabTypeMap" parameterType="java.util.Map">
		SELECT
			type_tab_code,
			type_tab_name
		FROM HR_TAB_TYPE
		<where>
				group_id = #{group_id,jdbcType=INTEGER}
    		and hos_id = #{hos_id,jdbcType=INTEGER}
			AND type_tab_name = #{type_tab_name,jdbcType=VARCHAR}
		</where>
	</select>
	
</mapper>

