<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.teachingmanagement.HrZyyNtrainInareaMapper">
	
	<resultMap id="hrZyyNtrainInarea" type="com.chd.hrp.hr.entity.teachingmanagement.HrZyyNtrainInarea">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="emp_id" column="emp_id"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="teacher" column="teacher"/>
	<result property="meet_sign" column="meet_sign"/>
	<result property="skill_train" column="skill_train"/>
	<result property="skill_eval" column="skill_eval"/>
	<result property="case_num" column="case_num"/>
	<result property="case_dept_num" column="case_dept_num"/>
	<result property="case_eval" column="case_eval"/>
	<result property="drg_num" column="drg_num"/>
	<result property="drg_eval" column="drg_eval"/>
	<result property="dept_work" column="dept_work"/>
	<result property="bed" column="bed"/>
	<result property="on_duty" column="on_duty"/>
	<result property="mmeet_case" column="mmeet_case"/>
	<result property="dept_advice" column="dept_advice"/>
	<result property="advice_eval" column="advice_eval"/>
	<result property="mini_cex" column="mini_cex"/>
	<result property="physique" column="physique"/>
	<result property="consultation" column="consultation"/>
	<result property="ade" column="ade"/>
	<result property="online_reg" column="online_reg"/>
	<result property="core_class_eval" column="core_class_eval"/>
	<result property="core_class_test" column="core_class_test"/>
	<result property="dept_eval" column="dept_eval"/>
	<result property="tot_score" column="tot_score"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hrZyyNtrainInareaMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="emp_id" column="emp_id"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="dept_id" column="dept_id"/>
	<result property="dept_name" column="dept_name"/>
	<result property="teacher" column="teacher"/>
	<result property="meet_sign" column="meet_sign"/>
	<result property="skill_train" column="skill_train"/>
	<result property="skill_eval" column="skill_eval"/>
	<result property="case_num" column="case_num"/>
	<result property="case_dept_num" column="case_dept_num"/>
	<result property="case_eval" column="case_eval"/>
	<result property="drg_num" column="drg_num"/>
	<result property="drg_eval" column="drg_eval"/>
	<result property="dept_work" column="dept_work"/>
	<result property="bed" column="bed"/>
	<result property="on_duty" column="on_duty"/>
	<result property="mmeet_case" column="mmeet_case"/>
	<result property="dept_advice" column="dept_advice"/>
	<result property="advice_eval" column="advice_eval"/>
	<result property="mini_cex" column="mini_cex"/>
	<result property="physique" column="physique"/>
	<result property="consultation" column="consultation"/>
	<result property="ade" column="ade"/>
	<result property="online_reg" column="online_reg"/>
	<result property="core_class_eval" column="core_class_eval"/>
	<result property="core_class_test" column="core_class_test"/>
	<result property="dept_eval" column="dept_eval"/>
	<result property="tot_score" column="tot_score"/>
	<result property="professional_name" column="professional_name"/><!-- 专业名字 HR_PROFESSIONAL表-->
	<result property="profession_code" column="profession_code"/>
	<result property="field_col_name" column="field_col_name"/><!-- 学历名字  HR_FIIED_DATA表,当FIELD_TAB_CODE=DIC_EDUCATION-->
	<result property="field_col_code" column="field_col_code"/>
	<result property="dept_name" column="dept_name"/><!-- 轮转科室.. -->
	<result property="note" column="note"/>
	</resultMap>
	
	<resultMap id="hrSelectMap" type="java.util.Map">
        <result property="id" column="id" />
		<result property="text" column="text" />
	</resultMap>
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO HR_ZYY_NTRAIN_INAREA (
		<trim suffix="" suffixOverrides=",">
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		dept_id,
		teacher,
		meet_sign,
		skill_train,
		skill_eval,
		case_num,
		case_dept_num,
		case_eval,
		drg_num,
		drg_eval,
		dept_work,
		bed,
		on_duty,
		mmeet_case,
		dept_advice,
		advice_eval,
		mini_cex,
		physique,
		consultation,
		ade,
		online_reg,
		core_class_eval,
		core_class_test,
		dept_eval,
		tot_score,
		note,
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{emp_id,jdbcType=INTEGER},
		#{year,jdbcType=VARCHAR},
		#{month,jdbcType=VARCHAR},
		#{dept_id,jdbcType=INTEGER},
		#{teacher,jdbcType=VARCHAR},
		#{meet_sign,jdbcType=INTEGER},
		#{skill_train,jdbcType=INTEGER},
		#{skill_eval,jdbcType=INTEGER},
		#{case_num,jdbcType=INTEGER},
		#{case_dept_num,jdbcType=INTEGER},
		#{case_eval,jdbcType=INTEGER},
		#{drg_num,jdbcType=INTEGER},
		#{drg_eval,jdbcType=INTEGER},
		#{dept_work,jdbcType=INTEGER},
		#{bed,jdbcType=INTEGER},
		#{on_duty,jdbcType=INTEGER},
		#{mmeet_case,jdbcType=INTEGER},
		#{dept_advice,jdbcType=INTEGER},
		#{advice_eval,jdbcType=INTEGER},
		#{mini_cex,jdbcType=INTEGER},
		#{physique,jdbcType=INTEGER},
		#{consultation,jdbcType=INTEGER},
		#{ade,jdbcType=INTEGER},
		#{online_reg,jdbcType=INTEGER},
		#{core_class_eval,jdbcType=INTEGER},
		#{core_class_test,jdbcType=INTEGER},
		#{dept_eval,jdbcType=INTEGER},
		#{tot_score,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_ZYY_NTRAIN_INAREA (
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		dept_id,
		teacher,
		meet_sign,
		skill_train,
		skill_eval,
		case_num,
		case_dept_num,
		case_eval,
		drg_num,
		drg_eval,
		dept_work,
		bed,
		on_duty,
		mmeet_case,
		dept_advice,
		advice_eval,
		mini_cex,
		physique,
		consultation,
		ade,
		online_reg,
		core_class_eval,
		core_class_test,
		dept_eval,
		tot_score,
		note
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.dept_id,jdbcType=INTEGER},
			#{item.teacher,jdbcType=VARCHAR},
			#{item.meet_sign,jdbcType=INTEGER},
			#{item.skill_train,jdbcType=INTEGER},
			#{item.skill_eval,jdbcType=INTEGER},
			#{item.case_num,jdbcType=INTEGER},
			#{item.case_dept_num,jdbcType=INTEGER},
			#{item.case_eval,jdbcType=INTEGER},
			#{item.drg_num,jdbcType=INTEGER},
			#{item.drg_eval,jdbcType=INTEGER},
			#{item.dept_work,jdbcType=INTEGER},
			#{item.bed,jdbcType=INTEGER},
			#{item.on_duty,jdbcType=INTEGER},
			#{item.mmeet_case,jdbcType=INTEGER},
			#{item.dept_advice,jdbcType=INTEGER},
			#{item.advice_eval,jdbcType=INTEGER},
			#{item.mini_cex,jdbcType=INTEGER},
			#{item.physique,jdbcType=INTEGER},
			#{item.consultation,jdbcType=INTEGER},
			#{item.ade,jdbcType=INTEGER},
			#{item.online_reg,jdbcType=INTEGER},
			#{item.core_class_eval,jdbcType=INTEGER},
			#{item.core_class_test,jdbcType=INTEGER},
			#{item.dept_eval,jdbcType=INTEGER},
			#{item.tot_score,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE hr_zyy_ntrain_inarea 
		<trim prefix="SET"  suffixOverrides=","> 
		dept_id = #{dept_id,jdbcType=INTEGER},
		teacher = #{teacher,jdbcType=VARCHAR},
		meet_sign = #{meet_sign,jdbcType=INTEGER},
		skill_train = #{skill_train,jdbcType=INTEGER},
		skill_eval = #{skill_eval,jdbcType=INTEGER},
		case_num = #{case_num,jdbcType=INTEGER},
		case_dept_num = #{case_dept_num,jdbcType=INTEGER},
		case_eval = #{case_eval,jdbcType=INTEGER},
		drg_num = #{drg_num,jdbcType=INTEGER},
		drg_eval = #{drg_eval,jdbcType=INTEGER},
		dept_work = #{dept_work,jdbcType=INTEGER},
		bed = #{bed,jdbcType=INTEGER},
		on_duty = #{on_duty,jdbcType=INTEGER},
		mmeet_case = #{mmeet_case,jdbcType=INTEGER},
		dept_advice = #{dept_advice,jdbcType=INTEGER},
		advice_eval = #{advice_eval,jdbcType=INTEGER},
		mini_cex = #{mini_cex,jdbcType=INTEGER},
		physique = #{physique,jdbcType=INTEGER},
		consultation = #{consultation,jdbcType=INTEGER},
		ade = #{ade,jdbcType=INTEGER},
		online_reg = #{online_reg,jdbcType=INTEGER},
		core_class_eval = #{core_class_eval,jdbcType=INTEGER},
		core_class_test = #{core_class_test,jdbcType=INTEGER},
		dept_eval = #{dept_eval,jdbcType=INTEGER},
		tot_score = #{tot_score,jdbcType=INTEGER},
		note = #{note,jdbcType=VARCHAR},
		</trim>
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		AND month = #{month,jdbcType=VARCHAR}
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE hr_zyy_ntrain_inarea 
			<trim prefix="SET"  suffixOverrides=","> 
			dept_id = #{item.dept_id,jdbcType=INTEGER},
			teacher = #{item.teacher,jdbcType=VARCHAR},
			meet_sign = #{item.meet_sign,jdbcType=INTEGER},
			skill_train = #{item.skill_train,jdbcType=INTEGER},
			skill_eval = #{item.skill_eval,jdbcType=INTEGER},
			case_num = #{item.case_num,jdbcType=INTEGER},
			case_dept_num = #{item.case_dept_num,jdbcType=INTEGER},
			case_eval = #{item.case_eval,jdbcType=INTEGER},
			drg_num = #{item.drg_num,jdbcType=INTEGER},
			drg_eval = #{item.drg_eval,jdbcType=INTEGER},
			dept_work = #{item.dept_work,jdbcType=INTEGER},
			bed = #{item.bed,jdbcType=INTEGER},
			on_duty = #{item.on_duty,jdbcType=INTEGER},
			mmeet_case = #{item.mmeet_case,jdbcType=INTEGER},
			dept_advice = #{item.dept_advice,jdbcType=INTEGER},
			advice_eval = #{item.advice_eval,jdbcType=INTEGER},
			mini_cex = #{item.mini_cex,jdbcType=INTEGER},
			physique = #{item.physique,jdbcType=INTEGER},
			consultation = #{item.consultation,jdbcType=INTEGER},
			ade = #{item.ade,jdbcType=INTEGER},
			online_reg = #{item.online_reg,jdbcType=INTEGER},
			core_class_eval = #{item.core_class_eval,jdbcType=INTEGER},
			core_class_test = #{item.core_class_test,jdbcType=INTEGER},
			dept_eval = #{item.dept_eval,jdbcType=INTEGER},
			tot_score = #{item.tot_score,jdbcType=INTEGER},
			note = #{item.note,jdbcType=VARCHAR},
			</trim>
			<where>                     
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			AND year = #{item.year,jdbcType=VARCHAR}
			AND month = #{item.month,jdbcType=VARCHAR}
			</where>  			
		</foreach>
	</update>
	<!-- 保存时先删除所有 -->
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM hr_zyy_ntrain_inarea 
		<where>                     
		 group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND emp_id = #{item.emp_id,jdbcType=INTEGER}
		AND year = #{item.year,jdbcType=VARCHAR}
		AND month = #{item.month,jdbcType=VARCHAR}
		</where>  
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM hr_zyy_ntrain_inarea 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				<if test="item.group_id != null and item.group_id != ''">
				AND group_id = #{item.group_id,jdbcType=INTEGER}
				</if>
				<if test="item.hos_id != null and item.hos_id != ''">
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>
				<if test="item.emp_id != null and item.emp_id != ''">
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>
				<if test="item.year != null and item.year != ''">
				AND year = #{item.year,jdbcType=VARCHAR}
				</if>
				<if test="item.month != null and item.month != ''">
				AND month = #{item.month,jdbcType=VARCHAR}
				</if>
			</foreach>
	    </where>  
	</delete>
	<delete id="deleteHrZyyNtrainInarea" parameterType="java.util.List">
		DELETE FROM hr_zyy_ntrain_inarea 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	<select id="query" parameterType="java.util.Map" resultMap="hrZyyNtrainInareaMap" >
	
		SELECT 
		z.group_id,
		z.hos_id,
		z.emp_id,
		em.emp_code "emp_code",
		em.emp_name "emp_name",
		z.year,
		z.month,
		z.dept_id,
		hd.dept_name,
		z.teacher,
		z.meet_sign,
		z.skill_train,
		z.skill_eval,
		z.case_num,
		z.case_dept_num,
		z.case_eval,
		z.drg_num,
		z.drg_eval,
		z.dept_work,
		z.bed,
		z.on_duty,
		z.mmeet_case,
		z.dept_advice,
		z.advice_eval,
		z.mini_cex,
		z.physique,
		z.consultation,
		z.ade,
		z.online_reg,
		z.core_class_eval,
		z.core_class_test,
		z.dept_eval,
		z.tot_score,
		z.note,
		e.profession_code,
		p.professional_name, 
		f.field_col_name,
		f.field_col_code,
		d.dept_name
		
		FROM HR_ZYY_NTRAIN_INAREA z 
		
		left join HOS_EMP em
		on z.EMP_ID=em.EMP_ID and z.group_id=em.group_id and z.hos_id=em.hos_id and em.IS_STOP='0' <!-- and em.IS_DISABLE='0' -->
		LEFT JOIN HOS_DEPT hd 
    		ON z.DEPT_ID = hd.dept_id and z. GROUP_ID = em. GROUP_ID AND z.hos_id = em.hos_id and hd.is_stop='0'
		left join HR_EMP_DEGREE e 
		on z.EMP_ID=e.EMP_ID
		and z.group_id=e.group_id and z.hos_id=e.hos_id
		left join HR_PROFESSIONAL p
		on e.PROFESSION_CODE=p.PROFESSIONAL_CODE
		and p.group_id=e.group_id and p.hos_id=e.hos_id
		<!-- left join HR_EMP_DEGREE e
		on z.EMP_ID=e.EMP_ID -->
		left join HR_FIIED_DATA f 
		on e.EDUCATION_CODE=f.FIELD_COL_CODE and FIELD_TAB_CODE='DIC_EDUCATION'
		and f.group_id=e.group_id and f.hos_id=e.hos_id
		<!-- left join HR_EMP_DEPT ed
		on z.EMP_ID=ed.EMP_ID -->
		left join HOS_DEPT_DICT d
		on z.DEPT_ID=d.DEPT_ID and d.IS_STOP='0' and d.IS_DISABLE='0'
       and z.group_id=d.group_id and z.hos_id=d.hos_id
       
         		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND z.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND z.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND z.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND z.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND z.month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND z.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="teacher != null and teacher != ''">
		AND z.teacher = #{teacher,jdbcType=VARCHAR}
		</if>
		<if test="emp_code != null and emp_code != ''">
		AND em.emp_code like concat('%',concat(#{emp_code,jdbcType=VARCHAR},'%'))
		</if>
		<if test="emp_name != null and emp_name != ''">
		AND em.emp_name like concat('%',concat(#{emp_name,jdbcType=VARCHAR},'%'))
		</if>
		<if test="field_col_code != null and field_col_code != ''">
		AND f.field_col_code = #{field_col_code,jdbcType=VARCHAR}
		</if>
		<if test="profession_code != null and profession_code != ''">
		AND e.profession_code = #{profession_code,jdbcType=VARCHAR}
		</if>
		and (e.GRADUATION_DATE=(select max(e1.GRADUATION_DATE)
		from  HR_EMP_DEGREE e1
        where e1.hos_id=e.hos_id and 
        e1.group_id=e.group_id and e1.EMP_ID=e.EMP_ID
        group by  e1.hos_id, e1.group_id,e1.EMP_ID) or e.GRADUATION_DATE is null)
		</where>
		group by z.note, z.dept_advice, p.professional_name, z.core_class_test, z.bed, 
        d.dept_name, z.skill_eval, z.advice_eval, z.online_reg, z.hos_id, 
        z.dept_work, z.drg_eval, z.physique, z.teacher, z.dept_id, 
        f.field_col_name, z.drg_num, z.skill_train, z.meet_sign, z.tot_score, 
        e.PROFESSION_CODE, z.case_num, z.case_dept_num, z.ade, z.year, 
        z.core_class_eval, z.dept_eval, z.case_eval, f.field_col_code, z.consultation, 
        z.on_duty, z.mmeet_case, z.month, em.emp_name, z.emp_id, 
        z.mini_cex, em.emp_code, z.group_id, hd.dept_name
		order by z.year desc ,z.month desc,em.emp_code asc

	</select>
	<select id="queryByCode" resultMap="hrZyyNtrainInarea"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		dept_id,
		teacher,
		meet_sign,
		skill_train,
		skill_eval,
		case_num,
		case_dept_num,
		case_eval,
		drg_num,
		drg_eval,
		dept_work,
		bed,
		on_duty,
		mmeet_case,
		dept_advice,
		advice_eval,
		mini_cex,
		physique,
		consultation,
		ade,
		online_reg,
		core_class_eval,
		core_class_test,
		dept_eval,
		tot_score,
		note
		FROM hr_zyy_ntrain_inarea 
		WHERE 
		group_id = #{group_id,jdbcType=INTEGER}   and 
		hos_id = #{hos_id,jdbcType=INTEGER}   and 
		emp_id = #{emp_id,jdbcType=INTEGER}   and 
		year = #{year,jdbcType=VARCHAR}   and 
		month = #{month,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="hrZyyNtrainInarea"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		dept_id,
		teacher,
		meet_sign,
		skill_train,
		skill_eval,
		case_num,
		case_dept_num,
		case_eval,
		drg_num,
		drg_eval,
		dept_work,
		bed,
		on_duty,
		mmeet_case,
		dept_advice,
		advice_eval,
		mini_cex,
		physique,
		consultation,
		ade,
		online_reg,
		core_class_eval,
		core_class_test,
		dept_eval,
		tot_score,
		note
		FROM HR_ZYY_NTRAIN_INAREA 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="teacher != null and teacher != ''">
		AND teacher = #{teacher,jdbcType=VARCHAR}
		</if>
		<if test="meet_sign != null and meet_sign != ''">
		AND meet_sign = #{meet_sign,jdbcType=INTEGER}
		</if>
		<if test="skill_train != null and skill_train != ''">
		AND skill_train = #{skill_train,jdbcType=INTEGER}
		</if>
		<if test="skill_eval != null and skill_eval != ''">
		AND skill_eval = #{skill_eval,jdbcType=INTEGER}
		</if>
		<if test="case_num != null and case_num != ''">
		AND case_num = #{case_num,jdbcType=INTEGER}
		</if>
		<if test="case_dept_num != null and case_dept_num != ''">
		AND case_dept_num = #{case_dept_num,jdbcType=INTEGER}
		</if>
		<if test="case_eval != null and case_eval != ''">
		AND case_eval = #{case_eval,jdbcType=INTEGER}
		</if>
		<if test="drg_num != null and drg_num != ''">
		AND drg_num = #{drg_num,jdbcType=INTEGER}
		</if>
		<if test="drg_eval != null and drg_eval != ''">
		AND drg_eval = #{drg_eval,jdbcType=INTEGER}
		</if>
		<if test="dept_work != null and dept_work != ''">
		AND dept_work = #{dept_work,jdbcType=INTEGER}
		</if>
		<if test="bed != null and bed != ''">
		AND bed = #{bed,jdbcType=INTEGER}
		</if>
		<if test="on_duty != null and on_duty != ''">
		AND on_duty = #{on_duty,jdbcType=INTEGER}
		</if>
		<if test="mmeet_case != null and mmeet_case != ''">
		AND mmeet_case = #{mmeet_case,jdbcType=INTEGER}
		</if>
		<if test="dept_advice != null and dept_advice != ''">
		AND dept_advice = #{dept_advice,jdbcType=INTEGER}
		</if>
		<if test="advice_eval != null and advice_eval != ''">
		AND advice_eval = #{advice_eval,jdbcType=INTEGER}
		</if>
		<if test="mini_cex != null and mini_cex != ''">
		AND mini_cex = #{mini_cex,jdbcType=INTEGER}
		</if>
		<if test="physique != null and physique != ''">
		AND physique = #{physique,jdbcType=INTEGER}
		</if>
		<if test="consultation != null and consultation != ''">
		AND consultation = #{consultation,jdbcType=INTEGER}
		</if>
		<if test="ade != null and ade != ''">
		AND ade = #{ade,jdbcType=INTEGER}
		</if>
		<if test="online_reg != null and online_reg != ''">
		AND online_reg = #{online_reg,jdbcType=INTEGER}
		</if>
		<if test="core_class_eval != null and core_class_eval != ''">
		AND core_class_eval = #{core_class_eval,jdbcType=INTEGER}
		</if>
		<if test="core_class_test != null and core_class_test != ''">
		AND core_class_test = #{core_class_test,jdbcType=INTEGER}
		</if>
		<if test="dept_eval != null and dept_eval != ''">
		AND dept_eval = #{dept_eval,jdbcType=INTEGER}
		</if>
		<if test="tot_score != null and tot_score != ''">
		AND tot_score = #{tot_score,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrZyyNtrainInarea"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		dept_id,
		teacher,
		meet_sign,
		skill_train,
		skill_eval,
		case_num,
		case_dept_num,
		case_eval,
		drg_num,
		drg_eval,
		dept_work,
		bed,
		on_duty,
		mmeet_case,
		dept_advice,
		advice_eval,
		mini_cex,
		physique,
		consultation,
		ade,
		online_reg,
		core_class_eval,
		core_class_test,
		dept_eval,
		tot_score,
		note
		FROM HR_ZYY_NTRAIN_INAREA 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="teacher != null and teacher != ''">
		AND teacher = #{teacher,jdbcType=VARCHAR}
		</if>
		<if test="meet_sign != null and meet_sign != ''">
		AND meet_sign = #{meet_sign,jdbcType=INTEGER}
		</if>
		<if test="skill_train != null and skill_train != ''">
		AND skill_train = #{skill_train,jdbcType=INTEGER}
		</if>
		<if test="skill_eval != null and skill_eval != ''">
		AND skill_eval = #{skill_eval,jdbcType=INTEGER}
		</if>
		<if test="case_num != null and case_num != ''">
		AND case_num = #{case_num,jdbcType=INTEGER}
		</if>
		<if test="case_dept_num != null and case_dept_num != ''">
		AND case_dept_num = #{case_dept_num,jdbcType=INTEGER}
		</if>
		<if test="case_eval != null and case_eval != ''">
		AND case_eval = #{case_eval,jdbcType=INTEGER}
		</if>
		<if test="drg_num != null and drg_num != ''">
		AND drg_num = #{drg_num,jdbcType=INTEGER}
		</if>
		<if test="drg_eval != null and drg_eval != ''">
		AND drg_eval = #{drg_eval,jdbcType=INTEGER}
		</if>
		<if test="dept_work != null and dept_work != ''">
		AND dept_work = #{dept_work,jdbcType=INTEGER}
		</if>
		<if test="bed != null and bed != ''">
		AND bed = #{bed,jdbcType=INTEGER}
		</if>
		<if test="on_duty != null and on_duty != ''">
		AND on_duty = #{on_duty,jdbcType=INTEGER}
		</if>
		<if test="mmeet_case != null and mmeet_case != ''">
		AND mmeet_case = #{mmeet_case,jdbcType=INTEGER}
		</if>
		<if test="dept_advice != null and dept_advice != ''">
		AND dept_advice = #{dept_advice,jdbcType=INTEGER}
		</if>
		<if test="advice_eval != null and advice_eval != ''">
		AND advice_eval = #{advice_eval,jdbcType=INTEGER}
		</if>
		<if test="mini_cex != null and mini_cex != ''">
		AND mini_cex = #{mini_cex,jdbcType=INTEGER}
		</if>
		<if test="physique != null and physique != ''">
		AND physique = #{physique,jdbcType=INTEGER}
		</if>
		<if test="consultation != null and consultation != ''">
		AND consultation = #{consultation,jdbcType=INTEGER}
		</if>
		<if test="ade != null and ade != ''">
		AND ade = #{ade,jdbcType=INTEGER}
		</if>
		<if test="online_reg != null and online_reg != ''">
		AND online_reg = #{online_reg,jdbcType=INTEGER}
		</if>
		<if test="core_class_eval != null and core_class_eval != ''">
		AND core_class_eval = #{core_class_eval,jdbcType=INTEGER}
		</if>
		<if test="core_class_test != null and core_class_test != ''">
		AND core_class_test = #{core_class_test,jdbcType=INTEGER}
		</if>
		<if test="dept_eval != null and dept_eval != ''">
		AND dept_eval = #{dept_eval,jdbcType=INTEGER}
		</if>
		<if test="tot_score != null and tot_score != ''">
		AND tot_score = #{tot_score,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	
	<!-- 查询专业信息 -->  
	<select id="queryProfessional" resultMap="hrZyyNtrainInareaMap"  parameterType="java.util.Map">
		select
		e.PROFESSION_CODE,
		p.professional_name 
		from HR_ZYY_NTRAIN_INAREA z left join HR_EMP_DEGREE e 
		on z.EMP_ID=e.EMP_ID
		left join HR_PROFESSIONAL p
		on e.PROFESSION_CODE=p.PROFESSIONAL_CODE
		where 
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER} 
		
	</select>
	
	<!-- 查询专业信息 下拉框-->
	<select id="queryProfessionalComboBox" resultMap="hrSelectMap"  parameterType="java.util.Map">
		select
		p.PROFESSIONAL_CODE id,
		p.professional_name text
		from HR_PROFESSIONAL p
		where
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}  
	</select>
	<!-- 查询学历信息  -->
	<select id="queryEducation"  resultMap="hrZyyNtrainInareaMap"  parameterType="java.util.Map">
		select f.field_col_name,f.field_col_code 
		from HR_ZYY_NTRAIN_INAREA  z 
		left join HR_EMP_DEGREE e
		on z.EMP_ID=e.EMP_ID
		left join HR_FIIED_DATA f 
		on e.EDUCATION_CODE=f.FIELD_COL_CODE and FIELD_TAB_CODE='DIC_EDUCATION'
		where
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER} 
	</select>
	<!-- 查询学历信息 下拉框 -->
	<select id="queryEducationComboBox" resultMap="hrSelectMap"  parameterType="java.util.Map">
		select f.field_col_name text,f.field_col_code id
		from  HR_FIIED_DATA f
		where  FIELD_TAB_CODE='DIC_EDUCATION'
		and group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER} 
	</select>
	<!-- 查询轮转科室信息-->
	<select id="queryDept"  resultMap="hrZyyNtrainInareaMap"  parameterType="java.util.Map">
		select z.DEPT_ID id ,d.dept_name text
		from HR_ZYY_NTRAIN_INAREA  z 
		left join HR_EMP_DEPT ed
		on z.EMP_ID=ed.EMP_ID
		left join HOS_DEPT_DICT d
		on ed.DEPT_ID=d.DEPT_CODE and d.IS_STOP='0' and d.IS_DISABLE='0'
		where 
		group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER} 
	</select>
	<!-- 查询轮转科室信息  下拉框-->
	<select id="queryDeptComboBox" resultMap="hrSelectMap"  parameterType="java.util.Map">
		select DEPT_ID id,dept_name text
	    from HOS_DEPT_DICT 
	    where 
	    IS_STOP='0' and IS_DISABLE='0'
		and group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER} 
	</select>
	<!-- 查询  双击工号出现下拉框 -->
	<select id="queryComboBox" resultMap="hrSelectMap"  parameterType="java.util.Map">
		select hed.group_id "group_id",
		hed.hos_id "hos_id",
		hed.emp_id "emp_id",
		hed.emp_name "emp_name",
        hed.emp_code "emp_code",
        p.professional_name "professional_name", 
		f.field_col_name "field_col_name",
        e.graduation_date "graduation_date"
		from HOS_EMP hed
		
		left join HR_EMP_DEGREE e 
		on hed.EMP_ID=e.EMP_ID
		 and hed.group_id=e.group_id and hed.hos_id=e.hos_id
		left join HR_PROFESSIONAL p
		on e.PROFESSION_CODE=p.PROFESSIONAL_CODE
		and e.group_id=p.group_id and e.hos_id=p.hos_id 
		<!--重复查询  -->
		<!-- left join HR_EMP_DEGREE e
		on hed.EMP_ID=e.EMP_ID -->
		left join HR_FIIED_DATA f 
		on e.EDUCATION_CODE=f.FIELD_COL_CODE and FIELD_TAB_CODE='DIC_EDUCATION'
		 and e.group_id=f.group_id and e.hos_id=p.hos_id
		<!-- 用子查询查出每条数据毕业日期的最大值得一条,即为最高学历 -->
        where 
        	hed.group_id = #{group_id}
    		and hed.hos_id = #{hos_id}
        and (e.GRADUATION_DATE=(select max(e1.GRADUATION_DATE)
		from  HR_EMP_DEGREE e1
        where e1.hos_id=e.hos_id and 
        e1.group_id=e.group_id and e1.EMP_ID=e.EMP_ID
        group by  e1.hos_id, e1.group_id,e1.EMP_ID)
         <!-- 或者毕业时间为空,即为没有学历记录 -->
        or e.GRADUATION_DATE is null)
        <!--  -->
        <if test="key != null and key != ''">
			and (
			hed.emp_code like '%'||#{key}||'%' or
			hed.emp_name like '%'||#{key}||'%' or
			p.professional_name like '%'||#{key}||'%' or
			f.field_col_name like '%'||#{key}||'%'or
			hed.SPELL_CODE like '%'||upper(#{key})||'%' or
			hed.WBX_CODE like '%'||upper(#{key})||'%'
			)
			</if>
        <!-- 分组,去除重复数据 -->
        group by hed.emp_code, hed.emp_id, f.field_col_name, p.professional_name, hed.hos_id, 
        hed.group_id, e.GRADUATION_DATE, hed.emp_name
	</select>
	<select id="queryZyyNtrainInareaByPrint" parameterType="java.util.Map" resultType="java.util.Map" >
	
		SELECT 
		z.group_id,
		z.hos_id,
		z.emp_id,
		em.emp_code "emp_code",
		em.emp_name "emp_name",
		z.year,
		z.month,
		z.dept_id,
		z.teacher,
		z.meet_sign,
		z.skill_train,
		z.skill_eval,
		z.case_num,
		z.case_dept_num,
		z.case_eval,
		z.drg_num,
		z.drg_eval,
		z.dept_work,
		z.bed,
		z.on_duty,
		z.mmeet_case,
		z.dept_advice,
		z.advice_eval,
		z.mini_cex,
		z.physique,
		z.consultation,
		z.ade,
		z.online_reg,
		z.core_class_eval,
		z.core_class_test,
		z.dept_eval,
		z.tot_score,
		z.note,
		e.profession_code,
		p.professional_name, 
		f.field_col_name,
		f.field_col_code,
		d.dept_name
		
		FROM HR_ZYY_NTRAIN_INAREA z 
		
		left join HOS_EMP_DICT em
		on z.EMP_ID=em.EMP_ID and z.group_id=em.group_id and z.hos_id=em.hos_id and em.IS_STOP='0' and em.IS_DISABLE='0'
		
		left join HR_EMP_DEGREE e 
		on z.EMP_ID=e.EMP_ID
		and z.group_id=e.group_id and z.hos_id=e.hos_id
		left join HR_PROFESSIONAL p
		on e.PROFESSION_CODE=p.PROFESSIONAL_CODE
		and p.group_id=e.group_id and p.hos_id=e.hos_id
		<!-- left join HR_EMP_DEGREE e
		on z.EMP_ID=e.EMP_ID -->
		left join HR_FIIED_DATA f 
		on e.EDUCATION_CODE=f.FIELD_COL_CODE and FIELD_TAB_CODE='DIC_EDUCATION'
		and f.group_id=e.group_id and f.hos_id=e.hos_id
		<!-- left join HR_EMP_DEPT ed
		on z.EMP_ID=ed.EMP_ID -->
		left join HOS_DEPT_DICT d
		on z.DEPT_ID=d.DEPT_ID and d.IS_STOP='0' and d.IS_DISABLE='0'
       and z.group_id=d.group_id and z.hos_id=d.hos_id
       
         		
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND z.group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND z.hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND z.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND z.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND z.month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND z.dept_id = #{dept_id,jdbcType=INTEGER}
		</if>
		<if test="teacher != null and teacher != ''">
		AND z.teacher = #{teacher,jdbcType=VARCHAR}
		</if>
		<if test="emp_code != null and emp_code != ''">
		AND em.emp_code like concat('%',concat(#{emp_code,jdbcType=VARCHAR},'%'))
		</if>
		<if test="emp_name != null and emp_name != ''">
		AND em.emp_name like concat('%',concat(#{emp_name,jdbcType=VARCHAR},'%'))
		</if>
		<if test="field_col_code != null and field_col_code != ''">
		AND f.field_col_code = #{field_col_code,jdbcType=VARCHAR}
		</if>
		<if test="profession_code != null and profession_code != ''">
		AND e.profession_code = #{profession_code,jdbcType=VARCHAR}
		</if>
		and (e.GRADUATION_DATE=(select max(e1.GRADUATION_DATE)
		from  HR_EMP_DEGREE e1
        where e1.hos_id=e.hos_id and 
        e1.group_id=e.group_id and e1.EMP_ID=e.EMP_ID
        group by  e1.hos_id, e1.group_id,e1.EMP_ID) or e.GRADUATION_DATE is null)
		</where>
		group by z.note, z.dept_advice, p.professional_name, z.core_class_test, z.bed, 
        d.dept_name, z.skill_eval, z.advice_eval, z.online_reg, z.hos_id, 
        z.dept_work, z.drg_eval, z.physique, z.teacher, z.dept_id, 
        f.field_col_name, z.drg_num, z.skill_train, z.meet_sign, z.tot_score, 
        e.PROFESSION_CODE, z.case_num, z.case_dept_num, z.ade, z.year, 
        z.core_class_eval, z.dept_eval, z.case_eval, f.field_col_code, z.consultation, 
        z.on_duty, z.mmeet_case, z.month, em.emp_name, z.emp_id, 
        z.mini_cex, em.emp_code, z.group_id   
		order by group_id asc
	</select>
	
	<select id="queryZyyDept" resultMap="hrZyyNtrainInareaMap"  parameterType="java.util.Map">
		select he.dept_id from hos_dept he
		where he.group_id=#{group_id} and he.hos_id=#{hos_id} 
		   and (he.dept_code=#{dept_id} or he.dept_name=#{dept_id})
	</select>
</mapper>

