<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hr.dao.nursingtraining.HrEmpMonthNurseMapper">
	
	<resultMap id="hrEmpMonthNurse" type="com.chd.hrp.hr.entity.nursingtraining.HrEmpMonthNurse">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="emp_id" column="emp_id"/>
	<result property="emp_code" column="emp_code"/>
	<result property="emp_name" column="emp_name"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="morality" column="morality"/>
	<result property="quality" column="quality"/>
	<result property="safety" column="safety"/>
	<result property="state" column="state"/>	
	<result property="accessory" column="accessory"/>
	<result property="note" column="note"/>
	</resultMap>
		
	<resultMap id="hrEmpMonthNurseMap" type="java.util.Map">
	<result property="group_id" column="group_id"/>
	<result property="hos_id" column="hos_id"/>
	<result property="emp_id" column="emp_id"/>
	<result property="year" column="year"/>
	<result property="month" column="month"/>
	<result property="morality" column="morality"/>
	<result property="quality" column="quality"/>
	<result property="safety" column="safety"/>
	<result property="state" column="state"/>
	<result property="accessory" column="accessory"/>
	<result property="note" column="note"/>
	</resultMap>
	
	<insert id="add" useGeneratedKeys="true" >
	
		INSERT INTO HR_EMP_MONTH_NURSE (
		<trim suffix="" suffixOverrides=",">
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		morality,
		quality,
		safety,
		accessory,
		note,
		</trim>
		) VALUES (
		<trim suffix="" suffixOverrides=",">
		#{group_id,jdbcType=INTEGER},
		#{hos_id,jdbcType=INTEGER},
		#{emp_id,jdbcType=INTEGER},
		#{year,jdbcType=VARCHAR},
		#{month,jdbcType=VARCHAR},
		#{morality,jdbcType=INTEGER},
		#{quality,jdbcType=INTEGER},
		#{safety,jdbcType=INTEGER},
		#{accessory,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		</trim>		
		)
	
	</insert>
	<insert id="addBatch" parameterType="java.util.List" >
	
		INSERT INTO HR_EMP_MONTH_NURSE (
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		morality,
		quality,
		safety,
		accessory,
		note
		) select t.* from(
		<foreach collection="list" item="item" index="index" separator=" union all " >
			select 		
			#{item.group_id,jdbcType=INTEGER},
			#{item.hos_id,jdbcType=INTEGER},
			#{item.emp_id,jdbcType=INTEGER},
			#{item.year,jdbcType=VARCHAR},
			#{item.month,jdbcType=VARCHAR},
			#{item.morality,jdbcType=INTEGER},
			#{item.quality,jdbcType=INTEGER},
			#{item.safety,jdbcType=INTEGER},
			#{item.accessory,jdbcType=INTEGER},
			#{item.note,jdbcType=VARCHAR}
		    from dual
		</foreach>
		)t
	</insert>
	
	<update id="update" parameterType="java.util.Map">
	
		UPDATE hr_emp_month_nurse 
		<trim prefix="SET"  suffixOverrides=","> 
		morality = #{morality,jdbcType=INTEGER},
		quality = #{quality,jdbcType=INTEGER},
		safety = #{safety,jdbcType=INTEGER},
		accessory = #{accessory,jdbcType=INTEGER},
		note = #{note,jdbcType=VARCHAR},
		</trim>
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		AND month = #{month,jdbcType=VARCHAR}
		</where>  
	</update>
	<update id="updateBatch" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE hr_emp_month_nurse 
			<trim prefix="SET"  suffixOverrides=","> 
			morality = #{item.morality,jdbcType=INTEGER},
			quality = #{item.quality,jdbcType=INTEGER},
			safety = #{item.safety,jdbcType=INTEGER},
			accessory = #{item.accessory,jdbcType=INTEGER},
			note = #{item.note,jdbcType=VARCHAR},
			</trim>
			<where>                     
			AND group_id = #{item.group_id,jdbcType=INTEGER}
			AND hos_id = #{item.hos_id,jdbcType=INTEGER}
			AND emp_id = #{item.emp_id,jdbcType=INTEGER}
			AND year = #{item.year,jdbcType=VARCHAR}
			AND month = #{item.month,jdbcType=VARCHAR}
			</where>  			
		</foreach>
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
	
		DELETE FROM hr_emp_month_nurse 
		<where>                     
		AND group_id = #{group_id,jdbcType=INTEGER}
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		AND year = #{year,jdbcType=VARCHAR}
		AND month = #{month,jdbcType=VARCHAR}
		</where>  
	</delete>
	<delete id="deleteHrEmpMonthNurse" parameterType="java.util.List">
		DELETE FROM hr_emp_month_nurse 
		<where>
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				group_id = #{item.group_id,jdbcType=INTEGER}
				AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				AND year = #{item.year,jdbcType=VARCHAR}
				AND month = #{item.month,jdbcType=VARCHAR}
			</foreach>
	    </where>  
	</delete>
	
	<select id="queryHrEmpMonthNurse" parameterType="java.util.Map" resultMap="hrEmpMonthNurse" >
	
		SELECT 
		emn.group_id,
		emn.hos_id,
		emn.emp_id,
		he.emp_code,
		he.emp_name,
		emn.year,
		emn.month,
		emn.morality,
		emn.quality,
		emn.safety,
		emn.accessory,
		1 state,
		emn.note
		FROM HR_EMP_MONTH_NURSE  emn
		
		left join hos_emp he
		  on emn.group_id = he.group_id
		 and emn.hos_id = he.hos_id
		 and emn.emp_id = he.emp_id
		 
		left join (select hd.group_id, hd.hos_id, hd.emp_id, hd.duty_code
	               from HR_HOS_DUTY hd
	              where hd.engage_date =
	                    (select max(hd2.engage_date)
	                       from HR_HOS_DUTY hd2
	                      where hd2.group_id = hd.group_id
	                        and hd2.hos_id = hd.hos_id
	                        and hd2.emp_id = hd.emp_id
	                      group by hd2.group_id, hd2.hos_id, hd2.emp_id)) hd
	      on he.group_id = hd.group_id
	     and he.hos_id = hd.hos_id
	     and he.emp_id = hd.emp_id
	     
	     left join (select ett.group_id, ett.hos_id, ett.emp_id, ett.title_code
	               from HR_EMP_TECHNOLOGY_TITLE ett
	              where ett.get_date =
	                    (select max(ett2.get_date)
	                       from HR_EMP_TECHNOLOGY_TITLE ett2
	                      where ett2.group_id = ett.group_id
	                        and ett2.hos_id = ett.hos_id
	                        and ett2.emp_id = ett.emp_id
	                      group by ett2.group_id, ett2.hos_id, ett2.emp_id)) ett
	      on he.group_id = ett.group_id
	     and he.hos_id = ett.hos_id
	     and he.emp_id = ett.emp_id
	     
	    left join (select ep.group_id, ep.hos_id, ep.emp_id, ep.level_code
	               from HR_EMP_PROMOTION ep
	              where ep.get_date =
	                    (select max(ep2.get_date)
	                       from HR_EMP_PROMOTION ep2
	                      where ep2.group_id = ep.group_id
	                        and ep2.hos_id = ep.hos_id
	                        and ep2.emp_id = ep.emp_id
	                      group by ep2.group_id, ep2.hos_id, ep2.emp_id)
	             
	             ) ep
	      on he.group_id = ep.group_id
	     and he.hos_id = ep.hos_id
	     and he.emp_id = ep.emp_id
		<where>                     
		emn.group_id = #{group_id,jdbcType=INTEGER}
		AND emn.hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="emp_id != null and emp_id != ''">
		AND emn.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND emn.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND emn.month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="emp_code != null and emp_code != ''">
		AND he.emp_code like '%'||#{emp_code}||'%'
		</if>
		<if test="emp_name != null and emp_name != ''">
		AND he.emp_name like '%'||#{emp_name}||'%'
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND he.dept_id = #{dept_id}
		</if>
		<if test="duty_code != null and duty_code != ''">
		AND hd.duty_code = #{duty_code}	
		</if>
		<if test="title_code != null and title_code != ''">
		AND ett.title_code = #{title_code}
		</if>
		<if test="level_code != null and level_code != ''">
		AND ep.level_code = #{level_code}
		</if>
		</where>   
		order by emn.year,emn.month
	</select>
	<select id="queryByCode" resultMap="hrEmpMonthNurse"  parameterType="java.util.Map" >
	
		 select a.group_id, a.hos_id, a.emp_id, a.year, a.month
	, a.morality, a.quality, a.safety, a.accessory, a.note,
  b.emp_name
from hr_emp_month_nurse a
left join hos_emp b on a.emp_id=b.emp_id and a.group_id=b.group_id and a.hos_id=b.hos_id
		WHERE 
		a.group_id = #{group_id,jdbcType=INTEGER}   and 
		a.hos_id = #{hos_id,jdbcType=INTEGER}   and 
		a.emp_id = #{emp_id,jdbcType=INTEGER}   and 
		a.year = #{year,jdbcType=VARCHAR}   and 
		a.month = #{month,jdbcType=VARCHAR} 
	
	</select>
	<select id="queryByUniqueness" resultMap="hrEmpMonthNurse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		morality,
		quality,
		safety,
		accessory,
		note
		FROM HR_EMP_MONTH_NURSE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="morality != null and morality != ''">
		AND morality = #{morality,jdbcType=INTEGER}
		</if>
		<if test="quality != null and quality != ''">
		AND quality = #{quality,jdbcType=INTEGER}
		</if>
		<if test="safety != null and safety != ''">
		AND safety = #{safety,jdbcType=INTEGER}
		</if>
		<if test="accessory != null and accessory != ''">
		AND accessory = #{accessory,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryExists" resultMap="hrEmpMonthNurse"  parameterType="java.util.Map" >
	
		SELECT 
		group_id,
		hos_id,
		emp_id,
		year,
		month,
		morality,
		quality,
		safety,
		accessory,
		note
		FROM HR_EMP_MONTH_NURSE 
		<where>                     
		<if test="group_id != null and group_id != ''">
		AND group_id = #{group_id,jdbcType=INTEGER}
		</if>
		<if test="hos_id != null and hos_id != ''">
		AND hos_id = #{hos_id,jdbcType=INTEGER}
		</if>
		<if test="emp_id != null and emp_id != ''">
		AND emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="morality != null and morality != ''">
		AND morality = #{morality,jdbcType=INTEGER}
		</if>
		<if test="quality != null and quality != ''">
		AND quality = #{quality,jdbcType=INTEGER}
		</if>
		<if test="safety != null and safety != ''">
		AND safety = #{safety,jdbcType=INTEGER}
		</if>
		<if test="accessory != null and accessory != ''">
		AND accessory = #{accessory,jdbcType=INTEGER}
		</if>
		<if test="note != null and note != ''">
		AND note = #{note,jdbcType=VARCHAR}
		</if>
		</where>   
		order by group_id asc
	</select>
	<select id="queryByPrint" parameterType="java.util.Map"  resultType="java.util.Map">
	
		SELECT 
		emn.group_id,
		emn.hos_id,
		emn.emp_id,
		he.emp_code,
		he.emp_name,
		emn.year,
		emn.month,
		emn.morality,
		emn.quality,
		emn.safety,
		emn.accessory,
		emn.note
		FROM HR_EMP_MONTH_NURSE  emn
		
		left join hos_emp he
		  on emn.group_id = he.group_id
		 and emn.hos_id = he.hos_id
		 and emn.emp_id = he.emp_id
		 
		left join (select hd.group_id, hd.hos_id, hd.emp_id, hd.duty_code
	               from HR_HOS_DUTY hd
	              where hd.engage_date =
	                    (select max(hd2.engage_date)
	                       from HR_HOS_DUTY hd2
	                      where hd2.group_id = hd.group_id
	                        and hd2.hos_id = hd.hos_id
	                        and hd2.emp_id = hd.emp_id
	                      group by hd2.group_id, hd2.hos_id, hd2.emp_id)) hd
	      on he.group_id = hd.group_id
	     and he.hos_id = hd.hos_id
	     and he.emp_id = hd.emp_id
	     
	     left join (select ett.group_id, ett.hos_id, ett.emp_id, ett.title_code
	               from HR_EMP_TECHNOLOGY_TITLE ett
	              where ett.get_date =
	                    (select max(ett2.get_date)
	                       from HR_EMP_TECHNOLOGY_TITLE ett2
	                      where ett2.group_id = ett.group_id
	                        and ett2.hos_id = ett.hos_id
	                        and ett2.emp_id = ett.emp_id
	                      group by ett2.group_id, ett2.hos_id, ett2.emp_id)) ett
	      on he.group_id = ett.group_id
	     and he.hos_id = ett.hos_id
	     and he.emp_id = ett.emp_id
	     
	    left join (select ep.group_id, ep.hos_id, ep.emp_id, ep.level_code
	               from HR_EMP_PROMOTION ep
	              where ep.get_date =
	                    (select max(ep2.get_date)
	                       from HR_EMP_PROMOTION ep2
	                      where ep2.group_id = ep.group_id
	                        and ep2.hos_id = ep.hos_id
	                        and ep2.emp_id = ep.emp_id
	                      group by ep2.group_id, ep2.hos_id, ep2.emp_id)
	             
	             ) ep
	      on he.group_id = ep.group_id
	     and he.hos_id = ep.hos_id
	     and he.emp_id = ep.emp_id
		<where>                     
		emn.group_id = #{group_id,jdbcType=INTEGER}
		AND emn.hos_id = #{hos_id,jdbcType=INTEGER}
		<if test="emp_id != null and emp_id != ''">
		AND emn.emp_id = #{emp_id,jdbcType=INTEGER}
		</if>
		<if test="year != null and year != ''">
		AND emn.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="month != null and month != ''">
		AND emn.month = #{month,jdbcType=VARCHAR}
		</if>
		<if test="emp_code != null and emp_code != ''">
		AND he.emp_code like '%'||#{emp_code}||'%'
		</if>
		<if test="emp_name != null and emp_name != ''">
		AND he.emp_name like '%'||#{emp_name}||'%'
		</if>
		<if test="dept_id != null and dept_id != ''">
		AND he.dept_no||'@'||he.dept_id = #{dept_id}
		</if>
		<if test="duty_code != null and duty_code != ''">
		AND hd.duty_code = #{duty_code}	
		</if>
		<if test="title_code != null and title_code != ''">
		AND ett.title_code = #{title_code}
		</if>
		<if test="level_code != null and level_code != ''">
		AND ep.level_code = #{level_code}
		</if>
		</where>   
		order by emn.year,emn.month
	</select>
</mapper>

