<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.hrp.hpm.dao.AphiEmpBonusAuditMapper">

	<resultMap id="empBonusAudit" type="com.chd.hrp.hpm.entity.AphiEmpBonusAudit">
		<result property="group_id" column="group_id" />
		<result property="hos_id" column="hos_id" />
		<result property="copy_code" column="copy_code" />
		<result property="acct_year" column="acct_year" />
		<result property="acct_month" column="acct_month" />
		<result property="is_audit" column="is_audit" />
		<result property="is_grant" column="is_grant" />
	</resultMap>


	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="addEmpBonusAudit" useGeneratedKeys="true">

		INSERT INTO aphi_emp_bonus_audit (
		group_id ,
		hos_id,
		copy_code ,
		acct_year ,
		acct_month ,
		is_audit ,
		is_grant
		) VALUES (
		#{group_id} ,
		#{hos_id},
		#{copy_code} ,
		#{acct_year} ,
		#{acct_month} ,
		#{is_audit} ,
		#{is_grant}
		)

	</insert>

	<update id="updateEmpBonusAudit" parameterType="java.util.Map">

		UPDATE aphi_emp_bonus_audit SET
		is_audit = #{is_audit} ,
		is_grant = #{is_grant}
		WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} AND
		copy_code = #{copy_code} and
		acct_year = #{acct_year} and
		acct_month = #{acct_month}

	</update>

	<update id="updateEmpBonusAuditData" parameterType="java.util.Map">

		UPDATE aphi_emp_bonus_audit SET
		is_grant = #{is_grant}
		WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} AND
		copy_code = #{copy_code} and
		acct_year = #{acct_year} and
		acct_month = #{acct_month}

	</update>


	<delete id="deleteEmpBonusAudit" parameterType="java.util.Map">

		DELETE FROM aphi_emp_bonus_audit WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} AND
		copy_code = #{copy_code} and
		acct_year = #{acct_year} and
		acct_month = #{acct_month}

	</delete>

	<delete id="deleteEmpBonusAuditById" parameterType="String">

		DELETE FROM aphi_emp_bonus_audit WHERE id=id

	</delete>

	<select id="queryEmpBonusAuditByCode" resultType="com.chd.hrp.hpm.entity.AphiEmpBonusAudit"
		parameterType="string">

		SELECT
		group_id,
		hos_id,
		copy_code,
		acct_year,
		acct_month,
		is_audit,
		is_grant
		FROM aphi_emp_bonus_audit
		WHERE
		group_id = #{group_id} and
		hos_id = #{hos_id} AND
		copy_code = #{copy_code} and
		acct_year = #{acct_year} and
		acct_month = #{acct_month} 
		<if test="item_code != null and item_code !=''">
			and	item_code =#{item_code}
		</if>
		

	</select>
	<select id="queryEmpBonusAudit" parameterType="java.util.Map"
		resultMap="empBonusAudit">

		SELECT
		group_id,
		hos_id,
		copy_code,
		acct_year,
		acct_month,
		is_audit,
		is_grant
		FROM aphi_emp_bonus_audit
		<where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND copy_code = #{copy_code}
			</if>
			<if test="acct_year != null and acct_year != ''">
				AND acct_year = #{acct_year}
			</if>
			<if test="acct_month != null and acct_month != ''">
				AND acct_month = #{acct_month}
			</if>
			<if test="is_audit != null and is_audit != ''">
				AND is_audit = #{is_audit}
			</if>
			<if test="is_grant != null and is_grant != ''">
				AND is_grant = #{is_grant}
			</if>
		</where>
		order by group_id asc
	</select>

	<select id="queryEmpBonusAuditData" parameterType="java.util.Map"
		resultMap="empBonusAudit">

		select aebd.bonus_money ,adbg.grant_money from aphi_emp ae left join
		aphi_dept_bonus_grant adbg on ae.group_id = adbg.group_id and
		ae.copy_code = adbg.copy_code and ae.hos_id = adbg.hos_id
		and ae.dept_code = adbg.dept_code left join aphi_emp_bonus_data aebd on
		ae.group_id = aebd.group_id and ae.copy_code = aebd.copy_code and
		ae.hos_id = aebd.hos_id
		and ae.emp_code= aebd.emp_code and adbg.acct_year = aebd.acct_year and
		adbg.acct_year = aebd.acct_month
		and aebd.bonus_money > adbg.grant_money
		<where>
			<if test="group_id != null and group_id != ''">
				AND aebd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and aebd.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND aebd.copy_code = #{copy_code}
			</if>
			<if test="acct_year != null and acct_year != ''">
				AND aebd.acct_year = #{acct_year}
			</if>
			<if test="acct_month != null and acct_month != ''">
				AND aebd.acct_month = #{acct_month}
			</if>
		</where>
		order by aebd.group_id asc
	</select>
	
	<delete id="deleteAccWagePayByYearMonth" parameterType="java.util.Map"> 
	
	delete from acc_wage_pay 
		where wage_code = #{wage_code}
		AND group_id = #{group_id}
		and hos_id = #{hos_id}
		AND copy_code = #{copy_code}
		AND acc_year = #{acct_year}
		AND acc_month = #{acct_month}
		<if test="list != null and list !=''">
			and
			<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
				 emp_id = #{item.emp_id}
				and emp_no = #{item.emp_no} 
			</foreach>
		</if>
	</delete>
	
	<select id="queryEmpBonusDataForWagePay" parameterType="java.util.Map" resultType="java.util.Map">

		with t1 as (select 
       aebd.group_id,
       aebd.hos_id,
       aebd.copy_code,
       aebd.acct_year,
       aebd.acct_month,
       <if test="sqlCase != null and sqlCase != ''">
				${sqlCase}
		</if>
       aed.emp_code,aebd.dept_id,aebd.dept_no
  from APHI_EMP_BONUS_DATA aebd
  
  <if test="para_value == 0">
	  left join aphi_emp_dict aed on aebd.group_id = aed.group_id and 
	  aebd.hos_id = aed.hos_id
	  and aebd.copy_code = aed.copy_code
	  and aebd.emp_id = aed.emp_id
	  and aebd.emp_no = aed.emp_no
  </if>
  
  <if test="para_value == 1">
	  left join V_APHI_EMP_DICT aed on aebd.group_id = aed.group_id and 
	  aebd.hos_id = aed.hos_id
	  and aebd.dept_id = aed.dept_id
	  and aebd.emp_id = aed.emp_id
	  and aebd.emp_no = aed.emp_no
  </if>
  
  		<where>
			<if test="group_id != null and group_id != ''">
				AND aebd.group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and aebd.hos_id = #{hos_id}
			</if>
			<if test="copy_code != null and copy_code != ''">
				AND aebd.copy_code = #{copy_code}
			</if>
			<if test="acct_year != null and acct_year != ''">
				AND aebd.acct_year = #{acct_year}
			</if>
			<if test="acct_month != null and acct_month != ''">
				AND aebd.acct_month = #{acct_month}
			</if>
			<if test="item_code != null and item_code != ''">
				AND aebd.item_code = #{item_code}
			</if>
			<if test="dept_id != null and dept_id != ''">
				AND aebd.dept_id = #{dept_id}
			</if>
			<if test="list !=null and list.size >0">
	     	 	AND 
	     	 	<foreach collection="list" index="index" item="item"  open="(" separator="OR" close=")">
				<if test="item.dept_id != null and item.dept_id != ''">
					 aebd.dept_id = #{item.dept_id} 
				</if>
				<if test="item.dept_no != null and item.dept_no != ''">
					AND aebd.dept_no = #{item.dept_no}  
				</if>
				<if test="item.item_codes != null and item.item_codes != ''">
					AND aebd.item_code = #{item.item_codes}  
				</if>
			</foreach>
	     	 </if>
		</where>
 group by 
       aebd.group_id,aebd.hos_id,aebd.copy_code,aebd.acct_year,aebd.acct_month,aed.emp_code,aebd.dept_id,aebd.dept_no),
       
 t2 as(
        select group_id,hos_id,emp_id,max(emp_no) as emp_no,emp_code from hos_emp_dict
        <where>
			<if test="group_id != null and group_id != ''">
				AND group_id = #{group_id}
			</if>
			<if test="hos_id != null and hos_id != ''">
				and hos_id = #{hos_id}
			</if>
		</where>
        group by group_id,hos_id,emp_code,emp_id
       )

 select t1.*,
        t2.emp_id,
        t2.emp_no,
        hed.kind_code,
        hek.kind_name,
        aea.pay_type_code,
        aep.pay_type_name,
        aea.station_code,
        hs.station_name,
        aea.duty_code,
        hd.duty_name,
        aea.sex,
        aea.id_number,
        '1' as state,
        '0' as pay_state
        
   from t1 t1
   left join t2 t2
     on t1.group_id = t2.group_id
    and t1.hos_id = t2.hos_id
    and t1.emp_code = t2.emp_code
   left join hos_emp_dict hed
     on t2.group_id = hed.group_id
    and t2.hos_id = hed.hos_id
    and t2.emp_id = hed.emp_id
    and t2.emp_no = hed.emp_no
   left join hos_emp_kind hek
     on t2.group_id = hek.group_id
    and t2.hos_id = hek.hos_id
    and hed.kind_code = hek.kind_code
   left join acc_emp_attr aea
     on t2.group_id = aea.group_id
    and t2.hos_id = aea.hos_id
    and t2.emp_id = aea.emp_id
   left join acc_emp_pay aep
     on t2.group_id = aep.group_id
    and t2.hos_id = aep.hos_id
    and aea.pay_type_code = aep.pay_type_code
   left join hos_station hs
     on t2.group_id = hs.group_id
    and t2.hos_id = hs.hos_id
    and aea.station_code = hs.station_code
   left join hos_duty hd
     on t2.group_id = hs.group_id
    and t2.hos_id = hs.hos_id
    and aea.duty_code = hd.duty_code

	</select>
	<insert id="addEmpBonusDataForWagePay"  parameterType="java.util.List" >

		 INSERT INTO ACC_WAGE_PAY (
        			pay_id,
                    group_id,hos_id,copy_code,wage_code,acc_year,acc_month,
                 	emp_id,emp_no,dept_id,dept_no,kind_code,kind_name,
			 		pay_type_code,pay_type_name,station_code,station_name,duty_code,duty_name,
			 		sex,id_number,user_id,create_date,state,
                    ${sql}
                    pay_state
			 
        ) 
        select ACC_WAGE_PAY_SEQ.nextval,a.* from (
		 <foreach collection="addList2" item="item" index="index" separator=" union all " >
        select
         		#{item.group_id,jdbcType = INTEGER}, #{item.hos_id,jdbcType = INTEGER},#{item.copy_code,jdbcType = VARCHAR},#{item.wage_code,jdbcType = VARCHAR},
				#{item.acct_year,jdbcType = VARCHAR},#{item.acct_month,jdbcType = VARCHAR},#{item.emp_id,jdbcType = INTEGER},#{item.emp_no,jdbcType = INTEGER},
			 	#{item.dept_ids,jdbcType = INTEGER},#{item.dept_nos,jdbcType = INTEGER},#{item.kind_code,jdbcType = VARCHAR},#{item.kind_name,jdbcType = VARCHAR},
			 	#{item.pay_type_code,jdbcType = VARCHAR},#{item.pay_type_name,jdbcType = VARCHAR},#{item.station_code,jdbcType = VARCHAR},
			 	#{item.station_name,jdbcType = VARCHAR},#{item.duty_code,jdbcType = VARCHAR},#{item.duty_name,jdbcType = VARCHAR},#{item.sex,jdbcType = VARCHAR},
			 	#{item.id_number,jdbcType = VARCHAR},#{item.user_id,jdbcType = INTEGER},#{item.create_date,jdbcType = DATE},
			 	#{item.state,jdbcType = INTEGER},
			 	${sqlValue}
			 	#{item.pay_state,jdbcType = INTEGER}
		
		 from dual 
		</foreach>
    ) a

	</insert>
	
	
	<!-- <update id="updateWageItem" parameterType="java.util.Map">
	
			UPDATE acc_wage_Pay  set
			${sqlItemValue}
			<where>                     
			group_id = #{group_id}
			AND hos_id = #{hos_id}
			AND copy_code = #{copy_code}
			AND wage_code = #{wage_code}
			</where>  			
	
	</update> -->
	
	<update id="updateBatchWage" parameterType="java.util.List">
		<foreach collection="addList" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE acc_wage_Pay  set
			${item.sqlWage}
			<where>                     
			group_id = #{item.group_id}
			AND hos_id = #{item.hos_id}
			AND copy_code = #{item.copy_code}
			AND wage_code = #{item.wage_code}
			and acc_year = #{item.acc_year}
			and acc_month = #{item.acc_month}
			and emp_id = #{item.emp_id}
			and emp_no = #{item.emp_no}
			<if test="item.dept_id !=null and item.dept_id !=''">
				and dept_id = #{item.dept_id}
			</if>
			</where>   
		
		</foreach>
		
	</update>
	
	<select id="queryWagePay"  parameterType="java.util.Map" resultType="java.util.Map">
		select * from acc_wage_pay awp 
		<where>
			   awp.group_id = #{group_id,jdbcType=INTEGER}
			  and awp.hos_id = #{hos_id,jdbcType=INTEGER}
			  and awp.copy_code = #{copy_code,jdbcType=VARCHAR}
			  and awp.wage_code = #{wage_code,jdbcType=VARCHAR}
			  and awp.acc_year = #{acct_year,jdbcType=VARCHAR}
			  and awp.acc_month = #{acct_month,jdbcType=VARCHAR}
			  <if test="dept_ids != null and dept_ids != ''">
				AND awp.dept_id = #{dept_ids,jdbcType=INTEGER}
			  </if>
			  <if test="dept_nos != null and dept_nos != ''">
				AND awp.dept_no = #{dept_nos,jdbcType=INTEGER}
			  </if>
			  <if test="emp_id != null and emp_id != ''">
				AND awp.emp_id = #{emp_id,jdbcType=INTEGER}
			  </if>
			  <if test="emp_no != null and emp_no != ''">
				AND awp.emp_no = #{emp_no,jdbcType=INTEGER}
			  </if>
	     	 <if test="list1 !=null and list1.size >0">
	     	 	AND 
	     	 	<foreach collection="list1" index="index" item="item"  open="(" separator="OR" close=")">
				<if test="item.dept_ids != null and item.dept_ids != ''">
					awp.dept_id = #{item.dept_ids} 
				</if>
				<if test="item.dept_no != null and item.dept_no != ''">
					AND awp.dept_no = #{item.dept_nos}  
				</if>
			</foreach>
	     	 </if>
		
		</where>
	
	</select>
	
	
	 <update id="updateBatchWagePay" parameterType="java.util.Map">
			UPDATE acc_wage_Pay  set
			${sqlWage}
			where                     
			group_id = #{group_id,jdbcType=INTEGER}
			AND hos_id = #{hos_id,jdbcType=INTEGER}
			AND copy_code = #{copy_code,jdbcType=VARCHAR}
			AND wage_code = #{wage_code,jdbcType=VARCHAR}
			and acc_year = #{acc_year,jdbcType=VARCHAR}
			and acc_month = #{acc_month,jdbcType=VARCHAR}
			and emp_id = #{emp_id,jdbcType=INTEGER}
			and emp_no = #{emp_no,jdbcType=INTEGER}
  			<if test="dept_id != null and dept_id != ''">
				AND dept_id = #{dept_id,jdbcType=INTEGER}
			</if>

	</update> 
	
	<update id="updateBatchWagePayList"  parameterType="java.util.List" >
	
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";" >
			UPDATE acc_wage_Pay 
			<trim prefix="SET"  suffixOverrides=",">
				${item.sqlWage}  
			</trim>
			<where>
				<if test="item.group_id != null and item.group_id != ''">
					group_id = #{item.group_id,jdbcType=INTEGER}
				</if>  
				<if test="item.hos_id != null and item.hos_id != ''">
					AND hos_id = #{item.hos_id,jdbcType=INTEGER}
				</if>  
				<if test="item.copy_code != null and item.copy_code != ''">
					AND copy_code = #{item.copy_code,jdbcType=VARCHAR}
				</if> 
				<if test="item.wage_code != null and item.wage_code != ''">
					AND wage_code = #{item.wage_code,jdbcType=VARCHAR}
				</if>  
				<if test="item.acct_year != null and item.acct_year != ''">
					AND acc_year = #{item.acct_year,jdbcType=VARCHAR}
				</if>  
				<if test="item.acct_month != null and item.acct_month != ''">
					AND acc_month = #{item.acct_month,jdbcType=VARCHAR}
				</if>  
				<if test="item.emp_id != null and item.emp_id != ''">
					AND emp_id = #{item.emp_id,jdbcType=INTEGER}
				</if>  
				<if test="item.emp_no != null and item.emp_no != ''">
					AND emp_no = #{item.emp_no,jdbcType=INTEGER}
				</if>  
				<if test="item.dept_ids != null and item.dept_ids != ''">
					AND dept_id = #{item.dept_ids,jdbcType=INTEGER}
				</if>
				 
			</where>
		
		</foreach>
	
	
	</update>

</mapper>

